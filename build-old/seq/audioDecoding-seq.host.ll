; ModuleID = 'build/seq/main.hpvm.ll'
source_filename = "src//main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.MIT_HRTF = type { %class.HRTF }
%class.HRTF = type { i32 (...)**, i32, i32 }
%class.CAmbisonicSource = type { %class.CAmbisonicBase.base, %"class.std::vector.0", %"class.std::vector.0", %struct.PolarPoint, float }
%class.CAmbisonicBase.base = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8 }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" = type { float*, float*, float* }
%struct.PolarPoint = type { float, float, float }
%class.CBFormat = type { %class.CAmbisonicBase.base, i32, i32, %"class.std::vector.0", %"class.std::unique_ptr" }
%"class.std::unique_ptr" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.6" }
%"struct.std::_Head_base.6" = type { float** }
%class.CAmbisonicEncoder = type { %class.CAmbisonicSource }
%class.CAmbisonicEncoderDist = type { %class.CAmbisonicEncoder, i32, float, i32, i32, float*, i32, i32, i32, float, float, float }
%class.CAmbisonicProcessor = type { %class.CAmbisonicBase.base, %class.Orientation, float*, %struct.kiss_fftr_state*, %struct.kiss_fftr_state*, float*, float**, i32, i32, i32, i32, i32, float, %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.Orientation = type { float, float, float, float, float, float }
%struct.kiss_fftr_state = type opaque
%struct.kiss_fft_cpx = type { float, float }
%class.CAmbisonicSpeaker = type { %class.CAmbisonicSource }
%class.CAmbisonicDecoder = type { %class.CAmbisonicBase.base, i32, i32, %class.CAmbisonicSpeaker* }
%class.CAmbisonicZoomer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", float, float, float, float }
%"class.std::unique_ptr.12" = type { %"class.std::__uniq_ptr_impl.13" }
%"class.std::__uniq_ptr_impl.13" = type { %"class.std::tuple.14" }
%"class.std::tuple.14" = type { %"struct.std::_Tuple_impl.15" }
%"struct.std::_Tuple_impl.15" = type { %"struct.std::_Head_base.20" }
%"struct.std::_Head_base.20" = type { float* }
%class.CAmbisonicBinauralizer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, i32, i32, i32, i32, float, i32, %"class.std::unique_ptr.21", %"class.std::unique_ptr.21", [2 x %"class.std::vector.28"], %"class.std::unique_ptr.33", %"class.std::vector.0", %"class.std::vector.42", %"class.std::vector.0", [2 x %"class.std::vector.0"] }
%"class.std::unique_ptr.21" = type { %"class.std::__uniq_ptr_impl.22" }
%"class.std::__uniq_ptr_impl.22" = type { %"class.std::tuple.23" }
%"class.std::tuple.23" = type { %"struct.std::_Tuple_impl.24" }
%"struct.std::_Tuple_impl.24" = type { %"struct.std::_Tuple_impl.25", %"struct.std::_Head_base.27" }
%"struct.std::_Tuple_impl.25" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { void (i8*)* }
%"struct.std::_Head_base.27" = type { %struct.kiss_fftr_state* }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"* }
%"class.std::unique_ptr.33" = type { %"class.std::__uniq_ptr_impl.34" }
%"class.std::__uniq_ptr_impl.34" = type { %"class.std::tuple.35" }
%"class.std::tuple.35" = type { %"struct.std::_Tuple_impl.36" }
%"struct.std::_Tuple_impl.36" = type { %"struct.std::_Head_base.41" }
%"struct.std::_Head_base.41" = type { %struct.kiss_fft_cpx* }
%"class.std::vector.42" = type { %"struct.std::_Vector_base.43" }
%"struct.std::_Vector_base.43" = type { %"struct.std::_Vector_base<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.ILLIXR_AUDIO::Sound" = type { %"class.std::basic_fstream"*, [1024 x float], %class.CBFormat*, %class.CAmbisonicEncoderDist*, %struct.PolarPoint, float }
%"class.std::basic_fstream" = type { %"class.std::basic_iostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon.50 }
%union.anon.50 = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.ILLIXR_AUDIO::ABAudio" = type { i32, %"class.std::vector.51"*, %"class.std::basic_ofstream"*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicProcessor*, %class.CAmbisonicZoomer* }
%"class.std::vector.51" = type { %"struct.std::_Vector_base.52" }
%"struct.std::_Vector_base.52" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" = type { %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%class.CAmbisonicBase = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.ILLIXR_AUDIO::WAVHeader_t" = type { i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, i32 }
%struct.out.rotatorSet_fxp = type <{ i64 }>
%struct.out.wrapperRotatorSet_fxp = type <{ i64 }>
%struct.out.zoomSet_fxp = type <{ i64 }>
%struct.out.wrapperZoomSet_fxp = type <{ i64 }>
%struct.out.psychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.wrapperPsychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.rotateOrder1_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder1_fxp = type <{ i64 }>
%struct.out.rotateOrder2_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder2_fxp = type <{ i64 }>
%struct.out.rotateOrder3_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder3_fxp = type <{ i64 }>
%struct.out.zoomProcess_fxp = type <{ i64, i64 }>
%struct.out.wrapperZoomProcess_fxp = type <{ i64, i64 }>
%struct.out.setAndFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_left_fxp = type <{ i64 }>
%struct.out.setAndFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_right_fxp = type <{ i64 }>
%struct.out.FIR_left_fxp = type <{ i64 }>
%struct.out.wrapperFIR_left_fxp = type <{ i64 }>
%struct.out.FIR_right_fxp = type <{ i64 }>
%struct.out.wrapperFIR_right_fxp = type <{ i64 }>
%struct.out.IFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_left_fxp = type <{ i64 }>
%struct.out.IFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_right_fxp = type <{ i64 }>
%struct.out.overlap_left_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_left_fxp = type <{ i64 }>
%struct.out.overlap_right_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_right_fxp = type <{ i64 }>
%emptyStruct = type <{}>

$_ZN11OrientationC2Efff = comdat any

$__clang_call_terminate = comdat any

$_ZN8CBFormatD2Ev = comdat any

$_ZN8MIT_HRTFD0Ev = comdat any

$_ZN14CAmbisonicBaseD2Ev = comdat any

$_ZN14CAmbisonicBaseD0Ev = comdat any

$_ZN16CAmbisonicSourceD2Ev = comdat any

$_ZN16CAmbisonicSourceD0Ev = comdat any

$_ZN8CBFormatD0Ev = comdat any

$_ZN16CAmbisonicZoomerD2Ev = comdat any

$_ZN16CAmbisonicZoomerD0Ev = comdat any

$_ZN22CAmbisonicBinauralizerD2Ev = comdat any

$_ZN22CAmbisonicBinauralizerD0Ev = comdat any

$_ZN4HRTFD2Ev = comdat any

$_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf = comdat any

$_ZNSt6vectorIfSaIfEE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_ = comdat any

$_ZNSt6vectorIS_IfSaIfEESaIS1_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm = comdat any

$_ZTS4HRTF = comdat any

$_ZTI4HRTF = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV8MIT_HRTF = unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MIT_HRTF to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD2Ev to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD0Ev to i8*), i8* bitcast (i1 (%class.MIT_HRTF*, float, float, float**)* @_ZN8MIT_HRTF3getEffPPf to i8*)] }, align 8
@_ZTV14CAmbisonicBase = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV16CAmbisonicSource = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSource*, i32, i1, i32)* @_ZN16CAmbisonicSource9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV8CBFormat = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8CBFormat to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD2Ev to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD0Ev to i8*), i8* bitcast (i1 (%class.CBFormat*, i32, i1, i32)* @_ZN8CBFormat9ConfigureEjbj to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat5ResetEv to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat7RefreshEv to i8*)] }, align 8
@_ZTV17CAmbisonicEncoder = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoder*, i32, i1, i32)* @_ZN17CAmbisonicEncoder9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoder7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV21CAmbisonicEncoderDist = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI21CAmbisonicEncoderDist to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)* @_ZN21CAmbisonicEncoderDist9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV19CAmbisonicProcessor = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19CAmbisonicProcessor to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor7RefreshEv to i8*)] }, align 8
@_ZL14first_order_3D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -10, i16 -13, i16 -17, i16 -21, i16 -25, i16 -30, i16 -35, i16 -41, i16 -47, i16 -54, i16 -60, i16 -67, i16 -75, i16 -82, i16 -90, i16 -97, i16 -105, i16 -113, i16 -120, i16 -127, i16 -134, i16 -141, i16 -147, i16 -153, i16 -158, i16 -163, i16 -167, i16 -170, i16 -173, i16 -175, i16 -176, i16 23040, i16 -176, i16 -175, i16 -173, i16 -170, i16 -167, i16 -163, i16 -158, i16 -153, i16 -147, i16 -141, i16 -134, i16 -127, i16 -120, i16 -113, i16 -105, i16 -97, i16 -90, i16 -82, i16 -75, i16 -67, i16 -60, i16 -54, i16 -47, i16 -41, i16 -35, i16 -30, i16 -25, i16 -21, i16 -17, i16 -13, i16 -10, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 5, i16 7, i16 9, i16 11, i16 14, i16 16, i16 19, i16 23, i16 26, i16 30, i16 34, i16 38, i16 42, i16 46, i16 51, i16 55, i16 60, i16 64, i16 68, i16 73, i16 77, i16 80, i16 84, i16 87, i16 90, i16 93, i16 95, i16 97, i16 99, i16 100, i16 101, i16 13438, i16 101, i16 100, i16 99, i16 97, i16 95, i16 93, i16 90, i16 87, i16 84, i16 80, i16 77, i16 73, i16 68, i16 64, i16 60, i16 55, i16 51, i16 46, i16 42, i16 38, i16 34, i16 30, i16 26, i16 23, i16 19, i16 16, i16 14, i16 11, i16 9, i16 7, i16 5, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_3D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -5, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -5, i16 -3, i16 -1, i16 2, i16 6, i16 10, i16 15, i16 21, i16 26, i16 32, i16 38, i16 44, i16 49, i16 53, i16 55, i16 56, i16 54, i16 50, i16 42, i16 32, i16 19, i16 2, i16 -19, i16 -43, i16 -70, i16 -100, i16 -133, i16 -167, i16 -203, i16 -241, i16 -278, i16 -315, i16 -350, i16 -384, i16 -414, i16 -442, i16 -465, i16 -484, i16 -497, i16 -506, i16 25438, i16 -506, i16 -497, i16 -484, i16 -465, i16 -442, i16 -414, i16 -384, i16 -350, i16 -315, i16 -278, i16 -241, i16 -203, i16 -167, i16 -133, i16 -100, i16 -70, i16 -43, i16 -19, i16 2, i16 19, i16 32, i16 42, i16 50, i16 54, i16 56, i16 55, i16 53, i16 49, i16 44, i16 38, i16 32, i16 26, i16 21, i16 15, i16 10, i16 6, i16 2, i16 -1, i16 -3, i16 -5, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -5], [101 x i16] [i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2, i16 -1, i16 0, i16 2, i16 4, i16 6, i16 8, i16 10, i16 12, i16 15, i16 17, i16 19, i16 20, i16 21, i16 21, i16 21, i16 19, i16 16, i16 12, i16 7, i16 0, i16 -8, i16 -17, i16 -27, i16 -39, i16 -52, i16 -65, i16 -79, i16 -94, i16 -108, i16 -123, i16 -136, i16 -149, i16 -161, i16 -172, i16 -181, i16 -188, i16 -194, i16 -197, i16 19884, i16 -197, i16 -194, i16 -188, i16 -181, i16 -172, i16 -161, i16 -149, i16 -136, i16 -123, i16 -108, i16 -94, i16 -79, i16 -65, i16 -52, i16 -39, i16 -27, i16 -17, i16 -8, i16 0, i16 7, i16 12, i16 16, i16 19, i16 21, i16 21, i16 21, i16 20, i16 19, i16 17, i16 15, i16 12, i16 10, i16 8, i16 6, i16 4, i16 2, i16 0, i16 -1, i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2], [101 x i16] [i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -14, i16 -17, i16 -21, i16 -25, i16 -28, i16 -31, i16 -34, i16 -35, i16 -36, i16 -35, i16 -32, i16 -27, i16 -21, i16 -12, i16 -2, i16 11, i16 26, i16 43, i16 62, i16 82, i16 104, i16 127, i16 150, i16 173, i16 196, i16 219, i16 240, i16 259, i16 276, i16 290, i16 302, i16 311, i16 316, i16 10659, i16 316, i16 311, i16 302, i16 290, i16 276, i16 259, i16 240, i16 219, i16 196, i16 173, i16 150, i16 127, i16 104, i16 82, i16 62, i16 43, i16 26, i16 11, i16 -2, i16 -12, i16 -21, i16 -27, i16 -32, i16 -35, i16 -36, i16 -35, i16 -34, i16 -31, i16 -28, i16 -25, i16 -21, i16 -17, i16 -14, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2]], align 16
@_ZL14first_order_2D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -7, i16 -9, i16 -10, i16 -13, i16 -15, i16 -18, i16 -21, i16 -24, i16 -27, i16 -30, i16 -34, i16 -37, i16 -41, i16 -45, i16 -49, i16 -52, i16 -56, i16 -60, i16 -63, i16 -67, i16 -70, i16 -73, i16 -76, i16 -79, i16 -81, i16 -83, i16 -85, i16 -86, i16 -87, i16 -88, i16 19968, i16 -88, i16 -87, i16 -86, i16 -85, i16 -83, i16 -81, i16 -79, i16 -76, i16 -73, i16 -70, i16 -67, i16 -63, i16 -60, i16 -56, i16 -52, i16 -49, i16 -45, i16 -41, i16 -37, i16 -34, i16 -30, i16 -27, i16 -24, i16 -21, i16 -18, i16 -15, i16 -13, i16 -10, i16 -9, i16 -7, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 4, i16 5, i16 7, i16 8, i16 10, i16 12, i16 15, i16 17, i16 20, i16 23, i16 26, i16 29, i16 32, i16 35, i16 39, i16 42, i16 46, i16 49, i16 52, i16 55, i16 58, i16 61, i16 64, i16 67, i16 69, i16 71, i16 73, i16 74, i16 76, i16 76, i16 77, i16 14259, i16 77, i16 76, i16 76, i16 74, i16 73, i16 71, i16 69, i16 67, i16 64, i16 61, i16 58, i16 55, i16 52, i16 49, i16 46, i16 42, i16 39, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 17, i16 15, i16 12, i16 10, i16 8, i16 7, i16 5, i16 4, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_2D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -3, i16 -3, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -2, i16 -1, i16 1, i16 3, i16 5, i16 7, i16 10, i16 13, i16 16, i16 19, i16 22, i16 24, i16 26, i16 27, i16 28, i16 27, i16 25, i16 21, i16 16, i16 9, i16 1, i16 -10, i16 -22, i16 -35, i16 -50, i16 -67, i16 -84, i16 -102, i16 -121, i16 -139, i16 -158, i16 -176, i16 -192, i16 -208, i16 -222, i16 -233, i16 -243, i16 -249, i16 -254, i16 20905, i16 -254, i16 -249, i16 -243, i16 -233, i16 -222, i16 -208, i16 -192, i16 -176, i16 -158, i16 -139, i16 -121, i16 -102, i16 -84, i16 -67, i16 -50, i16 -35, i16 -22, i16 -10, i16 1, i16 9, i16 16, i16 21, i16 25, i16 27, i16 28, i16 27, i16 26, i16 24, i16 22, i16 19, i16 16, i16 13, i16 10, i16 7, i16 5, i16 3, i16 1, i16 -1, i16 -2, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -3, i16 -3], [101 x i16] [i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 10, i16 10, i16 11, i16 11, i16 11, i16 10, i16 8, i16 6, i16 3, i16 0, i16 -4, i16 -9, i16 -15, i16 -21, i16 -28, i16 -35, i16 -42, i16 -50, i16 -58, i16 -65, i16 -72, i16 -79, i16 -86, i16 -91, i16 -96, i16 -100, i16 -103, i16 -104, i16 18220, i16 -104, i16 -103, i16 -100, i16 -96, i16 -91, i16 -86, i16 -79, i16 -72, i16 -65, i16 -58, i16 -50, i16 -42, i16 -35, i16 -28, i16 -21, i16 -15, i16 -9, i16 -4, i16 0, i16 3, i16 6, i16 8, i16 10, i16 11, i16 11, i16 11, i16 10, i16 10, i16 9, i16 8, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1], [101 x i16] [i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -17, i16 -20, i16 -24, i16 -27, i16 -30, i16 -33, i16 -34, i16 -34, i16 -33, i16 -31, i16 -26, i16 -20, i16 -12, i16 -2, i16 11, i16 25, i16 41, i16 59, i16 79, i16 100, i16 122, i16 144, i16 166, i16 189, i16 210, i16 230, i16 249, i16 265, i16 279, i16 290, i16 298, i16 303, i16 10885, i16 303, i16 298, i16 290, i16 279, i16 265, i16 249, i16 230, i16 210, i16 189, i16 166, i16 144, i16 122, i16 100, i16 79, i16 59, i16 41, i16 25, i16 11, i16 -2, i16 -12, i16 -20, i16 -26, i16 -31, i16 -33, i16 -34, i16 -34, i16 -33, i16 -30, i16 -27, i16 -24, i16 -20, i16 -17, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2]], align 16
@_ZL14third_order_2D = internal unnamed_addr constant [4 x [101 x i16]] [[101 x i16] [i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 4, i16 3, i16 2, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -16, i16 -18, i16 -20, i16 -20, i16 -18, i16 -15, i16 -10, i16 -3, i16 6, i16 16, i16 26, i16 37, i16 47, i16 56, i16 62, i16 64, i16 63, i16 57, i16 45, i16 27, i16 3, i16 -26, i16 -60, i16 -98, i16 -140, i16 -183, i16 -226, i16 -268, i16 -307, i16 -342, i16 -370, i16 -391, i16 -404, i16 21262, i16 -404, i16 -391, i16 -370, i16 -342, i16 -307, i16 -268, i16 -226, i16 -183, i16 -140, i16 -98, i16 -60, i16 -26, i16 3, i16 27, i16 45, i16 57, i16 63, i16 64, i16 62, i16 56, i16 47, i16 37, i16 26, i16 16, i16 6, i16 -3, i16 -10, i16 -15, i16 -18, i16 -20, i16 -20, i16 -18, i16 -16, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 2, i16 3, i16 4, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0], [101 x i16] [i16 0, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -9, i16 -11, i16 -13, i16 -14, i16 -14, i16 -13, i16 -10, i16 -7, i16 -2, i16 4, i16 10, i16 18, i16 25, i16 32, i16 38, i16 42, i16 44, i16 43, i16 39, i16 30, i16 18, i16 2, i16 -18, i16 -41, i16 -68, i16 -96, i16 -126, i16 -155, i16 -184, i16 -211, i16 -234, i16 -254, i16 -268, i16 -277, i16 19741, i16 -277, i16 -268, i16 -254, i16 -234, i16 -211, i16 -184, i16 -155, i16 -126, i16 -96, i16 -68, i16 -41, i16 -18, i16 2, i16 18, i16 30, i16 39, i16 43, i16 44, i16 42, i16 38, i16 32, i16 25, i16 18, i16 10, i16 4, i16 -2, i16 -7, i16 -10, i16 -13, i16 -14, i16 -14, i16 -13, i16 -11, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 0], [101 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 1, i16 0, i16 -2, i16 -4, i16 -6, i16 -8, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -6, i16 -1, i16 5, i16 12, i16 20, i16 29, i16 38, i16 47, i16 56, i16 64, i16 71, i16 77, i16 82, i16 84, i16 15409, i16 84, i16 82, i16 77, i16 71, i16 64, i16 56, i16 47, i16 38, i16 29, i16 20, i16 12, i16 5, i16 -1, i16 -6, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -8, i16 -6, i16 -4, i16 -2, i16 0, i16 1, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 20, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -97, i16 -101, i16 -99, i16 -89, i16 -71, i16 -43, i16 -7, i16 39, i16 92, i16 151, i16 215, i16 282, i16 350, i16 415, i16 475, i16 528, i16 572, i16 605, i16 625, i16 8926, i16 625, i16 605, i16 572, i16 528, i16 475, i16 415, i16 350, i16 282, i16 215, i16 151, i16 92, i16 39, i16 -7, i16 -43, i16 -71, i16 -89, i16 -99, i16 -101, i16 -97, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 20, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2]], align 16
@_ZTV17CAmbisonicSpeaker = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicSpeaker to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)* @_ZN17CAmbisonicSpeaker9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeaker7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV17CAmbisonicDecoder = unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicDecoder to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder7RefreshEv to i8*), i8* bitcast (float (%class.CAmbisonicDecoder*, i32, i32)* @_ZN17CAmbisonicDecoder14GetCoefficientEjj to i8*)] }, align 8
@_ZTV16CAmbisonicZoomer = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicZoomer to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicZoomer*, i32, i1, i32)* @_ZN16CAmbisonicZoomer9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer7RefreshEv to i8*)] }, align 8
@_ZTV22CAmbisonicBinauralizer = unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22CAmbisonicBinauralizer to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer7RefreshEv to i8*), i8* bitcast (i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)* @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv to i8*)] }, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"Getting first order cube\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Getting second/third order dodecahedron\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"samples/lectureSample.wav\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"samples/radioMusicSample.wav\00", align 1
@_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ14rotatorSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ11zoomSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@.str.5 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c" <number of size 1024 blocks to process> \00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"<optional: encode/decode>\0A\00", align 1
@.str.8 = private unnamed_addr constant [122 x i8] c"Note: If you want to hear the output sound, limit the process sample blocks so that the output is not longer than input!\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"output.wav\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS8MIT_HRTF = constant [10 x i8] c"8MIT_HRTF\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS4HRTF = linkonce_odr constant [6 x i8] c"4HRTF\00", comdat, align 1
@_ZTI4HRTF = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZTS4HRTF, i32 0, i32 0) }, comdat, align 8
@_ZTI8MIT_HRTF = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8MIT_HRTF, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*) }, align 8
@_ZTS14CAmbisonicBase = constant [17 x i8] c"14CAmbisonicBase\00", align 1
@_ZTI14CAmbisonicBase = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14CAmbisonicBase, i32 0, i32 0) }, align 8
@_ZTS16CAmbisonicSource = constant [19 x i8] c"16CAmbisonicSource\00", align 1
@_ZTI16CAmbisonicSource = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicSource, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS8CBFormat = constant [10 x i8] c"8CBFormat\00", align 1
@_ZTI8CBFormat = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8CBFormat, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicEncoder = constant [20 x i8] c"17CAmbisonicEncoder\00", align 1
@_ZTI17CAmbisonicEncoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicEncoder, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS21CAmbisonicEncoderDist = constant [24 x i8] c"21CAmbisonicEncoderDist\00", align 1
@_ZTI21CAmbisonicEncoderDist = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS21CAmbisonicEncoderDist, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*) }, align 8
@_ZTS19CAmbisonicProcessor = constant [22 x i8] c"19CAmbisonicProcessor\00", align 1
@_ZTI19CAmbisonicProcessor = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS19CAmbisonicProcessor, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicSpeaker = constant [20 x i8] c"17CAmbisonicSpeaker\00", align 1
@_ZTI17CAmbisonicSpeaker = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicSpeaker, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS17CAmbisonicDecoder = constant [20 x i8] c"17CAmbisonicDecoder\00", align 1
@_ZTI17CAmbisonicDecoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicDecoder, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS16CAmbisonicZoomer = constant [19 x i8] c"16CAmbisonicZoomer\00", align 1
@_ZTI16CAmbisonicZoomer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicZoomer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS22CAmbisonicBinauralizer = constant [25 x i8] c"22CAmbisonicBinauralizer\00", align 1
@_ZTI22CAmbisonicBinauralizer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22CAmbisonicBinauralizer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZL14third_order_3D = internal unnamed_addr constant <{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }> <{ [101 x i16] [i16 1, i16 3, i16 4, i16 5, i16 6, i16 8, i16 8, i16 8, i16 8, i16 7, i16 5, i16 1, i16 -3, i16 -8, i16 -15, i16 -21, i16 -28, i16 -34, i16 -38, i16 -41, i16 -41, i16 -38, i16 -31, i16 -20, i16 -5, i16 13, i16 33, i16 56, i16 78, i16 99, i16 117, i16 130, i16 136, i16 133, i16 120, i16 95, i16 57, i16 8, i16 -54, i16 -126, i16 -206, i16 -294, i16 -384, i16 -476, i16 -564, i16 -646, i16 -718, i16 -778, i16 -823, i16 -850, i16 26604, i16 -850, i16 -823, i16 -778, i16 -718, i16 -646, i16 -564, i16 -476, i16 -384, i16 -294, i16 -206, i16 -126, i16 -54, i16 8, i16 57, i16 95, i16 120, i16 133, i16 136, i16 130, i16 117, i16 99, i16 78, i16 56, i16 33, i16 13, i16 -5, i16 -20, i16 -31, i16 -38, i16 -41, i16 -41, i16 -38, i16 -34, i16 -28, i16 -21, i16 -15, i16 -8, i16 -3, i16 1, i16 5, i16 7, i16 8, i16 8, i16 8, i16 8, i16 6, i16 5, i16 4, i16 3, i16 1], [101 x i16] [i16 1, i16 2, i16 2, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 1, i16 -2, i16 -6, i16 -10, i16 -14, i16 -18, i16 -22, i16 -25, i16 -27, i16 -27, i16 -25, i16 -20, i16 -13, i16 -4, i16 8, i16 22, i16 36, i16 51, i16 65, i16 77, i16 85, i16 89, i16 87, i16 78, i16 62, i16 37, i16 5, i16 -35, i16 -82, i16 -135, i16 -192, i16 -252, i16 -311, i16 -369, i16 -423, i16 -470, i16 -509, i16 -538, i16 -556, i16 23082, i16 -556, i16 -538, i16 -509, i16 -470, i16 -423, i16 -369, i16 -311, i16 -252, i16 -192, i16 -135, i16 -82, i16 -35, i16 5, i16 37, i16 62, i16 78, i16 87, i16 89, i16 85, i16 77, i16 65, i16 51, i16 36, i16 22, i16 8, i16 -4, i16 -13, i16 -20, i16 -25, i16 -27, i16 -27, i16 -25, i16 -22, i16 -18, i16 -14, i16 -10, i16 -6, i16 -2, i16 1, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 2, i16 2, i16 1], <{ [89 x i16], [12 x i16] }> <{ [89 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 1, i16 0, i16 -2, i16 -5, i16 -8, i16 -11, i16 -14, i16 -17, i16 -20, i16 -23, i16 -25, i16 -27, i16 -29, i16 -30, i16 16773, i16 -30, i16 -29, i16 -27, i16 -25, i16 -23, i16 -20, i16 -17, i16 -14, i16 -11, i16 -8, i16 -5, i16 -2, i16 0, i16 1, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [12 x i16] zeroinitializer }>, [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 19, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -96, i16 -101, i16 -98, i16 -88, i16 -70, i16 -43, i16 -7, i16 38, i16 91, i16 150, i16 214, i16 280, i16 347, i16 412, i16 472, i16 525, i16 568, i16 601, i16 621, i16 8977, i16 621, i16 601, i16 568, i16 525, i16 472, i16 412, i16 347, i16 280, i16 214, i16 150, i16 91, i16 38, i16 -7, i16 -43, i16 -70, i16 -88, i16 -98, i16 -101, i16 -96, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 19, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2] }>, align 16
@.str.11 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]

@_ZN8MIT_HRTFC1Ej = unnamed_addr alias void (%class.MIT_HRTF*, i32), void (%class.MIT_HRTF*, i32)* @_ZN8MIT_HRTFC2Ej
@_ZN16CAmbisonicSourceC1Ev = unnamed_addr alias void (%class.CAmbisonicSource*), void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceC2Ev
@_ZN8CBFormatC1Ev = unnamed_addr alias void (%class.CBFormat*), void (%class.CBFormat*)* @_ZN8CBFormatC2Ev
@_ZN17CAmbisonicEncoderC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderC2Ev
@_ZN17CAmbisonicEncoderD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev
@_ZN21CAmbisonicEncoderDistC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistC2Ev
@_ZN21CAmbisonicEncoderDistD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev
@_ZN19CAmbisonicProcessorC1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorC2Ev
@_ZN19CAmbisonicProcessorD1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev
@_ZN17CAmbisonicSpeakerC1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerC2Ev
@_ZN17CAmbisonicSpeakerD1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev
@_ZN17CAmbisonicDecoderC1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderC2Ev
@_ZN17CAmbisonicDecoderD1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev
@_ZN16CAmbisonicZoomerC1Ev = unnamed_addr alias void (%class.CAmbisonicZoomer*), void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerC2Ev
@_ZN22CAmbisonicBinauralizerC1Ev = unnamed_addr alias void (%class.CAmbisonicBinauralizer*), void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerC2Ev
@_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1), void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1)* @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
@_ZN12ILLIXR_AUDIO5SoundD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*), void (%"class.ILLIXR_AUDIO::Sound"*)* @_ZN12ILLIXR_AUDIO5SoundD2Ev
@_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32), void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32)* @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
@_ZN12ILLIXR_AUDIO7ABAudioD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*), void (%"class.ILLIXR_AUDIO::ABAudio"*)* @_ZN12ILLIXR_AUDIO7ABAudioD2Ev

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: uwtable
define void @_ZN8MIT_HRTFC2Ej(%class.MIT_HRTF* nocapture %this, i32 %i_sampleRate) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 0
  %i_sampleRate2.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  store i32 %i_sampleRate, i32* %i_sampleRate2.i, align 8, !tbaa !34
  %i_len.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  store i32 0, i32* %i_len.i, align 4, !tbaa !39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %call = tail call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %i_sampleRate)
  store i32 %call, i32* %i_len.i, align 4, !tbaa !39
  ret void
}

declare i32 @mit_hrtf_availability(i32, i32, i32) local_unnamed_addr #0

declare i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define zeroext i1 @_ZN8MIT_HRTF3getEffPPf(%class.MIT_HRTF* nocapture readonly %this, float %f_azimuth, float %f_elevation, float** nocapture readonly %pfHRTF) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %nAzimuth = alloca i32, align 4
  %nElevation = alloca i32, align 4
  %0 = bitcast i32* %nAzimuth to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24
  %sub = fsub float -0.000000e+00, %f_azimuth
  %call = tail call float @_Z16RadiansToDegreesf(float %sub)
  %conv = fptosi float %call to i32
  %cmp = icmp sgt i32 %conv, 180
  %sub2 = add nsw i32 %conv, -360
  %spec.select = select i1 %cmp, i32 %sub2, i32 %conv
  store i32 %spec.select, i32* %nAzimuth, align 4, !tbaa !42
  %1 = bitcast i32* %nElevation to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #24
  %call3 = tail call float @_Z16RadiansToDegreesf(float %f_elevation)
  %conv4 = fptosi float %call3 to i32
  store i32 %conv4, i32* %nElevation, align 4, !tbaa !42
  %i_len = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  %2 = load i32, i32* %i_len, align 4, !tbaa !39
  %conv5 = zext i32 %2 to i64
  %cmp.i.i.i.i = icmp eq i32 %2, 0
  br i1 %cmp.i.i.i.i, label %invoke.cont10, label %cond.true.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %entry
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv5, 1
  %call2.i.i.i.i3.i.i71 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i)
          to label %invoke.cont unwind label %ehcleanup.thread

invoke.cont:                                      ; preds = %cond.true.i.i.i.i
  %3 = bitcast i8* %call2.i.i.i.i3.i.i71 to i16*
  %4 = shl nuw nsw i64 %conv5, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i71, i8 0, i64 %4, i1 false)
  %.pr = load i32, i32* %i_len, align 4, !tbaa !39
  %conv7 = zext i32 %.pr to i64
  %cmp.i.i.i.i76 = icmp eq i32 %.pr, 0
  br i1 %cmp.i.i.i.i76, label %invoke.cont10, label %cond.true.i.i.i.i77

cond.true.i.i.i.i77:                              ; preds = %invoke.cont
  %mul.i.i.i.i.i.i78 = shl nuw nsw i64 %conv7, 1
  %call2.i.i.i.i3.i.i88 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i78)
          to label %for.body.i.i.preheader.i.i.i.i.i85 unwind label %_ZNSt6vectorIsSaIsEED2Ev.exit95

for.body.i.i.preheader.i.i.i.i.i85:               ; preds = %cond.true.i.i.i.i77
  %5 = bitcast i8* %call2.i.i.i.i3.i.i88 to i16*
  %6 = shl nuw nsw i64 %conv7, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i88, i8 0, i64 %6, i1 false)
  br label %invoke.cont10

invoke.cont10:                                    ; preds = %for.body.i.i.preheader.i.i.i.i.i85, %invoke.cont, %entry
  %7 = phi i16* [ %5, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %8 = phi i8* [ %call2.i.i.i.i3.i.i88, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %9 = phi i16* [ %3, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %3, %invoke.cont ], [ null, %entry ]
  %10 = phi i8* [ %call2.i.i.i.i3.i.i71, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %call2.i.i.i.i3.i.i71, %invoke.cont ], [ null, %entry ]
  %i_sampleRate = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  %11 = load i32, i32* %i_sampleRate, align 8, !tbaa !34
  %call19 = invoke i32 @mit_hrtf_get(i32* nonnull %nAzimuth, i32* nonnull %nElevation, i32 %11, i16* %9, i16* %7)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont10
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %invoke.cont18
  %12 = load i32, i32* %i_len, align 4, !tbaa !39
  %cmp24104 = icmp eq i32 %12, 0
  br i1 %cmp24104, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = load float*, float** %pfHRTF, align 8, !tbaa !43
  %arrayidx38 = getelementptr inbounds float*, float** %pfHRTF, i64 1
  %14 = load float*, float** %arrayidx38, align 8, !tbaa !43
  %15 = zext i32 %12 to i64
  %min.iters.check = icmp ult i32 %12, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %13, i64 %15
  %scevgep122 = getelementptr float, float* %14, i64 %15
  %bound0 = icmp ult float* %13, %scevgep122
  %bound1 = icmp ult float* %14, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %15, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %16 = getelementptr inbounds i16, i16* %9, i64 %index
  %17 = bitcast i16* %16 to <4 x i16>*
  %wide.load = load <4 x i16>, <4 x i16>* %17, align 2, !tbaa !45, !alias.scope !47
  %18 = sitofp <4 x i16> %wide.load to <4 x float>
  %19 = fdiv <4 x float> %18, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %20 = getelementptr inbounds float, float* %13, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 4, !tbaa !50, !alias.scope !52, !noalias !54
  %22 = getelementptr inbounds i16, i16* %7, i64 %index
  %23 = bitcast i16* %22 to <4 x i16>*
  %wide.load124 = load <4 x i16>, <4 x i16>* %23, align 2, !tbaa !45, !alias.scope !56
  %24 = sitofp <4 x i16> %wide.load124 to <4 x float>
  %25 = fdiv <4 x float> %24, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %26 = getelementptr inbounds float, float* %14, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !54
  %index.next = add i64 %index, 4
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !58

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %15
  br i1 %cmp.n, label %if.then.i.i.i74, label %for.body.preheader

ehcleanup.thread:                                 ; preds = %cond.true.i.i.i.i
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  br label %ehcleanup56

_ZNSt6vectorIsSaIsEED2Ev.exit95:                  ; preds = %cond.true.i.i.i.i77
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i3.i.i71) #24
  br label %ehcleanup56

lpad17:                                           ; preds = %invoke.cont10
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %tobool.i.i.i = icmp eq i16* %7, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIsSaIsEED2Ev.exit, label %if.then.i.i.i

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i91 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv
  %35 = load i16, i16* %add.ptr.i91, align 2, !tbaa !45
  %conv29 = sitofp i16 %35 to float
  %div = fdiv float %conv29, 3.276700e+04
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  store float %div, float* %arrayidx31, align 4, !tbaa !50
  %add.ptr.i = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %36 = load i16, i16* %add.ptr.i, align 2, !tbaa !45
  %conv36 = sitofp i16 %36 to float
  %div37 = fdiv float %conv36, 3.276700e+04
  %arrayidx40 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  store float %div37, float* %arrayidx40, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp24 = icmp ult i64 %indvars.iv.next, %15
  br i1 %cmp24, label %for.body, label %if.then.i.i.i74, !llvm.loop !60

cleanup:                                          ; preds = %for.cond.preheader, %invoke.cont18
  %retval.0 = phi i1 [ false, %invoke.cont18 ], [ true, %for.cond.preheader ]
  %tobool.i.i.i73 = icmp eq i16* %7, null
  br i1 %tobool.i.i.i73, label %_ZNSt6vectorIsSaIsEED2Ev.exit75, label %if.then.i.i.i74

if.then.i.i.i74:                                  ; preds = %cleanup, %for.body, %middle.block
  %retval.0119 = phi i1 [ %retval.0, %cleanup ], [ true, %middle.block ], [ true, %for.body ]
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75

_ZNSt6vectorIsSaIsEED2Ev.exit75:                  ; preds = %if.then.i.i.i74, %cleanup
  %retval.0120 = phi i1 [ %retval.0, %cleanup ], [ %retval.0119, %if.then.i.i.i74 ]
  %tobool.i.i.i73.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i73.1, label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1, label %if.then.i.i.i74.1

if.then.i.i.i:                                    ; preds = %lpad17
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit

_ZNSt6vectorIsSaIsEED2Ev.exit:                    ; preds = %if.then.i.i.i, %lpad17
  %tobool.i.i.i.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i.1, label %ehcleanup56, label %if.then.i.i.i.1

ehcleanup56:                                      ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIsSaIsEED2Ev.exit, %_ZNSt6vectorIsSaIsEED2Ev.exit95, %ehcleanup.thread
  %.sink = phi { i8*, i32 } [ %31, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %29, %ehcleanup.thread ], [ %33, %if.then.i.i.i.1 ], [ %33, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %exn.slot.1 = phi i8* [ %32, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %30, %ehcleanup.thread ], [ %34, %if.then.i.i.i.1 ], [ %34, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %37 = extractvalue { i8*, i32 } %.sink, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val61 = insertvalue { i8*, i32 } %lpad.val, i32 %37, 1
  resume { i8*, i32 } %lpad.val61

if.then.i.i.i74.1:                                ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1

_ZNSt6vectorIsSaIsEED2Ev.exit75.1:                ; preds = %if.then.i.i.i74.1, %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  ret i1 %retval.0120

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %ehcleanup56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare float @_Z16RadiansToDegreesf(float) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @mit_hrtf_get(i32*, i32*, i32, i16*, i16*) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14CAmbisonicBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 0, i32* %m_nOrder, align 8, !tbaa !61
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 0, i8* %m_b3D, align 4, !tbaa !64
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 0, i32* %m_nChannelCount, align 8, !tbaa !65
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 5
  store i8 0, i8* %m_bOpt, align 4, !tbaa !66
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase8GetOrderEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nOrder, align 8, !tbaa !61
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN14CAmbisonicBase9GetHeightEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  %0 = load i8, i8* %m_b3D, align 4, !tbaa !64, !range !67
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase15GetChannelCountEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nChannelCount, align 8, !tbaa !65
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* nocapture %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %frombool = zext i1 %b3D to i8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 %nOrder, i32* %m_nOrder, align 8, !tbaa !61
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 %frombool, i8* %m_b3D, align 4, !tbaa !64
  %call = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 %call, i32* %m_nChannelCount, align 8, !tbaa !65
  ret i1 true
}

declare i32 @_Z17OrderToComponentsjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %fDistance = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false)
  store float 1.000000e+00, float* %fDistance, align 8, !tbaa !68
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float 1.000000e+00, float* %m_fGain, align 4, !tbaa !72
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp5 = alloca float, align 4
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !64
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !65
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %conv = zext i32 %call.i to i64
  %3 = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp, align 4, !tbaa !50
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !73
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !76
  %sub.ptr.sub.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff, float* %9, i64 %sub.i, float* nonnull dereferenceable(4) %ref.tmp)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.else.i:                                        ; preds = %entry
  %cmp6.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp6.i, label %if.then7.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.then7.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit:            ; preds = %if.then7.i, %if.else.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !61
  %add = add i32 %10, 1
  %conv4 = zext i32 %add to i64
  %11 = bitcast float* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5, align 4, !tbaa !50
  %_M_finish.i.i6 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !73
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !76
  %sub.ptr.sub.i.i7 = sub i64 %13, %15
  %sub.ptr.div.i.i8 = ashr exact i64 %sub.ptr.sub.i.i7, 2
  %cmp.i9 = icmp ult i64 %sub.ptr.div.i.i8, %conv4
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9, label %if.then.i11, label %if.else.i13

if.then.i11:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %17 = inttoptr i64 %13 to float*
  %sub.i10 = sub nsw i64 %conv4, %sub.ptr.div.i.i8
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights, float* %17, i64 %sub.i10, float* nonnull dereferenceable(4) %ref.tmp5)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.else.i13:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %cmp6.i12 = icmp ugt i64 %sub.ptr.div.i.i8, %conv4
  br i1 %cmp6.i12, label %if.then7.i15, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.then7.i15:                                     ; preds = %if.else.i13
  %add.ptr.i14 = getelementptr inbounds float, float* %16, i64 %conv4
  store float* %add.ptr.i14, float** %_M_finish.i.i6, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16:          ; preds = %if.then7.i15, %if.else.i13, %if.then.i11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicSource5ResetEv(%class.CAmbisonicSource* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* readonly %this) unnamed_addr #9 align 2 {
entry:
  %fAzimuth = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 0
  %0 = load float, float* %fAzimuth, align 8, !tbaa !77
  %call = tail call float @cosf(float %0) #24
  %1 = load float, float* %fAzimuth, align 8, !tbaa !77
  %call4 = tail call float @sinf(float %1) #24
  %fElevation = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 1
  %2 = load float, float* %fElevation, align 4, !tbaa !78
  %call6 = tail call float @cosf(float %2) #24
  %3 = load float, float* %fElevation, align 4, !tbaa !78
  %call9 = tail call float @sinf(float %3) #24
  %4 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul = fmul float %4, 2.000000e+00
  %call12 = tail call float @cosf(float %mul) #24
  %5 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul15 = fmul float %5, 2.000000e+00
  %call16 = tail call float @sinf(float %mul15) #24
  %6 = load float, float* %fElevation, align 4, !tbaa !78
  %mul19 = fmul float %6, 2.000000e+00
  %call20 = tail call float @sinf(float %mul19) #24
  %7 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 4, !tbaa !64, !range !67
  %tobool = icmp eq i8 %8, 0
  %9 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !50
  %_M_start.i334 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i334, align 8, !tbaa !76
  %14 = bitcast float* %13 to i32*
  store i32 %12, i32* %14, align 4, !tbaa !50
  %15 = load i32, i32* %9, align 8, !tbaa !61
  %cmp189 = icmp eq i32 %15, 0
  br i1 %tobool, label %if.then182, label %if.then21

if.then21:                                        ; preds = %entry
  br i1 %cmp189, label %if.end248, label %if.end45

if.end45:                                         ; preds = %if.then21
  %mul28 = fmul float %call4, %call6
  %add.ptr.i341 = getelementptr inbounds float, float* %10, i64 1
  %16 = load float, float* %add.ptr.i341, align 4, !tbaa !50
  %mul31 = fmul float %mul28, %16
  %add.ptr.i348 = getelementptr inbounds float, float* %13, i64 1
  store float %mul31, float* %add.ptr.i348, align 4, !tbaa !50
  %17 = load float, float* %add.ptr.i341, align 4, !tbaa !50
  %mul36 = fmul float %call9, %17
  %add.ptr.i366 = getelementptr inbounds float, float* %13, i64 2
  store float %mul36, float* %add.ptr.i366, align 4, !tbaa !50
  %mul39 = fmul float %call, %call6
  %18 = load float, float* %add.ptr.i341, align 4, !tbaa !50
  %mul42 = fmul float %mul39, %18
  %add.ptr.i380 = getelementptr inbounds float, float* %13, i64 3
  store float %mul42, float* %add.ptr.i380, align 4, !tbaa !50
  %cmp47 = icmp eq i32 %15, 1
  br i1 %cmp47, label %if.end248, label %if.end93

if.end93:                                         ; preds = %if.end45
  %square302 = fmul float %call6, %call6
  %mul51 = fmul float %square302, %call16
  %mul52 = fmul float %mul51, 0x3FEBB67AE0000000
  %add.ptr.i388 = getelementptr inbounds float, float* %10, i64 2
  %19 = load float, float* %add.ptr.i388, align 4, !tbaa !50
  %mul55 = fmul float %mul52, %19
  %add.ptr.i399 = getelementptr inbounds float, float* %13, i64 4
  store float %mul55, float* %add.ptr.i399, align 4, !tbaa !50
  %mul60 = fmul float %call4, %call20
  %mul61 = fmul float %mul60, 0x3FEBB67AE0000000
  %20 = load float, float* %add.ptr.i388, align 4, !tbaa !50
  %mul64 = fmul float %mul61, %20
  %add.ptr.i394 = getelementptr inbounds float, float* %13, i64 5
  store float %mul64, float* %add.ptr.i394, align 4, !tbaa !50
  %square303 = fmul float %call9, %call9
  %mul68 = fmul float %square303, 1.500000e+00
  %sub = fadd float %mul68, -5.000000e-01
  %21 = load float, float* %add.ptr.i388, align 4, !tbaa !50
  %mul71 = fmul float %sub, %21
  %add.ptr.i390 = getelementptr inbounds float, float* %13, i64 6
  store float %mul71, float* %add.ptr.i390, align 4, !tbaa !50
  %mul76 = fmul float %call, %call20
  %mul77 = fmul float %mul76, 0x3FEBB67AE0000000
  %22 = load float, float* %add.ptr.i388, align 4, !tbaa !50
  %mul80 = fmul float %mul77, %22
  %add.ptr.i382 = getelementptr inbounds float, float* %13, i64 7
  store float %mul80, float* %add.ptr.i382, align 4, !tbaa !50
  %mul86 = fmul float %square302, %call12
  %mul87 = fmul float %mul86, 0x3FEBB67AE0000000
  %23 = load float, float* %add.ptr.i388, align 4, !tbaa !50
  %mul90 = fmul float %mul87, %23
  %add.ptr.i375 = getelementptr inbounds float, float* %13, i64 8
  store float %mul90, float* %add.ptr.i375, align 4, !tbaa !50
  %cmp95 = icmp ugt i32 %15, 2
  br i1 %cmp95, label %if.then96, label %if.end248

if.then96:                                        ; preds = %if.end93
  %24 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul100 = fmul float %24, 3.000000e+00
  %call101 = tail call float @sinf(float %mul100) #24
  %call102 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul103 = fmul float %call101, %call102
  %mul104 = fmul float %mul103, 0x3FE94C5840000000
  %25 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i370 = getelementptr inbounds float, float* %25, i64 3
  %26 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul107 = fmul float %mul104, %26
  %27 = load float*, float** %_M_start.i334, align 8, !tbaa !76
  %add.ptr.i368 = getelementptr inbounds float, float* %27, i64 9
  store float %mul107, float* %add.ptr.i368, align 4, !tbaa !50
  %mul112 = fmul float %call9, %call16
  %square297 = fmul float %call6, %call6
  %mul114 = fmul float %square297, %mul112
  %mul115 = fmul float %mul114, 0x3FFEFBDEC0000000
  %28 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul118 = fmul float %mul115, %28
  %add.ptr.i361 = getelementptr inbounds float, float* %27, i64 10
  store float %mul118, float* %add.ptr.i361, align 4, !tbaa !50
  %square298 = fmul float %call9, %call9
  %mul124 = fmul float %square298, 5.000000e+00
  %sub125 = fadd float %mul124, -1.000000e+00
  %mul126 = fmul float %mul28, %sub125
  %mul127 = fmul float %mul126, 0x3FE3988E20000000
  %29 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul130 = fmul float %mul127, %29
  %add.ptr.i354 = getelementptr inbounds float, float* %27, i64 11
  store float %mul130, float* %add.ptr.i354, align 4, !tbaa !50
  %sub135 = fadd float %mul124, -3.000000e+00
  %mul136 = fmul float %call9, %sub135
  %mul137 = fmul float %mul136, 5.000000e-01
  %30 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul140 = fmul float %mul137, %30
  %add.ptr.i350 = getelementptr inbounds float, float* %27, i64 12
  store float %mul140, float* %add.ptr.i350, align 4, !tbaa !50
  %mul148 = fmul float %mul39, %sub125
  %mul149 = fmul float %mul148, 0x3FE3988E20000000
  %31 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul152 = fmul float %mul149, %31
  %add.ptr.i343 = getelementptr inbounds float, float* %27, i64 13
  store float %mul152, float* %add.ptr.i343, align 4, !tbaa !50
  %mul157 = fmul float %call9, %call12
  %mul159 = fmul float %square297, %mul157
  %mul160 = fmul float %mul159, 0x3FFEFBDEC0000000
  %32 = load float, float* %add.ptr.i370, align 4, !tbaa !50
  %mul163 = fmul float %mul160, %32
  %add.ptr.i336 = getelementptr inbounds float, float* %27, i64 14
  store float %mul163, float* %add.ptr.i336, align 4, !tbaa !50
  %33 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul169 = fmul float %33, 3.000000e+00
  %call170 = tail call float @cosf(float %mul169) #24
  %call171 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul172 = fmul float %call170, %call171
  %mul173 = fmul float %mul172, 0x3FE94C5840000000
  %34 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i333 = getelementptr inbounds float, float* %34, i64 3
  %35 = load float, float* %add.ptr.i333, align 4, !tbaa !50
  %mul176 = fmul float %mul173, %35
  %36 = load float*, float** %_M_start.i334, align 8, !tbaa !76
  %add.ptr.i331 = getelementptr inbounds float, float* %36, i64 15
  store float %mul176, float* %add.ptr.i331, align 4, !tbaa !50
  br label %if.end248

if.then182:                                       ; preds = %entry
  br i1 %cmp189, label %if.end248, label %if.end203

if.end203:                                        ; preds = %if.then182
  %mul191 = fmul float %call, %call6
  %add.ptr.i329 = getelementptr inbounds float, float* %10, i64 1
  %37 = load float, float* %add.ptr.i329, align 4, !tbaa !50
  %mul194 = fmul float %mul191, %37
  %add.ptr.i327 = getelementptr inbounds float, float* %13, i64 1
  store float %mul194, float* %add.ptr.i327, align 4, !tbaa !50
  %mul197 = fmul float %call4, %call6
  %38 = load float, float* %add.ptr.i329, align 4, !tbaa !50
  %mul200 = fmul float %mul197, %38
  %add.ptr.i323 = getelementptr inbounds float, float* %13, i64 2
  store float %mul200, float* %add.ptr.i323, align 4, !tbaa !50
  %cmp205 = icmp eq i32 %15, 1
  br i1 %cmp205, label %if.end248, label %if.end221

if.end221:                                        ; preds = %if.end203
  %square = fmul float %call6, %call6
  %mul208 = fmul float %square, %call12
  %add.ptr.i321 = getelementptr inbounds float, float* %10, i64 2
  %39 = load float, float* %add.ptr.i321, align 4, !tbaa !50
  %mul211 = fmul float %mul208, %39
  %add.ptr.i319 = getelementptr inbounds float, float* %13, i64 3
  store float %mul211, float* %add.ptr.i319, align 4, !tbaa !50
  %mul215 = fmul float %square, %call16
  %40 = load float, float* %add.ptr.i321, align 4, !tbaa !50
  %mul218 = fmul float %mul215, %40
  %add.ptr.i315 = getelementptr inbounds float, float* %13, i64 4
  store float %mul218, float* %add.ptr.i315, align 4, !tbaa !50
  %cmp223 = icmp ugt i32 %15, 2
  br i1 %cmp223, label %if.then224, label %if.end248

if.then224:                                       ; preds = %if.end221
  %41 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul227 = fmul float %41, 3.000000e+00
  %call228 = tail call float @cosf(float %mul227) #24
  %call229 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul230 = fmul float %call228, %call229
  %42 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i313 = getelementptr inbounds float, float* %42, i64 3
  %43 = load float, float* %add.ptr.i313, align 4, !tbaa !50
  %mul233 = fmul float %mul230, %43
  %44 = load float*, float** %_M_start.i334, align 8, !tbaa !76
  %add.ptr.i311 = getelementptr inbounds float, float* %44, i64 5
  store float %mul233, float* %add.ptr.i311, align 4, !tbaa !50
  %45 = load float, float* %fAzimuth, align 8, !tbaa !77
  %mul238 = fmul float %45, 3.000000e+00
  %call239 = tail call float @sinf(float %mul238) #24
  %call240 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul241 = fmul float %call239, %call240
  %46 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i309 = getelementptr inbounds float, float* %46, i64 3
  %47 = load float, float* %add.ptr.i309, align 4, !tbaa !50
  %mul244 = fmul float %mul241, %47
  %48 = load float*, float** %_M_start.i334, align 8, !tbaa !76
  %add.ptr.i307 = getelementptr inbounds float, float* %48, i64 6
  store float %mul244, float* %add.ptr.i307, align 4, !tbaa !50
  br label %if.end248

if.end248:                                        ; preds = %if.then224, %if.end221, %if.end203, %if.then182, %if.then96, %if.end93, %if.end45, %if.then21
  %49 = phi float* [ %13, %if.end203 ], [ %13, %if.then182 ], [ %13, %if.then21 ], [ %13, %if.end221 ], [ %48, %if.then224 ], [ %13, %if.end93 ], [ %36, %if.then96 ], [ %13, %if.end45 ]
  %50 = bitcast float* %49 to i8*
  %51 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  %52 = load i32, i32* %51, align 8, !tbaa !65
  %cmp249404 = icmp eq i32 %52, 0
  br i1 %cmp249404, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end248
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %53 = zext i32 %52 to i64
  %min.iters.check = icmp ult i32 %52, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %49, i64 %53
  %scevgep408 = getelementptr %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %scevgep408409 = bitcast float* %scevgep408 to i8*
  %uglygep = getelementptr i8, i8* %scevgep408409, i64 1
  %bound0 = icmp ugt i8* %uglygep, %50
  %bound1 = icmp ult float* %m_fGain, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %53, 4294967288
  %54 = add nsw i64 %n.vec, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %xtraiter = and i64 %56, 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %56, %xtraiter
  %58 = load float, float* %m_fGain, align 4, !tbaa !72, !alias.scope !79
  %59 = insertelement <4 x float> undef, float %58, i32 0
  %60 = shufflevector <4 x float> %59, <4 x float> undef, <4 x i32> zeroinitializer
  %61 = insertelement <4 x float> undef, float %58, i32 0
  %62 = shufflevector <4 x float> %61, <4 x float> undef, <4 x i32> zeroinitializer
  %63 = load float, float* %m_fGain, align 4, !tbaa !72, !alias.scope !79
  %64 = insertelement <4 x float> undef, float %63, i32 0
  %65 = shufflevector <4 x float> %64, <4 x float> undef, <4 x i32> zeroinitializer
  %66 = insertelement <4 x float> undef, float %63, i32 0
  %67 = shufflevector <4 x float> %66, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %68 = getelementptr inbounds float, float* %49, i64 %index
  %69 = bitcast float* %68 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %69, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  %wide.load411 = load <4 x float>, <4 x float>* %71, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %72 = fmul <4 x float> %60, %wide.load
  %73 = fmul <4 x float> %62, %wide.load411
  %74 = bitcast float* %68 to <4 x float>*
  store <4 x float> %72, <4 x float>* %74, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %75 = bitcast float* %70 to <4 x float>*
  store <4 x float> %73, <4 x float>* %75, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %index.next = or i64 %index, 8
  %76 = getelementptr inbounds float, float* %49, i64 %index.next
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load411.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %80 = fmul <4 x float> %65, %wide.load.1
  %81 = fmul <4 x float> %67, %wide.load411.1
  %82 = bitcast float* %76 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %83 = bitcast float* %78 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !84

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %84 = load float, float* %m_fGain, align 4, !tbaa !72, !alias.scope !79
  %85 = insertelement <4 x float> undef, float %84, i32 0
  %86 = shufflevector <4 x float> %85, <4 x float> undef, <4 x i32> zeroinitializer
  %87 = insertelement <4 x float> undef, float %84, i32 0
  %88 = shufflevector <4 x float> %87, <4 x float> undef, <4 x i32> zeroinitializer
  %89 = getelementptr inbounds float, float* %49, i64 %index.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load411.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %93 = fmul <4 x float> %86, %wide.load.epil
  %94 = fmul <4 x float> %88, %wide.load411.epil
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !82, !noalias !79
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %53
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %if.end248
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %97 = load float, float* %m_fGain, align 4, !tbaa !72
  %add.ptr.i = getelementptr inbounds float, float* %49, i64 %indvars.iv
  %98 = load float, float* %add.ptr.i, align 4, !tbaa !50
  %mul252 = fmul float %97, %98
  store float %mul252, float* %add.ptr.i, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp249 = icmp ult i64 %indvars.iv.next, %53
  br i1 %cmp249, label %for.body, label %for.cond.cleanup, !llvm.loop !85
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* nocapture %this, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) unnamed_addr #11 align 2 {
entry:
  %polPosition.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %polPosition.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx to <2 x float>*
  store <2 x float> %polPosition.coerce0, <2 x float>* %polPosition.sroa.0.0..sroa_cast, align 8
  %polPosition.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  store float %polPosition.coerce1, float* %polPosition.sroa.2.0..sroa_idx3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly uwtable
define { <2 x float>, float } @_ZN16CAmbisonicSource11GetPositionEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %retval.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %retval.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %retval.sroa.0.0..sroa_idx to <2 x float>*
  %retval.sroa.0.0.copyload = load <2 x float>, <2 x float>* %retval.sroa.0.0..sroa_cast, align 8
  %retval.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %retval.sroa.2.0.copyload = load float, float* %retval.sroa.2.0..sroa_idx3, align 8
  %.fca.0.insert = insertvalue { <2 x float>, float } undef, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, float } %.fca.0.insert, float %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, float } %.fca.1.insert
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetOrderWeightEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder, float %fWeight) unnamed_addr #12 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !50
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource17SetOrderWeightAllEf(%class.CAmbisonicSource* nocapture readonly %this, float %fWeight) unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !61
  %cmp6 = icmp eq i32 %1, -1
  br i1 %cmp6, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add = add nuw i32 %1, 1
  %3 = zext i32 %add to i64
  %4 = icmp ugt i64 %3, 1
  %umax = select i1 %4, i64 %3, i64 1
  %min.iters.check = icmp ult i64 %umax, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %umax, 4294967288
  %broadcast.splatinsert9 = insertelement <4 x float> undef, float %fWeight, i32 0
  %broadcast.splat10 = shufflevector <4 x float> %broadcast.splatinsert9, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert11 = insertelement <4 x float> undef, float %fWeight, i32 0
  %broadcast.splat12 = shufflevector <4 x float> %broadcast.splatinsert11, <4 x float> undef, <4 x i32> zeroinitializer
  %5 = add nsw i64 %n.vec, -8
  %6 = lshr exact i64 %5, 3
  %7 = add nuw nsw i64 %6, 1
  %xtraiter = and i64 %7, 7
  %8 = icmp ult i64 %5, 56
  br i1 %8, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %7, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %9 = getelementptr inbounds float, float* %2, i64 %index
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %10, align 4, !tbaa !50
  %11 = getelementptr inbounds float, float* %9, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %12, align 4, !tbaa !50
  %index.next = or i64 %index, 8
  %13 = getelementptr inbounds float, float* %2, i64 %index.next
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %14, align 4, !tbaa !50
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %16, align 4, !tbaa !50
  %index.next.1 = or i64 %index, 16
  %17 = getelementptr inbounds float, float* %2, i64 %index.next.1
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %18, align 4, !tbaa !50
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %20, align 4, !tbaa !50
  %index.next.2 = or i64 %index, 24
  %21 = getelementptr inbounds float, float* %2, i64 %index.next.2
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %22, align 4, !tbaa !50
  %23 = getelementptr inbounds float, float* %21, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %24, align 4, !tbaa !50
  %index.next.3 = or i64 %index, 32
  %25 = getelementptr inbounds float, float* %2, i64 %index.next.3
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %26, align 4, !tbaa !50
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %28, align 4, !tbaa !50
  %index.next.4 = or i64 %index, 40
  %29 = getelementptr inbounds float, float* %2, i64 %index.next.4
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %30, align 4, !tbaa !50
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %32, align 4, !tbaa !50
  %index.next.5 = or i64 %index, 48
  %33 = getelementptr inbounds float, float* %2, i64 %index.next.5
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %34, align 4, !tbaa !50
  %35 = getelementptr inbounds float, float* %33, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %36, align 4, !tbaa !50
  %index.next.6 = or i64 %index, 56
  %37 = getelementptr inbounds float, float* %2, i64 %index.next.6
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %38, align 4, !tbaa !50
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %40, align 4, !tbaa !50
  %index.next.7 = add i64 %index, 64
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !86

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body.epil ], [ %xtraiter, %middle.block.unr-lcssa ]
  %41 = getelementptr inbounds float, float* %2, i64 %index.epil
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %42, align 4, !tbaa !50
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %44, align 4, !tbaa !50
  %index.next.epil = add i64 %index.epil, 8
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !87

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %umax, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %2, i64 %indvars.iv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !89
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetCoefficientEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel, float %fCoeff) unnamed_addr #12 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fCoeff, float* %add.ptr.i, align 4, !tbaa !50
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetOrderWeightEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !50
  ret float %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !50
  ret float %1
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource7SetGainEf(%class.CAmbisonicSource* nocapture %this, float %fGain) unnamed_addr #5 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float %fGain, float* %m_fGain, align 4, !tbaa !72
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource7GetGainEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %0 = load float, float* %m_fGain, align 4, !tbaa !72
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormatC2Ev(%class.CBFormat* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSamples to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN8CBFormat14GetSampleCountEv(%class.CBFormat* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleCount) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !64
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !65
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  store i32 %nSampleCount, i32* %m_nSamples, align 8, !tbaa !91
  %mul = mul i32 %call.i, %nSampleCount
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  store i32 %mul, i32* %m_nDataLength, align 4, !tbaa !96
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3
  %conv = zext i32 %mul to i64
  %_M_finish.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish.i.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !73
  %5 = bitcast %"class.std::vector.0"* %m_pfData to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !76
  %sub.ptr.sub.i.i = sub i64 %4, %6
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %7 = inttoptr i64 %6 to float*
  %8 = inttoptr i64 %6 to i8*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfData, i64 %sub.i)
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %m_pfData to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !76
  %.pre33 = load i32, i32* %m_nDataLength, align 4, !tbaa !96
  %.pre35 = zext i32 %.pre33 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %conv9.pre-phi = phi i64 [ %.pre35, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ]
  %9 = phi i8* [ %.pre, %if.then.i ], [ %8, %if.else.i ], [ %8, %if.then5.i ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %m_pfData, i64 0, i32 0, i32 0, i32 0
  %mul10 = shl nuw nsw i64 %conv9.pre-phi, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %mul10, i1 false)
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4
  %10 = load i32, i32* %2, align 8, !tbaa !65
  %conv12 = zext i32 %10 to i64
  %11 = shl nuw nsw i64 %conv12, 3
  %call13 = tail call i8* @_Znam(i64 %11) #26
  %12 = ptrtoint i8* %call13 to i64
  %13 = bitcast %"class.std::unique_ptr"* %m_ppfChannels to i64*
  %14 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %m_ppfChannels, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load float**, float*** %14, align 8, !tbaa !43
  store i64 %12, i64* %13, align 8, !tbaa !43
  %cmp.i30 = icmp eq float** %15, null
  br i1 %cmp.i30, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %16 = bitcast float** %15 to i8*
  tail call void @_ZdaPv(i8* %16) #27
  %.pre34 = load i32, i32* %2, align 8, !tbaa !65
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %17 = phi i32 [ %10, %_ZNSt6vectorIfSaIfEE6resizeEm.exit ], [ %.pre34, %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i ]
  %cmp31 = icmp eq i32 %17, 0
  br i1 %cmp31, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit
  %18 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %19 = zext i32 %17 to i64
  %20 = add nsw i64 %19, -1
  %xtraiter = and i64 %19, 3
  %21 = icmp ult i64 %20, 3
  br i1 %21, label %cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub nsw i64 %19, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %for.body ]
  %22 = trunc i64 %indvars.iv to i32
  %mul17 = mul i32 %18, %22
  %conv18 = zext i32 %mul17 to i64
  %23 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i29 = getelementptr inbounds float, float* %23, i64 %conv18
  %24 = load float**, float*** %14, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %24, i64 %indvars.iv
  store float* %add.ptr.i29, float** %arrayidx.i, align 8, !tbaa !43
  %indvars.iv.next = or i64 %indvars.iv, 1
  %25 = trunc i64 %indvars.iv.next to i32
  %mul17.1 = mul i32 %18, %25
  %conv18.1 = zext i32 %mul17.1 to i64
  %26 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i29.1 = getelementptr inbounds float, float* %26, i64 %conv18.1
  %27 = load float**, float*** %14, align 8, !tbaa !43
  %arrayidx.i.1 = getelementptr inbounds float*, float** %27, i64 %indvars.iv.next
  store float* %add.ptr.i29.1, float** %arrayidx.i.1, align 8, !tbaa !43
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %28 = trunc i64 %indvars.iv.next.1 to i32
  %mul17.2 = mul i32 %18, %28
  %conv18.2 = zext i32 %mul17.2 to i64
  %29 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i29.2 = getelementptr inbounds float, float* %29, i64 %conv18.2
  %30 = load float**, float*** %14, align 8, !tbaa !43
  %arrayidx.i.2 = getelementptr inbounds float*, float** %30, i64 %indvars.iv.next.1
  store float* %add.ptr.i29.2, float** %arrayidx.i.2, align 8, !tbaa !43
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %31 = trunc i64 %indvars.iv.next.2 to i32
  %mul17.3 = mul i32 %18, %31
  %conv18.3 = zext i32 %mul17.3 to i64
  %32 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i29.3 = getelementptr inbounds float, float* %32, i64 %conv18.3
  %33 = load float**, float*** %14, align 8, !tbaa !43
  %arrayidx.i.3 = getelementptr inbounds float*, float** %33, i64 %indvars.iv.next.2
  store float* %add.ptr.i29.3, float** %arrayidx.i.3, align 8, !tbaa !43
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %cleanup.loopexit.unr-lcssa ]
  %34 = trunc i64 %indvars.iv.epil to i32
  %mul17.epil = mul i32 %18, %34
  %conv18.epil = zext i32 %mul17.epil to i64
  %35 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i29.epil = getelementptr inbounds float, float* %35, i64 %conv18.epil
  %36 = load float**, float*** %14, align 8, !tbaa !43
  %arrayidx.i.epil = getelementptr inbounds float*, float** %36, i64 %indvars.iv.epil
  store float* %add.ptr.i29.epil, float** %arrayidx.i.epil, align 8, !tbaa !43
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.epil, !llvm.loop !97

cleanup:                                          ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat5ResetEv(%class.CBFormat* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !76
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %2 = load i32, i32* %m_nDataLength, align 4, !tbaa !96
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN8CBFormat7RefreshEv(%class.CBFormat* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat12InsertStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture readonly %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 %conv
  %1 = bitcast float** %arrayidx.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !43
  %3 = bitcast float* %pfData to i8*
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat13ExtractStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = bitcast float* %pfData to i8*
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 %conv
  %2 = bitcast float** %arrayidx.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !43
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormataSERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #7 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !76
  %_M_start.i4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 3, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i4 to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !76
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %4 = load i32, i32* %m_nDataLength, align 4, !tbaa !96
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormateqERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !64, !range !67
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !64, !range !67
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !61
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !61
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !96
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !96
  %cmp9 = icmp eq i32 %8, %9
  br i1 %cmp9, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %if.else, %land.lhs.true7
  %retval.0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true7 ]
  ret i1 %retval.0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormatneERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !64, !range !67
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !64, !range !67
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !61
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !61
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %lor.lhs.false7, label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !96
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !96
  %cmp9 = icmp ne i32 %8, %9
  ret i1 %cmp9

return:                                           ; preds = %lor.lhs.false, %entry
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !50, !alias.scope !98
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !50, !alias.scope !98
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %21 = fadd <4 x float> %wide.load, %wide.load36
  %22 = fadd <4 x float> %wide.load35, %wide.load37
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !98
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !98
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %33 = fadd <4 x float> %wide.load.1, %wide.load36.1
  %34 = fadd <4 x float> %wide.load35.1, %wide.load37.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !103

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !98
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !50, !alias.scope !98
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %45 = fadd <4 x float> %wide.load.epil, %wide.load36.epil
  %46 = fadd <4 x float> %wide.load35.epil, %wide.load37.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !50, !alias.scope !101, !noalias !98
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !50
  %add.us = fadd float %49, %50
  store float %add.us, float* %arrayidx9.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !104

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !50, !alias.scope !105
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !50, !alias.scope !105
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %21 = fsub <4 x float> %wide.load36, %wide.load
  %22 = fsub <4 x float> %wide.load37, %wide.load35
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !105
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !105
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %33 = fsub <4 x float> %wide.load36.1, %wide.load.1
  %34 = fsub <4 x float> %wide.load37.1, %wide.load35.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !110

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !105
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !50, !alias.scope !105
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %45 = fsub <4 x float> %wide.load36.epil, %wide.load.epil
  %46 = fsub <4 x float> %wide.load37.epil, %wide.load35.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !50, !alias.scope !108, !noalias !105
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !50
  %sub.us = fsub float %50, %49
  store float %sub.us, float* %arrayidx9.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !111

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !50, !alias.scope !112
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !50, !alias.scope !112
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %21 = fmul <4 x float> %wide.load, %wide.load36
  %22 = fmul <4 x float> %wide.load35, %wide.load37
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !112
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !112
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %33 = fmul <4 x float> %wide.load.1, %wide.load36.1
  %34 = fmul <4 x float> %wide.load35.1, %wide.load37.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !117

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !112
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !50, !alias.scope !112
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %45 = fmul <4 x float> %wide.load.epil, %wide.load36.epil
  %46 = fmul <4 x float> %wide.load35.epil, %wide.load37.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !50, !alias.scope !115, !noalias !112
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !50
  %mul.us = fmul float %49, %50
  store float %mul.us, float* %arrayidx9.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !118

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967292
  %7 = add nsw i64 %6, -4
  %8 = lshr exact i64 %7, 2
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 4
  %n.vec = and i64 %5, 4294967292
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !50, !alias.scope !119
  %15 = getelementptr inbounds float, float* %12, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load34 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  %17 = fdiv <4 x float> %wide.load34, %wide.load
  %18 = bitcast float* %15 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  %index.next = or i64 %index, 4
  %19 = getelementptr inbounds float, float* %11, i64 %index.next
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !50, !alias.scope !119
  %21 = getelementptr inbounds float, float* %12, i64 %index.next
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load34.1 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  %23 = fdiv <4 x float> %wide.load34.1, %wide.load.1
  %24 = bitcast float* %21 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  %index.next.1 = add i64 %index, 8
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !124

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %25 = getelementptr inbounds float, float* %11, i64 %index.unr
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !119
  %27 = getelementptr inbounds float, float* %12, i64 %index.unr
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load34.epil = load <4 x float>, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  %29 = fdiv <4 x float> %wide.load34.epil, %wide.load.epil
  %30 = bitcast float* %27 to <4 x float>*
  store <4 x float> %29, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !122, !noalias !119
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %31 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %32 = load float, float* %arrayidx9.us, align 4, !tbaa !50
  %div.us = fdiv float %32, %31
  store float %div.us, float* %arrayidx9.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !125

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !126
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !126
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %26 = fadd <4 x float> %14, %wide.load
  %27 = fadd <4 x float> %16, %wide.load25
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %34 = fadd <4 x float> %19, %wide.load.1
  %35 = fadd <4 x float> %21, %wide.load25.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !131

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !126
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %47 = fadd <4 x float> %40, %wide.load.epil
  %48 = fadd <4 x float> %42, %wide.load25.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !129, !noalias !126
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !50
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %add.us = fadd float %51, %52
  store float %add.us, float* %arrayidx.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !132

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !133
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !133
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %26 = fsub <4 x float> %wide.load, %14
  %27 = fsub <4 x float> %wide.load25, %16
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %34 = fsub <4 x float> %wide.load.1, %19
  %35 = fsub <4 x float> %wide.load25.1, %21
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !138

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !133
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %47 = fsub <4 x float> %wide.load.epil, %40
  %48 = fsub <4 x float> %wide.load25.epil, %42
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !136, !noalias !133
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !50
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %sub.us = fsub float %52, %51
  store float %sub.us, float* %arrayidx.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !139

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !140
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !140
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %26 = fmul <4 x float> %14, %wide.load
  %27 = fmul <4 x float> %16, %wide.load25
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %34 = fmul <4 x float> %19, %wide.load.1
  %35 = fmul <4 x float> %21, %wide.load25.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !145

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !140
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %47 = fmul <4 x float> %40, %wide.load.epil
  %48 = fmul <4 x float> %42, %wide.load25.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !143, !noalias !140
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !50
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %mul.us = fmul float %51, %52
  store float %mul.us, float* %arrayidx.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !146

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !91
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967292
  %6 = add nsw i64 %5, -4
  %7 = lshr exact i64 %6, 2
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 4
  %n.vec = and i64 %4, 4294967292
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !147
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !147
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %18 = getelementptr inbounds float, float* %10, i64 %index
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %19, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  %20 = fdiv <4 x float> %wide.load, %14
  %21 = bitcast float* %18 to <4 x float>*
  store <4 x float> %20, <4 x float>* %21, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  %index.next = or i64 %index, 4
  %22 = getelementptr inbounds float, float* %10, i64 %index.next
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  %24 = fdiv <4 x float> %wide.load.1, %17
  %25 = bitcast float* %22 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  %index.next.1 = add i64 %index, 8
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !152

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %26 = load float, float* %fValue, align 4, !tbaa !50, !alias.scope !147
  %27 = insertelement <4 x float> undef, float %26, i32 0
  %28 = shufflevector <4 x float> %27, <4 x float> undef, <4 x i32> zeroinitializer
  %29 = getelementptr inbounds float, float* %10, i64 %index.unr
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  %31 = fdiv <4 x float> %wide.load.epil, %28
  %32 = bitcast float* %29 to <4 x float>*
  store <4 x float> %31, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !150, !noalias !147
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %33 = load float, float* %fValue, align 4, !tbaa !50
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %34 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %div.us = fdiv float %34, %33
  store float %div.us, float* %arrayidx.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !153

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !68
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !76
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD0Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicEncoder* %this to i8*
  tail call void @_ZdlPv(i8* %5) #27
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !64
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !65
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !50
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !73
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp6.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp6.i.i, label %if.then7.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then7.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then7.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !61
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !50
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !73
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp6.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp6.i12.i, label %if.then7.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then7.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !73
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then7.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* readonly %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoder* nocapture readonly %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp22 = icmp eq i32 %1, 0
  %cmp320 = icmp eq i32 %nSamples, 0
  %or.cond = or i1 %cmp22, %cmp320
  br i1 %or.cond, label %for.end11, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %2 = zext i32 %1 to i64
  %.pre = load float*, float** %_M_start.i, align 8, !tbaa !76
  %.pre28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %wide.trip.count = zext i32 %nSamples to i64
  %scevgep31 = getelementptr float, float* %pfSrc, i64 %wide.trip.count
  %3 = and i64 %wide.trip.count, 4294967288
  %4 = add nsw i64 %3, -8
  %5 = lshr exact i64 %4, 3
  %6 = add nuw nsw i64 %5, 1
  %min.iters.check = icmp ult i32 %nSamples, 8
  %n.vec = and i64 %wide.trip.count, 4294967288
  %xtraiter = and i64 %6, 1
  %7 = icmp eq i64 %4, 0
  %unroll_iter = sub nuw nsw i64 %6, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  %xtraiter40 = and i64 %wide.trip.count, 3
  %lcmp.mod41 = icmp eq i64 %xtraiter40, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc9_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv26 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next27, %for.cond2.for.inc9_crit_edge.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv26
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre28, i64 %indvars.iv26
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %9 = bitcast float* %8 to i8*
  %scevgep33 = getelementptr float, float* %.pre, i64 %indvars.iv26
  %scevgep3334 = bitcast float* %scevgep33 to i8*
  %uglygep = getelementptr i8, i8* %scevgep3334, i64 1
  %scevgep = getelementptr float, float* %8, i64 %wide.trip.count
  %bound0 = icmp ult float* %8, %scevgep31
  %bound1 = icmp ugt float* %scevgep, %pfSrc
  %found.conflict = and i1 %bound0, %bound1
  %bound035 = icmp ugt i8* %uglygep, %9
  %bound136 = icmp ult float* %add.ptr.i.us, %scevgep
  %found.conflict37 = and i1 %bound035, %bound136
  %conflict.rdx = or i1 %found.conflict, %found.conflict37
  br i1 %conflict.rdx, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %7, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %10 = load float, float* %add.ptr.i.us, align 4, !tbaa !50, !alias.scope !154
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %add.ptr.i.us, align 4, !tbaa !50, !alias.scope !154
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %pfSrc, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !50, !alias.scope !157
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load39 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !157
  %24 = fmul <4 x float> %wide.load, %12
  %25 = fmul <4 x float> %wide.load39, %14
  %26 = getelementptr inbounds float, float* %8, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %24, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %25, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %pfSrc, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !157
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load39.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !157
  %34 = fmul <4 x float> %wide.load.1, %17
  %35 = fmul <4 x float> %wide.load39.1, %19
  %36 = getelementptr inbounds float, float* %8, i64 %index.next
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %34, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %35, <4 x float>* %39, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !162

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %40 = getelementptr inbounds float, float* %pfSrc, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !50, !alias.scope !157
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load39.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !157
  %44 = load float, float* %add.ptr.i.us, align 4, !tbaa !50, !alias.scope !154
  %45 = insertelement <4 x float> undef, float %44, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = insertelement <4 x float> undef, float %44, i32 0
  %48 = shufflevector <4 x float> %47, <4 x float> undef, <4 x i32> zeroinitializer
  %49 = fmul <4 x float> %wide.load.epil, %46
  %50 = fmul <4 x float> %wide.load39.epil, %48
  %51 = getelementptr inbounds float, float* %8, i64 %index.unr
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %49, <4 x float>* %52, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %50, <4 x float>* %54, align 4, !tbaa !50, !alias.scope !159, !noalias !161
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  %55 = xor i64 %indvars.iv.ph, -1
  %56 = add nsw i64 %55, %wide.trip.count
  br i1 %lcmp.mod41, label %for.body4.us.prol.loopexit, label %for.body4.us.prol

for.body4.us.prol:                                ; preds = %for.body4.us.prol, %for.body4.us.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body4.us.prol ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.prol ], [ %xtraiter40, %for.body4.us.preheader ]
  %arrayidx.us.prol = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.prol
  %57 = load float, float* %arrayidx.us.prol, align 4, !tbaa !50
  %58 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul.us.prol = fmul float %57, %58
  %arrayidx8.us.prol = getelementptr inbounds float, float* %8, i64 %indvars.iv.prol
  store float %mul.us.prol, float* %arrayidx8.us.prol, align 4, !tbaa !50
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.prol.loopexit, label %for.body4.us.prol, !llvm.loop !163

for.body4.us.prol.loopexit:                       ; preds = %for.body4.us.prol, %for.body4.us.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body4.us.preheader ], [ %indvars.iv.next.prol, %for.body4.us.prol ]
  %59 = icmp ult i64 %56, 3
  br i1 %59, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ %indvars.iv.unr, %for.body4.us.prol.loopexit ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv
  %60 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %61 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul.us = fmul float %60, %61
  %arrayidx8.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  store float %mul.us, float* %arrayidx8.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next
  %62 = load float, float* %arrayidx.us.1, align 4, !tbaa !50
  %63 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul.us.1 = fmul float %62, %63
  %arrayidx8.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  store float %mul.us.1, float* %arrayidx8.us.1, align 4, !tbaa !50
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.1
  %64 = load float, float* %arrayidx.us.2, align 4, !tbaa !50
  %65 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul.us.2 = fmul float %64, %65
  %arrayidx8.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  store float %mul.us.2, float* %arrayidx8.us.2, align 4, !tbaa !50
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.2
  %66 = load float, float* %arrayidx.us.3, align 4, !tbaa !50
  %67 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul.us.3 = fmul float %66, %67
  %arrayidx8.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  store float %mul.us.3, float* %arrayidx8.us.3, align 4, !tbaa !50
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.3, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us, !llvm.loop !164

for.cond2.for.inc9_crit_edge.us:                  ; preds = %for.body4.us, %for.body4.us.prol.loopexit, %middle.block
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %cmp.us = icmp ult i64 %indvars.iv.next27, %2
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end11

for.end11:                                        ; preds = %for.cond2.for.inc9_crit_edge.us, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %2, align 8, !tbaa !65
  %3 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 5
  store i8 0, i8* %3, align 4, !tbaa !66
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %4 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !68
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !72
  %5 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = bitcast i32* %m_nSampleRate to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 36, i1 false)
  store float 5.000000e+00, float* %m_fRoomRadius, align 4, !tbaa !165
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float 0.000000e+00, float* %m_fInteriorGain, align 8, !tbaa !167
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float 0.000000e+00, float* %m_fExteriorGain, align 4, !tbaa !168
  store i32 1, i32* %0, align 8, !tbaa !61
  store i8 1, i8* %1, align 4, !tbaa !64
  %call.i.i.i6 = invoke i32 @_Z17OrderToComponentsjb(i32 1, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad

call.i.i.i.noexc:                                 ; preds = %entry
  store i32 %call.i.i.i6, i32* %2, align 8, !tbaa !65
  %conv.i.i = zext i32 %call.i.i.i6 to i64
  %7 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !50
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast float** %_M_finish.i.i.i.i to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !73
  %10 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i.i = sub i64 %9, %11
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %12 = inttoptr i64 %11 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %13 = inttoptr i64 %9 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %13, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp6.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp6.i.i.i, label %if.then7.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then7.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %12, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then7.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %0, align 8, !tbaa !61
  %add.i.i = add i32 %14, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %15 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !50
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %16 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !73
  %18 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i.i = sub i64 %17, %19
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %20 = inttoptr i64 %19 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %21 = inttoptr i64 %17 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %21, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %call.i.noexc unwind label %lpad

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp6.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp6.i12.i.i, label %if.then7.i15.i.i, label %call.i.noexc

if.then7.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %20, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !73
  br label %call.i.noexc

call.i.noexc:                                     ; preds = %if.then7.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #24
  store i32 44100, i32* %m_nSampleRate, align 8, !tbaa !169
  %m_nDelayBufferLength.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 19230, i32* %m_nDelayBufferLength.i, align 4, !tbaa !170
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %22 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !171
  %tobool6.i = icmp eq float* %22, null
  br i1 %tobool6.i, label %if.end9.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %call.i.noexc
  %23 = bitcast float* %22 to i8*
  call void @_ZdaPv(i8* %23) #27
  %.pre = load i32, i32* %m_nDelayBufferLength.i, align 4, !tbaa !170
  %phitmp = zext i32 %.pre to i64
  %phitmp8 = shl nuw nsw i64 %phitmp, 2
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull.i, %call.i.noexc
  %24 = phi i64 [ %phitmp8, %delete.notnull.i ], [ 76920, %call.i.noexc ]
  %call12.i4 = invoke i8* @_Znam(i64 %24) #26
          to label %call12.i.noexc unwind label %lpad

call12.i.noexc:                                   ; preds = %if.end9.i
  %25 = bitcast float** %m_pfDelayBuffer.i to i8**
  store i8* %call12.i4, i8** %25, align 8, !tbaa !171
  %26 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %26, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable.i, i64 3
  %27 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn.i, align 8
  invoke void %27(%class.CAmbisonicEncoderDist* nonnull %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %call12.i.noexc
  ret void

lpad:                                             ; preds = %call12.i.noexc, %if.end9.i, %if.then.i11.i.i, %if.then.i.i.i, %entry
  %28 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %29 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %29, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %lpad
  %30 = bitcast float* %29 to i8*
  tail call void @_ZdlPv(i8* nonnull %30) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %lpad
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %31, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %32 = bitcast float* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %32) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  resume { i8*, i32 } %28
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !171
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %if.end
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD0Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !171
  %tobool.i = icmp eq float* %1, null
  br i1 %tobool.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %if.end.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %if.end.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN21CAmbisonicEncoderDistD2Ev.exit, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN21CAmbisonicEncoderDistD2Ev.exit

_ZN21CAmbisonicEncoderDistD2Ev.exit:              ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %7 = bitcast %class.CAmbisonicEncoderDist* %this to i8*
  tail call void @_ZdlPv(i8* %7) #27
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN21CAmbisonicEncoderDist9ConfigureEjbj(%class.CAmbisonicEncoderDist* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %frombool.i.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i.i, i8* %1, align 4, !tbaa !64
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 %call.i.i.i, i32* %2, align 8, !tbaa !65
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %conv.i.i = zext i32 %call.i.i.i to i64
  %3 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !50
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !73
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %9, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %entry
  %cmp6.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp6.i.i.i, label %if.then7.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then7.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %8, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then7.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !61
  %add.i.i = add i32 %10, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %11 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !50
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !73
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %17, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp6.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp6.i12.i.i, label %if.then7.i15.i.i, label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.then7.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %16, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !73
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

_ZN17CAmbisonicEncoder9ConfigureEjbj.exit:        ; preds = %if.then7.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  store i32 %nSampleRate, i32* %m_nSampleRate, align 8, !tbaa !169
  %conv = uitofp i32 %nSampleRate to float
  %mul = fmul float %conv, 0x3FDBE82FA0000000
  %add = fadd float %mul, 5.000000e-01
  %conv5 = fptoui float %add to i32
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 %conv5, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %18 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !171
  %tobool6 = icmp eq float* %18, null
  br i1 %tobool6, label %if.end9, label %delete.notnull

delete.notnull:                                   ; preds = %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %19 = bitcast float* %18 to i8*
  call void @_ZdaPv(i8* %19) #27
  %.pre = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %20 = phi i32 [ %conv5, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit ], [ %.pre, %delete.notnull ]
  %conv11 = zext i32 %20 to i64
  %21 = shl nuw nsw i64 %conv11, 2
  %call12 = call i8* @_Znam(i64 %21) #26
  %22 = bitcast float** %m_pfDelayBuffer to i8**
  store i8* %call12, i8** %22, align 8, !tbaa !171
  %23 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable, i64 3
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn, align 8
  call void %24(%class.CAmbisonicEncoderDist* nonnull %this)
  ret i1 true
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist5ResetEv(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 {
entry:
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfDelayBuffer to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !171
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %2 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %3 = load float, float* %fDistance, align 8, !tbaa !68
  %div = fdiv float %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !169
  %conv2 = uitofp i32 %4 to float
  %mul3 = fmul float %div, %conv2
  %add = fadd float %mul3, 5.000000e-01
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %add to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !172
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub float %add, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !173
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  store i32 0, i32* %m_nIn, align 8, !tbaa !174
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  %add13 = sub i32 %5, %conv5
  %rem = urem i32 %add13, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !175
  %add16 = add nuw nsw i32 %rem, 1
  %rem18 = urem i32 %add16, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem18, i32* %m_nOutB, align 8, !tbaa !176
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7RefreshEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0) #24
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %1 = load float, float* %fDistance, align 8, !tbaa !68
  %2 = tail call float @llvm.fabs.f32(float %1) #24
  %div = fdiv float %2, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %3 = load i32, i32* %m_nSampleRate, align 8, !tbaa !169
  %conv = uitofp i32 %3 to float
  %mul = fmul float %div, %conv
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv3 = fptosi float %mul to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv3, i32* %m_nDelay, align 8, !tbaa !172
  %conv5 = sitofp i32 %conv3 to float
  %sub = fsub float %mul, %conv5
  store float %sub, float* %m_fDelay, align 4, !tbaa !173
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %4 = load i32, i32* %m_nIn, align 8, !tbaa !174
  %sub8 = sub i32 %4, %conv3
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  %add = add i32 %sub8, %5
  %rem = urem i32 %add, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !175
  %add11 = add nuw nsw i32 %rem, 1
  %rem13 = urem i32 %add11, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem13, i32* %m_nOutB, align 8, !tbaa !176
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = load float, float* %m_fRoomRadius, align 4, !tbaa !165
  %cmp = fcmp ult float %2, %6
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %div21 = fdiv float %6, %2
  %div22 = fmul float %div21, 5.000000e-01
  br label %if.end

if.else:                                          ; preds = %entry
  %div28 = fdiv float %2, %6
  %sub29 = fsub float 2.000000e+00, %div28
  %div30 = fmul float %sub29, 5.000000e-01
  %div37 = fmul float %div28, 5.000000e-01
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %div22.sink39 = phi float [ %div30, %if.else ], [ %div22, %if.then ]
  %div22.sink = phi float [ %div37, %if.else ], [ %div22, %if.then ]
  %7 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float %div22.sink39, float* %7, align 8
  %8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float %div22.sink, float* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* nocapture %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp62 = icmp eq i32 %nSamples, 0
  br i1 %cmp62, label %for.end44, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !171
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %_M_head_impl.i.i.i.i.i.i.i59 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %2 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i59, align 8, !tbaa !43
  %3 = load float*, float** %2, align 8, !tbaa !43
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  %4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !65
  %cmp1960 = icmp ugt i32 %5, 1
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !170
  %m_nIn.promoted = load i32, i32* %m_nIn, align 8, !tbaa !174
  %m_nOutA.promoted = load i32, i32* %m_nOutA, align 4, !tbaa !175
  %m_nOutB.promoted = load i32, i32* %m_nOutB, align 8, !tbaa !176
  %wide.trip.count = zext i32 %nSamples to i64
  br i1 %cmp1960, label %for.body.us.preheader, label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %7 = zext i32 %5 to i64
  %8 = add nsw i64 %7, -1
  %9 = add nsw i64 %7, -2
  %xtraiter = and i64 %8, 3
  %10 = icmp ult i64 %9, 3
  %unroll_iter = sub nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond18.for.end_crit_edge.us, %for.body.us.preheader
  %indvars.iv71 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next72, %for.cond18.for.end_crit_edge.us ]
  %rem4066.us = phi i32 [ %m_nOutB.promoted, %for.body.us.preheader ], [ %rem40.us, %for.cond18.for.end_crit_edge.us ]
  %rem3565.us = phi i32 [ %m_nOutA.promoted, %for.body.us.preheader ], [ %rem35.us, %for.cond18.for.end_crit_edge.us ]
  %rem64.us = phi i32 [ %m_nIn.promoted, %for.body.us.preheader ], [ %rem.us, %for.cond18.for.end_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv71
  %11 = bitcast float* %arrayidx.us to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !50
  %idxprom2.us = sext i32 %rem64.us to i64
  %arrayidx3.us = getelementptr inbounds float, float* %0, i64 %idxprom2.us
  %13 = bitcast float* %arrayidx3.us to i32*
  store i32 %12, i32* %13, align 4, !tbaa !50
  %idxprom5.us = sext i32 %rem3565.us to i64
  %arrayidx6.us = getelementptr inbounds float, float* %0, i64 %idxprom5.us
  %14 = load float, float* %arrayidx6.us, align 4, !tbaa !50
  %15 = load float, float* %m_fDelay, align 4, !tbaa !173
  %sub.us = fsub float 1.000000e+00, %15
  %mul.us = fmul float %14, %sub.us
  %idxprom8.us = sext i32 %rem4066.us to i64
  %arrayidx9.us = getelementptr inbounds float, float* %0, i64 %idxprom8.us
  %16 = load float, float* %arrayidx9.us, align 4, !tbaa !50
  %mul11.us = fmul float %15, %16
  %add.us = fadd float %mul.us, %mul11.us
  %17 = load float, float* %m_fInteriorGain, align 8, !tbaa !167
  %mul12.us = fmul float %17, %add.us
  %18 = load float, float* %1, align 4, !tbaa !50
  %mul13.us = fmul float %mul12.us, %18
  %arrayidx16.us = getelementptr inbounds float, float* %3, i64 %indvars.iv71
  store float %mul13.us, float* %arrayidx16.us, align 4, !tbaa !50
  %19 = load float, float* %m_fExteriorGain, align 4, !tbaa !168
  %mul17.us = fmul float %add.us, %19
  br i1 %10, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.body20.us:                                    ; preds = %for.body20.us, %for.body.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body20.us ], [ 1, %for.body.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body20.us ], [ %unroll_iter, %for.body.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %20 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  %mul23.us = fmul float %mul17.us, %20
  %arrayidx.i.us = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %21 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx28.us = getelementptr inbounds float, float* %21, i64 %indvars.iv71
  store float %mul23.us, float* %arrayidx28.us, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.us.1 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next
  %22 = load float, float* %add.ptr.i.us.1, align 4, !tbaa !50
  %mul23.us.1 = fmul float %mul17.us, %22
  %arrayidx.i.us.1 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i.us.1, align 8, !tbaa !43
  %arrayidx28.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv71
  store float %mul23.us.1, float* %arrayidx28.us.1, align 4, !tbaa !50
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.us.2 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.1
  %24 = load float, float* %add.ptr.i.us.2, align 4, !tbaa !50
  %mul23.us.2 = fmul float %mul17.us, %24
  %arrayidx.i.us.2 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.1
  %25 = load float*, float** %arrayidx.i.us.2, align 8, !tbaa !43
  %arrayidx28.us.2 = getelementptr inbounds float, float* %25, i64 %indvars.iv71
  store float %mul23.us.2, float* %arrayidx28.us.2, align 4, !tbaa !50
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.us.3 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.2
  %26 = load float, float* %add.ptr.i.us.3, align 4, !tbaa !50
  %mul23.us.3 = fmul float %mul17.us, %26
  %arrayidx.i.us.3 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.2
  %27 = load float*, float** %arrayidx.i.us.3, align 8, !tbaa !43
  %arrayidx28.us.3 = getelementptr inbounds float, float* %27, i64 %indvars.iv71
  store float %mul23.us.3, float* %arrayidx28.us.3, align 4, !tbaa !50
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.cond18.for.end_crit_edge.us.unr-lcssa:        ; preds = %for.body20.us, %for.body.us
  %indvars.iv.unr = phi i64 [ 1, %for.body.us ], [ %indvars.iv.next.3, %for.body20.us ]
  br i1 %lcmp.mod, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil

for.body20.us.epil:                               ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body20.us.epil ], [ %indvars.iv.unr, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body20.us.epil ], [ %xtraiter, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %add.ptr.i.us.epil = getelementptr inbounds float, float* %1, i64 %indvars.iv.epil
  %28 = load float, float* %add.ptr.i.us.epil, align 4, !tbaa !50
  %mul23.us.epil = fmul float %mul17.us, %28
  %arrayidx.i.us.epil = getelementptr inbounds float*, float** %2, i64 %indvars.iv.epil
  %29 = load float*, float** %arrayidx.i.us.epil, align 8, !tbaa !43
  %arrayidx28.us.epil = getelementptr inbounds float, float* %29, i64 %indvars.iv71
  store float %mul23.us.epil, float* %arrayidx28.us.epil, align 4, !tbaa !50
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil, !llvm.loop !177

for.cond18.for.end_crit_edge.us:                  ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %add30.us = add nsw i32 %rem64.us, 1
  %rem.us = urem i32 %add30.us, %6
  %add33.us = add nsw i32 %rem3565.us, 1
  %rem35.us = urem i32 %add33.us, %6
  %add38.us = add nsw i32 %rem4066.us, 1
  %rem40.us = urem i32 %add38.us, %6
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %exitcond = icmp eq i64 %indvars.iv.next72, %wide.trip.count
  br i1 %exitcond, label %for.cond.for.end44_crit_edge, label %for.body.us

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body ], [ 0, %for.body.lr.ph ]
  %rem4066 = phi i32 [ %rem40, %for.body ], [ %m_nOutB.promoted, %for.body.lr.ph ]
  %rem3565 = phi i32 [ %rem35, %for.body ], [ %m_nOutA.promoted, %for.body.lr.ph ]
  %rem64 = phi i32 [ %rem, %for.body ], [ %m_nIn.promoted, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv73
  %30 = bitcast float* %arrayidx to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !50
  %idxprom2 = sext i32 %rem64 to i64
  %arrayidx3 = getelementptr inbounds float, float* %0, i64 %idxprom2
  %32 = bitcast float* %arrayidx3 to i32*
  store i32 %31, i32* %32, align 4, !tbaa !50
  %idxprom5 = sext i32 %rem3565 to i64
  %arrayidx6 = getelementptr inbounds float, float* %0, i64 %idxprom5
  %33 = load float, float* %arrayidx6, align 4, !tbaa !50
  %34 = load float, float* %m_fDelay, align 4, !tbaa !173
  %sub = fsub float 1.000000e+00, %34
  %mul = fmul float %33, %sub
  %idxprom8 = sext i32 %rem4066 to i64
  %arrayidx9 = getelementptr inbounds float, float* %0, i64 %idxprom8
  %35 = load float, float* %arrayidx9, align 4, !tbaa !50
  %mul11 = fmul float %34, %35
  %add = fadd float %mul, %mul11
  %36 = load float, float* %m_fInteriorGain, align 8, !tbaa !167
  %mul12 = fmul float %36, %add
  %37 = load float, float* %1, align 4, !tbaa !50
  %mul13 = fmul float %mul12, %37
  %arrayidx16 = getelementptr inbounds float, float* %3, i64 %indvars.iv73
  store float %mul13, float* %arrayidx16, align 4, !tbaa !50
  %add30 = add nsw i32 %rem64, 1
  %rem = urem i32 %add30, %6
  %add33 = add nsw i32 %rem3565, 1
  %rem35 = urem i32 %add33, %6
  %add38 = add nsw i32 %rem4066, 1
  %rem40 = urem i32 %add38, %6
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond76 = icmp eq i64 %indvars.iv.next74, %wide.trip.count
  br i1 %exitcond76, label %for.cond.for.end44_crit_edge, label %for.body

for.cond.for.end44_crit_edge:                     ; preds = %for.body, %for.cond18.for.end_crit_edge.us
  %rem40.lcssa = phi i32 [ %rem40.us, %for.cond18.for.end_crit_edge.us ], [ %rem40, %for.body ]
  %rem35.lcssa = phi i32 [ %rem35.us, %for.cond18.for.end_crit_edge.us ], [ %rem35, %for.body ]
  %rem.lcssa = phi i32 [ %rem.us, %for.cond18.for.end_crit_edge.us ], [ %rem, %for.body ]
  store i32 %rem.lcssa, i32* %m_nIn, align 8, !tbaa !174
  store i32 %rem35.lcssa, i32* %m_nOutA, align 4, !tbaa !175
  store i32 %rem40.lcssa, i32* %m_nOutB, align 8, !tbaa !176
  br label %for.end44

for.end44:                                        ; preds = %for.cond.for.end44_crit_edge, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN21CAmbisonicEncoderDist13SetRoomRadiusEf(%class.CAmbisonicEncoderDist* nocapture %this, float %fRoomRadius) local_unnamed_addr #5 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  store float %fRoomRadius, float* %m_fRoomRadius, align 4, !tbaa !165
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN21CAmbisonicEncoderDist13GetRoomRadiusEv(%class.CAmbisonicEncoderDist* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %0 = load float, float* %m_fRoomRadius, align 4, !tbaa !165
  ret float %0
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  tail call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %m_orientation, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %5 = bitcast float** %m_pfTempSample to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  %6 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZN11OrientationC2Efff(%class.Orientation* %this, float %fYaw, float %fPitch, float %fRoll) unnamed_addr #3 comdat align 2 {
entry:
  %fYaw2 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 0
  store float %fYaw, float* %fYaw2, align 4, !tbaa !178
  %fPitch3 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 1
  store float %fPitch, float* %fPitch3, align 4, !tbaa !180
  %fRoll4 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 2
  store float %fRoll, float* %fRoll4, align 4, !tbaa !181
  %call = tail call float @cosf(float %fYaw) #24
  %call5 = tail call float @sinf(float %fYaw) #24
  %call6 = tail call float @cosf(float %fRoll) #24
  %call7 = tail call float @sinf(float %fRoll) #24
  %call8 = tail call float @cosf(float %fPitch) #24
  %call9 = tail call float @sinf(float %fPitch) #24
  %mul = fmul float %call6, %call8
  %cmp = fcmp oeq float %mul, 1.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %fBeta = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0.000000e+00, float* %fBeta, align 4, !tbaa !182
  %fGamma = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma, align 4, !tbaa !183
  %call.i = tail call float @atan2f(float %call5, float %call) #24
  %fAlpha = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %call.i, float* %fAlpha, align 4, !tbaa !184
  br label %if.end35

if.else:                                          ; preds = %entry
  %cmp11 = fcmp oeq float %mul, -1.000000e+00
  br i1 %cmp11, label %if.then12, label %if.else17

if.then12:                                        ; preds = %if.else
  %fBeta13 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0x400921FB60000000, float* %fBeta13, align 4, !tbaa !182
  %fGamma14 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma14, align 4, !tbaa !183
  %sub = fsub float -0.000000e+00, %call5
  %call.i68 = tail call float @atan2f(float %sub, float %call) #24
  %fAlpha16 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %call.i68, float* %fAlpha16, align 4, !tbaa !184
  br label %if.end35

if.else17:                                        ; preds = %if.else
  %0 = fmul float %call, %call7
  %mul20 = fmul float %call6, %call9
  %mul21 = fmul float %call5, %mul20
  %add = fsub float %mul21, %0
  %mul22 = fmul float %call, %call6
  %mul23 = fmul float %mul22, %call9
  %mul24 = fmul float %call5, %call7
  %add25 = fadd float %mul24, %mul23
  %call.i69 = tail call float @atan2f(float %add, float %add25) #24
  %fAlpha27 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %call.i69, float* %fAlpha27, align 4, !tbaa !184
  %call.i70 = tail call float @acosf(float %mul) #24
  %fBeta29 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float %call.i70, float* %fBeta29, align 4, !tbaa !182
  %mul30 = fmul float %call7, %call8
  %call.i71 = tail call float @atan2f(float %mul30, float %call9) #24
  %fGamma34 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float %call.i71, float* %fGamma34, align 4, !tbaa !183
  br label %if.end35

if.end35:                                         ; preds = %if.else17, %if.then12, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* nocapture %this) unnamed_addr #7 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %1 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %3 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %tobool3 = icmp eq float* %3, null
  br i1 %tobool3, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #27
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %5 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !188
  %tobool10 = icmp eq %struct.kiss_fftr_state* %5, null
  br i1 %tobool10, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end9
  %6 = bitcast %struct.kiss_fftr_state* %5 to i8*
  tail call void @free(i8* %6) #24
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %7 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !189
  %tobool14 = icmp eq %struct.kiss_fftr_state* %7, null
  br i1 %tobool14, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end13
  %8 = bitcast %struct.kiss_fftr_state* %7 to i8*
  tail call void @free(i8* %8) #24
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %9 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !190
  %tobool18 = icmp eq %struct.kiss_fft_cpx** %9, null
  br i1 %tobool18, label %if.end34, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end17
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc
  %isnull31 = icmp eq %struct.kiss_fft_cpx** %.pr, null
  br i1 %isnull31, label %if.end34, label %delete.notnull32

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %.pr90 = phi %struct.kiss_fft_cpx** [ %9, %for.cond.preheader ], [ %.pr, %for.inc ]
  %i.089 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc ]
  %idxprom = zext i32 %i.089 to i64
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pr90, i64 %idxprom
  %11 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx, align 8, !tbaa !43
  %tobool21 = icmp eq %struct.kiss_fft_cpx* %11, null
  br i1 %tobool21, label %for.inc, label %delete.notnull27

delete.notnull27:                                 ; preds = %for.body
  %12 = bitcast %struct.kiss_fft_cpx* %11 to i8*
  tail call void @_ZdaPv(i8* %12) #27
  %.pr.pre = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !190
  br label %for.inc

for.inc:                                          ; preds = %delete.notnull27, %for.body
  %.pr = phi %struct.kiss_fft_cpx** [ %.pr90, %for.body ], [ %.pr.pre, %delete.notnull27 ]
  %inc = add i32 %i.089, 1
  %13 = load i32, i32* %10, align 8, !tbaa !61
  %cmp = icmp ugt i32 %inc, %13
  br i1 %cmp, label %for.cond.cleanup, label %for.body

delete.notnull32:                                 ; preds = %for.cond.cleanup
  %14 = bitcast %struct.kiss_fft_cpx** %.pr to i8*
  tail call void @_ZdaPv(i8* %14) #27
  br label %if.end34

if.end34:                                         ; preds = %delete.notnull32, %for.cond.cleanup, %if.end17
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %15 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !191
  %tobool35 = icmp eq %struct.kiss_fft_cpx* %15, null
  br i1 %tobool35, label %if.end41, label %delete.notnull39

delete.notnull39:                                 ; preds = %if.end34
  %16 = bitcast %struct.kiss_fft_cpx* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #27
  br label %if.end41

if.end41:                                         ; preds = %delete.notnull39, %if.end34
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %17 = load float**, float*** %m_pfOverlap, align 8, !tbaa !192
  %tobool42 = icmp eq float** %17, null
  br i1 %tobool42, label %if.end68, label %for.cond45.preheader

for.cond45.preheader:                             ; preds = %if.end41
  %18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %19 = load i32, i32* %18, align 8, !tbaa !65
  %cmp4687 = icmp eq i32 %19, 0
  br i1 %cmp4687, label %delete.notnull66, label %for.body48

for.cond.cleanup47:                               ; preds = %for.inc61
  %isnull65 = icmp eq float** %.pr85, null
  br i1 %isnull65, label %if.end68, label %delete.notnull66

for.body48:                                       ; preds = %for.inc61, %for.cond45.preheader
  %20 = phi i32 [ %23, %for.inc61 ], [ %19, %for.cond45.preheader ]
  %.pr8592 = phi float** [ %.pr85, %for.inc61 ], [ %17, %for.cond45.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc61 ], [ 0, %for.cond45.preheader ]
  %arrayidx51 = getelementptr inbounds float*, float** %.pr8592, i64 %indvars.iv
  %21 = load float*, float** %arrayidx51, align 8, !tbaa !43
  %tobool52 = icmp eq float* %21, null
  br i1 %tobool52, label %for.inc61, label %delete.notnull58

delete.notnull58:                                 ; preds = %for.body48
  %22 = bitcast float* %21 to i8*
  tail call void @_ZdaPv(i8* %22) #27
  %.pr85.pre = load float**, float*** %m_pfOverlap, align 8, !tbaa !192
  %.pre = load i32, i32* %18, align 8, !tbaa !65
  br label %for.inc61

for.inc61:                                        ; preds = %delete.notnull58, %for.body48
  %23 = phi i32 [ %20, %for.body48 ], [ %.pre, %delete.notnull58 ]
  %.pr85 = phi float** [ %.pr8592, %for.body48 ], [ %.pr85.pre, %delete.notnull58 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = zext i32 %23 to i64
  %cmp46 = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47

delete.notnull66:                                 ; preds = %for.cond.cleanup47, %for.cond45.preheader
  %.lcssa96 = phi float** [ %.pr85, %for.cond.cleanup47 ], [ %17, %for.cond45.preheader ]
  %25 = bitcast float** %.lcssa96 to i8*
  tail call void @_ZdaPv(i8* %25) #27
  br label %if.end68

if.end68:                                         ; preds = %delete.notnull66, %for.cond.cleanup47, %if.end41
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD0Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* %this) #24
  %0 = bitcast %class.CAmbisonicProcessor* %this to i8*
  tail call void @_ZdlPv(i8* %0) #27
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nBlockSize, i32 %nMisc) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %pfPsychIR = alloca %"class.std::vector.7", align 8
  %ref.tmp = alloca float*, align 8
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !64
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !65
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %tobool4 = icmp eq float* %3, null
  br i1 %tobool4, label %if.end7, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #27
  %.pre = load i32, i32* %2, align 8, !tbaa !65
  br label %if.end7

if.end7:                                          ; preds = %delete.notnull, %entry
  %5 = phi i32 [ %call.i, %entry ], [ %.pre, %delete.notnull ]
  %conv = zext i32 %5 to i64
  %6 = shl nuw nsw i64 %conv, 2
  %call8 = tail call i8* @_Znam(i64 %6) #26
  %7 = bitcast float** %m_pfTempSample to i8**
  store i8* %call8, i8** %7, align 8, !tbaa !185
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call8, i8 0, i64 %6, i1 false)
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 1, i8* %8, align 4, !tbaa !66
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  store i32 %nBlockSize, i32* %m_nBlockSize, align 4, !tbaa !193
  %m_nTaps = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 9
  store i32 101, i32* %m_nTaps, align 8, !tbaa !194
  %cmp = icmp ult i32 %nBlockSize, 101
  %sub = add i32 %nBlockSize, -1
  %cond = select i1 %cmp, i32 %sub, i32 100
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !195
  %add = add i32 %nBlockSize, 101
  %add22 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end7
  %storemerge = phi i32 [ 1, %if.end7 ], [ %shl, %while.cond ]
  %cmp23 = icmp ult i32 %storemerge, %add22
  %shl = shl i32 %storemerge, 1
  br i1 %cmp23, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !196
  %div = lshr i32 %storemerge, 1
  %add26 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  store i32 %add26, i32* %m_nFFTBins, align 8, !tbaa !197
  %conv28 = uitofp i32 %storemerge to float
  %div29 = fdiv float 1.000000e+00, %conv28
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  store float %div29, float* %m_fFFTScaler, align 4, !tbaa !198
  %9 = shl nuw nsw i64 %conv, 3
  %call32 = tail call i8* @_Znam(i64 %9) #26
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %10 = bitcast float*** %m_pfOverlap to i8**
  store i8* %call32, i8** %10, align 8, !tbaa !192
  %cmp34314 = icmp eq i32 %5, 0
  br i1 %cmp34314, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %while.end
  %conv36 = zext i32 %cond to i64
  %11 = shl nuw nsw i64 %conv36, 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %while.end
  %conv40 = zext i32 %storemerge to i64
  %12 = shl nuw nsw i64 %conv40, 2
  %call41 = tail call i8* @_Znam(i64 %12) #26
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %13 = bitcast float** %m_pfScratchBufferA to i8**
  store i8* %call41, i8** %13, align 8, !tbaa !187
  %14 = load i32, i32* %0, align 8, !tbaa !61
  %add42 = add i32 %14, 1
  %conv43 = zext i32 %add42 to i64
  %15 = shl nuw nsw i64 %conv43, 3
  %call44 = tail call i8* @_Znam(i64 %15) #26
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %16 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8**
  store i8* %call44, i8** %16, align 8, !tbaa !190
  %conv61 = zext i32 %add26 to i64
  %17 = shl nuw nsw i64 %conv61, 3
  %call62311 = tail call i8* @_Znam(i64 %17) #26
  %18 = bitcast i8* %call44 to i8**
  store i8* %call62311, i8** %18, align 8, !tbaa !43
  %cmp48328 = icmp eq i32 %14, 0
  %call62329 = tail call i8* @_Znam(i64 %17) #26
  br i1 %cmp48328, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv320 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next321, %for.body ]
  %call37 = tail call i8* @_Znam(i64 %11) #26
  %19 = load float**, float*** %m_pfOverlap, align 8, !tbaa !192
  %arrayidx = getelementptr inbounds float*, float** %19, i64 %indvars.iv320
  %20 = bitcast float** %arrayidx to i8**
  store i8* %call37, i8** %20, align 8, !tbaa !43
  %indvars.iv.next321 = add nuw nsw i64 %indvars.iv320, 1
  %exitcond = icmp eq i64 %indvars.iv.next321, %conv
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

for.cond.cleanup49:                               ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62.lcssa = phi i8* [ %call62329, %for.cond.cleanup ], [ %call62, %for.body50.for.body50_crit_edge ]
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %21 = bitcast %struct.kiss_fft_cpx** %m_pcpScratch to i8**
  store i8* %call62.lcssa, i8** %21, align 8, !tbaa !191
  %22 = bitcast %"class.std::vector.7"* %pfPsychIR to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #24
  %23 = bitcast float** %ref.tmp to i8*
  %24 = bitcast float** %ref.tmp to i8**
  %_M_finish.i263 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 1
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 2
  br label %for.body68

for.body50.for.body50_crit_edge:                  ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62331 = phi i8* [ %call62, %for.body50.for.body50_crit_edge ], [ %call62329, %for.cond.cleanup ]
  %inc58330 = phi i32 [ %inc58, %for.body50.for.body50_crit_edge ], [ 1, %for.cond.cleanup ]
  %.pre322 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !190
  %idxprom55 = zext i32 %inc58330 to i64
  %arrayidx56 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre322, i64 %idxprom55
  %25 = bitcast %struct.kiss_fft_cpx** %arrayidx56 to i8**
  store i8* %call62331, i8** %25, align 8, !tbaa !43
  %inc58 = add i32 %inc58330, 1
  %cmp48 = icmp ugt i32 %inc58, %14
  %call62 = tail call i8* @_Znam(i64 %17) #26
  br i1 %cmp48, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.cond.cleanup67:                               ; preds = %invoke.cont72
  %26 = bitcast %class.CAmbisonicProcessor* %this to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %26, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 3
  %27 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  invoke void %27(%class.CAmbisonicProcessor* nonnull %this)
          to label %invoke.cont77 unwind label %lpad76

for.body68:                                       ; preds = %invoke.cont72.for.body68_crit_edge, %for.cond.cleanup49
  %28 = phi i32 [ %14, %for.cond.cleanup49 ], [ %36, %invoke.cont72.for.body68_crit_edge ]
  %29 = phi i32 [ 101, %for.cond.cleanup49 ], [ %.pre323, %invoke.cont72.for.body68_crit_edge ]
  %i63.0310 = phi i32 [ 0, %for.cond.cleanup49 ], [ %inc74, %invoke.cont72.for.body68_crit_edge ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #24
  %conv70 = zext i32 %29 to i64
  %30 = shl nuw nsw i64 %conv70, 2
  %call71 = invoke i8* @_Znam(i64 %30) #26
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body68
  store i8* %call71, i8** %24, align 8, !tbaa !43
  %31 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i263, align 8, !tbaa !199
  %32 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage.i, align 8, !tbaa !202
  %cmp.i = icmp eq %"class.std::unique_ptr.12"* %31, %32
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %invoke.cont
  %33 = ptrtoint i8* %call71 to i64
  %34 = bitcast %"class.std::unique_ptr.12"* %31 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !43
  %35 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i263, align 8, !tbaa !199
  %incdec.ptr.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %35, i64 1
  store %"class.std::unique_ptr.12"* %incdec.ptr.i, %"class.std::unique_ptr.12"** %_M_finish.i263, align 8, !tbaa !199
  br label %invoke.cont72

if.else.i:                                        ; preds = %invoke.cont
  invoke void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_(%"class.std::vector.7"* nonnull %pfPsychIR, %"class.std::unique_ptr.12"* %31, float** nonnull dereferenceable(8) %ref.tmp)
          to label %if.else.i.invoke.cont72_crit_edge unwind label %lpad

if.else.i.invoke.cont72_crit_edge:                ; preds = %if.else.i
  %.pre324 = load i32, i32* %0, align 8, !tbaa !61
  br label %invoke.cont72

invoke.cont72:                                    ; preds = %if.else.i.invoke.cont72_crit_edge, %if.then.i
  %36 = phi i32 [ %.pre324, %if.else.i.invoke.cont72_crit_edge ], [ %28, %if.then.i ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #24
  %inc74 = add i32 %i63.0310, 1
  %cmp66 = icmp ugt i32 %inc74, %36
  br i1 %cmp66, label %for.cond.cleanup67, label %invoke.cont72.for.body68_crit_edge

invoke.cont72.for.body68_crit_edge:               ; preds = %invoke.cont72
  %.pre323 = load i32, i32* %m_nTaps, align 8, !tbaa !194
  br label %for.body68

lpad:                                             ; preds = %if.else.i, %for.body68
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #24
  br label %ehcleanup214

invoke.cont77:                                    ; preds = %for.cond.cleanup67
  %40 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %call80 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %40, i32 0, i8* null, i64* null)
          to label %invoke.cont79 unwind label %lpad76

invoke.cont79:                                    ; preds = %invoke.cont77
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  store %struct.kiss_fftr_state* %call80, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !188
  %41 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %call83 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %41, i32 1, i8* null, i64* null)
          to label %invoke.cont82 unwind label %lpad76

invoke.cont82:                                    ; preds = %invoke.cont79
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  store %struct.kiss_fftr_state* %call83, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !189
  %42 = load i32, i32* %0, align 8, !tbaa !61
  %_M_start.i296 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0
  br label %for.cond90.preheader

for.cond90.preheader:                             ; preds = %for.inc211, %invoke.cont82
  %43 = phi i32 [ %42, %invoke.cont82 ], [ %73, %for.inc211 ]
  %i_m.0308 = phi i32 [ 0, %invoke.cont82 ], [ %inc212, %for.inc211 ]
  %44 = load i32, i32* %m_nTaps, align 8, !tbaa !194
  %cmp92305 = icmp eq i32 %44, 0
  br i1 %cmp92305, label %for.cond90.preheader.for.cond.cleanup93_crit_edge, label %for.body94.lr.ph

for.cond90.preheader.for.cond.cleanup93_crit_edge: ; preds = %for.cond90.preheader
  %.pre325 = zext i32 %i_m.0308 to i64
  br label %for.cond.cleanup93

for.body94.lr.ph:                                 ; preds = %for.cond90.preheader
  %45 = load i8, i8* %1, align 4, !tbaa !64, !range !67
  %tobool95 = icmp eq i8 %45, 0
  %idxprom127 = zext i32 %i_m.0308 to i64
  %46 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i296, align 8
  %_M_head_impl.i.i.i.i.i.i.i294 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %46, i64 %idxprom127, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = zext i32 %44 to i64
  br i1 %tobool95, label %for.body94.us, label %for.body94

for.body94.us:                                    ; preds = %for.inc185.us, %for.body94.lr.ph
  %indvars.iv318 = phi i64 [ %indvars.iv.next319, %for.inc185.us ], [ 0, %for.body94.lr.ph ]
  switch i32 %43, label %for.inc185.us [
    i32 1, label %sw.bb141.us
    i32 2, label %sw.bb155.us
    i32 3, label %sw.bb169.us
  ]

sw.bb169.us:                                      ; preds = %for.body94.us
  %arrayidx173.us = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* @_ZL14third_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv318
  br label %for.inc185.us.sink.split

sw.bb155.us:                                      ; preds = %for.body94.us
  %arrayidx159.us = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv318
  br label %for.inc185.us.sink.split

sw.bb141.us:                                      ; preds = %for.body94.us
  %arrayidx145.us = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv318
  br label %for.inc185.us.sink.split

for.inc185.us.sink.split:                         ; preds = %sw.bb141.us, %sw.bb155.us, %sw.bb169.us
  %arrayidx145.us.sink = phi i16* [ %arrayidx145.us, %sw.bb141.us ], [ %arrayidx159.us, %sw.bb155.us ], [ %arrayidx173.us, %sw.bb169.us ]
  %48 = load i16, i16* %arrayidx145.us.sink, align 2, !tbaa !45
  %conv147.us = sitofp i16 %48 to float
  %mul148.us = fmul float %conv147.us, 2.000000e+00
  %div149.us = fdiv float %mul148.us, 3.276700e+04
  %49 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i294, align 8, !tbaa !43
  %arrayidx.i291.us = getelementptr inbounds float, float* %49, i64 %indvars.iv318
  store float %div149.us, float* %arrayidx.i291.us, align 4, !tbaa !50
  br label %for.inc185.us

for.inc185.us:                                    ; preds = %for.inc185.us.sink.split, %for.body94.us
  %indvars.iv.next319 = add nuw nsw i64 %indvars.iv318, 1
  %cmp92.us = icmp ult i64 %indvars.iv.next319, %47
  br i1 %cmp92.us, label %for.body94.us, label %for.cond.cleanup93

for.cond.cleanup87:                               ; preds = %for.inc211
  %50 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i296, align 8, !tbaa !203
  %51 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i263, align 8, !tbaa !199
  %cmp3.i.i.i.i266 = icmp eq %"class.std::unique_ptr.12"* %50, %51
  br i1 %cmp3.i.i.i.i266, label %invoke.cont.i278, label %for.body.i.i.i.i270

for.body.i.i.i.i270:                              ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274, %for.cond.cleanup87
  %__first.addr.04.i.i.i.i267 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i272, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274 ], [ %50, %for.cond.cleanup87 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i268 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i268, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i269 = icmp eq float* %52, null
  br i1 %cmp.i.i.i.i.i.i269, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i271

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i271: ; preds = %for.body.i.i.i.i270
  %53 = bitcast float* %52 to i8*
  call void @_ZdaPv(i8* %53) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i271, %for.body.i.i.i.i270
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i268, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i272 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i267, i64 1
  %cmp.i.i.i.i273 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i272, %51
  br i1 %cmp.i.i.i.i273, label %invoke.cont.loopexit.i276, label %for.body.i.i.i.i270

invoke.cont.loopexit.i276:                        ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i274
  %.pre.i275 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i296, align 8, !tbaa !203
  br label %invoke.cont.i278

invoke.cont.i278:                                 ; preds = %invoke.cont.loopexit.i276, %for.cond.cleanup87
  %54 = phi %"class.std::unique_ptr.12"* [ %.pre.i275, %invoke.cont.loopexit.i276 ], [ %50, %for.cond.cleanup87 ]
  %tobool.i.i.i277 = icmp eq %"class.std::unique_ptr.12"* %54, null
  br i1 %tobool.i.i.i277, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit280, label %if.then.i.i.i279

if.then.i.i.i279:                                 ; preds = %invoke.cont.i278
  %55 = bitcast %"class.std::unique_ptr.12"* %54 to i8*
  call void @_ZdlPv(i8* nonnull %55) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit280

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit280: ; preds = %if.then.i.i.i279, %invoke.cont.i278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #24
  ret i1 true

lpad76:                                           ; preds = %invoke.cont79, %invoke.cont77, %for.cond.cleanup67
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  br label %ehcleanup214

for.cond.cleanup93:                               ; preds = %for.inc185, %for.inc185.us, %for.cond90.preheader.for.cond.cleanup93_crit_edge
  %conv189.pre-phi = phi i64 [ %.pre325, %for.cond90.preheader.for.cond.cleanup93_crit_edge ], [ %idxprom127, %for.inc185.us ], [ %idxprom127, %for.inc185 ]
  %59 = load i8*, i8** %13, align 8, !tbaa !187
  %60 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i296, align 8, !tbaa !203
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %60, i64 %conv189.pre-phi, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast float** %_M_head_impl.i.i.i.i.i.i to i8**
  %62 = load i8*, i8** %61, align 8, !tbaa !43
  %conv193 = zext i32 %44 to i64
  %mul194 = shl nuw nsw i64 %conv193, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %62, i64 %mul194, i1 false)
  %63 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %64 = load i32, i32* %m_nTaps, align 8, !tbaa !194
  %idxprom197 = zext i32 %64 to i64
  %arrayidx198 = getelementptr inbounds float, float* %63, i64 %idxprom197
  %65 = bitcast float* %arrayidx198 to i8*
  %66 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %sub201 = sub i32 %66, %64
  %conv202 = zext i32 %sub201 to i64
  %mul203 = shl nuw nsw i64 %conv202, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 %mul203, i1 false)
  %67 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !188
  %68 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %69 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !190
  %arrayidx208 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %69, i64 %conv189.pre-phi
  %70 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx208, align 8, !tbaa !43
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %67, float* %68, %struct.kiss_fft_cpx* %70)
          to label %for.inc211 unwind label %lpad209

for.body94:                                       ; preds = %for.inc185, %for.body94.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc185 ], [ 0, %for.body94.lr.ph ]
  switch i32 %43, label %for.inc185 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb112
    i32 3, label %sw.bb126
  ]

sw.bb:                                            ; preds = %for.body94
  %arrayidx101 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb112:                                         ; preds = %for.body94
  %arrayidx116 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb126:                                         ; preds = %for.body94
  %arrayidx130 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* bitcast (<{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }>* @_ZL14third_order_3D to [4 x [101 x i16]]*), i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

for.inc185.sink.split:                            ; preds = %sw.bb126, %sw.bb112, %sw.bb
  %arrayidx130.sink = phi i16* [ %arrayidx130, %sw.bb126 ], [ %arrayidx116, %sw.bb112 ], [ %arrayidx101, %sw.bb ]
  %71 = load i16, i16* %arrayidx130.sink, align 2, !tbaa !45
  %conv132 = sitofp i16 %71 to float
  %mul133 = fmul float %conv132, 2.000000e+00
  %div134 = fdiv float %mul133, 3.276700e+04
  %72 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i294, align 8, !tbaa !43
  %arrayidx.i295 = getelementptr inbounds float, float* %72, i64 %indvars.iv
  store float %div134, float* %arrayidx.i295, align 4, !tbaa !50
  br label %for.inc185

for.inc185:                                       ; preds = %for.inc185.sink.split, %for.body94
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp92 = icmp ult i64 %indvars.iv.next, %47
  br i1 %cmp92, label %for.body94, label %for.cond.cleanup93

for.inc211:                                       ; preds = %for.cond.cleanup93
  %inc212 = add i32 %i_m.0308, 1
  %73 = load i32, i32* %0, align 8, !tbaa !61
  %cmp86 = icmp ugt i32 %inc212, %73
  br i1 %cmp86, label %for.cond.cleanup87, label %for.cond90.preheader

lpad209:                                          ; preds = %for.cond.cleanup93
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  br label %ehcleanup214

ehcleanup214:                                     ; preds = %lpad209, %lpad76, %lpad
  %exn.slot.0 = phi i8* [ %38, %lpad ], [ %75, %lpad209 ], [ %57, %lpad76 ]
  %ehselector.slot.0 = phi i32 [ %39, %lpad ], [ %76, %lpad209 ], [ %58, %lpad76 ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i, align 8, !tbaa !203
  %78 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i263, align 8, !tbaa !199
  %cmp3.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %77, %78
  br i1 %cmp3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, %ehcleanup214
  %__first.addr.04.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i ], [ %77, %ehcleanup214 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i = icmp eq float* %79, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %80 = bitcast float* %79 to i8*
  call void @_ZdaPv(i8* %80) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i, %for.body.i.i.i.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i, %78
  br i1 %cmp.i.i.i.i, label %invoke.cont.loopexit.i, label %for.body.i.i.i.i

invoke.cont.loopexit.i:                           ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i, align 8, !tbaa !203
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.loopexit.i, %ehcleanup214
  %81 = phi %"class.std::unique_ptr.12"* [ %.pre.i, %invoke.cont.loopexit.i ], [ %77, %ehcleanup214 ]
  %tobool.i.i.i = icmp eq %"class.std::unique_ptr.12"* %81, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont.i
  %82 = bitcast %"class.std::unique_ptr.12"* %81 to i8*
  call void @_ZdlPv(i8* nonnull %82) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit: ; preds = %if.then.i.i.i, %invoke.cont.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0
  %lpad.val218 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1
  resume { i8*, i32 } %lpad.val218
}

declare %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) local_unnamed_addr #0

declare void @kiss_fftr(%struct.kiss_fftr_state*, float*, %struct.kiss_fft_cpx*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor5ResetEv(%class.CAmbisonicProcessor* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load float**, float*** %m_pfOverlap, align 8, !tbaa !192
  %arrayidx = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %3 = bitcast float** %arrayidx to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !43
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !195
  %conv = zext i32 %5 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %0, align 8, !tbaa !65
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor7RefreshEv(%class.CAmbisonicProcessor* %this) unnamed_addr #9 align 2 {
entry:
  %fAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 3
  %0 = load float, float* %fAlpha, align 4, !tbaa !204
  %call = tail call float @cosf(float %0) #24
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  store float %call, float* %m_fCosAlpha, align 8, !tbaa !205
  %1 = load float, float* %fAlpha, align 4, !tbaa !204
  %call4 = tail call float @sinf(float %1) #24
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  store float %call4, float* %m_fSinAlpha, align 4, !tbaa !206
  %fBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 4
  %2 = load float, float* %fBeta, align 8, !tbaa !207
  %call6 = tail call float @cosf(float %2) #24
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  store float %call6, float* %m_fCosBeta, align 8, !tbaa !208
  %3 = load float, float* %fBeta, align 8, !tbaa !207
  %call9 = tail call float @sinf(float %3) #24
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  store float %call9, float* %m_fSinBeta, align 4, !tbaa !209
  %fGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 5
  %4 = load float, float* %fGamma, align 4, !tbaa !210
  %call11 = tail call float @cosf(float %4) #24
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  store float %call11, float* %m_fCosGamma, align 8, !tbaa !211
  %5 = load float, float* %fGamma, align 4, !tbaa !210
  %call14 = tail call float @sinf(float %5) #24
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  store float %call14, float* %m_fSinGamma, align 4, !tbaa !212
  %6 = load float, float* %fAlpha, align 4, !tbaa !204
  %mul = fmul float %6, 2.000000e+00
  %call17 = tail call float @cosf(float %mul) #24
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  store float %call17, float* %m_fCos2Alpha, align 8, !tbaa !213
  %7 = load float, float* %fAlpha, align 4, !tbaa !204
  %mul20 = fmul float %7, 2.000000e+00
  %call21 = tail call float @sinf(float %mul20) #24
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  store float %call21, float* %m_fSin2Alpha, align 4, !tbaa !214
  %8 = load float, float* %fBeta, align 8, !tbaa !207
  %mul24 = fmul float %8, 2.000000e+00
  %call25 = tail call float @cosf(float %mul24) #24
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  store float %call25, float* %m_fCos2Beta, align 8, !tbaa !215
  %9 = load float, float* %fBeta, align 8, !tbaa !207
  %mul28 = fmul float %9, 2.000000e+00
  %call29 = tail call float @sinf(float %mul28) #24
  %m_fSin2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 24
  store float %call29, float* %m_fSin2Beta, align 4, !tbaa !216
  %10 = load float, float* %fGamma, align 4, !tbaa !210
  %mul32 = fmul float %10, 2.000000e+00
  %call33 = tail call float @cosf(float %mul32) #24
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  store float %call33, float* %m_fCos2Gamma, align 8, !tbaa !217
  %11 = load float, float* %fGamma, align 4, !tbaa !210
  %mul36 = fmul float %11, 2.000000e+00
  %call37 = tail call float @sinf(float %mul36) #24
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  store float %call37, float* %m_fSin2Gamma, align 4, !tbaa !218
  %12 = load float, float* %fAlpha, align 4, !tbaa !204
  %mul40 = fmul float %12, 3.000000e+00
  %call41 = tail call float @cosf(float %mul40) #24
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  store float %call41, float* %m_fCos3Alpha, align 8, !tbaa !219
  %13 = load float, float* %fAlpha, align 4, !tbaa !204
  %mul44 = fmul float %13, 3.000000e+00
  %call45 = tail call float @sinf(float %mul44) #24
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  store float %call45, float* %m_fSin3Alpha, align 4, !tbaa !220
  %14 = load float, float* %fBeta, align 8, !tbaa !207
  %mul48 = fmul float %14, 3.000000e+00
  %call49 = tail call float @cosf(float %mul48) #24
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  store float %call49, float* %m_fCos3Beta, align 8, !tbaa !221
  %15 = load float, float* %fBeta, align 8, !tbaa !207
  %mul52 = fmul float %15, 3.000000e+00
  %call53 = tail call float @sinf(float %mul52) #24
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  store float %call53, float* %m_fSin3Beta, align 4, !tbaa !222
  %16 = load float, float* %fGamma, align 4, !tbaa !210
  %mul56 = fmul float %16, 3.000000e+00
  %call57 = tail call float @cosf(float %mul56) #24
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  store float %call57, float* %m_fCos3Gamma, align 8, !tbaa !223
  %17 = load float, float* %fGamma, align 4, !tbaa !210
  %mul60 = fmul float %17, 3.000000e+00
  %call61 = tail call float @sinf(float %mul60) #24
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  store float %call61, float* %m_fSin3Gamma, align 4, !tbaa !224
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* nocapture %this, %class.Orientation* nocapture readonly byval(%class.Orientation) align 8 %orientation) local_unnamed_addr #7 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %m_orientation to i8*
  %1 = bitcast %class.Orientation* %orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !225
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14GetOrientationEv(%class.Orientation* noalias nocapture sret %agg.result, %class.CAmbisonicProcessor* nocapture readonly %this) local_unnamed_addr #7 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %agg.result to i8*
  %1 = bitcast %class.Orientation* %m_orientation to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !225
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  %1 = load i8, i8* %0, align 4, !tbaa !66, !range !67
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !61
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end11, label %if.end3

if.end3:                                          ; preds = %if.end
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr = load i32, i32* %2, align 8, !tbaa !61
  %cmp5 = icmp ugt i32 %.pr, 1
  br i1 %cmp5, label %if.end7, label %if.end11

if.end7:                                          ; preds = %if.end3
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr19 = load i32, i32* %2, align 8, !tbaa !61
  %cmp9 = icmp ugt i32 %.pr19, 2
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7, %if.end3, %if.end
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfScratchBufferA to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !187
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !65
  %cmp167 = icmp eq i32 %4, 0
  br i1 %cmp167, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %scevgep192 = getelementptr %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %scevgep192193 = bitcast float* %scevgep192 to i8*
  %uglygep = getelementptr i8, i8* %scevgep192193, i64 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup91, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup91, %for.body.lr.ph
  %indvars.iv173 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next174, %for.cond.cleanup91 ]
  %5 = trunc i64 %indvars.iv173 to i32
  %conv.i = uitofp i32 %5 to double
  %call.i = tail call double @sqrt(double %conv.i) #24
  %6 = load i8*, i8** %0, align 8, !tbaa !187
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 %indvars.iv173
  %8 = bitcast float** %arrayidx.i to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !43
  %10 = load i32, i32* %m_nBlockSize, align 4, !tbaa !193
  %conv6 = zext i32 %10 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul7, i1 false)
  %11 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %12 = load i32, i32* %m_nBlockSize, align 4, !tbaa !193
  %idxprom = zext i32 %12 to i64
  %arrayidx = getelementptr inbounds float, float* %11, i64 %idxprom
  %13 = bitcast float* %arrayidx to i8*
  %14 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %sub = sub i32 %14, %12
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 %mul13, i1 false)
  %15 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !188
  %16 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !191
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %15, float* %16, %struct.kiss_fft_cpx* %17)
  %18 = load i32, i32* %m_nFFTBins, align 8, !tbaa !197
  %cmp16158 = icmp eq i32 %18, 0
  br i1 %cmp16158, label %for.cond.cleanup17, label %for.body18.lr.ph

for.body18.lr.ph:                                 ; preds = %for.body
  %conv2 = fptosi double %call.i to i32
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !191
  %20 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !190
  %idxprom22 = zext i32 %conv2 to i64
  %arrayidx23 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %20, i64 %idxprom22
  %21 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx23, align 8, !tbaa !43
  br label %for.body18

for.cond.cleanup17:                               ; preds = %for.body18, %for.body
  %22 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !189
  %23 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !191
  %24 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %22, %struct.kiss_fft_cpx* %23, float* %24)
  %25 = load i32, i32* %m_nFFTSize, align 8, !tbaa !196
  %cmp71160 = icmp eq i32 %25, 0
  br i1 %cmp71160, label %for.cond.cleanup17.for.cond.cleanup72_crit_edge, label %for.body73.lr.ph

for.cond.cleanup17.for.cond.cleanup72_crit_edge:  ; preds = %for.cond.cleanup17
  %.pre = load i8*, i8** %0, align 8, !tbaa !187
  br label %for.cond.cleanup72

for.body73.lr.ph:                                 ; preds = %for.cond.cleanup17
  %26 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %27 = bitcast float* %26 to i8*
  %28 = zext i32 %25 to i64
  %min.iters.check188 = icmp ult i32 %25, 8
  br i1 %min.iters.check188, label %for.body73.preheader, label %vector.memcheck198

for.body73.preheader:                             ; preds = %middle.block186, %vector.memcheck198, %for.body73.lr.ph
  %indvars.iv169.ph = phi i64 [ 0, %vector.memcheck198 ], [ 0, %for.body73.lr.ph ], [ %n.vec201, %middle.block186 ]
  br label %for.body73

vector.memcheck198:                               ; preds = %for.body73.lr.ph
  %scevgep190 = getelementptr float, float* %26, i64 %28
  %bound0194 = icmp ugt i8* %uglygep, %27
  %bound1195 = icmp ult float* %m_fFFTScaler, %scevgep190
  %found.conflict196 = and i1 %bound0194, %bound1195
  br i1 %found.conflict196, label %for.body73.preheader, label %vector.ph199

vector.ph199:                                     ; preds = %vector.memcheck198
  %n.vec201 = and i64 %28, 4294967288
  %29 = add nsw i64 %n.vec201, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %xtraiter = and i64 %31, 1
  %32 = icmp eq i64 %29, 0
  br i1 %32, label %middle.block186.unr-lcssa, label %vector.ph199.new

vector.ph199.new:                                 ; preds = %vector.ph199
  %unroll_iter = sub nuw nsw i64 %31, %xtraiter
  %33 = load float, float* %m_fFFTScaler, align 4, !tbaa !198, !alias.scope !226
  %34 = insertelement <4 x float> undef, float %33, i32 0
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <4 x i32> zeroinitializer
  %36 = insertelement <4 x float> undef, float %33, i32 0
  %37 = shufflevector <4 x float> %36, <4 x float> undef, <4 x i32> zeroinitializer
  %38 = load float, float* %m_fFFTScaler, align 4, !tbaa !198, !alias.scope !226
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body185

vector.body185:                                   ; preds = %vector.body185, %vector.ph199.new
  %index202 = phi i64 [ 0, %vector.ph199.new ], [ %index.next203.1, %vector.body185 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph199.new ], [ %niter.nsub.1, %vector.body185 ]
  %43 = getelementptr inbounds float, float* %26, i64 %index202
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load210 = load <4 x float>, <4 x float>* %44, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load211 = load <4 x float>, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %47 = fmul <4 x float> %35, %wide.load210
  %48 = fmul <4 x float> %37, %wide.load211
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %index.next203 = or i64 %index202, 8
  %51 = getelementptr inbounds float, float* %26, i64 %index.next203
  %52 = bitcast float* %51 to <4 x float>*
  %wide.load210.1 = load <4 x float>, <4 x float>* %52, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load211.1 = load <4 x float>, <4 x float>* %54, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %55 = fmul <4 x float> %40, %wide.load210.1
  %56 = fmul <4 x float> %42, %wide.load211.1
  %57 = bitcast float* %51 to <4 x float>*
  store <4 x float> %55, <4 x float>* %57, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %58 = bitcast float* %53 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %index.next203.1 = add i64 %index202, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block186.unr-lcssa, label %vector.body185, !llvm.loop !231

middle.block186.unr-lcssa:                        ; preds = %vector.body185, %vector.ph199
  %index202.unr = phi i64 [ 0, %vector.ph199 ], [ %index.next203.1, %vector.body185 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block186, label %vector.body185.epil

vector.body185.epil:                              ; preds = %middle.block186.unr-lcssa
  %59 = load float, float* %m_fFFTScaler, align 4, !tbaa !198, !alias.scope !226
  %60 = insertelement <4 x float> undef, float %59, i32 0
  %61 = shufflevector <4 x float> %60, <4 x float> undef, <4 x i32> zeroinitializer
  %62 = insertelement <4 x float> undef, float %59, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = getelementptr inbounds float, float* %26, i64 %index202.unr
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load210.epil = load <4 x float>, <4 x float>* %65, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load211.epil = load <4 x float>, <4 x float>* %67, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %68 = fmul <4 x float> %61, %wide.load210.epil
  %69 = fmul <4 x float> %63, %wide.load211.epil
  %70 = bitcast float* %64 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !50, !alias.scope !229, !noalias !226
  br label %middle.block186

middle.block186:                                  ; preds = %vector.body185.epil, %middle.block186.unr-lcssa
  %cmp.n205 = icmp eq i64 %n.vec201, %28
  br i1 %cmp.n205, label %for.cond.cleanup72, label %for.body73.preheader

for.body18:                                       ; preds = %for.body18, %for.body18.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next, %for.body18 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 0
  %72 = load float, float* %r, align 4, !tbaa !232
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 0
  %73 = load float, float* %r26, align 4, !tbaa !232
  %mul27 = fmul float %72, %73
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 1
  %74 = load float, float* %i, align 4, !tbaa !234
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 1
  %75 = load float, float* %i36, align 4, !tbaa !234
  %mul37 = fmul float %74, %75
  %sub38 = fsub float %mul27, %mul37
  %mul50 = fmul float %72, %75
  %mul61 = fmul float %73, %74
  %add = fadd float %mul61, %mul50
  store float %sub38, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %76 = load i32, i32* %m_nFFTBins, align 8, !tbaa !197
  %77 = zext i32 %76 to i64
  %cmp16 = icmp ult i64 %indvars.iv.next, %77
  br i1 %cmp16, label %for.body18, label %for.cond.cleanup17

for.cond.cleanup72:                               ; preds = %for.body73, %middle.block186, %for.cond.cleanup17.for.cond.cleanup72_crit_edge
  %78 = phi i8* [ %.pre, %for.cond.cleanup17.for.cond.cleanup72_crit_edge ], [ %27, %middle.block186 ], [ %27, %for.body73 ]
  %79 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i157 = getelementptr inbounds float*, float** %79, i64 %indvars.iv173
  %80 = bitcast float** %arrayidx.i157 to i8**
  %81 = load i8*, i8** %80, align 8, !tbaa !43
  %82 = load i32, i32* %m_nBlockSize, align 4, !tbaa !193
  %conv86 = zext i32 %82 to i64
  %mul87 = shl nuw nsw i64 %conv86, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %78, i64 %mul87, i1 false)
  %83 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !195
  %cmp90162 = icmp eq i32 %83, 0
  %84 = load float**, float*** %m_pfOverlap, align 8, !tbaa !192
  %arrayidx94163 = getelementptr inbounds float*, float** %84, i64 %indvars.iv173
  br i1 %cmp90162, label %for.cond.cleanup72.for.cond.cleanup91_crit_edge, label %for.body92.lr.ph

for.cond.cleanup72.for.cond.cleanup91_crit_edge:  ; preds = %for.cond.cleanup72
  %.phi.trans.insert = bitcast float** %arrayidx94163 to i8**
  %.pre176 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !43
  br label %for.cond.cleanup91

for.body92.lr.ph:                                 ; preds = %for.cond.cleanup72
  %85 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i155 = getelementptr inbounds float*, float** %85, i64 %indvars.iv173
  %86 = load float*, float** %arrayidx.i155, align 8, !tbaa !43
  %87 = zext i32 %83 to i64
  %.pre175 = load float*, float** %arrayidx94163, align 8, !tbaa !43
  %88 = bitcast float* %.pre175 to i8*
  %min.iters.check = icmp ult i32 %83, 8
  br i1 %min.iters.check, label %for.body92.preheader, label %vector.memcheck

for.body92.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body92.lr.ph
  %indvars.iv171.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body92.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body92

vector.memcheck:                                  ; preds = %for.body92.lr.ph
  %scevgep = getelementptr float, float* %86, i64 %87
  %scevgep179 = getelementptr float, float* %.pre175, i64 %87
  %bound0 = icmp ult float* %86, %scevgep179
  %bound1 = icmp ult float* %.pre175, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body92.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %87, 4294967288
  %89 = add nsw i64 %n.vec, -8
  %90 = lshr exact i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %xtraiter212 = and i64 %91, 1
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter214 = sub nuw nsw i64 %91, %xtraiter212
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter215 = phi i64 [ %unroll_iter214, %vector.ph.new ], [ %niter215.nsub.1, %vector.body ]
  %93 = getelementptr inbounds float, float* %.pre175, i64 %index
  %94 = bitcast float* %93 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %94, align 4, !tbaa !50, !alias.scope !235
  %95 = getelementptr inbounds float, float* %93, i64 4
  %96 = bitcast float* %95 to <4 x float>*
  %wide.load182 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !235
  %97 = getelementptr inbounds float, float* %86, i64 %index
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load183 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load184 = load <4 x float>, <4 x float>* %100, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %101 = fadd <4 x float> %wide.load, %wide.load183
  %102 = fadd <4 x float> %wide.load182, %wide.load184
  %103 = bitcast float* %97 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %104 = bitcast float* %99 to <4 x float>*
  store <4 x float> %102, <4 x float>* %104, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %index.next = or i64 %index, 8
  %105 = getelementptr inbounds float, float* %.pre175, i64 %index.next
  %106 = bitcast float* %105 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %106, align 4, !tbaa !50, !alias.scope !235
  %107 = getelementptr inbounds float, float* %105, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load182.1 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !50, !alias.scope !235
  %109 = getelementptr inbounds float, float* %86, i64 %index.next
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load183.1 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %111 = getelementptr inbounds float, float* %109, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  %wide.load184.1 = load <4 x float>, <4 x float>* %112, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %113 = fadd <4 x float> %wide.load.1, %wide.load183.1
  %114 = fadd <4 x float> %wide.load182.1, %wide.load184.1
  %115 = bitcast float* %109 to <4 x float>*
  store <4 x float> %113, <4 x float>* %115, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %116 = bitcast float* %111 to <4 x float>*
  store <4 x float> %114, <4 x float>* %116, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %index.next.1 = add i64 %index, 16
  %niter215.nsub.1 = add i64 %niter215, -2
  %niter215.ncmp.1 = icmp eq i64 %niter215.nsub.1, 0
  br i1 %niter215.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !240

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod213 = icmp eq i64 %xtraiter212, 0
  br i1 %lcmp.mod213, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %117 = getelementptr inbounds float, float* %.pre175, i64 %index.unr
  %118 = bitcast float* %117 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %118, align 4, !tbaa !50, !alias.scope !235
  %119 = getelementptr inbounds float, float* %117, i64 4
  %120 = bitcast float* %119 to <4 x float>*
  %wide.load182.epil = load <4 x float>, <4 x float>* %120, align 4, !tbaa !50, !alias.scope !235
  %121 = getelementptr inbounds float, float* %86, i64 %index.unr
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load183.epil = load <4 x float>, <4 x float>* %122, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %123 = getelementptr inbounds float, float* %121, i64 4
  %124 = bitcast float* %123 to <4 x float>*
  %wide.load184.epil = load <4 x float>, <4 x float>* %124, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %125 = fadd <4 x float> %wide.load.epil, %wide.load183.epil
  %126 = fadd <4 x float> %wide.load182.epil, %wide.load184.epil
  %127 = bitcast float* %121 to <4 x float>*
  store <4 x float> %125, <4 x float>* %127, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  %128 = bitcast float* %123 to <4 x float>*
  store <4 x float> %126, <4 x float>* %128, align 4, !tbaa !50, !alias.scope !238, !noalias !235
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %87
  br i1 %cmp.n, label %for.cond.cleanup91, label %for.body92.preheader

for.body73:                                       ; preds = %for.body73, %for.body73.preheader
  %indvars.iv169 = phi i64 [ %indvars.iv.next170, %for.body73 ], [ %indvars.iv169.ph, %for.body73.preheader ]
  %129 = load float, float* %m_fFFTScaler, align 4, !tbaa !198
  %arrayidx76 = getelementptr inbounds float, float* %26, i64 %indvars.iv169
  %130 = load float, float* %arrayidx76, align 4, !tbaa !50
  %mul77 = fmul float %129, %130
  store float %mul77, float* %arrayidx76, align 4, !tbaa !50
  %indvars.iv.next170 = add nuw nsw i64 %indvars.iv169, 1
  %cmp71 = icmp ult i64 %indvars.iv.next170, %28
  br i1 %cmp71, label %for.body73, label %for.cond.cleanup72, !llvm.loop !241

for.cond.cleanup91:                               ; preds = %for.body92, %middle.block, %for.cond.cleanup72.for.cond.cleanup91_crit_edge
  %131 = phi i8* [ %.pre176, %for.cond.cleanup72.for.cond.cleanup91_crit_edge ], [ %88, %middle.block ], [ %88, %for.body92 ]
  %132 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !187
  %133 = load i32, i32* %m_nBlockSize, align 4, !tbaa !193
  %idxprom111 = zext i32 %133 to i64
  %arrayidx112 = getelementptr inbounds float, float* %132, i64 %idxprom111
  %134 = bitcast float* %arrayidx112 to i8*
  %conv114 = zext i32 %83 to i64
  %mul115 = shl nuw nsw i64 %conv114, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %134, i64 %mul115, i1 false)
  %indvars.iv.next174 = add nuw nsw i64 %indvars.iv173, 1
  %135 = load i32, i32* %3, align 8, !tbaa !65
  %136 = zext i32 %135 to i64
  %cmp = icmp ult i64 %indvars.iv.next174, %136
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body92:                                       ; preds = %for.body92, %for.body92.preheader
  %indvars.iv171 = phi i64 [ %indvars.iv.next172, %for.body92 ], [ %indvars.iv171.ph, %for.body92.preheader ]
  %arrayidx96 = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv171
  %137 = load float, float* %arrayidx96, align 4, !tbaa !50
  %arrayidx101 = getelementptr inbounds float, float* %86, i64 %indvars.iv171
  %138 = load float, float* %arrayidx101, align 4, !tbaa !50
  %add102 = fadd float %137, %138
  store float %add102, float* %arrayidx101, align 4, !tbaa !50
  %indvars.iv.next172 = add nuw nsw i64 %indvars.iv171, 1
  %cmp90 = icmp ult i64 %indvars.iv.next172, %87
  br i1 %cmp90, label %for.body92, label %for.cond.cleanup91, !llvm.loop !242
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #12 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp175 = icmp eq i32 %nSamples, 0
  br i1 %cmp175, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 3
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i174 = getelementptr inbounds float*, float** %0, i64 1
  %2 = load float*, float** %arrayidx.i174, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx7 = getelementptr inbounds float, float* %3, i64 1
  %arrayidx.i172 = getelementptr inbounds float*, float** %0, i64 2
  %4 = load float*, float** %arrayidx.i172, align 8, !tbaa !43
  %arrayidx13 = getelementptr inbounds float, float* %3, i64 2
  %5 = bitcast float* %arrayidx13 to i32*
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 3
  %6 = bitcast float* %arrayidx7 to i32*
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %7 = load float, float* %arrayidx, align 4, !tbaa !50
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %9 = fmul float %7, %8
  %arrayidx5 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !50
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul6 = fmul float %10, %11
  %add = fsub float %mul6, %9
  store float %add, float* %arrayidx7, align 4, !tbaa !50
  %arrayidx11 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %12 = bitcast float* %arrayidx11 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !50
  store i32 %13, i32* %5, align 4, !tbaa !50
  %14 = load float, float* %arrayidx, align 4, !tbaa !50
  %15 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul19 = fmul float %14, %15
  %16 = load float, float* %arrayidx5, align 4, !tbaa !50
  %17 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %mul25 = fmul float %16, %17
  %add26 = fadd float %mul19, %mul25
  store float %add26, float* %arrayidx28, align 4, !tbaa !50
  %18 = bitcast float* %arrayidx5 to i32*
  store float %add, float* %arrayidx5, align 4, !tbaa !50
  %19 = load float, float* %arrayidx13, align 4, !tbaa !50
  %20 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul37 = fmul float %19, %20
  %21 = load float, float* %arrayidx28, align 4, !tbaa !50
  %22 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul40 = fmul float %21, %22
  %add41 = fadd float %mul37, %mul40
  store float %add41, float* %arrayidx11, align 4, !tbaa !50
  %23 = load float, float* %arrayidx28, align 4, !tbaa !50
  %24 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul49 = fmul float %23, %24
  %25 = load float, float* %arrayidx13, align 4, !tbaa !50
  %26 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul53 = fmul float %25, %26
  %sub54 = fsub float %mul49, %mul53
  store float %sub54, float* %arrayidx, align 4, !tbaa !50
  %27 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %28 = fmul float %sub54, %27
  %29 = load float, float* %arrayidx5, align 4, !tbaa !50
  %30 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul69 = fmul float %29, %30
  %add70 = fsub float %mul69, %28
  store float %add70, float* %arrayidx7, align 4, !tbaa !50
  %31 = load i32, i32* %12, align 4, !tbaa !50
  store i32 %31, i32* %5, align 4, !tbaa !50
  %32 = load float, float* %arrayidx, align 4, !tbaa !50
  %33 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul84 = fmul float %32, %33
  %34 = load float, float* %arrayidx5, align 4, !tbaa !50
  %35 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %mul90 = fmul float %34, %35
  %add91 = fadd float %mul84, %mul90
  store float %add91, float* %arrayidx28, align 4, !tbaa !50
  store float %add91, float* %arrayidx, align 4, !tbaa !50
  %36 = load i32, i32* %6, align 4, !tbaa !50
  store i32 %36, i32* %18, align 4, !tbaa !50
  %37 = load i32, i32* %5, align 4, !tbaa !50
  store i32 %37, i32* %12, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp379 = icmp eq i32 %nSamples, 0
  br i1 %cmp379, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 8
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %arrayidx.i353 = getelementptr inbounds float*, float** %0, i64 4
  %2 = load float*, float** %arrayidx.i353, align 8, !tbaa !43
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx8 = getelementptr inbounds float, float* %3, i64 4
  %arrayidx.i361 = getelementptr inbounds float*, float** %0, i64 7
  %4 = load float*, float** %arrayidx.i361, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i377 = getelementptr inbounds float*, float** %0, i64 5
  %5 = load float*, float** %arrayidx.i377, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %arrayidx22 = getelementptr inbounds float, float* %3, i64 5
  %arrayidx.i375 = getelementptr inbounds float*, float** %0, i64 6
  %6 = load float*, float** %arrayidx.i375, align 8, !tbaa !43
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 6
  %7 = bitcast float* %arrayidx28 to i32*
  %arrayidx43 = getelementptr inbounds float, float* %3, i64 7
  %arrayidx58 = getelementptr inbounds float, float* %3, i64 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %8 = bitcast float* %arrayidx43 to i32*
  %9 = bitcast float* %arrayidx22 to i32*
  %10 = bitcast float* %arrayidx58 to i32*
  %11 = bitcast float* %arrayidx8 to i32*
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %12 = load float, float* %arrayidx, align 4, !tbaa !50
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %14 = fmul float %12, %13
  %arrayidx6 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %15 = load float, float* %arrayidx6, align 4, !tbaa !50
  %16 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul7 = fmul float %15, %16
  %add = fsub float %mul7, %14
  store float %add, float* %arrayidx8, align 4, !tbaa !50
  %arrayidx12 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %17 = load float, float* %arrayidx12, align 4, !tbaa !50
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %19 = fmul float %17, %18
  %arrayidx18 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %20 = load float, float* %arrayidx18, align 4, !tbaa !50
  %21 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul19 = fmul float %20, %21
  %add20 = fsub float %mul19, %19
  store float %add20, float* %arrayidx22, align 4, !tbaa !50
  %arrayidx26 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %22 = bitcast float* %arrayidx26 to i32*
  %23 = load i32, i32* %22, align 4, !tbaa !50
  store i32 %23, i32* %7, align 4, !tbaa !50
  %24 = load float, float* %arrayidx12, align 4, !tbaa !50
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul34 = fmul float %24, %25
  %26 = load float, float* %arrayidx18, align 4, !tbaa !50
  %27 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %mul40 = fmul float %26, %27
  %add41 = fadd float %mul34, %mul40
  store float %add41, float* %arrayidx43, align 4, !tbaa !50
  %28 = load float, float* %arrayidx, align 4, !tbaa !50
  %29 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul49 = fmul float %28, %29
  %30 = load float, float* %arrayidx6, align 4, !tbaa !50
  %31 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %mul55 = fmul float %30, %31
  %add56 = fadd float %mul49, %mul55
  store float %add56, float* %arrayidx58, align 4, !tbaa !50
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %33 = fmul float %32, %add20
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul65 = fmul float %34, %add
  %add66 = fsub float %mul65, %33
  store float %add66, float* %arrayidx6, align 4, !tbaa !50
  %35 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %36 = load float, float* %arrayidx22, align 4, !tbaa !50
  %37 = fmul float %35, %36
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %39 = load float, float* %arrayidx8, align 4, !tbaa !50
  %mul79 = fmul float %38, %39
  %add80 = fsub float %mul79, %37
  store float %add80, float* %arrayidx18, align 4, !tbaa !50
  %40 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul85 = fmul float %40, 7.500000e-01
  %add86 = fadd float %mul85, 2.500000e-01
  %41 = load float, float* %arrayidx28, align 4, !tbaa !50
  %mul89 = fmul float %41, %add86
  %conv = fpext float %mul89 to double
  %42 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %conv.i358 = fpext float %42 to double
  %square = fmul double %conv.i358, %conv.i358
  %mul94 = fmul double %square, 0x3FEBB67AE0000000
  %43 = load float, float* %arrayidx58, align 4, !tbaa !50
  %conv97 = fpext float %43 to double
  %mul98 = fmul double %mul94, %conv97
  %add99 = fadd double %mul98, %conv
  %mul101 = fmul float %42, 0x3FFBB67AE0000000
  %44 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul103 = fmul float %mul101, %44
  %45 = load float, float* %arrayidx43, align 4, !tbaa !50
  %mul106 = fmul float %mul103, %45
  %conv107 = fpext float %mul106 to double
  %add108 = fadd double %add99, %conv107
  %conv109 = fptrunc double %add108 to float
  store float %conv109, float* %arrayidx26, align 4, !tbaa !50
  %46 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %47 = load float, float* %arrayidx43, align 4, !tbaa !50
  %mul117 = fmul float %46, %47
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul119 = fmul float %48, 0x3FFBB67AE0000000
  %49 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul121 = fmul float %mul119, %49
  %50 = load float, float* %arrayidx28, align 4, !tbaa !50
  %mul124 = fmul float %mul121, %50
  %sub125 = fsub float %mul117, %mul124
  %mul128 = fmul float %48, %49
  %51 = load float, float* %arrayidx58, align 4, !tbaa !50
  %mul131 = fmul float %mul128, %51
  %add132 = fadd float %sub125, %mul131
  store float %add132, float* %arrayidx12, align 4, !tbaa !50
  %52 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul138 = fmul float %52, 2.500000e-01
  %add139 = fadd float %mul138, 7.500000e-01
  %53 = load float, float* %arrayidx58, align 4, !tbaa !50
  %mul142 = fmul float %53, %add139
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %55 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul145 = fmul float %54, %55
  %56 = load float, float* %arrayidx43, align 4, !tbaa !50
  %mul148 = fmul float %mul145, %56
  %sub149 = fsub float %mul142, %mul148
  %conv150 = fpext float %sub149 to double
  %conv.i = fpext float %55 to double
  %square378 = fmul double %conv.i, %conv.i
  %mul155 = fmul double %square378, 0x3FEBB67AE0000000
  %57 = load float, float* %arrayidx28, align 4, !tbaa !50
  %conv158 = fpext float %57 to double
  %mul159 = fmul double %mul155, %conv158
  %add160 = fadd double %mul159, %conv150
  %conv161 = fptrunc double %add160 to float
  store float %conv161, float* %arrayidx, align 4, !tbaa !50
  %58 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %59 = fmul float %58, %conv161
  %60 = load float, float* %arrayidx6, align 4, !tbaa !50
  %61 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul176 = fmul float %60, %61
  %add177 = fsub float %mul176, %59
  store float %add177, float* %arrayidx8, align 4, !tbaa !50
  %62 = load float, float* %arrayidx12, align 4, !tbaa !50
  %63 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %64 = fmul float %62, %63
  %65 = load float, float* %arrayidx18, align 4, !tbaa !50
  %66 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul190 = fmul float %65, %66
  %add191 = fsub float %mul190, %64
  store float %add191, float* %arrayidx22, align 4, !tbaa !50
  %67 = load i32, i32* %22, align 4, !tbaa !50
  store i32 %67, i32* %7, align 4, !tbaa !50
  %68 = load float, float* %arrayidx12, align 4, !tbaa !50
  %69 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul205 = fmul float %68, %69
  %70 = load float, float* %arrayidx18, align 4, !tbaa !50
  %71 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %mul211 = fmul float %70, %71
  %add212 = fadd float %mul205, %mul211
  store float %add212, float* %arrayidx43, align 4, !tbaa !50
  %72 = load float, float* %arrayidx, align 4, !tbaa !50
  %73 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul220 = fmul float %72, %73
  %74 = load float, float* %arrayidx6, align 4, !tbaa !50
  %75 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %mul226 = fmul float %74, %75
  %add227 = fadd float %mul220, %mul226
  store float %add227, float* %arrayidx58, align 4, !tbaa !50
  store i32 %67, i32* %22, align 4, !tbaa !50
  %76 = load i32, i32* %8, align 4, !tbaa !50
  %77 = bitcast float* %arrayidx12 to i32*
  store i32 %76, i32* %77, align 4, !tbaa !50
  %78 = load i32, i32* %9, align 4, !tbaa !50
  %79 = bitcast float* %arrayidx18 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !50
  %80 = load i32, i32* %10, align 4, !tbaa !50
  %81 = bitcast float* %arrayidx to i32*
  store i32 %80, i32* %81, align 4, !tbaa !50
  %82 = load i32, i32* %11, align 4, !tbaa !50
  %83 = bitcast float* %arrayidx6 to i32*
  store i32 %82, i32* %83, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp671 = icmp eq i32 %nSamples, 0
  br i1 %cmp671, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  %.pre = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %0 = phi float* [ %.pre, %for.body.lr.ph ], [ %105, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 15
  %2 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %arrayidx = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %3 = load float, float* %arrayidx, align 4, !tbaa !50
  %4 = load float, float* %m_fSin3Alpha, align 4, !tbaa !220
  %5 = fmul float %3, %4
  %arrayidx.i624 = getelementptr inbounds float*, float** %1, i64 9
  %6 = load float*, float** %arrayidx.i624, align 8, !tbaa !43
  %arrayidx8 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %7 = load float, float* %arrayidx8, align 4, !tbaa !50
  %8 = load float, float* %m_fCos3Alpha, align 8, !tbaa !219
  %mul9 = fmul float %7, %8
  %add = fsub float %mul9, %5
  %arrayidx10 = getelementptr inbounds float, float* %0, i64 9
  store float %add, float* %arrayidx10, align 4, !tbaa !50
  %arrayidx.i627 = getelementptr inbounds float*, float** %1, i64 14
  %9 = load float*, float** %arrayidx.i627, align 8, !tbaa !43
  %arrayidx14 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %10 = load float, float* %arrayidx14, align 4, !tbaa !50
  %11 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %12 = fmul float %10, %11
  %arrayidx.i632 = getelementptr inbounds float*, float** %1, i64 10
  %13 = load float*, float** %arrayidx.i632, align 8, !tbaa !43
  %arrayidx20 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %14 = load float, float* %arrayidx20, align 4, !tbaa !50
  %15 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul21 = fmul float %14, %15
  %add22 = fsub float %mul21, %12
  %arrayidx24 = getelementptr inbounds float, float* %0, i64 10
  store float %add22, float* %arrayidx24, align 4, !tbaa !50
  %arrayidx.i637 = getelementptr inbounds float*, float** %1, i64 13
  %16 = load float*, float** %arrayidx.i637, align 8, !tbaa !43
  %arrayidx28 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %17 = load float, float* %arrayidx28, align 4, !tbaa !50
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %19 = fmul float %17, %18
  %arrayidx.i642 = getelementptr inbounds float*, float** %1, i64 11
  %20 = load float*, float** %arrayidx.i642, align 8, !tbaa !43
  %arrayidx34 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %21 = load float, float* %arrayidx34, align 4, !tbaa !50
  %22 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul35 = fmul float %21, %22
  %add36 = fsub float %mul35, %19
  %arrayidx38 = getelementptr inbounds float, float* %0, i64 11
  store float %add36, float* %arrayidx38, align 4, !tbaa !50
  %arrayidx.i645 = getelementptr inbounds float*, float** %1, i64 12
  %23 = load float*, float** %arrayidx.i645, align 8, !tbaa !43
  %arrayidx42 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %24 = bitcast float* %arrayidx42 to i32*
  %25 = load i32, i32* %24, align 4, !tbaa !50
  %arrayidx44 = getelementptr inbounds float, float* %0, i64 12
  %26 = bitcast float* %arrayidx44 to i32*
  store i32 %25, i32* %26, align 4, !tbaa !50
  %27 = load float, float* %arrayidx28, align 4, !tbaa !50
  %28 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul50 = fmul float %27, %28
  %29 = load float, float* %arrayidx34, align 4, !tbaa !50
  %30 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %mul56 = fmul float %29, %30
  %add57 = fadd float %mul50, %mul56
  %arrayidx59 = getelementptr inbounds float, float* %0, i64 13
  store float %add57, float* %arrayidx59, align 4, !tbaa !50
  %31 = load float, float* %arrayidx14, align 4, !tbaa !50
  %32 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul65 = fmul float %31, %32
  %33 = load float, float* %arrayidx20, align 4, !tbaa !50
  %34 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %mul71 = fmul float %33, %34
  %add72 = fadd float %mul65, %mul71
  %arrayidx74 = getelementptr inbounds float, float* %0, i64 14
  store float %add72, float* %arrayidx74, align 4, !tbaa !50
  %35 = load float, float* %arrayidx, align 4, !tbaa !50
  %36 = load float, float* %m_fCos3Alpha, align 8, !tbaa !219
  %mul80 = fmul float %35, %36
  %37 = load float, float* %arrayidx8, align 4, !tbaa !50
  %38 = load float, float* %m_fSin3Alpha, align 4, !tbaa !220
  %mul86 = fmul float %37, %38
  %add87 = fadd float %mul80, %mul86
  %arrayidx89 = getelementptr inbounds float, float* %0, i64 15
  store float %add87, float* %arrayidx89, align 4, !tbaa !50
  %mul92 = fmul float %add, 1.250000e-01
  %39 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul93 = fmul float %39, 3.000000e+00
  %add94 = fadd float %mul93, 5.000000e+00
  %mul95 = fmul float %mul92, %add94
  %mul98 = fmul float %add22, 0x3FF3988E20000000
  %40 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul99 = fmul float %mul98, %40
  %41 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul100 = fmul float %mul99, %41
  %sub101 = fsub float %mul95, %mul100
  %mul105 = fmul float %add36, 0x3FEEFBDEC0000000
  %square = fmul float %41, %41
  %mul108 = fmul float %square, %mul105
  %add109 = fadd float %sub101, %mul108
  store float %add109, float* %arrayidx8, align 4, !tbaa !50
  %42 = load float, float* %arrayidx24, align 4, !tbaa !50
  %43 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul117 = fmul float %42, %43
  %44 = load float, float* %arrayidx38, align 4, !tbaa !50
  %mul120 = fmul float %44, 0x3FF94C5840000000
  %45 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul122 = fmul float %mul120, %45
  %46 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul124 = fmul float %mul122, %46
  %sub125 = fsub float %mul117, %mul124
  %47 = load float, float* %arrayidx10, align 4, !tbaa !50
  %mul128 = fmul float %47, 0x3FF3988E20000000
  %mul130 = fmul float %45, %mul128
  %mul132 = fmul float %46, %mul130
  %add133 = fadd float %sub125, %mul132
  store float %add133, float* %arrayidx20, align 4, !tbaa !50
  %48 = load float, float* %arrayidx38, align 4, !tbaa !50
  %mul140 = fmul float %48, 1.250000e-01
  %49 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul142 = fmul float %49, 5.000000e+00
  %add143 = fadd float %mul142, 3.000000e+00
  %mul144 = fmul float %mul140, %add143
  %50 = load float, float* %arrayidx24, align 4, !tbaa !50
  %mul147 = fmul float %50, 0x3FF94C5840000000
  %51 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul149 = fmul float %mul147, %51
  %52 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul151 = fmul float %mul149, %52
  %sub152 = fsub float %mul144, %mul151
  %53 = load float, float* %arrayidx10, align 4, !tbaa !50
  %mul156 = fmul float %53, 0x3FEEFBDEC0000000
  %square666 = fmul float %52, %52
  %mul159 = fmul float %square666, %mul156
  %add160 = fadd float %sub152, %mul159
  %54 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i647 = getelementptr inbounds float*, float** %54, i64 11
  %55 = load float*, float** %arrayidx.i647, align 8, !tbaa !43
  %arrayidx164 = getelementptr inbounds float, float* %55, i64 %indvars.iv
  store float %add160, float* %arrayidx164, align 4, !tbaa !50
  %56 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx166 = getelementptr inbounds float, float* %56, i64 12
  %57 = load float, float* %arrayidx166, align 4, !tbaa !50
  %mul167 = fmul float %57, 2.500000e-01
  %58 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul169 = fmul float %mul167, %58
  %59 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul171 = fmul float %59, 1.500000e+01
  %add172 = fadd float %mul171, -1.000000e+00
  %mul173 = fmul float %mul169, %add172
  %arrayidx176 = getelementptr inbounds float, float* %56, i64 14
  %60 = load float, float* %arrayidx176, align 4, !tbaa !50
  %mul177 = fmul float %60, 0x3FFEFBDEC0000000
  %mul179 = fmul float %58, %mul177
  %61 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %square667 = fmul float %61, %61
  %mul182 = fmul float %mul179, %square667
  %add183 = fadd float %mul173, %mul182
  %arrayidx186 = getelementptr inbounds float, float* %56, i64 15
  %62 = load float, float* %arrayidx186, align 4, !tbaa !50
  %mul187 = fmul float %62, 0x3FE94C5840000000
  %call.i640 = tail call float @powf(float %61, float 3.000000e+00) #24
  %mul190 = fmul float %mul187, %call.i640
  %add191 = fadd float %add183, %mul190
  %63 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx194 = getelementptr inbounds float, float* %63, i64 13
  %64 = load float, float* %arrayidx194, align 4, !tbaa !50
  %mul195 = fmul float %64, 0x3FC3988E20000000
  %65 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %66 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul197 = fmul float %66, 5.000000e+00
  %add198 = fadd float %65, %mul197
  %mul199 = fmul float %mul195, %add198
  %add200 = fadd float %add191, %mul199
  %67 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i639 = getelementptr inbounds float*, float** %67, i64 12
  %68 = load float*, float** %arrayidx.i639, align 8, !tbaa !43
  %arrayidx204 = getelementptr inbounds float, float* %68, i64 %indvars.iv
  store float %add200, float* %arrayidx204, align 4, !tbaa !50
  %69 = load float, float* %arrayidx194, align 4, !tbaa !50
  %mul207 = fmul float %69, 6.250000e-02
  %70 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %71 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %mul209 = fmul float %71, 1.500000e+01
  %add210 = fadd float %70, %mul209
  %mul211 = fmul float %mul207, %add210
  %arrayidx214 = getelementptr inbounds float, float* %63, i64 14
  %72 = load float, float* %arrayidx214, align 4, !tbaa !50
  %mul215 = fmul float %72, 0x3FD94C5840000000
  %73 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul217 = fmul float %73, 3.000000e+00
  %add218 = fadd float %mul217, 1.000000e+00
  %mul219 = fmul float %mul215, %add218
  %74 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul221 = fmul float %74, %mul219
  %add222 = fadd float %mul211, %mul221
  %arrayidx225 = getelementptr inbounds float, float* %63, i64 15
  %75 = load float, float* %arrayidx225, align 4, !tbaa !50
  %mul226 = fmul float %75, 0x3FEEFBDEC0000000
  %mul228 = fmul float %70, %mul226
  %square668 = fmul float %74, %74
  %mul231 = fmul float %square668, %mul228
  %add232 = fadd float %add222, %mul231
  %conv = fpext float %add232 to double
  %arrayidx236 = getelementptr inbounds float, float* %63, i64 12
  %76 = load float, float* %arrayidx236, align 4, !tbaa !50
  %conv237 = fpext float %76 to double
  %mul238 = fmul double %conv237, 0x3FC3988E20000000
  %77 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul241 = fmul float %77, 5.000000e+00
  %add242 = fadd float %74, %mul241
  %conv243 = fpext float %add242 to double
  %mul244 = fmul double %mul238, %conv243
  %sub245 = fsub double %conv, %mul244
  %conv246 = fptrunc double %sub245 to float
  %arrayidx.i634 = getelementptr inbounds float*, float** %67, i64 13
  %78 = load float*, float** %arrayidx.i634, align 8, !tbaa !43
  %arrayidx250 = getelementptr inbounds float, float* %78, i64 %indvars.iv
  store float %conv246, float* %arrayidx250, align 4, !tbaa !50
  %79 = load float, float* %arrayidx214, align 4, !tbaa !50
  %mul253 = fmul float %79, 1.250000e-01
  %80 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul255 = fmul float %80, 5.000000e+00
  %81 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %mul257 = fmul float %81, 3.000000e+00
  %add258 = fadd float %mul255, %mul257
  %mul259 = fmul float %mul253, %add258
  %82 = load float, float* %arrayidx225, align 4, !tbaa !50
  %mul263 = fmul float %82, 0x3FD3988E20000000
  %83 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %add265 = fadd float %83, 3.000000e+00
  %mul266 = fmul float %mul263, %add265
  %84 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul268 = fmul float %84, %mul266
  %add269 = fadd float %mul259, %mul268
  %85 = load float, float* %arrayidx236, align 4, !tbaa !50
  %mul273 = fmul float %85, 0x3FFEFBDEC0000000
  %mul275 = fmul float %80, %mul273
  %square669 = fmul float %84, %84
  %mul278 = fmul float %square669, %mul275
  %add279 = fadd float %add269, %mul278
  %conv280 = fpext float %add279 to double
  %86 = load float, float* %arrayidx194, align 4, !tbaa !50
  %conv285 = fpext float %86 to double
  %mul286 = fmul double %conv285, 0x3FC94C5840000000
  %87 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul289 = fmul float %87, 3.000000e+00
  %sub290 = fsub float %84, %mul289
  %conv291 = fpext float %sub290 to double
  %mul292 = fmul double %mul286, %conv291
  %add293 = fadd double %mul292, %conv280
  %conv294 = fptrunc double %add293 to float
  %arrayidx.i629 = getelementptr inbounds float*, float** %67, i64 14
  %88 = load float*, float** %arrayidx.i629, align 8, !tbaa !43
  %arrayidx298 = getelementptr inbounds float, float* %88, i64 %indvars.iv
  store float %conv294, float* %arrayidx298, align 4, !tbaa !50
  %89 = load float, float* %arrayidx225, align 4, !tbaa !50
  %mul301 = fmul float %89, 6.250000e-02
  %90 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul303 = fmul float %90, 1.500000e+01
  %91 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %add305 = fadd float %mul303, %91
  %mul306 = fmul float %mul301, %add305
  %92 = load float, float* %arrayidx214, align 4, !tbaa !50
  %mul310 = fmul float %92, 0x3FD3988E20000000
  %93 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %add312 = fadd float %93, 3.000000e+00
  %mul313 = fmul float %mul310, %add312
  %94 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul315 = fmul float %94, %mul313
  %sub316 = fsub float %mul306, %mul315
  %95 = load float, float* %arrayidx194, align 4, !tbaa !50
  %mul320 = fmul float %95, 0x3FEEFBDEC0000000
  %mul322 = fmul float %90, %mul320
  %square670 = fmul float %94, %94
  %mul325 = fmul float %square670, %mul322
  %add326 = fadd float %sub316, %mul325
  %conv327 = fpext float %add326 to double
  %96 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx331 = getelementptr inbounds float, float* %96, i64 12
  %97 = load float, float* %arrayidx331, align 4, !tbaa !50
  %conv332 = fpext float %97 to double
  %mul333 = fmul double %conv332, 0x3FE94C5840000000
  %call.i622 = tail call float @powf(float %94, float 3.000000e+00) #24
  %conv336 = fpext float %call.i622 to double
  %mul337 = fmul double %mul333, %conv336
  %sub338 = fsub double %conv327, %mul337
  %conv339 = fptrunc double %sub338 to float
  %98 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i621 = getelementptr inbounds float*, float** %98, i64 15
  %99 = load float*, float** %arrayidx.i621, align 8, !tbaa !43
  %arrayidx343 = getelementptr inbounds float, float* %99, i64 %indvars.iv
  store float %conv339, float* %arrayidx343, align 4, !tbaa !50
  %100 = load float, float* %m_fSin3Gamma, align 4, !tbaa !224
  %101 = fmul float %100, %conv339
  %arrayidx.i617 = getelementptr inbounds float*, float** %98, i64 9
  %102 = load float*, float** %arrayidx.i617, align 8, !tbaa !43
  %arrayidx353 = getelementptr inbounds float, float* %102, i64 %indvars.iv
  %103 = load float, float* %arrayidx353, align 4, !tbaa !50
  %104 = load float, float* %m_fCos3Gamma, align 8, !tbaa !223
  %mul354 = fmul float %103, %104
  %add355 = fsub float %mul354, %101
  %105 = load float*, float** %m_pfTempSample, align 8, !tbaa !185
  %arrayidx357 = getelementptr inbounds float, float* %105, i64 9
  store float %add355, float* %arrayidx357, align 4, !tbaa !50
  %arrayidx.i615 = getelementptr inbounds float*, float** %98, i64 14
  %106 = load float*, float** %arrayidx.i615, align 8, !tbaa !43
  %arrayidx361 = getelementptr inbounds float, float* %106, i64 %indvars.iv
  %107 = load float, float* %arrayidx361, align 4, !tbaa !50
  %108 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %109 = fmul float %107, %108
  %arrayidx.i613 = getelementptr inbounds float*, float** %98, i64 10
  %110 = load float*, float** %arrayidx.i613, align 8, !tbaa !43
  %arrayidx367 = getelementptr inbounds float, float* %110, i64 %indvars.iv
  %111 = load float, float* %arrayidx367, align 4, !tbaa !50
  %112 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul368 = fmul float %111, %112
  %add369 = fsub float %mul368, %109
  %arrayidx371 = getelementptr inbounds float, float* %105, i64 10
  store float %add369, float* %arrayidx371, align 4, !tbaa !50
  %arrayidx.i611 = getelementptr inbounds float*, float** %98, i64 13
  %113 = load float*, float** %arrayidx.i611, align 8, !tbaa !43
  %arrayidx375 = getelementptr inbounds float, float* %113, i64 %indvars.iv
  %114 = load float, float* %arrayidx375, align 4, !tbaa !50
  %115 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %116 = fmul float %114, %115
  %arrayidx.i609 = getelementptr inbounds float*, float** %98, i64 11
  %117 = load float*, float** %arrayidx.i609, align 8, !tbaa !43
  %arrayidx381 = getelementptr inbounds float, float* %117, i64 %indvars.iv
  %118 = load float, float* %arrayidx381, align 4, !tbaa !50
  %119 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul382 = fmul float %118, %119
  %add383 = fsub float %mul382, %116
  %arrayidx385 = getelementptr inbounds float, float* %105, i64 11
  store float %add383, float* %arrayidx385, align 4, !tbaa !50
  %arrayidx.i607 = getelementptr inbounds float*, float** %98, i64 12
  %120 = load float*, float** %arrayidx.i607, align 8, !tbaa !43
  %arrayidx389 = getelementptr inbounds float, float* %120, i64 %indvars.iv
  %121 = bitcast float* %arrayidx389 to i32*
  %122 = load i32, i32* %121, align 4, !tbaa !50
  %arrayidx391 = getelementptr inbounds float, float* %105, i64 12
  %123 = bitcast float* %arrayidx391 to i32*
  store i32 %122, i32* %123, align 4, !tbaa !50
  %124 = load float, float* %arrayidx375, align 4, !tbaa !50
  %125 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul397 = fmul float %124, %125
  %126 = load float, float* %arrayidx381, align 4, !tbaa !50
  %127 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %mul403 = fmul float %126, %127
  %add404 = fadd float %mul397, %mul403
  %arrayidx406 = getelementptr inbounds float, float* %105, i64 13
  store float %add404, float* %arrayidx406, align 4, !tbaa !50
  %128 = load float, float* %arrayidx361, align 4, !tbaa !50
  %129 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul412 = fmul float %128, %129
  %130 = load float, float* %arrayidx367, align 4, !tbaa !50
  %131 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %mul418 = fmul float %130, %131
  %add419 = fadd float %mul412, %mul418
  %arrayidx421 = getelementptr inbounds float, float* %105, i64 14
  store float %add419, float* %arrayidx421, align 4, !tbaa !50
  %132 = load float, float* %arrayidx343, align 4, !tbaa !50
  %133 = load float, float* %m_fCos3Gamma, align 8, !tbaa !223
  %mul427 = fmul float %132, %133
  %134 = load float, float* %arrayidx353, align 4, !tbaa !50
  %135 = load float, float* %m_fSin3Gamma, align 4, !tbaa !224
  %mul433 = fmul float %134, %135
  %add434 = fadd float %mul427, %mul433
  %arrayidx436 = getelementptr inbounds float, float* %105, i64 15
  store float %add434, float* %arrayidx436, align 4, !tbaa !50
  store float %add355, float* %arrayidx353, align 4, !tbaa !50
  %136 = bitcast float* %arrayidx371 to i32*
  %137 = load i32, i32* %136, align 4, !tbaa !50
  %138 = bitcast float* %arrayidx367 to i32*
  store i32 %137, i32* %138, align 4, !tbaa !50
  %139 = bitcast float* %arrayidx385 to i32*
  %140 = load i32, i32* %139, align 4, !tbaa !50
  %141 = bitcast float* %arrayidx381 to i32*
  store i32 %140, i32* %141, align 4, !tbaa !50
  %142 = load i32, i32* %123, align 4, !tbaa !50
  store i32 %142, i32* %121, align 4, !tbaa !50
  %143 = bitcast float* %arrayidx406 to i32*
  %144 = load i32, i32* %143, align 4, !tbaa !50
  %145 = bitcast float* %arrayidx375 to i32*
  store i32 %144, i32* %145, align 4, !tbaa !50
  %146 = bitcast float* %arrayidx421 to i32*
  %147 = load i32, i32* %146, align 4, !tbaa !50
  %148 = bitcast float* %arrayidx361 to i32*
  store i32 %147, i32* %148, align 4, !tbaa !50
  %149 = bitcast float* %arrayidx436 to i32*
  %150 = load i32, i32* %149, align 4, !tbaa !50
  %151 = bitcast float* %arrayidx343 to i32*
  store i32 %150, i32* %151, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

declare void @kiss_fftri(%struct.kiss_fftr_state*, %struct.kiss_fft_cpx*, float*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerC2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !68
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !76
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD0Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicSpeaker* %this to i8*
  tail call void @_ZdlPv(i8* %5) #27
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicSpeaker9ConfigureEjbj(%class.CAmbisonicSpeaker* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !64
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !65
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !50
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !73
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp6.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp6.i.i, label %if.then7.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then7.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then7.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !61
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !50
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !73
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp6.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp6.i12.i, label %if.then7.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then7.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !73
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then7.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7RefreshEv(%class.CAmbisonicSpeaker* readonly %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float* nocapture %pfDst) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = bitcast float* %pfDst to i8*
  %conv = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !65
  %cmp62 = icmp eq i32 %2, 0
  br i1 %cmp62, label %for.end33, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %cmp1154 = icmp eq i32 %nSamples, 0
  br i1 %cmp1154, label %for.body, label %for.body.us.preheader

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %4 = add i32 %nSamples, -1
  %5 = zext i32 %4 to i64
  %6 = add nuw nsw i64 %5, 1
  %7 = zext i32 %4 to i64
  %8 = add nuw nsw i64 %7, 1
  %scevgep = getelementptr float, float* %pfDst, i64 %8
  %9 = add i32 %nSamples, -1
  %10 = zext i32 %9 to i64
  %11 = add nuw nsw i64 %10, 1
  %12 = zext i32 %9 to i64
  %13 = add nuw nsw i64 %12, 1
  %scevgep140 = getelementptr float, float* %pfDst, i64 %13
  %14 = and i64 %11, 8589934584
  %15 = add nsw i64 %14, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %min.iters.check138 = icmp ult i64 %11, 8
  %n.vec151 = and i64 %11, 8589934584
  %ind.end155 = trunc i64 %n.vec151 to i32
  %ind.end157 = getelementptr float, float* %pfDst, i64 %n.vec151
  %xtraiter = and i64 %17, 1
  %18 = icmp eq i64 %15, 0
  %unroll_iter = sub nuw nsw i64 %17, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n160 = icmp eq i64 %11, %n.vec151
  %min.iters.check = icmp ult i64 %6, 8
  %n.vec = and i64 %6, 8589934584
  %ind.end = trunc i64 %n.vec to i32
  %ind.end121 = getelementptr float, float* %pfDst, i64 %n.vec
  %xtraiter182 = and i64 %17, 1
  %19 = icmp eq i64 %15, 0
  %unroll_iter184 = sub nuw nsw i64 %17, %xtraiter182
  %lcmp.mod183 = icmp eq i64 %xtraiter182, 0
  %cmp.n = icmp eq i64 %6, %n.vec
  br label %for.body.us

for.body.us:                                      ; preds = %if.end.us, %for.body.us.preheader
  %20 = phi i32 [ %120, %if.end.us ], [ %2, %for.body.us.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end.us ], [ 0, %for.body.us.preheader ]
  %21 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i.us = getelementptr inbounds float*, float** %21, i64 %indvars.iv
  %22 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %23 = load i8, i8* %3, align 4, !tbaa !64, !range !67
  %tobool.us = icmp eq i8 %23, 0
  %24 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i.us = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %25 = load float, float* %add.ptr.i.us, align 4, !tbaa !50
  br i1 %tobool.us, label %for.body23.us.preheader, label %if.then.us

if.then.us:                                       ; preds = %for.body.us
  %conv5.us = fpext float %25 to double
  %26 = trunc i64 %indvars.iv to i32
  %conv.i.us = uitofp i32 %26 to double
  %call.i.us = tail call double @sqrt(double %conv.i.us) #24
  %27 = tail call double @llvm.floor.f64(double %call.i.us)
  %mul7.us = fmul double %27, 2.000000e+00
  %add.us = fadd double %mul7.us, 1.000000e+00
  %mul8.us = fmul double %add.us, %conv5.us
  %conv9.us = fptrunc double %mul8.us to float
  br i1 %min.iters.check138, label %for.body12.us.preheader, label %vector.memcheck148

vector.memcheck148:                               ; preds = %if.then.us
  %scevgep142 = getelementptr float, float* %22, i64 %13
  %bound0144 = icmp ugt float* %scevgep142, %pfDst
  %bound1145 = icmp ult float* %22, %scevgep140
  %found.conflict146 = and i1 %bound0144, %bound1145
  br i1 %found.conflict146, label %for.body12.us.preheader, label %vector.ph149

vector.ph149:                                     ; preds = %vector.memcheck148
  %ind.end159 = getelementptr float, float* %22, i64 %n.vec151
  %broadcast.splatinsert172 = insertelement <4 x float> undef, float %conv9.us, i32 0
  %broadcast.splat173 = shufflevector <4 x float> %broadcast.splatinsert172, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert174 = insertelement <4 x float> undef, float %conv9.us, i32 0
  %broadcast.splat175 = shufflevector <4 x float> %broadcast.splatinsert174, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %18, label %middle.block136.unr-lcssa, label %vector.body135

vector.body135:                                   ; preds = %vector.body135, %vector.ph149
  %index152 = phi i64 [ %index.next153.1, %vector.body135 ], [ 0, %vector.ph149 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body135 ], [ %unroll_iter, %vector.ph149 ]
  %next.gep166 = getelementptr float, float* %pfDst, i64 %index152
  %next.gep168 = getelementptr float, float* %22, i64 %index152
  %28 = bitcast float* %next.gep168 to <4 x float>*
  %wide.load170 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !243
  %29 = getelementptr float, float* %next.gep168, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load171 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !243
  %31 = fmul <4 x float> %wide.load170, %broadcast.splat173
  %32 = fmul <4 x float> %wide.load171, %broadcast.splat175
  %33 = bitcast float* %next.gep166 to <4 x float>*
  %wide.load176 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %34 = getelementptr float, float* %next.gep166, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load177 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %36 = fadd <4 x float> %wide.load176, %31
  %37 = fadd <4 x float> %wide.load177, %32
  %38 = bitcast float* %next.gep166 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %39 = bitcast float* %34 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %index.next153 = or i64 %index152, 8
  %next.gep166.1 = getelementptr float, float* %pfDst, i64 %index.next153
  %next.gep168.1 = getelementptr float, float* %22, i64 %index.next153
  %40 = bitcast float* %next.gep168.1 to <4 x float>*
  %wide.load170.1 = load <4 x float>, <4 x float>* %40, align 4, !tbaa !50, !alias.scope !243
  %41 = getelementptr float, float* %next.gep168.1, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load171.1 = load <4 x float>, <4 x float>* %42, align 4, !tbaa !50, !alias.scope !243
  %43 = fmul <4 x float> %wide.load170.1, %broadcast.splat173
  %44 = fmul <4 x float> %wide.load171.1, %broadcast.splat175
  %45 = bitcast float* %next.gep166.1 to <4 x float>*
  %wide.load176.1 = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %46 = getelementptr float, float* %next.gep166.1, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load177.1 = load <4 x float>, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %48 = fadd <4 x float> %wide.load176.1, %43
  %49 = fadd <4 x float> %wide.load177.1, %44
  %50 = bitcast float* %next.gep166.1 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %51 = bitcast float* %46 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %index.next153.1 = add i64 %index152, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block136.unr-lcssa, label %vector.body135, !llvm.loop !248

middle.block136.unr-lcssa:                        ; preds = %vector.body135, %vector.ph149
  %index152.unr = phi i64 [ 0, %vector.ph149 ], [ %index.next153.1, %vector.body135 ]
  br i1 %lcmp.mod, label %middle.block136, label %vector.body135.epil

vector.body135.epil:                              ; preds = %middle.block136.unr-lcssa
  %next.gep166.epil = getelementptr float, float* %pfDst, i64 %index152.unr
  %next.gep168.epil = getelementptr float, float* %22, i64 %index152.unr
  %52 = bitcast float* %next.gep168.epil to <4 x float>*
  %wide.load170.epil = load <4 x float>, <4 x float>* %52, align 4, !tbaa !50, !alias.scope !243
  %53 = getelementptr float, float* %next.gep168.epil, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load171.epil = load <4 x float>, <4 x float>* %54, align 4, !tbaa !50, !alias.scope !243
  %55 = fmul <4 x float> %wide.load170.epil, %broadcast.splat173
  %56 = fmul <4 x float> %wide.load171.epil, %broadcast.splat175
  %57 = bitcast float* %next.gep166.epil to <4 x float>*
  %wide.load176.epil = load <4 x float>, <4 x float>* %57, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %58 = getelementptr float, float* %next.gep166.epil, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  %wide.load177.epil = load <4 x float>, <4 x float>* %59, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %60 = fadd <4 x float> %wide.load176.epil, %55
  %61 = fadd <4 x float> %wide.load177.epil, %56
  %62 = bitcast float* %next.gep166.epil to <4 x float>*
  store <4 x float> %60, <4 x float>* %62, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  %63 = bitcast float* %58 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 4, !tbaa !50, !alias.scope !246, !noalias !243
  br label %middle.block136

middle.block136:                                  ; preds = %vector.body135.epil, %middle.block136.unr-lcssa
  br i1 %cmp.n160, label %if.end.us.loopexit111, label %for.body12.us.preheader

for.body12.us.preheader:                          ; preds = %middle.block136, %vector.memcheck148, %if.then.us
  %niSample.057.us.ph = phi i32 [ 0, %vector.memcheck148 ], [ 0, %if.then.us ], [ %ind.end155, %middle.block136 ]
  %out.056.us.ph = phi float* [ %pfDst, %vector.memcheck148 ], [ %pfDst, %if.then.us ], [ %ind.end157, %middle.block136 ]
  %in.055.us.ph = phi float* [ %22, %vector.memcheck148 ], [ %22, %if.then.us ], [ %ind.end159, %middle.block136 ]
  %64 = sub i32 %nSamples, %niSample.057.us.ph
  %65 = xor i32 %niSample.057.us.ph, -1
  %66 = add i32 %65, %nSamples
  %xtraiter180 = and i32 %64, 3
  %lcmp.mod181 = icmp eq i32 %xtraiter180, 0
  br i1 %lcmp.mod181, label %for.body12.us.prol.loopexit, label %for.body12.us.prol

for.body12.us.prol:                               ; preds = %for.body12.us.prol, %for.body12.us.preheader
  %niSample.057.us.prol = phi i32 [ %inc.us.prol, %for.body12.us.prol ], [ %niSample.057.us.ph, %for.body12.us.preheader ]
  %out.056.us.prol = phi float* [ %incdec.ptr14.us.prol, %for.body12.us.prol ], [ %out.056.us.ph, %for.body12.us.preheader ]
  %in.055.us.prol = phi float* [ %incdec.ptr.us.prol, %for.body12.us.prol ], [ %in.055.us.ph, %for.body12.us.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body12.us.prol ], [ %xtraiter180, %for.body12.us.preheader ]
  %incdec.ptr.us.prol = getelementptr inbounds float, float* %in.055.us.prol, i64 1
  %67 = load float, float* %in.055.us.prol, align 4, !tbaa !50
  %mul13.us.prol = fmul float %67, %conv9.us
  %incdec.ptr14.us.prol = getelementptr inbounds float, float* %out.056.us.prol, i64 1
  %68 = load float, float* %out.056.us.prol, align 4, !tbaa !50
  %add15.us.prol = fadd float %68, %mul13.us.prol
  store float %add15.us.prol, float* %out.056.us.prol, align 4, !tbaa !50
  %inc.us.prol = add nuw i32 %niSample.057.us.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body12.us.prol.loopexit, label %for.body12.us.prol, !llvm.loop !249

for.body12.us.prol.loopexit:                      ; preds = %for.body12.us.prol, %for.body12.us.preheader
  %niSample.057.us.unr = phi i32 [ %niSample.057.us.ph, %for.body12.us.preheader ], [ %inc.us.prol, %for.body12.us.prol ]
  %out.056.us.unr = phi float* [ %out.056.us.ph, %for.body12.us.preheader ], [ %incdec.ptr14.us.prol, %for.body12.us.prol ]
  %in.055.us.unr = phi float* [ %in.055.us.ph, %for.body12.us.preheader ], [ %incdec.ptr.us.prol, %for.body12.us.prol ]
  %69 = icmp ult i32 %66, 3
  br i1 %69, label %if.end.us.loopexit111, label %for.body12.us

for.body12.us:                                    ; preds = %for.body12.us, %for.body12.us.prol.loopexit
  %niSample.057.us = phi i32 [ %inc.us.3, %for.body12.us ], [ %niSample.057.us.unr, %for.body12.us.prol.loopexit ]
  %out.056.us = phi float* [ %incdec.ptr14.us.3, %for.body12.us ], [ %out.056.us.unr, %for.body12.us.prol.loopexit ]
  %in.055.us = phi float* [ %incdec.ptr.us.3, %for.body12.us ], [ %in.055.us.unr, %for.body12.us.prol.loopexit ]
  %incdec.ptr.us = getelementptr inbounds float, float* %in.055.us, i64 1
  %70 = load float, float* %in.055.us, align 4, !tbaa !50
  %mul13.us = fmul float %70, %conv9.us
  %incdec.ptr14.us = getelementptr inbounds float, float* %out.056.us, i64 1
  %71 = load float, float* %out.056.us, align 4, !tbaa !50
  %add15.us = fadd float %71, %mul13.us
  store float %add15.us, float* %out.056.us, align 4, !tbaa !50
  %incdec.ptr.us.1 = getelementptr inbounds float, float* %in.055.us, i64 2
  %72 = load float, float* %incdec.ptr.us, align 4, !tbaa !50
  %mul13.us.1 = fmul float %72, %conv9.us
  %incdec.ptr14.us.1 = getelementptr inbounds float, float* %out.056.us, i64 2
  %73 = load float, float* %incdec.ptr14.us, align 4, !tbaa !50
  %add15.us.1 = fadd float %73, %mul13.us.1
  store float %add15.us.1, float* %incdec.ptr14.us, align 4, !tbaa !50
  %incdec.ptr.us.2 = getelementptr inbounds float, float* %in.055.us, i64 3
  %74 = load float, float* %incdec.ptr.us.1, align 4, !tbaa !50
  %mul13.us.2 = fmul float %74, %conv9.us
  %incdec.ptr14.us.2 = getelementptr inbounds float, float* %out.056.us, i64 3
  %75 = load float, float* %incdec.ptr14.us.1, align 4, !tbaa !50
  %add15.us.2 = fadd float %75, %mul13.us.2
  store float %add15.us.2, float* %incdec.ptr14.us.1, align 4, !tbaa !50
  %incdec.ptr.us.3 = getelementptr inbounds float, float* %in.055.us, i64 4
  %76 = load float, float* %incdec.ptr.us.2, align 4, !tbaa !50
  %mul13.us.3 = fmul float %76, %conv9.us
  %incdec.ptr14.us.3 = getelementptr inbounds float, float* %out.056.us, i64 4
  %77 = load float, float* %incdec.ptr14.us.2, align 4, !tbaa !50
  %add15.us.3 = fadd float %77, %mul13.us.3
  store float %add15.us.3, float* %incdec.ptr14.us.2, align 4, !tbaa !50
  %inc.us.3 = add nuw i32 %niSample.057.us, 4
  %exitcond.3 = icmp eq i32 %inc.us.3, %nSamples
  br i1 %exitcond.3, label %if.end.us.loopexit111, label %for.body12.us, !llvm.loop !250

for.body23.us.preheader:                          ; preds = %for.body.us
  %mul20.us = fmul float %25, 2.000000e+00
  br i1 %min.iters.check, label %for.body23.us.preheader178, label %vector.memcheck

for.body23.us.preheader178:                       ; preds = %middle.block, %vector.memcheck, %for.body23.us.preheader
  %niSample.161.us.ph = phi i32 [ 0, %vector.memcheck ], [ 0, %for.body23.us.preheader ], [ %ind.end, %middle.block ]
  %out.160.us.ph = phi float* [ %pfDst, %vector.memcheck ], [ %pfDst, %for.body23.us.preheader ], [ %ind.end121, %middle.block ]
  %in.159.us.ph = phi float* [ %22, %vector.memcheck ], [ %22, %for.body23.us.preheader ], [ %ind.end123, %middle.block ]
  %78 = sub i32 %nSamples, %niSample.161.us.ph
  %79 = xor i32 %niSample.161.us.ph, -1
  %80 = add i32 %79, %nSamples
  %xtraiter186 = and i32 %78, 3
  %lcmp.mod187 = icmp eq i32 %xtraiter186, 0
  br i1 %lcmp.mod187, label %for.body23.us.prol.loopexit, label %for.body23.us.prol

for.body23.us.prol:                               ; preds = %for.body23.us.prol, %for.body23.us.preheader178
  %niSample.161.us.prol = phi i32 [ %inc29.us.prol, %for.body23.us.prol ], [ %niSample.161.us.ph, %for.body23.us.preheader178 ]
  %out.160.us.prol = phi float* [ %incdec.ptr26.us.prol, %for.body23.us.prol ], [ %out.160.us.ph, %for.body23.us.preheader178 ]
  %in.159.us.prol = phi float* [ %incdec.ptr24.us.prol, %for.body23.us.prol ], [ %in.159.us.ph, %for.body23.us.preheader178 ]
  %prol.iter188 = phi i32 [ %prol.iter188.sub, %for.body23.us.prol ], [ %xtraiter186, %for.body23.us.preheader178 ]
  %incdec.ptr24.us.prol = getelementptr inbounds float, float* %in.159.us.prol, i64 1
  %81 = load float, float* %in.159.us.prol, align 4, !tbaa !50
  %mul25.us.prol = fmul float %mul20.us, %81
  %incdec.ptr26.us.prol = getelementptr inbounds float, float* %out.160.us.prol, i64 1
  %82 = load float, float* %out.160.us.prol, align 4, !tbaa !50
  %add27.us.prol = fadd float %82, %mul25.us.prol
  store float %add27.us.prol, float* %out.160.us.prol, align 4, !tbaa !50
  %inc29.us.prol = add nuw i32 %niSample.161.us.prol, 1
  %prol.iter188.sub = add i32 %prol.iter188, -1
  %prol.iter188.cmp = icmp eq i32 %prol.iter188.sub, 0
  br i1 %prol.iter188.cmp, label %for.body23.us.prol.loopexit, label %for.body23.us.prol, !llvm.loop !251

for.body23.us.prol.loopexit:                      ; preds = %for.body23.us.prol, %for.body23.us.preheader178
  %niSample.161.us.unr = phi i32 [ %niSample.161.us.ph, %for.body23.us.preheader178 ], [ %inc29.us.prol, %for.body23.us.prol ]
  %out.160.us.unr = phi float* [ %out.160.us.ph, %for.body23.us.preheader178 ], [ %incdec.ptr26.us.prol, %for.body23.us.prol ]
  %in.159.us.unr = phi float* [ %in.159.us.ph, %for.body23.us.preheader178 ], [ %incdec.ptr24.us.prol, %for.body23.us.prol ]
  %83 = icmp ult i32 %80, 3
  br i1 %83, label %if.end.us, label %for.body23.us

vector.memcheck:                                  ; preds = %for.body23.us.preheader
  %scevgep118 = getelementptr float, float* %22, i64 %8
  %bound0 = icmp ugt float* %scevgep118, %pfDst
  %bound1 = icmp ult float* %22, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body23.us.preheader178, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %ind.end123 = getelementptr float, float* %22, i64 %n.vec
  %broadcast.splatinsert129 = insertelement <4 x float> undef, float %mul20.us, i32 0
  %broadcast.splat130 = shufflevector <4 x float> %broadcast.splatinsert129, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert131 = insertelement <4 x float> undef, float %mul20.us, i32 0
  %broadcast.splat132 = shufflevector <4 x float> %broadcast.splatinsert131, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %19, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter185 = phi i64 [ %niter185.nsub.1, %vector.body ], [ %unroll_iter184, %vector.ph ]
  %next.gep = getelementptr float, float* %pfDst, i64 %index
  %next.gep126 = getelementptr float, float* %22, i64 %index
  %84 = bitcast float* %next.gep126 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %84, align 4, !tbaa !50, !alias.scope !252
  %85 = getelementptr float, float* %next.gep126, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load128 = load <4 x float>, <4 x float>* %86, align 4, !tbaa !50, !alias.scope !252
  %87 = fmul <4 x float> %broadcast.splat130, %wide.load
  %88 = fmul <4 x float> %broadcast.splat132, %wide.load128
  %89 = bitcast float* %next.gep to <4 x float>*
  %wide.load133 = load <4 x float>, <4 x float>* %89, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %90 = getelementptr float, float* %next.gep, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load134 = load <4 x float>, <4 x float>* %91, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %92 = fadd <4 x float> %wide.load133, %87
  %93 = fadd <4 x float> %wide.load134, %88
  %94 = bitcast float* %next.gep to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %95 = bitcast float* %90 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %pfDst, i64 %index.next
  %next.gep126.1 = getelementptr float, float* %22, i64 %index.next
  %96 = bitcast float* %next.gep126.1 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !252
  %97 = getelementptr float, float* %next.gep126.1, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load128.1 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !50, !alias.scope !252
  %99 = fmul <4 x float> %broadcast.splat130, %wide.load.1
  %100 = fmul <4 x float> %broadcast.splat132, %wide.load128.1
  %101 = bitcast float* %next.gep.1 to <4 x float>*
  %wide.load133.1 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %102 = getelementptr float, float* %next.gep.1, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  %wide.load134.1 = load <4 x float>, <4 x float>* %103, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %104 = fadd <4 x float> %wide.load133.1, %99
  %105 = fadd <4 x float> %wide.load134.1, %100
  %106 = bitcast float* %next.gep.1 to <4 x float>*
  store <4 x float> %104, <4 x float>* %106, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %107 = bitcast float* %102 to <4 x float>*
  store <4 x float> %105, <4 x float>* %107, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %index.next.1 = add i64 %index, 16
  %niter185.nsub.1 = add i64 %niter185, -2
  %niter185.ncmp.1 = icmp eq i64 %niter185.nsub.1, 0
  br i1 %niter185.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !257

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod183, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %next.gep.epil = getelementptr float, float* %pfDst, i64 %index.unr
  %next.gep126.epil = getelementptr float, float* %22, i64 %index.unr
  %108 = bitcast float* %next.gep126.epil to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %108, align 4, !tbaa !50, !alias.scope !252
  %109 = getelementptr float, float* %next.gep126.epil, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load128.epil = load <4 x float>, <4 x float>* %110, align 4, !tbaa !50, !alias.scope !252
  %111 = fmul <4 x float> %broadcast.splat130, %wide.load.epil
  %112 = fmul <4 x float> %broadcast.splat132, %wide.load128.epil
  %113 = bitcast float* %next.gep.epil to <4 x float>*
  %wide.load133.epil = load <4 x float>, <4 x float>* %113, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %114 = getelementptr float, float* %next.gep.epil, i64 4
  %115 = bitcast float* %114 to <4 x float>*
  %wide.load134.epil = load <4 x float>, <4 x float>* %115, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %116 = fadd <4 x float> %wide.load133.epil, %111
  %117 = fadd <4 x float> %wide.load134.epil, %112
  %118 = bitcast float* %next.gep.epil to <4 x float>*
  store <4 x float> %116, <4 x float>* %118, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  %119 = bitcast float* %114 to <4 x float>*
  store <4 x float> %117, <4 x float>* %119, align 4, !tbaa !50, !alias.scope !255, !noalias !252
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %if.end.us, label %for.body23.us.preheader178

if.end.us.loopexit111:                            ; preds = %for.body12.us, %for.body12.us.prol.loopexit, %middle.block136
  %.pre = load i32, i32* %1, align 8, !tbaa !65
  br label %if.end.us

if.end.us:                                        ; preds = %for.body23.us, %if.end.us.loopexit111, %middle.block, %for.body23.us.prol.loopexit
  %120 = phi i32 [ %.pre, %if.end.us.loopexit111 ], [ %20, %middle.block ], [ %20, %for.body23.us ], [ %20, %for.body23.us.prol.loopexit ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %121 = zext i32 %120 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %121
  br i1 %cmp.us, label %for.body.us, label %for.end33

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.us.prol.loopexit
  %niSample.161.us = phi i32 [ %inc29.us.3, %for.body23.us ], [ %niSample.161.us.unr, %for.body23.us.prol.loopexit ]
  %out.160.us = phi float* [ %incdec.ptr26.us.3, %for.body23.us ], [ %out.160.us.unr, %for.body23.us.prol.loopexit ]
  %in.159.us = phi float* [ %incdec.ptr24.us.3, %for.body23.us ], [ %in.159.us.unr, %for.body23.us.prol.loopexit ]
  %incdec.ptr24.us = getelementptr inbounds float, float* %in.159.us, i64 1
  %122 = load float, float* %in.159.us, align 4, !tbaa !50
  %mul25.us = fmul float %mul20.us, %122
  %incdec.ptr26.us = getelementptr inbounds float, float* %out.160.us, i64 1
  %123 = load float, float* %out.160.us, align 4, !tbaa !50
  %add27.us = fadd float %123, %mul25.us
  store float %add27.us, float* %out.160.us, align 4, !tbaa !50
  %incdec.ptr24.us.1 = getelementptr inbounds float, float* %in.159.us, i64 2
  %124 = load float, float* %incdec.ptr24.us, align 4, !tbaa !50
  %mul25.us.1 = fmul float %mul20.us, %124
  %incdec.ptr26.us.1 = getelementptr inbounds float, float* %out.160.us, i64 2
  %125 = load float, float* %incdec.ptr26.us, align 4, !tbaa !50
  %add27.us.1 = fadd float %125, %mul25.us.1
  store float %add27.us.1, float* %incdec.ptr26.us, align 4, !tbaa !50
  %incdec.ptr24.us.2 = getelementptr inbounds float, float* %in.159.us, i64 3
  %126 = load float, float* %incdec.ptr24.us.1, align 4, !tbaa !50
  %mul25.us.2 = fmul float %mul20.us, %126
  %incdec.ptr26.us.2 = getelementptr inbounds float, float* %out.160.us, i64 3
  %127 = load float, float* %incdec.ptr26.us.1, align 4, !tbaa !50
  %add27.us.2 = fadd float %127, %mul25.us.2
  store float %add27.us.2, float* %incdec.ptr26.us.1, align 4, !tbaa !50
  %incdec.ptr24.us.3 = getelementptr inbounds float, float* %in.159.us, i64 4
  %128 = load float, float* %incdec.ptr24.us.2, align 4, !tbaa !50
  %mul25.us.3 = fmul float %mul20.us, %128
  %incdec.ptr26.us.3 = getelementptr inbounds float, float* %out.160.us, i64 4
  %129 = load float, float* %incdec.ptr26.us.2, align 4, !tbaa !50
  %add27.us.3 = fadd float %129, %mul25.us.3
  store float %add27.us.3, float* %incdec.ptr26.us.2, align 4, !tbaa !50
  %inc29.us.3 = add nuw i32 %niSample.161.us, 4
  %exitcond113.3 = icmp eq i32 %inc29.us.3, %nSamples
  br i1 %exitcond113.3, label %if.end.us, label %for.body23.us, !llvm.loop !258

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %130 = phi i32 [ %132, %if.end ], [ %2, %for.body.lr.ph ]
  %niChannel.063 = phi i32 [ %inc32, %if.end ], [ 0, %for.body.lr.ph ]
  %131 = load i8, i8* %3, align 4, !tbaa !64, !range !67
  %tobool = icmp eq i8 %131, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %conv.i = uitofp i32 %niChannel.063 to double
  %call.i = tail call double @sqrt(double %conv.i) #24
  %.pre114 = load i32, i32* %1, align 8, !tbaa !65
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %132 = phi i32 [ %.pre114, %if.then ], [ %130, %for.body ]
  %inc32 = add nuw i32 %niChannel.063, 1
  %cmp = icmp ult i32 %inc32, %132
  br i1 %cmp, label %for.body, label %for.end33

for.end33:                                        ; preds = %if.end, %if.end.us, %entry
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #15

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN17CAmbisonicDecoderC2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSpeakerSetUp to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %tobool = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %1
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %3) #27
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD0Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty.i = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %1
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %3) #27
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %entry
  %11 = bitcast %class.CAmbisonicDecoder* %this to i8*
  tail call void @_ZdlPv(i8* %11) #27
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #3 align 2 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !64
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !65
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers)
  %3 = bitcast %class.CAmbisonicDecoder* %this to void (%class.CAmbisonicDecoder*)***
  %vtable = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %3, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable, i64 4
  %4 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicDecoder* %this)
  ret i1 true
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i1753 = alloca float, align 4
  %ref.tmp5.i.i1754 = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  store i32 %nSpeakerSetUp, i32* %m_nSpeakerSetUp, align 8, !tbaa !261
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %tobool = icmp eq %class.CAmbisonicSpeaker* %0, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 -1, i32 0, i32 3, i32 2
  %2 = bitcast float* %1 to i8*
  %3 = bitcast float* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %arraydestroy.isempty = icmp eq i64 %4, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %4
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %5 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %6, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %7 = bitcast float* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %7) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %8, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %9 = bitcast float* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %0
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %2) #27
  %.pr = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !261
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  %10 = phi i32 [ %nSpeakerSetUp, %entry ], [ %.pr, %arraydestroy.done3 ]
  switch i32 %10, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
    i32 1, label %sw.bb52
    i32 2, label %sw.bb103
    i32 3, label %sw.bb170
    i32 4, label %sw.bb252
    i32 5, label %for.body374.lr.ph
    i32 6, label %for.body423.lr.ph
    i32 7, label %for.body475.lr.ph
    i32 8, label %for.body527.lr.ph
    i32 9, label %for.body579.lr.ph
    i32 10, label %for.body631.lr.ph
    i32 11, label %sw.bb658
    i32 12, label %sw.bb751
    i32 13, label %sw.bb1087
    i32 14, label %sw.bb1181
  ]

sw.bb:                                            ; preds = %if.end
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 %nSpeakers, i32* %m_nSpeakers, align 4, !tbaa !262
  %conv = zext i32 %nSpeakers to i64
  %11 = mul nuw nsw i64 %conv, 88
  %12 = add nuw nsw i64 %11, 8
  %call = tail call i8* @_Znam(i64 %12) #26
  %13 = bitcast i8* %call to i64*
  store i64 %conv, i64* %13, align 16
  %14 = getelementptr inbounds i8, i8* %call, i64 8
  %15 = bitcast i8* %14 to %class.CAmbisonicSpeaker*
  %isempty = icmp eq i32 %nSpeakers, 0
  br i1 %isempty, label %arrayctor.cont.thread, label %new.ctorloop

arrayctor.cont.thread:                            ; preds = %sw.bb
  %16 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %16, align 8, !tbaa !259
  br label %sw.epilog

new.ctorloop:                                     ; preds = %sw.bb
  %arrayctor.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %15, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %arrayctor.loop, %new.ctorloop
  %arrayctor.cur = phi %class.CAmbisonicSpeaker* [ %15, %new.ctorloop ], [ %arrayctor.next, %arrayctor.loop ]
  %17 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %18, align 8, !tbaa !61
  %19 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %19, align 4, !tbaa !64
  %20 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %20, align 8, !tbaa !65
  %21 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %21, align 4, !tbaa !66
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 3, i32 2
  %22 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !68
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !tbaa !40
  %arrayctor.next = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %arrayctor.loop
  %.pre = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %phitmp = icmp eq i32 %.pre, 0
  %23 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %23, align 8, !tbaa !259
  br i1 %phitmp, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %24 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %26 = load i32, i32* %24, align 8, !tbaa !61
  %27 = load i8, i8* %25, align 4, !tbaa !64, !range !67
  %tobool161793 = icmp ne i8 %27, 0
  %28 = bitcast i8* %14 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1794 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %28, align 8, !tbaa !40
  %vfn1795 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1794, i64 2
  %29 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1795, align 8
  %call171796 = tail call zeroext i1 %29(%class.CAmbisonicSpeaker* nonnull %15, i32 %26, i1 zeroext %tobool161793, i32 0)
  %30 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %cmp1797 = icmp ugt i32 %30, 1
  br i1 %cmp1797, label %for.body.for.body_crit_edge, label %sw.epilog

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv.next17191798 = phi i64 [ %indvars.iv.next1719, %for.body.for.body_crit_edge ], [ 1, %for.body.lr.ph ]
  %.pre1742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %.pre1742, i64 %indvars.iv.next17191798
  %31 = load i32, i32* %24, align 8, !tbaa !61
  %32 = load i8, i8* %25, align 4, !tbaa !64, !range !67
  %tobool16 = icmp ne i8 %32, 0
  %33 = bitcast %class.CAmbisonicSpeaker* %arrayidx to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %33, align 8, !tbaa !40
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable, i64 2
  %34 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn, align 8
  %call17 = tail call zeroext i1 %34(%class.CAmbisonicSpeaker* nonnull %arrayidx, i32 %31, i1 zeroext %tobool16, i32 0)
  %indvars.iv.next1719 = add nuw nsw i64 %indvars.iv.next17191798, 1
  %35 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %36 = zext i32 %35 to i64
  %cmp = icmp ult i64 %indvars.iv.next1719, %36
  br i1 %cmp, label %for.body.for.body_crit_edge, label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %m_nSpeakers19 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers19, align 4, !tbaa !262
  %call22 = tail call i8* @_Znam(i64 96) #26
  %37 = bitcast i8* %call22 to i64*
  store i64 1, i64* %37, align 16
  %38 = getelementptr inbounds i8, i8* %call22, i64 8
  %39 = bitcast i8* %38 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %call22, i64 16
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds i8, i8* %call22, i64 20
  %43 = getelementptr inbounds i8, i8* %call22, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8, !tbaa !65
  %45 = getelementptr inbounds i8, i8* %call22, i64 28
  store i8 0, i8* %45, align 4, !tbaa !66
  %m_pfCoeff.i.i1610 = getelementptr inbounds i8, i8* %call22, i64 32
  %fDistance.i.i1611 = getelementptr inbounds i8, i8* %call22, i64 88
  %46 = bitcast i8* %fDistance.i.i1611 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1610, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %46, align 8, !tbaa !68
  %m_fGain.i.i1612 = getelementptr inbounds i8, i8* %call22, i64 92
  %47 = bitcast i8* %m_fGain.i.i1612 to float*
  store float 1.000000e+00, float* %47, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !40
  %48 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %38, i8** %48, align 8, !tbaa !259
  %49 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8, !tbaa !61
  %51 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %52 = load i8, i8* %51, align 4, !tbaa !64, !range !67
  %tobool44 = icmp ne i8 %52, 0
  store i32 %50, i32* %41, align 8, !tbaa !61
  store i8 %52, i8* %42, align 4, !tbaa !64
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %50, i1 zeroext %tobool44)
  store i32 %call.i.i.i, i32* %44, align 8, !tbaa !65
  %conv.i.i = zext i32 %call.i.i.i to i64
  %53 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !50
  %_M_finish.i.i.i.i = getelementptr inbounds i8, i8* %call22, i64 40
  %54 = bitcast i8* %_M_finish.i.i.i.i to float**
  %55 = bitcast i8* %_M_finish.i.i.i.i to i64*
  %56 = load i64, i64* %55, align 8, !tbaa !73
  %57 = bitcast i8* %m_pfCoeff.i.i1610 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i.i = sub i64 %56, %58
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %59 = inttoptr i64 %58 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %sw.bb18
  %60 = bitcast i8* %m_pfCoeff.i.i1610 to %"class.std::vector.0"*
  %61 = inttoptr i64 %56 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %60, float* %61, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %sw.bb18
  %cmp6.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp6.i.i.i, label %if.then7.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then7.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %59, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %54, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then7.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds i8, i8* %call22, i64 56
  %62 = load i32, i32* %41, align 8, !tbaa !61
  %add.i.i = add i32 %62, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %63 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !50
  %_M_finish.i.i6.i.i = getelementptr inbounds i8, i8* %call22, i64 64
  %64 = bitcast i8* %_M_finish.i.i6.i.i to float**
  %65 = bitcast i8* %_M_finish.i.i6.i.i to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !73
  %67 = bitcast i8* %m_pfOrderWeights.i.i to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i.i = sub i64 %66, %68
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %69 = inttoptr i64 %68 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %70 = bitcast i8* %m_pfOrderWeights.i.i to %"class.std::vector.0"*
  %71 = inttoptr i64 %66 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %70, float* %71, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp6.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp6.i12.i.i, label %if.then7.i15.i.i, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.then7.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %69, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %64, align 8, !tbaa !73
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit:        ; preds = %if.then7.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #24
  %72 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %73 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %72, align 8, !tbaa !259
  %74 = bitcast %class.CAmbisonicSource* %73 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable50 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %74, align 8, !tbaa !40
  %vfn51 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable50, i64 5
  %75 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn51, align 8
  tail call void %75(%class.CAmbisonicSource* %73, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.bb52:                                          ; preds = %if.end
  %m_nSpeakers53 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 2, i32* %m_nSpeakers53, align 4, !tbaa !262
  %call56 = tail call i8* @_Znam(i64 184) #26
  %76 = bitcast i8* %call56 to i64*
  store i64 2, i64* %76, align 16
  %77 = getelementptr inbounds i8, i8* %call56, i64 8
  %78 = bitcast i8* %77 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %call56, i64 16
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 8, !tbaa !61
  %81 = getelementptr inbounds i8, i8* %call56, i64 20
  store i8 0, i8* %81, align 4, !tbaa !64
  %82 = getelementptr inbounds i8, i8* %call56, i64 24
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8, !tbaa !65
  %84 = getelementptr inbounds i8, i8* %call56, i64 28
  store i8 0, i8* %84, align 4, !tbaa !66
  %m_pfCoeff.i.i1613 = getelementptr inbounds i8, i8* %call56, i64 32
  %fDistance.i.i1614 = getelementptr inbounds i8, i8* %call56, i64 88
  %85 = bitcast i8* %fDistance.i.i1614 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %85, align 8, !tbaa !68
  %m_fGain.i.i1615 = getelementptr inbounds i8, i8* %call56, i64 92
  %86 = bitcast i8* %m_fGain.i.i1615 to float*
  store float 1.000000e+00, float* %86, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !tbaa !40
  %arrayctor.next70 = getelementptr inbounds i8, i8* %call56, i64 96
  %87 = bitcast i8* %arrayctor.next70 to i32 (...)***
  %88 = getelementptr inbounds i8, i8* %call56, i64 104
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 8, !tbaa !61
  %90 = getelementptr inbounds i8, i8* %call56, i64 108
  store i8 0, i8* %90, align 4, !tbaa !64
  %91 = getelementptr inbounds i8, i8* %call56, i64 112
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 8, !tbaa !65
  %93 = getelementptr inbounds i8, i8* %call56, i64 116
  store i8 0, i8* %93, align 4, !tbaa !66
  %m_pfCoeff.i.i1613.1 = getelementptr inbounds i8, i8* %call56, i64 120
  %fDistance.i.i1614.1 = getelementptr inbounds i8, i8* %call56, i64 176
  %94 = bitcast i8* %fDistance.i.i1614.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %94, align 8, !tbaa !68
  %m_fGain.i.i1615.1 = getelementptr inbounds i8, i8* %call56, i64 180
  %95 = bitcast i8* %m_fGain.i.i1615.1 to float*
  store float 1.000000e+00, float* %95, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8, !tbaa !40
  %96 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %77, i8** %96, align 8, !tbaa !259
  %call74 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1527 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call74, i32 0
  %97 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %98 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8, !tbaa !61
  %100 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %101 = load i8, i8* %100, align 4, !tbaa !64, !range !67
  %tobool79 = icmp ne i8 %101, 0
  %102 = bitcast %class.CAmbisonicSpeaker* %97 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable80 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %102, align 8, !tbaa !40
  %vfn81 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable80, i64 2
  %103 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn81, align 8
  %call82 = tail call zeroext i1 %103(%class.CAmbisonicSpeaker* %97, i32 %99, i1 zeroext %tobool79, i32 0)
  %104 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %105 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %104, align 8, !tbaa !259
  %106 = bitcast %class.CAmbisonicSource* %105 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable86 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %106, align 8, !tbaa !40
  %vfn87 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable86, i64 5
  %107 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn87, align 8
  tail call void %107(%class.CAmbisonicSource* %105, <2 x float> %polPosition.sroa.0.0.vec.insert1527, float 1.000000e+00)
  %call88 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1525 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1527, float %call88, i32 0
  %108 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx91 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %108, i64 1
  %109 = load i32, i32* %98, align 8, !tbaa !61
  %110 = load i8, i8* %100, align 4, !tbaa !64, !range !67
  %tobool94 = icmp ne i8 %110, 0
  %111 = bitcast %class.CAmbisonicSpeaker* %arrayidx91 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable95 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %111, align 8, !tbaa !40
  %vfn96 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable95, i64 2
  %112 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn96, align 8
  %call97 = tail call zeroext i1 %112(%class.CAmbisonicSpeaker* nonnull %arrayidx91, i32 %109, i1 zeroext %tobool94, i32 0)
  %113 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %114 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %113, i64 1, i32 0
  %115 = bitcast %class.CAmbisonicSource* %114 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable101 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %115, align 8, !tbaa !40
  %vfn102 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable101, i64 5
  %116 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn102, align 8
  tail call void %116(%class.CAmbisonicSource* nonnull %114, <2 x float> %polPosition.sroa.0.0.vec.insert1525, float 1.000000e+00)
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.end
  %m_nSpeakers104 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 3, i32* %m_nSpeakers104, align 4, !tbaa !262
  %call107 = tail call i8* @_Znam(i64 272) #26
  %117 = bitcast i8* %call107 to i64*
  store i64 3, i64* %117, align 16
  %118 = getelementptr inbounds i8, i8* %call107, i64 8
  %119 = bitcast i8* %118 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %call107, i64 16
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !tbaa !61
  %122 = getelementptr inbounds i8, i8* %call107, i64 20
  store i8 0, i8* %122, align 4, !tbaa !64
  %123 = getelementptr inbounds i8, i8* %call107, i64 24
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 8, !tbaa !65
  %125 = getelementptr inbounds i8, i8* %call107, i64 28
  store i8 0, i8* %125, align 4, !tbaa !66
  %m_pfCoeff.i.i1616 = getelementptr inbounds i8, i8* %call107, i64 32
  %fDistance.i.i1617 = getelementptr inbounds i8, i8* %call107, i64 88
  %126 = bitcast i8* %fDistance.i.i1617 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %126, align 8, !tbaa !68
  %m_fGain.i.i1618 = getelementptr inbounds i8, i8* %call107, i64 92
  %127 = bitcast i8* %m_fGain.i.i1618 to float*
  store float 1.000000e+00, float* %127, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8, !tbaa !40
  %arrayctor.next121 = getelementptr inbounds i8, i8* %call107, i64 96
  %128 = bitcast i8* %arrayctor.next121 to i32 (...)***
  %129 = getelementptr inbounds i8, i8* %call107, i64 104
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130, align 8, !tbaa !61
  %131 = getelementptr inbounds i8, i8* %call107, i64 108
  store i8 0, i8* %131, align 4, !tbaa !64
  %132 = getelementptr inbounds i8, i8* %call107, i64 112
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 8, !tbaa !65
  %134 = getelementptr inbounds i8, i8* %call107, i64 116
  store i8 0, i8* %134, align 4, !tbaa !66
  %m_pfCoeff.i.i1616.1 = getelementptr inbounds i8, i8* %call107, i64 120
  %fDistance.i.i1617.1 = getelementptr inbounds i8, i8* %call107, i64 176
  %135 = bitcast i8* %fDistance.i.i1617.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %135, align 8, !tbaa !68
  %m_fGain.i.i1618.1 = getelementptr inbounds i8, i8* %call107, i64 180
  %136 = bitcast i8* %m_fGain.i.i1618.1 to float*
  store float 1.000000e+00, float* %136, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8, !tbaa !40
  %arrayctor.next121.1 = getelementptr inbounds i8, i8* %call107, i64 184
  %137 = bitcast i8* %arrayctor.next121.1 to i32 (...)***
  %138 = getelementptr inbounds i8, i8* %call107, i64 192
  %139 = bitcast i8* %138 to i32*
  store i32 0, i32* %139, align 8, !tbaa !61
  %140 = getelementptr inbounds i8, i8* %call107, i64 196
  store i8 0, i8* %140, align 4, !tbaa !64
  %141 = getelementptr inbounds i8, i8* %call107, i64 200
  %142 = bitcast i8* %141 to i32*
  store i32 0, i32* %142, align 8, !tbaa !65
  %143 = getelementptr inbounds i8, i8* %call107, i64 204
  store i8 0, i8* %143, align 4, !tbaa !66
  %m_pfCoeff.i.i1616.2 = getelementptr inbounds i8, i8* %call107, i64 208
  %fDistance.i.i1617.2 = getelementptr inbounds i8, i8* %call107, i64 264
  %144 = bitcast i8* %fDistance.i.i1617.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %144, align 8, !tbaa !68
  %m_fGain.i.i1618.2 = getelementptr inbounds i8, i8* %call107, i64 268
  %145 = bitcast i8* %m_fGain.i.i1618.2 to float*
  store float 1.000000e+00, float* %145, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8, !tbaa !40
  %146 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %118, i8** %146, align 8, !tbaa !259
  %call125 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1523 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call125, i32 0
  %147 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %148 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %149 = load i32, i32* %148, align 8, !tbaa !61
  %150 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %151 = load i8, i8* %150, align 4, !tbaa !64, !range !67
  %tobool131 = icmp ne i8 %151, 0
  %152 = bitcast %class.CAmbisonicSpeaker* %147 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %152, align 8, !tbaa !40
  %vfn133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable132, i64 2
  %153 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn133, align 8
  %call134 = tail call zeroext i1 %153(%class.CAmbisonicSpeaker* %147, i32 %149, i1 zeroext %tobool131, i32 0)
  %154 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %155 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %154, align 8, !tbaa !259
  %156 = bitcast %class.CAmbisonicSource* %155 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable138 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %156, align 8, !tbaa !40
  %vfn139 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable138, i64 5
  %157 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn139, align 8
  tail call void %157(%class.CAmbisonicSource* %155, <2 x float> %polPosition.sroa.0.0.vec.insert1523, float 1.000000e+00)
  %call140 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1521 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1523, float %call140, i32 0
  %158 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx143 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %158, i64 1
  %159 = load i32, i32* %148, align 8, !tbaa !61
  %160 = load i8, i8* %150, align 4, !tbaa !64, !range !67
  %tobool146 = icmp ne i8 %160, 0
  %161 = bitcast %class.CAmbisonicSpeaker* %arrayidx143 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable147 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %161, align 8, !tbaa !40
  %vfn148 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable147, i64 2
  %162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn148, align 8
  %call149 = tail call zeroext i1 %162(%class.CAmbisonicSpeaker* nonnull %arrayidx143, i32 %159, i1 zeroext %tobool146, i32 0)
  %163 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %164 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %163, i64 1, i32 0
  %165 = bitcast %class.CAmbisonicSource* %164 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable153 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %165, align 8, !tbaa !40
  %vfn154 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable153, i64 5
  %166 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn154, align 8
  tail call void %166(%class.CAmbisonicSource* nonnull %164, <2 x float> %polPosition.sroa.0.0.vec.insert1521, float 1.000000e+00)
  %call155 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1519 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1521, float %call155, i32 0
  %167 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx158 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %167, i64 2
  %168 = load i32, i32* %148, align 8, !tbaa !61
  %169 = load i8, i8* %150, align 4, !tbaa !64, !range !67
  %tobool161 = icmp ne i8 %169, 0
  %170 = bitcast %class.CAmbisonicSpeaker* %arrayidx158 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %170, align 8, !tbaa !40
  %vfn163 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable162, i64 2
  %171 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn163, align 8
  %call164 = tail call zeroext i1 %171(%class.CAmbisonicSpeaker* nonnull %arrayidx158, i32 %168, i1 zeroext %tobool161, i32 0)
  %172 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %173 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %172, i64 2, i32 0
  %174 = bitcast %class.CAmbisonicSource* %173 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable168 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %174, align 8, !tbaa !40
  %vfn169 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable168, i64 5
  %175 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn169, align 8
  tail call void %175(%class.CAmbisonicSource* nonnull %173, <2 x float> %polPosition.sroa.0.0.vec.insert1519, float 1.000000e+00)
  br label %sw.epilog

sw.bb170:                                         ; preds = %if.end
  %m_nSpeakers171 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 4, i32* %m_nSpeakers171, align 4, !tbaa !262
  %call174 = tail call i8* @_Znam(i64 360) #26
  %176 = bitcast i8* %call174 to i64*
  store i64 4, i64* %176, align 16
  %177 = getelementptr inbounds i8, i8* %call174, i64 8
  %178 = bitcast i8* %177 to i32 (...)***
  %179 = getelementptr inbounds i8, i8* %call174, i64 16
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 8, !tbaa !61
  %181 = getelementptr inbounds i8, i8* %call174, i64 20
  store i8 0, i8* %181, align 4, !tbaa !64
  %182 = getelementptr inbounds i8, i8* %call174, i64 24
  %183 = bitcast i8* %182 to i32*
  store i32 0, i32* %183, align 8, !tbaa !65
  %184 = getelementptr inbounds i8, i8* %call174, i64 28
  store i8 0, i8* %184, align 4, !tbaa !66
  %m_pfCoeff.i.i1619 = getelementptr inbounds i8, i8* %call174, i64 32
  %fDistance.i.i1620 = getelementptr inbounds i8, i8* %call174, i64 88
  %185 = bitcast i8* %fDistance.i.i1620 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %185, align 8, !tbaa !68
  %m_fGain.i.i1621 = getelementptr inbounds i8, i8* %call174, i64 92
  %186 = bitcast i8* %m_fGain.i.i1621 to float*
  store float 1.000000e+00, float* %186, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8, !tbaa !40
  %arrayctor.next188 = getelementptr inbounds i8, i8* %call174, i64 96
  %187 = bitcast i8* %arrayctor.next188 to i32 (...)***
  %188 = getelementptr inbounds i8, i8* %call174, i64 104
  %189 = bitcast i8* %188 to i32*
  store i32 0, i32* %189, align 8, !tbaa !61
  %190 = getelementptr inbounds i8, i8* %call174, i64 108
  store i8 0, i8* %190, align 4, !tbaa !64
  %191 = getelementptr inbounds i8, i8* %call174, i64 112
  %192 = bitcast i8* %191 to i32*
  store i32 0, i32* %192, align 8, !tbaa !65
  %193 = getelementptr inbounds i8, i8* %call174, i64 116
  store i8 0, i8* %193, align 4, !tbaa !66
  %m_pfCoeff.i.i1619.1 = getelementptr inbounds i8, i8* %call174, i64 120
  %fDistance.i.i1620.1 = getelementptr inbounds i8, i8* %call174, i64 176
  %194 = bitcast i8* %fDistance.i.i1620.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %194, align 8, !tbaa !68
  %m_fGain.i.i1621.1 = getelementptr inbounds i8, i8* %call174, i64 180
  %195 = bitcast i8* %m_fGain.i.i1621.1 to float*
  store float 1.000000e+00, float* %195, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8, !tbaa !40
  %arrayctor.next188.1 = getelementptr inbounds i8, i8* %call174, i64 184
  %196 = bitcast i8* %arrayctor.next188.1 to i32 (...)***
  %197 = getelementptr inbounds i8, i8* %call174, i64 192
  %198 = bitcast i8* %197 to i32*
  store i32 0, i32* %198, align 8, !tbaa !61
  %199 = getelementptr inbounds i8, i8* %call174, i64 196
  store i8 0, i8* %199, align 4, !tbaa !64
  %200 = getelementptr inbounds i8, i8* %call174, i64 200
  %201 = bitcast i8* %200 to i32*
  store i32 0, i32* %201, align 8, !tbaa !65
  %202 = getelementptr inbounds i8, i8* %call174, i64 204
  store i8 0, i8* %202, align 4, !tbaa !66
  %m_pfCoeff.i.i1619.2 = getelementptr inbounds i8, i8* %call174, i64 208
  %fDistance.i.i1620.2 = getelementptr inbounds i8, i8* %call174, i64 264
  %203 = bitcast i8* %fDistance.i.i1620.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %203, align 8, !tbaa !68
  %m_fGain.i.i1621.2 = getelementptr inbounds i8, i8* %call174, i64 268
  %204 = bitcast i8* %m_fGain.i.i1621.2 to float*
  store float 1.000000e+00, float* %204, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8, !tbaa !40
  %arrayctor.next188.2 = getelementptr inbounds i8, i8* %call174, i64 272
  %205 = bitcast i8* %arrayctor.next188.2 to i32 (...)***
  %206 = getelementptr inbounds i8, i8* %call174, i64 280
  %207 = bitcast i8* %206 to i32*
  store i32 0, i32* %207, align 8, !tbaa !61
  %208 = getelementptr inbounds i8, i8* %call174, i64 284
  store i8 0, i8* %208, align 4, !tbaa !64
  %209 = getelementptr inbounds i8, i8* %call174, i64 288
  %210 = bitcast i8* %209 to i32*
  store i32 0, i32* %210, align 8, !tbaa !65
  %211 = getelementptr inbounds i8, i8* %call174, i64 292
  store i8 0, i8* %211, align 4, !tbaa !66
  %m_pfCoeff.i.i1619.3 = getelementptr inbounds i8, i8* %call174, i64 296
  %fDistance.i.i1620.3 = getelementptr inbounds i8, i8* %call174, i64 352
  %212 = bitcast i8* %fDistance.i.i1620.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %212, align 8, !tbaa !68
  %m_fGain.i.i1621.3 = getelementptr inbounds i8, i8* %call174, i64 356
  %213 = bitcast i8* %m_fGain.i.i1621.3 to float*
  store float 1.000000e+00, float* %213, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8, !tbaa !40
  %214 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %177, i8** %214, align 8, !tbaa !259
  %call192 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1517 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call192, i32 0
  %215 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %216 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %217 = load i32, i32* %216, align 8, !tbaa !61
  %218 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %219 = load i8, i8* %218, align 4, !tbaa !64, !range !67
  %tobool198 = icmp ne i8 %219, 0
  %220 = bitcast %class.CAmbisonicSpeaker* %215 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable199 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %220, align 8, !tbaa !40
  %vfn200 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable199, i64 2
  %221 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn200, align 8
  %call201 = tail call zeroext i1 %221(%class.CAmbisonicSpeaker* %215, i32 %217, i1 zeroext %tobool198, i32 0)
  %222 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %223 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %222, align 8, !tbaa !259
  %224 = bitcast %class.CAmbisonicSource* %223 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable205 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %224, align 8, !tbaa !40
  %vfn206 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable205, i64 5
  %225 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn206, align 8
  tail call void %225(%class.CAmbisonicSource* %223, <2 x float> %polPosition.sroa.0.0.vec.insert1517, float 1.000000e+00)
  %call207 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1515 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1517, float %call207, i32 0
  %226 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx210 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %226, i64 1
  %227 = load i32, i32* %216, align 8, !tbaa !61
  %228 = load i8, i8* %218, align 4, !tbaa !64, !range !67
  %tobool213 = icmp ne i8 %228, 0
  %229 = bitcast %class.CAmbisonicSpeaker* %arrayidx210 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable214 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %229, align 8, !tbaa !40
  %vfn215 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable214, i64 2
  %230 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn215, align 8
  %call216 = tail call zeroext i1 %230(%class.CAmbisonicSpeaker* nonnull %arrayidx210, i32 %227, i1 zeroext %tobool213, i32 0)
  %231 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %232 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %231, i64 1, i32 0
  %233 = bitcast %class.CAmbisonicSource* %232 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable220 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %233, align 8, !tbaa !40
  %vfn221 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable220, i64 5
  %234 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn221, align 8
  tail call void %234(%class.CAmbisonicSource* nonnull %232, <2 x float> %polPosition.sroa.0.0.vec.insert1515, float 1.000000e+00)
  %call222 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1513 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1515, float %call222, i32 0
  %235 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx225 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %235, i64 2
  %236 = load i32, i32* %216, align 8, !tbaa !61
  %237 = load i8, i8* %218, align 4, !tbaa !64, !range !67
  %tobool228 = icmp ne i8 %237, 0
  %238 = bitcast %class.CAmbisonicSpeaker* %arrayidx225 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %238, align 8, !tbaa !40
  %vfn230 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable229, i64 2
  %239 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn230, align 8
  %call231 = tail call zeroext i1 %239(%class.CAmbisonicSpeaker* nonnull %arrayidx225, i32 %236, i1 zeroext %tobool228, i32 0)
  %240 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %241 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %240, i64 2, i32 0
  %242 = bitcast %class.CAmbisonicSource* %241 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable235 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %242, align 8, !tbaa !40
  %vfn236 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable235, i64 5
  %243 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn236, align 8
  tail call void %243(%class.CAmbisonicSource* nonnull %241, <2 x float> %polPosition.sroa.0.0.vec.insert1513, float 1.000000e+00)
  %call237 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1511 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1513, float %call237, i32 0
  %244 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %244, i64 3
  %245 = load i32, i32* %216, align 8, !tbaa !61
  %246 = load i8, i8* %218, align 4, !tbaa !64, !range !67
  %tobool243 = icmp ne i8 %246, 0
  %247 = bitcast %class.CAmbisonicSpeaker* %arrayidx240 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable244 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %247, align 8, !tbaa !40
  %vfn245 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable244, i64 2
  %248 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn245, align 8
  %call246 = tail call zeroext i1 %248(%class.CAmbisonicSpeaker* nonnull %arrayidx240, i32 %245, i1 zeroext %tobool243, i32 0)
  %249 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %250 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %249, i64 3, i32 0
  %251 = bitcast %class.CAmbisonicSource* %250 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable250 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %251, align 8, !tbaa !40
  %vfn251 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable250, i64 5
  %252 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn251, align 8
  tail call void %252(%class.CAmbisonicSource* nonnull %250, <2 x float> %polPosition.sroa.0.0.vec.insert1511, float 1.000000e+00)
  br label %sw.epilog

sw.bb252:                                         ; preds = %if.end
  %m_nSpeakers253 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers253, align 4, !tbaa !262
  %call256 = tail call i8* @_Znam(i64 448) #26
  %253 = bitcast i8* %call256 to i64*
  store i64 5, i64* %253, align 16
  %254 = getelementptr inbounds i8, i8* %call256, i64 8
  %255 = bitcast i8* %254 to i32 (...)***
  %256 = getelementptr inbounds i8, i8* %call256, i64 16
  %257 = bitcast i8* %256 to i32*
  store i32 0, i32* %257, align 8, !tbaa !61
  %258 = getelementptr inbounds i8, i8* %call256, i64 20
  store i8 0, i8* %258, align 4, !tbaa !64
  %259 = getelementptr inbounds i8, i8* %call256, i64 24
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 8, !tbaa !65
  %261 = getelementptr inbounds i8, i8* %call256, i64 28
  store i8 0, i8* %261, align 4, !tbaa !66
  %m_pfCoeff.i.i1625 = getelementptr inbounds i8, i8* %call256, i64 32
  %fDistance.i.i1626 = getelementptr inbounds i8, i8* %call256, i64 88
  %262 = bitcast i8* %fDistance.i.i1626 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %262, align 8, !tbaa !68
  %m_fGain.i.i1627 = getelementptr inbounds i8, i8* %call256, i64 92
  %263 = bitcast i8* %m_fGain.i.i1627 to float*
  store float 1.000000e+00, float* %263, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %255, align 8, !tbaa !40
  %arrayctor.next270 = getelementptr inbounds i8, i8* %call256, i64 96
  %264 = bitcast i8* %arrayctor.next270 to i32 (...)***
  %265 = getelementptr inbounds i8, i8* %call256, i64 104
  %266 = bitcast i8* %265 to i32*
  store i32 0, i32* %266, align 8, !tbaa !61
  %267 = getelementptr inbounds i8, i8* %call256, i64 108
  store i8 0, i8* %267, align 4, !tbaa !64
  %268 = getelementptr inbounds i8, i8* %call256, i64 112
  %269 = bitcast i8* %268 to i32*
  store i32 0, i32* %269, align 8, !tbaa !65
  %270 = getelementptr inbounds i8, i8* %call256, i64 116
  store i8 0, i8* %270, align 4, !tbaa !66
  %m_pfCoeff.i.i1625.1 = getelementptr inbounds i8, i8* %call256, i64 120
  %fDistance.i.i1626.1 = getelementptr inbounds i8, i8* %call256, i64 176
  %271 = bitcast i8* %fDistance.i.i1626.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %271, align 8, !tbaa !68
  %m_fGain.i.i1627.1 = getelementptr inbounds i8, i8* %call256, i64 180
  %272 = bitcast i8* %m_fGain.i.i1627.1 to float*
  store float 1.000000e+00, float* %272, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %264, align 8, !tbaa !40
  %arrayctor.next270.1 = getelementptr inbounds i8, i8* %call256, i64 184
  %273 = bitcast i8* %arrayctor.next270.1 to i32 (...)***
  %274 = getelementptr inbounds i8, i8* %call256, i64 192
  %275 = bitcast i8* %274 to i32*
  store i32 0, i32* %275, align 8, !tbaa !61
  %276 = getelementptr inbounds i8, i8* %call256, i64 196
  store i8 0, i8* %276, align 4, !tbaa !64
  %277 = getelementptr inbounds i8, i8* %call256, i64 200
  %278 = bitcast i8* %277 to i32*
  store i32 0, i32* %278, align 8, !tbaa !65
  %279 = getelementptr inbounds i8, i8* %call256, i64 204
  store i8 0, i8* %279, align 4, !tbaa !66
  %m_pfCoeff.i.i1625.2 = getelementptr inbounds i8, i8* %call256, i64 208
  %fDistance.i.i1626.2 = getelementptr inbounds i8, i8* %call256, i64 264
  %280 = bitcast i8* %fDistance.i.i1626.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %280, align 8, !tbaa !68
  %m_fGain.i.i1627.2 = getelementptr inbounds i8, i8* %call256, i64 268
  %281 = bitcast i8* %m_fGain.i.i1627.2 to float*
  store float 1.000000e+00, float* %281, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8, !tbaa !40
  %arrayctor.next270.2 = getelementptr inbounds i8, i8* %call256, i64 272
  %282 = bitcast i8* %arrayctor.next270.2 to i32 (...)***
  %283 = getelementptr inbounds i8, i8* %call256, i64 280
  %284 = bitcast i8* %283 to i32*
  store i32 0, i32* %284, align 8, !tbaa !61
  %285 = getelementptr inbounds i8, i8* %call256, i64 284
  store i8 0, i8* %285, align 4, !tbaa !64
  %286 = getelementptr inbounds i8, i8* %call256, i64 288
  %287 = bitcast i8* %286 to i32*
  store i32 0, i32* %287, align 8, !tbaa !65
  %288 = getelementptr inbounds i8, i8* %call256, i64 292
  store i8 0, i8* %288, align 4, !tbaa !66
  %m_pfCoeff.i.i1625.3 = getelementptr inbounds i8, i8* %call256, i64 296
  %fDistance.i.i1626.3 = getelementptr inbounds i8, i8* %call256, i64 352
  %289 = bitcast i8* %fDistance.i.i1626.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %289, align 8, !tbaa !68
  %m_fGain.i.i1627.3 = getelementptr inbounds i8, i8* %call256, i64 356
  %290 = bitcast i8* %m_fGain.i.i1627.3 to float*
  store float 1.000000e+00, float* %290, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8, !tbaa !40
  %arrayctor.next270.3 = getelementptr inbounds i8, i8* %call256, i64 360
  %291 = bitcast i8* %arrayctor.next270.3 to i32 (...)***
  %292 = getelementptr inbounds i8, i8* %call256, i64 368
  %293 = bitcast i8* %292 to i32*
  store i32 0, i32* %293, align 8, !tbaa !61
  %294 = getelementptr inbounds i8, i8* %call256, i64 372
  store i8 0, i8* %294, align 4, !tbaa !64
  %295 = getelementptr inbounds i8, i8* %call256, i64 376
  %296 = bitcast i8* %295 to i32*
  store i32 0, i32* %296, align 8, !tbaa !65
  %297 = getelementptr inbounds i8, i8* %call256, i64 380
  store i8 0, i8* %297, align 4, !tbaa !66
  %m_pfCoeff.i.i1625.4 = getelementptr inbounds i8, i8* %call256, i64 384
  %fDistance.i.i1626.4 = getelementptr inbounds i8, i8* %call256, i64 440
  %298 = bitcast i8* %fDistance.i.i1626.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %298, align 8, !tbaa !68
  %m_fGain.i.i1627.4 = getelementptr inbounds i8, i8* %call256, i64 444
  %299 = bitcast i8* %m_fGain.i.i1627.4 to float*
  store float 1.000000e+00, float* %299, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8, !tbaa !40
  %300 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %254, i8** %300, align 8, !tbaa !259
  %call274 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1509 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call274, i32 0
  %301 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %302 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %303 = load i32, i32* %302, align 8, !tbaa !61
  %304 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %305 = load i8, i8* %304, align 4, !tbaa !64, !range !67
  %tobool280 = icmp ne i8 %305, 0
  %306 = bitcast %class.CAmbisonicSpeaker* %301 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable281 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %306, align 8, !tbaa !40
  %vfn282 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable281, i64 2
  %307 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn282, align 8
  %call283 = tail call zeroext i1 %307(%class.CAmbisonicSpeaker* %301, i32 %303, i1 zeroext %tobool280, i32 0)
  %308 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %309 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %308, align 8, !tbaa !259
  %310 = bitcast %class.CAmbisonicSource* %309 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable287 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %310, align 8, !tbaa !40
  %vfn288 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable287, i64 5
  %311 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn288, align 8
  tail call void %311(%class.CAmbisonicSource* %309, <2 x float> %polPosition.sroa.0.0.vec.insert1509, float 1.000000e+00)
  %call289 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1507 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1509, float %call289, i32 0
  %312 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx292 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %312, i64 1
  %313 = load i32, i32* %302, align 8, !tbaa !61
  %314 = load i8, i8* %304, align 4, !tbaa !64, !range !67
  %tobool295 = icmp ne i8 %314, 0
  %315 = bitcast %class.CAmbisonicSpeaker* %arrayidx292 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable296 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %315, align 8, !tbaa !40
  %vfn297 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable296, i64 2
  %316 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn297, align 8
  %call298 = tail call zeroext i1 %316(%class.CAmbisonicSpeaker* nonnull %arrayidx292, i32 %313, i1 zeroext %tobool295, i32 0)
  %317 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %318 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %317, i64 1, i32 0
  %319 = bitcast %class.CAmbisonicSource* %318 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable302 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %319, align 8, !tbaa !40
  %vfn303 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable302, i64 5
  %320 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn303, align 8
  tail call void %320(%class.CAmbisonicSource* nonnull %318, <2 x float> %polPosition.sroa.0.0.vec.insert1507, float 1.000000e+00)
  %call304 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1505 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1507, float %call304, i32 0
  %321 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx307 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %321, i64 2
  %322 = load i32, i32* %302, align 8, !tbaa !61
  %323 = load i8, i8* %304, align 4, !tbaa !64, !range !67
  %tobool310 = icmp ne i8 %323, 0
  %324 = bitcast %class.CAmbisonicSpeaker* %arrayidx307 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable311 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %324, align 8, !tbaa !40
  %vfn312 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable311, i64 2
  %325 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn312, align 8
  %call313 = tail call zeroext i1 %325(%class.CAmbisonicSpeaker* nonnull %arrayidx307, i32 %322, i1 zeroext %tobool310, i32 0)
  %326 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %327 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %326, i64 2, i32 0
  %328 = bitcast %class.CAmbisonicSource* %327 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable317 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %328, align 8, !tbaa !40
  %vfn318 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable317, i64 5
  %329 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn318, align 8
  tail call void %329(%class.CAmbisonicSource* nonnull %327, <2 x float> %polPosition.sroa.0.0.vec.insert1505, float 1.000000e+00)
  %call319 = tail call float @_Z16DegreesToRadiansf(float 1.100000e+02)
  %polPosition.sroa.0.0.vec.insert = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1505, float %call319, i32 0
  %330 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx322 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %330, i64 3
  %331 = load i32, i32* %302, align 8, !tbaa !61
  %332 = load i8, i8* %304, align 4, !tbaa !64, !range !67
  %tobool325 = icmp ne i8 %332, 0
  %333 = bitcast %class.CAmbisonicSpeaker* %arrayidx322 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable326 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %333, align 8, !tbaa !40
  %vfn327 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable326, i64 2
  %334 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn327, align 8
  %call328 = tail call zeroext i1 %334(%class.CAmbisonicSpeaker* nonnull %arrayidx322, i32 %331, i1 zeroext %tobool325, i32 0)
  %335 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %336 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %335, i64 3, i32 0
  %337 = bitcast %class.CAmbisonicSource* %336 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable332 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %337, align 8, !tbaa !40
  %vfn333 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable332, i64 5
  %338 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn333, align 8
  tail call void %338(%class.CAmbisonicSource* nonnull %336, <2 x float> %polPosition.sroa.0.0.vec.insert, float 1.000000e+00)
  %call334 = tail call float @_Z16DegreesToRadiansf(float -1.100000e+02)
  %polPosition.sroa.0.0.vec.insert1501 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert, float %call334, i32 0
  %339 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx337 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %339, i64 4
  %340 = load i32, i32* %302, align 8, !tbaa !61
  %341 = load i8, i8* %304, align 4, !tbaa !64, !range !67
  %tobool340 = icmp ne i8 %341, 0
  %342 = bitcast %class.CAmbisonicSpeaker* %arrayidx337 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable341 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %342, align 8, !tbaa !40
  %vfn342 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable341, i64 2
  %343 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn342, align 8
  %call343 = tail call zeroext i1 %343(%class.CAmbisonicSpeaker* nonnull %arrayidx337, i32 %340, i1 zeroext %tobool340, i32 0)
  %344 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %345 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %344, i64 4, i32 0
  %346 = bitcast %class.CAmbisonicSource* %345 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable347 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %346, align 8, !tbaa !40
  %vfn348 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable347, i64 5
  %347 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn348, align 8
  tail call void %347(%class.CAmbisonicSource* nonnull %345, <2 x float> %polPosition.sroa.0.0.vec.insert1501, float 1.000000e+00)
  br label %sw.epilog

for.body374.lr.ph:                                ; preds = %if.end
  %m_nSpeakers350 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers350, align 4, !tbaa !262
  %call353 = tail call i8* @_Znam(i64 448) #26
  %348 = bitcast i8* %call353 to i64*
  store i64 5, i64* %348, align 16
  %349 = getelementptr inbounds i8, i8* %call353, i64 8
  %350 = bitcast i8* %349 to i32 (...)***
  %351 = getelementptr inbounds i8, i8* %call353, i64 16
  %352 = bitcast i8* %351 to i32*
  store i32 0, i32* %352, align 8, !tbaa !61
  %353 = getelementptr inbounds i8, i8* %call353, i64 20
  store i8 0, i8* %353, align 4, !tbaa !64
  %354 = getelementptr inbounds i8, i8* %call353, i64 24
  %355 = bitcast i8* %354 to i32*
  store i32 0, i32* %355, align 8, !tbaa !65
  %356 = getelementptr inbounds i8, i8* %call353, i64 28
  store i8 0, i8* %356, align 4, !tbaa !66
  %m_pfCoeff.i.i1628 = getelementptr inbounds i8, i8* %call353, i64 32
  %fDistance.i.i1629 = getelementptr inbounds i8, i8* %call353, i64 88
  %357 = bitcast i8* %fDistance.i.i1629 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %357, align 8, !tbaa !68
  %m_fGain.i.i1630 = getelementptr inbounds i8, i8* %call353, i64 92
  %358 = bitcast i8* %m_fGain.i.i1630 to float*
  store float 1.000000e+00, float* %358, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %350, align 8, !tbaa !40
  %arrayctor.next367 = getelementptr inbounds i8, i8* %call353, i64 96
  %359 = bitcast i8* %arrayctor.next367 to i32 (...)***
  %360 = getelementptr inbounds i8, i8* %call353, i64 104
  %361 = bitcast i8* %360 to i32*
  store i32 0, i32* %361, align 8, !tbaa !61
  %362 = getelementptr inbounds i8, i8* %call353, i64 108
  store i8 0, i8* %362, align 4, !tbaa !64
  %363 = getelementptr inbounds i8, i8* %call353, i64 112
  %364 = bitcast i8* %363 to i32*
  store i32 0, i32* %364, align 8, !tbaa !65
  %365 = getelementptr inbounds i8, i8* %call353, i64 116
  store i8 0, i8* %365, align 4, !tbaa !66
  %m_pfCoeff.i.i1628.1 = getelementptr inbounds i8, i8* %call353, i64 120
  %fDistance.i.i1629.1 = getelementptr inbounds i8, i8* %call353, i64 176
  %366 = bitcast i8* %fDistance.i.i1629.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %366, align 8, !tbaa !68
  %m_fGain.i.i1630.1 = getelementptr inbounds i8, i8* %call353, i64 180
  %367 = bitcast i8* %m_fGain.i.i1630.1 to float*
  store float 1.000000e+00, float* %367, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8, !tbaa !40
  %arrayctor.next367.1 = getelementptr inbounds i8, i8* %call353, i64 184
  %368 = bitcast i8* %arrayctor.next367.1 to i32 (...)***
  %369 = getelementptr inbounds i8, i8* %call353, i64 192
  %370 = bitcast i8* %369 to i32*
  store i32 0, i32* %370, align 8, !tbaa !61
  %371 = getelementptr inbounds i8, i8* %call353, i64 196
  store i8 0, i8* %371, align 4, !tbaa !64
  %372 = getelementptr inbounds i8, i8* %call353, i64 200
  %373 = bitcast i8* %372 to i32*
  store i32 0, i32* %373, align 8, !tbaa !65
  %374 = getelementptr inbounds i8, i8* %call353, i64 204
  store i8 0, i8* %374, align 4, !tbaa !66
  %m_pfCoeff.i.i1628.2 = getelementptr inbounds i8, i8* %call353, i64 208
  %fDistance.i.i1629.2 = getelementptr inbounds i8, i8* %call353, i64 264
  %375 = bitcast i8* %fDistance.i.i1629.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %375, align 8, !tbaa !68
  %m_fGain.i.i1630.2 = getelementptr inbounds i8, i8* %call353, i64 268
  %376 = bitcast i8* %m_fGain.i.i1630.2 to float*
  store float 1.000000e+00, float* %376, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8, !tbaa !40
  %arrayctor.next367.2 = getelementptr inbounds i8, i8* %call353, i64 272
  %377 = bitcast i8* %arrayctor.next367.2 to i32 (...)***
  %378 = getelementptr inbounds i8, i8* %call353, i64 280
  %379 = bitcast i8* %378 to i32*
  store i32 0, i32* %379, align 8, !tbaa !61
  %380 = getelementptr inbounds i8, i8* %call353, i64 284
  store i8 0, i8* %380, align 4, !tbaa !64
  %381 = getelementptr inbounds i8, i8* %call353, i64 288
  %382 = bitcast i8* %381 to i32*
  store i32 0, i32* %382, align 8, !tbaa !65
  %383 = getelementptr inbounds i8, i8* %call353, i64 292
  store i8 0, i8* %383, align 4, !tbaa !66
  %m_pfCoeff.i.i1628.3 = getelementptr inbounds i8, i8* %call353, i64 296
  %fDistance.i.i1629.3 = getelementptr inbounds i8, i8* %call353, i64 352
  %384 = bitcast i8* %fDistance.i.i1629.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %384, align 8, !tbaa !68
  %m_fGain.i.i1630.3 = getelementptr inbounds i8, i8* %call353, i64 356
  %385 = bitcast i8* %m_fGain.i.i1630.3 to float*
  store float 1.000000e+00, float* %385, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %377, align 8, !tbaa !40
  %arrayctor.next367.3 = getelementptr inbounds i8, i8* %call353, i64 360
  %386 = bitcast i8* %arrayctor.next367.3 to i32 (...)***
  %387 = getelementptr inbounds i8, i8* %call353, i64 368
  %388 = bitcast i8* %387 to i32*
  store i32 0, i32* %388, align 8, !tbaa !61
  %389 = getelementptr inbounds i8, i8* %call353, i64 372
  store i8 0, i8* %389, align 4, !tbaa !64
  %390 = getelementptr inbounds i8, i8* %call353, i64 376
  %391 = bitcast i8* %390 to i32*
  store i32 0, i32* %391, align 8, !tbaa !65
  %392 = getelementptr inbounds i8, i8* %call353, i64 380
  store i8 0, i8* %392, align 4, !tbaa !66
  %m_pfCoeff.i.i1628.4 = getelementptr inbounds i8, i8* %call353, i64 384
  %fDistance.i.i1629.4 = getelementptr inbounds i8, i8* %call353, i64 440
  %393 = bitcast i8* %fDistance.i.i1629.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %393, align 8, !tbaa !68
  %m_fGain.i.i1630.4 = getelementptr inbounds i8, i8* %call353, i64 444
  %394 = bitcast i8* %m_fGain.i.i1630.4 to float*
  store float 1.000000e+00, float* %394, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %386, align 8, !tbaa !40
  %395 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %349, i8** %395, align 8, !tbaa !259
  %396 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %397 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body374

for.body374:                                      ; preds = %for.body374, %for.body374.lr.ph
  %indvars.iv1720 = phi i64 [ 0, %for.body374.lr.ph ], [ %indvars.iv.next1721, %for.body374 ]
  %398 = phi i32 [ 5, %for.body374.lr.ph ], [ %409, %for.body374 ]
  %polPosition.sroa.0.01673 = phi <2 x float> [ zeroinitializer, %for.body374.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1499, %for.body374 ]
  %399 = trunc i64 %indvars.iv1720 to i32
  %conv375 = uitofp i32 %399 to float
  %mul = fmul float %conv375, 3.600000e+02
  %conv377 = uitofp i32 %398 to float
  %div = fdiv float %mul, %conv377
  %call378 = tail call float @_Z16DegreesToRadiansf(float %div)
  %sub = fsub float -0.000000e+00, %call378
  %polPosition.sroa.0.0.vec.insert1499 = insertelement <2 x float> %polPosition.sroa.0.01673, float %sub, i32 0
  %400 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx382 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %400, i64 %indvars.iv1720
  %401 = load i32, i32* %396, align 8, !tbaa !61
  %402 = load i8, i8* %397, align 4, !tbaa !64, !range !67
  %tobool385 = icmp ne i8 %402, 0
  %403 = bitcast %class.CAmbisonicSpeaker* %arrayidx382 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable386 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %403, align 8, !tbaa !40
  %vfn387 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable386, i64 2
  %404 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn387, align 8
  %call388 = tail call zeroext i1 %404(%class.CAmbisonicSpeaker* %arrayidx382, i32 %401, i1 zeroext %tobool385, i32 0)
  %405 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %406 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %405, i64 %indvars.iv1720, i32 0
  %407 = bitcast %class.CAmbisonicSource* %406 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable393 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %407, align 8, !tbaa !40
  %vfn394 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable393, i64 5
  %408 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn394, align 8
  tail call void %408(%class.CAmbisonicSource* %406, <2 x float> %polPosition.sroa.0.0.vec.insert1499, float 1.000000e+00)
  %indvars.iv.next1721 = add nuw nsw i64 %indvars.iv1720, 1
  %409 = load i32, i32* %m_nSpeakers350, align 4, !tbaa !262
  %410 = zext i32 %409 to i64
  %cmp373 = icmp ult i64 %indvars.iv.next1721, %410
  br i1 %cmp373, label %for.body374, label %sw.epilog

for.body423.lr.ph:                                ; preds = %if.end
  %m_nSpeakers399 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers399, align 4, !tbaa !262
  %call402 = tail call i8* @_Znam(i64 536) #26
  %411 = bitcast i8* %call402 to i64*
  store i64 6, i64* %411, align 16
  %412 = getelementptr inbounds i8, i8* %call402, i64 8
  %413 = bitcast i8* %412 to i32 (...)***
  %414 = getelementptr inbounds i8, i8* %call402, i64 16
  %415 = bitcast i8* %414 to i32*
  store i32 0, i32* %415, align 8, !tbaa !61
  %416 = getelementptr inbounds i8, i8* %call402, i64 20
  store i8 0, i8* %416, align 4, !tbaa !64
  %417 = getelementptr inbounds i8, i8* %call402, i64 24
  %418 = bitcast i8* %417 to i32*
  store i32 0, i32* %418, align 8, !tbaa !65
  %419 = getelementptr inbounds i8, i8* %call402, i64 28
  store i8 0, i8* %419, align 4, !tbaa !66
  %m_pfCoeff.i.i1634 = getelementptr inbounds i8, i8* %call402, i64 32
  %fDistance.i.i1635 = getelementptr inbounds i8, i8* %call402, i64 88
  %420 = bitcast i8* %fDistance.i.i1635 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %420, align 8, !tbaa !68
  %m_fGain.i.i1636 = getelementptr inbounds i8, i8* %call402, i64 92
  %421 = bitcast i8* %m_fGain.i.i1636 to float*
  store float 1.000000e+00, float* %421, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %413, align 8, !tbaa !40
  %arrayctor.next416 = getelementptr inbounds i8, i8* %call402, i64 96
  %422 = bitcast i8* %arrayctor.next416 to i32 (...)***
  %423 = getelementptr inbounds i8, i8* %call402, i64 104
  %424 = bitcast i8* %423 to i32*
  store i32 0, i32* %424, align 8, !tbaa !61
  %425 = getelementptr inbounds i8, i8* %call402, i64 108
  store i8 0, i8* %425, align 4, !tbaa !64
  %426 = getelementptr inbounds i8, i8* %call402, i64 112
  %427 = bitcast i8* %426 to i32*
  store i32 0, i32* %427, align 8, !tbaa !65
  %428 = getelementptr inbounds i8, i8* %call402, i64 116
  store i8 0, i8* %428, align 4, !tbaa !66
  %m_pfCoeff.i.i1634.1 = getelementptr inbounds i8, i8* %call402, i64 120
  %fDistance.i.i1635.1 = getelementptr inbounds i8, i8* %call402, i64 176
  %429 = bitcast i8* %fDistance.i.i1635.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %429, align 8, !tbaa !68
  %m_fGain.i.i1636.1 = getelementptr inbounds i8, i8* %call402, i64 180
  %430 = bitcast i8* %m_fGain.i.i1636.1 to float*
  store float 1.000000e+00, float* %430, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %422, align 8, !tbaa !40
  %arrayctor.next416.1 = getelementptr inbounds i8, i8* %call402, i64 184
  %431 = bitcast i8* %arrayctor.next416.1 to i32 (...)***
  %432 = getelementptr inbounds i8, i8* %call402, i64 192
  %433 = bitcast i8* %432 to i32*
  store i32 0, i32* %433, align 8, !tbaa !61
  %434 = getelementptr inbounds i8, i8* %call402, i64 196
  store i8 0, i8* %434, align 4, !tbaa !64
  %435 = getelementptr inbounds i8, i8* %call402, i64 200
  %436 = bitcast i8* %435 to i32*
  store i32 0, i32* %436, align 8, !tbaa !65
  %437 = getelementptr inbounds i8, i8* %call402, i64 204
  store i8 0, i8* %437, align 4, !tbaa !66
  %m_pfCoeff.i.i1634.2 = getelementptr inbounds i8, i8* %call402, i64 208
  %fDistance.i.i1635.2 = getelementptr inbounds i8, i8* %call402, i64 264
  %438 = bitcast i8* %fDistance.i.i1635.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %438, align 8, !tbaa !68
  %m_fGain.i.i1636.2 = getelementptr inbounds i8, i8* %call402, i64 268
  %439 = bitcast i8* %m_fGain.i.i1636.2 to float*
  store float 1.000000e+00, float* %439, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8, !tbaa !40
  %arrayctor.next416.2 = getelementptr inbounds i8, i8* %call402, i64 272
  %440 = bitcast i8* %arrayctor.next416.2 to i32 (...)***
  %441 = getelementptr inbounds i8, i8* %call402, i64 280
  %442 = bitcast i8* %441 to i32*
  store i32 0, i32* %442, align 8, !tbaa !61
  %443 = getelementptr inbounds i8, i8* %call402, i64 284
  store i8 0, i8* %443, align 4, !tbaa !64
  %444 = getelementptr inbounds i8, i8* %call402, i64 288
  %445 = bitcast i8* %444 to i32*
  store i32 0, i32* %445, align 8, !tbaa !65
  %446 = getelementptr inbounds i8, i8* %call402, i64 292
  store i8 0, i8* %446, align 4, !tbaa !66
  %m_pfCoeff.i.i1634.3 = getelementptr inbounds i8, i8* %call402, i64 296
  %fDistance.i.i1635.3 = getelementptr inbounds i8, i8* %call402, i64 352
  %447 = bitcast i8* %fDistance.i.i1635.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %447, align 8, !tbaa !68
  %m_fGain.i.i1636.3 = getelementptr inbounds i8, i8* %call402, i64 356
  %448 = bitcast i8* %m_fGain.i.i1636.3 to float*
  store float 1.000000e+00, float* %448, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8, !tbaa !40
  %arrayctor.next416.3 = getelementptr inbounds i8, i8* %call402, i64 360
  %449 = bitcast i8* %arrayctor.next416.3 to i32 (...)***
  %450 = getelementptr inbounds i8, i8* %call402, i64 368
  %451 = bitcast i8* %450 to i32*
  store i32 0, i32* %451, align 8, !tbaa !61
  %452 = getelementptr inbounds i8, i8* %call402, i64 372
  store i8 0, i8* %452, align 4, !tbaa !64
  %453 = getelementptr inbounds i8, i8* %call402, i64 376
  %454 = bitcast i8* %453 to i32*
  store i32 0, i32* %454, align 8, !tbaa !65
  %455 = getelementptr inbounds i8, i8* %call402, i64 380
  store i8 0, i8* %455, align 4, !tbaa !66
  %m_pfCoeff.i.i1634.4 = getelementptr inbounds i8, i8* %call402, i64 384
  %fDistance.i.i1635.4 = getelementptr inbounds i8, i8* %call402, i64 440
  %456 = bitcast i8* %fDistance.i.i1635.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %456, align 8, !tbaa !68
  %m_fGain.i.i1636.4 = getelementptr inbounds i8, i8* %call402, i64 444
  %457 = bitcast i8* %m_fGain.i.i1636.4 to float*
  store float 1.000000e+00, float* %457, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %449, align 8, !tbaa !40
  %arrayctor.next416.4 = getelementptr inbounds i8, i8* %call402, i64 448
  %458 = bitcast i8* %arrayctor.next416.4 to i32 (...)***
  %459 = getelementptr inbounds i8, i8* %call402, i64 456
  %460 = bitcast i8* %459 to i32*
  store i32 0, i32* %460, align 8, !tbaa !61
  %461 = getelementptr inbounds i8, i8* %call402, i64 460
  store i8 0, i8* %461, align 4, !tbaa !64
  %462 = getelementptr inbounds i8, i8* %call402, i64 464
  %463 = bitcast i8* %462 to i32*
  store i32 0, i32* %463, align 8, !tbaa !65
  %464 = getelementptr inbounds i8, i8* %call402, i64 468
  store i8 0, i8* %464, align 4, !tbaa !66
  %m_pfCoeff.i.i1634.5 = getelementptr inbounds i8, i8* %call402, i64 472
  %fDistance.i.i1635.5 = getelementptr inbounds i8, i8* %call402, i64 528
  %465 = bitcast i8* %fDistance.i.i1635.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %465, align 8, !tbaa !68
  %m_fGain.i.i1636.5 = getelementptr inbounds i8, i8* %call402, i64 532
  %466 = bitcast i8* %m_fGain.i.i1636.5 to float*
  store float 1.000000e+00, float* %466, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %458, align 8, !tbaa !40
  %467 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %412, i8** %467, align 8, !tbaa !259
  %468 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %469 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body423

for.body423:                                      ; preds = %for.body423, %for.body423.lr.ph
  %indvars.iv1722 = phi i64 [ 0, %for.body423.lr.ph ], [ %indvars.iv.next1723, %for.body423 ]
  %470 = phi i32 [ 6, %for.body423.lr.ph ], [ %481, %for.body423 ]
  %polPosition.sroa.0.11676 = phi <2 x float> [ zeroinitializer, %for.body423.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1497, %for.body423 ]
  %471 = trunc i64 %indvars.iv1722 to i32
  %conv424 = uitofp i32 %471 to float
  %mul425 = fmul float %conv424, 3.600000e+02
  %conv427 = uitofp i32 %470 to float
  %div428 = fdiv float %mul425, %conv427
  %add = fadd float %div428, 3.000000e+01
  %call429 = tail call float @_Z16DegreesToRadiansf(float %add)
  %sub430 = fsub float -0.000000e+00, %call429
  %polPosition.sroa.0.0.vec.insert1497 = insertelement <2 x float> %polPosition.sroa.0.11676, float %sub430, i32 0
  %472 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx434 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %472, i64 %indvars.iv1722
  %473 = load i32, i32* %468, align 8, !tbaa !61
  %474 = load i8, i8* %469, align 4, !tbaa !64, !range !67
  %tobool437 = icmp ne i8 %474, 0
  %475 = bitcast %class.CAmbisonicSpeaker* %arrayidx434 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable438 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %475, align 8, !tbaa !40
  %vfn439 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable438, i64 2
  %476 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn439, align 8
  %call440 = tail call zeroext i1 %476(%class.CAmbisonicSpeaker* %arrayidx434, i32 %473, i1 zeroext %tobool437, i32 0)
  %477 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %478 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %477, i64 %indvars.iv1722, i32 0
  %479 = bitcast %class.CAmbisonicSource* %478 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable445 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %479, align 8, !tbaa !40
  %vfn446 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable445, i64 5
  %480 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn446, align 8
  tail call void %480(%class.CAmbisonicSource* %478, <2 x float> %polPosition.sroa.0.0.vec.insert1497, float 1.000000e+00)
  %indvars.iv.next1723 = add nuw nsw i64 %indvars.iv1722, 1
  %481 = load i32, i32* %m_nSpeakers399, align 4, !tbaa !262
  %482 = zext i32 %481 to i64
  %cmp422 = icmp ult i64 %indvars.iv.next1723, %482
  br i1 %cmp422, label %for.body423, label %sw.epilog

for.body475.lr.ph:                                ; preds = %if.end
  %m_nSpeakers451 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers451, align 4, !tbaa !262
  %call454 = tail call i8* @_Znam(i64 536) #26
  %483 = bitcast i8* %call454 to i64*
  store i64 6, i64* %483, align 16
  %484 = getelementptr inbounds i8, i8* %call454, i64 8
  %485 = bitcast i8* %484 to i32 (...)***
  %486 = getelementptr inbounds i8, i8* %call454, i64 16
  %487 = bitcast i8* %486 to i32*
  store i32 0, i32* %487, align 8, !tbaa !61
  %488 = getelementptr inbounds i8, i8* %call454, i64 20
  store i8 0, i8* %488, align 4, !tbaa !64
  %489 = getelementptr inbounds i8, i8* %call454, i64 24
  %490 = bitcast i8* %489 to i32*
  store i32 0, i32* %490, align 8, !tbaa !65
  %491 = getelementptr inbounds i8, i8* %call454, i64 28
  store i8 0, i8* %491, align 4, !tbaa !66
  %m_pfCoeff.i.i1637 = getelementptr inbounds i8, i8* %call454, i64 32
  %fDistance.i.i1638 = getelementptr inbounds i8, i8* %call454, i64 88
  %492 = bitcast i8* %fDistance.i.i1638 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %492, align 8, !tbaa !68
  %m_fGain.i.i1639 = getelementptr inbounds i8, i8* %call454, i64 92
  %493 = bitcast i8* %m_fGain.i.i1639 to float*
  store float 1.000000e+00, float* %493, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %485, align 8, !tbaa !40
  %arrayctor.next468 = getelementptr inbounds i8, i8* %call454, i64 96
  %494 = bitcast i8* %arrayctor.next468 to i32 (...)***
  %495 = getelementptr inbounds i8, i8* %call454, i64 104
  %496 = bitcast i8* %495 to i32*
  store i32 0, i32* %496, align 8, !tbaa !61
  %497 = getelementptr inbounds i8, i8* %call454, i64 108
  store i8 0, i8* %497, align 4, !tbaa !64
  %498 = getelementptr inbounds i8, i8* %call454, i64 112
  %499 = bitcast i8* %498 to i32*
  store i32 0, i32* %499, align 8, !tbaa !65
  %500 = getelementptr inbounds i8, i8* %call454, i64 116
  store i8 0, i8* %500, align 4, !tbaa !66
  %m_pfCoeff.i.i1637.1 = getelementptr inbounds i8, i8* %call454, i64 120
  %fDistance.i.i1638.1 = getelementptr inbounds i8, i8* %call454, i64 176
  %501 = bitcast i8* %fDistance.i.i1638.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %501, align 8, !tbaa !68
  %m_fGain.i.i1639.1 = getelementptr inbounds i8, i8* %call454, i64 180
  %502 = bitcast i8* %m_fGain.i.i1639.1 to float*
  store float 1.000000e+00, float* %502, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %494, align 8, !tbaa !40
  %arrayctor.next468.1 = getelementptr inbounds i8, i8* %call454, i64 184
  %503 = bitcast i8* %arrayctor.next468.1 to i32 (...)***
  %504 = getelementptr inbounds i8, i8* %call454, i64 192
  %505 = bitcast i8* %504 to i32*
  store i32 0, i32* %505, align 8, !tbaa !61
  %506 = getelementptr inbounds i8, i8* %call454, i64 196
  store i8 0, i8* %506, align 4, !tbaa !64
  %507 = getelementptr inbounds i8, i8* %call454, i64 200
  %508 = bitcast i8* %507 to i32*
  store i32 0, i32* %508, align 8, !tbaa !65
  %509 = getelementptr inbounds i8, i8* %call454, i64 204
  store i8 0, i8* %509, align 4, !tbaa !66
  %m_pfCoeff.i.i1637.2 = getelementptr inbounds i8, i8* %call454, i64 208
  %fDistance.i.i1638.2 = getelementptr inbounds i8, i8* %call454, i64 264
  %510 = bitcast i8* %fDistance.i.i1638.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %510, align 8, !tbaa !68
  %m_fGain.i.i1639.2 = getelementptr inbounds i8, i8* %call454, i64 268
  %511 = bitcast i8* %m_fGain.i.i1639.2 to float*
  store float 1.000000e+00, float* %511, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %503, align 8, !tbaa !40
  %arrayctor.next468.2 = getelementptr inbounds i8, i8* %call454, i64 272
  %512 = bitcast i8* %arrayctor.next468.2 to i32 (...)***
  %513 = getelementptr inbounds i8, i8* %call454, i64 280
  %514 = bitcast i8* %513 to i32*
  store i32 0, i32* %514, align 8, !tbaa !61
  %515 = getelementptr inbounds i8, i8* %call454, i64 284
  store i8 0, i8* %515, align 4, !tbaa !64
  %516 = getelementptr inbounds i8, i8* %call454, i64 288
  %517 = bitcast i8* %516 to i32*
  store i32 0, i32* %517, align 8, !tbaa !65
  %518 = getelementptr inbounds i8, i8* %call454, i64 292
  store i8 0, i8* %518, align 4, !tbaa !66
  %m_pfCoeff.i.i1637.3 = getelementptr inbounds i8, i8* %call454, i64 296
  %fDistance.i.i1638.3 = getelementptr inbounds i8, i8* %call454, i64 352
  %519 = bitcast i8* %fDistance.i.i1638.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %519, align 8, !tbaa !68
  %m_fGain.i.i1639.3 = getelementptr inbounds i8, i8* %call454, i64 356
  %520 = bitcast i8* %m_fGain.i.i1639.3 to float*
  store float 1.000000e+00, float* %520, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %512, align 8, !tbaa !40
  %arrayctor.next468.3 = getelementptr inbounds i8, i8* %call454, i64 360
  %521 = bitcast i8* %arrayctor.next468.3 to i32 (...)***
  %522 = getelementptr inbounds i8, i8* %call454, i64 368
  %523 = bitcast i8* %522 to i32*
  store i32 0, i32* %523, align 8, !tbaa !61
  %524 = getelementptr inbounds i8, i8* %call454, i64 372
  store i8 0, i8* %524, align 4, !tbaa !64
  %525 = getelementptr inbounds i8, i8* %call454, i64 376
  %526 = bitcast i8* %525 to i32*
  store i32 0, i32* %526, align 8, !tbaa !65
  %527 = getelementptr inbounds i8, i8* %call454, i64 380
  store i8 0, i8* %527, align 4, !tbaa !66
  %m_pfCoeff.i.i1637.4 = getelementptr inbounds i8, i8* %call454, i64 384
  %fDistance.i.i1638.4 = getelementptr inbounds i8, i8* %call454, i64 440
  %528 = bitcast i8* %fDistance.i.i1638.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %528, align 8, !tbaa !68
  %m_fGain.i.i1639.4 = getelementptr inbounds i8, i8* %call454, i64 444
  %529 = bitcast i8* %m_fGain.i.i1639.4 to float*
  store float 1.000000e+00, float* %529, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %521, align 8, !tbaa !40
  %arrayctor.next468.4 = getelementptr inbounds i8, i8* %call454, i64 448
  %530 = bitcast i8* %arrayctor.next468.4 to i32 (...)***
  %531 = getelementptr inbounds i8, i8* %call454, i64 456
  %532 = bitcast i8* %531 to i32*
  store i32 0, i32* %532, align 8, !tbaa !61
  %533 = getelementptr inbounds i8, i8* %call454, i64 460
  store i8 0, i8* %533, align 4, !tbaa !64
  %534 = getelementptr inbounds i8, i8* %call454, i64 464
  %535 = bitcast i8* %534 to i32*
  store i32 0, i32* %535, align 8, !tbaa !65
  %536 = getelementptr inbounds i8, i8* %call454, i64 468
  store i8 0, i8* %536, align 4, !tbaa !66
  %m_pfCoeff.i.i1637.5 = getelementptr inbounds i8, i8* %call454, i64 472
  %fDistance.i.i1638.5 = getelementptr inbounds i8, i8* %call454, i64 528
  %537 = bitcast i8* %fDistance.i.i1638.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %537, align 8, !tbaa !68
  %m_fGain.i.i1639.5 = getelementptr inbounds i8, i8* %call454, i64 532
  %538 = bitcast i8* %m_fGain.i.i1639.5 to float*
  store float 1.000000e+00, float* %538, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %530, align 8, !tbaa !40
  %539 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %484, i8** %539, align 8, !tbaa !259
  %540 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %541 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body475

for.body475:                                      ; preds = %for.body475, %for.body475.lr.ph
  %indvars.iv1724 = phi i64 [ 0, %for.body475.lr.ph ], [ %indvars.iv.next1725, %for.body475 ]
  %542 = phi i32 [ 6, %for.body475.lr.ph ], [ %553, %for.body475 ]
  %polPosition.sroa.0.21679 = phi <2 x float> [ zeroinitializer, %for.body475.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1495, %for.body475 ]
  %543 = trunc i64 %indvars.iv1724 to i32
  %conv476 = uitofp i32 %543 to float
  %mul477 = fmul float %conv476, 3.600000e+02
  %conv479 = uitofp i32 %542 to float
  %div480 = fdiv float %mul477, %conv479
  %call481 = tail call float @_Z16DegreesToRadiansf(float %div480)
  %sub482 = fsub float -0.000000e+00, %call481
  %polPosition.sroa.0.0.vec.insert1495 = insertelement <2 x float> %polPosition.sroa.0.21679, float %sub482, i32 0
  %544 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx486 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %544, i64 %indvars.iv1724
  %545 = load i32, i32* %540, align 8, !tbaa !61
  %546 = load i8, i8* %541, align 4, !tbaa !64, !range !67
  %tobool489 = icmp ne i8 %546, 0
  %547 = bitcast %class.CAmbisonicSpeaker* %arrayidx486 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable490 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %547, align 8, !tbaa !40
  %vfn491 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable490, i64 2
  %548 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn491, align 8
  %call492 = tail call zeroext i1 %548(%class.CAmbisonicSpeaker* %arrayidx486, i32 %545, i1 zeroext %tobool489, i32 0)
  %549 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %550 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %549, i64 %indvars.iv1724, i32 0
  %551 = bitcast %class.CAmbisonicSource* %550 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable497 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %551, align 8, !tbaa !40
  %vfn498 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable497, i64 5
  %552 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn498, align 8
  tail call void %552(%class.CAmbisonicSource* %550, <2 x float> %polPosition.sroa.0.0.vec.insert1495, float 1.000000e+00)
  %indvars.iv.next1725 = add nuw nsw i64 %indvars.iv1724, 1
  %553 = load i32, i32* %m_nSpeakers451, align 4, !tbaa !262
  %554 = zext i32 %553 to i64
  %cmp474 = icmp ult i64 %indvars.iv.next1725, %554
  br i1 %cmp474, label %for.body475, label %sw.epilog

for.body527.lr.ph:                                ; preds = %if.end
  %m_nSpeakers503 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers503, align 4, !tbaa !262
  %call506 = tail call i8* @_Znam(i64 712) #26
  %555 = bitcast i8* %call506 to i64*
  store i64 8, i64* %555, align 16
  %556 = getelementptr inbounds i8, i8* %call506, i64 8
  %557 = bitcast i8* %556 to i32 (...)***
  %558 = getelementptr inbounds i8, i8* %call506, i64 16
  %559 = bitcast i8* %558 to i32*
  store i32 0, i32* %559, align 8, !tbaa !61
  %560 = getelementptr inbounds i8, i8* %call506, i64 20
  store i8 0, i8* %560, align 4, !tbaa !64
  %561 = getelementptr inbounds i8, i8* %call506, i64 24
  %562 = bitcast i8* %561 to i32*
  store i32 0, i32* %562, align 8, !tbaa !65
  %563 = getelementptr inbounds i8, i8* %call506, i64 28
  store i8 0, i8* %563, align 4, !tbaa !66
  %m_pfCoeff.i.i1640 = getelementptr inbounds i8, i8* %call506, i64 32
  %fDistance.i.i1641 = getelementptr inbounds i8, i8* %call506, i64 88
  %564 = bitcast i8* %fDistance.i.i1641 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %564, align 8, !tbaa !68
  %m_fGain.i.i1642 = getelementptr inbounds i8, i8* %call506, i64 92
  %565 = bitcast i8* %m_fGain.i.i1642 to float*
  store float 1.000000e+00, float* %565, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %557, align 8, !tbaa !40
  %arrayctor.next520 = getelementptr inbounds i8, i8* %call506, i64 96
  %566 = bitcast i8* %arrayctor.next520 to i32 (...)***
  %567 = getelementptr inbounds i8, i8* %call506, i64 104
  %568 = bitcast i8* %567 to i32*
  store i32 0, i32* %568, align 8, !tbaa !61
  %569 = getelementptr inbounds i8, i8* %call506, i64 108
  store i8 0, i8* %569, align 4, !tbaa !64
  %570 = getelementptr inbounds i8, i8* %call506, i64 112
  %571 = bitcast i8* %570 to i32*
  store i32 0, i32* %571, align 8, !tbaa !65
  %572 = getelementptr inbounds i8, i8* %call506, i64 116
  store i8 0, i8* %572, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.1 = getelementptr inbounds i8, i8* %call506, i64 120
  %fDistance.i.i1641.1 = getelementptr inbounds i8, i8* %call506, i64 176
  %573 = bitcast i8* %fDistance.i.i1641.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %573, align 8, !tbaa !68
  %m_fGain.i.i1642.1 = getelementptr inbounds i8, i8* %call506, i64 180
  %574 = bitcast i8* %m_fGain.i.i1642.1 to float*
  store float 1.000000e+00, float* %574, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8, !tbaa !40
  %arrayctor.next520.1 = getelementptr inbounds i8, i8* %call506, i64 184
  %575 = bitcast i8* %arrayctor.next520.1 to i32 (...)***
  %576 = getelementptr inbounds i8, i8* %call506, i64 192
  %577 = bitcast i8* %576 to i32*
  store i32 0, i32* %577, align 8, !tbaa !61
  %578 = getelementptr inbounds i8, i8* %call506, i64 196
  store i8 0, i8* %578, align 4, !tbaa !64
  %579 = getelementptr inbounds i8, i8* %call506, i64 200
  %580 = bitcast i8* %579 to i32*
  store i32 0, i32* %580, align 8, !tbaa !65
  %581 = getelementptr inbounds i8, i8* %call506, i64 204
  store i8 0, i8* %581, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.2 = getelementptr inbounds i8, i8* %call506, i64 208
  %fDistance.i.i1641.2 = getelementptr inbounds i8, i8* %call506, i64 264
  %582 = bitcast i8* %fDistance.i.i1641.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %582, align 8, !tbaa !68
  %m_fGain.i.i1642.2 = getelementptr inbounds i8, i8* %call506, i64 268
  %583 = bitcast i8* %m_fGain.i.i1642.2 to float*
  store float 1.000000e+00, float* %583, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %575, align 8, !tbaa !40
  %arrayctor.next520.2 = getelementptr inbounds i8, i8* %call506, i64 272
  %584 = bitcast i8* %arrayctor.next520.2 to i32 (...)***
  %585 = getelementptr inbounds i8, i8* %call506, i64 280
  %586 = bitcast i8* %585 to i32*
  store i32 0, i32* %586, align 8, !tbaa !61
  %587 = getelementptr inbounds i8, i8* %call506, i64 284
  store i8 0, i8* %587, align 4, !tbaa !64
  %588 = getelementptr inbounds i8, i8* %call506, i64 288
  %589 = bitcast i8* %588 to i32*
  store i32 0, i32* %589, align 8, !tbaa !65
  %590 = getelementptr inbounds i8, i8* %call506, i64 292
  store i8 0, i8* %590, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.3 = getelementptr inbounds i8, i8* %call506, i64 296
  %fDistance.i.i1641.3 = getelementptr inbounds i8, i8* %call506, i64 352
  %591 = bitcast i8* %fDistance.i.i1641.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %591, align 8, !tbaa !68
  %m_fGain.i.i1642.3 = getelementptr inbounds i8, i8* %call506, i64 356
  %592 = bitcast i8* %m_fGain.i.i1642.3 to float*
  store float 1.000000e+00, float* %592, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %584, align 8, !tbaa !40
  %arrayctor.next520.3 = getelementptr inbounds i8, i8* %call506, i64 360
  %593 = bitcast i8* %arrayctor.next520.3 to i32 (...)***
  %594 = getelementptr inbounds i8, i8* %call506, i64 368
  %595 = bitcast i8* %594 to i32*
  store i32 0, i32* %595, align 8, !tbaa !61
  %596 = getelementptr inbounds i8, i8* %call506, i64 372
  store i8 0, i8* %596, align 4, !tbaa !64
  %597 = getelementptr inbounds i8, i8* %call506, i64 376
  %598 = bitcast i8* %597 to i32*
  store i32 0, i32* %598, align 8, !tbaa !65
  %599 = getelementptr inbounds i8, i8* %call506, i64 380
  store i8 0, i8* %599, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.4 = getelementptr inbounds i8, i8* %call506, i64 384
  %fDistance.i.i1641.4 = getelementptr inbounds i8, i8* %call506, i64 440
  %600 = bitcast i8* %fDistance.i.i1641.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %600, align 8, !tbaa !68
  %m_fGain.i.i1642.4 = getelementptr inbounds i8, i8* %call506, i64 444
  %601 = bitcast i8* %m_fGain.i.i1642.4 to float*
  store float 1.000000e+00, float* %601, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %593, align 8, !tbaa !40
  %arrayctor.next520.4 = getelementptr inbounds i8, i8* %call506, i64 448
  %602 = bitcast i8* %arrayctor.next520.4 to i32 (...)***
  %603 = getelementptr inbounds i8, i8* %call506, i64 456
  %604 = bitcast i8* %603 to i32*
  store i32 0, i32* %604, align 8, !tbaa !61
  %605 = getelementptr inbounds i8, i8* %call506, i64 460
  store i8 0, i8* %605, align 4, !tbaa !64
  %606 = getelementptr inbounds i8, i8* %call506, i64 464
  %607 = bitcast i8* %606 to i32*
  store i32 0, i32* %607, align 8, !tbaa !65
  %608 = getelementptr inbounds i8, i8* %call506, i64 468
  store i8 0, i8* %608, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.5 = getelementptr inbounds i8, i8* %call506, i64 472
  %fDistance.i.i1641.5 = getelementptr inbounds i8, i8* %call506, i64 528
  %609 = bitcast i8* %fDistance.i.i1641.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %609, align 8, !tbaa !68
  %m_fGain.i.i1642.5 = getelementptr inbounds i8, i8* %call506, i64 532
  %610 = bitcast i8* %m_fGain.i.i1642.5 to float*
  store float 1.000000e+00, float* %610, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %602, align 8, !tbaa !40
  %arrayctor.next520.5 = getelementptr inbounds i8, i8* %call506, i64 536
  %611 = bitcast i8* %arrayctor.next520.5 to i32 (...)***
  %612 = getelementptr inbounds i8, i8* %call506, i64 544
  %613 = bitcast i8* %612 to i32*
  store i32 0, i32* %613, align 8, !tbaa !61
  %614 = getelementptr inbounds i8, i8* %call506, i64 548
  store i8 0, i8* %614, align 4, !tbaa !64
  %615 = getelementptr inbounds i8, i8* %call506, i64 552
  %616 = bitcast i8* %615 to i32*
  store i32 0, i32* %616, align 8, !tbaa !65
  %617 = getelementptr inbounds i8, i8* %call506, i64 556
  store i8 0, i8* %617, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.6 = getelementptr inbounds i8, i8* %call506, i64 560
  %fDistance.i.i1641.6 = getelementptr inbounds i8, i8* %call506, i64 616
  %618 = bitcast i8* %fDistance.i.i1641.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %618, align 8, !tbaa !68
  %m_fGain.i.i1642.6 = getelementptr inbounds i8, i8* %call506, i64 620
  %619 = bitcast i8* %m_fGain.i.i1642.6 to float*
  store float 1.000000e+00, float* %619, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %611, align 8, !tbaa !40
  %arrayctor.next520.6 = getelementptr inbounds i8, i8* %call506, i64 624
  %620 = bitcast i8* %arrayctor.next520.6 to i32 (...)***
  %621 = getelementptr inbounds i8, i8* %call506, i64 632
  %622 = bitcast i8* %621 to i32*
  store i32 0, i32* %622, align 8, !tbaa !61
  %623 = getelementptr inbounds i8, i8* %call506, i64 636
  store i8 0, i8* %623, align 4, !tbaa !64
  %624 = getelementptr inbounds i8, i8* %call506, i64 640
  %625 = bitcast i8* %624 to i32*
  store i32 0, i32* %625, align 8, !tbaa !65
  %626 = getelementptr inbounds i8, i8* %call506, i64 644
  store i8 0, i8* %626, align 4, !tbaa !66
  %m_pfCoeff.i.i1640.7 = getelementptr inbounds i8, i8* %call506, i64 648
  %fDistance.i.i1641.7 = getelementptr inbounds i8, i8* %call506, i64 704
  %627 = bitcast i8* %fDistance.i.i1641.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %627, align 8, !tbaa !68
  %m_fGain.i.i1642.7 = getelementptr inbounds i8, i8* %call506, i64 708
  %628 = bitcast i8* %m_fGain.i.i1642.7 to float*
  store float 1.000000e+00, float* %628, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %620, align 8, !tbaa !40
  %629 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %556, i8** %629, align 8, !tbaa !259
  %630 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %631 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body527

for.body527:                                      ; preds = %for.body527, %for.body527.lr.ph
  %indvars.iv1726 = phi i64 [ 0, %for.body527.lr.ph ], [ %indvars.iv.next1727, %for.body527 ]
  %632 = phi i32 [ 8, %for.body527.lr.ph ], [ %643, %for.body527 ]
  %polPosition.sroa.0.31682 = phi <2 x float> [ zeroinitializer, %for.body527.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1493, %for.body527 ]
  %633 = trunc i64 %indvars.iv1726 to i32
  %conv528 = uitofp i32 %633 to float
  %mul529 = fmul float %conv528, 3.600000e+02
  %conv531 = uitofp i32 %632 to float
  %div532 = fdiv float %mul529, %conv531
  %call533 = tail call float @_Z16DegreesToRadiansf(float %div532)
  %sub534 = fsub float -0.000000e+00, %call533
  %polPosition.sroa.0.0.vec.insert1493 = insertelement <2 x float> %polPosition.sroa.0.31682, float %sub534, i32 0
  %634 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx538 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %634, i64 %indvars.iv1726
  %635 = load i32, i32* %630, align 8, !tbaa !61
  %636 = load i8, i8* %631, align 4, !tbaa !64, !range !67
  %tobool541 = icmp ne i8 %636, 0
  %637 = bitcast %class.CAmbisonicSpeaker* %arrayidx538 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable542 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %637, align 8, !tbaa !40
  %vfn543 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable542, i64 2
  %638 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn543, align 8
  %call544 = tail call zeroext i1 %638(%class.CAmbisonicSpeaker* %arrayidx538, i32 %635, i1 zeroext %tobool541, i32 0)
  %639 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %640 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %639, i64 %indvars.iv1726, i32 0
  %641 = bitcast %class.CAmbisonicSource* %640 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable549 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %641, align 8, !tbaa !40
  %vfn550 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable549, i64 5
  %642 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn550, align 8
  tail call void %642(%class.CAmbisonicSource* %640, <2 x float> %polPosition.sroa.0.0.vec.insert1493, float 1.000000e+00)
  %indvars.iv.next1727 = add nuw nsw i64 %indvars.iv1726, 1
  %643 = load i32, i32* %m_nSpeakers503, align 4, !tbaa !262
  %644 = zext i32 %643 to i64
  %cmp526 = icmp ult i64 %indvars.iv.next1727, %644
  br i1 %cmp526, label %for.body527, label %sw.epilog

for.body579.lr.ph:                                ; preds = %if.end
  %m_nSpeakers555 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 10, i32* %m_nSpeakers555, align 4, !tbaa !262
  %call558 = tail call i8* @_Znam(i64 888) #26
  %645 = bitcast i8* %call558 to i64*
  store i64 10, i64* %645, align 16
  %646 = getelementptr inbounds i8, i8* %call558, i64 8
  %647 = bitcast i8* %646 to i32 (...)***
  %648 = getelementptr inbounds i8, i8* %call558, i64 16
  %649 = bitcast i8* %648 to i32*
  store i32 0, i32* %649, align 8, !tbaa !61
  %650 = getelementptr inbounds i8, i8* %call558, i64 20
  store i8 0, i8* %650, align 4, !tbaa !64
  %651 = getelementptr inbounds i8, i8* %call558, i64 24
  %652 = bitcast i8* %651 to i32*
  store i32 0, i32* %652, align 8, !tbaa !65
  %653 = getelementptr inbounds i8, i8* %call558, i64 28
  store i8 0, i8* %653, align 4, !tbaa !66
  %m_pfCoeff.i.i1643 = getelementptr inbounds i8, i8* %call558, i64 32
  %fDistance.i.i1644 = getelementptr inbounds i8, i8* %call558, i64 88
  %654 = bitcast i8* %fDistance.i.i1644 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %654, align 8, !tbaa !68
  %m_fGain.i.i1645 = getelementptr inbounds i8, i8* %call558, i64 92
  %655 = bitcast i8* %m_fGain.i.i1645 to float*
  store float 1.000000e+00, float* %655, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %647, align 8, !tbaa !40
  %arrayctor.next572 = getelementptr inbounds i8, i8* %call558, i64 96
  %656 = bitcast i8* %arrayctor.next572 to i32 (...)***
  %657 = getelementptr inbounds i8, i8* %call558, i64 104
  %658 = bitcast i8* %657 to i32*
  store i32 0, i32* %658, align 8, !tbaa !61
  %659 = getelementptr inbounds i8, i8* %call558, i64 108
  store i8 0, i8* %659, align 4, !tbaa !64
  %660 = getelementptr inbounds i8, i8* %call558, i64 112
  %661 = bitcast i8* %660 to i32*
  store i32 0, i32* %661, align 8, !tbaa !65
  %662 = getelementptr inbounds i8, i8* %call558, i64 116
  store i8 0, i8* %662, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.1 = getelementptr inbounds i8, i8* %call558, i64 120
  %fDistance.i.i1644.1 = getelementptr inbounds i8, i8* %call558, i64 176
  %663 = bitcast i8* %fDistance.i.i1644.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %663, align 8, !tbaa !68
  %m_fGain.i.i1645.1 = getelementptr inbounds i8, i8* %call558, i64 180
  %664 = bitcast i8* %m_fGain.i.i1645.1 to float*
  store float 1.000000e+00, float* %664, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %656, align 8, !tbaa !40
  %arrayctor.next572.1 = getelementptr inbounds i8, i8* %call558, i64 184
  %665 = bitcast i8* %arrayctor.next572.1 to i32 (...)***
  %666 = getelementptr inbounds i8, i8* %call558, i64 192
  %667 = bitcast i8* %666 to i32*
  store i32 0, i32* %667, align 8, !tbaa !61
  %668 = getelementptr inbounds i8, i8* %call558, i64 196
  store i8 0, i8* %668, align 4, !tbaa !64
  %669 = getelementptr inbounds i8, i8* %call558, i64 200
  %670 = bitcast i8* %669 to i32*
  store i32 0, i32* %670, align 8, !tbaa !65
  %671 = getelementptr inbounds i8, i8* %call558, i64 204
  store i8 0, i8* %671, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.2 = getelementptr inbounds i8, i8* %call558, i64 208
  %fDistance.i.i1644.2 = getelementptr inbounds i8, i8* %call558, i64 264
  %672 = bitcast i8* %fDistance.i.i1644.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %672, align 8, !tbaa !68
  %m_fGain.i.i1645.2 = getelementptr inbounds i8, i8* %call558, i64 268
  %673 = bitcast i8* %m_fGain.i.i1645.2 to float*
  store float 1.000000e+00, float* %673, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %665, align 8, !tbaa !40
  %arrayctor.next572.2 = getelementptr inbounds i8, i8* %call558, i64 272
  %674 = bitcast i8* %arrayctor.next572.2 to i32 (...)***
  %675 = getelementptr inbounds i8, i8* %call558, i64 280
  %676 = bitcast i8* %675 to i32*
  store i32 0, i32* %676, align 8, !tbaa !61
  %677 = getelementptr inbounds i8, i8* %call558, i64 284
  store i8 0, i8* %677, align 4, !tbaa !64
  %678 = getelementptr inbounds i8, i8* %call558, i64 288
  %679 = bitcast i8* %678 to i32*
  store i32 0, i32* %679, align 8, !tbaa !65
  %680 = getelementptr inbounds i8, i8* %call558, i64 292
  store i8 0, i8* %680, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.3 = getelementptr inbounds i8, i8* %call558, i64 296
  %fDistance.i.i1644.3 = getelementptr inbounds i8, i8* %call558, i64 352
  %681 = bitcast i8* %fDistance.i.i1644.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %681, align 8, !tbaa !68
  %m_fGain.i.i1645.3 = getelementptr inbounds i8, i8* %call558, i64 356
  %682 = bitcast i8* %m_fGain.i.i1645.3 to float*
  store float 1.000000e+00, float* %682, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %674, align 8, !tbaa !40
  %arrayctor.next572.3 = getelementptr inbounds i8, i8* %call558, i64 360
  %683 = bitcast i8* %arrayctor.next572.3 to i32 (...)***
  %684 = getelementptr inbounds i8, i8* %call558, i64 368
  %685 = bitcast i8* %684 to i32*
  store i32 0, i32* %685, align 8, !tbaa !61
  %686 = getelementptr inbounds i8, i8* %call558, i64 372
  store i8 0, i8* %686, align 4, !tbaa !64
  %687 = getelementptr inbounds i8, i8* %call558, i64 376
  %688 = bitcast i8* %687 to i32*
  store i32 0, i32* %688, align 8, !tbaa !65
  %689 = getelementptr inbounds i8, i8* %call558, i64 380
  store i8 0, i8* %689, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.4 = getelementptr inbounds i8, i8* %call558, i64 384
  %fDistance.i.i1644.4 = getelementptr inbounds i8, i8* %call558, i64 440
  %690 = bitcast i8* %fDistance.i.i1644.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %690, align 8, !tbaa !68
  %m_fGain.i.i1645.4 = getelementptr inbounds i8, i8* %call558, i64 444
  %691 = bitcast i8* %m_fGain.i.i1645.4 to float*
  store float 1.000000e+00, float* %691, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %683, align 8, !tbaa !40
  %arrayctor.next572.4 = getelementptr inbounds i8, i8* %call558, i64 448
  %692 = bitcast i8* %arrayctor.next572.4 to i32 (...)***
  %693 = getelementptr inbounds i8, i8* %call558, i64 456
  %694 = bitcast i8* %693 to i32*
  store i32 0, i32* %694, align 8, !tbaa !61
  %695 = getelementptr inbounds i8, i8* %call558, i64 460
  store i8 0, i8* %695, align 4, !tbaa !64
  %696 = getelementptr inbounds i8, i8* %call558, i64 464
  %697 = bitcast i8* %696 to i32*
  store i32 0, i32* %697, align 8, !tbaa !65
  %698 = getelementptr inbounds i8, i8* %call558, i64 468
  store i8 0, i8* %698, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.5 = getelementptr inbounds i8, i8* %call558, i64 472
  %fDistance.i.i1644.5 = getelementptr inbounds i8, i8* %call558, i64 528
  %699 = bitcast i8* %fDistance.i.i1644.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %699, align 8, !tbaa !68
  %m_fGain.i.i1645.5 = getelementptr inbounds i8, i8* %call558, i64 532
  %700 = bitcast i8* %m_fGain.i.i1645.5 to float*
  store float 1.000000e+00, float* %700, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %692, align 8, !tbaa !40
  %arrayctor.next572.5 = getelementptr inbounds i8, i8* %call558, i64 536
  %701 = bitcast i8* %arrayctor.next572.5 to i32 (...)***
  %702 = getelementptr inbounds i8, i8* %call558, i64 544
  %703 = bitcast i8* %702 to i32*
  store i32 0, i32* %703, align 8, !tbaa !61
  %704 = getelementptr inbounds i8, i8* %call558, i64 548
  store i8 0, i8* %704, align 4, !tbaa !64
  %705 = getelementptr inbounds i8, i8* %call558, i64 552
  %706 = bitcast i8* %705 to i32*
  store i32 0, i32* %706, align 8, !tbaa !65
  %707 = getelementptr inbounds i8, i8* %call558, i64 556
  store i8 0, i8* %707, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.6 = getelementptr inbounds i8, i8* %call558, i64 560
  %fDistance.i.i1644.6 = getelementptr inbounds i8, i8* %call558, i64 616
  %708 = bitcast i8* %fDistance.i.i1644.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %708, align 8, !tbaa !68
  %m_fGain.i.i1645.6 = getelementptr inbounds i8, i8* %call558, i64 620
  %709 = bitcast i8* %m_fGain.i.i1645.6 to float*
  store float 1.000000e+00, float* %709, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %701, align 8, !tbaa !40
  %arrayctor.next572.6 = getelementptr inbounds i8, i8* %call558, i64 624
  %710 = bitcast i8* %arrayctor.next572.6 to i32 (...)***
  %711 = getelementptr inbounds i8, i8* %call558, i64 632
  %712 = bitcast i8* %711 to i32*
  store i32 0, i32* %712, align 8, !tbaa !61
  %713 = getelementptr inbounds i8, i8* %call558, i64 636
  store i8 0, i8* %713, align 4, !tbaa !64
  %714 = getelementptr inbounds i8, i8* %call558, i64 640
  %715 = bitcast i8* %714 to i32*
  store i32 0, i32* %715, align 8, !tbaa !65
  %716 = getelementptr inbounds i8, i8* %call558, i64 644
  store i8 0, i8* %716, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.7 = getelementptr inbounds i8, i8* %call558, i64 648
  %fDistance.i.i1644.7 = getelementptr inbounds i8, i8* %call558, i64 704
  %717 = bitcast i8* %fDistance.i.i1644.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %717, align 8, !tbaa !68
  %m_fGain.i.i1645.7 = getelementptr inbounds i8, i8* %call558, i64 708
  %718 = bitcast i8* %m_fGain.i.i1645.7 to float*
  store float 1.000000e+00, float* %718, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %710, align 8, !tbaa !40
  %arrayctor.next572.7 = getelementptr inbounds i8, i8* %call558, i64 712
  %719 = bitcast i8* %arrayctor.next572.7 to i32 (...)***
  %720 = getelementptr inbounds i8, i8* %call558, i64 720
  %721 = bitcast i8* %720 to i32*
  store i32 0, i32* %721, align 8, !tbaa !61
  %722 = getelementptr inbounds i8, i8* %call558, i64 724
  store i8 0, i8* %722, align 4, !tbaa !64
  %723 = getelementptr inbounds i8, i8* %call558, i64 728
  %724 = bitcast i8* %723 to i32*
  store i32 0, i32* %724, align 8, !tbaa !65
  %725 = getelementptr inbounds i8, i8* %call558, i64 732
  store i8 0, i8* %725, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.8 = getelementptr inbounds i8, i8* %call558, i64 736
  %fDistance.i.i1644.8 = getelementptr inbounds i8, i8* %call558, i64 792
  %726 = bitcast i8* %fDistance.i.i1644.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %726, align 8, !tbaa !68
  %m_fGain.i.i1645.8 = getelementptr inbounds i8, i8* %call558, i64 796
  %727 = bitcast i8* %m_fGain.i.i1645.8 to float*
  store float 1.000000e+00, float* %727, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8, !tbaa !40
  %arrayctor.next572.8 = getelementptr inbounds i8, i8* %call558, i64 800
  %728 = bitcast i8* %arrayctor.next572.8 to i32 (...)***
  %729 = getelementptr inbounds i8, i8* %call558, i64 808
  %730 = bitcast i8* %729 to i32*
  store i32 0, i32* %730, align 8, !tbaa !61
  %731 = getelementptr inbounds i8, i8* %call558, i64 812
  store i8 0, i8* %731, align 4, !tbaa !64
  %732 = getelementptr inbounds i8, i8* %call558, i64 816
  %733 = bitcast i8* %732 to i32*
  store i32 0, i32* %733, align 8, !tbaa !65
  %734 = getelementptr inbounds i8, i8* %call558, i64 820
  store i8 0, i8* %734, align 4, !tbaa !66
  %m_pfCoeff.i.i1643.9 = getelementptr inbounds i8, i8* %call558, i64 824
  %fDistance.i.i1644.9 = getelementptr inbounds i8, i8* %call558, i64 880
  %735 = bitcast i8* %fDistance.i.i1644.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %735, align 8, !tbaa !68
  %m_fGain.i.i1645.9 = getelementptr inbounds i8, i8* %call558, i64 884
  %736 = bitcast i8* %m_fGain.i.i1645.9 to float*
  store float 1.000000e+00, float* %736, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %728, align 8, !tbaa !40
  %737 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %646, i8** %737, align 8, !tbaa !259
  %738 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %739 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body579

for.body579:                                      ; preds = %for.body579, %for.body579.lr.ph
  %indvars.iv1728 = phi i64 [ 0, %for.body579.lr.ph ], [ %indvars.iv.next1729, %for.body579 ]
  %740 = phi i32 [ 10, %for.body579.lr.ph ], [ %751, %for.body579 ]
  %polPosition.sroa.0.41685 = phi <2 x float> [ zeroinitializer, %for.body579.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1491, %for.body579 ]
  %741 = trunc i64 %indvars.iv1728 to i32
  %conv580 = uitofp i32 %741 to float
  %mul581 = fmul float %conv580, 3.600000e+02
  %conv583 = uitofp i32 %740 to float
  %div584 = fdiv float %mul581, %conv583
  %call585 = tail call float @_Z16DegreesToRadiansf(float %div584)
  %sub586 = fsub float -0.000000e+00, %call585
  %polPosition.sroa.0.0.vec.insert1491 = insertelement <2 x float> %polPosition.sroa.0.41685, float %sub586, i32 0
  %742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx590 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %742, i64 %indvars.iv1728
  %743 = load i32, i32* %738, align 8, !tbaa !61
  %744 = load i8, i8* %739, align 4, !tbaa !64, !range !67
  %tobool593 = icmp ne i8 %744, 0
  %745 = bitcast %class.CAmbisonicSpeaker* %arrayidx590 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable594 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %745, align 8, !tbaa !40
  %vfn595 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable594, i64 2
  %746 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn595, align 8
  %call596 = tail call zeroext i1 %746(%class.CAmbisonicSpeaker* %arrayidx590, i32 %743, i1 zeroext %tobool593, i32 0)
  %747 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %748 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %747, i64 %indvars.iv1728, i32 0
  %749 = bitcast %class.CAmbisonicSource* %748 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable601 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %749, align 8, !tbaa !40
  %vfn602 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable601, i64 5
  %750 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn602, align 8
  tail call void %750(%class.CAmbisonicSource* %748, <2 x float> %polPosition.sroa.0.0.vec.insert1491, float 1.000000e+00)
  %indvars.iv.next1729 = add nuw nsw i64 %indvars.iv1728, 1
  %751 = load i32, i32* %m_nSpeakers555, align 4, !tbaa !262
  %752 = zext i32 %751 to i64
  %cmp578 = icmp ult i64 %indvars.iv.next1729, %752
  br i1 %cmp578, label %for.body579, label %sw.epilog

for.body631.lr.ph:                                ; preds = %if.end
  %m_nSpeakers607 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 12, i32* %m_nSpeakers607, align 4, !tbaa !262
  %call610 = tail call i8* @_Znam(i64 1064) #26
  %753 = bitcast i8* %call610 to i64*
  store i64 12, i64* %753, align 16
  %754 = getelementptr inbounds i8, i8* %call610, i64 8
  %755 = bitcast i8* %754 to i32 (...)***
  %756 = getelementptr inbounds i8, i8* %call610, i64 16
  %757 = bitcast i8* %756 to i32*
  store i32 0, i32* %757, align 8, !tbaa !61
  %758 = getelementptr inbounds i8, i8* %call610, i64 20
  store i8 0, i8* %758, align 4, !tbaa !64
  %759 = getelementptr inbounds i8, i8* %call610, i64 24
  %760 = bitcast i8* %759 to i32*
  store i32 0, i32* %760, align 8, !tbaa !65
  %761 = getelementptr inbounds i8, i8* %call610, i64 28
  store i8 0, i8* %761, align 4, !tbaa !66
  %m_pfCoeff.i.i1649 = getelementptr inbounds i8, i8* %call610, i64 32
  %fDistance.i.i1650 = getelementptr inbounds i8, i8* %call610, i64 88
  %762 = bitcast i8* %fDistance.i.i1650 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %762, align 8, !tbaa !68
  %m_fGain.i.i1651 = getelementptr inbounds i8, i8* %call610, i64 92
  %763 = bitcast i8* %m_fGain.i.i1651 to float*
  store float 1.000000e+00, float* %763, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %755, align 8, !tbaa !40
  %arrayctor.next624 = getelementptr inbounds i8, i8* %call610, i64 96
  %764 = bitcast i8* %arrayctor.next624 to i32 (...)***
  %765 = getelementptr inbounds i8, i8* %call610, i64 104
  %766 = bitcast i8* %765 to i32*
  store i32 0, i32* %766, align 8, !tbaa !61
  %767 = getelementptr inbounds i8, i8* %call610, i64 108
  store i8 0, i8* %767, align 4, !tbaa !64
  %768 = getelementptr inbounds i8, i8* %call610, i64 112
  %769 = bitcast i8* %768 to i32*
  store i32 0, i32* %769, align 8, !tbaa !65
  %770 = getelementptr inbounds i8, i8* %call610, i64 116
  store i8 0, i8* %770, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.1 = getelementptr inbounds i8, i8* %call610, i64 120
  %fDistance.i.i1650.1 = getelementptr inbounds i8, i8* %call610, i64 176
  %771 = bitcast i8* %fDistance.i.i1650.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %771, align 8, !tbaa !68
  %m_fGain.i.i1651.1 = getelementptr inbounds i8, i8* %call610, i64 180
  %772 = bitcast i8* %m_fGain.i.i1651.1 to float*
  store float 1.000000e+00, float* %772, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %764, align 8, !tbaa !40
  %arrayctor.next624.1 = getelementptr inbounds i8, i8* %call610, i64 184
  %773 = bitcast i8* %arrayctor.next624.1 to i32 (...)***
  %774 = getelementptr inbounds i8, i8* %call610, i64 192
  %775 = bitcast i8* %774 to i32*
  store i32 0, i32* %775, align 8, !tbaa !61
  %776 = getelementptr inbounds i8, i8* %call610, i64 196
  store i8 0, i8* %776, align 4, !tbaa !64
  %777 = getelementptr inbounds i8, i8* %call610, i64 200
  %778 = bitcast i8* %777 to i32*
  store i32 0, i32* %778, align 8, !tbaa !65
  %779 = getelementptr inbounds i8, i8* %call610, i64 204
  store i8 0, i8* %779, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.2 = getelementptr inbounds i8, i8* %call610, i64 208
  %fDistance.i.i1650.2 = getelementptr inbounds i8, i8* %call610, i64 264
  %780 = bitcast i8* %fDistance.i.i1650.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %780, align 8, !tbaa !68
  %m_fGain.i.i1651.2 = getelementptr inbounds i8, i8* %call610, i64 268
  %781 = bitcast i8* %m_fGain.i.i1651.2 to float*
  store float 1.000000e+00, float* %781, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %773, align 8, !tbaa !40
  %arrayctor.next624.2 = getelementptr inbounds i8, i8* %call610, i64 272
  %782 = bitcast i8* %arrayctor.next624.2 to i32 (...)***
  %783 = getelementptr inbounds i8, i8* %call610, i64 280
  %784 = bitcast i8* %783 to i32*
  store i32 0, i32* %784, align 8, !tbaa !61
  %785 = getelementptr inbounds i8, i8* %call610, i64 284
  store i8 0, i8* %785, align 4, !tbaa !64
  %786 = getelementptr inbounds i8, i8* %call610, i64 288
  %787 = bitcast i8* %786 to i32*
  store i32 0, i32* %787, align 8, !tbaa !65
  %788 = getelementptr inbounds i8, i8* %call610, i64 292
  store i8 0, i8* %788, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.3 = getelementptr inbounds i8, i8* %call610, i64 296
  %fDistance.i.i1650.3 = getelementptr inbounds i8, i8* %call610, i64 352
  %789 = bitcast i8* %fDistance.i.i1650.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %789, align 8, !tbaa !68
  %m_fGain.i.i1651.3 = getelementptr inbounds i8, i8* %call610, i64 356
  %790 = bitcast i8* %m_fGain.i.i1651.3 to float*
  store float 1.000000e+00, float* %790, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %782, align 8, !tbaa !40
  %arrayctor.next624.3 = getelementptr inbounds i8, i8* %call610, i64 360
  %791 = bitcast i8* %arrayctor.next624.3 to i32 (...)***
  %792 = getelementptr inbounds i8, i8* %call610, i64 368
  %793 = bitcast i8* %792 to i32*
  store i32 0, i32* %793, align 8, !tbaa !61
  %794 = getelementptr inbounds i8, i8* %call610, i64 372
  store i8 0, i8* %794, align 4, !tbaa !64
  %795 = getelementptr inbounds i8, i8* %call610, i64 376
  %796 = bitcast i8* %795 to i32*
  store i32 0, i32* %796, align 8, !tbaa !65
  %797 = getelementptr inbounds i8, i8* %call610, i64 380
  store i8 0, i8* %797, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.4 = getelementptr inbounds i8, i8* %call610, i64 384
  %fDistance.i.i1650.4 = getelementptr inbounds i8, i8* %call610, i64 440
  %798 = bitcast i8* %fDistance.i.i1650.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %798, align 8, !tbaa !68
  %m_fGain.i.i1651.4 = getelementptr inbounds i8, i8* %call610, i64 444
  %799 = bitcast i8* %m_fGain.i.i1651.4 to float*
  store float 1.000000e+00, float* %799, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %791, align 8, !tbaa !40
  %arrayctor.next624.4 = getelementptr inbounds i8, i8* %call610, i64 448
  %800 = bitcast i8* %arrayctor.next624.4 to i32 (...)***
  %801 = getelementptr inbounds i8, i8* %call610, i64 456
  %802 = bitcast i8* %801 to i32*
  store i32 0, i32* %802, align 8, !tbaa !61
  %803 = getelementptr inbounds i8, i8* %call610, i64 460
  store i8 0, i8* %803, align 4, !tbaa !64
  %804 = getelementptr inbounds i8, i8* %call610, i64 464
  %805 = bitcast i8* %804 to i32*
  store i32 0, i32* %805, align 8, !tbaa !65
  %806 = getelementptr inbounds i8, i8* %call610, i64 468
  store i8 0, i8* %806, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.5 = getelementptr inbounds i8, i8* %call610, i64 472
  %fDistance.i.i1650.5 = getelementptr inbounds i8, i8* %call610, i64 528
  %807 = bitcast i8* %fDistance.i.i1650.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %807, align 8, !tbaa !68
  %m_fGain.i.i1651.5 = getelementptr inbounds i8, i8* %call610, i64 532
  %808 = bitcast i8* %m_fGain.i.i1651.5 to float*
  store float 1.000000e+00, float* %808, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %800, align 8, !tbaa !40
  %arrayctor.next624.5 = getelementptr inbounds i8, i8* %call610, i64 536
  %809 = bitcast i8* %arrayctor.next624.5 to i32 (...)***
  %810 = getelementptr inbounds i8, i8* %call610, i64 544
  %811 = bitcast i8* %810 to i32*
  store i32 0, i32* %811, align 8, !tbaa !61
  %812 = getelementptr inbounds i8, i8* %call610, i64 548
  store i8 0, i8* %812, align 4, !tbaa !64
  %813 = getelementptr inbounds i8, i8* %call610, i64 552
  %814 = bitcast i8* %813 to i32*
  store i32 0, i32* %814, align 8, !tbaa !65
  %815 = getelementptr inbounds i8, i8* %call610, i64 556
  store i8 0, i8* %815, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.6 = getelementptr inbounds i8, i8* %call610, i64 560
  %fDistance.i.i1650.6 = getelementptr inbounds i8, i8* %call610, i64 616
  %816 = bitcast i8* %fDistance.i.i1650.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %816, align 8, !tbaa !68
  %m_fGain.i.i1651.6 = getelementptr inbounds i8, i8* %call610, i64 620
  %817 = bitcast i8* %m_fGain.i.i1651.6 to float*
  store float 1.000000e+00, float* %817, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %809, align 8, !tbaa !40
  %arrayctor.next624.6 = getelementptr inbounds i8, i8* %call610, i64 624
  %818 = bitcast i8* %arrayctor.next624.6 to i32 (...)***
  %819 = getelementptr inbounds i8, i8* %call610, i64 632
  %820 = bitcast i8* %819 to i32*
  store i32 0, i32* %820, align 8, !tbaa !61
  %821 = getelementptr inbounds i8, i8* %call610, i64 636
  store i8 0, i8* %821, align 4, !tbaa !64
  %822 = getelementptr inbounds i8, i8* %call610, i64 640
  %823 = bitcast i8* %822 to i32*
  store i32 0, i32* %823, align 8, !tbaa !65
  %824 = getelementptr inbounds i8, i8* %call610, i64 644
  store i8 0, i8* %824, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.7 = getelementptr inbounds i8, i8* %call610, i64 648
  %fDistance.i.i1650.7 = getelementptr inbounds i8, i8* %call610, i64 704
  %825 = bitcast i8* %fDistance.i.i1650.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %825, align 8, !tbaa !68
  %m_fGain.i.i1651.7 = getelementptr inbounds i8, i8* %call610, i64 708
  %826 = bitcast i8* %m_fGain.i.i1651.7 to float*
  store float 1.000000e+00, float* %826, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %818, align 8, !tbaa !40
  %arrayctor.next624.7 = getelementptr inbounds i8, i8* %call610, i64 712
  %827 = bitcast i8* %arrayctor.next624.7 to i32 (...)***
  %828 = getelementptr inbounds i8, i8* %call610, i64 720
  %829 = bitcast i8* %828 to i32*
  store i32 0, i32* %829, align 8, !tbaa !61
  %830 = getelementptr inbounds i8, i8* %call610, i64 724
  store i8 0, i8* %830, align 4, !tbaa !64
  %831 = getelementptr inbounds i8, i8* %call610, i64 728
  %832 = bitcast i8* %831 to i32*
  store i32 0, i32* %832, align 8, !tbaa !65
  %833 = getelementptr inbounds i8, i8* %call610, i64 732
  store i8 0, i8* %833, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.8 = getelementptr inbounds i8, i8* %call610, i64 736
  %fDistance.i.i1650.8 = getelementptr inbounds i8, i8* %call610, i64 792
  %834 = bitcast i8* %fDistance.i.i1650.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %834, align 8, !tbaa !68
  %m_fGain.i.i1651.8 = getelementptr inbounds i8, i8* %call610, i64 796
  %835 = bitcast i8* %m_fGain.i.i1651.8 to float*
  store float 1.000000e+00, float* %835, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %827, align 8, !tbaa !40
  %arrayctor.next624.8 = getelementptr inbounds i8, i8* %call610, i64 800
  %836 = bitcast i8* %arrayctor.next624.8 to i32 (...)***
  %837 = getelementptr inbounds i8, i8* %call610, i64 808
  %838 = bitcast i8* %837 to i32*
  store i32 0, i32* %838, align 8, !tbaa !61
  %839 = getelementptr inbounds i8, i8* %call610, i64 812
  store i8 0, i8* %839, align 4, !tbaa !64
  %840 = getelementptr inbounds i8, i8* %call610, i64 816
  %841 = bitcast i8* %840 to i32*
  store i32 0, i32* %841, align 8, !tbaa !65
  %842 = getelementptr inbounds i8, i8* %call610, i64 820
  store i8 0, i8* %842, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.9 = getelementptr inbounds i8, i8* %call610, i64 824
  %fDistance.i.i1650.9 = getelementptr inbounds i8, i8* %call610, i64 880
  %843 = bitcast i8* %fDistance.i.i1650.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %843, align 8, !tbaa !68
  %m_fGain.i.i1651.9 = getelementptr inbounds i8, i8* %call610, i64 884
  %844 = bitcast i8* %m_fGain.i.i1651.9 to float*
  store float 1.000000e+00, float* %844, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %836, align 8, !tbaa !40
  %arrayctor.next624.9 = getelementptr inbounds i8, i8* %call610, i64 888
  %845 = bitcast i8* %arrayctor.next624.9 to i32 (...)***
  %846 = getelementptr inbounds i8, i8* %call610, i64 896
  %847 = bitcast i8* %846 to i32*
  store i32 0, i32* %847, align 8, !tbaa !61
  %848 = getelementptr inbounds i8, i8* %call610, i64 900
  store i8 0, i8* %848, align 4, !tbaa !64
  %849 = getelementptr inbounds i8, i8* %call610, i64 904
  %850 = bitcast i8* %849 to i32*
  store i32 0, i32* %850, align 8, !tbaa !65
  %851 = getelementptr inbounds i8, i8* %call610, i64 908
  store i8 0, i8* %851, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.10 = getelementptr inbounds i8, i8* %call610, i64 912
  %fDistance.i.i1650.10 = getelementptr inbounds i8, i8* %call610, i64 968
  %852 = bitcast i8* %fDistance.i.i1650.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %852, align 8, !tbaa !68
  %m_fGain.i.i1651.10 = getelementptr inbounds i8, i8* %call610, i64 972
  %853 = bitcast i8* %m_fGain.i.i1651.10 to float*
  store float 1.000000e+00, float* %853, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %845, align 8, !tbaa !40
  %arrayctor.next624.10 = getelementptr inbounds i8, i8* %call610, i64 976
  %854 = bitcast i8* %arrayctor.next624.10 to i32 (...)***
  %855 = getelementptr inbounds i8, i8* %call610, i64 984
  %856 = bitcast i8* %855 to i32*
  store i32 0, i32* %856, align 8, !tbaa !61
  %857 = getelementptr inbounds i8, i8* %call610, i64 988
  store i8 0, i8* %857, align 4, !tbaa !64
  %858 = getelementptr inbounds i8, i8* %call610, i64 992
  %859 = bitcast i8* %858 to i32*
  store i32 0, i32* %859, align 8, !tbaa !65
  %860 = getelementptr inbounds i8, i8* %call610, i64 996
  store i8 0, i8* %860, align 4, !tbaa !66
  %m_pfCoeff.i.i1649.11 = getelementptr inbounds i8, i8* %call610, i64 1000
  %fDistance.i.i1650.11 = getelementptr inbounds i8, i8* %call610, i64 1056
  %861 = bitcast i8* %fDistance.i.i1650.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %861, align 8, !tbaa !68
  %m_fGain.i.i1651.11 = getelementptr inbounds i8, i8* %call610, i64 1060
  %862 = bitcast i8* %m_fGain.i.i1651.11 to float*
  store float 1.000000e+00, float* %862, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %854, align 8, !tbaa !40
  %863 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %754, i8** %863, align 8, !tbaa !259
  %864 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %865 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body631

for.body631:                                      ; preds = %for.body631, %for.body631.lr.ph
  %indvars.iv1730 = phi i64 [ 0, %for.body631.lr.ph ], [ %indvars.iv.next1731, %for.body631 ]
  %866 = phi i32 [ 12, %for.body631.lr.ph ], [ %877, %for.body631 ]
  %polPosition.sroa.0.51688 = phi <2 x float> [ zeroinitializer, %for.body631.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1489, %for.body631 ]
  %867 = trunc i64 %indvars.iv1730 to i32
  %conv632 = uitofp i32 %867 to float
  %mul633 = fmul float %conv632, 3.600000e+02
  %conv635 = uitofp i32 %866 to float
  %div636 = fdiv float %mul633, %conv635
  %call637 = tail call float @_Z16DegreesToRadiansf(float %div636)
  %sub638 = fsub float -0.000000e+00, %call637
  %polPosition.sroa.0.0.vec.insert1489 = insertelement <2 x float> %polPosition.sroa.0.51688, float %sub638, i32 0
  %868 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx642 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %868, i64 %indvars.iv1730
  %869 = load i32, i32* %864, align 8, !tbaa !61
  %870 = load i8, i8* %865, align 4, !tbaa !64, !range !67
  %tobool645 = icmp ne i8 %870, 0
  %871 = bitcast %class.CAmbisonicSpeaker* %arrayidx642 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable646 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %871, align 8, !tbaa !40
  %vfn647 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable646, i64 2
  %872 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn647, align 8
  %call648 = tail call zeroext i1 %872(%class.CAmbisonicSpeaker* %arrayidx642, i32 %869, i1 zeroext %tobool645, i32 0)
  %873 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %874 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %873, i64 %indvars.iv1730, i32 0
  %875 = bitcast %class.CAmbisonicSource* %874 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable653 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %875, align 8, !tbaa !40
  %vfn654 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable653, i64 5
  %876 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn654, align 8
  tail call void %876(%class.CAmbisonicSource* %874, <2 x float> %polPosition.sroa.0.0.vec.insert1489, float 1.000000e+00)
  %indvars.iv.next1731 = add nuw nsw i64 %indvars.iv1730, 1
  %877 = load i32, i32* %m_nSpeakers607, align 4, !tbaa !262
  %878 = zext i32 %877 to i64
  %cmp630 = icmp ult i64 %indvars.iv.next1731, %878
  br i1 %cmp630, label %for.body631, label %sw.epilog

sw.bb658:                                         ; preds = %if.end
  %m_nSpeakers659 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers659, align 4, !tbaa !262
  %call662 = tail call i8* @_Znam(i64 712) #26
  %879 = bitcast i8* %call662 to i64*
  store i64 8, i64* %879, align 16
  %880 = getelementptr inbounds i8, i8* %call662, i64 8
  %881 = bitcast i8* %880 to i32 (...)***
  %882 = getelementptr inbounds i8, i8* %call662, i64 16
  %883 = bitcast i8* %882 to i32*
  store i32 0, i32* %883, align 8, !tbaa !61
  %884 = getelementptr inbounds i8, i8* %call662, i64 20
  store i8 0, i8* %884, align 4, !tbaa !64
  %885 = getelementptr inbounds i8, i8* %call662, i64 24
  %886 = bitcast i8* %885 to i32*
  store i32 0, i32* %886, align 8, !tbaa !65
  %887 = getelementptr inbounds i8, i8* %call662, i64 28
  store i8 0, i8* %887, align 4, !tbaa !66
  %m_pfCoeff.i.i1652 = getelementptr inbounds i8, i8* %call662, i64 32
  %fDistance.i.i1653 = getelementptr inbounds i8, i8* %call662, i64 88
  %888 = bitcast i8* %fDistance.i.i1653 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %888, align 8, !tbaa !68
  %m_fGain.i.i1654 = getelementptr inbounds i8, i8* %call662, i64 92
  %889 = bitcast i8* %m_fGain.i.i1654 to float*
  store float 1.000000e+00, float* %889, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %881, align 8, !tbaa !40
  %arrayctor.next676 = getelementptr inbounds i8, i8* %call662, i64 96
  %890 = bitcast i8* %arrayctor.next676 to i32 (...)***
  %891 = getelementptr inbounds i8, i8* %call662, i64 104
  %892 = bitcast i8* %891 to i32*
  store i32 0, i32* %892, align 8, !tbaa !61
  %893 = getelementptr inbounds i8, i8* %call662, i64 108
  store i8 0, i8* %893, align 4, !tbaa !64
  %894 = getelementptr inbounds i8, i8* %call662, i64 112
  %895 = bitcast i8* %894 to i32*
  store i32 0, i32* %895, align 8, !tbaa !65
  %896 = getelementptr inbounds i8, i8* %call662, i64 116
  store i8 0, i8* %896, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.1 = getelementptr inbounds i8, i8* %call662, i64 120
  %fDistance.i.i1653.1 = getelementptr inbounds i8, i8* %call662, i64 176
  %897 = bitcast i8* %fDistance.i.i1653.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %897, align 8, !tbaa !68
  %m_fGain.i.i1654.1 = getelementptr inbounds i8, i8* %call662, i64 180
  %898 = bitcast i8* %m_fGain.i.i1654.1 to float*
  store float 1.000000e+00, float* %898, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %890, align 8, !tbaa !40
  %arrayctor.next676.1 = getelementptr inbounds i8, i8* %call662, i64 184
  %899 = bitcast i8* %arrayctor.next676.1 to i32 (...)***
  %900 = getelementptr inbounds i8, i8* %call662, i64 192
  %901 = bitcast i8* %900 to i32*
  store i32 0, i32* %901, align 8, !tbaa !61
  %902 = getelementptr inbounds i8, i8* %call662, i64 196
  store i8 0, i8* %902, align 4, !tbaa !64
  %903 = getelementptr inbounds i8, i8* %call662, i64 200
  %904 = bitcast i8* %903 to i32*
  store i32 0, i32* %904, align 8, !tbaa !65
  %905 = getelementptr inbounds i8, i8* %call662, i64 204
  store i8 0, i8* %905, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.2 = getelementptr inbounds i8, i8* %call662, i64 208
  %fDistance.i.i1653.2 = getelementptr inbounds i8, i8* %call662, i64 264
  %906 = bitcast i8* %fDistance.i.i1653.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %906, align 8, !tbaa !68
  %m_fGain.i.i1654.2 = getelementptr inbounds i8, i8* %call662, i64 268
  %907 = bitcast i8* %m_fGain.i.i1654.2 to float*
  store float 1.000000e+00, float* %907, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %899, align 8, !tbaa !40
  %arrayctor.next676.2 = getelementptr inbounds i8, i8* %call662, i64 272
  %908 = bitcast i8* %arrayctor.next676.2 to i32 (...)***
  %909 = getelementptr inbounds i8, i8* %call662, i64 280
  %910 = bitcast i8* %909 to i32*
  store i32 0, i32* %910, align 8, !tbaa !61
  %911 = getelementptr inbounds i8, i8* %call662, i64 284
  store i8 0, i8* %911, align 4, !tbaa !64
  %912 = getelementptr inbounds i8, i8* %call662, i64 288
  %913 = bitcast i8* %912 to i32*
  store i32 0, i32* %913, align 8, !tbaa !65
  %914 = getelementptr inbounds i8, i8* %call662, i64 292
  store i8 0, i8* %914, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.3 = getelementptr inbounds i8, i8* %call662, i64 296
  %fDistance.i.i1653.3 = getelementptr inbounds i8, i8* %call662, i64 352
  %915 = bitcast i8* %fDistance.i.i1653.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %915, align 8, !tbaa !68
  %m_fGain.i.i1654.3 = getelementptr inbounds i8, i8* %call662, i64 356
  %916 = bitcast i8* %m_fGain.i.i1654.3 to float*
  store float 1.000000e+00, float* %916, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %908, align 8, !tbaa !40
  %arrayctor.next676.3 = getelementptr inbounds i8, i8* %call662, i64 360
  %917 = bitcast i8* %arrayctor.next676.3 to i32 (...)***
  %918 = getelementptr inbounds i8, i8* %call662, i64 368
  %919 = bitcast i8* %918 to i32*
  store i32 0, i32* %919, align 8, !tbaa !61
  %920 = getelementptr inbounds i8, i8* %call662, i64 372
  store i8 0, i8* %920, align 4, !tbaa !64
  %921 = getelementptr inbounds i8, i8* %call662, i64 376
  %922 = bitcast i8* %921 to i32*
  store i32 0, i32* %922, align 8, !tbaa !65
  %923 = getelementptr inbounds i8, i8* %call662, i64 380
  store i8 0, i8* %923, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.4 = getelementptr inbounds i8, i8* %call662, i64 384
  %fDistance.i.i1653.4 = getelementptr inbounds i8, i8* %call662, i64 440
  %924 = bitcast i8* %fDistance.i.i1653.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %924, align 8, !tbaa !68
  %m_fGain.i.i1654.4 = getelementptr inbounds i8, i8* %call662, i64 444
  %925 = bitcast i8* %m_fGain.i.i1654.4 to float*
  store float 1.000000e+00, float* %925, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %917, align 8, !tbaa !40
  %arrayctor.next676.4 = getelementptr inbounds i8, i8* %call662, i64 448
  %926 = bitcast i8* %arrayctor.next676.4 to i32 (...)***
  %927 = getelementptr inbounds i8, i8* %call662, i64 456
  %928 = bitcast i8* %927 to i32*
  store i32 0, i32* %928, align 8, !tbaa !61
  %929 = getelementptr inbounds i8, i8* %call662, i64 460
  store i8 0, i8* %929, align 4, !tbaa !64
  %930 = getelementptr inbounds i8, i8* %call662, i64 464
  %931 = bitcast i8* %930 to i32*
  store i32 0, i32* %931, align 8, !tbaa !65
  %932 = getelementptr inbounds i8, i8* %call662, i64 468
  store i8 0, i8* %932, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.5 = getelementptr inbounds i8, i8* %call662, i64 472
  %fDistance.i.i1653.5 = getelementptr inbounds i8, i8* %call662, i64 528
  %933 = bitcast i8* %fDistance.i.i1653.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %933, align 8, !tbaa !68
  %m_fGain.i.i1654.5 = getelementptr inbounds i8, i8* %call662, i64 532
  %934 = bitcast i8* %m_fGain.i.i1654.5 to float*
  store float 1.000000e+00, float* %934, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %926, align 8, !tbaa !40
  %arrayctor.next676.5 = getelementptr inbounds i8, i8* %call662, i64 536
  %935 = bitcast i8* %arrayctor.next676.5 to i32 (...)***
  %936 = getelementptr inbounds i8, i8* %call662, i64 544
  %937 = bitcast i8* %936 to i32*
  store i32 0, i32* %937, align 8, !tbaa !61
  %938 = getelementptr inbounds i8, i8* %call662, i64 548
  store i8 0, i8* %938, align 4, !tbaa !64
  %939 = getelementptr inbounds i8, i8* %call662, i64 552
  %940 = bitcast i8* %939 to i32*
  store i32 0, i32* %940, align 8, !tbaa !65
  %941 = getelementptr inbounds i8, i8* %call662, i64 556
  store i8 0, i8* %941, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.6 = getelementptr inbounds i8, i8* %call662, i64 560
  %fDistance.i.i1653.6 = getelementptr inbounds i8, i8* %call662, i64 616
  %942 = bitcast i8* %fDistance.i.i1653.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %942, align 8, !tbaa !68
  %m_fGain.i.i1654.6 = getelementptr inbounds i8, i8* %call662, i64 620
  %943 = bitcast i8* %m_fGain.i.i1654.6 to float*
  store float 1.000000e+00, float* %943, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %935, align 8, !tbaa !40
  %arrayctor.next676.6 = getelementptr inbounds i8, i8* %call662, i64 624
  %944 = bitcast i8* %arrayctor.next676.6 to i32 (...)***
  %945 = getelementptr inbounds i8, i8* %call662, i64 632
  %946 = bitcast i8* %945 to i32*
  store i32 0, i32* %946, align 8, !tbaa !61
  %947 = getelementptr inbounds i8, i8* %call662, i64 636
  store i8 0, i8* %947, align 4, !tbaa !64
  %948 = getelementptr inbounds i8, i8* %call662, i64 640
  %949 = bitcast i8* %948 to i32*
  store i32 0, i32* %949, align 8, !tbaa !65
  %950 = getelementptr inbounds i8, i8* %call662, i64 644
  store i8 0, i8* %950, align 4, !tbaa !66
  %m_pfCoeff.i.i1652.7 = getelementptr inbounds i8, i8* %call662, i64 648
  %fDistance.i.i1653.7 = getelementptr inbounds i8, i8* %call662, i64 704
  %951 = bitcast i8* %fDistance.i.i1653.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %951, align 8, !tbaa !68
  %m_fGain.i.i1654.7 = getelementptr inbounds i8, i8* %call662, i64 708
  %952 = bitcast i8* %m_fGain.i.i1654.7 to float*
  store float 1.000000e+00, float* %952, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %944, align 8, !tbaa !40
  %953 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %880, i8** %953, align 8, !tbaa !259
  %call680 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.4.vec.insert1579 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call680, i32 1
  %954 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !262
  %div6831692 = lshr i32 %954, 1
  %cmp6841693 = icmp eq i32 %div6831692, 0
  br i1 %cmp6841693, label %for.end713, label %for.body685.lr.ph

for.body685.lr.ph:                                ; preds = %sw.bb658
  %955 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %956 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body685

for.body685:                                      ; preds = %for.body685, %for.body685.lr.ph
  %indvars.iv1734 = phi i64 [ 0, %for.body685.lr.ph ], [ %indvars.iv.next1735, %for.body685 ]
  %div6831696 = phi i32 [ %div6831692, %for.body685.lr.ph ], [ %div683, %for.body685 ]
  %polPosition.sroa.0.61695 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %for.body685.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %957 = trunc i64 %indvars.iv1734 to i32
  %conv686 = uitofp i32 %957 to float
  %mul687 = fmul float %conv686, 3.600000e+02
  %conv690 = uitofp i32 %div6831696 to float
  %div691 = fdiv float %mul687, %conv690
  %add692 = fadd float %div691, 4.500000e+01
  %call693 = tail call float @_Z16DegreesToRadiansf(float %add692)
  %sub694 = fsub float -0.000000e+00, %call693
  %polPosition.sroa.0.0.vec.insert1487 = insertelement <2 x float> %polPosition.sroa.0.61695, float %sub694, i32 0
  %958 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx698 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %958, i64 %indvars.iv1734
  %959 = load i32, i32* %955, align 8, !tbaa !61
  %960 = load i8, i8* %956, align 4, !tbaa !64, !range !67
  %tobool701 = icmp ne i8 %960, 0
  %961 = bitcast %class.CAmbisonicSpeaker* %arrayidx698 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable702 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %961, align 8, !tbaa !40
  %vfn703 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable702, i64 2
  %962 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn703, align 8
  %call704 = tail call zeroext i1 %962(%class.CAmbisonicSpeaker* %arrayidx698, i32 %959, i1 zeroext %tobool701, i32 0)
  %963 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %964 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %963, i64 %indvars.iv1734, i32 0
  %965 = bitcast %class.CAmbisonicSource* %964 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable709 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %965, align 8, !tbaa !40
  %vfn710 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable709, i64 5
  %966 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn710, align 8
  tail call void %966(%class.CAmbisonicSource* %964, <2 x float> %polPosition.sroa.0.0.vec.insert1487, float 1.000000e+00)
  %indvars.iv.next1735 = add nuw nsw i64 %indvars.iv1734, 1
  %967 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !262
  %div683 = lshr i32 %967, 1
  %968 = zext i32 %div683 to i64
  %cmp684 = icmp ult i64 %indvars.iv.next1735, %968
  br i1 %cmp684, label %for.body685, label %for.end713

for.end713:                                       ; preds = %for.body685, %sw.bb658
  %polPosition.sroa.0.6.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %sw.bb658 ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %call714 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %969 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !262
  %div717 = lshr i32 %969, 1
  %cmp7201689 = icmp ult i32 %div717, %969
  br i1 %cmp7201689, label %for.body721.lr.ph, label %sw.epilog

for.body721.lr.ph:                                ; preds = %for.end713
  %polPosition.sroa.0.4.vec.insert1581 = insertelement <2 x float> %polPosition.sroa.0.6.lcssa, float %call714, i32 1
  %970 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %971 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %972 = zext i32 %div717 to i64
  br label %for.body721

for.body721:                                      ; preds = %for.body721, %for.body721.lr.ph
  %indvars.iv1732 = phi i64 [ %972, %for.body721.lr.ph ], [ %indvars.iv.next1733, %for.body721 ]
  %973 = phi i32 [ %969, %for.body721.lr.ph ], [ %984, %for.body721 ]
  %polPosition.sroa.0.71691 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1581, %for.body721.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1575, %for.body721 ]
  %974 = trunc i64 %indvars.iv1732 to i32
  %sub722 = add i32 %974, -4
  %conv723 = uitofp i32 %sub722 to float
  %mul724 = fmul float %conv723, 3.600000e+02
  %div726 = lshr i32 %973, 1
  %conv727 = uitofp i32 %div726 to float
  %div728 = fdiv float %mul724, %conv727
  %add729 = fadd float %div728, 4.500000e+01
  %call730 = tail call float @_Z16DegreesToRadiansf(float %add729)
  %sub731 = fsub float -0.000000e+00, %call730
  %polPosition.sroa.0.0.vec.insert1575 = insertelement <2 x float> %polPosition.sroa.0.71691, float %sub731, i32 0
  %975 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx735 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %975, i64 %indvars.iv1732
  %976 = load i32, i32* %970, align 8, !tbaa !61
  %977 = load i8, i8* %971, align 4, !tbaa !64, !range !67
  %tobool738 = icmp ne i8 %977, 0
  %978 = bitcast %class.CAmbisonicSpeaker* %arrayidx735 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable739 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %978, align 8, !tbaa !40
  %vfn740 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable739, i64 2
  %979 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn740, align 8
  %call741 = tail call zeroext i1 %979(%class.CAmbisonicSpeaker* %arrayidx735, i32 %976, i1 zeroext %tobool738, i32 0)
  %980 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %980, i64 %indvars.iv1732, i32 0
  %982 = bitcast %class.CAmbisonicSource* %981 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable746 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %982, align 8, !tbaa !40
  %vfn747 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable746, i64 5
  %983 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn747, align 8
  tail call void %983(%class.CAmbisonicSource* %981, <2 x float> %polPosition.sroa.0.0.vec.insert1575, float 1.000000e+00)
  %indvars.iv.next1733 = add nuw nsw i64 %indvars.iv1732, 1
  %984 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !262
  %985 = zext i32 %984 to i64
  %cmp720 = icmp ult i64 %indvars.iv.next1733, %985
  br i1 %cmp720, label %for.body721, label %sw.epilog

sw.bb751:                                         ; preds = %if.end
  %m_nSpeakers752 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 20, i32* %m_nSpeakers752, align 4, !tbaa !262
  %call755 = tail call i8* @_Znam(i64 1768) #26
  %986 = bitcast i8* %call755 to i64*
  store i64 20, i64* %986, align 16
  %987 = getelementptr inbounds i8, i8* %call755, i64 8
  %988 = bitcast i8* %987 to i32 (...)***
  %989 = getelementptr inbounds i8, i8* %call755, i64 16
  %990 = bitcast i8* %989 to i32*
  store i32 0, i32* %990, align 8, !tbaa !61
  %991 = getelementptr inbounds i8, i8* %call755, i64 20
  store i8 0, i8* %991, align 4, !tbaa !64
  %992 = getelementptr inbounds i8, i8* %call755, i64 24
  %993 = bitcast i8* %992 to i32*
  store i32 0, i32* %993, align 8, !tbaa !65
  %994 = getelementptr inbounds i8, i8* %call755, i64 28
  store i8 0, i8* %994, align 4, !tbaa !66
  %m_pfCoeff.i.i1655 = getelementptr inbounds i8, i8* %call755, i64 32
  %fDistance.i.i1656 = getelementptr inbounds i8, i8* %call755, i64 88
  %995 = bitcast i8* %fDistance.i.i1656 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %995, align 8, !tbaa !68
  %m_fGain.i.i1657 = getelementptr inbounds i8, i8* %call755, i64 92
  %996 = bitcast i8* %m_fGain.i.i1657 to float*
  store float 1.000000e+00, float* %996, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %988, align 8, !tbaa !40
  %arrayctor.next769 = getelementptr inbounds i8, i8* %call755, i64 96
  %997 = bitcast i8* %arrayctor.next769 to i32 (...)***
  %998 = getelementptr inbounds i8, i8* %call755, i64 104
  %999 = bitcast i8* %998 to i32*
  store i32 0, i32* %999, align 8, !tbaa !61
  %1000 = getelementptr inbounds i8, i8* %call755, i64 108
  store i8 0, i8* %1000, align 4, !tbaa !64
  %1001 = getelementptr inbounds i8, i8* %call755, i64 112
  %1002 = bitcast i8* %1001 to i32*
  store i32 0, i32* %1002, align 8, !tbaa !65
  %1003 = getelementptr inbounds i8, i8* %call755, i64 116
  store i8 0, i8* %1003, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.1 = getelementptr inbounds i8, i8* %call755, i64 120
  %fDistance.i.i1656.1 = getelementptr inbounds i8, i8* %call755, i64 176
  %1004 = bitcast i8* %fDistance.i.i1656.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1004, align 8, !tbaa !68
  %m_fGain.i.i1657.1 = getelementptr inbounds i8, i8* %call755, i64 180
  %1005 = bitcast i8* %m_fGain.i.i1657.1 to float*
  store float 1.000000e+00, float* %1005, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %997, align 8, !tbaa !40
  %arrayctor.next769.1 = getelementptr inbounds i8, i8* %call755, i64 184
  %1006 = bitcast i8* %arrayctor.next769.1 to i32 (...)***
  %1007 = getelementptr inbounds i8, i8* %call755, i64 192
  %1008 = bitcast i8* %1007 to i32*
  store i32 0, i32* %1008, align 8, !tbaa !61
  %1009 = getelementptr inbounds i8, i8* %call755, i64 196
  store i8 0, i8* %1009, align 4, !tbaa !64
  %1010 = getelementptr inbounds i8, i8* %call755, i64 200
  %1011 = bitcast i8* %1010 to i32*
  store i32 0, i32* %1011, align 8, !tbaa !65
  %1012 = getelementptr inbounds i8, i8* %call755, i64 204
  store i8 0, i8* %1012, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.2 = getelementptr inbounds i8, i8* %call755, i64 208
  %fDistance.i.i1656.2 = getelementptr inbounds i8, i8* %call755, i64 264
  %1013 = bitcast i8* %fDistance.i.i1656.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1013, align 8, !tbaa !68
  %m_fGain.i.i1657.2 = getelementptr inbounds i8, i8* %call755, i64 268
  %1014 = bitcast i8* %m_fGain.i.i1657.2 to float*
  store float 1.000000e+00, float* %1014, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1006, align 8, !tbaa !40
  %arrayctor.next769.2 = getelementptr inbounds i8, i8* %call755, i64 272
  %1015 = bitcast i8* %arrayctor.next769.2 to i32 (...)***
  %1016 = getelementptr inbounds i8, i8* %call755, i64 280
  %1017 = bitcast i8* %1016 to i32*
  store i32 0, i32* %1017, align 8, !tbaa !61
  %1018 = getelementptr inbounds i8, i8* %call755, i64 284
  store i8 0, i8* %1018, align 4, !tbaa !64
  %1019 = getelementptr inbounds i8, i8* %call755, i64 288
  %1020 = bitcast i8* %1019 to i32*
  store i32 0, i32* %1020, align 8, !tbaa !65
  %1021 = getelementptr inbounds i8, i8* %call755, i64 292
  store i8 0, i8* %1021, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.3 = getelementptr inbounds i8, i8* %call755, i64 296
  %fDistance.i.i1656.3 = getelementptr inbounds i8, i8* %call755, i64 352
  %1022 = bitcast i8* %fDistance.i.i1656.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1022, align 8, !tbaa !68
  %m_fGain.i.i1657.3 = getelementptr inbounds i8, i8* %call755, i64 356
  %1023 = bitcast i8* %m_fGain.i.i1657.3 to float*
  store float 1.000000e+00, float* %1023, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1015, align 8, !tbaa !40
  %arrayctor.next769.3 = getelementptr inbounds i8, i8* %call755, i64 360
  %1024 = bitcast i8* %arrayctor.next769.3 to i32 (...)***
  %1025 = getelementptr inbounds i8, i8* %call755, i64 368
  %1026 = bitcast i8* %1025 to i32*
  store i32 0, i32* %1026, align 8, !tbaa !61
  %1027 = getelementptr inbounds i8, i8* %call755, i64 372
  store i8 0, i8* %1027, align 4, !tbaa !64
  %1028 = getelementptr inbounds i8, i8* %call755, i64 376
  %1029 = bitcast i8* %1028 to i32*
  store i32 0, i32* %1029, align 8, !tbaa !65
  %1030 = getelementptr inbounds i8, i8* %call755, i64 380
  store i8 0, i8* %1030, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.4 = getelementptr inbounds i8, i8* %call755, i64 384
  %fDistance.i.i1656.4 = getelementptr inbounds i8, i8* %call755, i64 440
  %1031 = bitcast i8* %fDistance.i.i1656.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1031, align 8, !tbaa !68
  %m_fGain.i.i1657.4 = getelementptr inbounds i8, i8* %call755, i64 444
  %1032 = bitcast i8* %m_fGain.i.i1657.4 to float*
  store float 1.000000e+00, float* %1032, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1024, align 8, !tbaa !40
  %arrayctor.next769.4 = getelementptr inbounds i8, i8* %call755, i64 448
  %1033 = bitcast i8* %arrayctor.next769.4 to i32 (...)***
  %1034 = getelementptr inbounds i8, i8* %call755, i64 456
  %1035 = bitcast i8* %1034 to i32*
  store i32 0, i32* %1035, align 8, !tbaa !61
  %1036 = getelementptr inbounds i8, i8* %call755, i64 460
  store i8 0, i8* %1036, align 4, !tbaa !64
  %1037 = getelementptr inbounds i8, i8* %call755, i64 464
  %1038 = bitcast i8* %1037 to i32*
  store i32 0, i32* %1038, align 8, !tbaa !65
  %1039 = getelementptr inbounds i8, i8* %call755, i64 468
  store i8 0, i8* %1039, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.5 = getelementptr inbounds i8, i8* %call755, i64 472
  %fDistance.i.i1656.5 = getelementptr inbounds i8, i8* %call755, i64 528
  %1040 = bitcast i8* %fDistance.i.i1656.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1040, align 8, !tbaa !68
  %m_fGain.i.i1657.5 = getelementptr inbounds i8, i8* %call755, i64 532
  %1041 = bitcast i8* %m_fGain.i.i1657.5 to float*
  store float 1.000000e+00, float* %1041, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1033, align 8, !tbaa !40
  %arrayctor.next769.5 = getelementptr inbounds i8, i8* %call755, i64 536
  %1042 = bitcast i8* %arrayctor.next769.5 to i32 (...)***
  %1043 = getelementptr inbounds i8, i8* %call755, i64 544
  %1044 = bitcast i8* %1043 to i32*
  store i32 0, i32* %1044, align 8, !tbaa !61
  %1045 = getelementptr inbounds i8, i8* %call755, i64 548
  store i8 0, i8* %1045, align 4, !tbaa !64
  %1046 = getelementptr inbounds i8, i8* %call755, i64 552
  %1047 = bitcast i8* %1046 to i32*
  store i32 0, i32* %1047, align 8, !tbaa !65
  %1048 = getelementptr inbounds i8, i8* %call755, i64 556
  store i8 0, i8* %1048, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.6 = getelementptr inbounds i8, i8* %call755, i64 560
  %fDistance.i.i1656.6 = getelementptr inbounds i8, i8* %call755, i64 616
  %1049 = bitcast i8* %fDistance.i.i1656.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1049, align 8, !tbaa !68
  %m_fGain.i.i1657.6 = getelementptr inbounds i8, i8* %call755, i64 620
  %1050 = bitcast i8* %m_fGain.i.i1657.6 to float*
  store float 1.000000e+00, float* %1050, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1042, align 8, !tbaa !40
  %arrayctor.next769.6 = getelementptr inbounds i8, i8* %call755, i64 624
  %1051 = bitcast i8* %arrayctor.next769.6 to i32 (...)***
  %1052 = getelementptr inbounds i8, i8* %call755, i64 632
  %1053 = bitcast i8* %1052 to i32*
  store i32 0, i32* %1053, align 8, !tbaa !61
  %1054 = getelementptr inbounds i8, i8* %call755, i64 636
  store i8 0, i8* %1054, align 4, !tbaa !64
  %1055 = getelementptr inbounds i8, i8* %call755, i64 640
  %1056 = bitcast i8* %1055 to i32*
  store i32 0, i32* %1056, align 8, !tbaa !65
  %1057 = getelementptr inbounds i8, i8* %call755, i64 644
  store i8 0, i8* %1057, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.7 = getelementptr inbounds i8, i8* %call755, i64 648
  %fDistance.i.i1656.7 = getelementptr inbounds i8, i8* %call755, i64 704
  %1058 = bitcast i8* %fDistance.i.i1656.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1058, align 8, !tbaa !68
  %m_fGain.i.i1657.7 = getelementptr inbounds i8, i8* %call755, i64 708
  %1059 = bitcast i8* %m_fGain.i.i1657.7 to float*
  store float 1.000000e+00, float* %1059, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1051, align 8, !tbaa !40
  %arrayctor.next769.7 = getelementptr inbounds i8, i8* %call755, i64 712
  %1060 = bitcast i8* %arrayctor.next769.7 to i32 (...)***
  %1061 = getelementptr inbounds i8, i8* %call755, i64 720
  %1062 = bitcast i8* %1061 to i32*
  store i32 0, i32* %1062, align 8, !tbaa !61
  %1063 = getelementptr inbounds i8, i8* %call755, i64 724
  store i8 0, i8* %1063, align 4, !tbaa !64
  %1064 = getelementptr inbounds i8, i8* %call755, i64 728
  %1065 = bitcast i8* %1064 to i32*
  store i32 0, i32* %1065, align 8, !tbaa !65
  %1066 = getelementptr inbounds i8, i8* %call755, i64 732
  store i8 0, i8* %1066, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.8 = getelementptr inbounds i8, i8* %call755, i64 736
  %fDistance.i.i1656.8 = getelementptr inbounds i8, i8* %call755, i64 792
  %1067 = bitcast i8* %fDistance.i.i1656.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1067, align 8, !tbaa !68
  %m_fGain.i.i1657.8 = getelementptr inbounds i8, i8* %call755, i64 796
  %1068 = bitcast i8* %m_fGain.i.i1657.8 to float*
  store float 1.000000e+00, float* %1068, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1060, align 8, !tbaa !40
  %arrayctor.next769.8 = getelementptr inbounds i8, i8* %call755, i64 800
  %1069 = bitcast i8* %arrayctor.next769.8 to i32 (...)***
  %1070 = getelementptr inbounds i8, i8* %call755, i64 808
  %1071 = bitcast i8* %1070 to i32*
  store i32 0, i32* %1071, align 8, !tbaa !61
  %1072 = getelementptr inbounds i8, i8* %call755, i64 812
  store i8 0, i8* %1072, align 4, !tbaa !64
  %1073 = getelementptr inbounds i8, i8* %call755, i64 816
  %1074 = bitcast i8* %1073 to i32*
  store i32 0, i32* %1074, align 8, !tbaa !65
  %1075 = getelementptr inbounds i8, i8* %call755, i64 820
  store i8 0, i8* %1075, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.9 = getelementptr inbounds i8, i8* %call755, i64 824
  %fDistance.i.i1656.9 = getelementptr inbounds i8, i8* %call755, i64 880
  %1076 = bitcast i8* %fDistance.i.i1656.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1076, align 8, !tbaa !68
  %m_fGain.i.i1657.9 = getelementptr inbounds i8, i8* %call755, i64 884
  %1077 = bitcast i8* %m_fGain.i.i1657.9 to float*
  store float 1.000000e+00, float* %1077, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1069, align 8, !tbaa !40
  %arrayctor.next769.9 = getelementptr inbounds i8, i8* %call755, i64 888
  %1078 = bitcast i8* %arrayctor.next769.9 to i32 (...)***
  %1079 = getelementptr inbounds i8, i8* %call755, i64 896
  %1080 = bitcast i8* %1079 to i32*
  store i32 0, i32* %1080, align 8, !tbaa !61
  %1081 = getelementptr inbounds i8, i8* %call755, i64 900
  store i8 0, i8* %1081, align 4, !tbaa !64
  %1082 = getelementptr inbounds i8, i8* %call755, i64 904
  %1083 = bitcast i8* %1082 to i32*
  store i32 0, i32* %1083, align 8, !tbaa !65
  %1084 = getelementptr inbounds i8, i8* %call755, i64 908
  store i8 0, i8* %1084, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.10 = getelementptr inbounds i8, i8* %call755, i64 912
  %fDistance.i.i1656.10 = getelementptr inbounds i8, i8* %call755, i64 968
  %1085 = bitcast i8* %fDistance.i.i1656.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1085, align 8, !tbaa !68
  %m_fGain.i.i1657.10 = getelementptr inbounds i8, i8* %call755, i64 972
  %1086 = bitcast i8* %m_fGain.i.i1657.10 to float*
  store float 1.000000e+00, float* %1086, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1078, align 8, !tbaa !40
  %arrayctor.next769.10 = getelementptr inbounds i8, i8* %call755, i64 976
  %1087 = bitcast i8* %arrayctor.next769.10 to i32 (...)***
  %1088 = getelementptr inbounds i8, i8* %call755, i64 984
  %1089 = bitcast i8* %1088 to i32*
  store i32 0, i32* %1089, align 8, !tbaa !61
  %1090 = getelementptr inbounds i8, i8* %call755, i64 988
  store i8 0, i8* %1090, align 4, !tbaa !64
  %1091 = getelementptr inbounds i8, i8* %call755, i64 992
  %1092 = bitcast i8* %1091 to i32*
  store i32 0, i32* %1092, align 8, !tbaa !65
  %1093 = getelementptr inbounds i8, i8* %call755, i64 996
  store i8 0, i8* %1093, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.11 = getelementptr inbounds i8, i8* %call755, i64 1000
  %fDistance.i.i1656.11 = getelementptr inbounds i8, i8* %call755, i64 1056
  %1094 = bitcast i8* %fDistance.i.i1656.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1094, align 8, !tbaa !68
  %m_fGain.i.i1657.11 = getelementptr inbounds i8, i8* %call755, i64 1060
  %1095 = bitcast i8* %m_fGain.i.i1657.11 to float*
  store float 1.000000e+00, float* %1095, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1087, align 8, !tbaa !40
  %arrayctor.next769.11 = getelementptr inbounds i8, i8* %call755, i64 1064
  %1096 = bitcast i8* %arrayctor.next769.11 to i32 (...)***
  %1097 = getelementptr inbounds i8, i8* %call755, i64 1072
  %1098 = bitcast i8* %1097 to i32*
  store i32 0, i32* %1098, align 8, !tbaa !61
  %1099 = getelementptr inbounds i8, i8* %call755, i64 1076
  store i8 0, i8* %1099, align 4, !tbaa !64
  %1100 = getelementptr inbounds i8, i8* %call755, i64 1080
  %1101 = bitcast i8* %1100 to i32*
  store i32 0, i32* %1101, align 8, !tbaa !65
  %1102 = getelementptr inbounds i8, i8* %call755, i64 1084
  store i8 0, i8* %1102, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.12 = getelementptr inbounds i8, i8* %call755, i64 1088
  %fDistance.i.i1656.12 = getelementptr inbounds i8, i8* %call755, i64 1144
  %1103 = bitcast i8* %fDistance.i.i1656.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1103, align 8, !tbaa !68
  %m_fGain.i.i1657.12 = getelementptr inbounds i8, i8* %call755, i64 1148
  %1104 = bitcast i8* %m_fGain.i.i1657.12 to float*
  store float 1.000000e+00, float* %1104, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1096, align 8, !tbaa !40
  %arrayctor.next769.12 = getelementptr inbounds i8, i8* %call755, i64 1152
  %1105 = bitcast i8* %arrayctor.next769.12 to i32 (...)***
  %1106 = getelementptr inbounds i8, i8* %call755, i64 1160
  %1107 = bitcast i8* %1106 to i32*
  store i32 0, i32* %1107, align 8, !tbaa !61
  %1108 = getelementptr inbounds i8, i8* %call755, i64 1164
  store i8 0, i8* %1108, align 4, !tbaa !64
  %1109 = getelementptr inbounds i8, i8* %call755, i64 1168
  %1110 = bitcast i8* %1109 to i32*
  store i32 0, i32* %1110, align 8, !tbaa !65
  %1111 = getelementptr inbounds i8, i8* %call755, i64 1172
  store i8 0, i8* %1111, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.13 = getelementptr inbounds i8, i8* %call755, i64 1176
  %fDistance.i.i1656.13 = getelementptr inbounds i8, i8* %call755, i64 1232
  %1112 = bitcast i8* %fDistance.i.i1656.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1112, align 8, !tbaa !68
  %m_fGain.i.i1657.13 = getelementptr inbounds i8, i8* %call755, i64 1236
  %1113 = bitcast i8* %m_fGain.i.i1657.13 to float*
  store float 1.000000e+00, float* %1113, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1105, align 8, !tbaa !40
  %arrayctor.next769.13 = getelementptr inbounds i8, i8* %call755, i64 1240
  %1114 = bitcast i8* %arrayctor.next769.13 to i32 (...)***
  %1115 = getelementptr inbounds i8, i8* %call755, i64 1248
  %1116 = bitcast i8* %1115 to i32*
  store i32 0, i32* %1116, align 8, !tbaa !61
  %1117 = getelementptr inbounds i8, i8* %call755, i64 1252
  store i8 0, i8* %1117, align 4, !tbaa !64
  %1118 = getelementptr inbounds i8, i8* %call755, i64 1256
  %1119 = bitcast i8* %1118 to i32*
  store i32 0, i32* %1119, align 8, !tbaa !65
  %1120 = getelementptr inbounds i8, i8* %call755, i64 1260
  store i8 0, i8* %1120, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.14 = getelementptr inbounds i8, i8* %call755, i64 1264
  %fDistance.i.i1656.14 = getelementptr inbounds i8, i8* %call755, i64 1320
  %1121 = bitcast i8* %fDistance.i.i1656.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1121, align 8, !tbaa !68
  %m_fGain.i.i1657.14 = getelementptr inbounds i8, i8* %call755, i64 1324
  %1122 = bitcast i8* %m_fGain.i.i1657.14 to float*
  store float 1.000000e+00, float* %1122, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1114, align 8, !tbaa !40
  %arrayctor.next769.14 = getelementptr inbounds i8, i8* %call755, i64 1328
  %1123 = bitcast i8* %arrayctor.next769.14 to i32 (...)***
  %1124 = getelementptr inbounds i8, i8* %call755, i64 1336
  %1125 = bitcast i8* %1124 to i32*
  store i32 0, i32* %1125, align 8, !tbaa !61
  %1126 = getelementptr inbounds i8, i8* %call755, i64 1340
  store i8 0, i8* %1126, align 4, !tbaa !64
  %1127 = getelementptr inbounds i8, i8* %call755, i64 1344
  %1128 = bitcast i8* %1127 to i32*
  store i32 0, i32* %1128, align 8, !tbaa !65
  %1129 = getelementptr inbounds i8, i8* %call755, i64 1348
  store i8 0, i8* %1129, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.15 = getelementptr inbounds i8, i8* %call755, i64 1352
  %fDistance.i.i1656.15 = getelementptr inbounds i8, i8* %call755, i64 1408
  %1130 = bitcast i8* %fDistance.i.i1656.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1130, align 8, !tbaa !68
  %m_fGain.i.i1657.15 = getelementptr inbounds i8, i8* %call755, i64 1412
  %1131 = bitcast i8* %m_fGain.i.i1657.15 to float*
  store float 1.000000e+00, float* %1131, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1123, align 8, !tbaa !40
  %arrayctor.next769.15 = getelementptr inbounds i8, i8* %call755, i64 1416
  %1132 = bitcast i8* %arrayctor.next769.15 to i32 (...)***
  %1133 = getelementptr inbounds i8, i8* %call755, i64 1424
  %1134 = bitcast i8* %1133 to i32*
  store i32 0, i32* %1134, align 8, !tbaa !61
  %1135 = getelementptr inbounds i8, i8* %call755, i64 1428
  store i8 0, i8* %1135, align 4, !tbaa !64
  %1136 = getelementptr inbounds i8, i8* %call755, i64 1432
  %1137 = bitcast i8* %1136 to i32*
  store i32 0, i32* %1137, align 8, !tbaa !65
  %1138 = getelementptr inbounds i8, i8* %call755, i64 1436
  store i8 0, i8* %1138, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.16 = getelementptr inbounds i8, i8* %call755, i64 1440
  %fDistance.i.i1656.16 = getelementptr inbounds i8, i8* %call755, i64 1496
  %1139 = bitcast i8* %fDistance.i.i1656.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1139, align 8, !tbaa !68
  %m_fGain.i.i1657.16 = getelementptr inbounds i8, i8* %call755, i64 1500
  %1140 = bitcast i8* %m_fGain.i.i1657.16 to float*
  store float 1.000000e+00, float* %1140, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1132, align 8, !tbaa !40
  %arrayctor.next769.16 = getelementptr inbounds i8, i8* %call755, i64 1504
  %1141 = bitcast i8* %arrayctor.next769.16 to i32 (...)***
  %1142 = getelementptr inbounds i8, i8* %call755, i64 1512
  %1143 = bitcast i8* %1142 to i32*
  store i32 0, i32* %1143, align 8, !tbaa !61
  %1144 = getelementptr inbounds i8, i8* %call755, i64 1516
  store i8 0, i8* %1144, align 4, !tbaa !64
  %1145 = getelementptr inbounds i8, i8* %call755, i64 1520
  %1146 = bitcast i8* %1145 to i32*
  store i32 0, i32* %1146, align 8, !tbaa !65
  %1147 = getelementptr inbounds i8, i8* %call755, i64 1524
  store i8 0, i8* %1147, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.17 = getelementptr inbounds i8, i8* %call755, i64 1528
  %fDistance.i.i1656.17 = getelementptr inbounds i8, i8* %call755, i64 1584
  %1148 = bitcast i8* %fDistance.i.i1656.17 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.17, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1148, align 8, !tbaa !68
  %m_fGain.i.i1657.17 = getelementptr inbounds i8, i8* %call755, i64 1588
  %1149 = bitcast i8* %m_fGain.i.i1657.17 to float*
  store float 1.000000e+00, float* %1149, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1141, align 8, !tbaa !40
  %arrayctor.next769.17 = getelementptr inbounds i8, i8* %call755, i64 1592
  %1150 = bitcast i8* %arrayctor.next769.17 to i32 (...)***
  %1151 = getelementptr inbounds i8, i8* %call755, i64 1600
  %1152 = bitcast i8* %1151 to i32*
  store i32 0, i32* %1152, align 8, !tbaa !61
  %1153 = getelementptr inbounds i8, i8* %call755, i64 1604
  store i8 0, i8* %1153, align 4, !tbaa !64
  %1154 = getelementptr inbounds i8, i8* %call755, i64 1608
  %1155 = bitcast i8* %1154 to i32*
  store i32 0, i32* %1155, align 8, !tbaa !65
  %1156 = getelementptr inbounds i8, i8* %call755, i64 1612
  store i8 0, i8* %1156, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.18 = getelementptr inbounds i8, i8* %call755, i64 1616
  %fDistance.i.i1656.18 = getelementptr inbounds i8, i8* %call755, i64 1672
  %1157 = bitcast i8* %fDistance.i.i1656.18 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.18, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1157, align 8, !tbaa !68
  %m_fGain.i.i1657.18 = getelementptr inbounds i8, i8* %call755, i64 1676
  %1158 = bitcast i8* %m_fGain.i.i1657.18 to float*
  store float 1.000000e+00, float* %1158, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1150, align 8, !tbaa !40
  %arrayctor.next769.18 = getelementptr inbounds i8, i8* %call755, i64 1680
  %1159 = bitcast i8* %arrayctor.next769.18 to i32 (...)***
  %1160 = getelementptr inbounds i8, i8* %call755, i64 1688
  %1161 = bitcast i8* %1160 to i32*
  store i32 0, i32* %1161, align 8, !tbaa !61
  %1162 = getelementptr inbounds i8, i8* %call755, i64 1692
  store i8 0, i8* %1162, align 4, !tbaa !64
  %1163 = getelementptr inbounds i8, i8* %call755, i64 1696
  %1164 = bitcast i8* %1163 to i32*
  store i32 0, i32* %1164, align 8, !tbaa !65
  %1165 = getelementptr inbounds i8, i8* %call755, i64 1700
  store i8 0, i8* %1165, align 4, !tbaa !66
  %m_pfCoeff.i.i1655.19 = getelementptr inbounds i8, i8* %call755, i64 1704
  %fDistance.i.i1656.19 = getelementptr inbounds i8, i8* %call755, i64 1760
  %1166 = bitcast i8* %fDistance.i.i1656.19 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.19, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1166, align 8, !tbaa !68
  %m_fGain.i.i1657.19 = getelementptr inbounds i8, i8* %call755, i64 1764
  %1167 = bitcast i8* %m_fGain.i.i1657.19 to float*
  store float 1.000000e+00, float* %1167, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1159, align 8, !tbaa !40
  %1168 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %987, i8** %1168, align 8, !tbaa !259
  %call773 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.4.vec.insert1583 = insertelement <2 x float> undef, float %call773, i32 1
  %call775 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1529 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1583, float %call775, i32 0
  %1169 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1170 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1171 = load i32, i32* %1170, align 8, !tbaa !61
  %1172 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1173 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool781 = icmp ne i8 %1173, 0
  %1174 = bitcast %class.CAmbisonicSpeaker* %1169 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable782 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1174, align 8, !tbaa !40
  %vfn783 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable782, i64 2
  %1175 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn783, align 8
  %call784 = tail call zeroext i1 %1175(%class.CAmbisonicSpeaker* %1169, i32 %1171, i1 zeroext %tobool781, i32 0)
  %1176 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1177 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1176, align 8, !tbaa !259
  %1178 = bitcast %class.CAmbisonicSource* %1177 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable788 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1178, align 8, !tbaa !40
  %vfn789 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable788, i64 5
  %1179 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn789, align 8
  tail call void %1179(%class.CAmbisonicSource* %1177, <2 x float> %polPosition.sroa.0.0.vec.insert1529, float 1.000000e+00)
  %call790 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1573 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1529, float %call790, i32 0
  %1180 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx793 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1180, i64 1
  %1181 = load i32, i32* %1170, align 8, !tbaa !61
  %1182 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool796 = icmp ne i8 %1182, 0
  %1183 = bitcast %class.CAmbisonicSpeaker* %arrayidx793 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable797 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1183, align 8, !tbaa !40
  %vfn798 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable797, i64 2
  %1184 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn798, align 8
  %call799 = tail call zeroext i1 %1184(%class.CAmbisonicSpeaker* nonnull %arrayidx793, i32 %1181, i1 zeroext %tobool796, i32 0)
  %1185 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1186 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1185, i64 1, i32 0
  %1187 = bitcast %class.CAmbisonicSource* %1186 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable803 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1187, align 8, !tbaa !40
  %vfn804 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable803, i64 5
  %1188 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn804, align 8
  tail call void %1188(%class.CAmbisonicSource* nonnull %1186, <2 x float> %polPosition.sroa.0.0.vec.insert1573, float 1.000000e+00)
  %call805 = tail call float @_Z16DegreesToRadiansf(float 0xC041A66660000000)
  %polPosition.sroa.0.4.vec.insert1585 = insertelement <2 x float> undef, float %call805, i32 1
  %call807 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1571 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1585, float %call807, i32 0
  %1189 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx810 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1189, i64 2
  %1190 = load i32, i32* %1170, align 8, !tbaa !61
  %1191 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool813 = icmp ne i8 %1191, 0
  %1192 = bitcast %class.CAmbisonicSpeaker* %arrayidx810 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable814 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1192, align 8, !tbaa !40
  %vfn815 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable814, i64 2
  %1193 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn815, align 8
  %call816 = tail call zeroext i1 %1193(%class.CAmbisonicSpeaker* nonnull %arrayidx810, i32 %1190, i1 zeroext %tobool813, i32 0)
  %1194 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1195 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1194, i64 2, i32 0
  %1196 = bitcast %class.CAmbisonicSource* %1195 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable820 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1196, align 8, !tbaa !40
  %vfn821 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable820, i64 5
  %1197 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn821, align 8
  tail call void %1197(%class.CAmbisonicSource* nonnull %1195, <2 x float> %polPosition.sroa.0.0.vec.insert1571, float 1.000000e+00)
  %call822 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1569 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1571, float %call822, i32 0
  %1198 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx825 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1198, i64 3
  %1199 = load i32, i32* %1170, align 8, !tbaa !61
  %1200 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool828 = icmp ne i8 %1200, 0
  %1201 = bitcast %class.CAmbisonicSpeaker* %arrayidx825 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable829 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1201, align 8, !tbaa !40
  %vfn830 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable829, i64 2
  %1202 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn830, align 8
  %call831 = tail call zeroext i1 %1202(%class.CAmbisonicSpeaker* nonnull %arrayidx825, i32 %1199, i1 zeroext %tobool828, i32 0)
  %1203 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1204 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1203, i64 3, i32 0
  %1205 = bitcast %class.CAmbisonicSource* %1204 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable835 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1205, align 8, !tbaa !40
  %vfn836 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable835, i64 5
  %1206 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn836, align 8
  tail call void %1206(%class.CAmbisonicSource* nonnull %1204, <2 x float> %polPosition.sroa.0.0.vec.insert1569, float 1.000000e+00)
  %call837 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1567 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1569, float %call837, i32 0
  %1207 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx840 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1207, i64 4
  %1208 = load i32, i32* %1170, align 8, !tbaa !61
  %1209 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool843 = icmp ne i8 %1209, 0
  %1210 = bitcast %class.CAmbisonicSpeaker* %arrayidx840 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable844 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1210, align 8, !tbaa !40
  %vfn845 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable844, i64 2
  %1211 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn845, align 8
  %call846 = tail call zeroext i1 %1211(%class.CAmbisonicSpeaker* nonnull %arrayidx840, i32 %1208, i1 zeroext %tobool843, i32 0)
  %1212 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1212, i64 4, i32 0
  %1214 = bitcast %class.CAmbisonicSource* %1213 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable850 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1214, align 8, !tbaa !40
  %vfn851 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable850, i64 5
  %1215 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn851, align 8
  tail call void %1215(%class.CAmbisonicSource* nonnull %1213, <2 x float> %polPosition.sroa.0.0.vec.insert1567, float 1.000000e+00)
  %call852 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1565 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1567, float %call852, i32 0
  %1216 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx855 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1216, i64 5
  %1217 = load i32, i32* %1170, align 8, !tbaa !61
  %1218 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool858 = icmp ne i8 %1218, 0
  %1219 = bitcast %class.CAmbisonicSpeaker* %arrayidx855 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable859 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1219, align 8, !tbaa !40
  %vfn860 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable859, i64 2
  %1220 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn860, align 8
  %call861 = tail call zeroext i1 %1220(%class.CAmbisonicSpeaker* nonnull %arrayidx855, i32 %1217, i1 zeroext %tobool858, i32 0)
  %1221 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1222 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1221, i64 5, i32 0
  %1223 = bitcast %class.CAmbisonicSource* %1222 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable865 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1223, align 8, !tbaa !40
  %vfn866 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable865, i64 5
  %1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn866, align 8
  tail call void %1224(%class.CAmbisonicSource* nonnull %1222, <2 x float> %polPosition.sroa.0.0.vec.insert1565, float 1.000000e+00)
  %call867 = tail call float @_Z16DegreesToRadiansf(float 0xC034E66660000000)
  %polPosition.sroa.0.4.vec.insert1587 = insertelement <2 x float> undef, float %call867, i32 1
  %call869 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1561 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1587, float %call869, i32 0
  %1225 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx872 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1225, i64 6
  %1226 = load i32, i32* %1170, align 8, !tbaa !61
  %1227 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool875 = icmp ne i8 %1227, 0
  %1228 = bitcast %class.CAmbisonicSpeaker* %arrayidx872 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable876 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1228, align 8, !tbaa !40
  %vfn877 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable876, i64 2
  %1229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn877, align 8
  %call878 = tail call zeroext i1 %1229(%class.CAmbisonicSpeaker* nonnull %arrayidx872, i32 %1226, i1 zeroext %tobool875, i32 0)
  %1230 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1231 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1230, i64 6, i32 0
  %1232 = bitcast %class.CAmbisonicSource* %1231 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable882 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1232, align 8, !tbaa !40
  %vfn883 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable882, i64 5
  %1233 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn883, align 8
  tail call void %1233(%class.CAmbisonicSource* nonnull %1231, <2 x float> %polPosition.sroa.0.0.vec.insert1561, float 1.000000e+00)
  %call884 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1555 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1561, float %call884, i32 0
  %1234 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx887 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1234, i64 7
  %1235 = load i32, i32* %1170, align 8, !tbaa !61
  %1236 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool890 = icmp ne i8 %1236, 0
  %1237 = bitcast %class.CAmbisonicSpeaker* %arrayidx887 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable891 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1237, align 8, !tbaa !40
  %vfn892 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable891, i64 2
  %1238 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn892, align 8
  %call893 = tail call zeroext i1 %1238(%class.CAmbisonicSpeaker* nonnull %arrayidx887, i32 %1235, i1 zeroext %tobool890, i32 0)
  %1239 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1239, i64 7, i32 0
  %1241 = bitcast %class.CAmbisonicSource* %1240 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable897 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1241, align 8, !tbaa !40
  %vfn898 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable897, i64 5
  %1242 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn898, align 8
  tail call void %1242(%class.CAmbisonicSource* nonnull %1240, <2 x float> %polPosition.sroa.0.0.vec.insert1555, float 1.000000e+00)
  %call899 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.4.vec.insert1589 = insertelement <2 x float> undef, float %call899, i32 1
  %call901 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.0.vec.insert1547 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1589, float %call901, i32 0
  %1243 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx904 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1243, i64 8
  %1244 = load i32, i32* %1170, align 8, !tbaa !61
  %1245 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool907 = icmp ne i8 %1245, 0
  %1246 = bitcast %class.CAmbisonicSpeaker* %arrayidx904 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable908 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1246, align 8, !tbaa !40
  %vfn909 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable908, i64 2
  %1247 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn909, align 8
  %call910 = tail call zeroext i1 %1247(%class.CAmbisonicSpeaker* nonnull %arrayidx904, i32 %1244, i1 zeroext %tobool907, i32 0)
  %1248 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1249 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1248, i64 8, i32 0
  %1250 = bitcast %class.CAmbisonicSource* %1249 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable914 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1250, align 8, !tbaa !40
  %vfn915 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable914, i64 5
  %1251 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn915, align 8
  tail call void %1251(%class.CAmbisonicSource* nonnull %1249, <2 x float> %polPosition.sroa.0.0.vec.insert1547, float 1.000000e+00)
  %call916 = tail call float @_Z16DegreesToRadiansf(float 0x405BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1537 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1547, float %call916, i32 0
  %1252 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx919 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1252, i64 9
  %1253 = load i32, i32* %1170, align 8, !tbaa !61
  %1254 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool922 = icmp ne i8 %1254, 0
  %1255 = bitcast %class.CAmbisonicSpeaker* %arrayidx919 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable923 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1255, align 8, !tbaa !40
  %vfn924 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable923, i64 2
  %1256 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn924, align 8
  %call925 = tail call zeroext i1 %1256(%class.CAmbisonicSpeaker* nonnull %arrayidx919, i32 %1253, i1 zeroext %tobool922, i32 0)
  %1257 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1258 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1257, i64 9, i32 0
  %1259 = bitcast %class.CAmbisonicSource* %1258 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable929 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1259, align 8, !tbaa !40
  %vfn930 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable929, i64 5
  %1260 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn930, align 8
  tail call void %1260(%class.CAmbisonicSource* nonnull %1258, <2 x float> %polPosition.sroa.0.0.vec.insert1537, float 1.000000e+00)
  %call931 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.0.vec.insert1503 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1537, float %call931, i32 0
  %1261 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx934 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1261, i64 10
  %1262 = load i32, i32* %1170, align 8, !tbaa !61
  %1263 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool937 = icmp ne i8 %1263, 0
  %1264 = bitcast %class.CAmbisonicSpeaker* %arrayidx934 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable938 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1264, align 8, !tbaa !40
  %vfn939 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable938, i64 2
  %1265 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn939, align 8
  %call940 = tail call zeroext i1 %1265(%class.CAmbisonicSpeaker* nonnull %arrayidx934, i32 %1262, i1 zeroext %tobool937, i32 0)
  %1266 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1267 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1266, i64 10, i32 0
  %1268 = bitcast %class.CAmbisonicSource* %1267 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable944 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1268, align 8, !tbaa !40
  %vfn945 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable944, i64 5
  %1269 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn945, align 8
  tail call void %1269(%class.CAmbisonicSource* nonnull %1267, <2 x float> %polPosition.sroa.0.0.vec.insert1503, float 1.000000e+00)
  %call946 = tail call float @_Z16DegreesToRadiansf(float 0xC05BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1531 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1503, float %call946, i32 0
  %1270 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx949 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1270, i64 11
  %1271 = load i32, i32* %1170, align 8, !tbaa !61
  %1272 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool952 = icmp ne i8 %1272, 0
  %1273 = bitcast %class.CAmbisonicSpeaker* %arrayidx949 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable953 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1273, align 8, !tbaa !40
  %vfn954 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable953, i64 2
  %1274 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn954, align 8
  %call955 = tail call zeroext i1 %1274(%class.CAmbisonicSpeaker* nonnull %arrayidx949, i32 %1271, i1 zeroext %tobool952, i32 0)
  %1275 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1276 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1275, i64 11, i32 0
  %1277 = bitcast %class.CAmbisonicSource* %1276 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable959 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1277, align 8, !tbaa !40
  %vfn960 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable959, i64 5
  %1278 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn960, align 8
  tail call void %1278(%class.CAmbisonicSource* nonnull %1276, <2 x float> %polPosition.sroa.0.0.vec.insert1531, float 1.000000e+00)
  %call961 = tail call float @_Z16DegreesToRadiansf(float 0x4034E66660000000)
  %polPosition.sroa.0.4.vec.insert1591 = insertelement <2 x float> undef, float %call961, i32 1
  %call963 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1533 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1591, float %call963, i32 0
  %1279 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx966 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1279, i64 12
  %1280 = load i32, i32* %1170, align 8, !tbaa !61
  %1281 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool969 = icmp ne i8 %1281, 0
  %1282 = bitcast %class.CAmbisonicSpeaker* %arrayidx966 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable970 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1282, align 8, !tbaa !40
  %vfn971 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable970, i64 2
  %1283 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn971, align 8
  %call972 = tail call zeroext i1 %1283(%class.CAmbisonicSpeaker* nonnull %arrayidx966, i32 %1280, i1 zeroext %tobool969, i32 0)
  %1284 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1285 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1284, i64 12, i32 0
  %1286 = bitcast %class.CAmbisonicSource* %1285 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable976 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1286, align 8, !tbaa !40
  %vfn977 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable976, i64 5
  %1287 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn977, align 8
  tail call void %1287(%class.CAmbisonicSource* nonnull %1285, <2 x float> %polPosition.sroa.0.0.vec.insert1533, float 1.000000e+00)
  %call978 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1535 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1533, float %call978, i32 0
  %1288 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1288, i64 13
  %1289 = load i32, i32* %1170, align 8, !tbaa !61
  %1290 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool984 = icmp ne i8 %1290, 0
  %1291 = bitcast %class.CAmbisonicSpeaker* %arrayidx981 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable985 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1291, align 8, !tbaa !40
  %vfn986 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable985, i64 2
  %1292 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn986, align 8
  %call987 = tail call zeroext i1 %1292(%class.CAmbisonicSpeaker* nonnull %arrayidx981, i32 %1289, i1 zeroext %tobool984, i32 0)
  %1293 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1294 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1293, i64 13, i32 0
  %1295 = bitcast %class.CAmbisonicSource* %1294 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable991 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1295, align 8, !tbaa !40
  %vfn992 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable991, i64 5
  %1296 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn992, align 8
  tail call void %1296(%class.CAmbisonicSource* nonnull %1294, <2 x float> %polPosition.sroa.0.0.vec.insert1535, float 1.000000e+00)
  %call993 = tail call float @_Z16DegreesToRadiansf(float 0x4041A66660000000)
  %polPosition.sroa.0.4.vec.insert1593 = insertelement <2 x float> undef, float %call993, i32 1
  %call995 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1539 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1593, float %call995, i32 0
  %1297 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx998 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1297, i64 14
  %1298 = load i32, i32* %1170, align 8, !tbaa !61
  %1299 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1001 = icmp ne i8 %1299, 0
  %1300 = bitcast %class.CAmbisonicSpeaker* %arrayidx998 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1002 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1300, align 8, !tbaa !40
  %vfn1003 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1002, i64 2
  %1301 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1003, align 8
  %call1004 = tail call zeroext i1 %1301(%class.CAmbisonicSpeaker* nonnull %arrayidx998, i32 %1298, i1 zeroext %tobool1001, i32 0)
  %1302 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1303 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1302, i64 14, i32 0
  %1304 = bitcast %class.CAmbisonicSource* %1303 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1008 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1304, align 8, !tbaa !40
  %vfn1009 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1008, i64 5
  %1305 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1009, align 8
  tail call void %1305(%class.CAmbisonicSource* nonnull %1303, <2 x float> %polPosition.sroa.0.0.vec.insert1539, float 1.000000e+00)
  %call1010 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1541 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1539, float %call1010, i32 0
  %1306 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1013 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1306, i64 15
  %1307 = load i32, i32* %1170, align 8, !tbaa !61
  %1308 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1016 = icmp ne i8 %1308, 0
  %1309 = bitcast %class.CAmbisonicSpeaker* %arrayidx1013 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1017 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1309, align 8, !tbaa !40
  %vfn1018 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1017, i64 2
  %1310 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1018, align 8
  %call1019 = tail call zeroext i1 %1310(%class.CAmbisonicSpeaker* nonnull %arrayidx1013, i32 %1307, i1 zeroext %tobool1016, i32 0)
  %1311 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1312 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1311, i64 15, i32 0
  %1313 = bitcast %class.CAmbisonicSource* %1312 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1023 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1313, align 8, !tbaa !40
  %vfn1024 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1023, i64 5
  %1314 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1024, align 8
  tail call void %1314(%class.CAmbisonicSource* nonnull %1312, <2 x float> %polPosition.sroa.0.0.vec.insert1541, float 1.000000e+00)
  %call1025 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1543 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1541, float %call1025, i32 0
  %1315 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1028 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1315, i64 16
  %1316 = load i32, i32* %1170, align 8, !tbaa !61
  %1317 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1031 = icmp ne i8 %1317, 0
  %1318 = bitcast %class.CAmbisonicSpeaker* %arrayidx1028 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1032 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1318, align 8, !tbaa !40
  %vfn1033 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1032, i64 2
  %1319 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1033, align 8
  %call1034 = tail call zeroext i1 %1319(%class.CAmbisonicSpeaker* nonnull %arrayidx1028, i32 %1316, i1 zeroext %tobool1031, i32 0)
  %1320 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1321 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1320, i64 16, i32 0
  %1322 = bitcast %class.CAmbisonicSource* %1321 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1038 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1322, align 8, !tbaa !40
  %vfn1039 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1038, i64 5
  %1323 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1039, align 8
  tail call void %1323(%class.CAmbisonicSource* nonnull %1321, <2 x float> %polPosition.sroa.0.0.vec.insert1543, float 1.000000e+00)
  %call1040 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1545 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1543, float %call1040, i32 0
  %1324 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1043 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1324, i64 17
  %1325 = load i32, i32* %1170, align 8, !tbaa !61
  %1326 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1046 = icmp ne i8 %1326, 0
  %1327 = bitcast %class.CAmbisonicSpeaker* %arrayidx1043 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1047 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1327, align 8, !tbaa !40
  %vfn1048 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1047, i64 2
  %1328 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1048, align 8
  %call1049 = tail call zeroext i1 %1328(%class.CAmbisonicSpeaker* nonnull %arrayidx1043, i32 %1325, i1 zeroext %tobool1046, i32 0)
  %1329 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1330 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1329, i64 17, i32 0
  %1331 = bitcast %class.CAmbisonicSource* %1330 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1053 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1331, align 8, !tbaa !40
  %vfn1054 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1053, i64 5
  %1332 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1054, align 8
  tail call void %1332(%class.CAmbisonicSource* nonnull %1330, <2 x float> %polPosition.sroa.0.0.vec.insert1545, float 1.000000e+00)
  %call1055 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.4.vec.insert1595 = insertelement <2 x float> undef, float %call1055, i32 1
  %call1057 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1549 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1595, float %call1057, i32 0
  %1333 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1060 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1333, i64 18
  %1334 = load i32, i32* %1170, align 8, !tbaa !61
  %1335 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1063 = icmp ne i8 %1335, 0
  %1336 = bitcast %class.CAmbisonicSpeaker* %arrayidx1060 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1064 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1336, align 8, !tbaa !40
  %vfn1065 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1064, i64 2
  %1337 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1065, align 8
  %call1066 = tail call zeroext i1 %1337(%class.CAmbisonicSpeaker* nonnull %arrayidx1060, i32 %1334, i1 zeroext %tobool1063, i32 0)
  %1338 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1339 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1338, i64 18, i32 0
  %1340 = bitcast %class.CAmbisonicSource* %1339 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1070 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1340, align 8, !tbaa !40
  %vfn1071 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1070, i64 5
  %1341 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1071, align 8
  tail call void %1341(%class.CAmbisonicSource* nonnull %1339, <2 x float> %polPosition.sroa.0.0.vec.insert1549, float 1.000000e+00)
  %call1072 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1551 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1549, float %call1072, i32 0
  %1342 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1075 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1342, i64 19
  %1343 = load i32, i32* %1170, align 8, !tbaa !61
  %1344 = load i8, i8* %1172, align 4, !tbaa !64, !range !67
  %tobool1078 = icmp ne i8 %1344, 0
  %1345 = bitcast %class.CAmbisonicSpeaker* %arrayidx1075 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1079 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1345, align 8, !tbaa !40
  %vfn1080 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1079, i64 2
  %1346 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1080, align 8
  %call1081 = tail call zeroext i1 %1346(%class.CAmbisonicSpeaker* nonnull %arrayidx1075, i32 %1343, i1 zeroext %tobool1078, i32 0)
  %1347 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1348 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1347, i64 19, i32 0
  %1349 = bitcast %class.CAmbisonicSource* %1348 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1085 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1349, align 8, !tbaa !40
  %vfn1086 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1085, i64 5
  %1350 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1086, align 8
  tail call void %1350(%class.CAmbisonicSource* nonnull %1348, <2 x float> %polPosition.sroa.0.0.vec.insert1551, float 1.000000e+00)
  br label %sw.epilog

sw.bb1087:                                        ; preds = %if.end
  %m_nSpeakers1088 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers1088, align 4, !tbaa !262
  %call1091 = tail call i8* @_Znam(i64 712) #26
  %1351 = bitcast i8* %call1091 to i64*
  store i64 8, i64* %1351, align 16
  %1352 = getelementptr inbounds i8, i8* %call1091, i64 8
  %1353 = bitcast i8* %1352 to i32 (...)***
  %1354 = getelementptr inbounds i8, i8* %call1091, i64 16
  %1355 = bitcast i8* %1354 to i32*
  store i32 0, i32* %1355, align 8, !tbaa !61
  %1356 = getelementptr inbounds i8, i8* %call1091, i64 20
  store i8 0, i8* %1356, align 4, !tbaa !64
  %1357 = getelementptr inbounds i8, i8* %call1091, i64 24
  %1358 = bitcast i8* %1357 to i32*
  store i32 0, i32* %1358, align 8, !tbaa !65
  %1359 = getelementptr inbounds i8, i8* %call1091, i64 28
  store i8 0, i8* %1359, align 4, !tbaa !66
  %m_pfCoeff.i.i1646 = getelementptr inbounds i8, i8* %call1091, i64 32
  %fDistance.i.i1647 = getelementptr inbounds i8, i8* %call1091, i64 88
  %1360 = bitcast i8* %fDistance.i.i1647 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1360, align 8, !tbaa !68
  %m_fGain.i.i1648 = getelementptr inbounds i8, i8* %call1091, i64 92
  %1361 = bitcast i8* %m_fGain.i.i1648 to float*
  store float 1.000000e+00, float* %1361, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1353, align 8, !tbaa !40
  %arrayctor.next1105 = getelementptr inbounds i8, i8* %call1091, i64 96
  %1362 = bitcast i8* %arrayctor.next1105 to i32 (...)***
  %1363 = getelementptr inbounds i8, i8* %call1091, i64 104
  %1364 = bitcast i8* %1363 to i32*
  store i32 0, i32* %1364, align 8, !tbaa !61
  %1365 = getelementptr inbounds i8, i8* %call1091, i64 108
  store i8 0, i8* %1365, align 4, !tbaa !64
  %1366 = getelementptr inbounds i8, i8* %call1091, i64 112
  %1367 = bitcast i8* %1366 to i32*
  store i32 0, i32* %1367, align 8, !tbaa !65
  %1368 = getelementptr inbounds i8, i8* %call1091, i64 116
  store i8 0, i8* %1368, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.1 = getelementptr inbounds i8, i8* %call1091, i64 120
  %fDistance.i.i1647.1 = getelementptr inbounds i8, i8* %call1091, i64 176
  %1369 = bitcast i8* %fDistance.i.i1647.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1369, align 8, !tbaa !68
  %m_fGain.i.i1648.1 = getelementptr inbounds i8, i8* %call1091, i64 180
  %1370 = bitcast i8* %m_fGain.i.i1648.1 to float*
  store float 1.000000e+00, float* %1370, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1362, align 8, !tbaa !40
  %arrayctor.next1105.1 = getelementptr inbounds i8, i8* %call1091, i64 184
  %1371 = bitcast i8* %arrayctor.next1105.1 to i32 (...)***
  %1372 = getelementptr inbounds i8, i8* %call1091, i64 192
  %1373 = bitcast i8* %1372 to i32*
  store i32 0, i32* %1373, align 8, !tbaa !61
  %1374 = getelementptr inbounds i8, i8* %call1091, i64 196
  store i8 0, i8* %1374, align 4, !tbaa !64
  %1375 = getelementptr inbounds i8, i8* %call1091, i64 200
  %1376 = bitcast i8* %1375 to i32*
  store i32 0, i32* %1376, align 8, !tbaa !65
  %1377 = getelementptr inbounds i8, i8* %call1091, i64 204
  store i8 0, i8* %1377, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.2 = getelementptr inbounds i8, i8* %call1091, i64 208
  %fDistance.i.i1647.2 = getelementptr inbounds i8, i8* %call1091, i64 264
  %1378 = bitcast i8* %fDistance.i.i1647.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1378, align 8, !tbaa !68
  %m_fGain.i.i1648.2 = getelementptr inbounds i8, i8* %call1091, i64 268
  %1379 = bitcast i8* %m_fGain.i.i1648.2 to float*
  store float 1.000000e+00, float* %1379, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1371, align 8, !tbaa !40
  %arrayctor.next1105.2 = getelementptr inbounds i8, i8* %call1091, i64 272
  %1380 = bitcast i8* %arrayctor.next1105.2 to i32 (...)***
  %1381 = getelementptr inbounds i8, i8* %call1091, i64 280
  %1382 = bitcast i8* %1381 to i32*
  store i32 0, i32* %1382, align 8, !tbaa !61
  %1383 = getelementptr inbounds i8, i8* %call1091, i64 284
  store i8 0, i8* %1383, align 4, !tbaa !64
  %1384 = getelementptr inbounds i8, i8* %call1091, i64 288
  %1385 = bitcast i8* %1384 to i32*
  store i32 0, i32* %1385, align 8, !tbaa !65
  %1386 = getelementptr inbounds i8, i8* %call1091, i64 292
  store i8 0, i8* %1386, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.3 = getelementptr inbounds i8, i8* %call1091, i64 296
  %fDistance.i.i1647.3 = getelementptr inbounds i8, i8* %call1091, i64 352
  %1387 = bitcast i8* %fDistance.i.i1647.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1387, align 8, !tbaa !68
  %m_fGain.i.i1648.3 = getelementptr inbounds i8, i8* %call1091, i64 356
  %1388 = bitcast i8* %m_fGain.i.i1648.3 to float*
  store float 1.000000e+00, float* %1388, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1380, align 8, !tbaa !40
  %arrayctor.next1105.3 = getelementptr inbounds i8, i8* %call1091, i64 360
  %1389 = bitcast i8* %arrayctor.next1105.3 to i32 (...)***
  %1390 = getelementptr inbounds i8, i8* %call1091, i64 368
  %1391 = bitcast i8* %1390 to i32*
  store i32 0, i32* %1391, align 8, !tbaa !61
  %1392 = getelementptr inbounds i8, i8* %call1091, i64 372
  store i8 0, i8* %1392, align 4, !tbaa !64
  %1393 = getelementptr inbounds i8, i8* %call1091, i64 376
  %1394 = bitcast i8* %1393 to i32*
  store i32 0, i32* %1394, align 8, !tbaa !65
  %1395 = getelementptr inbounds i8, i8* %call1091, i64 380
  store i8 0, i8* %1395, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.4 = getelementptr inbounds i8, i8* %call1091, i64 384
  %fDistance.i.i1647.4 = getelementptr inbounds i8, i8* %call1091, i64 440
  %1396 = bitcast i8* %fDistance.i.i1647.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1396, align 8, !tbaa !68
  %m_fGain.i.i1648.4 = getelementptr inbounds i8, i8* %call1091, i64 444
  %1397 = bitcast i8* %m_fGain.i.i1648.4 to float*
  store float 1.000000e+00, float* %1397, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1389, align 8, !tbaa !40
  %arrayctor.next1105.4 = getelementptr inbounds i8, i8* %call1091, i64 448
  %1398 = bitcast i8* %arrayctor.next1105.4 to i32 (...)***
  %1399 = getelementptr inbounds i8, i8* %call1091, i64 456
  %1400 = bitcast i8* %1399 to i32*
  store i32 0, i32* %1400, align 8, !tbaa !61
  %1401 = getelementptr inbounds i8, i8* %call1091, i64 460
  store i8 0, i8* %1401, align 4, !tbaa !64
  %1402 = getelementptr inbounds i8, i8* %call1091, i64 464
  %1403 = bitcast i8* %1402 to i32*
  store i32 0, i32* %1403, align 8, !tbaa !65
  %1404 = getelementptr inbounds i8, i8* %call1091, i64 468
  store i8 0, i8* %1404, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.5 = getelementptr inbounds i8, i8* %call1091, i64 472
  %fDistance.i.i1647.5 = getelementptr inbounds i8, i8* %call1091, i64 528
  %1405 = bitcast i8* %fDistance.i.i1647.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1405, align 8, !tbaa !68
  %m_fGain.i.i1648.5 = getelementptr inbounds i8, i8* %call1091, i64 532
  %1406 = bitcast i8* %m_fGain.i.i1648.5 to float*
  store float 1.000000e+00, float* %1406, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1398, align 8, !tbaa !40
  %arrayctor.next1105.5 = getelementptr inbounds i8, i8* %call1091, i64 536
  %1407 = bitcast i8* %arrayctor.next1105.5 to i32 (...)***
  %1408 = getelementptr inbounds i8, i8* %call1091, i64 544
  %1409 = bitcast i8* %1408 to i32*
  store i32 0, i32* %1409, align 8, !tbaa !61
  %1410 = getelementptr inbounds i8, i8* %call1091, i64 548
  store i8 0, i8* %1410, align 4, !tbaa !64
  %1411 = getelementptr inbounds i8, i8* %call1091, i64 552
  %1412 = bitcast i8* %1411 to i32*
  store i32 0, i32* %1412, align 8, !tbaa !65
  %1413 = getelementptr inbounds i8, i8* %call1091, i64 556
  store i8 0, i8* %1413, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.6 = getelementptr inbounds i8, i8* %call1091, i64 560
  %fDistance.i.i1647.6 = getelementptr inbounds i8, i8* %call1091, i64 616
  %1414 = bitcast i8* %fDistance.i.i1647.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1414, align 8, !tbaa !68
  %m_fGain.i.i1648.6 = getelementptr inbounds i8, i8* %call1091, i64 620
  %1415 = bitcast i8* %m_fGain.i.i1648.6 to float*
  store float 1.000000e+00, float* %1415, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1407, align 8, !tbaa !40
  %arrayctor.next1105.6 = getelementptr inbounds i8, i8* %call1091, i64 624
  %1416 = bitcast i8* %arrayctor.next1105.6 to i32 (...)***
  %1417 = getelementptr inbounds i8, i8* %call1091, i64 632
  %1418 = bitcast i8* %1417 to i32*
  store i32 0, i32* %1418, align 8, !tbaa !61
  %1419 = getelementptr inbounds i8, i8* %call1091, i64 636
  store i8 0, i8* %1419, align 4, !tbaa !64
  %1420 = getelementptr inbounds i8, i8* %call1091, i64 640
  %1421 = bitcast i8* %1420 to i32*
  store i32 0, i32* %1421, align 8, !tbaa !65
  %1422 = getelementptr inbounds i8, i8* %call1091, i64 644
  store i8 0, i8* %1422, align 4, !tbaa !66
  %m_pfCoeff.i.i1646.7 = getelementptr inbounds i8, i8* %call1091, i64 648
  %fDistance.i.i1647.7 = getelementptr inbounds i8, i8* %call1091, i64 704
  %1423 = bitcast i8* %fDistance.i.i1647.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1423, align 8, !tbaa !68
  %m_fGain.i.i1648.7 = getelementptr inbounds i8, i8* %call1091, i64 708
  %1424 = bitcast i8* %m_fGain.i.i1648.7 to float*
  store float 1.000000e+00, float* %1424, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1416, align 8, !tbaa !40
  %1425 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1352, i8** %1425, align 8, !tbaa !259
  %call1109 = tail call float @_Z16DegreesToRadiansf(float 0x40419999A0000000)
  %polPosition.sroa.0.4.vec.insert1597 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call1109, i32 1
  %1426 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !262
  %div11131700 = lshr i32 %1426, 1
  %cmp11141701 = icmp eq i32 %div11131700, 0
  br i1 %cmp11141701, label %for.end1143, label %for.body1115.lr.ph

for.body1115.lr.ph:                               ; preds = %sw.bb1087
  %1427 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1428 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1115

for.body1115:                                     ; preds = %for.body1115, %for.body1115.lr.ph
  %indvars.iv1738 = phi i64 [ 0, %for.body1115.lr.ph ], [ %indvars.iv.next1739, %for.body1115 ]
  %div11131704 = phi i32 [ %div11131700, %for.body1115.lr.ph ], [ %div1113, %for.body1115 ]
  %polPosition.sroa.0.81703 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %for.body1115.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %1429 = trunc i64 %indvars.iv1738 to i32
  %conv1116 = uitofp i32 %1429 to float
  %mul1117 = fmul float %conv1116, 3.600000e+02
  %conv1120 = uitofp i32 %div11131704 to float
  %div1121 = fdiv float %mul1117, %conv1120
  %add1122 = fadd float %div1121, 4.500000e+01
  %call1123 = tail call float @_Z16DegreesToRadiansf(float %add1122)
  %sub1124 = fsub float -0.000000e+00, %call1123
  %polPosition.sroa.0.0.vec.insert1553 = insertelement <2 x float> %polPosition.sroa.0.81703, float %sub1124, i32 0
  %1430 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1430, i64 %indvars.iv1738
  %1431 = load i32, i32* %1427, align 8, !tbaa !61
  %1432 = load i8, i8* %1428, align 4, !tbaa !64, !range !67
  %tobool1131 = icmp ne i8 %1432, 0
  %1433 = bitcast %class.CAmbisonicSpeaker* %arrayidx1128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1433, align 8, !tbaa !40
  %vfn1133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1132, i64 2
  %1434 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1133, align 8
  %call1134 = tail call zeroext i1 %1434(%class.CAmbisonicSpeaker* %arrayidx1128, i32 %1431, i1 zeroext %tobool1131, i32 0)
  %1435 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1436 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1435, i64 %indvars.iv1738, i32 0
  %1437 = bitcast %class.CAmbisonicSource* %1436 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1139 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1437, align 8, !tbaa !40
  %vfn1140 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1139, i64 5
  %1438 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1140, align 8
  tail call void %1438(%class.CAmbisonicSource* %1436, <2 x float> %polPosition.sroa.0.0.vec.insert1553, float 1.000000e+00)
  %indvars.iv.next1739 = add nuw nsw i64 %indvars.iv1738, 1
  %1439 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !262
  %div1113 = lshr i32 %1439, 1
  %1440 = zext i32 %div1113 to i64
  %cmp1114 = icmp ult i64 %indvars.iv.next1739, %1440
  br i1 %cmp1114, label %for.body1115, label %for.end1143

for.end1143:                                      ; preds = %for.body1115, %sw.bb1087
  %polPosition.sroa.0.8.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %sw.bb1087 ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %call1144 = tail call float @_Z16DegreesToRadiansf(float 0xC0419999A0000000)
  %1441 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !262
  %div1147 = lshr i32 %1441, 1
  %cmp11501697 = icmp ult i32 %div1147, %1441
  br i1 %cmp11501697, label %for.body1151.lr.ph, label %sw.epilog

for.body1151.lr.ph:                               ; preds = %for.end1143
  %polPosition.sroa.0.4.vec.insert = insertelement <2 x float> %polPosition.sroa.0.8.lcssa, float %call1144, i32 1
  %1442 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1443 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1444 = zext i32 %div1147 to i64
  br label %for.body1151

for.body1151:                                     ; preds = %for.body1151, %for.body1151.lr.ph
  %indvars.iv1736 = phi i64 [ %1444, %for.body1151.lr.ph ], [ %indvars.iv.next1737, %for.body1151 ]
  %1445 = phi i32 [ %1441, %for.body1151.lr.ph ], [ %1456, %for.body1151 ]
  %polPosition.sroa.0.91699 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert, %for.body1151.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1557, %for.body1151 ]
  %1446 = trunc i64 %indvars.iv1736 to i32
  %sub1152 = add i32 %1446, -4
  %conv1153 = uitofp i32 %sub1152 to float
  %mul1154 = fmul float %conv1153, 3.600000e+02
  %div1156 = lshr i32 %1445, 1
  %conv1157 = uitofp i32 %div1156 to float
  %div1158 = fdiv float %mul1154, %conv1157
  %add1159 = fadd float %div1158, 4.500000e+01
  %call1160 = tail call float @_Z16DegreesToRadiansf(float %add1159)
  %sub1161 = fsub float -0.000000e+00, %call1160
  %polPosition.sroa.0.0.vec.insert1557 = insertelement <2 x float> %polPosition.sroa.0.91699, float %sub1161, i32 0
  %1447 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1165 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1447, i64 %indvars.iv1736
  %1448 = load i32, i32* %1442, align 8, !tbaa !61
  %1449 = load i8, i8* %1443, align 4, !tbaa !64, !range !67
  %tobool1168 = icmp ne i8 %1449, 0
  %1450 = bitcast %class.CAmbisonicSpeaker* %arrayidx1165 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1169 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1450, align 8, !tbaa !40
  %vfn1170 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1169, i64 2
  %1451 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1170, align 8
  %call1171 = tail call zeroext i1 %1451(%class.CAmbisonicSpeaker* %arrayidx1165, i32 %1448, i1 zeroext %tobool1168, i32 0)
  %1452 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1453 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1452, i64 %indvars.iv1736, i32 0
  %1454 = bitcast %class.CAmbisonicSource* %1453 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1176 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1454, align 8, !tbaa !40
  %vfn1177 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1176, i64 5
  %1455 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1177, align 8
  tail call void %1455(%class.CAmbisonicSource* %1453, <2 x float> %polPosition.sroa.0.0.vec.insert1557, float 1.000000e+00)
  %indvars.iv.next1737 = add nuw nsw i64 %indvars.iv1736, 1
  %1456 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !262
  %1457 = zext i32 %1456 to i64
  %cmp1150 = icmp ult i64 %indvars.iv.next1737, %1457
  br i1 %cmp1150, label %for.body1151, label %sw.epilog

sw.bb1181:                                        ; preds = %if.end
  %m_nSpeakers1182 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 17, i32* %m_nSpeakers1182, align 4, !tbaa !262
  %call1185 = tail call i8* @_Znam(i64 1504) #26
  %1458 = bitcast i8* %call1185 to i64*
  store i64 17, i64* %1458, align 16
  %1459 = getelementptr inbounds i8, i8* %call1185, i64 8
  %1460 = bitcast i8* %1459 to i32 (...)***
  %1461 = getelementptr inbounds i8, i8* %call1185, i64 16
  %1462 = bitcast i8* %1461 to i32*
  store i32 0, i32* %1462, align 8, !tbaa !61
  %1463 = getelementptr inbounds i8, i8* %call1185, i64 20
  store i8 0, i8* %1463, align 4, !tbaa !64
  %1464 = getelementptr inbounds i8, i8* %call1185, i64 24
  %1465 = bitcast i8* %1464 to i32*
  store i32 0, i32* %1465, align 8, !tbaa !65
  %1466 = getelementptr inbounds i8, i8* %call1185, i64 28
  store i8 0, i8* %1466, align 4, !tbaa !66
  %m_pfCoeff.i.i1631 = getelementptr inbounds i8, i8* %call1185, i64 32
  %fDistance.i.i1632 = getelementptr inbounds i8, i8* %call1185, i64 88
  %1467 = bitcast i8* %fDistance.i.i1632 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1467, align 8, !tbaa !68
  %m_fGain.i.i1633 = getelementptr inbounds i8, i8* %call1185, i64 92
  %1468 = bitcast i8* %m_fGain.i.i1633 to float*
  store float 1.000000e+00, float* %1468, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1460, align 8, !tbaa !40
  %arrayctor.next1199 = getelementptr inbounds i8, i8* %call1185, i64 96
  %1469 = bitcast i8* %arrayctor.next1199 to i32 (...)***
  %1470 = getelementptr inbounds i8, i8* %call1185, i64 104
  %1471 = bitcast i8* %1470 to i32*
  store i32 0, i32* %1471, align 8, !tbaa !61
  %1472 = getelementptr inbounds i8, i8* %call1185, i64 108
  store i8 0, i8* %1472, align 4, !tbaa !64
  %1473 = getelementptr inbounds i8, i8* %call1185, i64 112
  %1474 = bitcast i8* %1473 to i32*
  store i32 0, i32* %1474, align 8, !tbaa !65
  %1475 = getelementptr inbounds i8, i8* %call1185, i64 116
  store i8 0, i8* %1475, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.1 = getelementptr inbounds i8, i8* %call1185, i64 120
  %fDistance.i.i1632.1 = getelementptr inbounds i8, i8* %call1185, i64 176
  %1476 = bitcast i8* %fDistance.i.i1632.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1476, align 8, !tbaa !68
  %m_fGain.i.i1633.1 = getelementptr inbounds i8, i8* %call1185, i64 180
  %1477 = bitcast i8* %m_fGain.i.i1633.1 to float*
  store float 1.000000e+00, float* %1477, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1469, align 8, !tbaa !40
  %arrayctor.next1199.1 = getelementptr inbounds i8, i8* %call1185, i64 184
  %1478 = bitcast i8* %arrayctor.next1199.1 to i32 (...)***
  %1479 = getelementptr inbounds i8, i8* %call1185, i64 192
  %1480 = bitcast i8* %1479 to i32*
  store i32 0, i32* %1480, align 8, !tbaa !61
  %1481 = getelementptr inbounds i8, i8* %call1185, i64 196
  store i8 0, i8* %1481, align 4, !tbaa !64
  %1482 = getelementptr inbounds i8, i8* %call1185, i64 200
  %1483 = bitcast i8* %1482 to i32*
  store i32 0, i32* %1483, align 8, !tbaa !65
  %1484 = getelementptr inbounds i8, i8* %call1185, i64 204
  store i8 0, i8* %1484, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.2 = getelementptr inbounds i8, i8* %call1185, i64 208
  %fDistance.i.i1632.2 = getelementptr inbounds i8, i8* %call1185, i64 264
  %1485 = bitcast i8* %fDistance.i.i1632.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1485, align 8, !tbaa !68
  %m_fGain.i.i1633.2 = getelementptr inbounds i8, i8* %call1185, i64 268
  %1486 = bitcast i8* %m_fGain.i.i1633.2 to float*
  store float 1.000000e+00, float* %1486, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1478, align 8, !tbaa !40
  %arrayctor.next1199.2 = getelementptr inbounds i8, i8* %call1185, i64 272
  %1487 = bitcast i8* %arrayctor.next1199.2 to i32 (...)***
  %1488 = getelementptr inbounds i8, i8* %call1185, i64 280
  %1489 = bitcast i8* %1488 to i32*
  store i32 0, i32* %1489, align 8, !tbaa !61
  %1490 = getelementptr inbounds i8, i8* %call1185, i64 284
  store i8 0, i8* %1490, align 4, !tbaa !64
  %1491 = getelementptr inbounds i8, i8* %call1185, i64 288
  %1492 = bitcast i8* %1491 to i32*
  store i32 0, i32* %1492, align 8, !tbaa !65
  %1493 = getelementptr inbounds i8, i8* %call1185, i64 292
  store i8 0, i8* %1493, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.3 = getelementptr inbounds i8, i8* %call1185, i64 296
  %fDistance.i.i1632.3 = getelementptr inbounds i8, i8* %call1185, i64 352
  %1494 = bitcast i8* %fDistance.i.i1632.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1494, align 8, !tbaa !68
  %m_fGain.i.i1633.3 = getelementptr inbounds i8, i8* %call1185, i64 356
  %1495 = bitcast i8* %m_fGain.i.i1633.3 to float*
  store float 1.000000e+00, float* %1495, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1487, align 8, !tbaa !40
  %arrayctor.next1199.3 = getelementptr inbounds i8, i8* %call1185, i64 360
  %1496 = bitcast i8* %arrayctor.next1199.3 to i32 (...)***
  %1497 = getelementptr inbounds i8, i8* %call1185, i64 368
  %1498 = bitcast i8* %1497 to i32*
  store i32 0, i32* %1498, align 8, !tbaa !61
  %1499 = getelementptr inbounds i8, i8* %call1185, i64 372
  store i8 0, i8* %1499, align 4, !tbaa !64
  %1500 = getelementptr inbounds i8, i8* %call1185, i64 376
  %1501 = bitcast i8* %1500 to i32*
  store i32 0, i32* %1501, align 8, !tbaa !65
  %1502 = getelementptr inbounds i8, i8* %call1185, i64 380
  store i8 0, i8* %1502, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.4 = getelementptr inbounds i8, i8* %call1185, i64 384
  %fDistance.i.i1632.4 = getelementptr inbounds i8, i8* %call1185, i64 440
  %1503 = bitcast i8* %fDistance.i.i1632.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1503, align 8, !tbaa !68
  %m_fGain.i.i1633.4 = getelementptr inbounds i8, i8* %call1185, i64 444
  %1504 = bitcast i8* %m_fGain.i.i1633.4 to float*
  store float 1.000000e+00, float* %1504, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1496, align 8, !tbaa !40
  %arrayctor.next1199.4 = getelementptr inbounds i8, i8* %call1185, i64 448
  %1505 = bitcast i8* %arrayctor.next1199.4 to i32 (...)***
  %1506 = getelementptr inbounds i8, i8* %call1185, i64 456
  %1507 = bitcast i8* %1506 to i32*
  store i32 0, i32* %1507, align 8, !tbaa !61
  %1508 = getelementptr inbounds i8, i8* %call1185, i64 460
  store i8 0, i8* %1508, align 4, !tbaa !64
  %1509 = getelementptr inbounds i8, i8* %call1185, i64 464
  %1510 = bitcast i8* %1509 to i32*
  store i32 0, i32* %1510, align 8, !tbaa !65
  %1511 = getelementptr inbounds i8, i8* %call1185, i64 468
  store i8 0, i8* %1511, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.5 = getelementptr inbounds i8, i8* %call1185, i64 472
  %fDistance.i.i1632.5 = getelementptr inbounds i8, i8* %call1185, i64 528
  %1512 = bitcast i8* %fDistance.i.i1632.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1512, align 8, !tbaa !68
  %m_fGain.i.i1633.5 = getelementptr inbounds i8, i8* %call1185, i64 532
  %1513 = bitcast i8* %m_fGain.i.i1633.5 to float*
  store float 1.000000e+00, float* %1513, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1505, align 8, !tbaa !40
  %arrayctor.next1199.5 = getelementptr inbounds i8, i8* %call1185, i64 536
  %1514 = bitcast i8* %arrayctor.next1199.5 to i32 (...)***
  %1515 = getelementptr inbounds i8, i8* %call1185, i64 544
  %1516 = bitcast i8* %1515 to i32*
  store i32 0, i32* %1516, align 8, !tbaa !61
  %1517 = getelementptr inbounds i8, i8* %call1185, i64 548
  store i8 0, i8* %1517, align 4, !tbaa !64
  %1518 = getelementptr inbounds i8, i8* %call1185, i64 552
  %1519 = bitcast i8* %1518 to i32*
  store i32 0, i32* %1519, align 8, !tbaa !65
  %1520 = getelementptr inbounds i8, i8* %call1185, i64 556
  store i8 0, i8* %1520, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.6 = getelementptr inbounds i8, i8* %call1185, i64 560
  %fDistance.i.i1632.6 = getelementptr inbounds i8, i8* %call1185, i64 616
  %1521 = bitcast i8* %fDistance.i.i1632.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1521, align 8, !tbaa !68
  %m_fGain.i.i1633.6 = getelementptr inbounds i8, i8* %call1185, i64 620
  %1522 = bitcast i8* %m_fGain.i.i1633.6 to float*
  store float 1.000000e+00, float* %1522, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1514, align 8, !tbaa !40
  %arrayctor.next1199.6 = getelementptr inbounds i8, i8* %call1185, i64 624
  %1523 = bitcast i8* %arrayctor.next1199.6 to i32 (...)***
  %1524 = getelementptr inbounds i8, i8* %call1185, i64 632
  %1525 = bitcast i8* %1524 to i32*
  store i32 0, i32* %1525, align 8, !tbaa !61
  %1526 = getelementptr inbounds i8, i8* %call1185, i64 636
  store i8 0, i8* %1526, align 4, !tbaa !64
  %1527 = getelementptr inbounds i8, i8* %call1185, i64 640
  %1528 = bitcast i8* %1527 to i32*
  store i32 0, i32* %1528, align 8, !tbaa !65
  %1529 = getelementptr inbounds i8, i8* %call1185, i64 644
  store i8 0, i8* %1529, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.7 = getelementptr inbounds i8, i8* %call1185, i64 648
  %fDistance.i.i1632.7 = getelementptr inbounds i8, i8* %call1185, i64 704
  %1530 = bitcast i8* %fDistance.i.i1632.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1530, align 8, !tbaa !68
  %m_fGain.i.i1633.7 = getelementptr inbounds i8, i8* %call1185, i64 708
  %1531 = bitcast i8* %m_fGain.i.i1633.7 to float*
  store float 1.000000e+00, float* %1531, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1523, align 8, !tbaa !40
  %arrayctor.next1199.7 = getelementptr inbounds i8, i8* %call1185, i64 712
  %1532 = bitcast i8* %arrayctor.next1199.7 to i32 (...)***
  %1533 = getelementptr inbounds i8, i8* %call1185, i64 720
  %1534 = bitcast i8* %1533 to i32*
  store i32 0, i32* %1534, align 8, !tbaa !61
  %1535 = getelementptr inbounds i8, i8* %call1185, i64 724
  store i8 0, i8* %1535, align 4, !tbaa !64
  %1536 = getelementptr inbounds i8, i8* %call1185, i64 728
  %1537 = bitcast i8* %1536 to i32*
  store i32 0, i32* %1537, align 8, !tbaa !65
  %1538 = getelementptr inbounds i8, i8* %call1185, i64 732
  store i8 0, i8* %1538, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.8 = getelementptr inbounds i8, i8* %call1185, i64 736
  %fDistance.i.i1632.8 = getelementptr inbounds i8, i8* %call1185, i64 792
  %1539 = bitcast i8* %fDistance.i.i1632.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1539, align 8, !tbaa !68
  %m_fGain.i.i1633.8 = getelementptr inbounds i8, i8* %call1185, i64 796
  %1540 = bitcast i8* %m_fGain.i.i1633.8 to float*
  store float 1.000000e+00, float* %1540, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1532, align 8, !tbaa !40
  %arrayctor.next1199.8 = getelementptr inbounds i8, i8* %call1185, i64 800
  %1541 = bitcast i8* %arrayctor.next1199.8 to i32 (...)***
  %1542 = getelementptr inbounds i8, i8* %call1185, i64 808
  %1543 = bitcast i8* %1542 to i32*
  store i32 0, i32* %1543, align 8, !tbaa !61
  %1544 = getelementptr inbounds i8, i8* %call1185, i64 812
  store i8 0, i8* %1544, align 4, !tbaa !64
  %1545 = getelementptr inbounds i8, i8* %call1185, i64 816
  %1546 = bitcast i8* %1545 to i32*
  store i32 0, i32* %1546, align 8, !tbaa !65
  %1547 = getelementptr inbounds i8, i8* %call1185, i64 820
  store i8 0, i8* %1547, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.9 = getelementptr inbounds i8, i8* %call1185, i64 824
  %fDistance.i.i1632.9 = getelementptr inbounds i8, i8* %call1185, i64 880
  %1548 = bitcast i8* %fDistance.i.i1632.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1548, align 8, !tbaa !68
  %m_fGain.i.i1633.9 = getelementptr inbounds i8, i8* %call1185, i64 884
  %1549 = bitcast i8* %m_fGain.i.i1633.9 to float*
  store float 1.000000e+00, float* %1549, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1541, align 8, !tbaa !40
  %arrayctor.next1199.9 = getelementptr inbounds i8, i8* %call1185, i64 888
  %1550 = bitcast i8* %arrayctor.next1199.9 to i32 (...)***
  %1551 = getelementptr inbounds i8, i8* %call1185, i64 896
  %1552 = bitcast i8* %1551 to i32*
  store i32 0, i32* %1552, align 8, !tbaa !61
  %1553 = getelementptr inbounds i8, i8* %call1185, i64 900
  store i8 0, i8* %1553, align 4, !tbaa !64
  %1554 = getelementptr inbounds i8, i8* %call1185, i64 904
  %1555 = bitcast i8* %1554 to i32*
  store i32 0, i32* %1555, align 8, !tbaa !65
  %1556 = getelementptr inbounds i8, i8* %call1185, i64 908
  store i8 0, i8* %1556, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.10 = getelementptr inbounds i8, i8* %call1185, i64 912
  %fDistance.i.i1632.10 = getelementptr inbounds i8, i8* %call1185, i64 968
  %1557 = bitcast i8* %fDistance.i.i1632.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1557, align 8, !tbaa !68
  %m_fGain.i.i1633.10 = getelementptr inbounds i8, i8* %call1185, i64 972
  %1558 = bitcast i8* %m_fGain.i.i1633.10 to float*
  store float 1.000000e+00, float* %1558, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1550, align 8, !tbaa !40
  %arrayctor.next1199.10 = getelementptr inbounds i8, i8* %call1185, i64 976
  %1559 = bitcast i8* %arrayctor.next1199.10 to i32 (...)***
  %1560 = getelementptr inbounds i8, i8* %call1185, i64 984
  %1561 = bitcast i8* %1560 to i32*
  store i32 0, i32* %1561, align 8, !tbaa !61
  %1562 = getelementptr inbounds i8, i8* %call1185, i64 988
  store i8 0, i8* %1562, align 4, !tbaa !64
  %1563 = getelementptr inbounds i8, i8* %call1185, i64 992
  %1564 = bitcast i8* %1563 to i32*
  store i32 0, i32* %1564, align 8, !tbaa !65
  %1565 = getelementptr inbounds i8, i8* %call1185, i64 996
  store i8 0, i8* %1565, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.11 = getelementptr inbounds i8, i8* %call1185, i64 1000
  %fDistance.i.i1632.11 = getelementptr inbounds i8, i8* %call1185, i64 1056
  %1566 = bitcast i8* %fDistance.i.i1632.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1566, align 8, !tbaa !68
  %m_fGain.i.i1633.11 = getelementptr inbounds i8, i8* %call1185, i64 1060
  %1567 = bitcast i8* %m_fGain.i.i1633.11 to float*
  store float 1.000000e+00, float* %1567, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1559, align 8, !tbaa !40
  %arrayctor.next1199.11 = getelementptr inbounds i8, i8* %call1185, i64 1064
  %1568 = bitcast i8* %arrayctor.next1199.11 to i32 (...)***
  %1569 = getelementptr inbounds i8, i8* %call1185, i64 1072
  %1570 = bitcast i8* %1569 to i32*
  store i32 0, i32* %1570, align 8, !tbaa !61
  %1571 = getelementptr inbounds i8, i8* %call1185, i64 1076
  store i8 0, i8* %1571, align 4, !tbaa !64
  %1572 = getelementptr inbounds i8, i8* %call1185, i64 1080
  %1573 = bitcast i8* %1572 to i32*
  store i32 0, i32* %1573, align 8, !tbaa !65
  %1574 = getelementptr inbounds i8, i8* %call1185, i64 1084
  store i8 0, i8* %1574, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.12 = getelementptr inbounds i8, i8* %call1185, i64 1088
  %fDistance.i.i1632.12 = getelementptr inbounds i8, i8* %call1185, i64 1144
  %1575 = bitcast i8* %fDistance.i.i1632.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1575, align 8, !tbaa !68
  %m_fGain.i.i1633.12 = getelementptr inbounds i8, i8* %call1185, i64 1148
  %1576 = bitcast i8* %m_fGain.i.i1633.12 to float*
  store float 1.000000e+00, float* %1576, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1568, align 8, !tbaa !40
  %arrayctor.next1199.12 = getelementptr inbounds i8, i8* %call1185, i64 1152
  %1577 = bitcast i8* %arrayctor.next1199.12 to i32 (...)***
  %1578 = getelementptr inbounds i8, i8* %call1185, i64 1160
  %1579 = bitcast i8* %1578 to i32*
  store i32 0, i32* %1579, align 8, !tbaa !61
  %1580 = getelementptr inbounds i8, i8* %call1185, i64 1164
  store i8 0, i8* %1580, align 4, !tbaa !64
  %1581 = getelementptr inbounds i8, i8* %call1185, i64 1168
  %1582 = bitcast i8* %1581 to i32*
  store i32 0, i32* %1582, align 8, !tbaa !65
  %1583 = getelementptr inbounds i8, i8* %call1185, i64 1172
  store i8 0, i8* %1583, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.13 = getelementptr inbounds i8, i8* %call1185, i64 1176
  %fDistance.i.i1632.13 = getelementptr inbounds i8, i8* %call1185, i64 1232
  %1584 = bitcast i8* %fDistance.i.i1632.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1584, align 8, !tbaa !68
  %m_fGain.i.i1633.13 = getelementptr inbounds i8, i8* %call1185, i64 1236
  %1585 = bitcast i8* %m_fGain.i.i1633.13 to float*
  store float 1.000000e+00, float* %1585, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1577, align 8, !tbaa !40
  %arrayctor.next1199.13 = getelementptr inbounds i8, i8* %call1185, i64 1240
  %1586 = bitcast i8* %arrayctor.next1199.13 to i32 (...)***
  %1587 = getelementptr inbounds i8, i8* %call1185, i64 1248
  %1588 = bitcast i8* %1587 to i32*
  store i32 0, i32* %1588, align 8, !tbaa !61
  %1589 = getelementptr inbounds i8, i8* %call1185, i64 1252
  store i8 0, i8* %1589, align 4, !tbaa !64
  %1590 = getelementptr inbounds i8, i8* %call1185, i64 1256
  %1591 = bitcast i8* %1590 to i32*
  store i32 0, i32* %1591, align 8, !tbaa !65
  %1592 = getelementptr inbounds i8, i8* %call1185, i64 1260
  store i8 0, i8* %1592, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.14 = getelementptr inbounds i8, i8* %call1185, i64 1264
  %fDistance.i.i1632.14 = getelementptr inbounds i8, i8* %call1185, i64 1320
  %1593 = bitcast i8* %fDistance.i.i1632.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1593, align 8, !tbaa !68
  %m_fGain.i.i1633.14 = getelementptr inbounds i8, i8* %call1185, i64 1324
  %1594 = bitcast i8* %m_fGain.i.i1633.14 to float*
  store float 1.000000e+00, float* %1594, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1586, align 8, !tbaa !40
  %arrayctor.next1199.14 = getelementptr inbounds i8, i8* %call1185, i64 1328
  %1595 = bitcast i8* %arrayctor.next1199.14 to i32 (...)***
  %1596 = getelementptr inbounds i8, i8* %call1185, i64 1336
  %1597 = bitcast i8* %1596 to i32*
  store i32 0, i32* %1597, align 8, !tbaa !61
  %1598 = getelementptr inbounds i8, i8* %call1185, i64 1340
  store i8 0, i8* %1598, align 4, !tbaa !64
  %1599 = getelementptr inbounds i8, i8* %call1185, i64 1344
  %1600 = bitcast i8* %1599 to i32*
  store i32 0, i32* %1600, align 8, !tbaa !65
  %1601 = getelementptr inbounds i8, i8* %call1185, i64 1348
  store i8 0, i8* %1601, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.15 = getelementptr inbounds i8, i8* %call1185, i64 1352
  %fDistance.i.i1632.15 = getelementptr inbounds i8, i8* %call1185, i64 1408
  %1602 = bitcast i8* %fDistance.i.i1632.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1602, align 8, !tbaa !68
  %m_fGain.i.i1633.15 = getelementptr inbounds i8, i8* %call1185, i64 1412
  %1603 = bitcast i8* %m_fGain.i.i1633.15 to float*
  store float 1.000000e+00, float* %1603, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1595, align 8, !tbaa !40
  %arrayctor.next1199.15 = getelementptr inbounds i8, i8* %call1185, i64 1416
  %1604 = bitcast i8* %arrayctor.next1199.15 to i32 (...)***
  %1605 = getelementptr inbounds i8, i8* %call1185, i64 1424
  %1606 = bitcast i8* %1605 to i32*
  store i32 0, i32* %1606, align 8, !tbaa !61
  %1607 = getelementptr inbounds i8, i8* %call1185, i64 1428
  store i8 0, i8* %1607, align 4, !tbaa !64
  %1608 = getelementptr inbounds i8, i8* %call1185, i64 1432
  %1609 = bitcast i8* %1608 to i32*
  store i32 0, i32* %1609, align 8, !tbaa !65
  %1610 = getelementptr inbounds i8, i8* %call1185, i64 1436
  store i8 0, i8* %1610, align 4, !tbaa !66
  %m_pfCoeff.i.i1631.16 = getelementptr inbounds i8, i8* %call1185, i64 1440
  %fDistance.i.i1632.16 = getelementptr inbounds i8, i8* %call1185, i64 1496
  %1611 = bitcast i8* %fDistance.i.i1632.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1611, align 8, !tbaa !68
  %m_fGain.i.i1633.16 = getelementptr inbounds i8, i8* %call1185, i64 1500
  %1612 = bitcast i8* %m_fGain.i.i1633.16 to float*
  store float 1.000000e+00, float* %1612, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1604, align 8, !tbaa !40
  %1613 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1459, i8** %1613, align 8, !tbaa !259
  %1614 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !262
  %cmp12071706 = icmp eq i32 %1614, 0
  br i1 %cmp12071706, label %sw.epilog, label %for.body1208.lr.ph

for.body1208.lr.ph:                               ; preds = %sw.bb1181
  %1615 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1616 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1208

for.body1208:                                     ; preds = %for.body1208, %for.body1208.lr.ph
  %indvars.iv1740 = phi i64 [ 0, %for.body1208.lr.ph ], [ %indvars.iv.next1741, %for.body1208 ]
  %polPosition.sroa.0.101708 = phi <2 x float> [ zeroinitializer, %for.body1208.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1563, %for.body1208 ]
  %call1209 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1563 = insertelement <2 x float> %polPosition.sroa.0.101708, float %call1209, i32 0
  %1617 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1617, i64 %indvars.iv1740
  %1618 = load i32, i32* %1615, align 8, !tbaa !61
  %1619 = load i8, i8* %1616, align 4, !tbaa !64, !range !67
  %tobool1216 = icmp ne i8 %1619, 0
  %1620 = bitcast %class.CAmbisonicSpeaker* %arrayidx1213 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1217 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1620, align 8, !tbaa !40
  %vfn1218 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1217, i64 2
  %1621 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1218, align 8
  %call1219 = tail call zeroext i1 %1621(%class.CAmbisonicSpeaker* %arrayidx1213, i32 %1618, i1 zeroext %tobool1216, i32 0)
  %1622 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1623 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1622, i64 %indvars.iv1740, i32 0
  %1624 = bitcast %class.CAmbisonicSource* %1623 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1624, align 8, !tbaa !40
  %vfn1225 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1224, i64 5
  %1625 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1225, align 8
  tail call void %1625(%class.CAmbisonicSource* %1623, <2 x float> %polPosition.sroa.0.0.vec.insert1563, float 1.000000e+00)
  %indvars.iv.next1741 = add nuw nsw i64 %indvars.iv1740, 1
  %1626 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !262
  %1627 = zext i32 %1626 to i64
  %cmp1207 = icmp ult i64 %indvars.iv.next1741, %1627
  br i1 %cmp1207, label %for.body1208, label %sw.epilog

sw.default:                                       ; preds = %if.end
  %m_nSpeakers1229 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers1229, align 4, !tbaa !262
  %call1232 = tail call i8* @_Znam(i64 96) #26
  %1628 = bitcast i8* %call1232 to i64*
  store i64 1, i64* %1628, align 16
  %1629 = getelementptr inbounds i8, i8* %call1232, i64 8
  %1630 = bitcast i8* %1629 to i32 (...)***
  %1631 = getelementptr inbounds i8, i8* %call1232, i64 16
  %1632 = bitcast i8* %1631 to i32*
  %1633 = getelementptr inbounds i8, i8* %call1232, i64 20
  %1634 = getelementptr inbounds i8, i8* %call1232, i64 24
  %1635 = bitcast i8* %1634 to i32*
  store i32 0, i32* %1635, align 8, !tbaa !65
  %1636 = getelementptr inbounds i8, i8* %call1232, i64 28
  store i8 0, i8* %1636, align 4, !tbaa !66
  %m_pfCoeff.i.i1622 = getelementptr inbounds i8, i8* %call1232, i64 32
  %fDistance.i.i1623 = getelementptr inbounds i8, i8* %call1232, i64 88
  %1637 = bitcast i8* %fDistance.i.i1623 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1637, align 8, !tbaa !68
  %m_fGain.i.i1624 = getelementptr inbounds i8, i8* %call1232, i64 92
  %1638 = bitcast i8* %m_fGain.i.i1624 to float*
  store float 1.000000e+00, float* %1638, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1630, align 8, !tbaa !40
  %1639 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1629, i8** %1639, align 8, !tbaa !259
  %1640 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1641 = load i32, i32* %1640, align 8, !tbaa !61
  %1642 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1643 = load i8, i8* %1642, align 4, !tbaa !64, !range !67
  %tobool1254 = icmp ne i8 %1643, 0
  store i32 %1641, i32* %1632, align 8, !tbaa !61
  store i8 %1643, i8* %1633, align 4, !tbaa !64
  %call.i.i.i1756 = tail call i32 @_Z17OrderToComponentsjb(i32 %1641, i1 zeroext %tobool1254)
  store i32 %call.i.i.i1756, i32* %1635, align 8, !tbaa !65
  %conv.i.i1758 = zext i32 %call.i.i.i1756 to i64
  %1644 = bitcast float* %ref.tmp.i.i1753 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1644) #24
  store float 0.000000e+00, float* %ref.tmp.i.i1753, align 4, !tbaa !50
  %_M_finish.i.i.i.i1759 = getelementptr inbounds i8, i8* %call1232, i64 40
  %1645 = bitcast i8* %_M_finish.i.i.i.i1759 to float**
  %1646 = bitcast i8* %_M_finish.i.i.i.i1759 to i64*
  %1647 = load i64, i64* %1646, align 8, !tbaa !73
  %1648 = bitcast i8* %m_pfCoeff.i.i1622 to i64*
  %1649 = load i64, i64* %1648, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i.i1760 = sub i64 %1647, %1649
  %sub.ptr.div.i.i.i.i1761 = ashr exact i64 %sub.ptr.sub.i.i.i.i1760, 2
  %cmp.i.i.i1762 = icmp ult i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  %1650 = inttoptr i64 %1649 to float*
  br i1 %cmp.i.i.i1762, label %if.then.i.i.i1764, label %if.else.i.i.i1766

if.then.i.i.i1764:                                ; preds = %sw.default
  %1651 = bitcast i8* %m_pfCoeff.i.i1622 to %"class.std::vector.0"*
  %1652 = inttoptr i64 %1647 to float*
  %sub.i.i.i1763 = sub nsw i64 %conv.i.i1758, %sub.ptr.div.i.i.i.i1761
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1651, float* %1652, i64 %sub.i.i.i1763, float* nonnull dereferenceable(4) %ref.tmp.i.i1753)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.else.i.i.i1766:                                ; preds = %sw.default
  %cmp6.i.i.i1765 = icmp ugt i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  br i1 %cmp6.i.i.i1765, label %if.then7.i.i.i1768, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.then7.i.i.i1768:                               ; preds = %if.else.i.i.i1766
  %add.ptr.i.i.i1767 = getelementptr inbounds float, float* %1650, i64 %conv.i.i1758
  store float* %add.ptr.i.i.i1767, float** %1645, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776:    ; preds = %if.then7.i.i.i1768, %if.else.i.i.i1766, %if.then.i.i.i1764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1644) #24
  %m_pfOrderWeights.i.i1769 = getelementptr inbounds i8, i8* %call1232, i64 56
  %1653 = load i32, i32* %1632, align 8, !tbaa !61
  %add.i.i1770 = add i32 %1653, 1
  %conv4.i.i1771 = zext i32 %add.i.i1770 to i64
  %1654 = bitcast float* %ref.tmp5.i.i1754 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1654) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i1754, align 4, !tbaa !50
  %_M_finish.i.i6.i.i1772 = getelementptr inbounds i8, i8* %call1232, i64 64
  %1655 = bitcast i8* %_M_finish.i.i6.i.i1772 to float**
  %1656 = bitcast i8* %_M_finish.i.i6.i.i1772 to i64*
  %1657 = load i64, i64* %1656, align 8, !tbaa !73
  %1658 = bitcast i8* %m_pfOrderWeights.i.i1769 to i64*
  %1659 = load i64, i64* %1658, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i.i1773 = sub i64 %1657, %1659
  %sub.ptr.div.i.i8.i.i1774 = ashr exact i64 %sub.ptr.sub.i.i7.i.i1773, 2
  %cmp.i9.i.i1775 = icmp ult i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  %1660 = inttoptr i64 %1659 to float*
  br i1 %cmp.i9.i.i1775, label %if.then.i11.i.i1778, label %if.else.i13.i.i1780

if.then.i11.i.i1778:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %1661 = bitcast i8* %m_pfOrderWeights.i.i1769 to %"class.std::vector.0"*
  %1662 = inttoptr i64 %1657 to float*
  %sub.i10.i.i1777 = sub nsw i64 %conv4.i.i1771, %sub.ptr.div.i.i8.i.i1774
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1661, float* %1662, i64 %sub.i10.i.i1777, float* nonnull dereferenceable(4) %ref.tmp5.i.i1754)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.else.i13.i.i1780:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %cmp6.i12.i.i1779 = icmp ugt i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  br i1 %cmp6.i12.i.i1779, label %if.then7.i15.i.i1782, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.then7.i15.i.i1782:                             ; preds = %if.else.i13.i.i1780
  %add.ptr.i14.i.i1781 = getelementptr inbounds float, float* %1660, i64 %conv4.i.i1771
  store float* %add.ptr.i14.i.i1781, float** %1655, align 8, !tbaa !73
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783:    ; preds = %if.then7.i15.i.i1782, %if.else.i13.i.i1780, %if.then.i11.i.i1778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1654) #24
  %1663 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1664 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1663, align 8, !tbaa !259
  %1665 = bitcast %class.CAmbisonicSource* %1664 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1261 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1665, align 8, !tbaa !40
  %vfn1262 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1261, i64 5
  %1666 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1262, align 8
  tail call void %1666(%class.CAmbisonicSource* %1664, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.epilog:                                        ; preds = %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783, %for.body1208, %sw.bb1181, %for.body1151, %for.end1143, %sw.bb751, %for.body721, %for.end713, %for.body631, %for.body579, %for.body527, %for.body475, %for.body423, %for.body374, %sw.bb252, %sw.bb170, %sw.bb103, %sw.bb52, %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit, %for.body.for.body_crit_edge, %for.body.lr.ph, %arrayctor.cont, %arrayctor.cont.thread
  %m_nSpeakers1263 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %1667 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !262
  %conv1264 = uitofp i32 %1667 to float
  %call1265 = tail call float @sqrtf(float %conv1264) #24
  %div1266 = fdiv float 1.000000e+00, %call1265
  %1668 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !262
  %cmp12691667 = icmp eq i32 %1668, 0
  br i1 %cmp12691667, label %for.end1278, label %for.body1270

for.body1270:                                     ; preds = %for.body1270, %sw.epilog
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1270 ], [ 0, %sw.epilog ]
  %1669 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %1670 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1669, i64 %indvars.iv, i32 0
  %1671 = bitcast %class.CAmbisonicSource* %1670 to void (%class.CAmbisonicSource*, float)***
  %vtable1274 = load void (%class.CAmbisonicSource*, float)**, void (%class.CAmbisonicSource*, float)*** %1671, align 8, !tbaa !40
  %vfn1275 = getelementptr inbounds void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vtable1274, i64 12
  %1672 = load void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vfn1275, align 8
  tail call void %1672(%class.CAmbisonicSource* %1670, float %div1266)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1673 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !262
  %1674 = zext i32 %1673 to i64
  %cmp1269 = icmp ult i64 %indvars.iv.next, %1674
  br i1 %cmp1269, label %for.body1270, label %for.end1278

for.end1278:                                      ; preds = %for.body1270, %sw.epilog
  ret void
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder5ResetEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv, i32 0
  %3 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*)***
  %vtable = load void (%class.CAmbisonicSource*)**, void (%class.CAmbisonicSource*)*** %3, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vtable, i64 3
  %4 = load void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicSource* %2)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %6 = zext i32 %5 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to void (%class.CAmbisonicSpeaker*)***
  %vtable = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable, i64 4
  %3 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSpeaker* %arrayidx)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %5 = zext i32 %4 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf(%class.CAmbisonicDecoder* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float** nocapture readonly %ppfDst) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %cmp9 = icmp eq i32 %0, 0
  br i1 %cmp9, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %conv.i = zext i32 %nSamples to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %cmp1154.i = icmp eq i32 %nSamples, 0
  br i1 %cmp1154.i, label %for.body.us, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %1 = add i32 %nSamples, -1
  %2 = zext i32 %1 to i64
  %3 = add nuw nsw i64 %2, 1
  %4 = zext i32 %1 to i64
  %5 = add nuw nsw i64 %4, 1
  %6 = zext i32 %1 to i64
  %7 = add nuw nsw i64 %6, 1
  %8 = add i32 %nSamples, -1
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %7, 8589934584
  %12 = add nsw i64 %11, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %min.iters.check37 = icmp ult i64 %7, 8
  %n.vec50 = and i64 %7, 8589934584
  %ind.end54 = trunc i64 %n.vec50 to i32
  %xtraiter = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  %unroll_iter = sub nuw nsw i64 %14, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n59 = icmp eq i64 %7, %n.vec50
  %min.iters.check = icmp ult i64 %3, 8
  %n.vec = and i64 %3, 8589934584
  %ind.end = trunc i64 %n.vec to i32
  %xtraiter80 = and i64 %14, 1
  %16 = icmp eq i64 %12, 0
  %unroll_iter82 = sub nuw nsw i64 %14, %xtraiter80
  %lcmp.mod81 = icmp eq i64 %xtraiter80, 0
  %cmp.n = icmp eq i64 %3, %n.vec
  br label %for.body

for.body.us:                                      ; preds = %for.body.us, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.us ], [ 0, %for.body.lr.ph ]
  %arrayidx3.us = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv
  %17 = bitcast float** %arrayidx3.us to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !43
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 %mul.i, i1 false) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %19 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %20 = zext i32 %19 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %20
  br i1 %cmp.us, label %for.body.us, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.us, %entry
  ret void

for.body:                                         ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.preheader
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit ], [ 0, %for.body.preheader ]
  %21 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %arrayidx3 = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv12
  %22 = load float*, float** %arrayidx3, align 8, !tbaa !43
  %23 = bitcast float* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %mul.i, i1 false) #24
  %24 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 0, i32 4
  %25 = load i32, i32* %24, align 8, !tbaa !65
  %cmp62.i = icmp eq i32 %25, 0
  br i1 %cmp62.i, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.body
  %26 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 0, i32 2
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 1, i32 0, i32 0, i32 0
  %scevgep = getelementptr float, float* %22, i64 %5
  %scevgep39 = getelementptr float, float* %22, i64 %10
  %ind.end56 = getelementptr float, float* %22, i64 %n.vec50
  %ind.end20 = getelementptr float, float* %22, i64 %n.vec
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %if.end.us.i, %for.body.lr.ph.i
  %27 = phi i32 [ %127, %if.end.us.i ], [ %25, %for.body.lr.ph.i ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end.us.i ], [ 0, %for.body.lr.ph.i ]
  %28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %28, i64 %indvars.iv.i
  %29 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !43
  %30 = load i8, i8* %26, align 4, !tbaa !64, !range !67
  %tobool.us.i = icmp eq i8 %30, 0
  %31 = load float*, float** %_M_start.i.i, align 8, !tbaa !76
  %add.ptr.i.us.i = getelementptr inbounds float, float* %31, i64 %indvars.iv.i
  %32 = load float, float* %add.ptr.i.us.i, align 4, !tbaa !50
  br i1 %tobool.us.i, label %for.body23.us.preheader.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %for.body.us.i
  %conv5.us.i = fpext float %32 to double
  %33 = trunc i64 %indvars.iv.i to i32
  %conv.i.us.i = uitofp i32 %33 to double
  %call.i.us.i = tail call double @sqrt(double %conv.i.us.i) #24
  %34 = tail call double @llvm.floor.f64(double %call.i.us.i) #24
  %mul7.us.i = fmul double %34, 2.000000e+00
  %add.us.i = fadd double %mul7.us.i, 1.000000e+00
  %mul8.us.i = fmul double %add.us.i, %conv5.us.i
  %conv9.us.i = fptrunc double %mul8.us.i to float
  br i1 %min.iters.check37, label %for.body12.us.i.preheader, label %vector.memcheck47

vector.memcheck47:                                ; preds = %if.then.us.i
  %scevgep41 = getelementptr float, float* %29, i64 %10
  %bound043 = icmp ult float* %22, %scevgep41
  %bound144 = icmp ult float* %29, %scevgep39
  %found.conflict45 = and i1 %bound043, %bound144
  br i1 %found.conflict45, label %for.body12.us.i.preheader, label %vector.ph48

vector.ph48:                                      ; preds = %vector.memcheck47
  %ind.end58 = getelementptr float, float* %29, i64 %n.vec50
  %broadcast.splatinsert71 = insertelement <4 x float> undef, float %conv9.us.i, i32 0
  %broadcast.splat72 = shufflevector <4 x float> %broadcast.splatinsert71, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert73 = insertelement <4 x float> undef, float %conv9.us.i, i32 0
  %broadcast.splat74 = shufflevector <4 x float> %broadcast.splatinsert73, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %15, label %middle.block35.unr-lcssa, label %vector.body34

vector.body34:                                    ; preds = %vector.body34, %vector.ph48
  %index51 = phi i64 [ %index.next52.1, %vector.body34 ], [ 0, %vector.ph48 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body34 ], [ %unroll_iter, %vector.ph48 ]
  %next.gep65 = getelementptr float, float* %22, i64 %index51
  %next.gep67 = getelementptr float, float* %29, i64 %index51
  %35 = bitcast float* %next.gep67 to <4 x float>*
  %wide.load69 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !263
  %36 = getelementptr float, float* %next.gep67, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load70 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !263
  %38 = fmul <4 x float> %wide.load69, %broadcast.splat72
  %39 = fmul <4 x float> %wide.load70, %broadcast.splat74
  %40 = bitcast float* %next.gep65 to <4 x float>*
  %wide.load75 = load <4 x float>, <4 x float>* %40, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %41 = getelementptr float, float* %next.gep65, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load76 = load <4 x float>, <4 x float>* %42, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %43 = fadd <4 x float> %wide.load75, %38
  %44 = fadd <4 x float> %wide.load76, %39
  %45 = bitcast float* %next.gep65 to <4 x float>*
  store <4 x float> %43, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %46 = bitcast float* %41 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %index.next52 = or i64 %index51, 8
  %next.gep65.1 = getelementptr float, float* %22, i64 %index.next52
  %next.gep67.1 = getelementptr float, float* %29, i64 %index.next52
  %47 = bitcast float* %next.gep67.1 to <4 x float>*
  %wide.load69.1 = load <4 x float>, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !263
  %48 = getelementptr float, float* %next.gep67.1, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load70.1 = load <4 x float>, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !263
  %50 = fmul <4 x float> %wide.load69.1, %broadcast.splat72
  %51 = fmul <4 x float> %wide.load70.1, %broadcast.splat74
  %52 = bitcast float* %next.gep65.1 to <4 x float>*
  %wide.load75.1 = load <4 x float>, <4 x float>* %52, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %53 = getelementptr float, float* %next.gep65.1, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load76.1 = load <4 x float>, <4 x float>* %54, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %55 = fadd <4 x float> %wide.load75.1, %50
  %56 = fadd <4 x float> %wide.load76.1, %51
  %57 = bitcast float* %next.gep65.1 to <4 x float>*
  store <4 x float> %55, <4 x float>* %57, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %58 = bitcast float* %53 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %index.next52.1 = add i64 %index51, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block35.unr-lcssa, label %vector.body34, !llvm.loop !268

middle.block35.unr-lcssa:                         ; preds = %vector.body34, %vector.ph48
  %index51.unr = phi i64 [ 0, %vector.ph48 ], [ %index.next52.1, %vector.body34 ]
  br i1 %lcmp.mod, label %middle.block35, label %vector.body34.epil

vector.body34.epil:                               ; preds = %middle.block35.unr-lcssa
  %next.gep65.epil = getelementptr float, float* %22, i64 %index51.unr
  %next.gep67.epil = getelementptr float, float* %29, i64 %index51.unr
  %59 = bitcast float* %next.gep67.epil to <4 x float>*
  %wide.load69.epil = load <4 x float>, <4 x float>* %59, align 4, !tbaa !50, !alias.scope !263
  %60 = getelementptr float, float* %next.gep67.epil, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load70.epil = load <4 x float>, <4 x float>* %61, align 4, !tbaa !50, !alias.scope !263
  %62 = fmul <4 x float> %wide.load69.epil, %broadcast.splat72
  %63 = fmul <4 x float> %wide.load70.epil, %broadcast.splat74
  %64 = bitcast float* %next.gep65.epil to <4 x float>*
  %wide.load75.epil = load <4 x float>, <4 x float>* %64, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %65 = getelementptr float, float* %next.gep65.epil, i64 4
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load76.epil = load <4 x float>, <4 x float>* %66, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %67 = fadd <4 x float> %wide.load75.epil, %62
  %68 = fadd <4 x float> %wide.load76.epil, %63
  %69 = bitcast float* %next.gep65.epil to <4 x float>*
  store <4 x float> %67, <4 x float>* %69, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  %70 = bitcast float* %65 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !50, !alias.scope !266, !noalias !263
  br label %middle.block35

middle.block35:                                   ; preds = %vector.body34.epil, %middle.block35.unr-lcssa
  br i1 %cmp.n59, label %if.end.us.loopexit111.i, label %for.body12.us.i.preheader

for.body12.us.i.preheader:                        ; preds = %middle.block35, %vector.memcheck47, %if.then.us.i
  %niSample.057.us.i.ph = phi i32 [ 0, %vector.memcheck47 ], [ 0, %if.then.us.i ], [ %ind.end54, %middle.block35 ]
  %out.056.us.i.ph = phi float* [ %22, %vector.memcheck47 ], [ %22, %if.then.us.i ], [ %ind.end56, %middle.block35 ]
  %in.055.us.i.ph = phi float* [ %29, %vector.memcheck47 ], [ %29, %if.then.us.i ], [ %ind.end58, %middle.block35 ]
  %71 = sub i32 %nSamples, %niSample.057.us.i.ph
  %72 = xor i32 %niSample.057.us.i.ph, -1
  %73 = add i32 %72, %nSamples
  %xtraiter78 = and i32 %71, 3
  %lcmp.mod79 = icmp eq i32 %xtraiter78, 0
  br i1 %lcmp.mod79, label %for.body12.us.i.prol.loopexit, label %for.body12.us.i.prol

for.body12.us.i.prol:                             ; preds = %for.body12.us.i.prol, %for.body12.us.i.preheader
  %niSample.057.us.i.prol = phi i32 [ %inc.us.i.prol, %for.body12.us.i.prol ], [ %niSample.057.us.i.ph, %for.body12.us.i.preheader ]
  %out.056.us.i.prol = phi float* [ %incdec.ptr14.us.i.prol, %for.body12.us.i.prol ], [ %out.056.us.i.ph, %for.body12.us.i.preheader ]
  %in.055.us.i.prol = phi float* [ %incdec.ptr.us.i.prol, %for.body12.us.i.prol ], [ %in.055.us.i.ph, %for.body12.us.i.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body12.us.i.prol ], [ %xtraiter78, %for.body12.us.i.preheader ]
  %incdec.ptr.us.i.prol = getelementptr inbounds float, float* %in.055.us.i.prol, i64 1
  %74 = load float, float* %in.055.us.i.prol, align 4, !tbaa !50
  %mul13.us.i.prol = fmul float %74, %conv9.us.i
  %incdec.ptr14.us.i.prol = getelementptr inbounds float, float* %out.056.us.i.prol, i64 1
  %75 = load float, float* %out.056.us.i.prol, align 4, !tbaa !50
  %add15.us.i.prol = fadd float %75, %mul13.us.i.prol
  store float %add15.us.i.prol, float* %out.056.us.i.prol, align 4, !tbaa !50
  %inc.us.i.prol = add nuw i32 %niSample.057.us.i.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body12.us.i.prol.loopexit, label %for.body12.us.i.prol, !llvm.loop !269

for.body12.us.i.prol.loopexit:                    ; preds = %for.body12.us.i.prol, %for.body12.us.i.preheader
  %niSample.057.us.i.unr = phi i32 [ %niSample.057.us.i.ph, %for.body12.us.i.preheader ], [ %inc.us.i.prol, %for.body12.us.i.prol ]
  %out.056.us.i.unr = phi float* [ %out.056.us.i.ph, %for.body12.us.i.preheader ], [ %incdec.ptr14.us.i.prol, %for.body12.us.i.prol ]
  %in.055.us.i.unr = phi float* [ %in.055.us.i.ph, %for.body12.us.i.preheader ], [ %incdec.ptr.us.i.prol, %for.body12.us.i.prol ]
  %76 = icmp ult i32 %73, 3
  br i1 %76, label %if.end.us.loopexit111.i, label %for.body12.us.i

for.body12.us.i:                                  ; preds = %for.body12.us.i, %for.body12.us.i.prol.loopexit
  %niSample.057.us.i = phi i32 [ %inc.us.i.3, %for.body12.us.i ], [ %niSample.057.us.i.unr, %for.body12.us.i.prol.loopexit ]
  %out.056.us.i = phi float* [ %incdec.ptr14.us.i.3, %for.body12.us.i ], [ %out.056.us.i.unr, %for.body12.us.i.prol.loopexit ]
  %in.055.us.i = phi float* [ %incdec.ptr.us.i.3, %for.body12.us.i ], [ %in.055.us.i.unr, %for.body12.us.i.prol.loopexit ]
  %incdec.ptr.us.i = getelementptr inbounds float, float* %in.055.us.i, i64 1
  %77 = load float, float* %in.055.us.i, align 4, !tbaa !50
  %mul13.us.i = fmul float %77, %conv9.us.i
  %incdec.ptr14.us.i = getelementptr inbounds float, float* %out.056.us.i, i64 1
  %78 = load float, float* %out.056.us.i, align 4, !tbaa !50
  %add15.us.i = fadd float %78, %mul13.us.i
  store float %add15.us.i, float* %out.056.us.i, align 4, !tbaa !50
  %incdec.ptr.us.i.1 = getelementptr inbounds float, float* %in.055.us.i, i64 2
  %79 = load float, float* %incdec.ptr.us.i, align 4, !tbaa !50
  %mul13.us.i.1 = fmul float %79, %conv9.us.i
  %incdec.ptr14.us.i.1 = getelementptr inbounds float, float* %out.056.us.i, i64 2
  %80 = load float, float* %incdec.ptr14.us.i, align 4, !tbaa !50
  %add15.us.i.1 = fadd float %80, %mul13.us.i.1
  store float %add15.us.i.1, float* %incdec.ptr14.us.i, align 4, !tbaa !50
  %incdec.ptr.us.i.2 = getelementptr inbounds float, float* %in.055.us.i, i64 3
  %81 = load float, float* %incdec.ptr.us.i.1, align 4, !tbaa !50
  %mul13.us.i.2 = fmul float %81, %conv9.us.i
  %incdec.ptr14.us.i.2 = getelementptr inbounds float, float* %out.056.us.i, i64 3
  %82 = load float, float* %incdec.ptr14.us.i.1, align 4, !tbaa !50
  %add15.us.i.2 = fadd float %82, %mul13.us.i.2
  store float %add15.us.i.2, float* %incdec.ptr14.us.i.1, align 4, !tbaa !50
  %incdec.ptr.us.i.3 = getelementptr inbounds float, float* %in.055.us.i, i64 4
  %83 = load float, float* %incdec.ptr.us.i.2, align 4, !tbaa !50
  %mul13.us.i.3 = fmul float %83, %conv9.us.i
  %incdec.ptr14.us.i.3 = getelementptr inbounds float, float* %out.056.us.i, i64 4
  %84 = load float, float* %incdec.ptr14.us.i.2, align 4, !tbaa !50
  %add15.us.i.3 = fadd float %84, %mul13.us.i.3
  store float %add15.us.i.3, float* %incdec.ptr14.us.i.2, align 4, !tbaa !50
  %inc.us.i.3 = add nuw i32 %niSample.057.us.i, 4
  %exitcond.i.3 = icmp eq i32 %inc.us.i.3, %nSamples
  br i1 %exitcond.i.3, label %if.end.us.loopexit111.i, label %for.body12.us.i, !llvm.loop !270

for.body23.us.preheader.i:                        ; preds = %for.body.us.i
  %mul20.us.i = fmul float %32, 2.000000e+00
  br i1 %min.iters.check, label %for.body23.us.i.preheader, label %vector.memcheck

for.body23.us.i.preheader:                        ; preds = %middle.block, %vector.memcheck, %for.body23.us.preheader.i
  %niSample.161.us.i.ph = phi i32 [ 0, %vector.memcheck ], [ 0, %for.body23.us.preheader.i ], [ %ind.end, %middle.block ]
  %out.160.us.i.ph = phi float* [ %22, %vector.memcheck ], [ %22, %for.body23.us.preheader.i ], [ %ind.end20, %middle.block ]
  %in.159.us.i.ph = phi float* [ %29, %vector.memcheck ], [ %29, %for.body23.us.preheader.i ], [ %ind.end22, %middle.block ]
  %85 = sub i32 %nSamples, %niSample.161.us.i.ph
  %86 = xor i32 %niSample.161.us.i.ph, -1
  %87 = add i32 %86, %nSamples
  %xtraiter84 = and i32 %85, 3
  %lcmp.mod85 = icmp eq i32 %xtraiter84, 0
  br i1 %lcmp.mod85, label %for.body23.us.i.prol.loopexit, label %for.body23.us.i.prol

for.body23.us.i.prol:                             ; preds = %for.body23.us.i.prol, %for.body23.us.i.preheader
  %niSample.161.us.i.prol = phi i32 [ %inc29.us.i.prol, %for.body23.us.i.prol ], [ %niSample.161.us.i.ph, %for.body23.us.i.preheader ]
  %out.160.us.i.prol = phi float* [ %incdec.ptr26.us.i.prol, %for.body23.us.i.prol ], [ %out.160.us.i.ph, %for.body23.us.i.preheader ]
  %in.159.us.i.prol = phi float* [ %incdec.ptr24.us.i.prol, %for.body23.us.i.prol ], [ %in.159.us.i.ph, %for.body23.us.i.preheader ]
  %prol.iter86 = phi i32 [ %prol.iter86.sub, %for.body23.us.i.prol ], [ %xtraiter84, %for.body23.us.i.preheader ]
  %incdec.ptr24.us.i.prol = getelementptr inbounds float, float* %in.159.us.i.prol, i64 1
  %88 = load float, float* %in.159.us.i.prol, align 4, !tbaa !50
  %mul25.us.i.prol = fmul float %mul20.us.i, %88
  %incdec.ptr26.us.i.prol = getelementptr inbounds float, float* %out.160.us.i.prol, i64 1
  %89 = load float, float* %out.160.us.i.prol, align 4, !tbaa !50
  %add27.us.i.prol = fadd float %89, %mul25.us.i.prol
  store float %add27.us.i.prol, float* %out.160.us.i.prol, align 4, !tbaa !50
  %inc29.us.i.prol = add nuw i32 %niSample.161.us.i.prol, 1
  %prol.iter86.sub = add i32 %prol.iter86, -1
  %prol.iter86.cmp = icmp eq i32 %prol.iter86.sub, 0
  br i1 %prol.iter86.cmp, label %for.body23.us.i.prol.loopexit, label %for.body23.us.i.prol, !llvm.loop !271

for.body23.us.i.prol.loopexit:                    ; preds = %for.body23.us.i.prol, %for.body23.us.i.preheader
  %niSample.161.us.i.unr = phi i32 [ %niSample.161.us.i.ph, %for.body23.us.i.preheader ], [ %inc29.us.i.prol, %for.body23.us.i.prol ]
  %out.160.us.i.unr = phi float* [ %out.160.us.i.ph, %for.body23.us.i.preheader ], [ %incdec.ptr26.us.i.prol, %for.body23.us.i.prol ]
  %in.159.us.i.unr = phi float* [ %in.159.us.i.ph, %for.body23.us.i.preheader ], [ %incdec.ptr24.us.i.prol, %for.body23.us.i.prol ]
  %90 = icmp ult i32 %87, 3
  br i1 %90, label %if.end.us.i, label %for.body23.us.i

vector.memcheck:                                  ; preds = %for.body23.us.preheader.i
  %scevgep17 = getelementptr float, float* %29, i64 %5
  %bound0 = icmp ult float* %22, %scevgep17
  %bound1 = icmp ult float* %29, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body23.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %ind.end22 = getelementptr float, float* %29, i64 %n.vec
  %broadcast.splatinsert28 = insertelement <4 x float> undef, float %mul20.us.i, i32 0
  %broadcast.splat29 = shufflevector <4 x float> %broadcast.splatinsert28, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <4 x float> undef, float %mul20.us.i, i32 0
  %broadcast.splat31 = shufflevector <4 x float> %broadcast.splatinsert30, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %16, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter83 = phi i64 [ %niter83.nsub.1, %vector.body ], [ %unroll_iter82, %vector.ph ]
  %next.gep = getelementptr float, float* %22, i64 %index
  %next.gep25 = getelementptr float, float* %29, i64 %index
  %91 = bitcast float* %next.gep25 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %91, align 4, !tbaa !50, !alias.scope !272
  %92 = getelementptr float, float* %next.gep25, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load27 = load <4 x float>, <4 x float>* %93, align 4, !tbaa !50, !alias.scope !272
  %94 = fmul <4 x float> %broadcast.splat29, %wide.load
  %95 = fmul <4 x float> %broadcast.splat31, %wide.load27
  %96 = bitcast float* %next.gep to <4 x float>*
  %wide.load32 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %97 = getelementptr float, float* %next.gep, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load33 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %99 = fadd <4 x float> %wide.load32, %94
  %100 = fadd <4 x float> %wide.load33, %95
  %101 = bitcast float* %next.gep to <4 x float>*
  store <4 x float> %99, <4 x float>* %101, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %102 = bitcast float* %97 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %22, i64 %index.next
  %next.gep25.1 = getelementptr float, float* %29, i64 %index.next
  %103 = bitcast float* %next.gep25.1 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %103, align 4, !tbaa !50, !alias.scope !272
  %104 = getelementptr float, float* %next.gep25.1, i64 4
  %105 = bitcast float* %104 to <4 x float>*
  %wide.load27.1 = load <4 x float>, <4 x float>* %105, align 4, !tbaa !50, !alias.scope !272
  %106 = fmul <4 x float> %broadcast.splat29, %wide.load.1
  %107 = fmul <4 x float> %broadcast.splat31, %wide.load27.1
  %108 = bitcast float* %next.gep.1 to <4 x float>*
  %wide.load32.1 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %109 = getelementptr float, float* %next.gep.1, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load33.1 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %111 = fadd <4 x float> %wide.load32.1, %106
  %112 = fadd <4 x float> %wide.load33.1, %107
  %113 = bitcast float* %next.gep.1 to <4 x float>*
  store <4 x float> %111, <4 x float>* %113, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %114 = bitcast float* %109 to <4 x float>*
  store <4 x float> %112, <4 x float>* %114, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %index.next.1 = add i64 %index, 16
  %niter83.nsub.1 = add i64 %niter83, -2
  %niter83.ncmp.1 = icmp eq i64 %niter83.nsub.1, 0
  br i1 %niter83.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !277

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod81, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %next.gep.epil = getelementptr float, float* %22, i64 %index.unr
  %next.gep25.epil = getelementptr float, float* %29, i64 %index.unr
  %115 = bitcast float* %next.gep25.epil to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %115, align 4, !tbaa !50, !alias.scope !272
  %116 = getelementptr float, float* %next.gep25.epil, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  %wide.load27.epil = load <4 x float>, <4 x float>* %117, align 4, !tbaa !50, !alias.scope !272
  %118 = fmul <4 x float> %broadcast.splat29, %wide.load.epil
  %119 = fmul <4 x float> %broadcast.splat31, %wide.load27.epil
  %120 = bitcast float* %next.gep.epil to <4 x float>*
  %wide.load32.epil = load <4 x float>, <4 x float>* %120, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %121 = getelementptr float, float* %next.gep.epil, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load33.epil = load <4 x float>, <4 x float>* %122, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %123 = fadd <4 x float> %wide.load32.epil, %118
  %124 = fadd <4 x float> %wide.load33.epil, %119
  %125 = bitcast float* %next.gep.epil to <4 x float>*
  store <4 x float> %123, <4 x float>* %125, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  %126 = bitcast float* %121 to <4 x float>*
  store <4 x float> %124, <4 x float>* %126, align 4, !tbaa !50, !alias.scope !275, !noalias !272
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %if.end.us.i, label %for.body23.us.i.preheader

if.end.us.loopexit111.i:                          ; preds = %for.body12.us.i, %for.body12.us.i.prol.loopexit, %middle.block35
  %.pre.i = load i32, i32* %24, align 8, !tbaa !65
  br label %if.end.us.i

if.end.us.i:                                      ; preds = %for.body23.us.i, %if.end.us.loopexit111.i, %middle.block, %for.body23.us.i.prol.loopexit
  %127 = phi i32 [ %.pre.i, %if.end.us.loopexit111.i ], [ %27, %middle.block ], [ %27, %for.body23.us.i ], [ %27, %for.body23.us.i.prol.loopexit ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %128 = zext i32 %127 to i64
  %cmp.us.i = icmp ult i64 %indvars.iv.next.i, %128
  br i1 %cmp.us.i, label %for.body.us.i, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit

for.body23.us.i:                                  ; preds = %for.body23.us.i, %for.body23.us.i.prol.loopexit
  %niSample.161.us.i = phi i32 [ %inc29.us.i.3, %for.body23.us.i ], [ %niSample.161.us.i.unr, %for.body23.us.i.prol.loopexit ]
  %out.160.us.i = phi float* [ %incdec.ptr26.us.i.3, %for.body23.us.i ], [ %out.160.us.i.unr, %for.body23.us.i.prol.loopexit ]
  %in.159.us.i = phi float* [ %incdec.ptr24.us.i.3, %for.body23.us.i ], [ %in.159.us.i.unr, %for.body23.us.i.prol.loopexit ]
  %incdec.ptr24.us.i = getelementptr inbounds float, float* %in.159.us.i, i64 1
  %129 = load float, float* %in.159.us.i, align 4, !tbaa !50
  %mul25.us.i = fmul float %mul20.us.i, %129
  %incdec.ptr26.us.i = getelementptr inbounds float, float* %out.160.us.i, i64 1
  %130 = load float, float* %out.160.us.i, align 4, !tbaa !50
  %add27.us.i = fadd float %130, %mul25.us.i
  store float %add27.us.i, float* %out.160.us.i, align 4, !tbaa !50
  %incdec.ptr24.us.i.1 = getelementptr inbounds float, float* %in.159.us.i, i64 2
  %131 = load float, float* %incdec.ptr24.us.i, align 4, !tbaa !50
  %mul25.us.i.1 = fmul float %mul20.us.i, %131
  %incdec.ptr26.us.i.1 = getelementptr inbounds float, float* %out.160.us.i, i64 2
  %132 = load float, float* %incdec.ptr26.us.i, align 4, !tbaa !50
  %add27.us.i.1 = fadd float %132, %mul25.us.i.1
  store float %add27.us.i.1, float* %incdec.ptr26.us.i, align 4, !tbaa !50
  %incdec.ptr24.us.i.2 = getelementptr inbounds float, float* %in.159.us.i, i64 3
  %133 = load float, float* %incdec.ptr24.us.i.1, align 4, !tbaa !50
  %mul25.us.i.2 = fmul float %mul20.us.i, %133
  %incdec.ptr26.us.i.2 = getelementptr inbounds float, float* %out.160.us.i, i64 3
  %134 = load float, float* %incdec.ptr26.us.i.1, align 4, !tbaa !50
  %add27.us.i.2 = fadd float %134, %mul25.us.i.2
  store float %add27.us.i.2, float* %incdec.ptr26.us.i.1, align 4, !tbaa !50
  %incdec.ptr24.us.i.3 = getelementptr inbounds float, float* %in.159.us.i, i64 4
  %135 = load float, float* %incdec.ptr24.us.i.2, align 4, !tbaa !50
  %mul25.us.i.3 = fmul float %mul20.us.i, %135
  %incdec.ptr26.us.i.3 = getelementptr inbounds float, float* %out.160.us.i, i64 4
  %136 = load float, float* %incdec.ptr26.us.i.2, align 4, !tbaa !50
  %add27.us.i.3 = fadd float %136, %mul25.us.i.3
  store float %add27.us.i.3, float* %incdec.ptr26.us.i.2, align 4, !tbaa !50
  %inc29.us.i.3 = add nuw i32 %niSample.161.us.i, 4
  %exitcond113.i.3 = icmp eq i32 %inc29.us.i.3, %nSamples
  br i1 %exitcond113.i.3, label %if.end.us.i, label %for.body23.us.i, !llvm.loop !278

_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit: ; preds = %if.end.us.i, %for.body
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %137 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  %138 = zext i32 %137 to i64
  %cmp = icmp ult i64 %indvars.iv.next13, %138
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerSetUpEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !261
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !262
  ret i32 %0
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) local_unnamed_addr #16 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %3 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, <2 x float> %polPosition.coerce0, float %polPosition.coerce1)
  ret void
}

; Function Attrs: uwtable
define { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable, i64 6
  %3 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn, align 8
  %call = tail call { <2 x float>, float } %3(%class.CAmbisonicSource* %1)
  ret { <2 x float>, float } %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetOrderWeightEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder, float %fWeight) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 7
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nOrder, float %fWeight)
  ret void
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetOrderWeightEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 10
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nOrder)
  ret float %call
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel) unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 11
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nChannel)
  ret float %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetCoefficientEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel, float %fCoeff) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !259
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 9
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nChannel, float %fCoeff)
  ret void
}

declare float @_Z16DegreesToRadiansf(float) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicZoomerC2Ev(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !61
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !64
  %8 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !65
  %9 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !61
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !64
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !65
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1
  %3 = load i32, i32* %0, align 8, !tbaa !61
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %3, i32* %4, align 8, !tbaa !61
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 1, i8* %5, align 4, !tbaa !64
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %3, i1 zeroext true)
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i, i32* %6, align 8, !tbaa !65
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront, i32 0, i32 1)
  %7 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoderFront to void (%class.CAmbisonicDecoder*)***
  %vtable.i = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %7, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i, i64 4
  %8 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %8(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 2
  %9 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !262
  %cmp5.i = icmp eq i32 %9, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %10 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %10, i64 %indvars.iv.i
  %11 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i83 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %11, align 8, !tbaa !40
  %vfn.i84 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i83, i64 4
  %12 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i84, align 8
  tail call void %12(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %13 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !262
  %14 = zext i32 %13 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %14
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %entry
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float 0.000000e+00, float* %m_fZoomRed, align 4, !tbaa !279
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2
  %15 = load i32, i32* %2, align 8, !tbaa !65
  %conv = zext i32 %15 to i64
  %16 = shl nuw nsw i64 %conv, 2
  %call6 = tail call i8* @_Znam(i64 %16) #26
  %17 = ptrtoint i8* %call6 to i64
  %18 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront to i64*
  %19 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8, !tbaa !43
  store i64 %17, i64* %18, align 8, !tbaa !43
  %cmp.i85 = icmp eq float* %20, null
  br i1 %cmp.i85, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i: ; preds = %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %21 = bitcast float* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #27
  %.pre = load i32, i32* %2, align 8, !tbaa !65
  %.pre154 = zext i32 %.pre to i64
  %.pre155 = shl nuw nsw i64 %.pre154, 2
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i, %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %.pre-phi = phi i64 [ %16, %_ZN17CAmbisonicDecoder7RefreshEv.exit ], [ %.pre155, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i ]
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3
  %call9 = tail call i8* @_Znam(i64 %.pre-phi) #26
  %22 = ptrtoint i8* %call9 to i64
  %23 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted to i64*
  %24 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load float*, float** %24, align 8, !tbaa !43
  store i64 %22, i64* %23, align 8, !tbaa !43
  %cmp.i86 = icmp eq float* %25, null
  br i1 %cmp.i86, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit
  %26 = bitcast float* %25 to i8*
  tail call void @_ZdaPv(i8* %26) #27
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4
  %27 = load i32, i32* %0, align 8, !tbaa !61
  %add = add i32 %27, 1
  %conv11 = zext i32 %add to i64
  %28 = shl nuw nsw i64 %conv11, 2
  %call12 = tail call i8* @_Znam(i64 %28) #26
  %29 = ptrtoint i8* %call12 to i64
  %30 = bitcast %"class.std::unique_ptr.12"* %a_m to i64*
  %31 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %a_m, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8, !tbaa !43
  store i64 %29, i64* %30, align 8, !tbaa !43
  %cmp.i89 = icmp eq float* %32, null
  br i1 %cmp.i89, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88
  %33 = bitcast float* %32 to i8*
  tail call void @_ZdaPv(i8* %33) #27
  %.pre153 = load i32, i32* %0, align 8, !tbaa !61
  %.pre156 = add i32 %.pre153, 1
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88
  %add14147.pre-phi = phi i32 [ %add, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88 ], [ %.pre156, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90 ]
  %34 = phi i32 [ %27, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88 ], [ %.pre153, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90 ]
  %cmp148 = icmp eq i32 %add14147.pre-phi, 0
  br i1 %cmp148, label %for.cond34.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91
  %35 = load float*, float** %31, align 8, !tbaa !43
  %36 = zext i32 %add14147.pre-phi to i64
  %cmp7.i = icmp eq i32 %34, 0
  br label %for.body

for.cond34.preheader:                             ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit136, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91
  %37 = load i32, i32* %2, align 8, !tbaa !65
  %cmp36145 = icmp eq i32 %37, 0
  br i1 %cmp36145, label %cleanup, label %for.body38.lr.ph

for.body38.lr.ph:                                 ; preds = %for.cond34.preheader
  %m_pAmbSpeakers.i139 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br label %for.body38

for.body:                                         ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit136, %for.body.lr.ph
  %indvars.iv151 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next152, %_ZN16CAmbisonicZoomer9factorialEj.exit136 ]
  %38 = trunc i64 %indvars.iv151 to i32
  %mul = shl i32 %38, 1
  %add15 = or i32 %mul, 1
  %conv16 = uitofp i32 %add15 to float
  br i1 %cmp7.i, label %for.body.i103.preheader, label %for.body.i93

for.cond.cleanup.loopexit.i:                      ; preds = %for.body.i93
  %phitmp.i = uitofp i32 %mul.i to float
  br label %for.body.i103.preheader

for.body.i93:                                     ; preds = %for.body.i93, %for.body
  %i.09.i = phi i32 [ %inc.i, %for.body.i93 ], [ 1, %for.body ]
  %ret.08.i = phi i32 [ %mul.i, %for.body.i93 ], [ 1, %for.body ]
  %mul.i = mul i32 %ret.08.i, %i.09.i
  %inc.i = add i32 %i.09.i, 1
  %cmp.i92 = icmp ugt i32 %inc.i, %34
  br i1 %cmp.i92, label %for.cond.cleanup.loopexit.i, label %for.body.i93

for.body.i103.preheader:                          ; preds = %for.cond.cleanup.loopexit.i, %for.body
  %ret.0.lcssa.i = phi float [ 1.000000e+00, %for.body ], [ %phitmp.i, %for.cond.cleanup.loopexit.i ]
  %mul19 = fmul float %ret.0.lcssa.i, %conv16
  br label %for.body.i103

for.body.i103:                                    ; preds = %for.body.i103, %for.body.i103.preheader
  %i.09.i98 = phi i32 [ %inc.i101, %for.body.i103 ], [ 1, %for.body.i103.preheader ]
  %ret.08.i99 = phi i32 [ %mul.i100, %for.body.i103 ], [ 1, %for.body.i103.preheader ]
  %mul.i100 = mul i32 %ret.08.i99, %i.09.i98
  %inc.i101 = add i32 %i.09.i98, 1
  %cmp.i102 = icmp ugt i32 %inc.i101, %add14147.pre-phi
  br i1 %cmp.i102, label %_ZN16CAmbisonicZoomer9factorialEj.exit104, label %for.body.i103

_ZN16CAmbisonicZoomer9factorialEj.exit104:        ; preds = %for.body.i103
  %phitmp.i95 = uitofp i32 %mul.i100 to float
  %mul23 = fmul float %mul19, %phitmp.i95
  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1
  %39 = trunc i64 %indvars.iv.next152 to i32
  %add26 = add i32 %34, %39
  %cmp7.i105 = icmp eq i32 %add26, 0
  br i1 %cmp7.i105, label %_ZN16CAmbisonicZoomer9factorialEj.exit115, label %for.body.i114

for.cond.cleanup.loopexit.i107:                   ; preds = %for.body.i114
  %phitmp.i106 = uitofp i32 %mul.i111 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit115

for.body.i114:                                    ; preds = %for.body.i114, %_ZN16CAmbisonicZoomer9factorialEj.exit104
  %i.09.i109 = phi i32 [ %inc.i112, %for.body.i114 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ]
  %ret.08.i110 = phi i32 [ %mul.i111, %for.body.i114 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ]
  %mul.i111 = mul i32 %ret.08.i110, %i.09.i109
  %inc.i112 = add i32 %i.09.i109, 1
  %cmp.i113 = icmp ugt i32 %inc.i112, %add26
  br i1 %cmp.i113, label %for.cond.cleanup.loopexit.i107, label %for.body.i114

_ZN16CAmbisonicZoomer9factorialEj.exit115:        ; preds = %for.cond.cleanup.loopexit.i107, %_ZN16CAmbisonicZoomer9factorialEj.exit104
  %ret.0.lcssa.i108 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ], [ %phitmp.i106, %for.cond.cleanup.loopexit.i107 ]
  %sub = sub i32 %34, %38
  %cmp7.i126 = icmp eq i32 %sub, 0
  br i1 %cmp7.i126, label %_ZN16CAmbisonicZoomer9factorialEj.exit136, label %for.body.i135

for.cond.cleanup.loopexit.i128:                   ; preds = %for.body.i135
  %phitmp.i127 = uitofp i32 %mul.i132 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit136

for.body.i135:                                    ; preds = %for.body.i135, %_ZN16CAmbisonicZoomer9factorialEj.exit115
  %i.09.i130 = phi i32 [ %inc.i133, %for.body.i135 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ]
  %ret.08.i131 = phi i32 [ %mul.i132, %for.body.i135 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ]
  %mul.i132 = mul i32 %ret.08.i131, %i.09.i130
  %inc.i133 = add i32 %i.09.i130, 1
  %cmp.i134 = icmp ugt i32 %inc.i133, %sub
  br i1 %cmp.i134, label %for.cond.cleanup.loopexit.i128, label %for.body.i135

_ZN16CAmbisonicZoomer9factorialEj.exit136:        ; preds = %for.cond.cleanup.loopexit.i128, %_ZN16CAmbisonicZoomer9factorialEj.exit115
  %ret.0.lcssa.i129 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ], [ %phitmp.i127, %for.cond.cleanup.loopexit.i128 ]
  %mul30 = fmul float %ret.0.lcssa.i108, %ret.0.lcssa.i129
  %div = fdiv float %mul23, %mul30
  %arrayidx.i144 = getelementptr inbounds float, float* %35, i64 %indvars.iv151
  store float %div, float* %arrayidx.i144, align 4, !tbaa !50
  %cmp = icmp ult i64 %indvars.iv.next152, %36
  br i1 %cmp, label %for.body, label %for.cond34.preheader

for.body38:                                       ; preds = %for.body38, %for.body38.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next, %for.body38 ]
  %40 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i139, align 8, !tbaa !259
  %41 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %40, i64 0, i32 0
  %42 = bitcast %class.CAmbisonicSpeaker* %40 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i140 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %42, align 8, !tbaa !40
  %vfn.i141 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i140, i64 11
  %43 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i141, align 8
  %44 = trunc i64 %indvars.iv to i32
  %call.i142 = tail call float %43(%class.CAmbisonicSource* %41, i32 %44)
  %45 = load float*, float** %19, align 8, !tbaa !43
  %arrayidx.i138 = getelementptr inbounds float, float* %45, i64 %indvars.iv
  store float %call.i142, float* %arrayidx.i138, align 4, !tbaa !50
  %conv.i = uitofp i32 %44 to double
  %call.i125 = tail call double @sqrt(double %conv.i) #24
  %46 = tail call double @llvm.floor.f64(double %call.i125)
  %conv45 = fptosi double %46 to i32
  %47 = load float*, float** %19, align 8, !tbaa !43
  %arrayidx.i124 = getelementptr inbounds float, float* %47, i64 %indvars.iv
  %48 = load float, float* %arrayidx.i124, align 4, !tbaa !50
  %conv50 = zext i32 %conv45 to i64
  %49 = load float*, float** %31, align 8, !tbaa !43
  %arrayidx.i122 = getelementptr inbounds float, float* %49, i64 %conv50
  %50 = load float, float* %arrayidx.i122, align 4, !tbaa !50
  %mul52 = fmul float %48, %50
  %51 = load float*, float** %24, align 8, !tbaa !43
  %arrayidx.i120 = getelementptr inbounds float, float* %51, i64 %indvars.iv
  store float %mul52, float* %arrayidx.i120, align 4, !tbaa !50
  %52 = load float, float* %arrayidx.i124, align 4, !tbaa !50
  %mul62 = fmul float %mul52, %52
  %53 = load float, float* %m_AmbFrontMic, align 8, !tbaa !284
  %add63 = fadd float %53, %mul62
  store float %add63, float* %m_AmbFrontMic, align 8, !tbaa !284
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %54 = load i32, i32* %2, align 8, !tbaa !65
  %55 = zext i32 %54 to i64
  %cmp36 = icmp ult i64 %indvars.iv.next, %55
  br i1 %cmp36, label %for.body38, label %cleanup

cleanup:                                          ; preds = %for.body38, %for.cond34.preheader
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* nocapture readnone %this, i32 %M) local_unnamed_addr #8 align 2 {
entry:
  %cmp7 = icmp eq i32 %M, 0
  br i1 %cmp7, label %for.cond.cleanup, label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %phitmp = uitofp i32 %mul to float
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %ret.0.lcssa = phi float [ 1.000000e+00, %entry ], [ %phitmp, %for.cond.cleanup.loopexit ]
  ret float %ret.0.lcssa

for.body:                                         ; preds = %for.body, %entry
  %i.09 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %ret.08 = phi i32 [ %mul, %for.body ], [ 1, %entry ]
  %mul = mul i32 %i.09, %ret.08
  %inc = add i32 %i.09, 1
  %cmp = icmp ugt i32 %inc, %M
  br i1 %cmp, label %for.cond.cleanup.loopexit, label %for.body
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicZoomer5ResetEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7RefreshEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #9 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !285
  %mul = fmul float %0, %0
  %sub = fsub float 1.000000e+00, %mul
  %call = tail call float @sqrtf(float %sub) #24
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float %call, float* %m_fZoomRed, align 4, !tbaa !279
  %1 = load float, float* %m_fZoom, align 8, !tbaa !285
  %sub4 = fsub float 1.000000e+00, %1
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  store float %sub4, float* %m_fZoomBlend, align 4, !tbaa !286
  ret void
}

; Function Attrs: nounwind uwtable writeonly
define void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* nocapture %this, float %fZoom) local_unnamed_addr #17 align 2 {
entry:
  %fZoom.addr = alloca float, align 4
  %ref.tmp = alloca float, align 4
  store float %fZoom, float* %fZoom.addr, align 4, !tbaa !50
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp, align 4, !tbaa !50
  %cmp.i = fcmp ogt float %fZoom, 0x3FEFAE1480000000
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %fZoom.addr
  %0 = bitcast float* %__b.__a.i to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !50
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %2 = bitcast float* %m_fZoom to i32*
  store i32 %1, i32* %2, align 8, !tbaa !285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicZoomer7GetZoomEv(%class.CAmbisonicZoomer* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !285
  ret float %0
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp103 = icmp eq i32 %nSamples, 0
  br i1 %cmp103, label %for.cond.cleanup, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !65
  %cmp397 = icmp eq i32 %1, 0
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br i1 %cmp397, label %for.cond2.preheader.preheader, label %for.cond2.preheader.us.preheader

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph
  %wide.trip.count120 = zext i32 %nSamples to i64
  %2 = add nsw i64 %wide.trip.count120, -1
  %xtraiter = and i64 %wide.trip.count120, 7
  %3 = icmp ult i64 %2, 7
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond2.preheader.preheader.new

for.cond2.preheader.preheader.new:                ; preds = %for.cond2.preheader.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count120, %xtraiter
  br label %for.cond.cleanup12

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i93 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112 = zext i32 %nSamples to i64
  %.pre = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95, align 8, !tbaa !43
  %4 = zext i32 %1 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93, align 8, !tbaa !43
  %6 = add nsw i64 %4, -1
  %xtraiter126 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter130 = sub nsw i64 %4, %xtraiter126
  %lcmp.mod128 = icmp eq i64 %xtraiter126, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond.cleanup12.us, %for.cond2.preheader.us.preheader
  %indvars.iv110 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next111, %for.cond.cleanup12.us ]
  br i1 %7, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.cond.cleanup12.us:                            ; preds = %for.inc52.us
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond113 = icmp eq i64 %indvars.iv.next111, %wide.trip.count112
  br i1 %exitcond113, label %for.cond.cleanup, label %for.cond2.preheader.us

for.body13.us:                                    ; preds = %for.body13.us.preheader, %for.inc52.us
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc52.us ], [ 0, %for.body13.us.preheader ]
  %arrayidx.i94.us = getelementptr inbounds float, float* %5, i64 %indvars.iv108
  %8 = load float, float* %arrayidx.i94.us, align 4, !tbaa !50
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us = fpext float %9 to double
  %cmp18.us = fcmp ogt double %conv17.us, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us, label %if.then.us, label %if.else.us

if.else.us:                                       ; preds = %for.body13.us
  %arrayidx.i86.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %10 = load float*, float** %arrayidx.i86.us, align 8, !tbaa !43
  %arrayidx45.us = getelementptr inbounds float, float* %10, i64 %indvars.iv110
  %11 = load float, float* %arrayidx45.us, align 4, !tbaa !50
  %12 = load float, float* %m_fZoomRed, align 4, !tbaa !279
  %mul46.us = fmul float %11, %12
  store float %mul46.us, float* %arrayidx45.us, align 4, !tbaa !50
  br label %for.inc52.us

if.then.us:                                       ; preds = %for.body13.us
  %13 = load float, float* %m_fZoomBlend, align 4, !tbaa !286
  %arrayidx.i92.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %14 = load float*, float** %arrayidx.i92.us, align 8, !tbaa !43
  %arrayidx23.us = getelementptr inbounds float, float* %14, i64 %indvars.iv110
  %15 = load float, float* %arrayidx23.us, align 4, !tbaa !50
  %mul24.us = fmul float %13, %15
  %16 = load float, float* %m_fZoom, align 8, !tbaa !285
  %mul28.us = fmul float %8, %16
  %mul29.us = fmul float %add.us.lcssa, %mul28.us
  %add30.us = fadd float %mul24.us, %mul29.us
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic, align 8, !tbaa !284
  %mul34.us = fmul float %17, %18
  %add35.us = fadd float %13, %mul34.us
  %div.us = fdiv float %add30.us, %add35.us
  store float %div.us, float* %arrayidx23.us, align 4, !tbaa !50
  br label %for.inc52.us

for.inc52.us:                                     ; preds = %if.then.us, %if.else.us
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %4
  br i1 %exitcond, label %for.cond.cleanup12.us, label %for.body13.us

for.body5.us:                                     ; preds = %for.body5.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body5.us ], [ 0, %for.cond2.preheader.us ]
  %fMic.098.us = phi float [ %add.us.3, %for.body5.us ], [ 0.000000e+00, %for.cond2.preheader.us ]
  %niter131 = phi i64 [ %niter131.nsub.3, %for.body5.us ], [ %unroll_iter130, %for.cond2.preheader.us ]
  %arrayidx.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv
  %19 = load float, float* %arrayidx.i.us, align 4, !tbaa !50
  %arrayidx.i96.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv
  %20 = load float*, float** %arrayidx.i96.us, align 8, !tbaa !43
  %arrayidx.us = getelementptr inbounds float, float* %20, i64 %indvars.iv110
  %21 = load float, float* %arrayidx.us, align 4, !tbaa !50
  %mul.us = fmul float %19, %21
  %add.us = fadd float %fMic.098.us, %mul.us
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.us.1 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next
  %22 = load float, float* %arrayidx.i.us.1, align 4, !tbaa !50
  %arrayidx.i96.us.1 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i96.us.1, align 8, !tbaa !43
  %arrayidx.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110
  %24 = load float, float* %arrayidx.us.1, align 4, !tbaa !50
  %mul.us.1 = fmul float %22, %24
  %add.us.1 = fadd float %add.us, %mul.us.1
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.us.2 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.1
  %25 = load float, float* %arrayidx.i.us.2, align 4, !tbaa !50
  %arrayidx.i96.us.2 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.1
  %26 = load float*, float** %arrayidx.i96.us.2, align 8, !tbaa !43
  %arrayidx.us.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110
  %27 = load float, float* %arrayidx.us.2, align 4, !tbaa !50
  %mul.us.2 = fmul float %25, %27
  %add.us.2 = fadd float %add.us.1, %mul.us.2
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.us.3 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.2
  %28 = load float, float* %arrayidx.i.us.3, align 4, !tbaa !50
  %arrayidx.i96.us.3 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.2
  %29 = load float*, float** %arrayidx.i96.us.3, align 8, !tbaa !43
  %arrayidx.us.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110
  %30 = load float, float* %arrayidx.us.3, align 4, !tbaa !50
  %mul.us.3 = fmul float %28, %30
  %add.us.3 = fadd float %add.us.2, %mul.us.3
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter131.nsub.3 = add i64 %niter131, -4
  %niter131.ncmp.3 = icmp eq i64 %niter131.nsub.3, 0
  br i1 %niter131.ncmp.3, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.body13.us.preheader.unr-lcssa:                ; preds = %for.body5.us, %for.cond2.preheader.us
  %add.us.lcssa.ph = phi float [ undef, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body5.us ]
  %fMic.098.us.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  br i1 %lcmp.mod128, label %for.body13.us.preheader, label %for.body5.us.epil

for.body5.us.epil:                                ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.us.epil ], [ %indvars.iv.unr, %for.body13.us.preheader.unr-lcssa ]
  %fMic.098.us.epil = phi float [ %add.us.epil, %for.body5.us.epil ], [ %fMic.098.us.unr, %for.body13.us.preheader.unr-lcssa ]
  %epil.iter127 = phi i64 [ %epil.iter127.sub, %for.body5.us.epil ], [ %xtraiter126, %for.body13.us.preheader.unr-lcssa ]
  %arrayidx.i.us.epil = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.epil
  %31 = load float, float* %arrayidx.i.us.epil, align 4, !tbaa !50
  %arrayidx.i96.us.epil = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.epil
  %32 = load float*, float** %arrayidx.i96.us.epil, align 8, !tbaa !43
  %arrayidx.us.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110
  %33 = load float, float* %arrayidx.us.epil, align 4, !tbaa !50
  %mul.us.epil = fmul float %31, %33
  %add.us.epil = fadd float %fMic.098.us.epil, %mul.us.epil
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter127.sub = add i64 %epil.iter127, -1
  %epil.iter127.cmp = icmp eq i64 %epil.iter127.sub, 0
  br i1 %epil.iter127.cmp, label %for.body13.us.preheader, label %for.body5.us.epil, !llvm.loop !287

for.body13.us.preheader:                          ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %add.us.lcssa = phi float [ %add.us.lcssa.ph, %for.body13.us.preheader.unr-lcssa ], [ %add.us.epil, %for.body5.us.epil ]
  br label %for.body13.us

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.cond.cleanup12.epil

for.cond.cleanup12.epil:                          ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %epil.iter = phi i64 [ %epil.iter.sub, %for.cond.cleanup12.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.cond.cleanup12.epil, !llvm.loop !288

for.cond.cleanup:                                 ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond.cleanup12.us, %entry
  ret void

for.cond.cleanup12:                               ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader.new
  %niter = phi i64 [ %unroll_iter, %for.cond2.preheader.preheader.new ], [ %niter.nsub.7, %for.cond.cleanup12 ]
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond.cleanup12
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !64
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !65
  %4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !61
  %7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !64
  %8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !65
  %9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8
  %11 = bitcast %"class.std::unique_ptr.21"* %m_pFFT_cfg to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %11, align 8, !tbaa !43
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9
  %12 = bitcast %"class.std::unique_ptr.21"* %m_pIFFT_cfg to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %12, align 8, !tbaa !289
  %13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %14 = bitcast i32* %m_nBlockSize to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false)
  %15 = bitcast %"struct.std::_Head_base.27"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 184, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate, i32 %nBlockSize, i32* nocapture dereferenceable(4) %tailLength, %"class.std::__cxx11::basic_string"* nocapture readonly %HRTFPath) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %pfHRTF = alloca [2 x float*], align 16
  %myEncoder = alloca %class.CAmbisonicEncoder, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !291
  %_M_p.i15.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 0, i32 0
  %2 = load i8*, i8** %_M_p.i15.i, align 8, !tbaa !293
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !296
  %cmp.i.i.i.i.i = icmp ne i8* %2, null
  %cmp.i.i.i.i = icmp eq i64 %3, 0
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0)) #28
  unreachable

if.end.i.i.i.i:                                   ; preds = %entry
  %4 = bitcast %union.anon* %0 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #24
  store i64 %3, i64* %__dnew.i.i.i.i, align 8, !tbaa !297
  %cmp3.i.i.i.i = icmp ugt i64 %3, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i14.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  %_M_p.i18.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i14.i, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !293
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !297
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !298
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.i.i.i.i
  %7 = phi i8* [ %call5.i.i.i14.i, %if.then4.i.i.i.i ], [ %4, %if.end.i.i.i.i ]
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  switch i64 %3, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %8 = load i8, i8* %2, align 1, !tbaa !298
  store i8 %8, i8* %7, align 1, !tbaa !298
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %2, i64 %3, i1 false) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !297
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !296
  %10 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24
  %call.i428 = invoke i8* @_Znwm(i64 16) #26
          to label %call.i.noexc unwind label %lpad

call.i.noexc:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %11 = bitcast i8* %call.i428 to i32 (...)***
  %i_sampleRate2.i.i.i = getelementptr inbounds i8, i8* %call.i428, i64 8
  %12 = bitcast i8* %i_sampleRate2.i.i.i to i32*
  store i32 %nSampleRate, i32* %12, align 8, !tbaa !34
  %i_len.i.i.i = getelementptr inbounds i8, i8* %call.i428, i64 12
  %13 = bitcast i8* %i_len.i.i.i to i32*
  store i32 0, i32* %13, align 4, !tbaa !39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !40
  %call.i10.i = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate)
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %call.i.noexc
  store i32 %call.i10.i, i32* %13, align 4, !tbaa !39
  %14 = bitcast i8* %call.i428 to %class.HRTF*
  %cmp.i.i = icmp eq i32 %call.i10.i, 0
  br i1 %cmp.i.i, label %delete.notnull.i, label %invoke.cont

lpad.i:                                           ; preds = %call.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call.i428) #27
  br label %lpad.body

delete.notnull.i:                                 ; preds = %invoke.cont.i
  %16 = bitcast i8* %call.i428 to void (%class.HRTF*)***
  %vtable.i = load void (%class.HRTF*)**, void (%class.HRTF*)*** %16, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable.i, i64 1
  %17 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn.i, align 8
  call void %17(%class.HRTF* nonnull %14) #24
  br label %invoke.cont

invoke.cont:                                      ; preds = %delete.notnull.i, %invoke.cont.i
  %retval.0.i = phi %class.HRTF* [ null, %delete.notnull.i ], [ %14, %invoke.cont.i ]
  %18 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont
  call void @_ZdlPv(i8* %18) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont
  %cmp = icmp eq %class.HRTF* %retval.0.i, null
  br i1 %cmp, label %cleanup307, label %if.end

lpad:                                             ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %19 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.body

lpad.body:                                        ; preds = %lpad, %lpad.i
  %eh.lpad-body = phi { i8*, i32 } [ %19, %lpad ], [ %15, %lpad.i ]
  %20 = extractvalue { i8*, i32 } %eh.lpad-body, 0
  %21 = extractvalue { i8*, i32 } %eh.lpad-body, 1
  %22 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i432 = icmp eq i8* %22, %4
  br i1 %cmp.i.i.i432, label %ehcleanup308, label %if.then.i.i433

if.then.i.i433:                                   ; preds = %lpad.body
  call void @_ZdlPv(i8* %22) #24
  br label %ehcleanup308

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %i_len.i = getelementptr inbounds %class.HRTF, %class.HRTF* %retval.0.i, i64 0, i32 2
  %23 = load i32, i32* %i_len.i, align 4, !tbaa !39
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 3
  store i32 %23, i32* %m_nTaps, align 4, !tbaa !299
  store i32 %23, i32* %tailLength, align 4, !tbaa !42
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  store i32 %nBlockSize, i32* %m_nBlockSize, align 8, !tbaa !308
  %24 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %cmp5 = icmp ugt i32 %24, %nBlockSize
  %nBlockSize. = select i1 %cmp5, i32 %nBlockSize, i32 %24
  %cond = add i32 %nBlockSize., -1
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !309
  %add = add i32 %24, %nBlockSize
  %add13 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end
  %storemerge = phi i32 [ 1, %if.end ], [ %shl, %while.cond ]
  %cmp14 = icmp ult i32 %storemerge, %add13
  %shl = shl i32 %storemerge, 1
  br i1 %cmp14, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !310
  %div = lshr i32 %storemerge, 1
  %add17 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  store i32 %add17, i32* %m_nFFTBins, align 4, !tbaa !311
  %conv = uitofp i32 %storemerge to float
  %div19 = fdiv float 1.000000e+00, %conv
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  store float %div19, float* %m_fFFTScaler, align 8, !tbaa !312
  %frombool.i = zext i1 %b3D to i8
  %25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %25, align 8, !tbaa !61
  %26 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %26, align 4, !tbaa !64
  %call.i = call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %27 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %27, align 8, !tbaa !65
  %28 = bitcast %class.CAmbisonicBinauralizer* %this to void (%class.CAmbisonicBinauralizer*)***
  %vtable = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %28, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable, i64 6
  %29 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn, align 8
  call void %29(%class.CAmbisonicBinauralizer* nonnull %this)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %30 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !262
  %vtable22 = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %28, align 8, !tbaa !40
  %vfn23 = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable22, i64 7
  %31 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn23, align 8
  call void %31(%class.CAmbisonicBinauralizer* nonnull %this)
  %32 = bitcast [2 x float*]* %pfHRTF to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #24
  %33 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %conv26 = zext i32 %33 to i64
  %34 = shl nuw nsw i64 %conv26, 2
  %call27 = call i8* @_Znam(i64 %34) #26
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %35 = bitcast [2 x float*]* %pfHRTF to i8**
  store i8* %call27, i8** %35, align 16, !tbaa !43
  %call27.1 = call i8* @_Znam(i64 %34) #26
  %arrayidx.1 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %36 = bitcast float** %arrayidx.1 to i8**
  store i8* %call27.1, i8** %36, align 8, !tbaa !43
  %37 = load i32, i32* %27, align 8, !tbaa !65
  %conv31 = zext i32 %37 to i64
  %38 = shl nuw nsw i64 %conv31, 3
  %cmp37522 = icmp eq i32 %37, 0
  %call32 = call i8* @_Znam(i64 %38) #26
  br i1 %cmp37522, label %for.cond52.preheader.thread, label %for.body30.us.preheader

for.cond52.preheader.thread:                      ; preds = %while.end
  %call32.1 = call i8* @_Znam(i64 %38) #26
  %39 = bitcast i8* %call32 to float**
  %40 = bitcast i8* %call32.1 to float**
  br label %delete.notnull

for.body30.us.preheader:                          ; preds = %while.end
  %41 = bitcast i8* %call32 to float**
  br label %for.body38.us

for.body38.us:                                    ; preds = %for.body38.us, %for.body30.us.preheader
  %indvars.iv572 = phi i64 [ 0, %for.body30.us.preheader ], [ %indvars.iv.next573, %for.body38.us ]
  %call41.us = call i8* @_Znam(i64 %34) #26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us, i8 0, i64 %34, i1 false)
  %arrayidx45.us = getelementptr inbounds float*, float** %41, i64 %indvars.iv572
  %42 = bitcast float** %arrayidx45.us to i8**
  store i8* %call41.us, i8** %42, align 8, !tbaa !43
  %indvars.iv.next573 = add nuw nsw i64 %indvars.iv572, 1
  %exitcond575 = icmp eq i64 %indvars.iv.next573, %conv31
  br i1 %exitcond575, label %for.cond35.for.inc49_crit_edge.us, label %for.body38.us

for.cond35.for.inc49_crit_edge.us:                ; preds = %for.body38.us
  %call32.us.1 = call i8* @_Znam(i64 %38) #26
  %43 = bitcast i8* %call32.us.1 to float**
  br label %for.body38.us.1

for.cond52.preheader:                             ; preds = %for.body38.us.1
  br i1 %cmp37522, label %delete.notnull, label %for.cond56.preheader.lr.ph

for.cond56.preheader.lr.ph:                       ; preds = %for.cond52.preheader
  %cmp57516 = icmp eq i32 %30, 0
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %44 = bitcast %class.HRTF* %retval.0.i to i1 (%class.HRTF*, float, float, float**)***
  %wide.trip.count568 = zext i32 %30 to i64
  br label %for.cond56.preheader

for.cond56.preheader:                             ; preds = %for.inc119, %for.cond56.preheader.lr.ph
  %45 = phi i32 [ %37, %for.cond56.preheader.lr.ph ], [ %174, %for.inc119 ]
  %indvars.iv570 = phi i64 [ 0, %for.cond56.preheader.lr.ph ], [ %indvars.iv.next571, %for.inc119 ]
  br i1 %cmp57516, label %for.inc119, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.cond56.preheader
  %46 = trunc i64 %indvars.iv570 to i32
  %conv.i = uitofp i32 %46 to double
  %arrayidx99 = getelementptr inbounds float*, float** %41, i64 %indvars.iv570
  %arrayidx108 = getelementptr inbounds float*, float** %43, i64 %indvars.iv570
  br label %for.body58

for.body58:                                       ; preds = %for.inc116, %for.body58.lr.ph
  %indvars.iv566 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next567, %for.inc116 ]
  %47 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %48 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %47, i64 %indvars.iv566, i32 0
  %49 = bitcast %class.CAmbisonicSource* %48 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable.i436 = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %49, align 8, !tbaa !40
  %vfn.i437 = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable.i436, i64 6
  %50 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn.i437, align 8
  %call.i438 = call { <2 x float>, float } %50(%class.CAmbisonicSource* %48)
  %call60.fca.0.extract = extractvalue { <2 x float>, float } %call.i438, 0
  %position.sroa.0.0.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 0
  %position.sroa.0.4.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 1
  %vtable61 = load i1 (%class.HRTF*, float, float, float**)**, i1 (%class.HRTF*, float, float, float**)*** %44, align 8, !tbaa !40
  %vfn62 = getelementptr inbounds i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vtable61, i64 2
  %51 = load i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vfn62, align 8
  %call63 = call zeroext i1 %51(%class.HRTF* nonnull %retval.0.i, float %position.sroa.0.0.vec.extract, float %position.sroa.0.4.vec.extract, float** nonnull %arrayidx)
  br i1 %call63, label %if.end67, label %cleanup301

if.end67:                                         ; preds = %for.body58
  %52 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %53 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %52, i64 %indvars.iv566, i32 0
  %54 = bitcast %class.CAmbisonicSource* %53 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i441 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %54, align 8, !tbaa !40
  %vfn.i442 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i441, i64 11
  %55 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i442, align 8
  %call.i443 = call float %55(%class.CAmbisonicSource* %53, i32 %46)
  %conv70 = fpext float %call.i443 to double
  %call.i444 = call double @sqrt(double %conv.i) #24
  %56 = call double @llvm.floor.f64(double %call.i444)
  %mul = fmul double %56, 2.000000e+00
  %add72 = fadd double %mul, 1.000000e+00
  %mul73 = fmul double %add72, %conv70
  %conv74 = fptrunc double %mul73 to float
  %57 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %cmp77511 = icmp eq i32 %57, 0
  br i1 %cmp77511, label %for.inc116, label %for.body78.lr.ph

for.body78.lr.ph:                                 ; preds = %if.end67
  %58 = load float*, float** %arrayidx, align 16, !tbaa !43
  %59 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %60 = zext i32 %57 to i64
  %min.iters.check650 = icmp ult i32 %57, 8
  br i1 %min.iters.check650, label %for.body78.preheader, label %vector.memcheck660

for.body78.preheader:                             ; preds = %middle.block648, %vector.memcheck660, %for.body78.lr.ph
  %indvars.iv560.ph = phi i64 [ 0, %vector.memcheck660 ], [ 0, %for.body78.lr.ph ], [ %n.vec663, %middle.block648 ]
  br label %for.body78

vector.memcheck660:                               ; preds = %for.body78.lr.ph
  %scevgep652 = getelementptr float, float* %58, i64 %60
  %scevgep654 = getelementptr float, float* %59, i64 %60
  %bound0656 = icmp ult float* %58, %scevgep654
  %bound1657 = icmp ult float* %59, %scevgep652
  %found.conflict658 = and i1 %bound0656, %bound1657
  br i1 %found.conflict658, label %for.body78.preheader, label %vector.ph661

vector.ph661:                                     ; preds = %vector.memcheck660
  %n.vec663 = and i64 %60, 4294967288
  %broadcast.splatinsert674 = insertelement <4 x float> undef, float %conv74, i32 0
  %broadcast.splat675 = shufflevector <4 x float> %broadcast.splatinsert674, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert676 = insertelement <4 x float> undef, float %conv74, i32 0
  %broadcast.splat677 = shufflevector <4 x float> %broadcast.splatinsert676, <4 x float> undef, <4 x i32> zeroinitializer
  %61 = add nsw i64 %n.vec663, -8
  %62 = lshr exact i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %xtraiter768 = and i64 %63, 1
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %middle.block648.unr-lcssa, label %vector.ph661.new

vector.ph661.new:                                 ; preds = %vector.ph661
  %unroll_iter770 = sub nuw nsw i64 %63, %xtraiter768
  br label %vector.body647

vector.body647:                                   ; preds = %vector.body647, %vector.ph661.new
  %index664 = phi i64 [ 0, %vector.ph661.new ], [ %index.next665.1, %vector.body647 ]
  %niter771 = phi i64 [ %unroll_iter770, %vector.ph661.new ], [ %niter771.nsub.1, %vector.body647 ]
  %65 = getelementptr inbounds float, float* %58, i64 %index664
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load672 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load673 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %69 = fmul <4 x float> %wide.load672, %broadcast.splat675
  %70 = fmul <4 x float> %wide.load673, %broadcast.splat677
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %73 = getelementptr inbounds float, float* %59, i64 %index664
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load678 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !50, !alias.scope !316
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load679 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !50, !alias.scope !316
  %77 = fmul <4 x float> %wide.load678, %broadcast.splat675
  %78 = fmul <4 x float> %wide.load679, %broadcast.splat677
  %79 = bitcast float* %73 to <4 x float>*
  store <4 x float> %77, <4 x float>* %79, align 4, !tbaa !50, !alias.scope !316
  %80 = bitcast float* %75 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 4, !tbaa !50, !alias.scope !316
  %index.next665 = or i64 %index664, 8
  %81 = getelementptr inbounds float, float* %58, i64 %index.next665
  %82 = bitcast float* %81 to <4 x float>*
  %wide.load672.1 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %83 = getelementptr inbounds float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load673.1 = load <4 x float>, <4 x float>* %84, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %85 = fmul <4 x float> %wide.load672.1, %broadcast.splat675
  %86 = fmul <4 x float> %wide.load673.1, %broadcast.splat677
  %87 = bitcast float* %81 to <4 x float>*
  store <4 x float> %85, <4 x float>* %87, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %88 = bitcast float* %83 to <4 x float>*
  store <4 x float> %86, <4 x float>* %88, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %89 = getelementptr inbounds float, float* %59, i64 %index.next665
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load678.1 = load <4 x float>, <4 x float>* %90, align 4, !tbaa !50, !alias.scope !316
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load679.1 = load <4 x float>, <4 x float>* %92, align 4, !tbaa !50, !alias.scope !316
  %93 = fmul <4 x float> %wide.load678.1, %broadcast.splat675
  %94 = fmul <4 x float> %wide.load679.1, %broadcast.splat677
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !50, !alias.scope !316
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !316
  %index.next665.1 = add i64 %index664, 16
  %niter771.nsub.1 = add i64 %niter771, -2
  %niter771.ncmp.1 = icmp eq i64 %niter771.nsub.1, 0
  br i1 %niter771.ncmp.1, label %middle.block648.unr-lcssa, label %vector.body647, !llvm.loop !318

middle.block648.unr-lcssa:                        ; preds = %vector.body647, %vector.ph661
  %index664.unr = phi i64 [ 0, %vector.ph661 ], [ %index.next665.1, %vector.body647 ]
  %lcmp.mod769 = icmp eq i64 %xtraiter768, 0
  br i1 %lcmp.mod769, label %middle.block648, label %vector.body647.epil

vector.body647.epil:                              ; preds = %middle.block648.unr-lcssa
  %97 = getelementptr inbounds float, float* %58, i64 %index664.unr
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load672.epil = load <4 x float>, <4 x float>* %98, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load673.epil = load <4 x float>, <4 x float>* %100, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %101 = fmul <4 x float> %wide.load672.epil, %broadcast.splat675
  %102 = fmul <4 x float> %wide.load673.epil, %broadcast.splat677
  %103 = bitcast float* %97 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %104 = bitcast float* %99 to <4 x float>*
  store <4 x float> %102, <4 x float>* %104, align 4, !tbaa !50, !alias.scope !313, !noalias !316
  %105 = getelementptr inbounds float, float* %59, i64 %index664.unr
  %106 = bitcast float* %105 to <4 x float>*
  %wide.load678.epil = load <4 x float>, <4 x float>* %106, align 4, !tbaa !50, !alias.scope !316
  %107 = getelementptr inbounds float, float* %105, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load679.epil = load <4 x float>, <4 x float>* %108, align 4, !tbaa !50, !alias.scope !316
  %109 = fmul <4 x float> %wide.load678.epil, %broadcast.splat675
  %110 = fmul <4 x float> %wide.load679.epil, %broadcast.splat677
  %111 = bitcast float* %105 to <4 x float>*
  store <4 x float> %109, <4 x float>* %111, align 4, !tbaa !50, !alias.scope !316
  %112 = bitcast float* %107 to <4 x float>*
  store <4 x float> %110, <4 x float>* %112, align 4, !tbaa !50, !alias.scope !316
  br label %middle.block648

middle.block648:                                  ; preds = %vector.body647.epil, %middle.block648.unr-lcssa
  %cmp.n667 = icmp eq i64 %n.vec663, %60
  br i1 %cmp.n667, label %for.cond90.preheader, label %for.body78.preheader

for.cond90.preheader:                             ; preds = %for.body78, %middle.block648
  %cmp92514 = icmp eq i32 %57, 0
  br i1 %cmp92514, label %for.inc116, label %for.body93.lr.ph

for.body93.lr.ph:                                 ; preds = %for.cond90.preheader
  %113 = load float*, float** %arrayidx, align 16, !tbaa !43
  %114 = load float*, float** %arrayidx99, align 8, !tbaa !43
  %115 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %116 = load float*, float** %arrayidx108, align 8, !tbaa !43
  %wide.trip.count564 = zext i32 %57 to i64
  %min.iters.check = icmp ult i32 %57, 4
  br i1 %min.iters.check, label %for.body93.preheader, label %vector.memcheck

for.body93.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body93.lr.ph
  %indvars.iv562.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body93.lr.ph ], [ %n.vec, %middle.block ]
  %117 = xor i64 %indvars.iv562.ph, -1
  %xtraiter776 = and i64 %60, 1
  %lcmp.mod777 = icmp eq i64 %xtraiter776, 0
  br i1 %lcmp.mod777, label %for.body93.prol.loopexit, label %for.body93.prol

for.body93.prol:                                  ; preds = %for.body93.preheader
  %arrayidx96.prol = getelementptr inbounds float, float* %113, i64 %indvars.iv562.ph
  %118 = load float, float* %arrayidx96.prol, align 4, !tbaa !50
  %arrayidx101.prol = getelementptr inbounds float, float* %114, i64 %indvars.iv562.ph
  %119 = load float, float* %arrayidx101.prol, align 4, !tbaa !50
  %add102.prol = fadd float %118, %119
  store float %add102.prol, float* %arrayidx101.prol, align 4, !tbaa !50
  %arrayidx105.prol = getelementptr inbounds float, float* %115, i64 %indvars.iv562.ph
  %120 = load float, float* %arrayidx105.prol, align 4, !tbaa !50
  %arrayidx110.prol = getelementptr inbounds float, float* %116, i64 %indvars.iv562.ph
  %121 = load float, float* %arrayidx110.prol, align 4, !tbaa !50
  %add111.prol = fadd float %120, %121
  store float %add111.prol, float* %arrayidx110.prol, align 4, !tbaa !50
  %indvars.iv.next563.prol = or i64 %indvars.iv562.ph, 1
  br label %for.body93.prol.loopexit

for.body93.prol.loopexit:                         ; preds = %for.body93.prol, %for.body93.preheader
  %indvars.iv562.unr.ph = phi i64 [ %indvars.iv.next563.prol, %for.body93.prol ], [ %indvars.iv562.ph, %for.body93.preheader ]
  %122 = sub nsw i64 0, %60
  %123 = icmp eq i64 %117, %122
  br i1 %123, label %for.inc116, label %for.body93

vector.memcheck:                                  ; preds = %for.body93.lr.ph
  %scevgep = getelementptr float, float* %114, i64 %wide.trip.count564
  %scevgep623 = getelementptr float, float* %116, i64 %wide.trip.count564
  %scevgep625 = getelementptr float, float* %113, i64 %wide.trip.count564
  %scevgep627 = getelementptr float, float* %115, i64 %wide.trip.count564
  %bound0 = icmp ult float* %114, %scevgep623
  %bound1 = icmp ult float* %116, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %bound0629 = icmp ult float* %114, %scevgep625
  %bound1630 = icmp ult float* %113, %scevgep
  %found.conflict631 = and i1 %bound0629, %bound1630
  %conflict.rdx = or i1 %found.conflict, %found.conflict631
  %bound0632 = icmp ult float* %114, %scevgep627
  %bound1633 = icmp ult float* %115, %scevgep
  %found.conflict634 = and i1 %bound0632, %bound1633
  %conflict.rdx635 = or i1 %conflict.rdx, %found.conflict634
  %bound0636 = icmp ult float* %116, %scevgep625
  %bound1637 = icmp ult float* %113, %scevgep623
  %found.conflict638 = and i1 %bound0636, %bound1637
  %conflict.rdx639 = or i1 %conflict.rdx635, %found.conflict638
  %bound0640 = icmp ult float* %116, %scevgep627
  %bound1641 = icmp ult float* %115, %scevgep623
  %found.conflict642 = and i1 %bound0640, %bound1641
  %conflict.rdx643 = or i1 %conflict.rdx639, %found.conflict642
  br i1 %conflict.rdx643, label %for.body93.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count564, 4294967292
  %124 = add nsw i64 %n.vec, -4
  %125 = lshr exact i64 %124, 2
  %126 = add nuw nsw i64 %125, 1
  %xtraiter772 = and i64 %126, 1
  %127 = icmp eq i64 %124, 0
  br i1 %127, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter774 = sub nuw nsw i64 %126, %xtraiter772
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter775 = phi i64 [ %unroll_iter774, %vector.ph.new ], [ %niter775.nsub.1, %vector.body ]
  %128 = getelementptr inbounds float, float* %113, i64 %index
  %129 = bitcast float* %128 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %129, align 4, !tbaa !50, !alias.scope !319
  %130 = getelementptr inbounds float, float* %114, i64 %index
  %131 = bitcast float* %130 to <4 x float>*
  %wide.load644 = load <4 x float>, <4 x float>* %131, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %132 = fadd <4 x float> %wide.load, %wide.load644
  %133 = bitcast float* %130 to <4 x float>*
  store <4 x float> %132, <4 x float>* %133, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %134 = getelementptr inbounds float, float* %115, i64 %index
  %135 = bitcast float* %134 to <4 x float>*
  %wide.load645 = load <4 x float>, <4 x float>* %135, align 4, !tbaa !50, !alias.scope !327
  %136 = getelementptr inbounds float, float* %116, i64 %index
  %137 = bitcast float* %136 to <4 x float>*
  %wide.load646 = load <4 x float>, <4 x float>* %137, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  %138 = fadd <4 x float> %wide.load645, %wide.load646
  %139 = bitcast float* %136 to <4 x float>*
  store <4 x float> %138, <4 x float>* %139, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  %index.next = or i64 %index, 4
  %140 = getelementptr inbounds float, float* %113, i64 %index.next
  %141 = bitcast float* %140 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %141, align 4, !tbaa !50, !alias.scope !319
  %142 = getelementptr inbounds float, float* %114, i64 %index.next
  %143 = bitcast float* %142 to <4 x float>*
  %wide.load644.1 = load <4 x float>, <4 x float>* %143, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %144 = fadd <4 x float> %wide.load.1, %wide.load644.1
  %145 = bitcast float* %142 to <4 x float>*
  store <4 x float> %144, <4 x float>* %145, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %146 = getelementptr inbounds float, float* %115, i64 %index.next
  %147 = bitcast float* %146 to <4 x float>*
  %wide.load645.1 = load <4 x float>, <4 x float>* %147, align 4, !tbaa !50, !alias.scope !327
  %148 = getelementptr inbounds float, float* %116, i64 %index.next
  %149 = bitcast float* %148 to <4 x float>*
  %wide.load646.1 = load <4 x float>, <4 x float>* %149, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  %150 = fadd <4 x float> %wide.load645.1, %wide.load646.1
  %151 = bitcast float* %148 to <4 x float>*
  store <4 x float> %150, <4 x float>* %151, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  %index.next.1 = add i64 %index, 8
  %niter775.nsub.1 = add i64 %niter775, -2
  %niter775.ncmp.1 = icmp eq i64 %niter775.nsub.1, 0
  br i1 %niter775.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !330

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod773 = icmp eq i64 %xtraiter772, 0
  br i1 %lcmp.mod773, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %152 = getelementptr inbounds float, float* %113, i64 %index.unr
  %153 = bitcast float* %152 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %153, align 4, !tbaa !50, !alias.scope !319
  %154 = getelementptr inbounds float, float* %114, i64 %index.unr
  %155 = bitcast float* %154 to <4 x float>*
  %wide.load644.epil = load <4 x float>, <4 x float>* %155, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %156 = fadd <4 x float> %wide.load.epil, %wide.load644.epil
  %157 = bitcast float* %154 to <4 x float>*
  store <4 x float> %156, <4 x float>* %157, align 4, !tbaa !50, !alias.scope !322, !noalias !324
  %158 = getelementptr inbounds float, float* %115, i64 %index.unr
  %159 = bitcast float* %158 to <4 x float>*
  %wide.load645.epil = load <4 x float>, <4 x float>* %159, align 4, !tbaa !50, !alias.scope !327
  %160 = getelementptr inbounds float, float* %116, i64 %index.unr
  %161 = bitcast float* %160 to <4 x float>*
  %wide.load646.epil = load <4 x float>, <4 x float>* %161, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  %162 = fadd <4 x float> %wide.load645.epil, %wide.load646.epil
  %163 = bitcast float* %160 to <4 x float>*
  store <4 x float> %162, <4 x float>* %163, align 4, !tbaa !50, !alias.scope !328, !noalias !329
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count564
  br i1 %cmp.n, label %for.inc116, label %for.body93.preheader

for.body78:                                       ; preds = %for.body78, %for.body78.preheader
  %indvars.iv560 = phi i64 [ %indvars.iv.next561, %for.body78 ], [ %indvars.iv560.ph, %for.body78.preheader ]
  %arrayidx81 = getelementptr inbounds float, float* %58, i64 %indvars.iv560
  %164 = load float, float* %arrayidx81, align 4, !tbaa !50
  %mul82 = fmul float %164, %conv74
  store float %mul82, float* %arrayidx81, align 4, !tbaa !50
  %arrayidx85 = getelementptr inbounds float, float* %59, i64 %indvars.iv560
  %165 = load float, float* %arrayidx85, align 4, !tbaa !50
  %mul86 = fmul float %165, %conv74
  store float %mul86, float* %arrayidx85, align 4, !tbaa !50
  %indvars.iv.next561 = add nuw nsw i64 %indvars.iv560, 1
  %cmp77 = icmp ult i64 %indvars.iv.next561, %60
  br i1 %cmp77, label %for.body78, label %for.cond90.preheader, !llvm.loop !331

for.body93:                                       ; preds = %for.body93, %for.body93.prol.loopexit
  %indvars.iv562 = phi i64 [ %indvars.iv.next563.1, %for.body93 ], [ %indvars.iv562.unr.ph, %for.body93.prol.loopexit ]
  %arrayidx96 = getelementptr inbounds float, float* %113, i64 %indvars.iv562
  %166 = load float, float* %arrayidx96, align 4, !tbaa !50
  %arrayidx101 = getelementptr inbounds float, float* %114, i64 %indvars.iv562
  %167 = load float, float* %arrayidx101, align 4, !tbaa !50
  %add102 = fadd float %166, %167
  store float %add102, float* %arrayidx101, align 4, !tbaa !50
  %arrayidx105 = getelementptr inbounds float, float* %115, i64 %indvars.iv562
  %168 = load float, float* %arrayidx105, align 4, !tbaa !50
  %arrayidx110 = getelementptr inbounds float, float* %116, i64 %indvars.iv562
  %169 = load float, float* %arrayidx110, align 4, !tbaa !50
  %add111 = fadd float %168, %169
  store float %add111, float* %arrayidx110, align 4, !tbaa !50
  %indvars.iv.next563 = add nuw nsw i64 %indvars.iv562, 1
  %arrayidx96.1 = getelementptr inbounds float, float* %113, i64 %indvars.iv.next563
  %170 = load float, float* %arrayidx96.1, align 4, !tbaa !50
  %arrayidx101.1 = getelementptr inbounds float, float* %114, i64 %indvars.iv.next563
  %171 = load float, float* %arrayidx101.1, align 4, !tbaa !50
  %add102.1 = fadd float %170, %171
  store float %add102.1, float* %arrayidx101.1, align 4, !tbaa !50
  %arrayidx105.1 = getelementptr inbounds float, float* %115, i64 %indvars.iv.next563
  %172 = load float, float* %arrayidx105.1, align 4, !tbaa !50
  %arrayidx110.1 = getelementptr inbounds float, float* %116, i64 %indvars.iv.next563
  %173 = load float, float* %arrayidx110.1, align 4, !tbaa !50
  %add111.1 = fadd float %172, %173
  store float %add111.1, float* %arrayidx110.1, align 4, !tbaa !50
  %indvars.iv.next563.1 = add nuw nsw i64 %indvars.iv562, 2
  %exitcond565.1 = icmp eq i64 %indvars.iv.next563.1, %wide.trip.count564
  br i1 %exitcond565.1, label %for.inc116, label %for.body93, !llvm.loop !332

for.inc116:                                       ; preds = %for.body93, %middle.block, %for.body93.prol.loopexit, %for.cond90.preheader, %if.end67
  %indvars.iv.next567 = add nuw nsw i64 %indvars.iv566, 1
  %exitcond569 = icmp eq i64 %indvars.iv.next567, %wide.trip.count568
  br i1 %exitcond569, label %for.inc119.loopexit, label %for.body58

for.inc119.loopexit:                              ; preds = %for.inc116
  %.pre = load i32, i32* %27, align 8, !tbaa !65
  br label %for.inc119

for.inc119:                                       ; preds = %for.inc119.loopexit, %for.cond56.preheader
  %174 = phi i32 [ %.pre, %for.inc119.loopexit ], [ %45, %for.cond56.preheader ]
  %indvars.iv.next571 = add nuw nsw i64 %indvars.iv570, 1
  %175 = zext i32 %174 to i64
  %cmp54 = icmp ult i64 %indvars.iv.next571, %175
  br i1 %cmp54, label %for.cond56.preheader, label %delete.notnull

delete.notnull:                                   ; preds = %for.inc119, %for.cond52.preheader, %for.cond52.preheader.thread
  %176 = phi float** [ %39, %for.cond52.preheader.thread ], [ %41, %for.cond52.preheader ], [ %41, %for.inc119 ]
  %177 = phi float** [ %40, %for.cond52.preheader.thread ], [ %43, %for.cond52.preheader ], [ %43, %for.inc119 ]
  %178 = phi i8* [ %call32.1, %for.cond52.preheader.thread ], [ %call32.us.1, %for.cond52.preheader ], [ %call32.us.1, %for.inc119 ]
  %179 = bitcast %class.HRTF* %retval.0.i to void (%class.HRTF*)***
  %vtable122 = load void (%class.HRTF*)**, void (%class.HRTF*)*** %179, align 8, !tbaa !40
  %vfn123 = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable122, i64 1
  %180 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn123, align 8
  call void %180(%class.HRTF* nonnull %retval.0.i) #24
  %181 = bitcast %class.CAmbisonicEncoder* %myEncoder to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %181) #24
  %182 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 1
  %184 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 2
  %185 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %185, align 8, !tbaa !65
  %186 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %186, align 4, !tbaa !66
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3, i32 2
  %187 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !68
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !40
  %188 = load i32, i32* %25, align 8, !tbaa !61
  store i32 %188, i32* %183, align 8, !tbaa !61
  store i8 1, i8* %184, align 4, !tbaa !64
  %call.i.i.i447 = invoke i32 @_Z17OrderToComponentsjb(i32 %188, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad124

call.i.i.i.noexc:                                 ; preds = %delete.notnull
  store i32 %call.i.i.i447, i32* %185, align 8, !tbaa !65
  %conv.i.i = zext i32 %call.i.i.i447 to i64
  %189 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !50
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %190 = bitcast float** %_M_finish.i.i.i.i to i64*
  %191 = load i64, i64* %190, align 8, !tbaa !73
  %192 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %193 = load i64, i64* %192, align 8, !tbaa !76
  %sub.ptr.sub.i.i.i.i = sub i64 %191, %193
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i446 = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %194 = inttoptr i64 %193 to float*
  br i1 %cmp.i.i.i446, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %195 = inttoptr i64 %191 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %195, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad124

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp6.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp6.i.i.i, label %if.then7.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then7.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %194, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then7.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2
  %196 = load i32, i32* %183, align 8, !tbaa !61
  %add.i.i = add i32 %196, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %197 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !50
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %198 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %199 = load i64, i64* %198, align 8, !tbaa !73
  %200 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %201 = load i64, i64* %200, align 8, !tbaa !76
  %sub.ptr.sub.i.i7.i.i = sub i64 %199, %201
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %202 = inttoptr i64 %201 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %203 = inttoptr i64 %199 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %203, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %invoke.cont125 unwind label %lpad124

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp6.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp6.i12.i.i, label %if.then7.i15.i.i, label %invoke.cont125

if.then7.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %202, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !73
  br label %invoke.cont125

invoke.cont125:                                   ; preds = %if.then7.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #24
  %call129 = invoke float @_Z16DegreesToRadiansf(float 9.000000e+01)
          to label %invoke.cont134 unwind label %lpad127

invoke.cont134:                                   ; preds = %invoke.cont125
  %position90.sroa.0.4.vec.insert = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call129, i32 0
  %204 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0
  %polPosition.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3
  %polPosition.sroa.0.0..sroa_cast.i = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx.i to <2 x float>*
  store <2 x float> %position90.sroa.0.4.vec.insert, <2 x float>* %polPosition.sroa.0.0..sroa_cast.i, align 8
  store float 5.000000e+00, float* %fDistance.i.i, align 8
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* nonnull %204) #24
  %205 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %conv136 = zext i32 %205 to i64
  %206 = shl nuw nsw i64 %conv136, 2
  %call139 = invoke i8* @_Znam(i64 %206) #26
          to label %invoke.cont138 unwind label %lpad137

invoke.cont138:                                   ; preds = %invoke.cont134
  %207 = bitcast i8* %call139 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call139, i8 0, i64 %206, i1 false)
  %208 = load i32, i32* %27, align 8, !tbaa !65
  %cmp142507 = icmp eq i32 %208, 0
  br i1 %cmp142507, label %for.cond165.preheader, label %for.cond144.preheader.lr.ph

for.cond144.preheader.lr.ph:                      ; preds = %invoke.cont138
  %cmp146505 = icmp eq i32 %205, 0
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %209 = load float*, float** %_M_start.i.i, align 8
  br i1 %cmp146505, label %for.body217.lr.ph, label %for.cond144.preheader.us.preheader

for.cond144.preheader.us.preheader:               ; preds = %for.cond144.preheader.lr.ph
  %210 = zext i32 %208 to i64
  %211 = shl nuw nsw i64 %conv136, 2
  %scevgep685 = getelementptr i8, i8* %call139, i64 %211
  %min.iters.check683 = icmp ult i32 %205, 8
  %n.vec701 = and i64 %conv136, 4294967288
  %cmp.n705 = icmp eq i64 %n.vec701, %conv136
  %xtraiter766 = and i64 %conv136, 1
  %lcmp.mod767 = icmp eq i64 %xtraiter766, 0
  %212 = sub nsw i64 0, %conv136
  br label %for.cond144.preheader.us

for.cond144.preheader.us:                         ; preds = %for.cond144.for.inc162_crit_edge.us, %for.cond144.preheader.us.preheader
  %indvars.iv558 = phi i64 [ 0, %for.cond144.preheader.us.preheader ], [ %indvars.iv.next559, %for.cond144.for.inc162_crit_edge.us ]
  %add.ptr.i.i.us = getelementptr inbounds float, float* %209, i64 %indvars.iv558
  %arrayidx152.us = getelementptr inbounds float*, float** %176, i64 %indvars.iv558
  %213 = load float*, float** %arrayidx152.us, align 8, !tbaa !43
  br i1 %min.iters.check683, label %for.body147.us.preheader, label %vector.memcheck698

vector.memcheck698:                               ; preds = %for.cond144.preheader.us
  %214 = bitcast float* %213 to i8*
  %scevgep686 = getelementptr float, float* %209, i64 %indvars.iv558
  %scevgep686687 = bitcast float* %scevgep686 to i8*
  %uglygep = getelementptr i8, i8* %scevgep686687, i64 1
  %scevgep688 = getelementptr float, float* %213, i64 %conv136
  %scevgep688689 = bitcast float* %scevgep688 to i8*
  %bc = bitcast float* %add.ptr.i.i.us to i8*
  %bound0690 = icmp ult i8* %call139, %uglygep
  %bound1691 = icmp ugt i8* %scevgep685, %bc
  %found.conflict692 = and i1 %bound0690, %bound1691
  %bound0693 = icmp ult i8* %call139, %scevgep688689
  %bound1694 = icmp ugt i8* %scevgep685, %214
  %found.conflict695 = and i1 %bound0693, %bound1694
  %conflict.rdx696 = or i1 %found.conflict692, %found.conflict695
  br i1 %conflict.rdx696, label %for.body147.us.preheader, label %vector.ph699

vector.ph699:                                     ; preds = %vector.memcheck698
  %215 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !50, !alias.scope !333
  %216 = insertelement <4 x float> undef, float %215, i32 0
  %217 = shufflevector <4 x float> %216, <4 x float> undef, <4 x i32> zeroinitializer
  %218 = insertelement <4 x float> undef, float %215, i32 0
  %219 = shufflevector <4 x float> %218, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body680

vector.body680:                                   ; preds = %vector.body680, %vector.ph699
  %index702 = phi i64 [ 0, %vector.ph699 ], [ %index.next703, %vector.body680 ]
  %220 = getelementptr inbounds float, float* %213, i64 %index702
  %221 = bitcast float* %220 to <4 x float>*
  %wide.load710 = load <4 x float>, <4 x float>* %221, align 4, !tbaa !50, !alias.scope !336
  %222 = getelementptr inbounds float, float* %220, i64 4
  %223 = bitcast float* %222 to <4 x float>*
  %wide.load711 = load <4 x float>, <4 x float>* %223, align 4, !tbaa !50, !alias.scope !336
  %224 = fmul <4 x float> %217, %wide.load710
  %225 = fmul <4 x float> %219, %wide.load711
  %226 = getelementptr inbounds float, float* %207, i64 %index702
  %227 = bitcast float* %226 to <4 x float>*
  %wide.load712 = load <4 x float>, <4 x float>* %227, align 4, !tbaa !50, !alias.scope !338, !noalias !340
  %228 = getelementptr inbounds float, float* %226, i64 4
  %229 = bitcast float* %228 to <4 x float>*
  %wide.load713 = load <4 x float>, <4 x float>* %229, align 4, !tbaa !50, !alias.scope !338, !noalias !340
  %230 = fadd <4 x float> %wide.load712, %224
  %231 = fadd <4 x float> %wide.load713, %225
  %232 = bitcast float* %226 to <4 x float>*
  store <4 x float> %230, <4 x float>* %232, align 4, !tbaa !50, !alias.scope !338, !noalias !340
  %233 = bitcast float* %228 to <4 x float>*
  store <4 x float> %231, <4 x float>* %233, align 4, !tbaa !50, !alias.scope !338, !noalias !340
  %index.next703 = add i64 %index702, 8
  %234 = icmp eq i64 %index.next703, %n.vec701
  br i1 %234, label %middle.block681, label %vector.body680, !llvm.loop !341

middle.block681:                                  ; preds = %vector.body680
  br i1 %cmp.n705, label %for.cond144.for.inc162_crit_edge.us, label %for.body147.us.preheader

for.body147.us.preheader:                         ; preds = %middle.block681, %vector.memcheck698, %for.cond144.preheader.us
  %indvars.iv554.ph = phi i64 [ 0, %vector.memcheck698 ], [ 0, %for.cond144.preheader.us ], [ %n.vec701, %middle.block681 ]
  %235 = xor i64 %indvars.iv554.ph, -1
  br i1 %lcmp.mod767, label %for.body147.us.prol.loopexit, label %for.body147.us.prol

for.body147.us.prol:                              ; preds = %for.body147.us.preheader
  %236 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !50
  %arrayidx154.us.prol = getelementptr inbounds float, float* %213, i64 %indvars.iv554.ph
  %237 = load float, float* %arrayidx154.us.prol, align 4, !tbaa !50
  %mul155.us.prol = fmul float %236, %237
  %arrayidx157.us.prol = getelementptr inbounds float, float* %207, i64 %indvars.iv554.ph
  %238 = load float, float* %arrayidx157.us.prol, align 4, !tbaa !50
  %add158.us.prol = fadd float %238, %mul155.us.prol
  store float %add158.us.prol, float* %arrayidx157.us.prol, align 4, !tbaa !50
  %indvars.iv.next555.prol = or i64 %indvars.iv554.ph, 1
  br label %for.body147.us.prol.loopexit

for.body147.us.prol.loopexit:                     ; preds = %for.body147.us.prol, %for.body147.us.preheader
  %indvars.iv554.unr.ph = phi i64 [ %indvars.iv.next555.prol, %for.body147.us.prol ], [ %indvars.iv554.ph, %for.body147.us.preheader ]
  %239 = icmp eq i64 %235, %212
  br i1 %239, label %for.cond144.for.inc162_crit_edge.us, label %for.body147.us

for.body147.us:                                   ; preds = %for.body147.us, %for.body147.us.prol.loopexit
  %indvars.iv554 = phi i64 [ %indvars.iv.next555.1, %for.body147.us ], [ %indvars.iv554.unr.ph, %for.body147.us.prol.loopexit ]
  %240 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !50
  %arrayidx154.us = getelementptr inbounds float, float* %213, i64 %indvars.iv554
  %241 = load float, float* %arrayidx154.us, align 4, !tbaa !50
  %mul155.us = fmul float %240, %241
  %arrayidx157.us = getelementptr inbounds float, float* %207, i64 %indvars.iv554
  %242 = load float, float* %arrayidx157.us, align 4, !tbaa !50
  %add158.us = fadd float %242, %mul155.us
  store float %add158.us, float* %arrayidx157.us, align 4, !tbaa !50
  %indvars.iv.next555 = add nuw nsw i64 %indvars.iv554, 1
  %243 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !50
  %arrayidx154.us.1 = getelementptr inbounds float, float* %213, i64 %indvars.iv.next555
  %244 = load float, float* %arrayidx154.us.1, align 4, !tbaa !50
  %mul155.us.1 = fmul float %243, %244
  %arrayidx157.us.1 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next555
  %245 = load float, float* %arrayidx157.us.1, align 4, !tbaa !50
  %add158.us.1 = fadd float %245, %mul155.us.1
  store float %add158.us.1, float* %arrayidx157.us.1, align 4, !tbaa !50
  %indvars.iv.next555.1 = add nuw nsw i64 %indvars.iv554, 2
  %exitcond557.1 = icmp eq i64 %indvars.iv.next555.1, %conv136
  br i1 %exitcond557.1, label %for.cond144.for.inc162_crit_edge.us, label %for.body147.us, !llvm.loop !342

for.cond144.for.inc162_crit_edge.us:              ; preds = %for.body147.us, %for.body147.us.prol.loopexit, %middle.block681
  %indvars.iv.next559 = add nuw nsw i64 %indvars.iv558, 1
  %cmp142.us = icmp ult i64 %indvars.iv.next559, %210
  br i1 %cmp142.us, label %for.cond144.preheader.us, label %for.cond165.preheader

for.cond165.preheader:                            ; preds = %for.cond144.for.inc162_crit_edge.us, %invoke.cont138
  %cmp167501 = icmp eq i32 %205, 0
  br i1 %cmp167501, label %for.end181, label %for.body168.preheader

for.body168.preheader:                            ; preds = %for.cond165.preheader
  %246 = add nsw i64 %conv136, -1
  %xtraiter761 = and i64 %conv136, 3
  %247 = icmp ult i64 %246, 3
  br i1 %247, label %for.end181.loopexit.unr-lcssa, label %for.body168.preheader.new

for.body168.preheader.new:                        ; preds = %for.body168.preheader
  %unroll_iter764 = sub nsw i64 %conv136, %xtraiter761
  br label %for.body168

lpad124:                                          ; preds = %if.then.i11.i.i, %if.then.i.i.i, %delete.notnull
  %248 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad127:                                          ; preds = %invoke.cont125
  %249 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad137:                                          ; preds = %invoke.cont134
  %250 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.body168:                                      ; preds = %for.body168, %for.body168.preheader.new
  %indvars.iv550 = phi i64 [ 0, %for.body168.preheader.new ], [ %indvars.iv.next551.3, %for.body168 ]
  %fMax.0502 = phi float [ 0.000000e+00, %for.body168.preheader.new ], [ %cond178.3, %for.body168 ]
  %niter765 = phi i64 [ %unroll_iter764, %for.body168.preheader.new ], [ %niter765.nsub.3, %for.body168 ]
  %arrayidx170 = getelementptr inbounds float, float* %207, i64 %indvars.iv550
  %251 = load float, float* %arrayidx170, align 4, !tbaa !50
  %252 = call float @llvm.fabs.f32(float %251) #24
  %cmp174 = fcmp ogt float %252, %fMax.0502
  %cond178 = select i1 %cmp174, float %252, float %fMax.0502
  %indvars.iv.next551 = or i64 %indvars.iv550, 1
  %arrayidx170.1 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next551
  %253 = load float, float* %arrayidx170.1, align 4, !tbaa !50
  %254 = call float @llvm.fabs.f32(float %253) #24
  %cmp174.1 = fcmp ogt float %254, %cond178
  %cond178.1 = select i1 %cmp174.1, float %254, float %cond178
  %indvars.iv.next551.1 = or i64 %indvars.iv550, 2
  %arrayidx170.2 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next551.1
  %255 = load float, float* %arrayidx170.2, align 4, !tbaa !50
  %256 = call float @llvm.fabs.f32(float %255) #24
  %cmp174.2 = fcmp ogt float %256, %cond178.1
  %cond178.2 = select i1 %cmp174.2, float %256, float %cond178.1
  %indvars.iv.next551.2 = or i64 %indvars.iv550, 3
  %arrayidx170.3 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next551.2
  %257 = load float, float* %arrayidx170.3, align 4, !tbaa !50
  %258 = call float @llvm.fabs.f32(float %257) #24
  %cmp174.3 = fcmp ogt float %258, %cond178.2
  %cond178.3 = select i1 %cmp174.3, float %258, float %cond178.2
  %indvars.iv.next551.3 = add nuw nsw i64 %indvars.iv550, 4
  %niter765.nsub.3 = add i64 %niter765, -4
  %niter765.ncmp.3 = icmp eq i64 %niter765.nsub.3, 0
  br i1 %niter765.ncmp.3, label %for.end181.loopexit.unr-lcssa, label %for.body168

for.end181.loopexit.unr-lcssa:                    ; preds = %for.body168, %for.body168.preheader
  %cond178.lcssa.ph = phi float [ undef, %for.body168.preheader ], [ %cond178.3, %for.body168 ]
  %indvars.iv550.unr = phi i64 [ 0, %for.body168.preheader ], [ %indvars.iv.next551.3, %for.body168 ]
  %fMax.0502.unr = phi float [ 0.000000e+00, %for.body168.preheader ], [ %cond178.3, %for.body168 ]
  %lcmp.mod762 = icmp eq i64 %xtraiter761, 0
  br i1 %lcmp.mod762, label %for.end181, label %for.body168.epil

for.body168.epil:                                 ; preds = %for.body168.epil, %for.end181.loopexit.unr-lcssa
  %indvars.iv550.epil = phi i64 [ %indvars.iv.next551.epil, %for.body168.epil ], [ %indvars.iv550.unr, %for.end181.loopexit.unr-lcssa ]
  %fMax.0502.epil = phi float [ %cond178.epil, %for.body168.epil ], [ %fMax.0502.unr, %for.end181.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body168.epil ], [ %xtraiter761, %for.end181.loopexit.unr-lcssa ]
  %arrayidx170.epil = getelementptr inbounds float, float* %207, i64 %indvars.iv550.epil
  %259 = load float, float* %arrayidx170.epil, align 4, !tbaa !50
  %260 = call float @llvm.fabs.f32(float %259) #24
  %cmp174.epil = fcmp ogt float %260, %fMax.0502.epil
  %cond178.epil = select i1 %cmp174.epil, float %260, float %fMax.0502.epil
  %indvars.iv.next551.epil = add nuw nsw i64 %indvars.iv550.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end181, label %for.body168.epil, !llvm.loop !343

for.end181:                                       ; preds = %for.body168.epil, %for.end181.loopexit.unr-lcssa, %for.cond165.preheader
  %cmp167501595 = phi i1 [ true, %for.cond165.preheader ], [ %cmp167501, %for.body168.epil ], [ %cmp167501, %for.end181.loopexit.unr-lcssa ]
  %fMax.0.lcssa = phi float [ 0.000000e+00, %for.cond165.preheader ], [ %cond178.lcssa.ph, %for.end181.loopexit.unr-lcssa ], [ %cond178.epil, %for.body168.epil ]
  %div182 = fdiv float 1.000000e+00, %fMax.0.lcssa
  %mul183 = fmul float %div182, 0x3FD6666660000000
  %cmp189477 = icmp eq i32 %208, 0
  %brmerge = or i1 %cmp189477, %cmp167501595
  br i1 %brmerge, label %for.cond211.preheader, label %for.cond191.preheader.us.us.preheader

for.cond191.preheader.us.us.preheader:            ; preds = %for.end181
  %wide.trip.count544 = zext i32 %208 to i64
  %261 = and i64 %conv136, 4294967288
  %262 = add nsw i64 %261, -8
  %263 = lshr exact i64 %262, 3
  %264 = add nuw nsw i64 %263, 1
  %min.iters.check717 = icmp ult i32 %205, 8
  %n.vec720 = and i64 %conv136, 4294967288
  %broadcast.splatinsert731 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat732 = shufflevector <4 x float> %broadcast.splatinsert731, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert733 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat734 = shufflevector <4 x float> %broadcast.splatinsert733, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter757 = and i64 %264, 1
  %265 = icmp eq i64 %262, 0
  %unroll_iter759 = sub nuw nsw i64 %264, %xtraiter757
  %lcmp.mod758 = icmp eq i64 %xtraiter757, 0
  %cmp.n724 = icmp eq i64 %n.vec720, %conv136
  br label %for.cond191.preheader.us.us

for.cond191.preheader.us.us:                      ; preds = %for.cond191.for.inc205_crit_edge.us.us, %for.cond191.preheader.us.us.preheader
  %indvars.iv542 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader ], [ %indvars.iv.next543, %for.cond191.for.inc205_crit_edge.us.us ]
  %arrayidx198.us.us = getelementptr inbounds float*, float** %176, i64 %indvars.iv542
  %266 = load float*, float** %arrayidx198.us.us, align 8, !tbaa !43
  br i1 %min.iters.check717, label %for.body194.us.us.preheader, label %vector.ph718

for.body194.us.us.preheader:                      ; preds = %middle.block715, %for.cond191.preheader.us.us
  %indvars.iv540.ph = phi i64 [ 0, %for.cond191.preheader.us.us ], [ %n.vec720, %middle.block715 ]
  br label %for.body194.us.us

vector.ph718:                                     ; preds = %for.cond191.preheader.us.us
  br i1 %265, label %middle.block715.unr-lcssa, label %vector.body714

vector.body714:                                   ; preds = %vector.body714, %vector.ph718
  %index721 = phi i64 [ %index.next722.1, %vector.body714 ], [ 0, %vector.ph718 ]
  %niter760 = phi i64 [ %niter760.nsub.1, %vector.body714 ], [ %unroll_iter759, %vector.ph718 ]
  %267 = getelementptr inbounds float, float* %266, i64 %index721
  %268 = bitcast float* %267 to <4 x float>*
  %wide.load729 = load <4 x float>, <4 x float>* %268, align 4, !tbaa !50
  %269 = getelementptr inbounds float, float* %267, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  %wide.load730 = load <4 x float>, <4 x float>* %270, align 4, !tbaa !50
  %271 = fmul <4 x float> %broadcast.splat732, %wide.load729
  %272 = fmul <4 x float> %broadcast.splat734, %wide.load730
  %273 = bitcast float* %267 to <4 x float>*
  store <4 x float> %271, <4 x float>* %273, align 4, !tbaa !50
  %274 = bitcast float* %269 to <4 x float>*
  store <4 x float> %272, <4 x float>* %274, align 4, !tbaa !50
  %index.next722 = or i64 %index721, 8
  %275 = getelementptr inbounds float, float* %266, i64 %index.next722
  %276 = bitcast float* %275 to <4 x float>*
  %wide.load729.1 = load <4 x float>, <4 x float>* %276, align 4, !tbaa !50
  %277 = getelementptr inbounds float, float* %275, i64 4
  %278 = bitcast float* %277 to <4 x float>*
  %wide.load730.1 = load <4 x float>, <4 x float>* %278, align 4, !tbaa !50
  %279 = fmul <4 x float> %broadcast.splat732, %wide.load729.1
  %280 = fmul <4 x float> %broadcast.splat734, %wide.load730.1
  %281 = bitcast float* %275 to <4 x float>*
  store <4 x float> %279, <4 x float>* %281, align 4, !tbaa !50
  %282 = bitcast float* %277 to <4 x float>*
  store <4 x float> %280, <4 x float>* %282, align 4, !tbaa !50
  %index.next722.1 = add i64 %index721, 16
  %niter760.nsub.1 = add i64 %niter760, -2
  %niter760.ncmp.1 = icmp eq i64 %niter760.nsub.1, 0
  br i1 %niter760.ncmp.1, label %middle.block715.unr-lcssa, label %vector.body714, !llvm.loop !344

middle.block715.unr-lcssa:                        ; preds = %vector.body714, %vector.ph718
  %index721.unr = phi i64 [ 0, %vector.ph718 ], [ %index.next722.1, %vector.body714 ]
  br i1 %lcmp.mod758, label %middle.block715, label %vector.body714.epil

vector.body714.epil:                              ; preds = %middle.block715.unr-lcssa
  %283 = getelementptr inbounds float, float* %266, i64 %index721.unr
  %284 = bitcast float* %283 to <4 x float>*
  %wide.load729.epil = load <4 x float>, <4 x float>* %284, align 4, !tbaa !50
  %285 = getelementptr inbounds float, float* %283, i64 4
  %286 = bitcast float* %285 to <4 x float>*
  %wide.load730.epil = load <4 x float>, <4 x float>* %286, align 4, !tbaa !50
  %287 = fmul <4 x float> %broadcast.splat732, %wide.load729.epil
  %288 = fmul <4 x float> %broadcast.splat734, %wide.load730.epil
  %289 = bitcast float* %283 to <4 x float>*
  store <4 x float> %287, <4 x float>* %289, align 4, !tbaa !50
  %290 = bitcast float* %285 to <4 x float>*
  store <4 x float> %288, <4 x float>* %290, align 4, !tbaa !50
  br label %middle.block715

middle.block715:                                  ; preds = %vector.body714.epil, %middle.block715.unr-lcssa
  br i1 %cmp.n724, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us.preheader

for.cond191.for.inc205_crit_edge.us.us:           ; preds = %for.body194.us.us, %middle.block715
  %indvars.iv.next543 = add nuw nsw i64 %indvars.iv542, 1
  %exitcond545 = icmp eq i64 %indvars.iv.next543, %wide.trip.count544
  br i1 %exitcond545, label %for.cond191.preheader.us.us.preheader.1, label %for.cond191.preheader.us.us

for.body194.us.us:                                ; preds = %for.body194.us.us, %for.body194.us.us.preheader
  %indvars.iv540 = phi i64 [ %indvars.iv.next541, %for.body194.us.us ], [ %indvars.iv540.ph, %for.body194.us.us.preheader ]
  %arrayidx200.us.us = getelementptr inbounds float, float* %266, i64 %indvars.iv540
  %291 = load float, float* %arrayidx200.us.us, align 4, !tbaa !50
  %mul201.us.us = fmul float %mul183, %291
  store float %mul201.us.us, float* %arrayidx200.us.us, align 4, !tbaa !50
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %exitcond = icmp eq i64 %indvars.iv.next541, %conv136
  br i1 %exitcond, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us, !llvm.loop !345

for.cond211.preheader:                            ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.end181
  br i1 %cmp142507, label %for.inc248.1, label %for.body217.lr.ph

for.body217.lr.ph:                                ; preds = %for.cond211.preheader, %for.cond144.preheader.lr.ph
  %.in = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %292 = bitcast float** %.in to i8**
  %_M_head_impl.i.i.i.i.i.i620 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_start.i460 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body217

for.body217:                                      ; preds = %for.inc245.for.body217_crit_edge, %for.body217.lr.ph
  %293 = phi i32 [ %205, %for.body217.lr.ph ], [ %.pre585, %for.inc245.for.body217_crit_edge ]
  %indvars.iv536 = phi i64 [ 0, %for.body217.lr.ph ], [ %indvars.iv.next537, %for.inc245.for.body217_crit_edge ]
  %294 = load i8*, i8** %292, align 8, !tbaa !76
  %arrayidx222 = getelementptr inbounds float*, float** %176, i64 %indvars.iv536
  %295 = bitcast float** %arrayidx222 to i8**
  %296 = load i8*, i8** %295, align 8, !tbaa !43
  %conv224 = zext i32 %293 to i64
  %mul225 = shl nuw nsw i64 %conv224, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %294, i8* align 4 %296, i64 %mul225, i1 false)
  %297 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %conv228 = zext i32 %297 to i64
  %298 = load float*, float** %.in, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %298, i64 %conv228
  %299 = bitcast float* %add.ptr.i to i8*
  %300 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %sub232 = sub i32 %300, %297
  %conv233 = zext i32 %sub232 to i64
  %mul234 = shl nuw nsw i64 %conv233, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %299, i8 0, i64 %mul234, i1 false)
  %301 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i620, align 8, !tbaa !43
  %302 = load float*, float** %.in, align 8, !tbaa !76
  %303 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i460, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i462 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %303, i64 %indvars.iv536, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i462, align 8, !tbaa !43
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %301, float* %302, %struct.kiss_fft_cpx* %304)
          to label %for.inc245 unwind label %lpad243.loopexit

for.inc245:                                       ; preds = %for.body217
  %indvars.iv.next537 = add nuw nsw i64 %indvars.iv536, 1
  %305 = load i32, i32* %27, align 8, !tbaa !65
  %306 = zext i32 %305 to i64
  %cmp216 = icmp ult i64 %indvars.iv.next537, %306
  br i1 %cmp216, label %for.inc245.for.body217_crit_edge, label %for.inc248

for.inc245.for.body217_crit_edge:                 ; preds = %for.inc245
  %.pre585 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  br label %for.body217

lpad243.loopexit:                                 ; preds = %for.body217
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad243.loopexit.split-lp:                        ; preds = %for.body217.1
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.inc248:                                       ; preds = %for.inc245
  %cmp216471.1 = icmp eq i32 %305, 0
  br i1 %cmp216471.1, label %for.inc248.1, label %for.body217.lr.ph.1

delete.notnull257:                                ; preds = %for.inc248.1
  %307 = bitcast float* %345 to i8*
  call void @_ZdaPv(i8* %307) #27
  br label %for.inc259

for.inc259:                                       ; preds = %for.inc248.1, %delete.notnull257
  %308 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %isnull256.1 = icmp eq float* %308, null
  br i1 %isnull256.1, label %for.inc259.1, label %delete.notnull257.1

for.body268:                                      ; preds = %for.inc259.1, %for.inc276
  %309 = phi i32 [ %312, %for.inc276 ], [ %330, %for.inc259.1 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc276 ], [ 0, %for.inc259.1 ]
  %arrayidx272 = getelementptr inbounds float*, float** %176, i64 %indvars.iv
  %310 = load float*, float** %arrayidx272, align 8, !tbaa !43
  %isnull273 = icmp eq float* %310, null
  br i1 %isnull273, label %for.inc276, label %delete.notnull274

delete.notnull274:                                ; preds = %for.body268
  %311 = bitcast float* %310 to i8*
  call void @_ZdaPv(i8* %311) #27
  %.pre586 = load i32, i32* %27, align 8, !tbaa !65
  br label %for.inc276

for.inc276:                                       ; preds = %delete.notnull274, %for.body268
  %312 = phi i32 [ %309, %for.body268 ], [ %.pre586, %delete.notnull274 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %313 = zext i32 %312 to i64
  %cmp267 = icmp ult i64 %indvars.iv.next, %313
  br i1 %cmp267, label %for.body268, label %for.inc284

for.inc284:                                       ; preds = %for.inc259.1, %for.inc276
  call void @_ZdaPv(i8* %call32) #27
  %.pre587 = load i32, i32* %27, align 8, !tbaa !65
  %cmp267467.1 = icmp eq i32 %.pre587, 0
  br i1 %cmp267467.1, label %for.inc284.1, label %for.body268.1

if.then.i.i.i.i.i453:                             ; preds = %for.inc284.1
  %314 = bitcast float* %328 to i8*
  call void @_ZdlPv(i8* nonnull %314) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i456

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i456:             ; preds = %for.inc284.1, %if.then.i.i.i.i.i453
  %_M_start.i.i2.i.i454 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %315 = load float*, float** %_M_start.i.i2.i.i454, align 8, !tbaa !76
  %tobool.i.i.i3.i.i455 = icmp eq float* %315, null
  br i1 %tobool.i.i.i3.i.i455, label %_ZN17CAmbisonicEncoderD2Ev.exit458, label %if.then.i.i.i4.i.i457

if.then.i.i.i4.i.i457:                            ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i456
  %316 = bitcast float* %315 to i8*
  call void @_ZdlPv(i8* nonnull %316) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit458

_ZN17CAmbisonicEncoderD2Ev.exit458:               ; preds = %if.then.i.i.i4.i.i457, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i456
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %181) #24
  br label %cleanup301

ehcleanup296:                                     ; preds = %lpad243.loopexit.split-lp, %lpad243.loopexit, %lpad137, %lpad127, %lpad124
  %.sink756 = phi { i8*, i32 } [ %249, %lpad127 ], [ %250, %lpad137 ], [ %248, %lpad124 ], [ %lpad.loopexit, %lpad243.loopexit ], [ %lpad.loopexit.split-lp, %lpad243.loopexit.split-lp ]
  %317 = extractvalue { i8*, i32 } %.sink756, 0
  %318 = extractvalue { i8*, i32 } %.sink756, 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %319 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i = icmp eq float* %319, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %ehcleanup296
  %320 = bitcast float* %319 to i8*
  call void @_ZdlPv(i8* nonnull %320) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %ehcleanup296
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %321 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i = icmp eq float* %321, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %322 = bitcast float* %321 to i8*
  call void @_ZdlPv(i8* nonnull %322) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %181) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24
  br label %ehcleanup308

cleanup301:                                       ; preds = %_ZN17CAmbisonicEncoderD2Ev.exit458, %for.body58
  %retval.3 = phi i1 [ true, %_ZN17CAmbisonicEncoderD2Ev.exit458 ], [ false, %for.body58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24
  br label %cleanup307

cleanup307:                                       ; preds = %cleanup301, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %retval.4 = phi i1 [ %retval.3, %cleanup301 ], [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  ret i1 %retval.4

ehcleanup308:                                     ; preds = %_ZN17CAmbisonicEncoderD2Ev.exit, %if.then.i.i433, %lpad.body
  %ehselector.slot.3 = phi i32 [ %318, %_ZN17CAmbisonicEncoderD2Ev.exit ], [ %21, %lpad.body ], [ %21, %if.then.i.i433 ]
  %exn.slot.3 = phi i8* [ %317, %_ZN17CAmbisonicEncoderD2Ev.exit ], [ %20, %lpad.body ], [ %20, %if.then.i.i433 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val317 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val317

for.body268.1:                                    ; preds = %for.inc276.1, %for.inc284
  %323 = phi i32 [ %326, %for.inc276.1 ], [ %.pre587, %for.inc284 ]
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc276.1 ], [ 0, %for.inc284 ]
  %arrayidx272.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv.1
  %324 = load float*, float** %arrayidx272.1, align 8, !tbaa !43
  %isnull273.1 = icmp eq float* %324, null
  br i1 %isnull273.1, label %for.inc276.1, label %delete.notnull274.1

delete.notnull274.1:                              ; preds = %for.body268.1
  %325 = bitcast float* %324 to i8*
  call void @_ZdaPv(i8* %325) #27
  %.pre588 = load i32, i32* %27, align 8, !tbaa !65
  br label %for.inc276.1

for.inc276.1:                                     ; preds = %delete.notnull274.1, %for.body268.1
  %326 = phi i32 [ %.pre588, %delete.notnull274.1 ], [ %323, %for.body268.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %327 = zext i32 %326 to i64
  %cmp267.1 = icmp ult i64 %indvars.iv.next.1, %327
  br i1 %cmp267.1, label %for.body268.1, label %for.inc284.1

for.inc284.1:                                     ; preds = %for.inc276.1, %for.inc284
  call void @_ZdaPv(i8* %178) #27
  call void @_ZdaPv(i8* nonnull %call139) #27
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !40
  %_M_start.i.i.i.i451 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %328 = load float*, float** %_M_start.i.i.i.i451, align 8, !tbaa !76
  %tobool.i.i.i.i.i452 = icmp eq float* %328, null
  br i1 %tobool.i.i.i.i.i452, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i456, label %if.then.i.i.i.i.i453

delete.notnull257.1:                              ; preds = %for.inc259
  %329 = bitcast float* %308 to i8*
  call void @_ZdaPv(i8* %329) #27
  br label %for.inc259.1

for.inc259.1:                                     ; preds = %delete.notnull257.1, %for.inc259
  %330 = load i32, i32* %27, align 8, !tbaa !65
  %cmp267467 = icmp eq i32 %330, 0
  br i1 %cmp267467, label %for.inc284, label %for.body268

for.body217.lr.ph.1:                              ; preds = %for.inc248
  %_M_start.i460.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body217.1

for.body217.1:                                    ; preds = %for.inc245.1, %for.body217.lr.ph.1
  %indvars.iv536.1 = phi i64 [ 0, %for.body217.lr.ph.1 ], [ %indvars.iv.next537.1, %for.inc245.1 ]
  %331 = load i8*, i8** %292, align 8, !tbaa !76
  %arrayidx222.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv536.1
  %332 = bitcast float** %arrayidx222.1 to i8**
  %333 = load i8*, i8** %332, align 8, !tbaa !43
  %334 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %conv224.1 = zext i32 %334 to i64
  %mul225.1 = shl nuw nsw i64 %conv224.1, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %331, i8* align 4 %333, i64 %mul225.1, i1 false)
  %335 = load i32, i32* %m_nTaps, align 4, !tbaa !299
  %conv228.1 = zext i32 %335 to i64
  %336 = load float*, float** %.in, align 8, !tbaa !76
  %add.ptr.i.1 = getelementptr inbounds float, float* %336, i64 %conv228.1
  %337 = bitcast float* %add.ptr.i.1 to i8*
  %338 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %sub232.1 = sub i32 %338, %335
  %conv233.1 = zext i32 %sub232.1 to i64
  %mul234.1 = shl nuw nsw i64 %conv233.1, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %337, i8 0, i64 %mul234.1, i1 false)
  %339 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i620, align 8, !tbaa !43
  %340 = load float*, float** %.in, align 8, !tbaa !76
  %341 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i460.1, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i462.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %341, i64 %indvars.iv536.1, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i462.1, align 8, !tbaa !43
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %339, float* %340, %struct.kiss_fft_cpx* %342)
          to label %for.inc245.1 unwind label %lpad243.loopexit.split-lp

for.inc245.1:                                     ; preds = %for.body217.1
  %indvars.iv.next537.1 = add nuw nsw i64 %indvars.iv536.1, 1
  %343 = load i32, i32* %27, align 8, !tbaa !65
  %344 = zext i32 %343 to i64
  %cmp216.1 = icmp ult i64 %indvars.iv.next537.1, %344
  br i1 %cmp216.1, label %for.body217.1, label %for.inc248.1

for.inc248.1:                                     ; preds = %for.inc245.1, %for.inc248, %for.cond211.preheader
  %345 = load float*, float** %arrayidx, align 16, !tbaa !43
  %isnull256 = icmp eq float* %345, null
  br i1 %isnull256, label %for.inc259, label %delete.notnull257

for.cond191.preheader.us.us.preheader.1:          ; preds = %for.cond191.for.inc205_crit_edge.us.us
  %wide.trip.count544.1 = zext i32 %208 to i64
  %346 = and i64 %conv136, 4294967288
  %347 = add nsw i64 %346, -8
  %348 = lshr exact i64 %347, 3
  %349 = add nuw nsw i64 %348, 1
  %min.iters.check738 = icmp ult i32 %205, 8
  %n.vec741 = and i64 %conv136, 4294967288
  %broadcast.splatinsert752 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat753 = shufflevector <4 x float> %broadcast.splatinsert752, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert754 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat755 = shufflevector <4 x float> %broadcast.splatinsert754, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter = and i64 %349, 1
  %350 = icmp eq i64 %347, 0
  %unroll_iter = sub nuw nsw i64 %349, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n745 = icmp eq i64 %n.vec741, %conv136
  br label %for.cond191.preheader.us.us.1

for.cond191.preheader.us.us.1:                    ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.cond191.preheader.us.us.preheader.1
  %indvars.iv542.1 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader.1 ], [ %indvars.iv.next543.1, %for.cond191.for.inc205_crit_edge.us.us.1 ]
  %arrayidx198.us.us.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv542.1
  %351 = load float*, float** %arrayidx198.us.us.1, align 8, !tbaa !43
  br i1 %min.iters.check738, label %for.body194.us.us.1.preheader, label %vector.ph739

vector.ph739:                                     ; preds = %for.cond191.preheader.us.us.1
  br i1 %350, label %middle.block736.unr-lcssa, label %vector.body735

vector.body735:                                   ; preds = %vector.body735, %vector.ph739
  %index742 = phi i64 [ %index.next743.1, %vector.body735 ], [ 0, %vector.ph739 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body735 ], [ %unroll_iter, %vector.ph739 ]
  %352 = getelementptr inbounds float, float* %351, i64 %index742
  %353 = bitcast float* %352 to <4 x float>*
  %wide.load750 = load <4 x float>, <4 x float>* %353, align 4, !tbaa !50
  %354 = getelementptr inbounds float, float* %352, i64 4
  %355 = bitcast float* %354 to <4 x float>*
  %wide.load751 = load <4 x float>, <4 x float>* %355, align 4, !tbaa !50
  %356 = fmul <4 x float> %broadcast.splat753, %wide.load750
  %357 = fmul <4 x float> %broadcast.splat755, %wide.load751
  %358 = bitcast float* %352 to <4 x float>*
  store <4 x float> %356, <4 x float>* %358, align 4, !tbaa !50
  %359 = bitcast float* %354 to <4 x float>*
  store <4 x float> %357, <4 x float>* %359, align 4, !tbaa !50
  %index.next743 = or i64 %index742, 8
  %360 = getelementptr inbounds float, float* %351, i64 %index.next743
  %361 = bitcast float* %360 to <4 x float>*
  %wide.load750.1 = load <4 x float>, <4 x float>* %361, align 4, !tbaa !50
  %362 = getelementptr inbounds float, float* %360, i64 4
  %363 = bitcast float* %362 to <4 x float>*
  %wide.load751.1 = load <4 x float>, <4 x float>* %363, align 4, !tbaa !50
  %364 = fmul <4 x float> %broadcast.splat753, %wide.load750.1
  %365 = fmul <4 x float> %broadcast.splat755, %wide.load751.1
  %366 = bitcast float* %360 to <4 x float>*
  store <4 x float> %364, <4 x float>* %366, align 4, !tbaa !50
  %367 = bitcast float* %362 to <4 x float>*
  store <4 x float> %365, <4 x float>* %367, align 4, !tbaa !50
  %index.next743.1 = add i64 %index742, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block736.unr-lcssa, label %vector.body735, !llvm.loop !349

middle.block736.unr-lcssa:                        ; preds = %vector.body735, %vector.ph739
  %index742.unr = phi i64 [ 0, %vector.ph739 ], [ %index.next743.1, %vector.body735 ]
  br i1 %lcmp.mod, label %middle.block736, label %vector.body735.epil

vector.body735.epil:                              ; preds = %middle.block736.unr-lcssa
  %368 = getelementptr inbounds float, float* %351, i64 %index742.unr
  %369 = bitcast float* %368 to <4 x float>*
  %wide.load750.epil = load <4 x float>, <4 x float>* %369, align 4, !tbaa !50
  %370 = getelementptr inbounds float, float* %368, i64 4
  %371 = bitcast float* %370 to <4 x float>*
  %wide.load751.epil = load <4 x float>, <4 x float>* %371, align 4, !tbaa !50
  %372 = fmul <4 x float> %broadcast.splat753, %wide.load750.epil
  %373 = fmul <4 x float> %broadcast.splat755, %wide.load751.epil
  %374 = bitcast float* %368 to <4 x float>*
  store <4 x float> %372, <4 x float>* %374, align 4, !tbaa !50
  %375 = bitcast float* %370 to <4 x float>*
  store <4 x float> %373, <4 x float>* %375, align 4, !tbaa !50
  br label %middle.block736

middle.block736:                                  ; preds = %vector.body735.epil, %middle.block736.unr-lcssa
  br i1 %cmp.n745, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1.preheader

for.body194.us.us.1.preheader:                    ; preds = %middle.block736, %for.cond191.preheader.us.us.1
  %indvars.iv540.1.ph = phi i64 [ 0, %for.cond191.preheader.us.us.1 ], [ %n.vec741, %middle.block736 ]
  br label %for.body194.us.us.1

for.body194.us.us.1:                              ; preds = %for.body194.us.us.1, %for.body194.us.us.1.preheader
  %indvars.iv540.1 = phi i64 [ %indvars.iv.next541.1, %for.body194.us.us.1 ], [ %indvars.iv540.1.ph, %for.body194.us.us.1.preheader ]
  %arrayidx200.us.us.1 = getelementptr inbounds float, float* %351, i64 %indvars.iv540.1
  %376 = load float, float* %arrayidx200.us.us.1, align 4, !tbaa !50
  %mul201.us.us.1 = fmul float %mul183, %376
  store float %mul201.us.us.1, float* %arrayidx200.us.us.1, align 4, !tbaa !50
  %indvars.iv.next541.1 = add nuw nsw i64 %indvars.iv540.1, 1
  %exitcond.1 = icmp eq i64 %indvars.iv.next541.1, %conv136
  br i1 %exitcond.1, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1, !llvm.loop !350

for.cond191.for.inc205_crit_edge.us.us.1:         ; preds = %for.body194.us.us.1, %middle.block736
  %indvars.iv.next543.1 = add nuw nsw i64 %indvars.iv542.1, 1
  %exitcond545.1 = icmp eq i64 %indvars.iv.next543.1, %wide.trip.count544.1
  br i1 %exitcond545.1, label %for.cond211.preheader, label %for.cond191.preheader.us.us.1

for.body38.us.1:                                  ; preds = %for.body38.us.1, %for.cond35.for.inc49_crit_edge.us
  %indvars.iv572.1 = phi i64 [ 0, %for.cond35.for.inc49_crit_edge.us ], [ %indvars.iv.next573.1, %for.body38.us.1 ]
  %call41.us.1 = call i8* @_Znam(i64 %34) #26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us.1, i8 0, i64 %34, i1 false)
  %arrayidx45.us.1 = getelementptr inbounds float*, float** %43, i64 %indvars.iv572.1
  %377 = bitcast float** %arrayidx45.us.1 to i8**
  store i8* %call41.us.1, i8** %377, align 8, !tbaa !43
  %indvars.iv.next573.1 = add nuw nsw i64 %indvars.iv572.1, 1
  %exitcond575.1 = icmp eq i64 %indvars.iv.next573.1, %conv31
  br i1 %exitcond575.1, label %for.cond52.preheader, label %for.body38.us.1
}

; Function Attrs: uwtable
define %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nocapture readnone %this, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* nocapture readnone %HRTFPath) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = tail call i8* @_Znwm(i64 16) #26
  %0 = bitcast i8* %call to i32 (...)***
  %i_sampleRate2.i.i = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %i_sampleRate2.i.i to i32*
  store i32 %nSampleRate, i32* %1, align 8, !tbaa !34
  %i_len.i.i = getelementptr inbounds i8, i8* %call, i64 12
  %2 = bitcast i8* %i_len.i.i to i32*
  store i32 0, i32* %2, align 4, !tbaa !39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %call.i10 = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store i32 %call.i10, i32* %2, align 4, !tbaa !39
  %3 = bitcast i8* %call to %class.HRTF*
  %cmp.i = icmp eq i32 %call.i10, 0
  br i1 %cmp.i, label %delete.notnull, label %cleanup

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %call) #27
  resume { i8*, i32 } %4

delete.notnull:                                   ; preds = %invoke.cont
  %5 = bitcast i8* %call to void (%class.HRTF*)***
  %vtable = load void (%class.HRTF*)**, void (%class.HRTF*)*** %5, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable, i64 1
  %6 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn, align 8
  tail call void %6(%class.HRTF* nonnull %3) #24
  br label %cleanup

cleanup:                                          ; preds = %delete.notnull, %invoke.cont
  %retval.0 = phi %class.HRTF* [ null, %delete.notnull ], [ %3, %invoke.cont ]
  ret %class.HRTF* %retval.0
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer5ResetEv(%class.CAmbisonicBinauralizer* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !76
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %_M_start.i8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %3 = bitcast float** %_M_start.i8 to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !76
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %conv6 = zext i32 %5 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul7, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN22CAmbisonicBinauralizer7RefreshEv(%class.CAmbisonicBinauralizer* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, float** nocapture readonly %ppfDst) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %m_nFFTSize222 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %_M_start.i566 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i563 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize236 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i558 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i554 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nFFTBins259 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i529 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %m_fFFTScaler355 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %m_nOverlapLength371 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %2 = load i8*, i8** %0, align 8, !tbaa !76
  %3 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %conv223 = zext i32 %3 to i64
  %mul224 = shl nuw nsw i64 %conv223, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul224, i1 false)
  %4 = load i32, i32* %1, align 8, !tbaa !65
  %cmp227572 = icmp eq i32 %4, 0
  br i1 %cmp227572, label %entry.for.cond351.preheader_crit_edge, label %for.body228.lr.ph

entry.for.cond351.preheader_crit_edge:            ; preds = %entry
  %.pre = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  br label %for.cond351.preheader

for.body228.lr.ph:                                ; preds = %entry
  %_M_start.i550 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body228

for.cond351.preheader:                            ; preds = %for.inc348, %entry.for.cond351.preheader_crit_edge
  %5 = phi i32 [ %.pre, %entry.for.cond351.preheader_crit_edge ], [ %82, %for.inc348 ]
  %cmp353574 = icmp eq i32 %5, 0
  br i1 %cmp353574, label %for.cond351.preheader.for.end362_crit_edge, label %for.body354.lr.ph

for.cond351.preheader.for.end362_crit_edge:       ; preds = %for.cond351.preheader
  %.pre591 = load i8*, i8** %0, align 8, !tbaa !76
  br label %for.end362

for.body354.lr.ph:                                ; preds = %for.cond351.preheader
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %7 = bitcast float* %6 to i8*
  %8 = zext i32 %5 to i64
  %min.iters.check617 = icmp ult i32 %5, 8
  br i1 %min.iters.check617, label %for.body354.preheader, label %vector.memcheck627

for.body354.preheader:                            ; preds = %middle.block615, %vector.memcheck627, %for.body354.lr.ph
  %indvars.iv585.ph = phi i64 [ 0, %vector.memcheck627 ], [ 0, %for.body354.lr.ph ], [ %n.vec630, %middle.block615 ]
  br label %for.body354

vector.memcheck627:                               ; preds = %for.body354.lr.ph
  %scevgep619 = getelementptr float, float* %6, i64 %8
  %scevgep621 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %scevgep621622 = bitcast float* %scevgep621 to i8*
  %uglygep = getelementptr i8, i8* %scevgep621622, i64 1
  %bound0623 = icmp ugt i8* %uglygep, %7
  %bound1624 = icmp ult float* %m_fFFTScaler355, %scevgep619
  %found.conflict625 = and i1 %bound0623, %bound1624
  br i1 %found.conflict625, label %for.body354.preheader, label %vector.ph628

vector.ph628:                                     ; preds = %vector.memcheck627
  %n.vec630 = and i64 %8, 4294967288
  %9 = add nsw i64 %n.vec630, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %xtraiter771 = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %middle.block615.unr-lcssa, label %vector.ph628.new

vector.ph628.new:                                 ; preds = %vector.ph628
  %unroll_iter773 = sub nuw nsw i64 %11, %xtraiter771
  %13 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !351
  %14 = insertelement <4 x float> undef, float %13, i32 0
  %15 = shufflevector <4 x float> %14, <4 x float> undef, <4 x i32> zeroinitializer
  %16 = insertelement <4 x float> undef, float %13, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !351
  %19 = insertelement <4 x float> undef, float %18, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  %21 = insertelement <4 x float> undef, float %18, i32 0
  %22 = shufflevector <4 x float> %21, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body614

vector.body614:                                   ; preds = %vector.body614, %vector.ph628.new
  %index631 = phi i64 [ 0, %vector.ph628.new ], [ %index.next632.1, %vector.body614 ]
  %niter774 = phi i64 [ %unroll_iter773, %vector.ph628.new ], [ %niter774.nsub.1, %vector.body614 ]
  %23 = getelementptr inbounds float, float* %6, i64 %index631
  %24 = bitcast float* %23 to <4 x float>*
  %wide.load639 = load <4 x float>, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %25 = getelementptr inbounds float, float* %23, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load640 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %27 = fmul <4 x float> %15, %wide.load639
  %28 = fmul <4 x float> %17, %wide.load640
  %29 = bitcast float* %23 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %30 = bitcast float* %25 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %index.next632 = or i64 %index631, 8
  %31 = getelementptr inbounds float, float* %6, i64 %index.next632
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load639.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load640.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %35 = fmul <4 x float> %20, %wide.load639.1
  %36 = fmul <4 x float> %22, %wide.load640.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %index.next632.1 = add i64 %index631, 16
  %niter774.nsub.1 = add i64 %niter774, -2
  %niter774.ncmp.1 = icmp eq i64 %niter774.nsub.1, 0
  br i1 %niter774.ncmp.1, label %middle.block615.unr-lcssa, label %vector.body614, !llvm.loop !356

middle.block615.unr-lcssa:                        ; preds = %vector.body614, %vector.ph628
  %index631.unr = phi i64 [ 0, %vector.ph628 ], [ %index.next632.1, %vector.body614 ]
  %lcmp.mod772 = icmp eq i64 %xtraiter771, 0
  br i1 %lcmp.mod772, label %middle.block615, label %vector.body614.epil

vector.body614.epil:                              ; preds = %middle.block615.unr-lcssa
  %39 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !351
  %40 = insertelement <4 x float> undef, float %39, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = insertelement <4 x float> undef, float %39, i32 0
  %43 = shufflevector <4 x float> %42, <4 x float> undef, <4 x i32> zeroinitializer
  %44 = getelementptr inbounds float, float* %6, i64 %index631.unr
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load639.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load640.epil = load <4 x float>, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %48 = fmul <4 x float> %41, %wide.load639.epil
  %49 = fmul <4 x float> %43, %wide.load640.epil
  %50 = bitcast float* %44 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  %51 = bitcast float* %46 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !50, !alias.scope !354, !noalias !351
  br label %middle.block615

middle.block615:                                  ; preds = %vector.body614.epil, %middle.block615.unr-lcssa
  %cmp.n634 = icmp eq i64 %n.vec630, %8
  br i1 %cmp.n634, label %for.end362, label %for.body354.preheader

for.body228:                                      ; preds = %for.inc348, %for.body228.lr.ph
  %indvars.iv583 = phi i64 [ 0, %for.body228.lr.ph ], [ %indvars.iv.next584, %for.inc348 ]
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i565 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %52, i64 %indvars.iv583, i32 0, i32 0, i32 0
  %53 = bitcast float** %_M_start.i565 to i8**
  %54 = load i8*, i8** %53, align 8, !tbaa !76
  %55 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i563, align 8, !tbaa !43
  %arrayidx.i564 = getelementptr inbounds float*, float** %55, i64 %indvars.iv583
  %56 = bitcast float** %arrayidx.i564 to i8**
  %57 = load i8*, i8** %56, align 8, !tbaa !43
  %58 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv237 = zext i32 %58 to i64
  %mul238 = shl nuw nsw i64 %conv237, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %57, i64 %mul238, i1 false)
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %60 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv243 = zext i32 %60 to i64
  %_M_start.i559 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %59, i64 %indvars.iv583, i32 0, i32 0, i32 0
  %61 = load float*, float** %_M_start.i559, align 8, !tbaa !76
  %add.ptr.i560 = getelementptr inbounds float, float* %61, i64 %conv243
  %62 = bitcast float* %add.ptr.i560 to i8*
  %63 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %sub247 = sub i32 %63, %60
  %conv248 = zext i32 %sub247 to i64
  %mul249 = shl nuw nsw i64 %conv248, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %62, i8 0, i64 %mul249, i1 false)
  %64 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i558, align 8, !tbaa !43
  %65 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i555 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %65, i64 %indvars.iv583, i32 0, i32 0, i32 0
  %66 = load float*, float** %_M_start.i555, align 8, !tbaa !76
  %67 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %64, float* %66, %struct.kiss_fft_cpx* %67)
  %68 = load i32, i32* %m_nFFTBins259, align 4, !tbaa !311
  %cmp260568 = icmp eq i32 %68, 0
  br i1 %cmp260568, label %for.end323, label %for.body261.lr.ph

for.body261.lr.ph:                                ; preds = %for.body228
  %69 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  %70 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i550, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i.i548 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %70, i64 %indvars.iv583, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i548, align 8, !tbaa !43
  br label %for.body261

for.body261:                                      ; preds = %for.body261, %for.body261.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body261.lr.ph ], [ %indvars.iv.next, %for.body261 ]
  %r265 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %69, i64 %indvars.iv, i32 0
  %72 = load float, float* %r265, align 4, !tbaa !232
  %r273 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %71, i64 %indvars.iv, i32 0
  %73 = load float, float* %r273, align 4, !tbaa !232
  %mul274 = fmul float %72, %73
  %i278 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %69, i64 %indvars.iv, i32 1
  %74 = load float, float* %i278, align 4, !tbaa !234
  %i286 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %71, i64 %indvars.iv, i32 1
  %75 = load float, float* %i286, align 4, !tbaa !234
  %mul287 = fmul float %74, %75
  %sub288 = fsub float %mul274, %mul287
  %mul302 = fmul float %72, %75
  %mul315 = fmul float %73, %74
  %add316 = fadd float %mul315, %mul302
  store float %sub288, float* %r265, align 4
  store float %add316, float* %i278, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %76 = load i32, i32* %m_nFFTBins259, align 4, !tbaa !311
  %77 = zext i32 %76 to i64
  %cmp260 = icmp ult i64 %indvars.iv.next, %77
  br i1 %cmp260, label %for.body261, label %for.end323

for.end323:                                       ; preds = %for.body261, %for.body228
  %78 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i529, align 8, !tbaa !43
  %79 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  %80 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i526 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %80, i64 %indvars.iv583, i32 0, i32 0, i32 0
  %81 = load float*, float** %_M_start.i526, align 8, !tbaa !76
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %78, %struct.kiss_fft_cpx* %79, float* %81)
  %82 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %cmp334570 = icmp eq i32 %82, 0
  br i1 %cmp334570, label %for.inc348, label %for.body335.lr.ph

for.body335.lr.ph:                                ; preds = %for.end323
  %83 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i522 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %83, i64 %indvars.iv583, i32 0, i32 0, i32 0
  %84 = load float*, float** %_M_start.i522, align 8, !tbaa !76
  %85 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %86 = zext i32 %82 to i64
  %min.iters.check = icmp ult i32 %82, 8
  br i1 %min.iters.check, label %for.body335.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body335.lr.ph
  %scevgep = getelementptr float, float* %85, i64 %86
  %scevgep608 = getelementptr float, float* %84, i64 %86
  %bound0 = icmp ult float* %85, %scevgep608
  %bound1 = icmp ult float* %84, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body335.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %86, 4294967288
  %87 = add nsw i64 %n.vec, -8
  %88 = lshr exact i64 %87, 3
  %89 = add nuw nsw i64 %88, 1
  %xtraiter775 = and i64 %89, 1
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter777 = sub nuw nsw i64 %89, %xtraiter775
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter778 = phi i64 [ %unroll_iter777, %vector.ph.new ], [ %niter778.nsub.1, %vector.body ]
  %91 = getelementptr inbounds float, float* %84, i64 %index
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %92, align 4, !tbaa !50, !alias.scope !360
  %93 = getelementptr inbounds float, float* %91, i64 4
  %94 = bitcast float* %93 to <4 x float>*
  %wide.load611 = load <4 x float>, <4 x float>* %94, align 4, !tbaa !50, !alias.scope !360
  %95 = getelementptr inbounds float, float* %85, i64 %index
  %96 = bitcast float* %95 to <4 x float>*
  %wide.load612 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %97 = getelementptr inbounds float, float* %95, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load613 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %99 = fadd <4 x float> %wide.load, %wide.load612
  %100 = fadd <4 x float> %wide.load611, %wide.load613
  %101 = bitcast float* %95 to <4 x float>*
  store <4 x float> %99, <4 x float>* %101, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %102 = bitcast float* %97 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %index.next = or i64 %index, 8
  %103 = getelementptr inbounds float, float* %84, i64 %index.next
  %104 = bitcast float* %103 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %104, align 4, !tbaa !50, !alias.scope !360
  %105 = getelementptr inbounds float, float* %103, i64 4
  %106 = bitcast float* %105 to <4 x float>*
  %wide.load611.1 = load <4 x float>, <4 x float>* %106, align 4, !tbaa !50, !alias.scope !360
  %107 = getelementptr inbounds float, float* %85, i64 %index.next
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load612.1 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %109 = getelementptr inbounds float, float* %107, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load613.1 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %111 = fadd <4 x float> %wide.load.1, %wide.load612.1
  %112 = fadd <4 x float> %wide.load611.1, %wide.load613.1
  %113 = bitcast float* %107 to <4 x float>*
  store <4 x float> %111, <4 x float>* %113, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %114 = bitcast float* %109 to <4 x float>*
  store <4 x float> %112, <4 x float>* %114, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %index.next.1 = add i64 %index, 16
  %niter778.nsub.1 = add i64 %niter778, -2
  %niter778.ncmp.1 = icmp eq i64 %niter778.nsub.1, 0
  br i1 %niter778.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !365

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod776 = icmp eq i64 %xtraiter775, 0
  br i1 %lcmp.mod776, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %115 = getelementptr inbounds float, float* %84, i64 %index.unr
  %116 = bitcast float* %115 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %116, align 4, !tbaa !50, !alias.scope !360
  %117 = getelementptr inbounds float, float* %115, i64 4
  %118 = bitcast float* %117 to <4 x float>*
  %wide.load611.epil = load <4 x float>, <4 x float>* %118, align 4, !tbaa !50, !alias.scope !360
  %119 = getelementptr inbounds float, float* %85, i64 %index.unr
  %120 = bitcast float* %119 to <4 x float>*
  %wide.load612.epil = load <4 x float>, <4 x float>* %120, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %121 = getelementptr inbounds float, float* %119, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load613.epil = load <4 x float>, <4 x float>* %122, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %123 = fadd <4 x float> %wide.load.epil, %wide.load612.epil
  %124 = fadd <4 x float> %wide.load611.epil, %wide.load613.epil
  %125 = bitcast float* %119 to <4 x float>*
  store <4 x float> %123, <4 x float>* %125, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  %126 = bitcast float* %121 to <4 x float>*
  store <4 x float> %124, <4 x float>* %126, align 4, !tbaa !50, !alias.scope !363, !noalias !360
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %86
  br i1 %cmp.n, label %for.inc348, label %for.body335.preheader

for.body335.preheader:                            ; preds = %middle.block, %vector.memcheck, %for.body335.lr.ph
  %indvars.iv581.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body335.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body335

for.body335:                                      ; preds = %for.body335, %for.body335.preheader
  %indvars.iv581 = phi i64 [ %indvars.iv.next582, %for.body335 ], [ %indvars.iv581.ph, %for.body335.preheader ]
  %add.ptr.i523 = getelementptr inbounds float, float* %84, i64 %indvars.iv581
  %127 = load float, float* %add.ptr.i523, align 4, !tbaa !50
  %add.ptr.i521 = getelementptr inbounds float, float* %85, i64 %indvars.iv581
  %128 = load float, float* %add.ptr.i521, align 4, !tbaa !50
  %add344 = fadd float %127, %128
  store float %add344, float* %add.ptr.i521, align 4, !tbaa !50
  %indvars.iv.next582 = add nuw nsw i64 %indvars.iv581, 1
  %cmp334 = icmp ult i64 %indvars.iv.next582, %86
  br i1 %cmp334, label %for.body335, label %for.inc348, !llvm.loop !366

for.inc348:                                       ; preds = %for.body335, %middle.block, %for.end323
  %indvars.iv.next584 = add nuw nsw i64 %indvars.iv583, 1
  %129 = load i32, i32* %1, align 8, !tbaa !65
  %130 = zext i32 %129 to i64
  %cmp227 = icmp ult i64 %indvars.iv.next584, %130
  br i1 %cmp227, label %for.body228, label %for.cond351.preheader

for.body354:                                      ; preds = %for.body354, %for.body354.preheader
  %indvars.iv585 = phi i64 [ %indvars.iv.next586, %for.body354 ], [ %indvars.iv585.ph, %for.body354.preheader ]
  %131 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312
  %add.ptr.i519 = getelementptr inbounds float, float* %6, i64 %indvars.iv585
  %132 = load float, float* %add.ptr.i519, align 4, !tbaa !50
  %mul359 = fmul float %131, %132
  store float %mul359, float* %add.ptr.i519, align 4, !tbaa !50
  %indvars.iv.next586 = add nuw nsw i64 %indvars.iv585, 1
  %cmp353 = icmp ult i64 %indvars.iv.next586, %8
  br i1 %cmp353, label %for.body354, label %for.end362, !llvm.loop !367

for.end362:                                       ; preds = %for.body354, %middle.block615, %for.cond351.preheader.for.end362_crit_edge
  %133 = phi i8* [ %.pre591, %for.cond351.preheader.for.end362_crit_edge ], [ %7, %middle.block615 ], [ %7, %for.body354 ]
  %134 = bitcast float** %ppfDst to i8**
  %135 = load i8*, i8** %134, align 8, !tbaa !43
  %136 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv368 = zext i32 %136 to i64
  %mul369 = shl nuw nsw i64 %conv368, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* align 4 %133, i64 %mul369, i1 false)
  %137 = load i32, i32* %m_nOverlapLength371, align 4, !tbaa !309
  %cmp372576 = icmp eq i32 %137, 0
  %arrayidx376 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  br i1 %cmp372576, label %for.end362.for.end386_crit_edge, label %for.body373.lr.ph

for.end362.for.end386_crit_edge:                  ; preds = %for.end362
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %arrayidx376 to i8**
  %.pre592 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !76
  br label %for.end386

for.body373.lr.ph:                                ; preds = %for.end362
  %_M_start.i515 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx376, i64 0, i32 0, i32 0, i32 0
  %138 = load float*, float** %_M_start.i515, align 8, !tbaa !76
  %139 = bitcast float* %138 to i8*
  %140 = load float*, float** %ppfDst, align 8, !tbaa !43
  %141 = zext i32 %137 to i64
  %min.iters.check644 = icmp ult i32 %137, 8
  br i1 %min.iters.check644, label %for.body373.preheader, label %vector.memcheck654

vector.memcheck654:                               ; preds = %for.body373.lr.ph
  %scevgep646 = getelementptr float, float* %140, i64 %141
  %scevgep648 = getelementptr float, float* %138, i64 %141
  %bound0650 = icmp ult float* %140, %scevgep648
  %bound1651 = icmp ult float* %138, %scevgep646
  %found.conflict652 = and i1 %bound0650, %bound1651
  br i1 %found.conflict652, label %for.body373.preheader, label %vector.ph655

vector.ph655:                                     ; preds = %vector.memcheck654
  %n.vec657 = and i64 %141, 4294967288
  %142 = add nsw i64 %n.vec657, -8
  %143 = lshr exact i64 %142, 3
  %144 = add nuw nsw i64 %143, 1
  %xtraiter767 = and i64 %144, 1
  %145 = icmp eq i64 %142, 0
  br i1 %145, label %middle.block642.unr-lcssa, label %vector.ph655.new

vector.ph655.new:                                 ; preds = %vector.ph655
  %unroll_iter769 = sub nuw nsw i64 %144, %xtraiter767
  br label %vector.body641

vector.body641:                                   ; preds = %vector.body641, %vector.ph655.new
  %index658 = phi i64 [ 0, %vector.ph655.new ], [ %index.next659.1, %vector.body641 ]
  %niter770 = phi i64 [ %unroll_iter769, %vector.ph655.new ], [ %niter770.nsub.1, %vector.body641 ]
  %146 = getelementptr inbounds float, float* %138, i64 %index658
  %147 = bitcast float* %146 to <4 x float>*
  %wide.load666 = load <4 x float>, <4 x float>* %147, align 4, !tbaa !50, !alias.scope !368
  %148 = getelementptr inbounds float, float* %146, i64 4
  %149 = bitcast float* %148 to <4 x float>*
  %wide.load667 = load <4 x float>, <4 x float>* %149, align 4, !tbaa !50, !alias.scope !368
  %150 = getelementptr inbounds float, float* %140, i64 %index658
  %151 = bitcast float* %150 to <4 x float>*
  %wide.load668 = load <4 x float>, <4 x float>* %151, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %152 = getelementptr inbounds float, float* %150, i64 4
  %153 = bitcast float* %152 to <4 x float>*
  %wide.load669 = load <4 x float>, <4 x float>* %153, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %154 = fadd <4 x float> %wide.load666, %wide.load668
  %155 = fadd <4 x float> %wide.load667, %wide.load669
  %156 = bitcast float* %150 to <4 x float>*
  store <4 x float> %154, <4 x float>* %156, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %157 = bitcast float* %152 to <4 x float>*
  store <4 x float> %155, <4 x float>* %157, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %index.next659 = or i64 %index658, 8
  %158 = getelementptr inbounds float, float* %138, i64 %index.next659
  %159 = bitcast float* %158 to <4 x float>*
  %wide.load666.1 = load <4 x float>, <4 x float>* %159, align 4, !tbaa !50, !alias.scope !368
  %160 = getelementptr inbounds float, float* %158, i64 4
  %161 = bitcast float* %160 to <4 x float>*
  %wide.load667.1 = load <4 x float>, <4 x float>* %161, align 4, !tbaa !50, !alias.scope !368
  %162 = getelementptr inbounds float, float* %140, i64 %index.next659
  %163 = bitcast float* %162 to <4 x float>*
  %wide.load668.1 = load <4 x float>, <4 x float>* %163, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %164 = getelementptr inbounds float, float* %162, i64 4
  %165 = bitcast float* %164 to <4 x float>*
  %wide.load669.1 = load <4 x float>, <4 x float>* %165, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %166 = fadd <4 x float> %wide.load666.1, %wide.load668.1
  %167 = fadd <4 x float> %wide.load667.1, %wide.load669.1
  %168 = bitcast float* %162 to <4 x float>*
  store <4 x float> %166, <4 x float>* %168, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %169 = bitcast float* %164 to <4 x float>*
  store <4 x float> %167, <4 x float>* %169, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %index.next659.1 = add i64 %index658, 16
  %niter770.nsub.1 = add i64 %niter770, -2
  %niter770.ncmp.1 = icmp eq i64 %niter770.nsub.1, 0
  br i1 %niter770.ncmp.1, label %middle.block642.unr-lcssa, label %vector.body641, !llvm.loop !373

middle.block642.unr-lcssa:                        ; preds = %vector.body641, %vector.ph655
  %index658.unr = phi i64 [ 0, %vector.ph655 ], [ %index.next659.1, %vector.body641 ]
  %lcmp.mod768 = icmp eq i64 %xtraiter767, 0
  br i1 %lcmp.mod768, label %middle.block642, label %vector.body641.epil

vector.body641.epil:                              ; preds = %middle.block642.unr-lcssa
  %170 = getelementptr inbounds float, float* %138, i64 %index658.unr
  %171 = bitcast float* %170 to <4 x float>*
  %wide.load666.epil = load <4 x float>, <4 x float>* %171, align 4, !tbaa !50, !alias.scope !368
  %172 = getelementptr inbounds float, float* %170, i64 4
  %173 = bitcast float* %172 to <4 x float>*
  %wide.load667.epil = load <4 x float>, <4 x float>* %173, align 4, !tbaa !50, !alias.scope !368
  %174 = getelementptr inbounds float, float* %140, i64 %index658.unr
  %175 = bitcast float* %174 to <4 x float>*
  %wide.load668.epil = load <4 x float>, <4 x float>* %175, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %176 = getelementptr inbounds float, float* %174, i64 4
  %177 = bitcast float* %176 to <4 x float>*
  %wide.load669.epil = load <4 x float>, <4 x float>* %177, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %178 = fadd <4 x float> %wide.load666.epil, %wide.load668.epil
  %179 = fadd <4 x float> %wide.load667.epil, %wide.load669.epil
  %180 = bitcast float* %174 to <4 x float>*
  store <4 x float> %178, <4 x float>* %180, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  %181 = bitcast float* %176 to <4 x float>*
  store <4 x float> %179, <4 x float>* %181, align 4, !tbaa !50, !alias.scope !371, !noalias !368
  br label %middle.block642

middle.block642:                                  ; preds = %vector.body641.epil, %middle.block642.unr-lcssa
  %cmp.n661 = icmp eq i64 %n.vec657, %141
  br i1 %cmp.n661, label %for.end386.loopexit, label %for.body373.preheader

for.body373.preheader:                            ; preds = %middle.block642, %vector.memcheck654, %for.body373.lr.ph
  %indvars.iv587.ph = phi i64 [ 0, %vector.memcheck654 ], [ 0, %for.body373.lr.ph ], [ %n.vec657, %middle.block642 ]
  br label %for.body373

for.body373:                                      ; preds = %for.body373, %for.body373.preheader
  %indvars.iv587 = phi i64 [ %indvars.iv.next588, %for.body373 ], [ %indvars.iv587.ph, %for.body373.preheader ]
  %add.ptr.i516 = getelementptr inbounds float, float* %138, i64 %indvars.iv587
  %182 = load float, float* %add.ptr.i516, align 4, !tbaa !50
  %arrayidx382 = getelementptr inbounds float, float* %140, i64 %indvars.iv587
  %183 = load float, float* %arrayidx382, align 4, !tbaa !50
  %add383 = fadd float %182, %183
  store float %add383, float* %arrayidx382, align 4, !tbaa !50
  %indvars.iv.next588 = add nuw nsw i64 %indvars.iv587, 1
  %cmp372 = icmp ult i64 %indvars.iv.next588, %141
  br i1 %cmp372, label %for.body373, label %for.end386.loopexit, !llvm.loop !374

for.end386.loopexit:                              ; preds = %for.body373, %middle.block642
  %phitmp = zext i32 %137 to i64
  %phitmp600 = shl nuw nsw i64 %phitmp, 2
  br label %for.end386

for.end386:                                       ; preds = %for.end386.loopexit, %for.end362.for.end386_crit_edge
  %184 = phi i8* [ %.pre592, %for.end362.for.end386_crit_edge ], [ %139, %for.end386.loopexit ]
  %.lcssa = phi i64 [ 0, %for.end362.for.end386_crit_edge ], [ %phitmp600, %for.end386.loopexit ]
  %185 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv393 = zext i32 %185 to i64
  %186 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i = getelementptr inbounds float, float* %186, i64 %conv393
  %187 = bitcast float* %add.ptr.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* nonnull align 4 %187, i64 %.lcssa, i1 false)
  %188 = load i8*, i8** %0, align 8, !tbaa !76
  %189 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %conv223.1 = zext i32 %189 to i64
  %mul224.1 = shl nuw nsw i64 %conv223.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %188, i8 0, i64 %mul224.1, i1 false)
  %190 = load i32, i32* %1, align 8, !tbaa !65
  %cmp227572.1 = icmp eq i32 %190, 0
  br i1 %cmp227572.1, label %for.end386.for.cond351.preheader.1_crit_edge, label %for.body228.lr.ph.1

for.end386.for.cond351.preheader.1_crit_edge:     ; preds = %for.end386
  %.pre593 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  br label %for.cond351.preheader.1

for.body228.lr.ph.1:                              ; preds = %for.end386
  %_M_start.i550.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body228.1

for.body228.1:                                    ; preds = %for.inc348.1, %for.body228.lr.ph.1
  %indvars.iv583.1 = phi i64 [ 0, %for.body228.lr.ph.1 ], [ %indvars.iv.next584.1, %for.inc348.1 ]
  %191 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i565.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %191, i64 %indvars.iv583.1, i32 0, i32 0, i32 0
  %192 = bitcast float** %_M_start.i565.1 to i8**
  %193 = load i8*, i8** %192, align 8, !tbaa !76
  %194 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i563, align 8, !tbaa !43
  %arrayidx.i564.1 = getelementptr inbounds float*, float** %194, i64 %indvars.iv583.1
  %195 = bitcast float** %arrayidx.i564.1 to i8**
  %196 = load i8*, i8** %195, align 8, !tbaa !43
  %197 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv237.1 = zext i32 %197 to i64
  %mul238.1 = shl nuw nsw i64 %conv237.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %196, i64 %mul238.1, i1 false)
  %198 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %199 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv243.1 = zext i32 %199 to i64
  %_M_start.i559.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %198, i64 %indvars.iv583.1, i32 0, i32 0, i32 0
  %200 = load float*, float** %_M_start.i559.1, align 8, !tbaa !76
  %add.ptr.i560.1 = getelementptr inbounds float, float* %200, i64 %conv243.1
  %201 = bitcast float* %add.ptr.i560.1 to i8*
  %202 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %sub247.1 = sub i32 %202, %199
  %conv248.1 = zext i32 %sub247.1 to i64
  %mul249.1 = shl nuw nsw i64 %conv248.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %201, i8 0, i64 %mul249.1, i1 false)
  %203 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i558, align 8, !tbaa !43
  %204 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i555.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %204, i64 %indvars.iv583.1, i32 0, i32 0, i32 0
  %205 = load float*, float** %_M_start.i555.1, align 8, !tbaa !76
  %206 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %203, float* %205, %struct.kiss_fft_cpx* %206)
  %207 = load i32, i32* %m_nFFTBins259, align 4, !tbaa !311
  %cmp260568.1 = icmp eq i32 %207, 0
  br i1 %cmp260568.1, label %for.end323.1, label %for.body261.lr.ph.1

for.body261.lr.ph.1:                              ; preds = %for.body228.1
  %208 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  %209 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i550.1, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i.i548.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %209, i64 %indvars.iv583.1, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i548.1, align 8, !tbaa !43
  br label %for.body261.1

for.body261.1:                                    ; preds = %for.body261.1, %for.body261.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body261.lr.ph.1 ], [ %indvars.iv.next.1, %for.body261.1 ]
  %r265.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %208, i64 %indvars.iv.1, i32 0
  %211 = load float, float* %r265.1, align 4, !tbaa !232
  %r273.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %210, i64 %indvars.iv.1, i32 0
  %212 = load float, float* %r273.1, align 4, !tbaa !232
  %mul274.1 = fmul float %211, %212
  %i278.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %208, i64 %indvars.iv.1, i32 1
  %213 = load float, float* %i278.1, align 4, !tbaa !234
  %i286.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %210, i64 %indvars.iv.1, i32 1
  %214 = load float, float* %i286.1, align 4, !tbaa !234
  %mul287.1 = fmul float %213, %214
  %sub288.1 = fsub float %mul274.1, %mul287.1
  %mul302.1 = fmul float %211, %214
  %mul315.1 = fmul float %212, %213
  %add316.1 = fadd float %mul315.1, %mul302.1
  store float %sub288.1, float* %r265.1, align 4
  store float %add316.1, float* %i278.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %215 = load i32, i32* %m_nFFTBins259, align 4, !tbaa !311
  %216 = zext i32 %215 to i64
  %cmp260.1 = icmp ult i64 %indvars.iv.next.1, %216
  br i1 %cmp260.1, label %for.body261.1, label %for.end323.1

for.end323.1:                                     ; preds = %for.body261.1, %for.body228.1
  %217 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i529, align 8, !tbaa !43
  %218 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i554, align 8, !tbaa !43
  %219 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i526.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %219, i64 %indvars.iv583.1, i32 0, i32 0, i32 0
  %220 = load float*, float** %_M_start.i526.1, align 8, !tbaa !76
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %217, %struct.kiss_fft_cpx* %218, float* %220)
  %221 = load i32, i32* %m_nFFTSize222, align 8, !tbaa !310
  %cmp334570.1 = icmp eq i32 %221, 0
  br i1 %cmp334570.1, label %for.inc348.1, label %for.body335.lr.ph.1

for.body335.lr.ph.1:                              ; preds = %for.end323.1
  %222 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i566, align 8, !tbaa !357
  %_M_start.i522.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %222, i64 %indvars.iv583.1, i32 0, i32 0, i32 0
  %223 = load float*, float** %_M_start.i522.1, align 8, !tbaa !76
  %224 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %225 = zext i32 %221 to i64
  %min.iters.check673 = icmp ult i32 %221, 8
  br i1 %min.iters.check673, label %for.body335.1.preheader, label %vector.memcheck683

vector.memcheck683:                               ; preds = %for.body335.lr.ph.1
  %scevgep675 = getelementptr float, float* %224, i64 %225
  %scevgep677 = getelementptr float, float* %223, i64 %225
  %bound0679 = icmp ult float* %224, %scevgep677
  %bound1680 = icmp ult float* %223, %scevgep675
  %found.conflict681 = and i1 %bound0679, %bound1680
  br i1 %found.conflict681, label %for.body335.1.preheader, label %vector.ph684

vector.ph684:                                     ; preds = %vector.memcheck683
  %n.vec686 = and i64 %225, 4294967288
  %226 = add nsw i64 %n.vec686, -8
  %227 = lshr exact i64 %226, 3
  %228 = add nuw nsw i64 %227, 1
  %xtraiter763 = and i64 %228, 1
  %229 = icmp eq i64 %226, 0
  br i1 %229, label %middle.block671.unr-lcssa, label %vector.ph684.new

vector.ph684.new:                                 ; preds = %vector.ph684
  %unroll_iter765 = sub nuw nsw i64 %228, %xtraiter763
  br label %vector.body670

vector.body670:                                   ; preds = %vector.body670, %vector.ph684.new
  %index687 = phi i64 [ 0, %vector.ph684.new ], [ %index.next688.1, %vector.body670 ]
  %niter766 = phi i64 [ %unroll_iter765, %vector.ph684.new ], [ %niter766.nsub.1, %vector.body670 ]
  %230 = getelementptr inbounds float, float* %223, i64 %index687
  %231 = bitcast float* %230 to <4 x float>*
  %wide.load695 = load <4 x float>, <4 x float>* %231, align 4, !tbaa !50, !alias.scope !375
  %232 = getelementptr inbounds float, float* %230, i64 4
  %233 = bitcast float* %232 to <4 x float>*
  %wide.load696 = load <4 x float>, <4 x float>* %233, align 4, !tbaa !50, !alias.scope !375
  %234 = getelementptr inbounds float, float* %224, i64 %index687
  %235 = bitcast float* %234 to <4 x float>*
  %wide.load697 = load <4 x float>, <4 x float>* %235, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %236 = getelementptr inbounds float, float* %234, i64 4
  %237 = bitcast float* %236 to <4 x float>*
  %wide.load698 = load <4 x float>, <4 x float>* %237, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %238 = fadd <4 x float> %wide.load695, %wide.load697
  %239 = fadd <4 x float> %wide.load696, %wide.load698
  %240 = bitcast float* %234 to <4 x float>*
  store <4 x float> %238, <4 x float>* %240, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %241 = bitcast float* %236 to <4 x float>*
  store <4 x float> %239, <4 x float>* %241, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %index.next688 = or i64 %index687, 8
  %242 = getelementptr inbounds float, float* %223, i64 %index.next688
  %243 = bitcast float* %242 to <4 x float>*
  %wide.load695.1 = load <4 x float>, <4 x float>* %243, align 4, !tbaa !50, !alias.scope !375
  %244 = getelementptr inbounds float, float* %242, i64 4
  %245 = bitcast float* %244 to <4 x float>*
  %wide.load696.1 = load <4 x float>, <4 x float>* %245, align 4, !tbaa !50, !alias.scope !375
  %246 = getelementptr inbounds float, float* %224, i64 %index.next688
  %247 = bitcast float* %246 to <4 x float>*
  %wide.load697.1 = load <4 x float>, <4 x float>* %247, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %248 = getelementptr inbounds float, float* %246, i64 4
  %249 = bitcast float* %248 to <4 x float>*
  %wide.load698.1 = load <4 x float>, <4 x float>* %249, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %250 = fadd <4 x float> %wide.load695.1, %wide.load697.1
  %251 = fadd <4 x float> %wide.load696.1, %wide.load698.1
  %252 = bitcast float* %246 to <4 x float>*
  store <4 x float> %250, <4 x float>* %252, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %253 = bitcast float* %248 to <4 x float>*
  store <4 x float> %251, <4 x float>* %253, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %index.next688.1 = add i64 %index687, 16
  %niter766.nsub.1 = add i64 %niter766, -2
  %niter766.ncmp.1 = icmp eq i64 %niter766.nsub.1, 0
  br i1 %niter766.ncmp.1, label %middle.block671.unr-lcssa, label %vector.body670, !llvm.loop !380

middle.block671.unr-lcssa:                        ; preds = %vector.body670, %vector.ph684
  %index687.unr = phi i64 [ 0, %vector.ph684 ], [ %index.next688.1, %vector.body670 ]
  %lcmp.mod764 = icmp eq i64 %xtraiter763, 0
  br i1 %lcmp.mod764, label %middle.block671, label %vector.body670.epil

vector.body670.epil:                              ; preds = %middle.block671.unr-lcssa
  %254 = getelementptr inbounds float, float* %223, i64 %index687.unr
  %255 = bitcast float* %254 to <4 x float>*
  %wide.load695.epil = load <4 x float>, <4 x float>* %255, align 4, !tbaa !50, !alias.scope !375
  %256 = getelementptr inbounds float, float* %254, i64 4
  %257 = bitcast float* %256 to <4 x float>*
  %wide.load696.epil = load <4 x float>, <4 x float>* %257, align 4, !tbaa !50, !alias.scope !375
  %258 = getelementptr inbounds float, float* %224, i64 %index687.unr
  %259 = bitcast float* %258 to <4 x float>*
  %wide.load697.epil = load <4 x float>, <4 x float>* %259, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %260 = getelementptr inbounds float, float* %258, i64 4
  %261 = bitcast float* %260 to <4 x float>*
  %wide.load698.epil = load <4 x float>, <4 x float>* %261, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %262 = fadd <4 x float> %wide.load695.epil, %wide.load697.epil
  %263 = fadd <4 x float> %wide.load696.epil, %wide.load698.epil
  %264 = bitcast float* %258 to <4 x float>*
  store <4 x float> %262, <4 x float>* %264, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  %265 = bitcast float* %260 to <4 x float>*
  store <4 x float> %263, <4 x float>* %265, align 4, !tbaa !50, !alias.scope !378, !noalias !375
  br label %middle.block671

middle.block671:                                  ; preds = %vector.body670.epil, %middle.block671.unr-lcssa
  %cmp.n690 = icmp eq i64 %n.vec686, %225
  br i1 %cmp.n690, label %for.inc348.1, label %for.body335.1.preheader

for.body335.1.preheader:                          ; preds = %middle.block671, %vector.memcheck683, %for.body335.lr.ph.1
  %indvars.iv581.1.ph = phi i64 [ 0, %vector.memcheck683 ], [ 0, %for.body335.lr.ph.1 ], [ %n.vec686, %middle.block671 ]
  br label %for.body335.1

for.body335.1:                                    ; preds = %for.body335.1, %for.body335.1.preheader
  %indvars.iv581.1 = phi i64 [ %indvars.iv.next582.1, %for.body335.1 ], [ %indvars.iv581.1.ph, %for.body335.1.preheader ]
  %add.ptr.i523.1 = getelementptr inbounds float, float* %223, i64 %indvars.iv581.1
  %266 = load float, float* %add.ptr.i523.1, align 4, !tbaa !50
  %add.ptr.i521.1 = getelementptr inbounds float, float* %224, i64 %indvars.iv581.1
  %267 = load float, float* %add.ptr.i521.1, align 4, !tbaa !50
  %add344.1 = fadd float %266, %267
  store float %add344.1, float* %add.ptr.i521.1, align 4, !tbaa !50
  %indvars.iv.next582.1 = add nuw nsw i64 %indvars.iv581.1, 1
  %cmp334.1 = icmp ult i64 %indvars.iv.next582.1, %225
  br i1 %cmp334.1, label %for.body335.1, label %for.inc348.1, !llvm.loop !381

for.inc348.1:                                     ; preds = %for.body335.1, %middle.block671, %for.end323.1
  %indvars.iv.next584.1 = add nuw nsw i64 %indvars.iv583.1, 1
  %268 = load i32, i32* %1, align 8, !tbaa !65
  %269 = zext i32 %268 to i64
  %cmp227.1 = icmp ult i64 %indvars.iv.next584.1, %269
  br i1 %cmp227.1, label %for.body228.1, label %for.cond351.preheader.1

for.cond351.preheader.1:                          ; preds = %for.inc348.1, %for.end386.for.cond351.preheader.1_crit_edge
  %270 = phi i32 [ %.pre593, %for.end386.for.cond351.preheader.1_crit_edge ], [ %221, %for.inc348.1 ]
  %cmp353574.1 = icmp eq i32 %270, 0
  br i1 %cmp353574.1, label %for.cond351.preheader.1.for.end362.1_crit_edge, label %for.body354.lr.ph.1

for.cond351.preheader.1.for.end362.1_crit_edge:   ; preds = %for.cond351.preheader.1
  %.pre594 = load i8*, i8** %0, align 8, !tbaa !76
  br label %for.end362.1

for.body354.lr.ph.1:                              ; preds = %for.cond351.preheader.1
  %271 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %272 = bitcast float* %271 to i8*
  %273 = zext i32 %270 to i64
  %min.iters.check702 = icmp ult i32 %270, 8
  br i1 %min.iters.check702, label %for.body354.1.preheader, label %vector.memcheck714

vector.memcheck714:                               ; preds = %for.body354.lr.ph.1
  %scevgep704 = getelementptr float, float* %271, i64 %273
  %scevgep706 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %scevgep706707 = bitcast float* %scevgep706 to i8*
  %uglygep708 = getelementptr i8, i8* %scevgep706707, i64 1
  %bound0710 = icmp ugt i8* %uglygep708, %272
  %bound1711 = icmp ult float* %m_fFFTScaler355, %scevgep704
  %found.conflict712 = and i1 %bound0710, %bound1711
  br i1 %found.conflict712, label %for.body354.1.preheader, label %vector.ph715

vector.ph715:                                     ; preds = %vector.memcheck714
  %n.vec717 = and i64 %273, 4294967288
  %274 = add nsw i64 %n.vec717, -8
  %275 = lshr exact i64 %274, 3
  %276 = add nuw nsw i64 %275, 1
  %xtraiter759 = and i64 %276, 1
  %277 = icmp eq i64 %274, 0
  br i1 %277, label %middle.block700.unr-lcssa, label %vector.ph715.new

vector.ph715.new:                                 ; preds = %vector.ph715
  %unroll_iter761 = sub nuw nsw i64 %276, %xtraiter759
  %278 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !382
  %279 = insertelement <4 x float> undef, float %278, i32 0
  %280 = shufflevector <4 x float> %279, <4 x float> undef, <4 x i32> zeroinitializer
  %281 = insertelement <4 x float> undef, float %278, i32 0
  %282 = shufflevector <4 x float> %281, <4 x float> undef, <4 x i32> zeroinitializer
  %283 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !382
  %284 = insertelement <4 x float> undef, float %283, i32 0
  %285 = shufflevector <4 x float> %284, <4 x float> undef, <4 x i32> zeroinitializer
  %286 = insertelement <4 x float> undef, float %283, i32 0
  %287 = shufflevector <4 x float> %286, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body699

vector.body699:                                   ; preds = %vector.body699, %vector.ph715.new
  %index718 = phi i64 [ 0, %vector.ph715.new ], [ %index.next719.1, %vector.body699 ]
  %niter762 = phi i64 [ %unroll_iter761, %vector.ph715.new ], [ %niter762.nsub.1, %vector.body699 ]
  %288 = getelementptr inbounds float, float* %271, i64 %index718
  %289 = bitcast float* %288 to <4 x float>*
  %wide.load726 = load <4 x float>, <4 x float>* %289, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %290 = getelementptr inbounds float, float* %288, i64 4
  %291 = bitcast float* %290 to <4 x float>*
  %wide.load727 = load <4 x float>, <4 x float>* %291, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %292 = fmul <4 x float> %280, %wide.load726
  %293 = fmul <4 x float> %282, %wide.load727
  %294 = bitcast float* %288 to <4 x float>*
  store <4 x float> %292, <4 x float>* %294, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %295 = bitcast float* %290 to <4 x float>*
  store <4 x float> %293, <4 x float>* %295, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %index.next719 = or i64 %index718, 8
  %296 = getelementptr inbounds float, float* %271, i64 %index.next719
  %297 = bitcast float* %296 to <4 x float>*
  %wide.load726.1 = load <4 x float>, <4 x float>* %297, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %298 = getelementptr inbounds float, float* %296, i64 4
  %299 = bitcast float* %298 to <4 x float>*
  %wide.load727.1 = load <4 x float>, <4 x float>* %299, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %300 = fmul <4 x float> %285, %wide.load726.1
  %301 = fmul <4 x float> %287, %wide.load727.1
  %302 = bitcast float* %296 to <4 x float>*
  store <4 x float> %300, <4 x float>* %302, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %303 = bitcast float* %298 to <4 x float>*
  store <4 x float> %301, <4 x float>* %303, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %index.next719.1 = add i64 %index718, 16
  %niter762.nsub.1 = add i64 %niter762, -2
  %niter762.ncmp.1 = icmp eq i64 %niter762.nsub.1, 0
  br i1 %niter762.ncmp.1, label %middle.block700.unr-lcssa, label %vector.body699, !llvm.loop !387

middle.block700.unr-lcssa:                        ; preds = %vector.body699, %vector.ph715
  %index718.unr = phi i64 [ 0, %vector.ph715 ], [ %index.next719.1, %vector.body699 ]
  %lcmp.mod760 = icmp eq i64 %xtraiter759, 0
  br i1 %lcmp.mod760, label %middle.block700, label %vector.body699.epil

vector.body699.epil:                              ; preds = %middle.block700.unr-lcssa
  %304 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312, !alias.scope !382
  %305 = insertelement <4 x float> undef, float %304, i32 0
  %306 = shufflevector <4 x float> %305, <4 x float> undef, <4 x i32> zeroinitializer
  %307 = insertelement <4 x float> undef, float %304, i32 0
  %308 = shufflevector <4 x float> %307, <4 x float> undef, <4 x i32> zeroinitializer
  %309 = getelementptr inbounds float, float* %271, i64 %index718.unr
  %310 = bitcast float* %309 to <4 x float>*
  %wide.load726.epil = load <4 x float>, <4 x float>* %310, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %311 = getelementptr inbounds float, float* %309, i64 4
  %312 = bitcast float* %311 to <4 x float>*
  %wide.load727.epil = load <4 x float>, <4 x float>* %312, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %313 = fmul <4 x float> %306, %wide.load726.epil
  %314 = fmul <4 x float> %308, %wide.load727.epil
  %315 = bitcast float* %309 to <4 x float>*
  store <4 x float> %313, <4 x float>* %315, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  %316 = bitcast float* %311 to <4 x float>*
  store <4 x float> %314, <4 x float>* %316, align 4, !tbaa !50, !alias.scope !385, !noalias !382
  br label %middle.block700

middle.block700:                                  ; preds = %vector.body699.epil, %middle.block700.unr-lcssa
  %cmp.n721 = icmp eq i64 %n.vec717, %273
  br i1 %cmp.n721, label %for.end362.1, label %for.body354.1.preheader

for.body354.1.preheader:                          ; preds = %middle.block700, %vector.memcheck714, %for.body354.lr.ph.1
  %indvars.iv585.1.ph = phi i64 [ 0, %vector.memcheck714 ], [ 0, %for.body354.lr.ph.1 ], [ %n.vec717, %middle.block700 ]
  br label %for.body354.1

for.body354.1:                                    ; preds = %for.body354.1, %for.body354.1.preheader
  %indvars.iv585.1 = phi i64 [ %indvars.iv.next586.1, %for.body354.1 ], [ %indvars.iv585.1.ph, %for.body354.1.preheader ]
  %317 = load float, float* %m_fFFTScaler355, align 8, !tbaa !312
  %add.ptr.i519.1 = getelementptr inbounds float, float* %271, i64 %indvars.iv585.1
  %318 = load float, float* %add.ptr.i519.1, align 4, !tbaa !50
  %mul359.1 = fmul float %317, %318
  store float %mul359.1, float* %add.ptr.i519.1, align 4, !tbaa !50
  %indvars.iv.next586.1 = add nuw nsw i64 %indvars.iv585.1, 1
  %cmp353.1 = icmp ult i64 %indvars.iv.next586.1, %273
  br i1 %cmp353.1, label %for.body354.1, label %for.end362.1, !llvm.loop !388

for.end362.1:                                     ; preds = %for.body354.1, %middle.block700, %for.cond351.preheader.1.for.end362.1_crit_edge
  %319 = phi i8* [ %.pre594, %for.cond351.preheader.1.for.end362.1_crit_edge ], [ %272, %middle.block700 ], [ %272, %for.body354.1 ]
  %arrayidx364.1 = getelementptr inbounds float*, float** %ppfDst, i64 1
  %320 = bitcast float** %arrayidx364.1 to i8**
  %321 = load i8*, i8** %320, align 8, !tbaa !43
  %322 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv368.1 = zext i32 %322 to i64
  %mul369.1 = shl nuw nsw i64 %conv368.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* align 4 %319, i64 %mul369.1, i1 false)
  %323 = load i32, i32* %m_nOverlapLength371, align 4, !tbaa !309
  %cmp372576.1 = icmp eq i32 %323, 0
  %arrayidx376.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  br i1 %cmp372576.1, label %for.end362.1.for.end386.1_crit_edge, label %for.body373.lr.ph.1

for.end362.1.for.end386.1_crit_edge:              ; preds = %for.end362.1
  %.phi.trans.insert595 = bitcast %"class.std::vector.0"* %arrayidx376.1 to i8**
  %.pre596 = load i8*, i8** %.phi.trans.insert595, align 8, !tbaa !76
  br label %for.end386.1

for.body373.lr.ph.1:                              ; preds = %for.end362.1
  %_M_start.i515.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx376.1, i64 0, i32 0, i32 0, i32 0
  %324 = load float*, float** %_M_start.i515.1, align 8, !tbaa !76
  %325 = bitcast float* %324 to i8*
  %326 = load float*, float** %arrayidx364.1, align 8, !tbaa !43
  %327 = zext i32 %323 to i64
  %min.iters.check731 = icmp ult i32 %323, 8
  br i1 %min.iters.check731, label %for.body373.1.preheader, label %vector.memcheck741

vector.memcheck741:                               ; preds = %for.body373.lr.ph.1
  %scevgep733 = getelementptr float, float* %326, i64 %327
  %scevgep735 = getelementptr float, float* %324, i64 %327
  %bound0737 = icmp ult float* %326, %scevgep735
  %bound1738 = icmp ult float* %324, %scevgep733
  %found.conflict739 = and i1 %bound0737, %bound1738
  br i1 %found.conflict739, label %for.body373.1.preheader, label %vector.ph742

vector.ph742:                                     ; preds = %vector.memcheck741
  %n.vec744 = and i64 %327, 4294967288
  %328 = add nsw i64 %n.vec744, -8
  %329 = lshr exact i64 %328, 3
  %330 = add nuw nsw i64 %329, 1
  %xtraiter = and i64 %330, 1
  %331 = icmp eq i64 %328, 0
  br i1 %331, label %middle.block729.unr-lcssa, label %vector.ph742.new

vector.ph742.new:                                 ; preds = %vector.ph742
  %unroll_iter = sub nuw nsw i64 %330, %xtraiter
  br label %vector.body728

vector.body728:                                   ; preds = %vector.body728, %vector.ph742.new
  %index745 = phi i64 [ 0, %vector.ph742.new ], [ %index.next746.1, %vector.body728 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph742.new ], [ %niter.nsub.1, %vector.body728 ]
  %332 = getelementptr inbounds float, float* %324, i64 %index745
  %333 = bitcast float* %332 to <4 x float>*
  %wide.load753 = load <4 x float>, <4 x float>* %333, align 4, !tbaa !50, !alias.scope !389
  %334 = getelementptr inbounds float, float* %332, i64 4
  %335 = bitcast float* %334 to <4 x float>*
  %wide.load754 = load <4 x float>, <4 x float>* %335, align 4, !tbaa !50, !alias.scope !389
  %336 = getelementptr inbounds float, float* %326, i64 %index745
  %337 = bitcast float* %336 to <4 x float>*
  %wide.load755 = load <4 x float>, <4 x float>* %337, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %338 = getelementptr inbounds float, float* %336, i64 4
  %339 = bitcast float* %338 to <4 x float>*
  %wide.load756 = load <4 x float>, <4 x float>* %339, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %340 = fadd <4 x float> %wide.load753, %wide.load755
  %341 = fadd <4 x float> %wide.load754, %wide.load756
  %342 = bitcast float* %336 to <4 x float>*
  store <4 x float> %340, <4 x float>* %342, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %343 = bitcast float* %338 to <4 x float>*
  store <4 x float> %341, <4 x float>* %343, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %index.next746 = or i64 %index745, 8
  %344 = getelementptr inbounds float, float* %324, i64 %index.next746
  %345 = bitcast float* %344 to <4 x float>*
  %wide.load753.1 = load <4 x float>, <4 x float>* %345, align 4, !tbaa !50, !alias.scope !389
  %346 = getelementptr inbounds float, float* %344, i64 4
  %347 = bitcast float* %346 to <4 x float>*
  %wide.load754.1 = load <4 x float>, <4 x float>* %347, align 4, !tbaa !50, !alias.scope !389
  %348 = getelementptr inbounds float, float* %326, i64 %index.next746
  %349 = bitcast float* %348 to <4 x float>*
  %wide.load755.1 = load <4 x float>, <4 x float>* %349, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %350 = getelementptr inbounds float, float* %348, i64 4
  %351 = bitcast float* %350 to <4 x float>*
  %wide.load756.1 = load <4 x float>, <4 x float>* %351, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %352 = fadd <4 x float> %wide.load753.1, %wide.load755.1
  %353 = fadd <4 x float> %wide.load754.1, %wide.load756.1
  %354 = bitcast float* %348 to <4 x float>*
  store <4 x float> %352, <4 x float>* %354, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %355 = bitcast float* %350 to <4 x float>*
  store <4 x float> %353, <4 x float>* %355, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %index.next746.1 = add i64 %index745, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block729.unr-lcssa, label %vector.body728, !llvm.loop !394

middle.block729.unr-lcssa:                        ; preds = %vector.body728, %vector.ph742
  %index745.unr = phi i64 [ 0, %vector.ph742 ], [ %index.next746.1, %vector.body728 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block729, label %vector.body728.epil

vector.body728.epil:                              ; preds = %middle.block729.unr-lcssa
  %356 = getelementptr inbounds float, float* %324, i64 %index745.unr
  %357 = bitcast float* %356 to <4 x float>*
  %wide.load753.epil = load <4 x float>, <4 x float>* %357, align 4, !tbaa !50, !alias.scope !389
  %358 = getelementptr inbounds float, float* %356, i64 4
  %359 = bitcast float* %358 to <4 x float>*
  %wide.load754.epil = load <4 x float>, <4 x float>* %359, align 4, !tbaa !50, !alias.scope !389
  %360 = getelementptr inbounds float, float* %326, i64 %index745.unr
  %361 = bitcast float* %360 to <4 x float>*
  %wide.load755.epil = load <4 x float>, <4 x float>* %361, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %362 = getelementptr inbounds float, float* %360, i64 4
  %363 = bitcast float* %362 to <4 x float>*
  %wide.load756.epil = load <4 x float>, <4 x float>* %363, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %364 = fadd <4 x float> %wide.load753.epil, %wide.load755.epil
  %365 = fadd <4 x float> %wide.load754.epil, %wide.load756.epil
  %366 = bitcast float* %360 to <4 x float>*
  store <4 x float> %364, <4 x float>* %366, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  %367 = bitcast float* %362 to <4 x float>*
  store <4 x float> %365, <4 x float>* %367, align 4, !tbaa !50, !alias.scope !392, !noalias !389
  br label %middle.block729

middle.block729:                                  ; preds = %vector.body728.epil, %middle.block729.unr-lcssa
  %cmp.n748 = icmp eq i64 %n.vec744, %327
  br i1 %cmp.n748, label %for.end386.loopexit.1, label %for.body373.1.preheader

for.body373.1.preheader:                          ; preds = %middle.block729, %vector.memcheck741, %for.body373.lr.ph.1
  %indvars.iv587.1.ph = phi i64 [ 0, %vector.memcheck741 ], [ 0, %for.body373.lr.ph.1 ], [ %n.vec744, %middle.block729 ]
  br label %for.body373.1

for.body373.1:                                    ; preds = %for.body373.1, %for.body373.1.preheader
  %indvars.iv587.1 = phi i64 [ %indvars.iv.next588.1, %for.body373.1 ], [ %indvars.iv587.1.ph, %for.body373.1.preheader ]
  %add.ptr.i516.1 = getelementptr inbounds float, float* %324, i64 %indvars.iv587.1
  %368 = load float, float* %add.ptr.i516.1, align 4, !tbaa !50
  %arrayidx382.1 = getelementptr inbounds float, float* %326, i64 %indvars.iv587.1
  %369 = load float, float* %arrayidx382.1, align 4, !tbaa !50
  %add383.1 = fadd float %368, %369
  store float %add383.1, float* %arrayidx382.1, align 4, !tbaa !50
  %indvars.iv.next588.1 = add nuw nsw i64 %indvars.iv587.1, 1
  %cmp372.1 = icmp ult i64 %indvars.iv.next588.1, %327
  br i1 %cmp372.1, label %for.body373.1, label %for.end386.loopexit.1, !llvm.loop !395

for.end386.loopexit.1:                            ; preds = %for.body373.1, %middle.block729
  %phitmp601 = zext i32 %323 to i64
  %phitmp602 = shl nuw nsw i64 %phitmp601, 2
  br label %for.end386.1

for.end386.1:                                     ; preds = %for.end386.loopexit.1, %for.end362.1.for.end386.1_crit_edge
  %370 = phi i8* [ %.pre596, %for.end362.1.for.end386.1_crit_edge ], [ %325, %for.end386.loopexit.1 ]
  %.lcssa.1 = phi i64 [ 0, %for.end362.1.for.end386.1_crit_edge ], [ %phitmp602, %for.end386.loopexit.1 ]
  %371 = load i32, i32* %m_nBlockSize236, align 8, !tbaa !308
  %conv393.1 = zext i32 %371 to i64
  %372 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i.1 = getelementptr inbounds float, float* %372, i64 %conv393.1
  %373 = bitcast float* %add.ptr.i.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %370, i8* nonnull align 4 %373, i64 %.lcssa.1, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !61
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !64, !range !67
  %tobool = icmp ne i8 %3, 0
  %call = tail call i32 @_Z15OrderToSpeakersjb(i32 %1, i1 zeroext %tobool)
  %4 = load i32, i32* %0, align 8, !tbaa !61
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24)
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %5, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %6 = bitcast i8* %_M_ctype.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !396
  %tobool.i47 = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.i47, label %if.then.i48, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit

if.then.i48:                                      ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #28
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit:    ; preds = %if.then
  %_M_widen_ok.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i, align 8, !tbaa !398
  %tobool.i = icmp eq i8 %8, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  %arrayidx.i31 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 9, i64 10
  %9 = load i8, i8* %arrayidx.i31, align 1, !tbaa !298
  br label %if.end

if.end.i:                                         ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %7)
  %10 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i32 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %10, align 8, !tbaa !40
  %vfn.i33 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i32, i64 6
  %11 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i33, align 8
  %call.i34 = tail call signext i8 %11(%"class.std::ctype"* nonnull %7, i8 signext 10)
  br label %if.end

if.else:                                          ; preds = %entry
  %call1.i17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39)
  %vtable.i19 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i20 = getelementptr i8, i8* %vtable.i19, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i20 to i64*
  %vbase.offset.i21 = load i64, i64* %12, align 8
  %add.ptr.i22 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i21
  %_M_ctype.i35 = getelementptr inbounds i8, i8* %add.ptr.i22, i64 240
  %13 = bitcast i8* %_M_ctype.i35 to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !396
  %tobool.i50 = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i50, label %if.then.i51, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53

if.then.i51:                                      ; preds = %if.else
  tail call void @_ZSt16__throw_bad_castv() #28
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53:  ; preds = %if.else
  %_M_widen_ok.i37 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i37, align 8, !tbaa !398
  %tobool.i38 = icmp eq i8 %15, 0
  br i1 %tobool.i38, label %if.end.i44, label %if.then.i40

if.then.i40:                                      ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  %arrayidx.i39 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i39, align 1, !tbaa !298
  br label %if.end

if.end.i44:                                       ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14)
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i41 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !40
  %vfn.i42 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i41, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i42, align 8
  %call.i43 = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10)
  br label %if.end

if.end:                                           ; preds = %if.end.i44, %if.then.i40, %if.end.i, %if.then.i
  %retval.0.i45.sink = phi i8 [ %9, %if.then.i ], [ %call.i34, %if.end.i ], [ %16, %if.then.i40 ], [ %call.i43, %if.end.i44 ]
  %nSpeakerSetUp.0 = phi i32 [ 13, %if.then.i ], [ 13, %if.end.i ], [ 12, %if.then.i40 ], [ 12, %if.end.i44 ]
  %call1.i24 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i45.sink)
  %call.i25 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i24)
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1
  %19 = load i32, i32* %0, align 8, !tbaa !61
  %20 = load i8, i8* %2, align 4, !tbaa !64, !range !67
  %tobool9 = icmp ne i8 %20, 0
  %21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %19, i32* %21, align 8, !tbaa !61
  %22 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 %20, i8* %22, align 4, !tbaa !64
  %call.i.i26 = tail call i32 @_Z17OrderToComponentsjb(i32 %19, i1 zeroext %tobool9)
  %23 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i26, i32* %23, align 8, !tbaa !65
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder, i32 %nSpeakerSetUp.0, i32 %call)
  %24 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoder to void (%class.CAmbisonicDecoder*)***
  %vtable.i27 = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %24, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i27, i64 4
  %25 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %25(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %26 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !262
  %cmp5.i = icmp eq i32 %26, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %27 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %27, i64 %indvars.iv.i
  %28 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i28 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %28, align 8, !tbaa !40
  %vfn.i29 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i28, i64 4
  %29 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i29, align 8
  tail call void %29(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %30 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !262
  %31 = zext i32 %30 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %31
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %if.end
  ret void
}

declare i32 @_Z15OrderToSpeakersjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %conv = zext i32 %0 to i64
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 1
  %1 = bitcast float** %_M_finish.i.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !73
  %3 = bitcast %"class.std::vector.0"* %m_pfScratchBufferA to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !76
  %sub.ptr.sub.i.i = sub i64 %2, %4
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferA, i64 %sub.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %5, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13
  %_M_finish.i.i57 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::vector.0"** %_M_finish.i.i57 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !400
  %8 = bitcast %"class.std::vector.42"* %m_pfScratchBufferB to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !357
  %sub.ptr.sub.i.i58 = sub i64 %7, %9
  %sub.ptr.div.i.i59 = sdiv exact i64 %sub.ptr.sub.i.i58, 24
  %cmp.i60 = icmp ult i64 %sub.ptr.div.i.i59, 16
  %10 = inttoptr i64 %9 to %"class.std::vector.0"*
  %11 = inttoptr i64 %7 to %"class.std::vector.0"*
  br i1 %cmp.i60, label %if.then.i62, label %if.else.i64

if.then.i62:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %sub.i61 = sub nuw nsw i64 16, %sub.ptr.div.i.i59
  tail call void @_ZNSt6vectorIS_IfSaIfEESaIS1_EE17_M_default_appendEm(%"class.std::vector.42"* nonnull %m_pfScratchBufferB, i64 %sub.i61)
  %.pre = load i64, i64* %6, align 8, !tbaa !400
  br label %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit

if.else.i64:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %12 = icmp eq i64 %sub.ptr.sub.i.i58, 384
  br i1 %12, label %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit, label %if.then5.i66

if.then5.i66:                                     ; preds = %if.else.i64
  %add.ptr.i65 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %10, i64 16
  %cmp3.i.i.i.i.i = icmp eq %"class.std::vector.0"* %add.ptr.i65, %11
  br i1 %cmp3.i.i.i.i.i, label %_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i, %if.then5.i66
  %__first.addr.04.i.i.i.i.i = phi %"class.std::vector.0"* [ %incdec.ptr.i.i.i.i.i, %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i ], [ %add.ptr.i65, %if.then5.i66 ]
  %_M_start.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i.i.i = icmp eq float* %13, null
  br i1 %tobool.i.i.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i:                        ; preds = %for.body.i.i.i.i.i
  %14 = bitcast float* %13 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #24
  br label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i

_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i, %for.body.i.i.i.i.i
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq %"class.std::vector.0"* %incdec.ptr.i.i.i.i.i, %11
  br i1 %cmp.i.i.i.i.i, label %_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i, label %for.body.i.i.i.i.i

_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i: ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i, %if.then5.i66
  store %"class.std::vector.0"* %add.ptr.i65, %"class.std::vector.0"** %_M_finish.i.i57, align 8, !tbaa !400
  %15 = ptrtoint %"class.std::vector.0"* %add.ptr.i65 to i64
  br label %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit

_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit:    ; preds = %_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i, %if.else.i64, %if.then.i62
  %16 = phi i64 [ %7, %if.else.i64 ], [ %.pre, %if.then.i62 ], [ %15, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i ]
  %17 = load i64, i64* %8, align 8, !tbaa !357
  %18 = icmp eq i64 %16, %17
  br i1 %18, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit119, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14
  %19 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %conv10 = zext i32 %19 to i64
  %_M_finish.i.i67 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 1
  %20 = bitcast float** %_M_finish.i.i67 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !73
  %22 = bitcast %"class.std::vector.0"* %m_pfScratchBufferC to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !76
  %sub.ptr.sub.i.i68 = sub i64 %21, %23
  %sub.ptr.div.i.i69 = ashr exact i64 %sub.ptr.sub.i.i68, 2
  %cmp.i70 = icmp ult i64 %sub.ptr.div.i.i69, %conv10
  %24 = inttoptr i64 %23 to float*
  br i1 %cmp.i70, label %if.then.i72, label %if.else.i74

if.then.i72:                                      ; preds = %for.cond.cleanup
  %sub.i71 = sub nsw i64 %conv10, %sub.ptr.div.i.i69
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferC, i64 %sub.i71)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit77

if.else.i74:                                      ; preds = %for.cond.cleanup
  %cmp4.i73 = icmp ugt i64 %sub.ptr.div.i.i69, %conv10
  br i1 %cmp4.i73, label %if.then5.i76, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit77

if.then5.i76:                                     ; preds = %if.else.i74
  %add.ptr.i75 = getelementptr inbounds float, float* %24, i64 %conv10
  store float* %add.ptr.i75, float** %_M_finish.i.i67, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit77

_ZNSt6vectorIfSaIfEE6resizeEm.exit77:             ; preds = %if.then5.i76, %if.else.i74, %if.then.i72
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %25 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %conv11 = zext i32 %25 to i64
  %_M_finish.i.i78 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast float** %_M_finish.i.i78 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !73
  %28 = bitcast %"class.std::vector.0"* %arrayidx to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !76
  %sub.ptr.sub.i.i79 = sub i64 %27, %29
  %sub.ptr.div.i.i80 = ashr exact i64 %sub.ptr.sub.i.i79, 2
  %cmp.i81 = icmp ult i64 %sub.ptr.div.i.i80, %conv11
  %30 = inttoptr i64 %29 to float*
  br i1 %cmp.i81, label %if.then.i83, label %if.else.i85

if.then.i83:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit77
  %sub.i82 = sub nsw i64 %conv11, %sub.ptr.div.i.i80
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx, i64 %sub.i82)
  %.pre155 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %.pre158 = zext i32 %.pre155 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit88

if.else.i85:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit77
  %cmp4.i84 = icmp ugt i64 %sub.ptr.div.i.i80, %conv11
  br i1 %cmp4.i84, label %if.then5.i87, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit88

if.then5.i87:                                     ; preds = %if.else.i85
  %add.ptr.i86 = getelementptr inbounds float, float* %30, i64 %conv11
  store float* %add.ptr.i86, float** %_M_finish.i.i78, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit88

_ZNSt6vectorIfSaIfEE6resizeEm.exit88:             ; preds = %if.then5.i87, %if.else.i85, %if.then.i83
  %conv15.pre-phi = phi i64 [ %.pre158, %if.then.i83 ], [ %conv11, %if.else.i85 ], [ %conv11, %if.then5.i87 ]
  %arrayidx13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  %_M_finish.i.i89 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 1
  %31 = bitcast float** %_M_finish.i.i89 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !73
  %33 = bitcast %"class.std::vector.0"* %arrayidx13 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !76
  %sub.ptr.sub.i.i90 = sub i64 %32, %34
  %sub.ptr.div.i.i91 = ashr exact i64 %sub.ptr.sub.i.i90, 2
  %cmp.i92 = icmp ugt i64 %conv15.pre-phi, %sub.ptr.div.i.i91
  %35 = inttoptr i64 %34 to float*
  br i1 %cmp.i92, label %if.then.i94, label %if.else.i96

if.then.i94:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit88
  %sub.i93 = sub nsw i64 %conv15.pre-phi, %sub.ptr.div.i.i91
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx13, i64 %sub.i93)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit99

if.else.i96:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit88
  %cmp4.i95 = icmp ult i64 %conv15.pre-phi, %sub.ptr.div.i.i91
  br i1 %cmp4.i95, label %if.then5.i98, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit99

if.then5.i98:                                     ; preds = %if.else.i96
  %add.ptr.i97 = getelementptr inbounds float, float* %35, i64 %conv15.pre-phi
  store float* %add.ptr.i97, float** %_M_finish.i.i89, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit99

_ZNSt6vectorIfSaIfEE6resizeEm.exit99:             ; preds = %if.then5.i98, %if.else.i96, %if.then.i94
  %36 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %call17 = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %36, i32 0, i8* null, i64* null)
  %37 = ptrtoint %struct.kiss_fftr_state* %call17 to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !43
  store i64 %37, i64* %38, align 8, !tbaa !43
  %cmp.i100 = icmp eq i64 %39, 0
  br i1 %cmp.i100, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit, label %if.then.i101

if.then.i101:                                     ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit99
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %41 = inttoptr i64 %39 to i8*
  invoke void %40(i8* %41)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i101
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  tail call void @__clang_call_terminate(i8* %43) #29
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit: ; preds = %if.then.i101, %_ZNSt6vectorIfSaIfEE6resizeEm.exit99
  %44 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %call19 = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %44, i32 1, i8* null, i64* null)
  %45 = ptrtoint %struct.kiss_fftr_state* %call19 to i64
  %_M_head_impl.i.i.i.i.i.i102 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i102 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !43
  store i64 %45, i64* %46, align 8, !tbaa !43
  %cmp.i103 = icmp eq i64 %47, 0
  br i1 %cmp.i103, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107, label %if.then.i105

if.then.i105:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %_M_head_impl.i.i.i.i.i.i.i104 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i104, align 8, !tbaa !43
  %49 = inttoptr i64 %47 to i8*
  invoke void %48(i8* %49)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107 unwind label %terminate.lpad.i106

terminate.lpad.i106:                              ; preds = %if.then.i105
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  tail call void @__clang_call_terminate(i8* %51) #29
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107: ; preds = %if.then.i105, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %arrayidx24 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0
  %53 = load i32, i32* %52, align 8, !tbaa !65
  %conv25 = zext i32 %53 to i64
  %_M_finish.i.i121 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.std::unique_ptr.33"** %_M_finish.i.i121 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !401
  %56 = bitcast %"class.std::vector.28"* %arrayidx24 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !346
  %sub.ptr.sub.i.i122 = sub i64 %55, %57
  %sub.ptr.div.i.i123 = ashr exact i64 %sub.ptr.sub.i.i122, 3
  %cmp.i124 = icmp ult i64 %sub.ptr.div.i.i123, %conv25
  %58 = inttoptr i64 %57 to %"class.std::unique_ptr.33"*
  %59 = inttoptr i64 %55 to %"class.std::unique_ptr.33"*
  br i1 %cmp.i124, label %if.then.i126, label %if.else.i128

for.body:                                         ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit119, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit
  %60 = phi i64 [ %69, %_ZNSt6vectorIfSaIfEE6resizeEm.exit119 ], [ %17, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit ]
  %61 = phi i64 [ %70, %_ZNSt6vectorIfSaIfEE6resizeEm.exit119 ], [ %16, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit ]
  %indvars.iv151 = phi i64 [ %indvars.iv.next152, %_ZNSt6vectorIfSaIfEE6resizeEm.exit119 ], [ 0, %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit ]
  %62 = inttoptr i64 %60 to %"class.std::vector.0"*
  %add.ptr.i108 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %62, i64 %indvars.iv151
  %63 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %conv8 = zext i32 %63 to i64
  %_M_finish.i.i109 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %62, i64 %indvars.iv151, i32 0, i32 0, i32 1
  %64 = bitcast float** %_M_finish.i.i109 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !73
  %66 = bitcast %"class.std::vector.0"* %add.ptr.i108 to i64*
  %67 = load i64, i64* %66, align 8, !tbaa !76
  %sub.ptr.sub.i.i110 = sub i64 %65, %67
  %sub.ptr.div.i.i111 = ashr exact i64 %sub.ptr.sub.i.i110, 2
  %cmp.i112 = icmp ult i64 %sub.ptr.div.i.i111, %conv8
  %68 = inttoptr i64 %67 to float*
  br i1 %cmp.i112, label %if.then.i114, label %if.else.i116

if.then.i114:                                     ; preds = %for.body
  %sub.i113 = sub nsw i64 %conv8, %sub.ptr.div.i.i111
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %add.ptr.i108, i64 %sub.i113)
  %.pre153 = load i64, i64* %6, align 8, !tbaa !400
  %.pre154 = load i64, i64* %8, align 8, !tbaa !357
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit119

if.else.i116:                                     ; preds = %for.body
  %cmp4.i115 = icmp ugt i64 %sub.ptr.div.i.i111, %conv8
  br i1 %cmp4.i115, label %if.then5.i118, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit119

if.then5.i118:                                    ; preds = %if.else.i116
  %add.ptr.i117 = getelementptr inbounds float, float* %68, i64 %conv8
  store float* %add.ptr.i117, float** %_M_finish.i.i109, align 8, !tbaa !73
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit119

_ZNSt6vectorIfSaIfEE6resizeEm.exit119:            ; preds = %if.then5.i118, %if.else.i116, %if.then.i114
  %69 = phi i64 [ %.pre154, %if.then.i114 ], [ %60, %if.else.i116 ], [ %60, %if.then5.i118 ]
  %70 = phi i64 [ %.pre153, %if.then.i114 ], [ %61, %if.else.i116 ], [ %61, %if.then5.i118 ]
  %indvars.iv.next152 = add nuw i64 %indvars.iv151, 1
  %sub.ptr.sub.i = sub i64 %70, %69
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 24
  %cmp = icmp ugt i64 %sub.ptr.div.i, %indvars.iv.next152
  br i1 %cmp, label %for.body, label %for.cond.cleanup

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %for.cond.cleanup29.1
  %71 = bitcast %struct.kiss_fft_cpx* %112 to i8*
  tail call void @_ZdaPv(i8* %71) #27
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit: ; preds = %for.cond.cleanup29.1, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i
  ret void

if.then.i126:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107
  %sub.i125 = sub nsw i64 %conv25, %sub.ptr.div.i.i123
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* nonnull %arrayidx24, i64 %sub.i125)
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.else.i128:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107
  %cmp4.i127 = icmp ugt i64 %sub.ptr.div.i.i123, %conv25
  br i1 %cmp4.i127, label %if.then5.i131, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.then5.i131:                                    ; preds = %if.else.i128
  %add.ptr.i129 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %58, i64 %conv25
  %cmp3.i.i.i.i.i130 = icmp eq %"class.std::unique_ptr.33"* %add.ptr.i129, %59
  br i1 %cmp3.i.i.i.i.i130, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, label %for.body.i.i.i.i.i133

for.body.i.i.i.i.i133:                            ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, %if.then5.i131
  %__first.addr.04.i.i.i.i.i132 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i134, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i ], [ %add.ptr.i129, %if.then5.i131 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %72, null
  br i1 %cmp.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i.i133
  %73 = bitcast %struct.kiss_fft_cpx* %72 to i8*
  tail call void @_ZdaPv(i8* %73) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i, %for.body.i.i.i.i.i133
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.i134 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i132, i64 1
  %cmp.i.i.i.i.i135 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i134, %59
  br i1 %cmp.i.i.i.i.i135, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, label %for.body.i.i.i.i.i133

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, %if.then5.i131
  store %"class.std::unique_ptr.33"* %add.ptr.i129, %"class.std::unique_ptr.33"** %_M_finish.i.i121, align 8, !tbaa !401
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, %if.else.i128, %if.then.i126
  %74 = load i32, i32* %52, align 8, !tbaa !65
  %cmp28141 = icmp eq i32 %74, 0
  br i1 %cmp28141, label %for.cond.cleanup29, label %for.body30.lr.ph

for.body30.lr.ph:                                 ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %_M_start.i136 = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %arrayidx24, i64 0, i32 0, i32 0, i32 0
  br label %for.body30

for.cond.cleanup29:                               ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %75 = phi i32 [ 0, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit ], [ %91, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140 ]
  %arrayidx24.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1
  %conv25.1 = zext i32 %75 to i64
  %_M_finish.i.i121.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 1
  %76 = bitcast %"class.std::unique_ptr.33"** %_M_finish.i.i121.1 to i64*
  %77 = load i64, i64* %76, align 8, !tbaa !401
  %78 = bitcast %"class.std::vector.28"* %arrayidx24.1 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !346
  %sub.ptr.sub.i.i122.1 = sub i64 %77, %79
  %sub.ptr.div.i.i123.1 = ashr exact i64 %sub.ptr.sub.i.i122.1, 3
  %cmp.i124.1 = icmp ult i64 %sub.ptr.div.i.i123.1, %conv25.1
  %80 = inttoptr i64 %79 to %"class.std::unique_ptr.33"*
  %81 = inttoptr i64 %77 to %"class.std::unique_ptr.33"*
  br i1 %cmp.i124.1, label %if.then.i126.1, label %if.else.i128.1

for.body30:                                       ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140, %for.body30.lr.ph
  %82 = phi i32 [ %74, %for.body30.lr.ph ], [ %91, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140 ]
  %indvars.iv = phi i64 [ 0, %for.body30.lr.ph ], [ %indvars.iv.next, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140 ]
  %83 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i136, align 8, !tbaa !346
  %add.ptr.i137 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %83, i64 %indvars.iv
  %84 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %conv36 = zext i32 %84 to i64
  %85 = shl nuw nsw i64 %conv36, 3
  %call37 = tail call i8* @_Znam(i64 %85) #26
  %86 = ptrtoint i8* %call37 to i64
  %87 = bitcast %"class.std::unique_ptr.33"* %add.ptr.i137 to i64*
  %88 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr.i137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %88, align 8, !tbaa !43
  store i64 %86, i64* %87, align 8, !tbaa !43
  %cmp.i138 = icmp eq %struct.kiss_fft_cpx* %89, null
  br i1 %cmp.i138, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139: ; preds = %for.body30
  %90 = bitcast %struct.kiss_fft_cpx* %89 to i8*
  tail call void @_ZdaPv(i8* %90) #27
  %.pre156 = load i32, i32* %52, align 8, !tbaa !65
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139, %for.body30
  %91 = phi i32 [ %82, %for.body30 ], [ %.pre156, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %92 = zext i32 %91 to i64
  %cmp28 = icmp ult i64 %indvars.iv.next, %92
  br i1 %cmp28, label %for.body30, label %for.cond.cleanup29

if.else.i128.1:                                   ; preds = %for.cond.cleanup29
  %cmp4.i127.1 = icmp ugt i64 %sub.ptr.div.i.i123.1, %conv25.1
  br i1 %cmp4.i127.1, label %if.then5.i131.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then5.i131.1:                                  ; preds = %if.else.i128.1
  %add.ptr.i129.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %80, i64 %conv25.1
  %cmp3.i.i.i.i.i130.1 = icmp eq %"class.std::unique_ptr.33"* %add.ptr.i129.1, %81
  br i1 %cmp3.i.i.i.i.i130.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, label %for.body.i.i.i.i.i133.1

for.body.i.i.i.i.i133.1:                          ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, %if.then5.i131.1
  %__first.addr.04.i.i.i.i.i132.1 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i134.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1 ], [ %add.ptr.i129.1, %if.then5.i131.1 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i132.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %93, null
  br i1 %cmp.i.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i.i133.1
  %94 = bitcast %struct.kiss_fft_cpx* %93 to i8*
  tail call void @_ZdaPv(i8* %94) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1, %for.body.i.i.i.i.i133.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.i134.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i132.1, i64 1
  %cmp.i.i.i.i.i135.1 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i134.1, %81
  br i1 %cmp.i.i.i.i.i135.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, label %for.body.i.i.i.i.i133.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, %if.then5.i131.1
  store %"class.std::unique_ptr.33"* %add.ptr.i129.1, %"class.std::unique_ptr.33"** %_M_finish.i.i121.1, align 8, !tbaa !401
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then.i126.1:                                   ; preds = %for.cond.cleanup29
  %sub.i125.1 = sub nsw i64 %conv25.1, %sub.ptr.div.i.i123.1
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* nonnull %arrayidx24.1, i64 %sub.i125.1)
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1: ; preds = %if.then.i126.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, %if.else.i128.1
  %95 = load i32, i32* %52, align 8, !tbaa !65
  %cmp28141.1 = icmp eq i32 %95, 0
  br i1 %cmp28141.1, label %for.cond.cleanup29.1, label %for.body30.lr.ph.1

for.body30.lr.ph.1:                               ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %_M_start.i136.1 = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %arrayidx24.1, i64 0, i32 0, i32 0, i32 0
  br label %for.body30.1

for.body30.1:                                     ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1, %for.body30.lr.ph.1
  %96 = phi i32 [ %95, %for.body30.lr.ph.1 ], [ %105, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1 ]
  %indvars.iv.1 = phi i64 [ 0, %for.body30.lr.ph.1 ], [ %indvars.iv.next.1, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1 ]
  %97 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i136.1, align 8, !tbaa !346
  %add.ptr.i137.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %97, i64 %indvars.iv.1
  %98 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %conv36.1 = zext i32 %98 to i64
  %99 = shl nuw nsw i64 %conv36.1, 3
  %call37.1 = tail call i8* @_Znam(i64 %99) #26
  %100 = ptrtoint i8* %call37.1 to i64
  %101 = bitcast %"class.std::unique_ptr.33"* %add.ptr.i137.1 to i64*
  %102 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr.i137.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %102, align 8, !tbaa !43
  store i64 %100, i64* %101, align 8, !tbaa !43
  %cmp.i138.1 = icmp eq %struct.kiss_fft_cpx* %103, null
  br i1 %cmp.i138.1, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139.1: ; preds = %for.body30.1
  %104 = bitcast %struct.kiss_fft_cpx* %103 to i8*
  tail call void @_ZdaPv(i8* %104) #27
  %.pre157 = load i32, i32* %52, align 8, !tbaa !65
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139.1, %for.body30.1
  %105 = phi i32 [ %.pre157, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i139.1 ], [ %96, %for.body30.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %106 = zext i32 %105 to i64
  %cmp28.1 = icmp ult i64 %indvars.iv.next.1, %106
  br i1 %cmp28.1, label %for.body30.1, label %for.cond.cleanup29.1

for.cond.cleanup29.1:                             ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit140.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11
  %107 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %conv45 = zext i32 %107 to i64
  %108 = shl nuw nsw i64 %conv45, 3
  %call46 = tail call i8* @_Znam(i64 %108) #26
  %109 = ptrtoint i8* %call46 to i64
  %110 = bitcast %"class.std::unique_ptr.33"* %m_pcpScratch to i64*
  %111 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %m_pcpScratch, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %111, align 8, !tbaa !43
  store i64 %109, i64* %110, align 8, !tbaa !43
  %cmp.i120 = icmp eq %struct.kiss_fft_cpx* %112, null
  br i1 %cmp.i120, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %"class.std::__cxx11::basic_string"* %srcFilename, i32 %nOrder, i1 zeroext %b3D) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %temp = alloca [44 x i8], align 16
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float 1.000000e+00, float* %amp, align 4, !tbaa !402
  %call = tail call i8* @_Znwm(i64 528) #26
  %0 = bitcast i8* %call to %"class.std::basic_fstream"*
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %srcFilename, i32 8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to i8**
  store i8* %call, i8** %1, align 8, !tbaa !404
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %.cast = bitcast i8* %call to %"class.std::basic_istream"*
  %call3 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* nonnull %.cast, i8* nonnull %2, i64 44)
  %call4 = call i8* @_Znwm(i64 64) #26
  %3 = bitcast i8* %call4 to %class.CBFormat*
  %4 = bitcast i8* %call4 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %call4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8, !tbaa !61
  %7 = getelementptr inbounds i8, i8* %call4, i64 12
  store i8 0, i8* %7, align 4, !tbaa !64
  %8 = getelementptr inbounds i8, i8* %call4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !65
  %10 = getelementptr inbounds i8, i8* %call4, i64 20
  store i8 0, i8* %10, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds i8, i8* %call4, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %11 = bitcast %class.CBFormat** %BFormat to i8**
  store i8* %call4, i8** %11, align 8, !tbaa !405
  %call8 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %3, i32 %nOrder, i1 zeroext true, i32 1024)
  %12 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !405
  %13 = bitcast %class.CBFormat* %12 to void (%class.CBFormat*)***
  %vtable11 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %13, align 8, !tbaa !40
  %vfn12 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable11, i64 4
  %14 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn12, align 8
  call void %14(%class.CBFormat* %12)
  %call13 = call i8* @_Znwm(i64 136) #26
  %15 = bitcast i8* %call13 to %class.CAmbisonicEncoderDist*
  invoke void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* nonnull %15)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %16 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to i8**
  store i8* %call13, i8** %16, align 8, !tbaa !406
  %17 = bitcast i8* %call13 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable17 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %17, align 8, !tbaa !40
  %vfn18 = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable17, i64 2
  %18 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn18, align 8
  %call19 = call zeroext i1 %18(%class.CAmbisonicEncoderDist* nonnull %15, i32 %nOrder, i1 zeroext true, i32 48000)
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !406
  %20 = bitcast %class.CAmbisonicEncoderDist* %19 to void (%class.CAmbisonicEncoderDist*)***
  %vtable24 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %20, align 8, !tbaa !40
  %vfn25 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable24, i64 4
  %21 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn25, align 8
  call void %21(%class.CAmbisonicEncoderDist* %19)
  %fAzimuth = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8, !tbaa !407
  %fElevation = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %fElevation, align 4, !tbaa !408
  %fDistance = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %fDistance, align 8, !tbaa !409
  %22 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %23 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %22, align 8, !tbaa !406
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %agg.tmp.sroa.0.0..sroa_idx to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %24 = bitcast %class.CAmbisonicSource* %23 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable31 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %24, align 8, !tbaa !40
  %vfn32 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable31, i64 5
  %25 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn32, align 8
  call void %25(%class.CAmbisonicSource* %23, <2 x float> %agg.tmp.sroa.0.0.copyload, float 0.000000e+00)
  %26 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !406
  %27 = bitcast %class.CAmbisonicEncoderDist* %26 to void (%class.CAmbisonicEncoderDist*)***
  %vtable34 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %27, align 8, !tbaa !40
  %vfn35 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable34, i64 4
  %28 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn35, align 8
  call void %28(%class.CAmbisonicEncoderDist* %26)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  ret void

lpad:                                             ; preds = %entry
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  tail call void @_ZdlPv(i8* nonnull %call) #27
  br label %eh.resume

lpad14:                                           ; preds = %invoke.cont
  %32 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call13) #27
  %33 = extractvalue { i8*, i32 } %32, 1
  %34 = extractvalue { i8*, i32 } %32, 0
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %eh.resume

eh.resume:                                        ; preds = %lpad14, %lpad
  %ehselector.slot.1 = phi i32 [ %33, %lpad14 ], [ %31, %lpad ]
  %exn.slot.1 = phi i8* [ %34, %lpad14 ], [ %30, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val36 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.1, 1
  resume { i8*, i32 } %lpad.val36
}

; Function Attrs: uwtable
declare void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %struct.PolarPoint* nocapture readonly dereferenceable(12) %pos) local_unnamed_addr #16 align 2 {
entry:
  %0 = bitcast %struct.PolarPoint* %pos to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !410
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %2 = bitcast %struct.PolarPoint* %srcPos to i32*
  store i32 %1, i32* %2, align 8, !tbaa !407
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 1
  %3 = bitcast float* %fElevation to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !411
  %fElevation4 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  %5 = bitcast float* %fElevation4 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !408
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 2
  %6 = bitcast float* %fDistance to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !412
  %fDistance6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  %8 = bitcast float* %fDistance6 to i32*
  store i32 %7, i32* %8, align 8, !tbaa !409
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %10 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %9, align 8, !tbaa !406
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %srcPos to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %agg.tmp.sroa.2.0.copyload.cast = bitcast i32 %7 to float
  %11 = bitcast %class.CAmbisonicSource* %10 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %11, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %12 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %12(%class.CAmbisonicSource* %10, <2 x float> %agg.tmp.sroa.0.0.copyload, float %agg.tmp.sroa.2.0.copyload.cast)
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !406
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !40
  %vfn10 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9, i64 4
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* %13)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, float %ampScale) local_unnamed_addr #5 align 2 {
entry:
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float %ampScale, float* %amp, align 4, !tbaa !402
  ret void
}

; Function Attrs: uwtable
define %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* nocapture %this) local_unnamed_addr #3 align 2 {
entry:
  %sampleTemp = alloca [1024 x i16], align 16
  %0 = bitcast [1024 x i16]* %sampleTemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #24
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to %"class.std::basic_istream"**
  %2 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %1, align 8, !tbaa !404
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %2, i8* nonnull %0, i64 2048)
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !406
  %arraydecay8 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !405
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %3, float* nonnull %arraydecay8, i32 1024, %class.CBFormat* %4)
  %5 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !405
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #24
  ret %class.CBFormat* %5

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.body ]
  %6 = load float, float* %amp, align 4, !tbaa !402
  %conv = fpext float %6 to double
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv
  %7 = load i16, i16* %arrayidx, align 4, !tbaa !45
  %conv3 = sitofp i16 %7 to double
  %div = fdiv double %conv3, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv4 = fptrunc double %mul to float
  %arrayidx6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv
  store float %conv4, float* %arrayidx6, align 4, !tbaa !50
  %indvars.iv.next = or i64 %indvars.iv, 1
  %8 = load float, float* %amp, align 4, !tbaa !402
  %conv.1 = fpext float %8 to double
  %arrayidx.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv.next
  %9 = load i16, i16* %arrayidx.1, align 2, !tbaa !45
  %conv3.1 = sitofp i16 %9 to double
  %div.1 = fdiv double %conv3.1, 3.276700e+04
  %mul.1 = fmul double %div.1, %conv.1
  %conv4.1 = fptrunc double %mul.1 to float
  %arrayidx6.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv.next
  store float %conv4.1, float* %arrayidx6.1, align 4, !tbaa !50
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 1024
  br i1 %exitcond.1, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5SoundD2Ev(%"class.ILLIXR_AUDIO::Sound"* nocapture readonly %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !404
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_fstream", %"class.std::basic_fstream"* %0, i64 0, i32 1
  %call.i15 = invoke %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i)
          to label %call.i.noexc unwind label %terminate.lpad

call.i.noexc:                                     ; preds = %entry
  %tobool.i = icmp eq %"class.std::basic_filebuf"* %call.i15, null
  br i1 %tobool.i, label %if.then.i, label %invoke.cont

if.then.i:                                        ; preds = %call.i.noexc
  %1 = bitcast %"class.std::basic_fstream"* %0 to i8**
  %vtable.i = load i8*, i8** %1, align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %2 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %2, align 8
  %3 = bitcast %"class.std::basic_fstream"* %0 to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %3, i64 %vbase.offset.i
  %4 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %5 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %6 = load i32, i32* %5, align 8, !tbaa !413
  %or.i.i.i = or i32 %6, 4
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %4, i32 %or.i.i.i)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then.i, %call.i.noexc
  %7 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !404
  %isnull = icmp eq %"class.std::basic_fstream"* %7, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont
  %8 = bitcast %"class.std::basic_fstream"* %7 to void (%"class.std::basic_fstream"*)***
  %vtable = load void (%"class.std::basic_fstream"*)**, void (%"class.std::basic_fstream"*)*** %8, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vtable, i64 1
  %9 = load void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vfn, align 8
  tail call void %9(%"class.std::basic_fstream"* nonnull %7) #24
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %invoke.cont
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %10 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !405
  %isnull3 = icmp eq %class.CBFormat* %10, null
  br i1 %isnull3, label %delete.end7, label %delete.notnull4

delete.notnull4:                                  ; preds = %delete.end
  %11 = bitcast %class.CBFormat* %10 to void (%class.CBFormat*)***
  %vtable5 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %11, align 8, !tbaa !40
  %vfn6 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable5, i64 1
  %12 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn6, align 8
  tail call void %12(%class.CBFormat* nonnull %10) #24
  br label %delete.end7

delete.end7:                                      ; preds = %delete.notnull4, %delete.end
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !406
  %isnull8 = icmp eq %class.CAmbisonicEncoderDist* %13, null
  br i1 %isnull8, label %delete.end12, label %delete.notnull9

delete.notnull9:                                  ; preds = %delete.end7
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable10 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !40
  %vfn11 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable10, i64 1
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn11, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* nonnull %13) #24
  br label %delete.end12

delete.end12:                                     ; preds = %delete.notnull9, %delete.end7
  ret void

terminate.lpad:                                   ; preds = %if.then.i, %entry
  %16 = landingpad { i8*, i32 }
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  tail call void @__clang_call_terminate(i8* %17) #29
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #18 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #24
  tail call void @_ZSt9terminatev() #29
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nocapture %this, %"class.std::__cxx11::basic_string"* %outputFilePath, i32 %procTypeIn) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %wavh.i = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 16
  %temp = alloca i32, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp19 = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  store i32 %procTypeIn, i32* %processType, align 8, !tbaa !419
  %cmp = icmp eq i32 %procTypeIn, 0
  br i1 %cmp, label %if.then, label %invoke.cont11

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 512) #26
  %0 = bitcast i8* %call to %"class.std::basic_ofstream"*
  invoke void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %outputFilePath, i32 20)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %if.then
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  store i8* %call, i8** %1, align 8, !tbaa !422
  %2 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %3 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i to <4 x i32>*
  store <4 x i32> <i32 1179011410, i32 48000000, i32 1163280727, i32 544501094>, <4 x i32>* %3, align 16, !tbaa !42
  %subchunksize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 4
  store i32 16, i32* %subchunksize.i.i, align 16, !tbaa !423
  %audioFormat.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 5
  store i16 1, i16* %audioFormat.i.i, align 4, !tbaa !425
  %NumChannels.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 6
  store i16 2, i16* %NumChannels.i.i, align 2, !tbaa !426
  %SampleRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i.i, align 8, !tbaa !427
  %byteRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 8
  store i32 192000, i32* %byteRate.i.i, align 4, !tbaa !428
  %BlockAlign.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i.i, align 16, !tbaa !429
  %BitsPerSample.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i.i, align 2, !tbaa !430
  %dataChunkID.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i.i, align 4, !tbaa !431
  %dataChunkSize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i.i, align 8, !tbaa !432
  %4 = bitcast i8* %call to %"class.std::basic_ostream"*
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* nonnull %4, i8* nonnull %2, i64 44)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %invoke.cont11

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  tail call void @_ZdlPv(i8* nonnull %call) #27
  br label %eh.resume

invoke.cont11:                                    ; preds = %invoke.cont4, %entry
  %call5 = call i8* @_Znwm(i64 24) #26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call5, i8 0, i64 24, i1 false) #24
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %8 = bitcast %"class.std::vector.51"** %soundSrcs to i8**
  store i8* %call5, i8** %8, align 8, !tbaa !433
  %call6 = call i8* @_Znwm(i64 296) #26
  %9 = bitcast i8* %call6 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %call6, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8, !tbaa !61
  %12 = getelementptr inbounds i8, i8* %call6, i64 12
  store i8 0, i8* %12, align 4, !tbaa !64
  %13 = getelementptr inbounds i8, i8* %call6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8, !tbaa !65
  %15 = getelementptr inbounds i8, i8* %call6, i64 20
  store i8 0, i8* %15, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8, !tbaa !40
  %16 = getelementptr inbounds i8, i8* %call6, i64 24
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %call6, i64 32
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8, !tbaa !61
  %20 = getelementptr inbounds i8, i8* %call6, i64 36
  store i8 0, i8* %20, align 4, !tbaa !64
  %21 = getelementptr inbounds i8, i8* %call6, i64 40
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8, !tbaa !65
  %23 = getelementptr inbounds i8, i8* %call6, i64 44
  store i8 0, i8* %23, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i69 = getelementptr inbounds i8, i8* %call6, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i69, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg.i = getelementptr inbounds i8, i8* %call6, i64 88
  %24 = bitcast i8* %m_pFFT_cfg.i to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %24, align 8, !tbaa !43
  %m_pIFFT_cfg.i = getelementptr inbounds i8, i8* %call6, i64 104
  %25 = bitcast i8* %m_pIFFT_cfg.i to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %25, align 8, !tbaa !289
  %26 = getelementptr inbounds i8, i8* %call6, i64 112
  %m_nBlockSize.i = getelementptr inbounds i8, i8* %call6, i64 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nBlockSize.i, i8 0, i64 24, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 184, i1 false) #24
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %27 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  store i8* %call6, i8** %27, align 8, !tbaa !434
  %call9 = call i8* @_Znwm(i64 296) #26
  %28 = bitcast i8* %call9 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %call9, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8, !tbaa !61
  %31 = getelementptr inbounds i8, i8* %call9, i64 12
  store i8 0, i8* %31, align 4, !tbaa !64
  %32 = getelementptr inbounds i8, i8* %call9, i64 16
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8, !tbaa !65
  %34 = getelementptr inbounds i8, i8* %call9, i64 20
  store i8 0, i8* %34, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !40
  %35 = getelementptr inbounds i8, i8* %call9, i64 24
  %36 = bitcast i8* %35 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %call9, i64 32
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8, !tbaa !61
  %39 = getelementptr inbounds i8, i8* %call9, i64 36
  store i8 0, i8* %39, align 4, !tbaa !64
  %40 = getelementptr inbounds i8, i8* %call9, i64 40
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 8, !tbaa !65
  %42 = getelementptr inbounds i8, i8* %call9, i64 44
  store i8 0, i8* %42, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i70 = getelementptr inbounds i8, i8* %call9, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i70, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg.i71 = getelementptr inbounds i8, i8* %call9, i64 88
  %43 = bitcast i8* %m_pFFT_cfg.i71 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %43, align 8, !tbaa !43
  %m_pIFFT_cfg.i72 = getelementptr inbounds i8, i8* %call9, i64 104
  %44 = bitcast i8* %m_pIFFT_cfg.i72 to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %44, align 8, !tbaa !289
  %45 = getelementptr inbounds i8, i8* %call9, i64 112
  %m_nBlockSize.i73 = getelementptr inbounds i8, i8* %call9, i64 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nBlockSize.i73, i8 0, i64 24, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 184, i1 false) #24
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %46 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  store i8* %call9, i8** %46, align 8, !tbaa !435
  %47 = bitcast i32* %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #24
  %48 = bitcast i8* %call6 to %class.CAmbisonicBinauralizer*
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %50 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %49, %union.anon** %50, align 8, !tbaa !291
  %51 = bitcast %union.anon* %49 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !296
  store i8 0, i8* %51, align 8, !tbaa !298
  %call17 = invoke zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nonnull %48, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont11
  br i1 %call17, label %land.rhs, label %cleanup.done41

land.rhs:                                         ; preds = %invoke.cont16
  %52 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !435
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 2
  %54 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp19 to %union.anon**
  store %union.anon* %53, %union.anon** %54, align 8, !tbaa !291
  %55 = bitcast %union.anon* %53 to i8*
  %_M_p.i.i.i.i.i86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i.i90, align 8, !tbaa !296
  store i8 0, i8* %55, align 8, !tbaa !298
  %56 = bitcast %class.CAmbisonicBinauralizer* %52 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable25 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %56, align 8, !tbaa !40
  %vfn26 = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable25, i64 5
  %57 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn26, align 8
  %call29 = invoke zeroext i1 %57(%class.CAmbisonicBinauralizer* %52, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp19)
          to label %cleanup.action.critedge unwind label %lpad27

cleanup.action.critedge:                          ; preds = %land.rhs
  %58 = load i8*, i8** %_M_p.i.i.i.i.i86, align 8, !tbaa !293
  %cmp.i.i.i97 = icmp eq i8* %58, %55
  br i1 %cmp.i.i.i97, label %cleanup.done41, label %if.then.i.i98

if.then.i.i98:                                    ; preds = %cleanup.action.critedge
  call void @_ZdlPv(i8* %58) #24
  br label %cleanup.done41

cleanup.done41:                                   ; preds = %if.then.i.i98, %cleanup.action.critedge, %invoke.cont16
  %59 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i102 = icmp eq i8* %59, %51
  br i1 %cmp.i.i.i102, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104, label %if.then.i.i103

if.then.i.i103:                                   ; preds = %cleanup.done41
  call void @_ZdlPv(i8* %59) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104: ; preds = %if.then.i.i103, %cleanup.done41
  %call51 = call i8* @_Znwm(i64 200) #26
  %60 = bitcast i8* %call51 to i32 (...)***
  %61 = getelementptr inbounds i8, i8* %call51, i64 8
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 8, !tbaa !61
  %63 = getelementptr inbounds i8, i8* %call51, i64 12
  store i8 0, i8* %63, align 4, !tbaa !64
  %64 = getelementptr inbounds i8, i8* %call51, i64 16
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8, !tbaa !65
  %66 = getelementptr inbounds i8, i8* %call51, i64 20
  store i8 0, i8* %66, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8, !tbaa !40
  %m_orientation.i = getelementptr inbounds i8, i8* %call51, i64 24
  %67 = bitcast i8* %m_orientation.i to %class.Orientation*
  invoke void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %67, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
          to label %invoke.cont59 unwind label %lpad52

lpad15:                                           ; preds = %invoke.cont11
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  %70 = extractvalue { i8*, i32 } %68, 1
  br label %ehcleanup46

lpad27:                                           ; preds = %land.rhs
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 1
  %73 = extractvalue { i8*, i32 } %71, 0
  %74 = load i8*, i8** %_M_p.i.i.i.i.i86, align 8, !tbaa !293
  %cmp.i.i.i76 = icmp eq i8* %74, %55
  br i1 %cmp.i.i.i76, label %ehcleanup46, label %if.then.i.i77

if.then.i.i77:                                    ; preds = %lpad27
  call void @_ZdlPv(i8* %74) #24
  br label %ehcleanup46

ehcleanup46:                                      ; preds = %if.then.i.i77, %lpad27, %lpad15
  %ehselector.slot.1 = phi i32 [ %70, %lpad15 ], [ %72, %lpad27 ], [ %72, %if.then.i.i77 ]
  %exn.slot.1 = phi i8* [ %69, %lpad15 ], [ %73, %lpad27 ], [ %73, %if.then.i.i77 ]
  %75 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i = icmp eq i8* %75, %51
  br i1 %cmp.i.i.i, label %ehcleanup65, label %if.then.i.i

if.then.i.i:                                      ; preds = %ehcleanup46
  call void @_ZdlPv(i8* %75) #24
  br label %ehcleanup65

invoke.cont59:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104
  %76 = bitcast i8* %call51 to %class.CAmbisonicProcessor*
  %m_pfTempSample.i = getelementptr inbounds i8, i8* %call51, i64 48
  %m_ppcpPsychFilters.i = getelementptr inbounds i8, i8* %call51, i64 112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfTempSample.i, i8 0, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_ppcpPsychFilters.i, i8 0, i64 16, i1 false)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %77 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  store i8* %call51, i8** %77, align 8, !tbaa !436
  %call56 = call zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* nonnull %76, i32 3, i1 zeroext true, i32 1024, i32 undef)
  %call57 = call i8* @_Znwm(i64 104) #26
  %78 = bitcast i8* %call57 to %class.CAmbisonicZoomer*
  %79 = bitcast i8* %call57 to i32 (...)***
  %80 = getelementptr inbounds i8, i8* %call57, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 8, !tbaa !61
  %82 = getelementptr inbounds i8, i8* %call57, i64 12
  store i8 0, i8* %82, align 4, !tbaa !64
  %83 = getelementptr inbounds i8, i8* %call57, i64 16
  %84 = bitcast i8* %83 to i32*
  store i32 0, i32* %84, align 8, !tbaa !65
  %85 = getelementptr inbounds i8, i8* %call57, i64 20
  store i8 0, i8* %85, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8, !tbaa !40
  %86 = getelementptr inbounds i8, i8* %call57, i64 24
  %87 = bitcast i8* %86 to i32 (...)***
  %88 = getelementptr inbounds i8, i8* %call57, i64 32
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 8, !tbaa !61
  %90 = getelementptr inbounds i8, i8* %call57, i64 36
  store i8 0, i8* %90, align 4, !tbaa !64
  %91 = getelementptr inbounds i8, i8* %call57, i64 40
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 8, !tbaa !65
  %93 = getelementptr inbounds i8, i8* %call57, i64 44
  store i8 0, i8* %93, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i = getelementptr inbounds i8, i8* %call57, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i, i8 0, i64 44, i1 false) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %94 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  store i8* %call57, i8** %94, align 8, !tbaa !437
  %call64 = call zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* nonnull %78, i32 3, i1 zeroext true, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #24
  ret void

lpad52:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  %97 = extractvalue { i8*, i32 } %95, 1
  call void @_ZdlPv(i8* nonnull %call51) #27
  br label %ehcleanup65

ehcleanup65:                                      ; preds = %lpad52, %if.then.i.i, %ehcleanup46
  %ehselector.slot.3 = phi i32 [ %97, %lpad52 ], [ %ehselector.slot.1, %ehcleanup46 ], [ %ehselector.slot.1, %if.then.i.i ]
  %exn.slot.3 = phi i8* [ %96, %lpad52 ], [ %exn.slot.1, %ehcleanup46 ], [ %exn.slot.1, %if.then.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #24
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup65, %lpad
  %ehselector.slot.4 = phi i32 [ %ehselector.slot.3, %ehcleanup65 ], [ %7, %lpad ]
  %exn.slot.4 = phi i8* [ %exn.slot.3, %ehcleanup65 ], [ %6, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.4, 0
  %lpad.val67 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.4, 1
  resume { i8*, i32 } %lpad.val67
}

; Function Attrs: uwtable
declare void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %wavh = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 16
  %0 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %0) #24
  %1 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to <4 x i32>*
  store <4 x i32> <i32 1179011410, i32 48000000, i32 1163280727, i32 544501094>, <4 x i32>* %1, align 16, !tbaa !42
  %subchunksize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 4
  store i32 16, i32* %subchunksize.i, align 16, !tbaa !423
  %audioFormat.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 5
  store i16 1, i16* %audioFormat.i, align 4, !tbaa !425
  %NumChannels.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 6
  store i16 2, i16* %NumChannels.i, align 2, !tbaa !426
  %SampleRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i, align 8, !tbaa !427
  %byteRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 8
  store i32 192000, i32* %byteRate.i, align 4, !tbaa !428
  %BlockAlign.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i, align 16, !tbaa !429
  %BitsPerSample.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i, align 2, !tbaa !430
  %dataChunkID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i, align 4, !tbaa !431
  %dataChunkSize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i, align 8, !tbaa !432
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  %3 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !422
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %3, i8* nonnull %0, i64 44)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %0) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !419
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !422
  tail call void @free(i8* %2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %3 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i10 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %3, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i10 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !438
  %6 = bitcast %"class.std::vector.51"* %3 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !441
  %cmp213 = icmp eq i64 %5, %7
  br i1 %cmp213, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %.in = phi %"class.std::vector.51"* [ %3, %if.end ], [ %21, %for.body ]
  %8 = bitcast %"class.std::vector.51"* %.in to i8*
  tail call void @free(i8* %8) #24
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !434
  tail call void @free(i8* %10) #24
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %11 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !435
  tail call void @free(i8* %12) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %13 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !436
  tail call void @free(i8* %14) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %15 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !437
  tail call void @free(i8* %16) #24
  ret void

for.body:                                         ; preds = %for.body, %if.end
  %17 = phi %"class.std::vector.51"* [ %21, %for.body ], [ %3, %if.end ]
  %conv15 = phi i64 [ %conv, %for.body ], [ 0, %if.end ]
  %soundIdx.014 = phi i32 [ %inc, %for.body ], [ 0, %if.end ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %17, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !441
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %18, i64 %conv15
  %19 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !43
  tail call void @free(i8* %20) #24
  %inc = add i32 %soundIdx.014, 1
  %conv = zext i32 %inc to i64
  %21 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %21, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !438
  %24 = bitcast %"class.std::vector.51"* %21 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !441
  %sub.ptr.sub.i = sub i64 %23, %25
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp2 = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp2, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i152 = alloca i64, align 8
  %__dnew.i.i.i.i67 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp7 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp27 = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !419
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp27 to %union.anon**
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i152 to i8*
  %_M_p.i18.i.i.i.i155 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i156 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i162 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 1
  %soundSrcs50 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 4136) #26
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !291
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24
  store i64 25, i64* %__dnew.i.i.i.i, align 8, !tbaa !297
  %call5.i.i.i9.i61 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %lpad

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i18.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i61, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !293
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !297
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i61, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !296
  %10 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !293
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24
  %11 = bitcast i8* %call to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %11, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 3, i1 zeroext undef)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  %12 = ptrtoint i8* %call to i64
  %13 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i64 = icmp eq i8* %13, %7
  br i1 %cmp.i.i.i64, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66, label %if.then.i.i65

if.then.i.i65:                                    ; preds = %invoke.cont3
  call void @_ZdlPv(i8* %13) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66: ; preds = %if.then.i.i65, %invoke.cont3
  %srcPos.i = getelementptr inbounds i8, i8* %call, i64 4120
  %14 = bitcast i8* %srcPos.i to i32*
  store i32 -1110651699, i32* %14, align 8, !tbaa !407
  %fElevation4.i = getelementptr inbounds i8, i8* %call, i64 4124
  %15 = bitcast i8* %fElevation4.i to i32*
  store i32 1070134723, i32* %15, align 4, !tbaa !408
  %fDistance6.i = getelementptr inbounds i8, i8* %call, i64 4128
  %16 = bitcast i8* %fDistance6.i to i32*
  store i32 1065353216, i32* %16, align 8, !tbaa !409
  %BEncoder.i = getelementptr inbounds i8, i8* %call, i64 4112
  %17 = bitcast i8* %BEncoder.i to %class.CAmbisonicEncoderDist**
  %18 = bitcast i8* %BEncoder.i to %class.CAmbisonicSource**
  %19 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %18, align 8, !tbaa !406
  %agg.tmp.sroa.0.0..sroa_cast.i = bitcast i8* %srcPos.i to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i, align 8
  %20 = bitcast %class.CAmbisonicSource* %19 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %20, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i, i64 5
  %21 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i, align 8
  call void %21(%class.CAmbisonicSource* %19, <2 x float> %agg.tmp.sroa.0.0.copyload.i, float 1.000000e+00)
  %22 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %17, align 8, !tbaa !406
  %23 = bitcast %class.CAmbisonicEncoderDist* %22 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !40
  %vfn10.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i, i64 4
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i, align 8
  call void %24(%class.CAmbisonicEncoderDist* %22)
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %25 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %25, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !438
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %25, i64 0, i32 0, i32 0, i32 2
  %27 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i, align 8, !tbaa !442
  %cmp.i = icmp eq %"class.ILLIXR_AUDIO::Sound"** %26, %27
  %28 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %26 to i64
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
  %29 = bitcast %"class.ILLIXR_AUDIO::Sound"** %26 to i64*
  store i64 %12, i64* %29, align 8, !tbaa !43
  %30 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !438
  %incdec.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %30, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

if.else.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
  %31 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %32 = bitcast %"class.std::vector.51"* %25 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !43
  %sub.ptr.sub.i21.i.i.i = sub i64 %28, %33
  %sub.ptr.div.i22.i.i.i = ashr exact i64 %sub.ptr.sub.i21.i.i.i, 3
  %cmp.i.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i.i, 0
  %.sroa.speculated.i.i.i = select i1 %cmp.i.i.i.i, i64 1, i64 %sub.ptr.div.i22.i.i.i
  %add.i.i.i = add nsw i64 %.sroa.speculated.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 2305843009213693951
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp9.i.i.i
  %cond.i.i.i = select i1 %or.cond.i.i.i, i64 2305843009213693951, i64 %add.i.i.i
  %cmp.i67.i.i = icmp eq i64 %cond.i.i.i, 0
  %34 = inttoptr i64 %33 to %"class.ILLIXR_AUDIO::Sound"**
  br i1 %cmp.i67.i.i, label %invoke.cont.i.i, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i: ; preds = %if.else.i
  %35 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %25, i64 0, i32 0, i32 0, i32 0
  %mul.i.i.i.i.i = shl i64 %cond.i.i.i, 3
  %call2.i.i.i.i.i = call i8* @_Znwm(i64 %mul.i.i.i.i.i)
  %36 = bitcast i8* %call2.i.i.i.i.i to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %35, align 8, !tbaa !441
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i, %if.else.i
  %37 = phi %"class.ILLIXR_AUDIO::Sound"** [ %.pre.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %34, %if.else.i ]
  %38 = phi i8* [ %call2.i.i.i.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %cond.i68.i.i = phi %"class.ILLIXR_AUDIO::Sound"** [ %36, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %add.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i, i64 %sub.ptr.div.i22.i.i.i
  %39 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i to i64*
  store i64 %12, i64* %39, align 8, !tbaa !43
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %37 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i = sub i64 %28, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i, 3
  %tobool.i.i.i.i.i.i.i.i77.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i77.i.i, label %invoke.cont10.i.i, label %if.then.i.i.i.i.i.i.i.i78.i.i

if.then.i.i.i.i.i.i.i.i78.i.i:                    ; preds = %invoke.cont.i.i
  %40 = bitcast %"class.ILLIXR_AUDIO::Sound"** %37 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %40, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i, i1 false) #24
  br label %invoke.cont10.i.i

invoke.cont10.i.i:                                ; preds = %if.then.i.i.i.i.i.i.i.i78.i.i, %invoke.cont.i.i
  %add.ptr.i.i.i.i.i.i.i.i79.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i
  %incdec.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i79.i.i, i64 1
  %41 = load i64, i64* %31, align 8, !tbaa !438
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i = sub i64 %41, %28
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, 3
  %tobool.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i, label %invoke.cont15.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i.i:                      ; preds = %invoke.cont10.i.i
  %42 = bitcast %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i to i8*
  %43 = bitcast %"class.ILLIXR_AUDIO::Sound"** %26 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %43, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i, i1 false) #24
  br label %invoke.cont15.i.i

invoke.cont15.i.i:                                ; preds = %if.then.i.i.i.i.i.i.i.i.i.i, %invoke.cont10.i.i
  %add.ptr.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i
  %tobool.i69.i.i = icmp eq %"class.ILLIXR_AUDIO::Sound"** %37, null
  br i1 %tobool.i69.i.i, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i, label %if.then.i70.i.i

if.then.i70.i.i:                                  ; preds = %invoke.cont15.i.i
  %44 = bitcast %"class.ILLIXR_AUDIO::Sound"** %37 to i8*
  call void @_ZdlPv(i8* nonnull %44) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i: ; preds = %if.then.i70.i.i, %invoke.cont15.i.i
  %45 = bitcast %"class.std::vector.51"* %25 to i8**
  store i8* %38, i8** %45, align 8, !tbaa !441
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i.i.i, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !438
  %add.ptr39.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i, i64 %cond.i.i.i
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i, %if.then.i
  %_M_finish.i.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i, %if.then.i ], [ %_M_end_of_storage.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i ]
  %incdec.ptr.i.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i, %if.then.i ], [ %add.ptr39.i.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i.sink, align 8, !tbaa !43
  %call6 = call i8* @_Znwm(i64 4136) #26
  %46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2
  %47 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp7 to %union.anon**
  store %union.anon* %46, %union.anon** %47, align 8, !tbaa !291
  %48 = bitcast %union.anon* %46 to i8*
  %49 = bitcast i64* %__dnew.i.i.i.i67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #24
  store i64 28, i64* %__dnew.i.i.i.i67, align 8, !tbaa !297
  %call5.i.i.i9.i80 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i67, i64 0)
          to label %call5.i.i.i9.i.noexc79 unwind label %lpad9

call5.i.i.i9.i.noexc79:                           ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  %_M_p.i18.i.i.i.i70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i80, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !293
  %50 = load i64, i64* %__dnew.i.i.i.i67, align 8, !tbaa !297
  %_M_allocated_capacity.i.i.i.i.i71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2, i32 0
  store i64 %50, i64* %_M_allocated_capacity.i.i.i.i.i71, align 8, !tbaa !298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i80, i8* nonnull align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i64 28, i1 false) #24
  %_M_string_length.i.i.i.i.i.i77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 1
  store i64 %50, i64* %_M_string_length.i.i.i.i.i.i77, align 8, !tbaa !296
  %51 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !293
  %arrayidx.i.i.i.i.i78 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %arrayidx.i.i.i.i.i78, align 1, !tbaa !298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #24
  %52 = bitcast i8* %call6 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %52, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i32 3, i1 zeroext undef)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %call5.i.i.i9.i.noexc79
  %53 = ptrtoint i8* %call6 to i64
  %54 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !293
  %cmp.i.i.i84 = icmp eq i8* %54, %48
  br i1 %cmp.i.i.i84, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86, label %if.then.i.i85

if.then.i.i85:                                    ; preds = %invoke.cont12
  call void @_ZdlPv(i8* %54) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86: ; preds = %if.then.i.i85, %invoke.cont12
  %srcPos.i87 = getelementptr inbounds i8, i8* %call6, i64 4120
  %55 = bitcast i8* %srcPos.i87 to i32*
  store i32 1065353216, i32* %55, align 8, !tbaa !407
  %fElevation4.i89 = getelementptr inbounds i8, i8* %call6, i64 4124
  %56 = bitcast i8* %fElevation4.i89 to i32*
  store i32 0, i32* %56, align 4, !tbaa !408
  %fDistance6.i91 = getelementptr inbounds i8, i8* %call6, i64 4128
  %57 = bitcast i8* %fDistance6.i91 to i32*
  store i32 1084227584, i32* %57, align 8, !tbaa !409
  %BEncoder.i92 = getelementptr inbounds i8, i8* %call6, i64 4112
  %58 = bitcast i8* %BEncoder.i92 to %class.CAmbisonicEncoderDist**
  %59 = bitcast i8* %BEncoder.i92 to %class.CAmbisonicSource**
  %60 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %59, align 8, !tbaa !406
  %agg.tmp.sroa.0.0..sroa_cast.i93 = bitcast i8* %srcPos.i87 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i94 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i93, align 8
  %61 = bitcast %class.CAmbisonicSource* %60 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i96 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %61, align 8, !tbaa !40
  %vfn.i97 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i96, i64 5
  %62 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i97, align 8
  call void %62(%class.CAmbisonicSource* %60, <2 x float> %agg.tmp.sroa.0.0.copyload.i94, float 5.000000e+00)
  %63 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %58, align 8, !tbaa !406
  %64 = bitcast %class.CAmbisonicEncoderDist* %63 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i98 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %64, align 8, !tbaa !40
  %vfn10.i99 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i98, i64 4
  %65 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i99, align 8
  call void %65(%class.CAmbisonicEncoderDist* %63)
  %66 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i100 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %66, i64 0, i32 0, i32 0, i32 1
  %67 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !438
  %_M_end_of_storage.i101 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %66, i64 0, i32 0, i32 0, i32 2
  %68 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i101, align 8, !tbaa !442
  %cmp.i102 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %67, %68
  %69 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %67 to i64
  br i1 %cmp.i102, label %if.else.i115, label %if.then.i104

if.then.i104:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
  %70 = bitcast %"class.ILLIXR_AUDIO::Sound"** %67 to i64*
  store i64 %53, i64* %70, align 8, !tbaa !43
  %71 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !438
  %incdec.ptr.i103 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %71, i64 1
  br label %if.end.sink.split

if.else.i115:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
  %72 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100 to i64*
  %73 = bitcast %"class.std::vector.51"* %66 to i64*
  %74 = load i64, i64* %73, align 8, !tbaa !43
  %sub.ptr.sub.i21.i.i.i105 = sub i64 %69, %74
  %sub.ptr.div.i22.i.i.i106 = ashr exact i64 %sub.ptr.sub.i21.i.i.i105, 3
  %cmp.i.i.i.i107 = icmp eq i64 %sub.ptr.sub.i21.i.i.i105, 0
  %.sroa.speculated.i.i.i108 = select i1 %cmp.i.i.i.i107, i64 1, i64 %sub.ptr.div.i22.i.i.i106
  %add.i.i.i109 = add nsw i64 %.sroa.speculated.i.i.i108, %sub.ptr.div.i22.i.i.i106
  %cmp7.i.i.i110 = icmp ult i64 %add.i.i.i109, %sub.ptr.div.i22.i.i.i106
  %cmp9.i.i.i111 = icmp ugt i64 %add.i.i.i109, 2305843009213693951
  %or.cond.i.i.i112 = or i1 %cmp7.i.i.i110, %cmp9.i.i.i111
  %cond.i.i.i113 = select i1 %or.cond.i.i.i112, i64 2305843009213693951, i64 %add.i.i.i109
  %cmp.i67.i.i114 = icmp eq i64 %cond.i.i.i113, 0
  %75 = inttoptr i64 %74 to %"class.ILLIXR_AUDIO::Sound"**
  br i1 %cmp.i67.i.i114, label %invoke.cont.i.i126, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119: ; preds = %if.else.i115
  %76 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %66, i64 0, i32 0, i32 0, i32 0
  %mul.i.i.i.i.i116 = shl i64 %cond.i.i.i113, 3
  %call2.i.i.i.i.i117 = call i8* @_Znwm(i64 %mul.i.i.i.i.i116)
  %77 = bitcast i8* %call2.i.i.i.i.i117 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i118 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %76, align 8, !tbaa !441
  br label %invoke.cont.i.i126

invoke.cont.i.i126:                               ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119, %if.else.i115
  %78 = phi %"class.ILLIXR_AUDIO::Sound"** [ %.pre.i.i118, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119 ], [ %75, %if.else.i115 ]
  %79 = phi i8* [ %call2.i.i.i.i.i117, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119 ], [ null, %if.else.i115 ]
  %cond.i68.i.i120 = phi %"class.ILLIXR_AUDIO::Sound"** [ %77, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i119 ], [ null, %if.else.i115 ]
  %add.ptr.i.i121 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i120, i64 %sub.ptr.div.i22.i.i.i106
  %80 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i121 to i64*
  store i64 %53, i64* %80, align 8, !tbaa !43
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i122 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %78 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i123 = sub i64 %69, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i122
  %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i124 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i123, 3
  %tobool.i.i.i.i.i.i.i.i77.i.i125 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i123, 0
  br i1 %tobool.i.i.i.i.i.i.i.i77.i.i125, label %invoke.cont10.i.i133, label %if.then.i.i.i.i.i.i.i.i78.i.i127

if.then.i.i.i.i.i.i.i.i78.i.i127:                 ; preds = %invoke.cont.i.i126
  %81 = bitcast %"class.ILLIXR_AUDIO::Sound"** %78 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %81, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i123, i1 false) #24
  br label %invoke.cont10.i.i133

invoke.cont10.i.i133:                             ; preds = %if.then.i.i.i.i.i.i.i.i78.i.i127, %invoke.cont.i.i126
  %add.ptr.i.i.i.i.i.i.i.i79.i.i128 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i120, i64 %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i124
  %incdec.ptr.i.i129 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i79.i.i128, i64 1
  %82 = load i64, i64* %72, align 8, !tbaa !438
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i130 = sub i64 %82, %69
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i131 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i130, 3
  %tobool.i.i.i.i.i.i.i.i.i.i132 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i130, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i132, label %invoke.cont15.i.i137, label %if.then.i.i.i.i.i.i.i.i.i.i134

if.then.i.i.i.i.i.i.i.i.i.i134:                   ; preds = %invoke.cont10.i.i133
  %83 = bitcast %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i129 to i8*
  %84 = bitcast %"class.ILLIXR_AUDIO::Sound"** %67 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i130, i1 false) #24
  br label %invoke.cont15.i.i137

invoke.cont15.i.i137:                             ; preds = %if.then.i.i.i.i.i.i.i.i.i.i134, %invoke.cont10.i.i133
  %add.ptr.i.i.i.i.i.i.i.i.i.i135 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i129, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i131
  %tobool.i69.i.i136 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %78, null
  br i1 %tobool.i69.i.i136, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140, label %if.then.i70.i.i138

if.then.i70.i.i138:                               ; preds = %invoke.cont15.i.i137
  %85 = bitcast %"class.ILLIXR_AUDIO::Sound"** %78 to i8*
  call void @_ZdlPv(i8* nonnull %85) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140: ; preds = %if.then.i70.i.i138, %invoke.cont15.i.i137
  %86 = bitcast %"class.std::vector.51"* %66 to i8**
  store i8* %79, i8** %86, align 8, !tbaa !441
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i.i.i135, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !438
  %add.ptr39.i.i139 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i120, i64 %cond.i.i.i113
  br label %if.end.sink.split

lpad:                                             ; preds = %if.then
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  %89 = extractvalue { i8*, i32 } %87, 1
  br label %ehcleanup52

lpad2:                                            ; preds = %call5.i.i.i9.i.noexc
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  %92 = extractvalue { i8*, i32 } %90, 1
  %93 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i144 = icmp eq i8* %93, %7
  br i1 %cmp.i.i.i144, label %ehcleanup52, label %if.then.i.i145

if.then.i.i145:                                   ; preds = %lpad2
  call void @_ZdlPv(i8* %93) #24
  br label %ehcleanup52

lpad9:                                            ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  br label %ehcleanup52

lpad11:                                           ; preds = %call5.i.i.i9.i.noexc79
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  %99 = extractvalue { i8*, i32 } %97, 1
  %100 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !293
  %cmp.i.i.i149 = icmp eq i8* %100, %48
  br i1 %cmp.i.i.i149, label %ehcleanup52, label %if.then.i.i150

if.then.i.i150:                                   ; preds = %lpad11
  call void @_ZdlPv(i8* %100) #24
  br label %ehcleanup52

for.body:                                         ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226, %for.cond.preheader
  %i.0251 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226 ]
  %call26 = call i8* @_Znwm(i64 4136) #26
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !291
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24
  store i64 25, i64* %__dnew.i.i.i.i152, align 8, !tbaa !297
  %call5.i.i.i9.i165 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i152, i64 0)
          to label %call5.i.i.i9.i.noexc164 unwind label %lpad29

call5.i.i.i9.i.noexc164:                          ; preds = %for.body
  store i8* %call5.i.i.i9.i165, i8** %_M_p.i18.i.i.i.i155, align 8, !tbaa !293
  %101 = load i64, i64* %__dnew.i.i.i.i152, align 8, !tbaa !297
  store i64 %101, i64* %_M_allocated_capacity.i.i.i.i.i156, align 8, !tbaa !298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i165, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25, i1 false) #24
  store i64 %101, i64* %_M_string_length.i.i.i.i.i.i162, align 8, !tbaa !296
  %102 = load i8*, i8** %_M_p.i18.i.i.i.i155, align 8, !tbaa !293
  %arrayidx.i.i.i.i.i163 = getelementptr inbounds i8, i8* %102, i64 %101
  store i8 0, i8* %arrayidx.i.i.i.i.i163, align 1, !tbaa !298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24
  %103 = bitcast i8* %call26 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %103, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i32 3, i1 zeroext undef)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %call5.i.i.i9.i.noexc164
  %104 = ptrtoint i8* %call26 to i64
  %105 = load i8*, i8** %_M_p.i18.i.i.i.i155, align 8, !tbaa !293
  %cmp.i.i.i169 = icmp eq i8* %105, %3
  br i1 %cmp.i.i.i169, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171, label %if.then.i.i170

if.then.i.i170:                                   ; preds = %invoke.cont32
  call void @_ZdlPv(i8* %105) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171: ; preds = %if.then.i.i170, %invoke.cont32
  %conv = uitofp i32 %i.0251 to double
  %mul = fmul double %conv, -1.000000e-01
  %conv41 = fptrunc double %mul to float
  %mul44 = fmul double %conv, 1.570000e+00
  %conv45 = fptrunc double %mul44 to float
  %conv48 = uitofp i32 %i.0251 to float
  %srcPos.i172 = getelementptr inbounds i8, i8* %call26, i64 4120
  %106 = bitcast i8* %srcPos.i172 to float*
  store float %conv41, float* %106, align 8, !tbaa !407
  %fElevation4.i174 = getelementptr inbounds i8, i8* %call26, i64 4124
  %107 = bitcast i8* %fElevation4.i174 to float*
  store float %conv45, float* %107, align 4, !tbaa !408
  %fDistance6.i176 = getelementptr inbounds i8, i8* %call26, i64 4128
  %108 = bitcast i8* %fDistance6.i176 to float*
  store float %conv48, float* %108, align 8, !tbaa !409
  %BEncoder.i177 = getelementptr inbounds i8, i8* %call26, i64 4112
  %109 = bitcast i8* %BEncoder.i177 to %class.CAmbisonicEncoderDist**
  %110 = bitcast i8* %BEncoder.i177 to %class.CAmbisonicSource**
  %111 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %110, align 8, !tbaa !406
  %agg.tmp.sroa.0.0..sroa_cast.i178 = bitcast i8* %srcPos.i172 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i179 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i178, align 8
  %112 = bitcast %class.CAmbisonicSource* %111 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i181 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %112, align 8, !tbaa !40
  %vfn.i182 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i181, i64 5
  %113 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i182, align 8
  call void %113(%class.CAmbisonicSource* %111, <2 x float> %agg.tmp.sroa.0.0.copyload.i179, float %conv48)
  %114 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %109, align 8, !tbaa !406
  %115 = bitcast %class.CAmbisonicEncoderDist* %114 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i183 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %115, align 8, !tbaa !40
  %vfn10.i184 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i183, i64 4
  %116 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i184, align 8
  call void %116(%class.CAmbisonicEncoderDist* %114)
  %117 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs50, align 8, !tbaa !433
  %_M_finish.i185 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %117, i64 0, i32 0, i32 0, i32 1
  %118 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i185, align 8, !tbaa !438
  %_M_end_of_storage.i186 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %117, i64 0, i32 0, i32 0, i32 2
  %119 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i186, align 8, !tbaa !442
  %cmp.i187 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %118, %119
  %120 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %118 to i64
  br i1 %cmp.i187, label %if.else.i200, label %if.then.i189

if.then.i189:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171
  %121 = bitcast %"class.ILLIXR_AUDIO::Sound"** %118 to i64*
  store i64 %104, i64* %121, align 8, !tbaa !43
  %122 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i185, align 8, !tbaa !438
  %incdec.ptr.i188 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %122, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226

if.else.i200:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171
  %123 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i185 to i64*
  %124 = bitcast %"class.std::vector.51"* %117 to i64*
  %125 = load i64, i64* %124, align 8, !tbaa !43
  %sub.ptr.sub.i21.i.i.i190 = sub i64 %120, %125
  %sub.ptr.div.i22.i.i.i191 = ashr exact i64 %sub.ptr.sub.i21.i.i.i190, 3
  %cmp.i.i.i.i192 = icmp eq i64 %sub.ptr.sub.i21.i.i.i190, 0
  %.sroa.speculated.i.i.i193 = select i1 %cmp.i.i.i.i192, i64 1, i64 %sub.ptr.div.i22.i.i.i191
  %add.i.i.i194 = add nsw i64 %.sroa.speculated.i.i.i193, %sub.ptr.div.i22.i.i.i191
  %cmp7.i.i.i195 = icmp ult i64 %add.i.i.i194, %sub.ptr.div.i22.i.i.i191
  %cmp9.i.i.i196 = icmp ugt i64 %add.i.i.i194, 2305843009213693951
  %or.cond.i.i.i197 = or i1 %cmp7.i.i.i195, %cmp9.i.i.i196
  %cond.i.i.i198 = select i1 %or.cond.i.i.i197, i64 2305843009213693951, i64 %add.i.i.i194
  %cmp.i67.i.i199 = icmp eq i64 %cond.i.i.i198, 0
  %126 = inttoptr i64 %125 to %"class.ILLIXR_AUDIO::Sound"**
  br i1 %cmp.i67.i.i199, label %invoke.cont.i.i211, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204: ; preds = %if.else.i200
  %127 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %117, i64 0, i32 0, i32 0, i32 0
  %mul.i.i.i.i.i201 = shl i64 %cond.i.i.i198, 3
  %call2.i.i.i.i.i202 = call i8* @_Znwm(i64 %mul.i.i.i.i.i201)
  %128 = bitcast i8* %call2.i.i.i.i.i202 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i203 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %127, align 8, !tbaa !441
  br label %invoke.cont.i.i211

invoke.cont.i.i211:                               ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204, %if.else.i200
  %129 = phi %"class.ILLIXR_AUDIO::Sound"** [ %.pre.i.i203, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ %126, %if.else.i200 ]
  %130 = phi i8* [ %call2.i.i.i.i.i202, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ null, %if.else.i200 ]
  %cond.i68.i.i205 = phi %"class.ILLIXR_AUDIO::Sound"** [ %128, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ null, %if.else.i200 ]
  %add.ptr.i.i206 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i205, i64 %sub.ptr.div.i22.i.i.i191
  %131 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i206 to i64*
  store i64 %104, i64* %131, align 8, !tbaa !43
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i207 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %129 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i208 = sub i64 %120, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i74.i.i207
  %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i209 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i208, 3
  %tobool.i.i.i.i.i.i.i.i77.i.i210 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i208, 0
  br i1 %tobool.i.i.i.i.i.i.i.i77.i.i210, label %invoke.cont10.i.i218, label %if.then.i.i.i.i.i.i.i.i78.i.i212

if.then.i.i.i.i.i.i.i.i78.i.i212:                 ; preds = %invoke.cont.i.i211
  %132 = bitcast %"class.ILLIXR_AUDIO::Sound"** %129 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %132, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i75.i.i208, i1 false) #24
  br label %invoke.cont10.i.i218

invoke.cont10.i.i218:                             ; preds = %if.then.i.i.i.i.i.i.i.i78.i.i212, %invoke.cont.i.i211
  %add.ptr.i.i.i.i.i.i.i.i79.i.i213 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i205, i64 1
  %incdec.ptr.i.i214 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i79.i.i213, i64 %sub.ptr.div.i.i.i.i.i.i.i.i76.i.i209
  %133 = load i64, i64* %123, align 8, !tbaa !438
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i215 = sub i64 %133, %120
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.i216 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i215, 3
  %tobool.i.i.i.i.i.i.i.i.i.i217 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i215, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i217, label %invoke.cont15.i.i222, label %if.then.i.i.i.i.i.i.i.i.i.i219

if.then.i.i.i.i.i.i.i.i.i.i219:                   ; preds = %invoke.cont10.i.i218
  %134 = bitcast %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i214 to i8*
  %135 = bitcast %"class.ILLIXR_AUDIO::Sound"** %118 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* align 8 %135, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.i215, i1 false) #24
  br label %invoke.cont15.i.i222

invoke.cont15.i.i222:                             ; preds = %if.then.i.i.i.i.i.i.i.i.i.i219, %invoke.cont10.i.i218
  %add.ptr.i.i.i.i.i.i.i.i.i.i220 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i214, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.i216
  %tobool.i69.i.i221 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %129, null
  br i1 %tobool.i69.i.i221, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225, label %if.then.i70.i.i223

if.then.i70.i.i223:                               ; preds = %invoke.cont15.i.i222
  %136 = bitcast %"class.ILLIXR_AUDIO::Sound"** %129 to i8*
  call void @_ZdlPv(i8* nonnull %136) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225: ; preds = %if.then.i70.i.i223, %invoke.cont15.i.i222
  %137 = bitcast %"class.std::vector.51"* %117 to i8**
  store i8* %130, i8** %137, align 8, !tbaa !441
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i.i.i.i.i.i.i.i.i220, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i185, align 8, !tbaa !438
  %add.ptr39.i.i224 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i68.i.i205, i64 %cond.i.i.i198
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225, %if.then.i189
  %_M_finish.i185.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i185, %if.then.i189 ], [ %_M_end_of_storage.i186, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225 ]
  %incdec.ptr.i188.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i188, %if.then.i189 ], [ %add.ptr39.i.i224, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i225 ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i188.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i185.sink, align 8, !tbaa !43
  %inc = add nuw nsw i32 %i.0251, 1
  %exitcond = icmp eq i32 %inc, 16
  br i1 %exitcond, label %if.end, label %for.body

lpad29:                                           ; preds = %for.body
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  %140 = extractvalue { i8*, i32 } %138, 1
  br label %ehcleanup52

lpad31:                                           ; preds = %call5.i.i.i9.i.noexc164
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = extractvalue { i8*, i32 } %141, 0
  %143 = extractvalue { i8*, i32 } %141, 1
  %144 = load i8*, i8** %_M_p.i18.i.i.i.i155, align 8, !tbaa !293
  %cmp.i.i.i = icmp eq i8* %144, %3
  br i1 %cmp.i.i.i, label %ehcleanup52, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad31
  call void @_ZdlPv(i8* %144) #24
  br label %ehcleanup52

if.end.sink.split:                                ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140, %if.then.i104
  %_M_end_of_storage.i101.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_end_of_storage.i101, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140 ], [ %_M_finish.i100, %if.then.i104 ]
  %add.ptr39.i.i139.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %add.ptr39.i.i139, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i140 ], [ %incdec.ptr.i103, %if.then.i104 ]
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr39.i.i139.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i101.sink, align 8, !tbaa !43
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit226
  ret void

ehcleanup52:                                      ; preds = %if.then.i.i, %lpad31, %lpad29, %if.then.i.i150, %lpad11, %lpad9, %if.then.i.i145, %lpad2, %lpad
  %call6.sink = phi i8* [ %call, %if.then.i.i145 ], [ %call, %lpad2 ], [ %call, %lpad ], [ %call6, %if.then.i.i150 ], [ %call6, %lpad11 ], [ %call6, %lpad9 ], [ %call26, %if.then.i.i ], [ %call26, %lpad31 ], [ %call26, %lpad29 ]
  %exn.slot.3 = phi i8* [ %91, %if.then.i.i145 ], [ %91, %lpad2 ], [ %88, %lpad ], [ %98, %if.then.i.i150 ], [ %98, %lpad11 ], [ %95, %lpad9 ], [ %142, %if.then.i.i ], [ %142, %lpad31 ], [ %139, %lpad29 ]
  %ehselector.slot.3 = phi i32 [ %92, %if.then.i.i145 ], [ %92, %lpad2 ], [ %89, %lpad ], [ %99, %if.then.i.i150 ], [ %99, %lpad11 ], [ %96, %lpad9 ], [ %143, %if.then.i.i ], [ %143, %lpad31 ], [ %140, %lpad29 ]
  call void @_ZdlPv(i8* nonnull %call6.sink) #27
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val54 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val54
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio12processBlockEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %sumBF = alloca %class.CBFormat, align 8
  %call = tail call i8* @_Znam(i64 16) #26
  %0 = bitcast i8* %call to float**
  %call2 = tail call i8* @_Znam(i64 4096) #26
  %1 = bitcast i8* %call to i8**
  store i8* %call2, i8** %1, align 8, !tbaa !43
  %call3 = tail call i8* @_Znam(i64 4096) #26
  %arrayidx4 = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %arrayidx4 to float**
  %3 = bitcast i8* %arrayidx4 to i8**
  store i8* %call3, i8** %3, align 8, !tbaa !43
  %4 = bitcast %class.CBFormat* %sumBF to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #24
  %5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !61
  %7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !64
  %8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !65
  %9 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %10 = bitcast i32* %m_nSamples.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #24
  %call5 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %sumBF, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %11 = load i32, i32* %processType, align 8, !tbaa !419
  %cmp = icmp eq i32 %11, 2
  br i1 %cmp, label %if.then9, label %if.then

if.then:                                          ; preds = %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %if.then16, %invoke.cont11, %invoke.cont10, %if.then9, %if.then, %entry
  %12 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i.i38 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i38, align 8, !tbaa !43
  %cmp.i.i39 = icmp eq float** %13, null
  br i1 %cmp.i.i39, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i40

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i40: ; preds = %lpad
  %14 = bitcast float** %13 to i8*
  call void @_ZdaPv(i8* %14) #27
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i40, %lpad
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i.i38, align 8, !tbaa !43
  %_M_start.i.i.i41 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load float*, float** %_M_start.i.i.i41, align 8, !tbaa !76
  %tobool.i.i.i.i42 = icmp eq float* %15, null
  br i1 %tobool.i.i.i.i42, label %_ZN8CBFormatD2Ev.exit45, label %if.then.i.i.i.i44

if.then.i.i.i.i44:                                ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43
  %16 = bitcast float* %15 to i8*
  call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZN8CBFormatD2Ev.exit45

_ZN8CBFormatD2Ev.exit45:                          ; preds = %if.then.i.i.i.i44, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  resume { i8*, i32 } %12

if.end:                                           ; preds = %if.then
  %.pr = load i32, i32* %processType, align 8, !tbaa !419
  %cmp8 = icmp eq i32 %.pr, 1
  br i1 %cmp8, label %if.end18, label %if.then9

if.then9:                                         ; preds = %if.end, %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %invoke.cont10 unwind label %lpad

invoke.cont10:                                    ; preds = %if.then9
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %17 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8, !tbaa !434
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %17, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont10
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %18 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !435
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %18, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
          to label %if.end13 unwind label %lpad

if.end13:                                         ; preds = %invoke.cont11
  %.pr47 = load i32, i32* %processType, align 8, !tbaa !419
  %cmp15 = icmp eq i32 %.pr47, 0
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end13
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, float** nonnull %0)
          to label %if.end18 unwind label %lpad

if.end18:                                         ; preds = %if.then16, %if.end13, %if.end
  %19 = load float*, float** %0, align 8, !tbaa !43
  %isnull = icmp eq float* %19, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end18
  %20 = bitcast float* %19 to i8*
  call void @_ZdaPv(i8* %20) #27
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end18
  %21 = load float*, float** %2, align 8, !tbaa !43
  %isnull21 = icmp eq float* %21, null
  br i1 %isnull21, label %delete.notnull25, label %delete.notnull22

delete.notnull22:                                 ; preds = %delete.end
  %22 = bitcast float* %21 to i8*
  call void @_ZdaPv(i8* %22) #27
  br label %delete.notnull25

delete.notnull25:                                 ; preds = %delete.notnull22, %delete.end
  call void @_ZdaPv(i8* nonnull %call) #27
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i = icmp eq float** %23, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i: ; preds = %delete.notnull25
  %24 = bitcast float** %23 to i8*
  call void @_ZdaPv(i8* %24) #27
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i, %delete.notnull25
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i = icmp eq float* %25, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %26 = bitcast float* %25 to i8*
  call void @_ZdlPv(i8* nonnull %26) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %sampleTemp.i = alloca [1024 x i16], align 16
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %0 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i17 = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i17 to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !438
  %3 = bitcast %"class.std::vector.51"* %0 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !441
  %cmp20 = icmp eq i64 %2, %4
  br i1 %cmp20, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = bitcast [1024 x i16]* %sampleTemp.i to i8*
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i.i to i8**
  %m_nDataLength.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %8 = phi %"class.std::vector.51"* [ %0, %for.body.lr.ph ], [ %85, %for.inc ]
  %conv22 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.inc ]
  %soundIdx.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %8, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !441
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %9, i64 %conv22
  %10 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !43
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %5) #24
  %11 = bitcast %"class.ILLIXR_AUDIO::Sound"* %10 to %"class.std::basic_istream"**
  %12 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %11, align 8, !tbaa !404
  %call.i = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %12, i8* nonnull %5, i64 2048)
  %amp.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body
  %indvars.iv.i13 = phi i64 [ 0, %for.body ], [ %indvars.iv.next.i16.1, %for.body.i ]
  %13 = load float, float* %amp.i, align 4, !tbaa !402
  %conv.i14 = fpext float %13 to double
  %arrayidx.i = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.i13
  %14 = load i16, i16* %arrayidx.i, align 4, !tbaa !45
  %conv3.i = sitofp i16 %14 to double
  %div.i = fdiv double %conv3.i, 3.276700e+04
  %mul.i15 = fmul double %div.i, %conv.i14
  %conv4.i = fptrunc double %mul.i15 to float
  %arrayidx6.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.i13
  store float %conv4.i, float* %arrayidx6.i, align 4, !tbaa !50
  %indvars.iv.next.i16 = or i64 %indvars.iv.i13, 1
  %15 = load float, float* %amp.i, align 4, !tbaa !402
  %conv.i14.1 = fpext float %15 to double
  %arrayidx.i.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.next.i16
  %16 = load i16, i16* %arrayidx.i.1, align 2, !tbaa !45
  %conv3.i.1 = sitofp i16 %16 to double
  %div.i.1 = fdiv double %conv3.i.1, 3.276700e+04
  %mul.i15.1 = fmul double %div.i.1, %conv.i14.1
  %conv4.i.1 = fptrunc double %mul.i15.1 to float
  %arrayidx6.i.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.next.i16
  store float %conv4.i.1, float* %arrayidx6.i.1, align 4, !tbaa !50
  %indvars.iv.next.i16.1 = add nuw nsw i64 %indvars.iv.i13, 2
  %exitcond.i.1 = icmp eq i64 %indvars.iv.next.i16.1, 1024
  br i1 %exitcond.i.1, label %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit, label %for.body.i

_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit:    ; preds = %for.body.i
  %BEncoder.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 3
  %17 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder.i, align 8, !tbaa !406
  %arraydecay8.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 0
  %BFormat.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 2
  %18 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !405
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %17, float* nonnull %arraydecay8.i, i32 1024, %class.CBFormat* %18)
  %19 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !405
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %5) #24
  %cmp6 = icmp eq i32 %soundIdx.021, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %20 = load i8*, i8** %7, align 8, !tbaa !76
  %_M_start.i4.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = bitcast float** %_M_start.i4.i to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !76
  %23 = load i32, i32* %m_nDataLength.i, align 4, !tbaa !96
  %conv.i = zext i32 %23 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %mul.i, i1 false) #24
  br label %for.inc

if.else:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %24 = load i32, i32* %6, align 8, !tbaa !65
  %cmp25.i = icmp eq i32 %24, 0
  br i1 %cmp25.i, label %for.inc, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %if.else
  %25 = load i32, i32* %m_nSamples.i, align 8, !tbaa !91
  %cmp323.i = icmp eq i32 %25, 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %for.inc, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %27 = zext i32 %24 to i64
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21.i, align 8, !tbaa !43
  %28 = zext i32 %25 to i64
  %29 = and i64 %28, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %min.iters.check = icmp ult i32 %25, 8
  %n.vec = and i64 %28, 4294967288
  %xtraiter = and i64 %32, 1
  %33 = icmp eq i64 %30, 0
  %unroll_iter = sub nuw nsw i64 %32, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %28
  %xtraiter31 = and i64 %28, 3
  %lcmp.mod32 = icmp eq i64 %xtraiter31, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %26, i64 %indvars.iv29.i
  %34 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !43
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %35 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !43
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %35, i64 %28
  %scevgep25 = getelementptr float, float* %34, i64 %28
  %bound0 = icmp ult float* %35, %scevgep25
  %bound1 = icmp ult float* %34, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %33, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %36 = getelementptr inbounds float, float* %34, i64 %index
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %37, align 4, !tbaa !50, !alias.scope !443
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %39, align 4, !tbaa !50, !alias.scope !443
  %40 = getelementptr inbounds float, float* %35, i64 %index
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %41, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %44 = fadd <4 x float> %wide.load, %wide.load29
  %45 = fadd <4 x float> %wide.load28, %wide.load30
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %index.next = or i64 %index, 8
  %48 = getelementptr inbounds float, float* %34, i64 %index.next
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !443
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !50, !alias.scope !443
  %52 = getelementptr inbounds float, float* %35, i64 %index.next
  %53 = bitcast float* %52 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %53, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %54 = getelementptr inbounds float, float* %52, i64 4
  %55 = bitcast float* %54 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %55, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %56 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %57 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %58 = bitcast float* %52 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %59 = bitcast float* %54 to <4 x float>*
  store <4 x float> %57, <4 x float>* %59, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !448

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %60 = getelementptr inbounds float, float* %34, i64 %index.unr
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %61, align 4, !tbaa !50, !alias.scope !443
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %63, align 4, !tbaa !50, !alias.scope !443
  %64 = getelementptr inbounds float, float* %35, i64 %index.unr
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %65, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %67, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %68 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %69 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %70 = bitcast float* %64 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !50, !alias.scope !446, !noalias !443
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %72 = xor i64 %indvars.iv.i.ph, -1
  %73 = add nsw i64 %72, %28
  br i1 %lcmp.mod32, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter31, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %34, i64 %indvars.iv.i.prol
  %74 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !50
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %35, i64 %indvars.iv.i.prol
  %75 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !50
  %add.us.i.prol = fadd float %74, %75
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !50
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !449

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %76 = icmp ult i64 %73, 3
  br i1 %76, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %34, i64 %indvars.iv.i
  %77 = load float, float* %arrayidx.us.i, align 4, !tbaa !50
  %arrayidx9.us.i = getelementptr inbounds float, float* %35, i64 %indvars.iv.i
  %78 = load float, float* %arrayidx9.us.i, align 4, !tbaa !50
  %add.us.i = fadd float %77, %78
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !50
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i
  %79 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !50
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i
  %80 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !50
  %add.us.i.1 = fadd float %79, %80
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !50
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i.1
  %81 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !50
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i.1
  %82 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !50
  %add.us.i.2 = fadd float %81, %82
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !50
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i.2
  %83 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !50
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i.2
  %84 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !50
  %add.us.i.3 = fadd float %83, %84
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !50
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %28
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !450

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond23 = icmp eq i64 %indvars.iv.next30.i, %27
  br i1 %exitcond23, label %for.inc, label %for.cond2.preheader.us.i

for.inc:                                          ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %if.else, %if.then
  %inc = add i32 %soundIdx.021, 1
  %conv = zext i32 %inc to i64
  %85 = load %"class.std::vector.51"*, %"class.std::vector.51"** %soundSrcs, align 8, !tbaa !433
  %_M_finish.i = getelementptr inbounds %"class.std::vector.51", %"class.std::vector.51"* %85, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %87 = load i64, i64* %86, align 8, !tbaa !438
  %88 = bitcast %"class.std::vector.51"* %85 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !441
  %sub.ptr.sub.i = sub i64 %87, %89
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %fZoom.addr.i.i = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %head.i = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %inc.i = add nsw i32 %0, 1
  store i32 %inc.i, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %1 = bitcast %class.Orientation* %head.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv.i = sitofp i32 %inc.i to double
  %div.i = fdiv double %conv.i, 1.500000e+03
  %mul2.i = fmul double %div.i, 3.140000e+00
  %mul3.i = fmul double %mul2.i, 2.000000e+00
  %conv4.i = fptrunc double %mul3.i to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head.i, float 0.000000e+00, float 0.000000e+00, float %conv4.i)
  %rotator.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !436
  %m_orientation.i.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %2, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %1, i64 24, i1 false)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !436
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable.i = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable.i, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn.i, align 8
  call void %6(%class.CAmbisonicProcessor* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  %7 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !436
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 5
  %9 = load i8, i8* %8, align 4, !tbaa !66, !range !67
  %tobool.i = icmp eq i8 %9, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 undef)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !tbaa !61
  %cmp.i = icmp eq i32 %11, 0
  br i1 %cmp.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  %.pr.i = load i32, i32* %10, align 8, !tbaa !61
  %cmp5.i = icmp ugt i32 %.pr.i, 1
  br i1 %cmp5.i, label %if.end7.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.end7.i:                                        ; preds = %if.end3.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  %.pr19.i = load i32, i32* %10, align 8, !tbaa !61
  %cmp9.i = icmp ugt i32 %.pr19.i, 2
  br i1 %cmp9.i, label %if.then10.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  br label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit: ; preds = %if.then10.i, %if.end7.i, %if.end3.i, %if.end.i
  %12 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %inc.i3 = add nsw i32 %12, 1
  store i32 %inc.i3, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %zoomer.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %13 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !437
  %div.i4 = sdiv i32 %inc.i3, 100
  %conv.i5 = sitofp i32 %div.i4 to float
  %call.i = call float @sinf(float %conv.i5) #24
  %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  store float %call.i, float* %fZoom.addr.i.i, align 4, !tbaa !50
  %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i.i, align 4, !tbaa !50
  %cmp.i.i.i = fcmp ogt float %call.i, 0x3FEFAE1480000000
  %__b.__a.i.i.i = select i1 %cmp.i.i.i, float* %ref.tmp.i.i, float* %fZoom.addr.i.i
  %14 = bitcast float* %__b.__a.i.i.i to i32*
  %15 = load i32, i32* %14, align 4, !tbaa !50
  %m_fZoom.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %13, i64 0, i32 5
  %16 = bitcast float* %m_fZoom.i.i to i32*
  store i32 %15, i32* %16, align 8, !tbaa !285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  %17 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !437
  %18 = bitcast %class.CAmbisonicZoomer* %17 to void (%class.CAmbisonicZoomer*)***
  %vtable.i6 = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %18, align 8, !tbaa !40
  %vfn.i7 = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable.i6, i64 4
  %19 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn.i7, align 8
  call void %19(%class.CAmbisonicZoomer* %17)
  %20 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !437
  %21 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8, !tbaa !65
  %cmp397.i = icmp eq i32 %22, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  %_M_head_impl.i.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95.i, align 8, !tbaa !43
  %23 = zext i32 %22 to i64
  %24 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93.i, align 8, !tbaa !43
  %25 = add nsw i64 %23, -1
  %xtraiter = and i64 %23, 3
  %26 = icmp ult i64 %25, 3
  %unroll_iter = sub nsw i64 %23, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %26, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, 1024
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %24, i64 %indvars.iv108.i
  %27 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !50
  %28 = call float @llvm.fabs.f32(float %27) #24
  %conv17.us.i = fpext float %28 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %29 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !43
  %arrayidx45.us.i = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx45.us.i, align 4, !tbaa !50
  %31 = load float, float* %m_fZoomRed.i, align 4, !tbaa !279
  %mul46.us.i = fmul float %30, %31
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !50
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %32 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !286
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %33 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !43
  %arrayidx23.us.i = getelementptr inbounds float, float* %33, i64 %indvars.iv110.i
  %34 = load float, float* %arrayidx23.us.i, align 4, !tbaa !50
  %mul24.us.i = fmul float %32, %34
  %35 = load float, float* %m_fZoom.i, align 8, !tbaa !285
  %mul28.us.i = fmul float %27, %35
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %36 = call float @llvm.fabs.f32(float %35) #24
  %37 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !284
  %mul34.us.i = fmul float %36, %37
  %add35.us.i = fadd float %32, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !50
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %23
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %38 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !50
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %39 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !43
  %arrayidx.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv110.i
  %40 = load float, float* %arrayidx.us.i, align 4, !tbaa !50
  %mul.us.i = fmul float %38, %40
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %41 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !50
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %42 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !43
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %42, i64 %indvars.iv110.i
  %43 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !50
  %mul.us.i.1 = fmul float %41, %43
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %44 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !50
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %45 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !43
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %45, i64 %indvars.iv110.i
  %46 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !50
  %mul.us.i.2 = fmul float %44, %46
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %47 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !50
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %48 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !43
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !50
  %mul.us.i.3 = fmul float %47, %49
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %50 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !50
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %51 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !43
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %51, i64 %indvars.iv110.i
  %52 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !50
  %mul.us.i.epil = fmul float %50, %52
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !451

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, float** nocapture readonly %resultSample) local_unnamed_addr #3 align 2 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp3 = alloca float, align 4
  %ref.tmp11 = alloca float, align 4
  %ref.tmp13 = alloca float, align 4
  %tempSample0 = alloca i16, align 2
  %tempSample1 = alloca i16, align 2
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  %ref.tmp3.0..sroa_cast = bitcast float* %ref.tmp3 to i8*
  %arrayidx8 = getelementptr inbounds float*, float** %resultSample, i64 1
  %ref.tmp11.0..sroa_cast = bitcast float* %ref.tmp11 to i8*
  %ref.tmp13.0..sroa_cast = bitcast float* %ref.tmp13 to i8*
  %0 = bitcast i16* %tempSample0 to i8*
  %1 = bitcast i16* %tempSample1 to i8*
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %3 = load float*, float** %resultSample, align 8, !tbaa !43
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp, align 4, !tbaa !50
  %4 = load float, float* %arrayidx2, align 4, !tbaa !50
  %cmp.i = fcmp ogt float %4, 1.000000e+00
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %arrayidx2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp3, align 4, !tbaa !50
  %5 = load float, float* %__b.__a.i, align 4, !tbaa !50
  %cmp.i49 = fcmp olt float %5, -1.000000e+00
  %__b.__a.i50 = select i1 %cmp.i49, float* %ref.tmp3, float* %__b.__a.i
  %6 = bitcast float* %__b.__a.i50 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !50
  %8 = bitcast float* %arrayidx2 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  %9 = load float*, float** %arrayidx8, align 8, !tbaa !43
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp11, align 4, !tbaa !50
  %10 = load float, float* %arrayidx10, align 4, !tbaa !50
  %cmp.i47 = fcmp ogt float %10, 1.000000e+00
  %__b.__a.i48 = select i1 %cmp.i47, float* %ref.tmp11, float* %arrayidx10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp13, align 4, !tbaa !50
  %11 = load float, float* %__b.__a.i48, align 4, !tbaa !50
  %cmp.i45 = fcmp olt float %11, -1.000000e+00
  %__b.__a.i46 = select i1 %cmp.i45, float* %ref.tmp13, float* %__b.__a.i48
  %12 = bitcast float* %__b.__a.i46 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !50
  %14 = bitcast float* %arrayidx10 to i32*
  store i32 %13, i32* %14, align 4, !tbaa !50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24
  %15 = load float, float* %arrayidx2, align 4, !tbaa !50
  %conv = fpext float %15 to double
  %mul = fmul double %conv, 3.276700e+04
  %conv21 = fptosi double %mul to i16
  store i16 %conv21, i16* %tempSample0, align 2, !tbaa !45
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1) #24
  %16 = bitcast i32 %13 to float
  %conv25 = fpext float %16 to double
  %mul27 = fmul double %conv25, 3.276700e+04
  %conv28 = fptosi double %mul27 to i16
  store i16 %conv28, i16* %tempSample1, align 2, !tbaa !45
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !422
  %call29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %17, i8* nonnull %0, i64 2)
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !422
  %call31 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %18, i8* nonnull %1, i64 2)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD2Ev(%class.CBFormat* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq float** %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i, align 8, !tbaa !76
  %tobool.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %head = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %1 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul2 = fmul double %div, 3.140000e+00
  %mul3 = fmul double %mul2, 2.000000e+00
  %conv4 = fptrunc double %mul3 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv4)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !436
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %2, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %1, i64 24, i1 false)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !436
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %6(%class.CAmbisonicProcessor* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !437
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !50
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !50
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !50
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !437
  %6 = bitcast %class.CAmbisonicZoomer* %5 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicZoomer* %5)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: norecurse uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #20 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %audio = alloca %"class.ILLIXR_AUDIO::ABAudio", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %argc, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7)
  %0 = load i8*, i8** %argv, align 8, !tbaa !43
  %tobool.i = icmp eq i8* %0, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %2 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !413
  %or.i.i.i = or i32 %4, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull %2, i32 %or.i.i.i)
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

if.else.i:                                        ; preds = %if.then
  %call.i.i264 = tail call i64 @strlen(i8* nonnull %0) #24
  %call1.i265 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull %0, i64 %call.i.i264)
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit: ; preds = %if.else.i, %if.then.i
  %call1.i267 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i64 41)
  %call1.i270 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i64 26)
  %call1.i273 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([122 x i8], [122 x i8]* @.str.8, i64 0, i64 0), i64 121)
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 1
  %5 = load i8*, i8** %arrayidx5, align 8, !tbaa !43
  %call.i = tail call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10) #24
  %conv.i = trunc i64 %call.i to i32
  %6 = bitcast %"class.ILLIXR_AUDIO::ABAudio"* %audio to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #24
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !291
  %9 = bitcast %union.anon* %7 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !296
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %10, align 2, !tbaa !298
  invoke void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 2)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %if.end
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i = icmp eq i8* %11, %9
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont8
  call void @_ZdlPv(i8* %11) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont8
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %call14 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont11
  %call17 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont13
  %call20 = invoke i8* @_Znwm(i64 64) #26
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %invoke.cont16
  %12 = bitcast i8* %call20 to %class.CBFormat*
  %13 = bitcast i8* %call20 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %call20, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8, !tbaa !61
  %16 = getelementptr inbounds i8, i8* %call20, i64 12
  store i8 0, i8* %16, align 4, !tbaa !64
  %17 = getelementptr inbounds i8, i8* %call20, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8, !tbaa !65
  %19 = getelementptr inbounds i8, i8* %call20, i64 20
  store i8 0, i8* %19, align 4, !tbaa !66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds i8, i8* %call20, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %call25 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %12, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont24 unwind label %lpad18

invoke.cont24:                                    ; preds = %invoke.cont19
  %call28 = invoke i8* @_Znam(i64 24) #26
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %invoke.cont24
  %call30 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont29 unwind label %lpad26

invoke.cont29:                                    ; preds = %invoke.cont27
  %20 = bitcast i8* %call28 to i8**
  store i8* %call30, i8** %20, align 8, !tbaa !43
  %call33 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont32 unwind label %lpad26

invoke.cont32:                                    ; preds = %invoke.cont29
  %arrayidx34 = getelementptr inbounds i8, i8* %call28, i64 8
  %21 = bitcast i8* %arrayidx34 to i8**
  store i8* %call33, i8** %21, align 8, !tbaa !43
  %call36 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont35 unwind label %lpad26

invoke.cont35:                                    ; preds = %invoke.cont32
  %arrayidx37 = getelementptr inbounds i8, i8* %call28, i64 16
  %22 = bitcast i8* %arrayidx37 to i8**
  store i8* %call36, i8** %22, align 8, !tbaa !43
  %call40 = invoke i8* @_Znam(i64 40) #26
          to label %invoke.cont39 unwind label %lpad38

invoke.cont39:                                    ; preds = %invoke.cont35
  %call42 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont41 unwind label %lpad38

invoke.cont41:                                    ; preds = %invoke.cont39
  %23 = bitcast i8* %call40 to i8**
  store i8* %call42, i8** %23, align 8, !tbaa !43
  %call45 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont44 unwind label %lpad38

invoke.cont44:                                    ; preds = %invoke.cont41
  %arrayidx46 = getelementptr inbounds i8, i8* %call40, i64 8
  %24 = bitcast i8* %arrayidx46 to i8**
  store i8* %call45, i8** %24, align 8, !tbaa !43
  %call48 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont47 unwind label %lpad38

invoke.cont47:                                    ; preds = %invoke.cont44
  %arrayidx49 = getelementptr inbounds i8, i8* %call40, i64 16
  %25 = bitcast i8* %arrayidx49 to i8**
  store i8* %call48, i8** %25, align 8, !tbaa !43
  %call51 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont50 unwind label %lpad38

invoke.cont50:                                    ; preds = %invoke.cont47
  %arrayidx52 = getelementptr inbounds i8, i8* %call40, i64 24
  %26 = bitcast i8* %arrayidx52 to i8**
  store i8* %call51, i8** %26, align 8, !tbaa !43
  %call54 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont53 unwind label %lpad38

invoke.cont53:                                    ; preds = %invoke.cont50
  %arrayidx55 = getelementptr inbounds i8, i8* %call40, i64 32
  %27 = bitcast i8* %arrayidx55 to i8**
  store i8* %call54, i8** %27, align 8, !tbaa !43
  %call58 = invoke i8* @_Znam(i64 56) #26
          to label %invoke.cont57 unwind label %lpad56

invoke.cont57:                                    ; preds = %invoke.cont53
  %call60 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont59 unwind label %lpad56

invoke.cont59:                                    ; preds = %invoke.cont57
  %28 = bitcast i8* %call58 to i8**
  store i8* %call60, i8** %28, align 8, !tbaa !43
  %call63 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont62 unwind label %lpad56

invoke.cont62:                                    ; preds = %invoke.cont59
  %arrayidx64 = getelementptr inbounds i8, i8* %call58, i64 8
  %29 = bitcast i8* %arrayidx64 to i8**
  store i8* %call63, i8** %29, align 8, !tbaa !43
  %call66 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont65 unwind label %lpad56

invoke.cont65:                                    ; preds = %invoke.cont62
  %arrayidx67 = getelementptr inbounds i8, i8* %call58, i64 16
  %30 = bitcast i8* %arrayidx67 to i8**
  store i8* %call66, i8** %30, align 8, !tbaa !43
  %call69 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont68 unwind label %lpad56

invoke.cont68:                                    ; preds = %invoke.cont65
  %arrayidx70 = getelementptr inbounds i8, i8* %call58, i64 24
  %31 = bitcast i8* %arrayidx70 to i8**
  store i8* %call69, i8** %31, align 8, !tbaa !43
  %call72 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont71 unwind label %lpad56

invoke.cont71:                                    ; preds = %invoke.cont68
  %arrayidx73 = getelementptr inbounds i8, i8* %call58, i64 32
  %32 = bitcast i8* %arrayidx73 to i8**
  store i8* %call72, i8** %32, align 8, !tbaa !43
  %call75 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont74 unwind label %lpad56

invoke.cont74:                                    ; preds = %invoke.cont71
  %arrayidx76 = getelementptr inbounds i8, i8* %call58, i64 40
  %33 = bitcast i8* %arrayidx76 to i8**
  store i8* %call75, i8** %33, align 8, !tbaa !43
  %call78 = invoke i8* @_Znam(i64 4096) #26
          to label %invoke.cont77 unwind label %lpad56

invoke.cont77:                                    ; preds = %invoke.cont74
  %arrayidx79 = getelementptr inbounds i8, i8* %call58, i64 48
  %34 = bitcast i8* %arrayidx79 to i8**
  store i8* %call78, i8** %34, align 8, !tbaa !43
  %call80 = call noalias i8* @malloc(i64 200) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 5
  %35 = bitcast %class.CAmbisonicProcessor** %rotator to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !436
  %37 = bitcast i8* %call80 to i64*
  store i64 %36, i64* %37, align 1, !tbaa !452
  %bytes_rotator82 = getelementptr inbounds i8, i8* %call80, i64 8
  %38 = bitcast i8* %bytes_rotator82 to i64*
  store i64 200, i64* %38, align 1, !tbaa !454
  %sumBF83 = getelementptr inbounds i8, i8* %call80, i64 16
  %39 = bitcast i8* %sumBF83 to i8**
  store i8* %call20, i8** %39, align 1, !tbaa !455
  %bytes_sumBF84 = getelementptr inbounds i8, i8* %call80, i64 24
  %40 = bitcast i8* %bytes_sumBF84 to i64*
  store i64 64, i64* %40, align 1, !tbaa !456
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 6
  %41 = bitcast %class.CAmbisonicZoomer** %zoomer to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !437
  %zoomer85 = getelementptr inbounds i8, i8* %call80, i64 32
  %43 = bitcast i8* %zoomer85 to i64*
  store i64 %42, i64* %43, align 1, !tbaa !457
  %bytes_zoomer86 = getelementptr inbounds i8, i8* %call80, i64 40
  %44 = bitcast i8* %bytes_zoomer86 to i64*
  store i64 104, i64* %44, align 1, !tbaa !458
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 3
  %45 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i64*
  %46 = load i64, i64* %45, align 8, !tbaa !434
  %decoder087 = getelementptr inbounds i8, i8* %call80, i64 48
  %47 = bitcast i8* %decoder087 to i64*
  store i64 %46, i64* %47, align 1, !tbaa !459
  %bytes_decoder088 = getelementptr inbounds i8, i8* %call80, i64 56
  %48 = bitcast i8* %bytes_decoder088 to i64*
  store i64 296, i64* %48, align 1, !tbaa !460
  %resultSample089 = getelementptr inbounds i8, i8* %call80, i64 64
  %49 = bitcast i8* %resultSample089 to i8**
  store i8* %call14, i8** %49, align 1, !tbaa !461
  %bytes_resultSample090 = getelementptr inbounds i8, i8* %call80, i64 72
  %50 = bitcast i8* %bytes_resultSample090 to <2 x i64>*
  store <2 x i64> <i64 4096, i64 1024>, <2 x i64>* %50, align 1, !tbaa !297
  %channelpart191 = getelementptr inbounds i8, i8* %call80, i64 88
  %51 = bitcast i8* %channelpart191 to i8**
  store i8* %call28, i8** %51, align 1, !tbaa !462
  %bytes_channelpart192 = getelementptr inbounds i8, i8* %call80, i64 96
  %52 = bitcast i8* %bytes_channelpart192 to i64*
  store i64 12288, i64* %52, align 1, !tbaa !463
  %channelpart293 = getelementptr inbounds i8, i8* %call80, i64 104
  %53 = bitcast i8* %channelpart293 to i8**
  store i8* %call40, i8** %53, align 1, !tbaa !464
  %bytes_channelpart294 = getelementptr inbounds i8, i8* %call80, i64 112
  %54 = bitcast i8* %bytes_channelpart294 to i64*
  store i64 20480, i64* %54, align 1, !tbaa !465
  %channelpart395 = getelementptr inbounds i8, i8* %call80, i64 120
  %55 = bitcast i8* %channelpart395 to i8**
  store i8* %call58, i8** %55, align 1, !tbaa !466
  %bytes_channelpart396 = getelementptr inbounds i8, i8* %call80, i64 128
  %56 = bitcast i8* %bytes_channelpart396 to i64*
  store i64 28672, i64* %56, align 1, !tbaa !467
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 4
  %57 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !435
  %decoder197 = getelementptr inbounds i8, i8* %call80, i64 136
  %59 = bitcast i8* %decoder197 to i64*
  store i64 %58, i64* %59, align 1, !tbaa !468
  %bytes_decoder198 = getelementptr inbounds i8, i8* %call80, i64 144
  %60 = bitcast i8* %bytes_decoder198 to i64*
  store i64 296, i64* %60, align 1, !tbaa !469
  %resultSample199 = getelementptr inbounds i8, i8* %call80, i64 152
  %61 = bitcast i8* %resultSample199 to i8**
  store i8* %call17, i8** %61, align 1, !tbaa !470
  %bytes_resultSample1100 = getelementptr inbounds i8, i8* %call80, i64 160
  %62 = bitcast i8* %bytes_resultSample1100 to i64*
  store i64 4096, i64* %62, align 1, !tbaa !471
  %63 = inttoptr i64 %46 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %63, i64 0, i32 4
  %64 = load i32, i32* %m_nChannelCount, align 8, !tbaa !65
  %conv = zext i32 %64 to i64
  %decoder0ChannelCount = getelementptr inbounds i8, i8* %call80, i64 168
  %65 = bitcast i8* %decoder0ChannelCount to i64*
  store i64 %conv, i64* %65, align 1, !tbaa !472
  %66 = inttoptr i64 %46 to %class.CAmbisonicBinauralizer*
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %66, i64 0, i32 5
  %67 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %conv103 = zext i32 %67 to i64
  %decoder0FFTBins = getelementptr inbounds i8, i8* %call80, i64 176
  %68 = bitcast i8* %decoder0FFTBins to i64*
  store i64 %conv103, i64* %68, align 1, !tbaa !473
  %69 = inttoptr i64 %58 to %class.CAmbisonicBase*
  %m_nChannelCount105 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %69, i64 0, i32 4
  %70 = load i32, i32* %m_nChannelCount105, align 8, !tbaa !65
  %conv106 = zext i32 %70 to i64
  %decoder1ChannelCount = getelementptr inbounds i8, i8* %call80, i64 184
  %71 = bitcast i8* %decoder1ChannelCount to i64*
  store i64 %conv106, i64* %71, align 1, !tbaa !474
  %72 = inttoptr i64 %58 to %class.CAmbisonicBinauralizer*
  %m_nFFTBins108 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %72, i64 0, i32 5
  %73 = load i32, i32* %m_nFFTBins108, align 4, !tbaa !311
  %conv109 = zext i32 %73 to i64
  %decoder1FFTBins = getelementptr inbounds i8, i8* %call80, i64 192
  %74 = bitcast i8* %decoder1FFTBins to i64*
  store i64 %conv109, i64* %74, align 1, !tbaa !475
  %cmp110282 = icmp sgt i32 %conv.i, 0
  %75 = inttoptr i64 %42 to i8*
  %76 = inttoptr i64 %46 to i8*
  %77 = inttoptr i64 %58 to i8*
  br i1 %cmp110282, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %invoke.cont77
  %78 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %79 = load i8*, i8** %78, align 8, !tbaa !436
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %invoke.cont77
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #24
  br label %return

lpad7:                                            ; preds = %if.end
  %80 = landingpad { i8*, i32 }
          cleanup
  %81 = extractvalue { i8*, i32 } %80, 0
  %82 = extractvalue { i8*, i32 } %80, 1
  %83 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !293
  %cmp.i.i.i279 = icmp eq i8* %83, %9
  br i1 %cmp.i.i.i279, label %ehcleanup132, label %if.then.i.i280

if.then.i.i280:                                   ; preds = %lpad7
  call void @_ZdlPv(i8* %83) #24
  br label %ehcleanup132

lpad10:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %84 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad12:                                           ; preds = %invoke.cont11
  %85 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad15:                                           ; preds = %invoke.cont13
  %86 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad18:                                           ; preds = %invoke.cont19, %invoke.cont16
  %87 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad26:                                           ; preds = %invoke.cont32, %invoke.cont29, %invoke.cont27, %invoke.cont24
  %88 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad38:                                           ; preds = %invoke.cont50, %invoke.cont47, %invoke.cont44, %invoke.cont41, %invoke.cont39, %invoke.cont35
  %89 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

lpad56:                                           ; preds = %invoke.cont74, %invoke.cont71, %invoke.cont68, %invoke.cont65, %invoke.cont62, %invoke.cont59, %invoke.cont57, %invoke.cont53
  %90 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup131

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.0283 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  call void @llvm_hpvm_track_mem(i8* %79, i64 200) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call20, i64 64) #24
  call void @llvm_hpvm_track_mem(i8* %75, i64 104) #24
  call void @llvm_hpvm_track_mem(i8* %76, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* %77, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call14, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call17, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call28, i64 12288) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call40, i64 20480) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call58, i64 28672) #24
  %graphaudioDecoding_cloned = call i8* @llvm_hpvm_cpu_launch(i8* (i8*)* @LaunchDataflowGraph, i8* %call80)
  call void @llvm_hpvm_cpu_wait(i8* %graphaudioDecoding_cloned)
  call void @llvm_hpvm_request_mem(i8* %79, i64 200) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call20, i64 64) #24
  call void @llvm_hpvm_request_mem(i8* %75, i64 104) #24
  call void @llvm_hpvm_request_mem(i8* %76, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* %77, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call14, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call17, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call28, i64 12288) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call40, i64 20480) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call58, i64 28672) #24
  call void @llvm_hpvm_untrack_mem(i8* %79) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call20) #24
  call void @llvm_hpvm_untrack_mem(i8* %75) #24
  call void @llvm_hpvm_untrack_mem(i8* %76) #24
  call void @llvm_hpvm_untrack_mem(i8* %77) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call14) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call17) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call28) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call40) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call58) #24
  %inc = add nuw nsw i32 %i.0283, 1
  %exitcond = icmp eq i32 %inc, %conv.i
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

ehcleanup131:                                     ; preds = %lpad56, %lpad38, %lpad26, %lpad18, %lpad15, %lpad12, %lpad10
  %.sink284 = phi { i8*, i32 } [ %85, %lpad12 ], [ %87, %lpad18 ], [ %89, %lpad38 ], [ %90, %lpad56 ], [ %88, %lpad26 ], [ %86, %lpad15 ], [ %84, %lpad10 ]
  %91 = extractvalue { i8*, i32 } %.sink284, 0
  %92 = extractvalue { i8*, i32 } %.sink284, 1
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  br label %ehcleanup132

ehcleanup132:                                     ; preds = %ehcleanup131, %if.then.i.i280, %lpad7
  %ehselector.slot.7 = phi i32 [ %92, %ehcleanup131 ], [ %82, %lpad7 ], [ %82, %if.then.i.i280 ]
  %exn.slot.7 = phi i8* [ %91, %ehcleanup131 ], [ %81, %lpad7 ], [ %81, %if.then.i.i280 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.7, 0
  %lpad.val134 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.7, 1
  resume { i8*, i32 } %lpad.val134

return:                                           ; preds = %for.cond.cleanup, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  %retval.0 = phi i32 [ 1, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @llvm_hpvm_track_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_request_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_untrack_mem(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8MIT_HRTFD0Ev(%class.MIT_HRTF* %this) unnamed_addr #19 comdat align 2 {
entry:
  %0 = bitcast %class.MIT_HRTF* %this to i8*
  tail call void @_ZdlPv(i8* %0) #27
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD0Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @llvm.trap() #29
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !76
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2, align 8, !tbaa !76
  %tobool.i.i.i3 = icmp eq float* %3, null
  br i1 %tobool.i.i.i3, label %_ZNSt6vectorIfSaIfEED2Ev.exit5, label %if.then.i.i.i4

if.then.i.i.i4:                                   ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit5

_ZNSt6vectorIfSaIfEED2Ev.exit5:                   ; preds = %if.then.i.i.i4, %_ZNSt6vectorIfSaIfEED2Ev.exit
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD0Ev(%class.CAmbisonicSource* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !76
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %5 = bitcast %class.CAmbisonicSource* %this to i8*
  tail call void @_ZdlPv(i8* %5) #27
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD0Ev(%class.CBFormat* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i = icmp eq float** %1, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i: ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %5 = bitcast %class.CBFormat* %this to i8*
  tail call void @_ZdlPv(i8* %5) #27
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq float* %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i: ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #27
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i, %entry
  store float* null, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_head_impl.i.i.i.i.i.i2, align 8, !tbaa !43
  %cmp.i3 = icmp eq float* %3, null
  br i1 %cmp.i3, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #27
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  store float* null, float** %_M_head_impl.i.i.i.i.i.i2, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i6, align 8, !tbaa !43
  %cmp.i7 = icmp eq float* %5, null
  br i1 %cmp.i7, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdaPv(i8* %6) #27
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  store float* null, float** %_M_head_impl.i.i.i.i.i.i6, align 8, !tbaa !43
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %8 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %8, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  %9 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 -1, i32 0, i32 3, i32 2
  %10 = bitcast float* %9 to i8*
  %11 = bitcast float* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %arraydestroy.isempty.i = icmp eq i64 %12, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %12
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %13 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %14 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i = icmp eq float* %14, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %15 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i.i = icmp eq float* %16, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %17 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* nonnull %17) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %8
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %10) #27
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD0Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) #24
  %0 = bitcast %class.CAmbisonicZoomer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #27
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !76
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.1, align 8, !tbaa !76
  %tobool.i.i.i.1 = icmp eq float* %3, null
  br i1 %tobool.i.i.i.1, label %_ZNSt6vectorIfSaIfEED2Ev.exit.1, label %if.then.i.i.i.1

if.then.i.i.i11:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1
  %4 = bitcast float* %49 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit12

_ZNSt6vectorIfSaIfEED2Ev.exit12:                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1, %if.then.i.i.i11
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !357
  %_M_finish.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_finish.i, align 8, !tbaa !400
  %cmp3.i.i.i.i = icmp eq %"class.std::vector.0"* %5, %6
  br i1 %cmp3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %__first.addr.04.i.i.i.i = phi %"class.std::vector.0"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i ], [ %5, %_ZNSt6vectorIfSaIfEED2Ev.exit12 ]
  %_M_start.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i, %for.body.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::vector.0"* %incdec.ptr.i.i.i.i, %6
  br i1 %cmp.i.i.i.i, label %invoke.cont.loopexit.i, label %for.body.i.i.i.i

invoke.cont.loopexit.i:                           ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !357
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.loopexit.i, %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %9 = phi %"class.std::vector.0"* [ %.pre.i, %invoke.cont.loopexit.i ], [ %5, %_ZNSt6vectorIfSaIfEED2Ev.exit12 ]
  %tobool.i.i.i13 = icmp eq %"class.std::vector.0"* %9, null
  br i1 %tobool.i.i.i13, label %_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit, label %if.then.i.i.i14

if.then.i.i.i14:                                  ; preds = %invoke.cont.i
  %10 = bitcast %"class.std::vector.0"* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit

_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit:         ; preds = %if.then.i.i.i14, %invoke.cont.i
  %_M_start.i.i15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %11 = load float*, float** %_M_start.i.i15, align 8, !tbaa !76
  %tobool.i.i.i16 = icmp eq float* %11, null
  br i1 %tobool.i.i.i16, label %_ZNSt6vectorIfSaIfEED2Ev.exit19, label %if.then.i.i.i18

if.then.i.i.i18:                                  ; preds = %_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit
  %12 = bitcast float* %11 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit19

_ZNSt6vectorIfSaIfEED2Ev.exit19:                  ; preds = %if.then.i.i.i18, %_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq %struct.kiss_fft_cpx* %13, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit19
  %14 = bitcast %struct.kiss_fft_cpx* %13 to i8*
  tail call void @_ZdaPv(i8* %14) #27
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %_ZNSt6vectorIfSaIfEED2Ev.exit19
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %15 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i20, align 8, !tbaa !346
  %_M_finish.i21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 1
  %16 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish.i21, align 8, !tbaa !401
  %cmp3.i.i.i.i22 = icmp eq %"class.std::unique_ptr.33"* %15, %16
  br i1 %cmp3.i.i.i.i22, label %invoke.cont.i30, label %for.body.i.i.i.i24

for.body.i.i.i.i24:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %__first.addr.04.i.i.i.i23 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i25, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i ], [ %15, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %17, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i24
  %18 = bitcast %struct.kiss_fft_cpx* %17 to i8*
  tail call void @_ZdaPv(i8* %18) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i, %for.body.i.i.i.i24
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i25 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i23, i64 1
  %cmp.i.i.i.i26 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i25, %16
  br i1 %cmp.i.i.i.i26, label %invoke.cont.loopexit.i28, label %for.body.i.i.i.i24

invoke.cont.loopexit.i28:                         ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
  %.pre.i27 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i20, align 8, !tbaa !346
  br label %invoke.cont.i30

invoke.cont.i30:                                  ; preds = %invoke.cont.loopexit.i28, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %19 = phi %"class.std::unique_ptr.33"* [ %.pre.i27, %invoke.cont.loopexit.i28 ], [ %15, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %tobool.i.i.i29 = icmp eq %"class.std::unique_ptr.33"* %19, null
  br i1 %tobool.i.i.i29, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit, label %if.then.i.i.i31

if.then.i.i.i31:                                  ; preds = %invoke.cont.i30
  %20 = bitcast %"class.std::unique_ptr.33"* %19 to i8*
  tail call void @_ZdlPv(i8* nonnull %20) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit: ; preds = %if.then.i.i.i31, %invoke.cont.i30
  %_M_start.i20.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i20.1, align 8, !tbaa !346
  %_M_finish.i21.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 1
  %22 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish.i21.1, align 8, !tbaa !401
  %cmp3.i.i.i.i22.1 = icmp eq %"class.std::unique_ptr.33"* %21, %22
  br i1 %cmp3.i.i.i.i22.1, label %invoke.cont.i30.1, label %for.body.i.i.i.i24.1

if.then.i:                                        ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
  %23 = bitcast %struct.kiss_fftr_state* %47 to i8*
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  invoke void %24(i8* nonnull %23)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit unwind label %lpad.i

lpad.i:                                           ; preds = %if.then.i
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  tail call void @__clang_call_terminate(i8* %26) #29
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, %if.then.i
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i32, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i34 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i34, align 8, !tbaa !43
  %cmp.i35 = icmp eq %struct.kiss_fftr_state* %27, null
  br i1 %cmp.i35, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39, label %if.then.i37

if.then.i37:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  %28 = bitcast %struct.kiss_fftr_state* %27 to i8*
  %_M_head_impl.i.i.i.i.i.i.i36 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i36, align 8, !tbaa !43
  invoke void %29(i8* nonnull %28)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39 unwind label %lpad.i38

lpad.i38:                                         ; preds = %if.then.i37
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  tail call void @__clang_call_terminate(i8* %31) #29
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39: ; preds = %if.then.i37, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i34, align 8, !tbaa !43
  %32 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %33 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !259
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %33, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39
  %34 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %33, i64 -1, i32 0, i32 3, i32 2
  %35 = bitcast float* %34 to i8*
  %36 = bitcast float* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %arraydestroy.isempty.i = icmp eq i64 %37, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %33, i64 %37
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %38 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %39 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i = icmp eq float* %39, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %40 = bitcast float* %39 to i8*
  tail call void @_ZdlPv(i8* nonnull %40) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i3.i.i.i = icmp eq float* %41, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %42 = bitcast float* %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %42) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %33
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %35) #27
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39
  ret void

for.body.i.i.i.i24.1:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %__first.addr.04.i.i.i.i23.1 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i25.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1 ], [ %21, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i23.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %43, null
  br i1 %cmp.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i24.1
  %44 = bitcast %struct.kiss_fft_cpx* %43 to i8*
  tail call void @_ZdaPv(i8* %44) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1, %for.body.i.i.i.i24.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i25.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i23.1, i64 1
  %cmp.i.i.i.i26.1 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i25.1, %22
  br i1 %cmp.i.i.i.i26.1, label %invoke.cont.loopexit.i28.1, label %for.body.i.i.i.i24.1

invoke.cont.loopexit.i28.1:                       ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
  %.pre.i27.1 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i20.1, align 8, !tbaa !346
  br label %invoke.cont.i30.1

invoke.cont.i30.1:                                ; preds = %invoke.cont.loopexit.i28.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %45 = phi %"class.std::unique_ptr.33"* [ %.pre.i27.1, %invoke.cont.loopexit.i28.1 ], [ %21, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %tobool.i.i.i29.1 = icmp eq %"class.std::unique_ptr.33"* %45, null
  br i1 %tobool.i.i.i29.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, label %if.then.i.i.i31.1

if.then.i.i.i31.1:                                ; preds = %invoke.cont.i30.1
  %46 = bitcast %"class.std::unique_ptr.33"* %45 to i8*
  tail call void @_ZdlPv(i8* nonnull %46) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1: ; preds = %if.then.i.i.i31.1, %invoke.cont.i30.1
  %_M_head_impl.i.i.i.i.i.i32 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i32, align 8, !tbaa !43
  %cmp.i33 = icmp eq %struct.kiss_fftr_state* %47, null
  br i1 %cmp.i33, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit, label %if.then.i

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %48 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %48) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.1

_ZNSt6vectorIfSaIfEED2Ev.exit.1:                  ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIfSaIfEED2Ev.exit
  %_M_start.i.i9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 0
  %49 = load float*, float** %_M_start.i.i9, align 8, !tbaa !76
  %tobool.i.i.i10 = icmp eq float* %49, null
  br i1 %tobool.i.i.i10, label %_ZNSt6vectorIfSaIfEED2Ev.exit12, label %if.then.i.i.i11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD0Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #19 comdat align 2 {
entry:
  tail call void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) #24
  %0 = bitcast %class.CAmbisonicBinauralizer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #27
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN4HRTFD2Ev(%class.HRTF* %this) unnamed_addr #7 comdat align 2 {
entry:
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #21

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @acosf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #22

declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = ptrtoint float* %__position.coerce to i64
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end119, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast float** %_M_end_of_storage to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !476
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !73
  %sub.ptr.sub = sub i64 %2, %4
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp3, label %if.else54, label %if.then4

if.then4:                                         ; preds = %if.then
  %6 = bitcast float* %__x to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !50
  %sub.ptr.sub.i = sub i64 %4, %0
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp10 = icmp ugt i64 %sub.ptr.div.i, %__n
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then4
  %idx.neg = sub i64 0, %__n
  %add.ptr = getelementptr inbounds float, float* %5, i64 %idx.neg
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i182 = ptrtoint float* %add.ptr to i64
  %diff.neg = shl i64 %__n, 2
  %tobool.i.i.i.i.i.i.i.i185 = icmp eq i64 %diff.neg, 0
  br i1 %tobool.i.i.i.i.i.i.i.i185, label %invoke.cont20, label %if.then.i.i.i.i.i.i.i.i186

if.then.i.i.i.i.i.i.i.i186:                       ; preds = %if.then11
  %8 = inttoptr i64 %4 to i8*
  %9 = bitcast float* %add.ptr to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 %diff.neg, i1 false) #24
  %.pre241 = load float*, float** %_M_finish, align 8, !tbaa !73
  br label %invoke.cont20

invoke.cont20:                                    ; preds = %if.then.i.i.i.i.i.i.i.i186, %if.then11
  %10 = phi float* [ %.pre241, %if.then.i.i.i.i.i.i.i.i186 ], [ %5, %if.then11 ]
  %add.ptr24 = getelementptr inbounds float, float* %10, i64 %__n
  store float* %add.ptr24, float** %_M_finish, align 8, !tbaa !73
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i182, %0
  %tobool.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %tobool.i.i.i.i, label %for.body.i.i218.preheader, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %invoke.cont20
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %idx.neg.i.i.i.i = sub nsw i64 0, %sub.ptr.div.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr inbounds float, float* %5, i64 %idx.neg.i.i.i.i
  %11 = bitcast float* %add.ptr.i.i.i.i to i8*
  %12 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i, i1 false) #24
  br label %for.body.i.i218.preheader

for.body.i.i218.preheader:                        ; preds = %if.then.i.i.i.i, %invoke.cont20
  %add.ptr32 = getelementptr inbounds float, float* %__position.coerce, i64 %__n
  %13 = shl nsw i64 %__n, 2
  %14 = add i64 %13, -4
  %15 = lshr exact i64 %14, 2
  %16 = add nuw nsw i64 %15, 1
  %min.iters.check275 = icmp ult i64 %16, 8
  br i1 %min.iters.check275, label %for.body.i.i218.preheader315, label %vector.ph276

vector.ph276:                                     ; preds = %for.body.i.i218.preheader
  %n.vec278 = and i64 %16, 9223372036854775800
  %ind.end282 = getelementptr float, float* %__position.coerce, i64 %n.vec278
  %broadcast.splatinsert286 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat287 = shufflevector <4 x i32> %broadcast.splatinsert286, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert288 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat289 = shufflevector <4 x i32> %broadcast.splatinsert288, <4 x i32> undef, <4 x i32> zeroinitializer
  %17 = add nsw i64 %n.vec278, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %xtraiter319 = and i64 %19, 7
  %20 = icmp ult i64 %17, 56
  br i1 %20, label %middle.block273.unr-lcssa, label %vector.ph276.new

vector.ph276.new:                                 ; preds = %vector.ph276
  %unroll_iter322 = sub nsw i64 %19, %xtraiter319
  br label %vector.body272

vector.body272:                                   ; preds = %vector.body272, %vector.ph276.new
  %index279 = phi i64 [ 0, %vector.ph276.new ], [ %index.next280.7, %vector.body272 ]
  %niter323 = phi i64 [ %unroll_iter322, %vector.ph276.new ], [ %niter323.nsub.7, %vector.body272 ]
  %next.gep284 = getelementptr float, float* %__position.coerce, i64 %index279
  %21 = bitcast float* %next.gep284 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %21, align 4, !tbaa !50
  %22 = getelementptr float, float* %next.gep284, i64 4
  %23 = bitcast float* %22 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %23, align 4, !tbaa !50
  %index.next280 = or i64 %index279, 8
  %next.gep284.1 = getelementptr float, float* %__position.coerce, i64 %index.next280
  %24 = bitcast float* %next.gep284.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %24, align 4, !tbaa !50
  %25 = getelementptr float, float* %next.gep284.1, i64 4
  %26 = bitcast float* %25 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %26, align 4, !tbaa !50
  %index.next280.1 = or i64 %index279, 16
  %next.gep284.2 = getelementptr float, float* %__position.coerce, i64 %index.next280.1
  %27 = bitcast float* %next.gep284.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %27, align 4, !tbaa !50
  %28 = getelementptr float, float* %next.gep284.2, i64 4
  %29 = bitcast float* %28 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %29, align 4, !tbaa !50
  %index.next280.2 = or i64 %index279, 24
  %next.gep284.3 = getelementptr float, float* %__position.coerce, i64 %index.next280.2
  %30 = bitcast float* %next.gep284.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %30, align 4, !tbaa !50
  %31 = getelementptr float, float* %next.gep284.3, i64 4
  %32 = bitcast float* %31 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %32, align 4, !tbaa !50
  %index.next280.3 = or i64 %index279, 32
  %next.gep284.4 = getelementptr float, float* %__position.coerce, i64 %index.next280.3
  %33 = bitcast float* %next.gep284.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %33, align 4, !tbaa !50
  %34 = getelementptr float, float* %next.gep284.4, i64 4
  %35 = bitcast float* %34 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %35, align 4, !tbaa !50
  %index.next280.4 = or i64 %index279, 40
  %next.gep284.5 = getelementptr float, float* %__position.coerce, i64 %index.next280.4
  %36 = bitcast float* %next.gep284.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %36, align 4, !tbaa !50
  %37 = getelementptr float, float* %next.gep284.5, i64 4
  %38 = bitcast float* %37 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %38, align 4, !tbaa !50
  %index.next280.5 = or i64 %index279, 48
  %next.gep284.6 = getelementptr float, float* %__position.coerce, i64 %index.next280.5
  %39 = bitcast float* %next.gep284.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %39, align 4, !tbaa !50
  %40 = getelementptr float, float* %next.gep284.6, i64 4
  %41 = bitcast float* %40 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %41, align 4, !tbaa !50
  %index.next280.6 = or i64 %index279, 56
  %next.gep284.7 = getelementptr float, float* %__position.coerce, i64 %index.next280.6
  %42 = bitcast float* %next.gep284.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %42, align 4, !tbaa !50
  %43 = getelementptr float, float* %next.gep284.7, i64 4
  %44 = bitcast float* %43 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %44, align 4, !tbaa !50
  %index.next280.7 = add i64 %index279, 64
  %niter323.nsub.7 = add i64 %niter323, -8
  %niter323.ncmp.7 = icmp eq i64 %niter323.nsub.7, 0
  br i1 %niter323.ncmp.7, label %middle.block273.unr-lcssa, label %vector.body272, !llvm.loop !477

middle.block273.unr-lcssa:                        ; preds = %vector.body272, %vector.ph276
  %index279.unr = phi i64 [ 0, %vector.ph276 ], [ %index.next280.7, %vector.body272 ]
  %lcmp.mod321 = icmp eq i64 %xtraiter319, 0
  br i1 %lcmp.mod321, label %middle.block273, label %vector.body272.epil

vector.body272.epil:                              ; preds = %vector.body272.epil, %middle.block273.unr-lcssa
  %index279.epil = phi i64 [ %index.next280.epil, %vector.body272.epil ], [ %index279.unr, %middle.block273.unr-lcssa ]
  %epil.iter320 = phi i64 [ %epil.iter320.sub, %vector.body272.epil ], [ %xtraiter319, %middle.block273.unr-lcssa ]
  %next.gep284.epil = getelementptr float, float* %__position.coerce, i64 %index279.epil
  %45 = bitcast float* %next.gep284.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat287, <4 x i32>* %45, align 4, !tbaa !50
  %46 = getelementptr float, float* %next.gep284.epil, i64 4
  %47 = bitcast float* %46 to <4 x i32>*
  store <4 x i32> %broadcast.splat289, <4 x i32>* %47, align 4, !tbaa !50
  %index.next280.epil = add i64 %index279.epil, 8
  %epil.iter320.sub = add i64 %epil.iter320, -1
  %epil.iter320.cmp = icmp eq i64 %epil.iter320.sub, 0
  br i1 %epil.iter320.cmp, label %middle.block273, label %vector.body272.epil, !llvm.loop !478

middle.block273:                                  ; preds = %vector.body272.epil, %middle.block273.unr-lcssa
  %cmp.n283 = icmp eq i64 %16, %n.vec278
  br i1 %cmp.n283, label %if.end119, label %for.body.i.i218.preheader315

for.body.i.i218.preheader315:                     ; preds = %middle.block273, %for.body.i.i218.preheader
  %__first.addr.05.i.i215.ph = phi float* [ %__position.coerce, %for.body.i.i218.preheader ], [ %ind.end282, %middle.block273 ]
  br label %for.body.i.i218

for.body.i.i218:                                  ; preds = %for.body.i.i218, %for.body.i.i218.preheader315
  %__first.addr.05.i.i215 = phi float* [ %incdec.ptr.i.i216, %for.body.i.i218 ], [ %__first.addr.05.i.i215.ph, %for.body.i.i218.preheader315 ]
  %48 = bitcast float* %__first.addr.05.i.i215 to i32*
  store i32 %7, i32* %48, align 4, !tbaa !50
  %incdec.ptr.i.i216 = getelementptr inbounds float, float* %__first.addr.05.i.i215, i64 1
  %cmp.i.i217 = icmp eq float* %incdec.ptr.i.i216, %add.ptr32
  br i1 %cmp.i.i217, label %if.end119, label %for.body.i.i218, !llvm.loop !479

if.else:                                          ; preds = %if.then4
  %sub = sub i64 %__n, %sub.ptr.div.i
  %cmp6.i.i.i.i.i205 = icmp eq i64 %sub, 0
  br i1 %cmp6.i.i.i.i.i205, label %invoke.cont37, label %for.body.i.i.i.i.i211.preheader

for.body.i.i.i.i.i211.preheader:                  ; preds = %if.else
  %min.iters.check = icmp ult i64 %sub, 8
  br i1 %min.iters.check, label %for.body.i.i.i.i.i211.preheader318, label %vector.ph

vector.ph:                                        ; preds = %for.body.i.i.i.i.i211.preheader
  %n.vec = and i64 %sub, -8
  %ind.end = sub i64 %sub, %n.vec
  %ind.end245 = getelementptr float, float* %5, i64 %n.vec
  %broadcast.splatinsert248 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat249 = shufflevector <4 x i32> %broadcast.splatinsert248, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert250 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat251 = shufflevector <4 x i32> %broadcast.splatinsert250, <4 x i32> undef, <4 x i32> zeroinitializer
  %49 = add i64 %n.vec, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %xtraiter329 = and i64 %51, 7
  %52 = icmp ult i64 %49, 56
  br i1 %52, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter332 = sub nsw i64 %51, %xtraiter329
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter333 = phi i64 [ %unroll_iter332, %vector.ph.new ], [ %niter333.nsub.7, %vector.body ]
  %next.gep = getelementptr float, float* %5, i64 %index
  %53 = bitcast float* %next.gep to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %53, align 4, !tbaa !50
  %54 = getelementptr float, float* %next.gep, i64 4
  %55 = bitcast float* %54 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %55, align 4, !tbaa !50
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %5, i64 %index.next
  %56 = bitcast float* %next.gep.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %56, align 4, !tbaa !50
  %57 = getelementptr float, float* %next.gep.1, i64 4
  %58 = bitcast float* %57 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %58, align 4, !tbaa !50
  %index.next.1 = or i64 %index, 16
  %next.gep.2 = getelementptr float, float* %5, i64 %index.next.1
  %59 = bitcast float* %next.gep.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %59, align 4, !tbaa !50
  %60 = getelementptr float, float* %next.gep.2, i64 4
  %61 = bitcast float* %60 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %61, align 4, !tbaa !50
  %index.next.2 = or i64 %index, 24
  %next.gep.3 = getelementptr float, float* %5, i64 %index.next.2
  %62 = bitcast float* %next.gep.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %62, align 4, !tbaa !50
  %63 = getelementptr float, float* %next.gep.3, i64 4
  %64 = bitcast float* %63 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %64, align 4, !tbaa !50
  %index.next.3 = or i64 %index, 32
  %next.gep.4 = getelementptr float, float* %5, i64 %index.next.3
  %65 = bitcast float* %next.gep.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %65, align 4, !tbaa !50
  %66 = getelementptr float, float* %next.gep.4, i64 4
  %67 = bitcast float* %66 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %67, align 4, !tbaa !50
  %index.next.4 = or i64 %index, 40
  %next.gep.5 = getelementptr float, float* %5, i64 %index.next.4
  %68 = bitcast float* %next.gep.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %68, align 4, !tbaa !50
  %69 = getelementptr float, float* %next.gep.5, i64 4
  %70 = bitcast float* %69 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %70, align 4, !tbaa !50
  %index.next.5 = or i64 %index, 48
  %next.gep.6 = getelementptr float, float* %5, i64 %index.next.5
  %71 = bitcast float* %next.gep.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %71, align 4, !tbaa !50
  %72 = getelementptr float, float* %next.gep.6, i64 4
  %73 = bitcast float* %72 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %73, align 4, !tbaa !50
  %index.next.6 = or i64 %index, 56
  %next.gep.7 = getelementptr float, float* %5, i64 %index.next.6
  %74 = bitcast float* %next.gep.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %74, align 4, !tbaa !50
  %75 = getelementptr float, float* %next.gep.7, i64 4
  %76 = bitcast float* %75 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %76, align 4, !tbaa !50
  %index.next.7 = add i64 %index, 64
  %niter333.nsub.7 = add i64 %niter333, -8
  %niter333.ncmp.7 = icmp eq i64 %niter333.nsub.7, 0
  br i1 %niter333.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !480

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod331 = icmp eq i64 %xtraiter329, 0
  br i1 %lcmp.mod331, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %epil.iter330 = phi i64 [ %epil.iter330.sub, %vector.body.epil ], [ %xtraiter329, %middle.block.unr-lcssa ]
  %next.gep.epil = getelementptr float, float* %5, i64 %index.epil
  %77 = bitcast float* %next.gep.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat249, <4 x i32>* %77, align 4, !tbaa !50
  %78 = getelementptr float, float* %next.gep.epil, i64 4
  %79 = bitcast float* %78 to <4 x i32>*
  store <4 x i32> %broadcast.splat251, <4 x i32>* %79, align 4, !tbaa !50
  %index.next.epil = add i64 %index.epil, 8
  %epil.iter330.sub = add i64 %epil.iter330, -1
  %epil.iter330.cmp = icmp eq i64 %epil.iter330.sub, 0
  br i1 %epil.iter330.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !481

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %sub, %n.vec
  br i1 %cmp.n, label %invoke.cont37, label %for.body.i.i.i.i.i211.preheader318

for.body.i.i.i.i.i211.preheader318:               ; preds = %middle.block, %for.body.i.i.i.i.i211.preheader
  %__niter.08.i.i.i.i.i206.ph = phi i64 [ %sub, %for.body.i.i.i.i.i211.preheader ], [ %ind.end, %middle.block ]
  %__first.addr.07.i.i.i.i.i207.ph = phi float* [ %5, %for.body.i.i.i.i.i211.preheader ], [ %ind.end245, %middle.block ]
  br label %for.body.i.i.i.i.i211

for.body.i.i.i.i.i211:                            ; preds = %for.body.i.i.i.i.i211, %for.body.i.i.i.i.i211.preheader318
  %__niter.08.i.i.i.i.i206 = phi i64 [ %dec.i.i.i.i.i208, %for.body.i.i.i.i.i211 ], [ %__niter.08.i.i.i.i.i206.ph, %for.body.i.i.i.i.i211.preheader318 ]
  %__first.addr.07.i.i.i.i.i207 = phi float* [ %incdec.ptr.i.i.i.i.i209, %for.body.i.i.i.i.i211 ], [ %__first.addr.07.i.i.i.i.i207.ph, %for.body.i.i.i.i.i211.preheader318 ]
  %80 = bitcast float* %__first.addr.07.i.i.i.i.i207 to i32*
  store i32 %7, i32* %80, align 4, !tbaa !50
  %dec.i.i.i.i.i208 = add i64 %__niter.08.i.i.i.i.i206, -1
  %incdec.ptr.i.i.i.i.i209 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i207, i64 1
  %cmp.i.i.i.i.i210 = icmp eq i64 %dec.i.i.i.i.i208, 0
  br i1 %cmp.i.i.i.i.i210, label %invoke.cont37, label %for.body.i.i.i.i.i211, !llvm.loop !482

invoke.cont37:                                    ; preds = %for.body.i.i.i.i.i211, %middle.block, %if.else
  %__first.addr.0.lcssa.i.i.i.i.i212 = phi float* [ %5, %if.else ], [ %ind.end245, %middle.block ], [ %incdec.ptr.i.i.i.i.i209, %for.body.i.i.i.i.i211 ]
  store float* %__first.addr.0.lcssa.i.i.i.i.i212, float** %_M_finish, align 8, !tbaa !73
  %tobool.i.i.i.i.i.i.i.i200 = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i200, label %invoke.cont45, label %if.then.i.i.i.i.i.i.i.i201

if.then.i.i.i.i.i.i.i.i201:                       ; preds = %invoke.cont37
  %81 = bitcast float* %__first.addr.0.lcssa.i.i.i.i.i212 to i8*
  %82 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %sub.ptr.sub.i, i1 false) #24
  %.pre = load float*, float** %_M_finish, align 8, !tbaa !73
  br label %invoke.cont45

invoke.cont45:                                    ; preds = %if.then.i.i.i.i.i.i.i.i201, %invoke.cont37
  %83 = phi float* [ %.pre, %if.then.i.i.i.i.i.i.i.i201 ], [ %__first.addr.0.lcssa.i.i.i.i.i212, %invoke.cont37 ]
  %add.ptr49 = getelementptr inbounds float, float* %83, i64 %sub.ptr.div.i
  store float* %add.ptr49, float** %_M_finish, align 8, !tbaa !73
  %cmp4.i.i = icmp eq float* %5, %__position.coerce
  br i1 %cmp4.i.i, label %if.end119, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %invoke.cont45
  %scevgep = getelementptr float, float* %5, i64 -1
  %84 = ptrtoint float* %scevgep to i64
  %85 = sub i64 %84, %0
  %86 = lshr i64 %85, 2
  %87 = add nuw nsw i64 %86, 1
  %min.iters.check257 = icmp ult i64 %87, 8
  br i1 %min.iters.check257, label %for.body.i.i.preheader316, label %vector.ph258

vector.ph258:                                     ; preds = %for.body.i.i.preheader
  %n.vec260 = and i64 %87, 9223372036854775800
  %ind.end264 = getelementptr float, float* %__position.coerce, i64 %n.vec260
  %broadcast.splatinsert268 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat269 = shufflevector <4 x i32> %broadcast.splatinsert268, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert270 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat271 = shufflevector <4 x i32> %broadcast.splatinsert270, <4 x i32> undef, <4 x i32> zeroinitializer
  %88 = add nsw i64 %n.vec260, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %xtraiter324 = and i64 %90, 7
  %91 = icmp ult i64 %88, 56
  br i1 %91, label %middle.block253.unr-lcssa, label %vector.ph258.new

vector.ph258.new:                                 ; preds = %vector.ph258
  %unroll_iter327 = sub nsw i64 %90, %xtraiter324
  br label %vector.body252

vector.body252:                                   ; preds = %vector.body252, %vector.ph258.new
  %index261 = phi i64 [ 0, %vector.ph258.new ], [ %index.next262.7, %vector.body252 ]
  %niter328 = phi i64 [ %unroll_iter327, %vector.ph258.new ], [ %niter328.nsub.7, %vector.body252 ]
  %next.gep266 = getelementptr float, float* %__position.coerce, i64 %index261
  %92 = bitcast float* %next.gep266 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %92, align 4, !tbaa !50
  %93 = getelementptr float, float* %next.gep266, i64 4
  %94 = bitcast float* %93 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %94, align 4, !tbaa !50
  %index.next262 = or i64 %index261, 8
  %next.gep266.1 = getelementptr float, float* %__position.coerce, i64 %index.next262
  %95 = bitcast float* %next.gep266.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %95, align 4, !tbaa !50
  %96 = getelementptr float, float* %next.gep266.1, i64 4
  %97 = bitcast float* %96 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %97, align 4, !tbaa !50
  %index.next262.1 = or i64 %index261, 16
  %next.gep266.2 = getelementptr float, float* %__position.coerce, i64 %index.next262.1
  %98 = bitcast float* %next.gep266.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %98, align 4, !tbaa !50
  %99 = getelementptr float, float* %next.gep266.2, i64 4
  %100 = bitcast float* %99 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %100, align 4, !tbaa !50
  %index.next262.2 = or i64 %index261, 24
  %next.gep266.3 = getelementptr float, float* %__position.coerce, i64 %index.next262.2
  %101 = bitcast float* %next.gep266.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %101, align 4, !tbaa !50
  %102 = getelementptr float, float* %next.gep266.3, i64 4
  %103 = bitcast float* %102 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %103, align 4, !tbaa !50
  %index.next262.3 = or i64 %index261, 32
  %next.gep266.4 = getelementptr float, float* %__position.coerce, i64 %index.next262.3
  %104 = bitcast float* %next.gep266.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %104, align 4, !tbaa !50
  %105 = getelementptr float, float* %next.gep266.4, i64 4
  %106 = bitcast float* %105 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %106, align 4, !tbaa !50
  %index.next262.4 = or i64 %index261, 40
  %next.gep266.5 = getelementptr float, float* %__position.coerce, i64 %index.next262.4
  %107 = bitcast float* %next.gep266.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %107, align 4, !tbaa !50
  %108 = getelementptr float, float* %next.gep266.5, i64 4
  %109 = bitcast float* %108 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %109, align 4, !tbaa !50
  %index.next262.5 = or i64 %index261, 48
  %next.gep266.6 = getelementptr float, float* %__position.coerce, i64 %index.next262.5
  %110 = bitcast float* %next.gep266.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %110, align 4, !tbaa !50
  %111 = getelementptr float, float* %next.gep266.6, i64 4
  %112 = bitcast float* %111 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %112, align 4, !tbaa !50
  %index.next262.6 = or i64 %index261, 56
  %next.gep266.7 = getelementptr float, float* %__position.coerce, i64 %index.next262.6
  %113 = bitcast float* %next.gep266.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %113, align 4, !tbaa !50
  %114 = getelementptr float, float* %next.gep266.7, i64 4
  %115 = bitcast float* %114 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %115, align 4, !tbaa !50
  %index.next262.7 = add i64 %index261, 64
  %niter328.nsub.7 = add i64 %niter328, -8
  %niter328.ncmp.7 = icmp eq i64 %niter328.nsub.7, 0
  br i1 %niter328.ncmp.7, label %middle.block253.unr-lcssa, label %vector.body252, !llvm.loop !483

middle.block253.unr-lcssa:                        ; preds = %vector.body252, %vector.ph258
  %index261.unr = phi i64 [ 0, %vector.ph258 ], [ %index.next262.7, %vector.body252 ]
  %lcmp.mod326 = icmp eq i64 %xtraiter324, 0
  br i1 %lcmp.mod326, label %middle.block253, label %vector.body252.epil

vector.body252.epil:                              ; preds = %vector.body252.epil, %middle.block253.unr-lcssa
  %index261.epil = phi i64 [ %index.next262.epil, %vector.body252.epil ], [ %index261.unr, %middle.block253.unr-lcssa ]
  %epil.iter325 = phi i64 [ %epil.iter325.sub, %vector.body252.epil ], [ %xtraiter324, %middle.block253.unr-lcssa ]
  %next.gep266.epil = getelementptr float, float* %__position.coerce, i64 %index261.epil
  %116 = bitcast float* %next.gep266.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat269, <4 x i32>* %116, align 4, !tbaa !50
  %117 = getelementptr float, float* %next.gep266.epil, i64 4
  %118 = bitcast float* %117 to <4 x i32>*
  store <4 x i32> %broadcast.splat271, <4 x i32>* %118, align 4, !tbaa !50
  %index.next262.epil = add i64 %index261.epil, 8
  %epil.iter325.sub = add i64 %epil.iter325, -1
  %epil.iter325.cmp = icmp eq i64 %epil.iter325.sub, 0
  br i1 %epil.iter325.cmp, label %middle.block253, label %vector.body252.epil, !llvm.loop !484

middle.block253:                                  ; preds = %vector.body252.epil, %middle.block253.unr-lcssa
  %cmp.n265 = icmp eq i64 %87, %n.vec260
  br i1 %cmp.n265, label %if.end119, label %for.body.i.i.preheader316

for.body.i.i.preheader316:                        ; preds = %middle.block253, %for.body.i.i.preheader
  %__first.addr.05.i.i.ph = phi float* [ %__position.coerce, %for.body.i.i.preheader ], [ %ind.end264, %middle.block253 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.i.i.preheader316
  %__first.addr.05.i.i = phi float* [ %incdec.ptr.i.i, %for.body.i.i ], [ %__first.addr.05.i.i.ph, %for.body.i.i.preheader316 ]
  %119 = bitcast float* %__first.addr.05.i.i to i32*
  store i32 %7, i32* %119, align 4, !tbaa !50
  %incdec.ptr.i.i = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 1
  %cmp.i.i194 = icmp eq float* %incdec.ptr.i.i, %5
  br i1 %cmp.i.i194, label %if.end119, label %for.body.i.i, !llvm.loop !485

if.else54:                                        ; preds = %if.then
  %120 = bitcast %"class.std::vector.0"* %this to i64*
  %121 = load i64, i64* %120, align 8, !tbaa !76
  %sub.ptr.sub.i21.i = sub i64 %4, %121
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i190 = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i190, label %if.then.i191, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i191:                                     ; preds = %if.else54
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else54
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i192 = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i
  %122 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i188 = sub i64 %0, %121
  %sub.ptr.div.i189 = ashr exact i64 %sub.ptr.sub.i188, 2
  %cmp.i = icmp eq i64 %cond.i192, 0
  br i1 %cmp.i, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i192, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %123 = bitcast i8* %call2.i.i.i to float*
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %124 = phi float* [ %123, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %125 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr61 = getelementptr inbounds float, float* %124, i64 %sub.ptr.div.i189
  %126 = bitcast float* %__x to i32*
  %127 = load i32, i32* %126, align 4, !tbaa !50
  %min.iters.check293 = icmp ult i64 %__n, 8
  br i1 %min.iters.check293, label %for.body.i.i.i.i.i.preheader, label %vector.ph294

vector.ph294:                                     ; preds = %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %n.vec296 = and i64 %__n, -8
  %ind.end300 = sub i64 %__n, %n.vec296
  %ind.end302 = getelementptr float, float* %add.ptr61, i64 %n.vec296
  %broadcast.splatinsert311 = insertelement <4 x i32> undef, i32 %127, i32 0
  %broadcast.splat312 = shufflevector <4 x i32> %broadcast.splatinsert311, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert313 = insertelement <4 x i32> undef, i32 %127, i32 0
  %broadcast.splat314 = shufflevector <4 x i32> %broadcast.splatinsert313, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = add i64 %n.vec296, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %xtraiter = and i64 %130, 7
  %131 = icmp ult i64 %128, 56
  br i1 %131, label %middle.block291.unr-lcssa, label %vector.ph294.new

vector.ph294.new:                                 ; preds = %vector.ph294
  %unroll_iter = sub nsw i64 %130, %xtraiter
  br label %vector.body290

vector.body290:                                   ; preds = %vector.body290, %vector.ph294.new
  %index297 = phi i64 [ 0, %vector.ph294.new ], [ %index.next298.7, %vector.body290 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph294.new ], [ %niter.nsub.7, %vector.body290 ]
  %next.gep309 = getelementptr float, float* %add.ptr61, i64 %index297
  %132 = bitcast float* %next.gep309 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %132, align 4, !tbaa !50
  %133 = getelementptr float, float* %next.gep309, i64 4
  %134 = bitcast float* %133 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %134, align 4, !tbaa !50
  %index.next298 = or i64 %index297, 8
  %next.gep309.1 = getelementptr float, float* %add.ptr61, i64 %index.next298
  %135 = bitcast float* %next.gep309.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %135, align 4, !tbaa !50
  %136 = getelementptr float, float* %next.gep309.1, i64 4
  %137 = bitcast float* %136 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %137, align 4, !tbaa !50
  %index.next298.1 = or i64 %index297, 16
  %next.gep309.2 = getelementptr float, float* %add.ptr61, i64 %index.next298.1
  %138 = bitcast float* %next.gep309.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %138, align 4, !tbaa !50
  %139 = getelementptr float, float* %next.gep309.2, i64 4
  %140 = bitcast float* %139 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %140, align 4, !tbaa !50
  %index.next298.2 = or i64 %index297, 24
  %next.gep309.3 = getelementptr float, float* %add.ptr61, i64 %index.next298.2
  %141 = bitcast float* %next.gep309.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %141, align 4, !tbaa !50
  %142 = getelementptr float, float* %next.gep309.3, i64 4
  %143 = bitcast float* %142 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %143, align 4, !tbaa !50
  %index.next298.3 = or i64 %index297, 32
  %next.gep309.4 = getelementptr float, float* %add.ptr61, i64 %index.next298.3
  %144 = bitcast float* %next.gep309.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %144, align 4, !tbaa !50
  %145 = getelementptr float, float* %next.gep309.4, i64 4
  %146 = bitcast float* %145 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %146, align 4, !tbaa !50
  %index.next298.4 = or i64 %index297, 40
  %next.gep309.5 = getelementptr float, float* %add.ptr61, i64 %index.next298.4
  %147 = bitcast float* %next.gep309.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %147, align 4, !tbaa !50
  %148 = getelementptr float, float* %next.gep309.5, i64 4
  %149 = bitcast float* %148 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %149, align 4, !tbaa !50
  %index.next298.5 = or i64 %index297, 48
  %next.gep309.6 = getelementptr float, float* %add.ptr61, i64 %index.next298.5
  %150 = bitcast float* %next.gep309.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %150, align 4, !tbaa !50
  %151 = getelementptr float, float* %next.gep309.6, i64 4
  %152 = bitcast float* %151 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %152, align 4, !tbaa !50
  %index.next298.6 = or i64 %index297, 56
  %next.gep309.7 = getelementptr float, float* %add.ptr61, i64 %index.next298.6
  %153 = bitcast float* %next.gep309.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %153, align 4, !tbaa !50
  %154 = getelementptr float, float* %next.gep309.7, i64 4
  %155 = bitcast float* %154 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %155, align 4, !tbaa !50
  %index.next298.7 = add i64 %index297, 64
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block291.unr-lcssa, label %vector.body290, !llvm.loop !486

middle.block291.unr-lcssa:                        ; preds = %vector.body290, %vector.ph294
  %index297.unr = phi i64 [ 0, %vector.ph294 ], [ %index.next298.7, %vector.body290 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block291, label %vector.body290.epil

vector.body290.epil:                              ; preds = %vector.body290.epil, %middle.block291.unr-lcssa
  %index297.epil = phi i64 [ %index.next298.epil, %vector.body290.epil ], [ %index297.unr, %middle.block291.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body290.epil ], [ %xtraiter, %middle.block291.unr-lcssa ]
  %next.gep309.epil = getelementptr float, float* %add.ptr61, i64 %index297.epil
  %156 = bitcast float* %next.gep309.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat312, <4 x i32>* %156, align 4, !tbaa !50
  %157 = getelementptr float, float* %next.gep309.epil, i64 4
  %158 = bitcast float* %157 to <4 x i32>*
  store <4 x i32> %broadcast.splat314, <4 x i32>* %158, align 4, !tbaa !50
  %index.next298.epil = add i64 %index297.epil, 8
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block291, label %vector.body290.epil, !llvm.loop !487

middle.block291:                                  ; preds = %vector.body290.epil, %middle.block291.unr-lcssa
  %cmp.n303 = icmp eq i64 %n.vec296, %__n
  br i1 %cmp.n303, label %invoke.cont64, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %middle.block291, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %__niter.08.i.i.i.i.i.ph = phi i64 [ %__n, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end300, %middle.block291 ]
  %__first.addr.07.i.i.i.i.i.ph = phi float* [ %add.ptr61, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end302, %middle.block291 ]
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.preheader
  %__niter.08.i.i.i.i.i = phi i64 [ %dec.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__niter.08.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %__first.addr.07.i.i.i.i.i = phi float* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__first.addr.07.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %159 = bitcast float* %__first.addr.07.i.i.i.i.i to i32*
  store i32 %127, i32* %159, align 4, !tbaa !50
  %dec.i.i.i.i.i = add i64 %__niter.08.i.i.i.i.i, -1
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq i64 %dec.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %invoke.cont64, label %for.body.i.i.i.i.i, !llvm.loop !488

invoke.cont64:                                    ; preds = %for.body.i.i.i.i.i, %middle.block291
  %160 = load float*, float** %122, align 8, !tbaa !76
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i173 = ptrtoint float* %160 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i174 = sub i64 %0, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i173
  %sub.ptr.div.i.i.i.i.i.i.i.i175 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i174, 2
  %tobool.i.i.i.i.i.i.i.i176 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i174, 0
  br i1 %tobool.i.i.i.i.i.i.i.i176, label %invoke.cont69, label %if.then.i.i.i.i.i.i.i.i177

if.then.i.i.i.i.i.i.i.i177:                       ; preds = %invoke.cont64
  %161 = bitcast float* %160 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %161, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i174, i1 false) #24
  br label %invoke.cont69

invoke.cont69:                                    ; preds = %if.then.i.i.i.i.i.i.i.i177, %invoke.cont64
  %add.ptr.i.i.i.i.i.i.i.i178 = getelementptr inbounds float, float* %124, i64 %sub.ptr.div.i.i.i.i.i.i.i.i175
  %add.ptr71 = getelementptr inbounds float, float* %add.ptr.i.i.i.i.i.i.i.i178, i64 %__n
  %162 = load i64, i64* %3, align 8, !tbaa !73
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %162, %0
  %sub.ptr.div.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %invoke.cont76, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %invoke.cont69
  %163 = bitcast float* %add.ptr71 to i8*
  %164 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #24
  br label %invoke.cont76

invoke.cont76:                                    ; preds = %if.then.i.i.i.i.i.i.i.i, %invoke.cont69
  %add.ptr.i.i.i.i.i.i.i.i = getelementptr inbounds float, float* %add.ptr71, i64 %sub.ptr.div.i.i.i.i.i.i.i.i
  %tobool.i169 = icmp eq float* %160, null
  br i1 %tobool.i169, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit171, label %if.then.i170

if.then.i170:                                     ; preds = %invoke.cont76
  %165 = bitcast float* %160 to i8*
  tail call void @_ZdlPv(i8* nonnull %165) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit171

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit171: ; preds = %if.then.i170, %invoke.cont76
  store float* %124, float** %122, align 8, !tbaa !76
  store float* %add.ptr.i.i.i.i.i.i.i.i, float** %_M_finish, align 8, !tbaa !73
  %add.ptr111 = getelementptr inbounds float, float* %124, i64 %cond.i192
  store float* %add.ptr111, float** %_M_end_of_storage, align 8, !tbaa !476
  br label %if.end119

if.end119:                                        ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit171, %for.body.i.i, %middle.block253, %invoke.cont45, %for.body.i.i218, %middle.block273, %entry
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #22

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end54, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast float** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !476
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load float*, float** %_M_finish, align 8, !tbaa !73
  %sub.ptr.rhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first2.i.i.i = bitcast float* %2 to i8*
  %3 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr float, float* %2, i64 %__n
  br label %if.end54.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast float** %_M_finish to i64*
  %5 = bitcast %"class.std::vector.0"* %this to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !76
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %6
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i83, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i83:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %7 = inttoptr i64 %6 to float*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i
  %cmp.i87 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i87, label %invoke.cont, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %8 = bitcast i8* %call2.i.i.i to float*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load float*, float** %_M_start.phi.trans.insert, align 8, !tbaa !76
  %.pre95 = load i64, i64* %4, align 8, !tbaa !73
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %9 = phi i64 [ %.pre95, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %sub.ptr.rhs.cast, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %10 = phi float* [ %.pre, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %7, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %11 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %cond.i88 = phi float* [ %8, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds float, float* %cond.i88, i64 %sub.ptr.div.i22.i
  %__first2.i.i.i90 = bitcast float* %add.ptr to i8*
  %12 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i90, i8 0, i64 %12, i1 false)
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint float* %10 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %9, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %try.cont, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %invoke.cont
  %13 = bitcast float* %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %13, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #24
  br label %try.cont

try.cont:                                         ; preds = %if.then.i.i.i.i.i.i.i.i, %invoke.cont
  %tobool.i = icmp eq float* %10, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, label %if.then.i

if.then.i:                                        ; preds = %try.cont
  %14 = bitcast float* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit: ; preds = %if.then.i, %try.cont
  %15 = bitcast %"class.std::vector.0"* %this to i8**
  store i8* %11, i8** %15, align 8, !tbaa !76
  %add.ptr47 = getelementptr inbounds float, float* %add.ptr, i64 %__n
  store float* %add.ptr47, float** %_M_finish, align 8, !tbaa !73
  %add.ptr50 = getelementptr inbounds float, float* %cond.i88, i64 %cond.i
  br label %if.end54.sink.split

if.end54.sink.split:                              ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
  %_M_finish.sink = phi float** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit ]
  %scevgep.i.i.sink = phi float* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %add.ptr50, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit ]
  store float* %scevgep.i.i.sink, float** %_M_finish.sink, align 8, !tbaa !43
  br label %if.end54

if.end54:                                         ; preds = %if.end54.sink.split, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_(%"class.std::vector.7"* %this, %"class.std::unique_ptr.12"* %__position.coerce, float** dereferenceable(8) %__args) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = ptrtoint %"class.std::unique_ptr.12"* %__position.coerce to i64
  %_M_finish.i20.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.std::unique_ptr.12"** %_M_finish.i20.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !199
  %3 = bitcast %"class.std::vector.7"* %this to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !43
  %sub.ptr.sub.i21.i = sub i64 %2, %4
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 3
  %cmp.i.i = icmp eq i64 %sub.ptr.sub.i21.i, 0
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 1, i64 %sub.ptr.div.i22.i
  %add.i = add nsw i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %5 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i = sub i64 %0, %4
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp.i67 = icmp eq i64 %cond.i, 0
  %6 = inttoptr i64 %4 to %"class.std::unique_ptr.12"*
  br i1 %cmp.i67, label %invoke.cont, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i: ; preds = %entry
  %mul.i.i.i = shl i64 %cond.i, 3
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %7 = bitcast i8* %call2.i.i.i to %"class.std::unique_ptr.12"*
  %.pre = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %5, align 8, !tbaa !203
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i, %entry
  %8 = phi %"class.std::unique_ptr.12"* [ %.pre, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i ], [ %6, %entry ]
  %cond.i68 = phi %"class.std::unique_ptr.12"* [ %7, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i ], [ null, %entry ]
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i68, i64 %sub.ptr.div.i
  %9 = bitcast float** %__args to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !43
  %11 = bitcast %"class.std::unique_ptr.12"* %add.ptr to i64*
  store i64 %10, i64* %11, align 8, !tbaa !43
  %cmp.i.i23.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %8, %__position.coerce
  br i1 %cmp.i.i23.i.i.i.i, label %invoke.cont10, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %invoke.cont
  %12 = ptrtoint %"class.std::unique_ptr.12"* %8 to i64
  %scevgep103 = getelementptr %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__position.coerce, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = ptrtoint float** %scevgep103 to i64
  %14 = sub i64 %13, %12
  %15 = lshr i64 %14, 3
  %16 = add nuw nsw i64 %15, 1
  %xtraiter107 = and i64 %16, 7
  %lcmp.mod108 = icmp eq i64 %xtraiter107, 0
  br i1 %lcmp.mod108, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %__cur.025.i.i.i.i.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %cond.i68, %for.body.i.i.i.i.preheader ]
  %__first.sroa.0.024.i.i.i.i.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %8, %for.body.i.i.i.i.preheader ]
  %prol.iter109 = phi i64 [ %prol.iter109.sub, %for.body.i.i.i.i.prol ], [ %xtraiter107, %for.body.i.i.i.i.preheader ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.prol, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.prol to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.prol, align 8, !tbaa !43
  %19 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.prol to i64*
  store i64 %18, i64* %19, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.prol, i64 1
  %incdec.ptr.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.prol, i64 1
  %prol.iter109.sub = add i64 %prol.iter109, -1
  %prol.iter109.cmp = icmp eq i64 %prol.iter109.sub, 0
  br i1 %prol.iter109.cmp, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !491

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %incdec.ptr.i.i.i.i.lcssa.unr = phi %"class.std::unique_ptr.12"* [ undef, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %__cur.025.i.i.i.i.unr = phi %"class.std::unique_ptr.12"* [ %cond.i68, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %__first.sroa.0.024.i.i.i.i.unr = phi %"class.std::unique_ptr.12"* [ %8, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %20 = icmp ult i64 %14, 56
  br i1 %20, label %invoke.cont10, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit
  %__cur.025.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.7, %for.body.i.i.i.i ], [ %__cur.025.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %__first.sroa.0.024.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i ], [ %__first.sroa.0.024.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i, align 8, !tbaa !43
  %23 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i to i64*
  store i64 %22, i64* %23, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.1, align 8, !tbaa !43
  %26 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i to i64*
  store i64 %25, i64* %26, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 2
  %incdec.ptr.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 2
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.1 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.2, align 8, !tbaa !43
  %29 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.1 to i64*
  store i64 %28, i64* %29, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 3
  %incdec.ptr.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 3
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.2 to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.3, align 8, !tbaa !43
  %32 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.2 to i64*
  store i64 %31, i64* %32, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 4
  %incdec.ptr.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 4
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.3 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.4, align 8, !tbaa !43
  %35 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.3 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 5
  %incdec.ptr.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 5
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.4 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.5, align 8, !tbaa !43
  %38 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.4 to i64*
  store i64 %37, i64* %38, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 6
  %incdec.ptr.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 6
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.5 to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.6, align 8, !tbaa !43
  %41 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.5 to i64*
  store i64 %40, i64* %41, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 7
  %incdec.ptr.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 7
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.6 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.7, align 8, !tbaa !43
  %44 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.6 to i64*
  store i64 %43, i64* %44, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 8
  %incdec.ptr.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i, i64 8
  %cmp.i.i.i.i.i.i.7 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.7, %__position.coerce
  br i1 %cmp.i.i.i.i.i.i.7, label %invoke.cont10, label %for.body.i.i.i.i

invoke.cont10:                                    ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit, %invoke.cont
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %cond.i68, %invoke.cont ], [ %incdec.ptr.i.i.i.i.lcssa.unr, %for.body.i.i.i.i.prol.loopexit ], [ %incdec.ptr.i.i.i.i.7, %for.body.i.i.i.i ]
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.0.lcssa.i.i.i.i, i64 1
  %45 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i20.i, align 8, !tbaa !199
  %cmp.i.i23.i.i.i.i85 = icmp eq %"class.std::unique_ptr.12"* %45, %__position.coerce
  br i1 %cmp.i.i23.i.i.i.i85, label %invoke.cont15, label %for.body.i.i.i.i92.preheader

for.body.i.i.i.i92.preheader:                     ; preds = %invoke.cont10
  %scevgep = getelementptr %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %45, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = ptrtoint float** %scevgep to i64
  %47 = sub i64 %46, %0
  %48 = lshr i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %xtraiter = and i64 %49, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.i.i.i92.prol.loopexit, label %for.body.i.i.i.i92.prol

for.body.i.i.i.i92.prol:                          ; preds = %for.body.i.i.i.i92.prol, %for.body.i.i.i.i92.preheader
  %__cur.025.i.i.i.i86.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i90.prol, %for.body.i.i.i.i92.prol ], [ %incdec.ptr, %for.body.i.i.i.i92.preheader ]
  %__first.sroa.0.024.i.i.i.i87.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i89.prol, %for.body.i.i.i.i92.prol ], [ %__position.coerce, %for.body.i.i.i.i92.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i.i.i92.prol ], [ %xtraiter, %for.body.i.i.i.i92.preheader ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87.prol, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87.prol to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.prol, align 8, !tbaa !43
  %52 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86.prol to i64*
  store i64 %51, i64* %52, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87.prol, i64 1
  %incdec.ptr.i.i.i.i90.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i.i.i92.prol.loopexit, label %for.body.i.i.i.i92.prol, !llvm.loop !492

for.body.i.i.i.i92.prol.loopexit:                 ; preds = %for.body.i.i.i.i92.prol, %for.body.i.i.i.i92.preheader
  %incdec.ptr.i.i.i.i90.lcssa.unr = phi %"class.std::unique_ptr.12"* [ undef, %for.body.i.i.i.i92.preheader ], [ %incdec.ptr.i.i.i.i90.prol, %for.body.i.i.i.i92.prol ]
  %__cur.025.i.i.i.i86.unr = phi %"class.std::unique_ptr.12"* [ %incdec.ptr, %for.body.i.i.i.i92.preheader ], [ %incdec.ptr.i.i.i.i90.prol, %for.body.i.i.i.i92.prol ]
  %__first.sroa.0.024.i.i.i.i87.unr = phi %"class.std::unique_ptr.12"* [ %__position.coerce, %for.body.i.i.i.i92.preheader ], [ %incdec.ptr.i.i.i.i.i89.prol, %for.body.i.i.i.i92.prol ]
  %53 = icmp ult i64 %47, 56
  br i1 %53, label %invoke.cont15.loopexit, label %for.body.i.i.i.i92

for.body.i.i.i.i92:                               ; preds = %for.body.i.i.i.i92, %for.body.i.i.i.i92.prol.loopexit
  %__cur.025.i.i.i.i86 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i90.7, %for.body.i.i.i.i92 ], [ %__cur.025.i.i.i.i86.unr, %for.body.i.i.i.i92.prol.loopexit ]
  %__first.sroa.0.024.i.i.i.i87 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i89.7, %for.body.i.i.i.i92 ], [ %__first.sroa.0.024.i.i.i.i87.unr, %for.body.i.i.i.i92.prol.loopexit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88, align 8, !tbaa !43
  %56 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 1
  %incdec.ptr.i.i.i.i90 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.1, align 8, !tbaa !43
  %59 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90 to i64*
  store i64 %58, i64* %59, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 2
  %incdec.ptr.i.i.i.i90.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 2
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.1 to i64*
  %61 = load i64, i64* %60, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.2, align 8, !tbaa !43
  %62 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.1 to i64*
  store i64 %61, i64* %62, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 3
  %incdec.ptr.i.i.i.i90.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 3
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.2 to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.3, align 8, !tbaa !43
  %65 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.2 to i64*
  store i64 %64, i64* %65, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 4
  %incdec.ptr.i.i.i.i90.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 4
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.3 to i64*
  %67 = load i64, i64* %66, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.4, align 8, !tbaa !43
  %68 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.3 to i64*
  store i64 %67, i64* %68, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 5
  %incdec.ptr.i.i.i.i90.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 5
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.4 to i64*
  %70 = load i64, i64* %69, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.5, align 8, !tbaa !43
  %71 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.4 to i64*
  store i64 %70, i64* %71, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 6
  %incdec.ptr.i.i.i.i90.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 6
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.5 to i64*
  %73 = load i64, i64* %72, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.6, align 8, !tbaa !43
  %74 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.5 to i64*
  store i64 %73, i64* %74, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 7
  %incdec.ptr.i.i.i.i90.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 7
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.6 to i64*
  %76 = load i64, i64* %75, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i88.7, align 8, !tbaa !43
  %77 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i90.6 to i64*
  store i64 %76, i64* %77, align 8, !tbaa !489
  %incdec.ptr.i.i.i.i.i89.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i87, i64 8
  %incdec.ptr.i.i.i.i90.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i86, i64 8
  %cmp.i.i.i.i.i.i91.7 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i89.7, %45
  br i1 %cmp.i.i.i.i.i.i91.7, label %invoke.cont15.loopexit, label %for.body.i.i.i.i92

invoke.cont15.loopexit:                           ; preds = %for.body.i.i.i.i92, %for.body.i.i.i.i92.prol.loopexit
  %incdec.ptr.i.i.i.i90.lcssa = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i90.lcssa.unr, %for.body.i.i.i.i92.prol.loopexit ], [ %incdec.ptr.i.i.i.i90.7, %for.body.i.i.i.i92 ]
  %.pre100 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i20.i, align 8, !tbaa !199
  br label %invoke.cont15

invoke.cont15:                                    ; preds = %invoke.cont15.loopexit, %invoke.cont10
  %78 = phi %"class.std::unique_ptr.12"* [ %__position.coerce, %invoke.cont10 ], [ %.pre100, %invoke.cont15.loopexit ]
  %__cur.0.lcssa.i.i.i.i93 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr, %invoke.cont10 ], [ %incdec.ptr.i.i.i.i90.lcssa, %invoke.cont15.loopexit ]
  %79 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %5, align 8, !tbaa !203
  %cmp3.i.i.i74 = icmp eq %"class.std::unique_ptr.12"* %79, %78
  br i1 %cmp3.i.i.i74, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83, label %for.body.i.i.i78

for.body.i.i.i78:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82, %invoke.cont15
  %__first.addr.04.i.i.i75 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i80, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82 ], [ %79, %invoke.cont15 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i76 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i76, align 8, !tbaa !43
  %cmp.i.i.i.i.i77 = icmp eq float* %80, null
  br i1 %cmp.i.i.i.i.i77, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i79

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i79: ; preds = %for.body.i.i.i78
  %81 = bitcast float* %80 to i8*
  tail call void @_ZdaPv(i8* %81) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i79, %for.body.i.i.i78
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i76, align 8, !tbaa !43
  %incdec.ptr.i.i.i80 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i75, i64 1
  %cmp.i.i.i81 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i80, %78
  br i1 %cmp.i.i.i81, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83thread-pre-split, label %for.body.i.i.i78

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83thread-pre-split: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i82
  %.pr = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %5, align 8, !tbaa !203
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83thread-pre-split, %invoke.cont15
  %82 = phi %"class.std::unique_ptr.12"* [ %.pr, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83thread-pre-split ], [ %78, %invoke.cont15 ]
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 2
  %tobool.i71 = icmp eq %"class.std::unique_ptr.12"* %82, null
  br i1 %tobool.i71, label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit73, label %if.then.i72

if.then.i72:                                      ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83
  %83 = bitcast %"class.std::unique_ptr.12"* %82 to i8*
  tail call void @_ZdlPv(i8* nonnull %83) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit73

_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit73: ; preds = %if.then.i72, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit83
  store %"class.std::unique_ptr.12"* %cond.i68, %"class.std::unique_ptr.12"** %5, align 8, !tbaa !203
  store %"class.std::unique_ptr.12"* %__cur.0.lcssa.i.i.i.i93, %"class.std::unique_ptr.12"** %_M_finish.i20.i, align 8, !tbaa !199
  %add.ptr39 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i68, i64 %cond.i
  store %"class.std::unique_ptr.12"* %add.ptr39, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8, !tbaa !202
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* dereferenceable(272), i8*, i64) local_unnamed_addr #0

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"*, i32) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #23

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"*, i8 signext) local_unnamed_addr #0

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #22

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"*) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIS_IfSaIfEESaIS1_EE17_M_default_appendEm(%"class.std::vector.42"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end54, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast %"class.std::vector.0"** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !493
  %_M_finish = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_finish, align 8, !tbaa !400
  %sub.ptr.rhs.cast = ptrtoint %"class.std::vector.0"* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first12.i.i.i = bitcast %"class.std::vector.0"* %2 to i8*
  %3 = mul nuw i64 %__n, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr %"class.std::vector.0", %"class.std::vector.0"* %2, i64 %__n
  br label %if.end54.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast %"class.std::vector.42"* %this to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !357
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %5
  %sub.ptr.div.i22.i = sdiv exact i64 %sub.ptr.sub.i21.i, 24
  %sub.i = sub nsw i64 768614336404564650, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i83, label %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit

if.then.i83:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit: ; preds = %if.else
  %6 = inttoptr i64 %5 to %"class.std::vector.0"*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 768614336404564650
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 768614336404564650, i64 %add.i
  %cmp.i84 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i84, label %invoke.cont, label %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i

_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i: ; preds = %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = mul i64 %cond.i, 24
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %7 = bitcast i8* %call2.i.i.i to %"class.std::vector.0"*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.phi.trans.insert, align 8, !tbaa !357
  %.pre107 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_finish, align 8, !tbaa !400
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i, %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit
  %8 = phi %"class.std::vector.0"* [ %.pre107, %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i ], [ %2, %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit ]
  %9 = phi %"class.std::vector.0"* [ %.pre, %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i ], [ %6, %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit ]
  %cond.i86 = phi %"class.std::vector.0"* [ %7, %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i ], [ null, %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %cond.i86, i64 %sub.ptr.div.i22.i
  %__first12.i.i.i88 = bitcast %"class.std::vector.0"* %add.ptr to i8*
  %10 = mul nuw i64 %__n, 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i88, i8 0, i64 %10, i1 false)
  %_M_start = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %this, i64 0, i32 0, i32 0, i32 0
  %cmp.i.i22.i.i.i.i = icmp eq %"class.std::vector.0"* %9, %8
  br i1 %cmp.i.i22.i.i.i.i, label %try.cont, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %invoke.cont
  %__cur.024.i.i.i.i = phi %"class.std::vector.0"* [ %incdec.ptr.i.i.i.i, %for.body.i.i.i.i ], [ %cond.i86, %invoke.cont ]
  %__first.sroa.0.023.i.i.i.i = phi %"class.std::vector.0"* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i ], [ %9, %invoke.cont ]
  %11 = bitcast %"class.std::vector.0"* %__cur.024.i.i.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #24
  %12 = bitcast %"class.std::vector.0"* %__cur.024.i.i.i.i to i64*
  %13 = bitcast %"class.std::vector.0"* %__first.sroa.0.023.i.i.i.i to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !43
  store i64 %14, i64* %12, align 8, !tbaa !43
  store i64 0, i64* %13, align 8, !tbaa !43
  %_M_finish.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__cur.024.i.i.i.i, i64 0, i32 0, i32 0, i32 1
  %_M_finish3.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.sroa.0.023.i.i.i.i, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast float** %_M_finish.i.i.i.i.i.i.i.i to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !43
  %17 = bitcast float** %_M_finish3.i.i.i.i.i.i.i.i to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !43
  store i64 %18, i64* %15, align 8, !tbaa !43
  store i64 %16, i64* %17, align 8, !tbaa !43
  %_M_end_of_storage.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__cur.024.i.i.i.i, i64 0, i32 0, i32 0, i32 2
  %_M_end_of_storage4.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.sroa.0.023.i.i.i.i, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast float** %_M_end_of_storage.i.i.i.i.i.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !43
  %21 = bitcast float** %_M_end_of_storage4.i.i.i.i.i.i.i.i to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !43
  store i64 %22, i64* %19, align 8, !tbaa !43
  store i64 %20, i64* %21, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.sroa.0.023.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__cur.024.i.i.i.i, i64 1
  %cmp.i.i.i.i.i.i = icmp eq %"class.std::vector.0"* %incdec.ptr.i.i.i.i.i, %8
  br i1 %cmp.i.i.i.i.i.i, label %try.cont.loopexit, label %for.body.i.i.i.i

try.cont.loopexit:                                ; preds = %for.body.i.i.i.i
  %.pre108 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_finish, align 8, !tbaa !400
  br label %try.cont

try.cont:                                         ; preds = %try.cont.loopexit, %invoke.cont
  %23 = phi %"class.std::vector.0"* [ %.pre108, %try.cont.loopexit ], [ %8, %invoke.cont ]
  %24 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start, align 8, !tbaa !357
  %cmp3.i.i.i = icmp eq %"class.std::vector.0"* %24, %23
  br i1 %cmp3.i.i.i, label %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i, %try.cont
  %__first.addr.04.i.i.i = phi %"class.std::vector.0"* [ %incdec.ptr.i.i.i, %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i ], [ %24, %try.cont ]
  %_M_start.i.i.i.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i, i64 0, i32 0, i32 0, i32 0
  %25 = load float*, float** %_M_start.i.i.i.i.i.i, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i = icmp eq float* %25, null
  br i1 %tobool.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i, label %if.then.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %for.body.i.i.i
  %26 = bitcast float* %25 to i8*
  tail call void @_ZdlPv(i8* nonnull %26) #24
  br label %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i

_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i:  ; preds = %if.then.i.i.i.i.i.i.i, %for.body.i.i.i
  %incdec.ptr.i.i.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %__first.addr.04.i.i.i, i64 1
  %cmp.i.i.i = icmp eq %"class.std::vector.0"* %incdec.ptr.i.i.i, %23
  br i1 %cmp.i.i.i, label %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exitthread-pre-split, label %for.body.i.i.i

_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exitthread-pre-split: ; preds = %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i
  %.pr = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start, align 8, !tbaa !357
  br label %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit

_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit: ; preds = %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exitthread-pre-split, %try.cont
  %27 = phi %"class.std::vector.0"* [ %.pr, %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exitthread-pre-split ], [ %23, %try.cont ]
  %tobool.i = icmp eq %"class.std::vector.0"* %27, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit
  %28 = bitcast %"class.std::vector.0"* %27 to i8*
  tail call void @_ZdlPv(i8* nonnull %28) #24
  br label %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit

_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit: ; preds = %if.then.i, %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit
  store %"class.std::vector.0"* %cond.i86, %"class.std::vector.0"** %_M_start, align 8, !tbaa !357
  %add.ptr47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %add.ptr, i64 %__n
  store %"class.std::vector.0"* %add.ptr47, %"class.std::vector.0"** %_M_finish, align 8, !tbaa !400
  %add.ptr50 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %cond.i86, i64 %cond.i
  br label %if.end54.sink.split

if.end54.sink.split:                              ; preds = %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit, %_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit
  %_M_finish.sink = phi %"class.std::vector.0"** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit ]
  %scevgep.i.i.sink = phi %"class.std::vector.0"* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit ], [ %add.ptr50, %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit ]
  store %"class.std::vector.0"* %scevgep.i.i.sink, %"class.std::vector.0"** %_M_finish.sink, align 8, !tbaa !43
  br label %if.end54

if.end54:                                         ; preds = %if.end54.sink.split, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end54, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast %"class.std::unique_ptr.33"** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !494
  %_M_finish = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish, align 8, !tbaa !401
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.33"* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first12.i.i.i = bitcast %"class.std::unique_ptr.33"* %2 to i8*
  %3 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %2, i64 %__n
  br label %if.end54.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast %"class.std::vector.28"* %this to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !346
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %5
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 3
  %sub.i = sub nsw i64 2305843009213693951, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i83, label %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit

if.then.i83:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit: ; preds = %if.else
  %6 = inttoptr i64 %5 to %"class.std::unique_ptr.33"*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %cmp.i84 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i84, label %invoke.cont, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i: ; preds = %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 3
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %7 = bitcast i8* %call2.i.i.i to %"class.std::unique_ptr.33"*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.phi.trans.insert, align 8, !tbaa !346
  %.pre107 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish, align 8, !tbaa !401
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %8 = phi %"class.std::unique_ptr.33"* [ %.pre107, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %2, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %9 = phi %"class.std::unique_ptr.33"* [ %.pre, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %6, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %cond.i86 = phi %"class.std::unique_ptr.33"* [ %7, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ null, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %cond.i86, i64 %sub.ptr.div.i22.i
  %__first12.i.i.i88 = bitcast %"class.std::unique_ptr.33"* %add.ptr to i8*
  %10 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i88, i8 0, i64 %10, i1 false)
  %_M_start = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0
  %cmp.i.i23.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %9, %8
  br i1 %cmp.i.i23.i.i.i.i, label %try.cont, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %invoke.cont
  %11 = ptrtoint %"class.std::unique_ptr.33"* %9 to i64
  %scevgep = getelementptr %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %8, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = ptrtoint %struct.kiss_fft_cpx** %scevgep to i64
  %13 = sub i64 %12, %11
  %14 = lshr i64 %13, 3
  %15 = add nuw nsw i64 %14, 1
  %xtraiter = and i64 %15, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %__cur.025.i.i.i.i.prol = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %cond.i86, %for.body.i.i.i.i.preheader ]
  %__first.sroa.0.024.i.i.i.i.prol = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %9, %for.body.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i.i.i.prol ], [ %xtraiter, %for.body.i.i.i.i.preheader ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i.prol, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i.prol to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.prol, align 8, !tbaa !43
  %18 = bitcast %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i.prol to i64*
  store i64 %17, i64* %18, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i.prol, i64 1
  %incdec.ptr.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !497

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %__cur.025.i.i.i.i.unr = phi %"class.std::unique_ptr.33"* [ %cond.i86, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %__first.sroa.0.024.i.i.i.i.unr = phi %"class.std::unique_ptr.33"* [ %9, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %19 = icmp ult i64 %13, 56
  br i1 %19, label %try.cont.loopexit, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit
  %__cur.025.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.7, %for.body.i.i.i.i ], [ %__cur.025.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %__first.sroa.0.024.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i ], [ %__first.sroa.0.024.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i, align 8, !tbaa !43
  %22 = bitcast %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i to i64*
  store i64 %21, i64* %22, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.1, align 8, !tbaa !43
  %25 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i to i64*
  store i64 %24, i64* %25, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 2
  %incdec.ptr.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 2
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.1 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.2, align 8, !tbaa !43
  %28 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.1 to i64*
  store i64 %27, i64* %28, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 3
  %incdec.ptr.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 3
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.2 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.3, align 8, !tbaa !43
  %31 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.2 to i64*
  store i64 %30, i64* %31, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 4
  %incdec.ptr.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 4
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.3 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.4, align 8, !tbaa !43
  %34 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.3 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 5
  %incdec.ptr.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 5
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.4 to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.5, align 8, !tbaa !43
  %37 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.4 to i64*
  store i64 %36, i64* %37, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 6
  %incdec.ptr.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 6
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.5 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.6, align 8, !tbaa !43
  %40 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.5 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 7
  %incdec.ptr.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 7
  %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.6 to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i20.i.i.i.i.7, align 8, !tbaa !43
  %43 = bitcast %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.6 to i64*
  store i64 %42, i64* %43, align 8, !tbaa !495
  %incdec.ptr.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.sroa.0.024.i.i.i.i, i64 8
  %incdec.ptr.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.025.i.i.i.i, i64 8
  %cmp.i.i.i.i.i.i.7 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.7, %8
  br i1 %cmp.i.i.i.i.i.i.7, label %try.cont.loopexit, label %for.body.i.i.i.i

try.cont.loopexit:                                ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit
  %.pre108 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish, align 8, !tbaa !401
  br label %try.cont

try.cont:                                         ; preds = %try.cont.loopexit, %invoke.cont
  %44 = phi %"class.std::unique_ptr.33"* [ %.pre108, %try.cont.loopexit ], [ %8, %invoke.cont ]
  %45 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start, align 8, !tbaa !346
  %cmp3.i.i.i = icmp eq %"class.std::unique_ptr.33"* %45, %44
  br i1 %cmp3.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, %try.cont
  %__first.addr.04.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i ], [ %45, %try.cont ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %46, null
  br i1 %cmp.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i: ; preds = %for.body.i.i.i
  %47 = bitcast %struct.kiss_fft_cpx* %46 to i8*
  tail call void @_ZdaPv(i8* %47) #27
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i, %for.body.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i, i64 1
  %cmp.i.i.i = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i, %44
  br i1 %cmp.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exitthread-pre-split, label %for.body.i.i.i

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exitthread-pre-split: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i
  %.pr = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start, align 8, !tbaa !346
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exitthread-pre-split, %try.cont
  %48 = phi %"class.std::unique_ptr.33"* [ %.pr, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exitthread-pre-split ], [ %44, %try.cont ]
  %tobool.i = icmp eq %"class.std::unique_ptr.33"* %48, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit
  %49 = bitcast %"class.std::unique_ptr.33"* %48 to i8*
  tail call void @_ZdlPv(i8* nonnull %49) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit: ; preds = %if.then.i, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit
  store %"class.std::unique_ptr.33"* %cond.i86, %"class.std::unique_ptr.33"** %_M_start, align 8, !tbaa !346
  %add.ptr47 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr, i64 %__n
  store %"class.std::unique_ptr.33"* %add.ptr47, %"class.std::unique_ptr.33"** %_M_finish, align 8, !tbaa !401
  %add.ptr50 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %cond.i86, i64 %cond.i
  br label %if.end54.sink.split

if.end54.sink.split:                              ; preds = %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
  %_M_finish.sink = phi %"class.std::unique_ptr.33"** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit ]
  %scevgep.i.i.sink = phi %"class.std::unique_ptr.33"* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %add.ptr50, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit ]
  store %"class.std::unique_ptr.33"* %scevgep.i.i.sink, %"class.std::unique_ptr.33"** %_M_finish.sink, align 8, !tbaa !43
  br label %if.end54

if.end54:                                         ; preds = %if.end54.sink.split, %entry
  ret void
}

declare %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"*) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #3 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #24
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.output(i8*, i32, i32, i1) #24

; Function Attrs: nounwind readnone
declare i8* @llvm.hpvm.getNode() #25

; Function Attrs: nounwind readnone
declare i64 @llvm.hpvm.getNodeInstanceID.x(i8*) #25

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode1D(i8*, i64) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #24

declare i8* @llvm_hpvm_cpu_launch(i8* (i8*)*, i8*)

declare void @llvm_hpvm_cpu_wait(i8*)

declare i8* @llvm_hpvm_cpu_argument_ptr(i8*, i64)

declare i8* @llvm_hpvm_streamLaunch(void (i8*, i8*)*, i8*)

declare void @llvm_hpvm_streamPush(i8*, i8*)

declare i8* @llvm_hpvm_streamPop(i8*)

declare void @llvm_hpvm_streamWait(i8*)

declare i8* @llvm_hpvm_createBindInBuffer(i8*, i64, i32)

declare i8* @llvm_hpvm_createBindOutBuffer(i8*, i64)

declare i8* @llvm_hpvm_createEdgeBuffer(i8*, i64)

declare i8* @llvm_hpvm_createLastInputBuffer(i8*, i64)

declare void @llvm_hpvm_createThread(i8*, i8* (i8*)*, i8*)

declare void @llvm_hpvm_bufferPush(i8*, i64)

declare i64 @llvm_hpvm_bufferPop(i8*)

declare void @llvm_hpvm_cpu_dstack_push(i32, i64, i64, i64, i64, i64, i64)

declare void @llvm_hpvm_cpu_dstack_pop()

declare i64 @llvm_hpvm_cpu_getDimLimit(i32, i32)

declare i64 @llvm_hpvm_cpu_getDimInstance(i32, i32)

declare i8* @llvm_hpvm_initializeTimerSet()

declare void @llvm_hpvm_switchToTimer(i8**, i32)

declare void @llvm_hpvm_printTimerSet(i8**, i8*)

; Function Attrs: uwtable
define %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %head = alloca %class.Orientation, align 4
  %1 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !42
  %2 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %2, i64 24, i1 false)
  %4 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %4, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %5(%class.CAmbisonicProcessor* %rotator)
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #24
  ret %struct.out.rotatorSet_fxp %returnStruct
}

define %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotatorSet_fxp %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotatorSet_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotatorSet_fxp %output
}

; Function Attrs: uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !42
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !50
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !50
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !50
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}

define %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperZoomSet_fxp undef, i64 %0, 0
  ret %struct.out.wrapperZoomSet_fxp %output
}

; Function Attrs: uwtable
define %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, float** in out %channelpart2, i64 %bytes_channelpart2, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 4, !tbaa !66, !range !67
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp204 = icmp sgt i64 %nSample, 0
  br i1 %cmp204, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 3
  %8 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %9 = load float*, float** %channelpart1, align 8, !tbaa !43
  %arrayidx.i203 = getelementptr inbounds float*, float** %7, i64 1
  %10 = load float*, float** %arrayidx.i203, align 8, !tbaa !43
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !43
  %arrayidx.i201 = getelementptr inbounds float*, float** %7, i64 2
  %12 = load float*, float** %arrayidx.i201, align 8, !tbaa !43
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %13 = load float*, float** %arrayidx16, align 8, !tbaa !43
  %arrayidx.i199 = getelementptr inbounds float*, float** %7, i64 6
  %14 = load float*, float** %arrayidx.i199, align 8, !tbaa !43
  %15 = load float*, float** %channelpart2, align 8, !tbaa !43
  %arrayidx.i197 = getelementptr inbounds float*, float** %7, i64 7
  %16 = load float*, float** %arrayidx.i197, align 8, !tbaa !43
  %arrayidx30 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %17 = load float*, float** %arrayidx30, align 8, !tbaa !43
  %arrayidx.i195 = getelementptr inbounds float*, float** %7, i64 5
  %18 = load float*, float** %arrayidx.i195, align 8, !tbaa !43
  %arrayidx37 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %19 = load float*, float** %arrayidx37, align 8, !tbaa !43
  %arrayidx.i193 = getelementptr inbounds float*, float** %7, i64 8
  %20 = load float*, float** %arrayidx.i193, align 8, !tbaa !43
  %arrayidx44 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %21 = load float*, float** %arrayidx44, align 8, !tbaa !43
  %arrayidx.i191 = getelementptr inbounds float*, float** %7, i64 4
  %22 = load float*, float** %arrayidx.i191, align 8, !tbaa !43
  %arrayidx51 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %23 = load float*, float** %arrayidx51, align 8, !tbaa !43
  %arrayidx.i189 = getelementptr inbounds float*, float** %7, i64 9
  %24 = load float*, float** %arrayidx.i189, align 8, !tbaa !43
  %25 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx.i187 = getelementptr inbounds float*, float** %7, i64 10
  %26 = load float*, float** %arrayidx.i187, align 8, !tbaa !43
  %arrayidx65 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %27 = load float*, float** %arrayidx65, align 8, !tbaa !43
  %arrayidx.i185 = getelementptr inbounds float*, float** %7, i64 11
  %28 = load float*, float** %arrayidx.i185, align 8, !tbaa !43
  %arrayidx72 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %29 = load float*, float** %arrayidx72, align 8, !tbaa !43
  %arrayidx.i183 = getelementptr inbounds float*, float** %7, i64 12
  %30 = load float*, float** %arrayidx.i183, align 8, !tbaa !43
  %arrayidx79 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %31 = load float*, float** %arrayidx79, align 8, !tbaa !43
  %arrayidx.i181 = getelementptr inbounds float*, float** %7, i64 13
  %32 = load float*, float** %arrayidx.i181, align 8, !tbaa !43
  %arrayidx86 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %33 = load float*, float** %arrayidx86, align 8, !tbaa !43
  %arrayidx.i179 = getelementptr inbounds float*, float** %7, i64 14
  %34 = load float*, float** %arrayidx.i179, align 8, !tbaa !43
  %arrayidx93 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %35 = load float*, float** %arrayidx93, align 8, !tbaa !43
  %arrayidx.i177 = getelementptr inbounds float*, float** %7, i64 15
  %36 = load float*, float** %arrayidx.i177, align 8, !tbaa !43
  %arrayidx100 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %37 = load float*, float** %arrayidx100, align 8, !tbaa !43
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %38 = bitcast float* %arrayidx to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !50
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %40 = bitcast float* %arrayidx4 to i32*
  store i32 %39, i32* %40, align 4, !tbaa !50
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %41 = bitcast float* %arrayidx8 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !50
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %43 = bitcast float* %arrayidx11 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !50
  %arrayidx15 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %44 = bitcast float* %arrayidx15 to i32*
  %45 = load i32, i32* %44, align 4, !tbaa !50
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %46 = bitcast float* %arrayidx18 to i32*
  store i32 %45, i32* %46, align 4, !tbaa !50
  %arrayidx22 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %47 = bitcast float* %arrayidx22 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !50
  %arrayidx25 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %49 = bitcast float* %arrayidx25 to i32*
  store i32 %48, i32* %49, align 4, !tbaa !50
  %arrayidx29 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %50 = bitcast float* %arrayidx29 to i32*
  %51 = load i32, i32* %50, align 4, !tbaa !50
  %arrayidx32 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %52 = bitcast float* %arrayidx32 to i32*
  store i32 %51, i32* %52, align 4, !tbaa !50
  %arrayidx36 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %53 = bitcast float* %arrayidx36 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !50
  %arrayidx39 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %55 = bitcast float* %arrayidx39 to i32*
  store i32 %54, i32* %55, align 4, !tbaa !50
  %arrayidx43 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %56 = bitcast float* %arrayidx43 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !50
  %arrayidx46 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %58 = bitcast float* %arrayidx46 to i32*
  store i32 %57, i32* %58, align 4, !tbaa !50
  %arrayidx50 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %59 = bitcast float* %arrayidx50 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !50
  %arrayidx53 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %61 = bitcast float* %arrayidx53 to i32*
  store i32 %60, i32* %61, align 4, !tbaa !50
  %arrayidx57 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %62 = bitcast float* %arrayidx57 to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !50
  %arrayidx60 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %64 = bitcast float* %arrayidx60 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !50
  %arrayidx64 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %65 = bitcast float* %arrayidx64 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !50
  %arrayidx67 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %67 = bitcast float* %arrayidx67 to i32*
  store i32 %66, i32* %67, align 4, !tbaa !50
  %arrayidx71 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %68 = bitcast float* %arrayidx71 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !50
  %arrayidx74 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %70 = bitcast float* %arrayidx74 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !50
  %arrayidx78 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %71 = bitcast float* %arrayidx78 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !50
  %arrayidx81 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %73 = bitcast float* %arrayidx81 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !50
  %arrayidx85 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %74 = bitcast float* %arrayidx85 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !50
  %arrayidx88 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %76 = bitcast float* %arrayidx88 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !50
  %arrayidx92 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %77 = bitcast float* %arrayidx92 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !50
  %arrayidx95 = getelementptr inbounds float, float* %35, i64 %indvars.iv
  %79 = bitcast float* %arrayidx95 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !50
  %arrayidx99 = getelementptr inbounds float, float* %36, i64 %indvars.iv
  %80 = bitcast float* %arrayidx99 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !50
  %arrayidx102 = getelementptr inbounds float, float* %37, i64 %indvars.iv
  %82 = bitcast float* %arrayidx102 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %nSample
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

define %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = insertvalue %struct.out.wrapperPsychoFilter_fxp undef, i64 %0, 0
  %2 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %3 = insertvalue %struct.out.wrapperPsychoFilter_fxp %1, i64 %2, 1
  %4 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 2
  %5 = insertvalue %struct.out.wrapperPsychoFilter_fxp %3, i64 %4, 2
  %6 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 3
  %7 = insertvalue %struct.out.wrapperPsychoFilter_fxp %5, i64 %6, 3
  %8 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 4
  %9 = insertvalue %struct.out.wrapperPsychoFilter_fxp %7, i64 %8, 4
  %10 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 5
  %11 = insertvalue %struct.out.wrapperPsychoFilter_fxp %9, i64 %10, 5
  %12 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 6
  %output = insertvalue %struct.out.wrapperPsychoFilter_fxp %11, i64 %12, 6
  ret %struct.out.wrapperPsychoFilter_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !61
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end58, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp2, label %if.then3, label %if.end58

if.then3:                                         ; preds = %if.then
  %4 = load float*, float** %channelpart1, align 8, !tbaa !43
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx4, align 4, !tbaa !50
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %6 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %7 = fmul float %5, %6
  %arrayidx5 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx5, align 8, !tbaa !43
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx6, align 4, !tbaa !50
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %10 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul7 = fmul float %9, %10
  %add = fsub float %mul7, %7
  %arrayidx8 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %11 = load float*, float** %arrayidx8, align 8, !tbaa !43
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx9, align 4, !tbaa !50
  %mul13 = fmul float %5, %10
  %mul17 = fmul float %6, %9
  %add18 = fadd float %mul17, %mul13
  store float %add, float* %arrayidx6, align 4, !tbaa !50
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul21 = fmul float %12, %13
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul22 = fmul float %add18, %14
  %add23 = fadd float %mul21, %mul22
  store float %add23, float* %arrayidx9, align 4, !tbaa !50
  %15 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul27 = fmul float %add18, %15
  %16 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul29 = fmul float %12, %16
  %add30 = fadd float %mul27, %mul29
  store float %add30, float* %arrayidx4, align 4, !tbaa !50
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %17 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %18 = fmul float %add30, %17
  %19 = load float, float* %arrayidx6, align 4, !tbaa !50
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %20 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul39 = fmul float %19, %20
  %add40 = fsub float %mul39, %18
  %21 = bitcast float* %arrayidx9 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !50
  %mul46 = fmul float %add30, %20
  %mul50 = fmul float %17, %19
  %add51 = fadd float %mul50, %mul46
  store float %add51, float* %arrayidx4, align 4, !tbaa !50
  store float %add40, float* %arrayidx6, align 4, !tbaa !50
  store i32 %22, i32* %21, align 4, !tbaa !50
  br label %if.end58

if.end58:                                         ; preds = %if.then3, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %0 = extractvalue %struct.out.rotateOrder1_fxp %rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder1_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder1_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !61
  %cmp = icmp ugt i32 %3, 1
  br i1 %cmp, label %if.then, label %if.end154

if.then:                                          ; preds = %entry
  %cmp3 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp3, label %if.then4, label %if.end154

if.then4:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %4 = load float*, float** %arrayidx, align 8, !tbaa !43
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx5, align 4, !tbaa !50
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %6 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %7 = fmul float %5, %6
  %arrayidx6 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %8 = load float*, float** %arrayidx6, align 8, !tbaa !43
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx7, align 4, !tbaa !50
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %10 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul8 = fmul float %9, %10
  %add = fsub float %mul8, %7
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !43
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx10, align 4, !tbaa !50
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %13 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %14 = fmul float %12, %13
  %arrayidx13 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %15 = load float*, float** %arrayidx13, align 8, !tbaa !43
  %arrayidx14 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx14, align 4, !tbaa !50
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %17 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul15 = fmul float %16, %17
  %add16 = fsub float %mul15, %14
  %18 = load float*, float** %channelpart2, align 8, !tbaa !43
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx18, align 4, !tbaa !50
  %mul22 = fmul float %12, %17
  %mul26 = fmul float %13, %16
  %add27 = fadd float %mul26, %mul22
  %mul31 = fmul float %5, %10
  %mul35 = fmul float %6, %9
  %add36 = fadd float %mul35, %mul31
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %20 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %21 = fmul float %add16, %20
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %22 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul39 = fmul float %add, %22
  %add40 = fsub float %mul39, %21
  store float %add40, float* %arrayidx7, align 4, !tbaa !50
  %23 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %24 = fmul float %add16, %23
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul47 = fmul float %add, %25
  %add48 = fsub float %mul47, %24
  store float %add48, float* %arrayidx14, align 4, !tbaa !50
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %26 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul51 = fmul float %26, 7.500000e-01
  %add52 = fadd float %mul51, 2.500000e-01
  %mul53 = fmul float %19, %add52
  %conv = fpext float %mul53 to double
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %conv.i = fpext float %27 to double
  %square = fmul double %conv.i, %conv.i
  %mul58 = fmul double %square, 0x3FEBB67AE0000000
  %conv59 = fpext float %add36 to double
  %mul60 = fmul double %mul58, %conv59
  %add61 = fadd double %mul60, %conv
  %mul63 = fmul float %27, 0x3FFBB67AE0000000
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul65 = fmul float %mul63, %28
  %mul66 = fmul float %add27, %mul65
  %conv67 = fpext float %mul66 to double
  %add68 = fadd double %add61, %conv67
  %conv69 = fptrunc double %add68 to float
  store float %conv69, float* %arrayidx18, align 4, !tbaa !50
  %29 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul73 = fmul float %add27, %29
  %30 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul75 = fmul float %30, 0x3FFBB67AE0000000
  %31 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul77 = fmul float %mul75, %31
  %mul78 = fmul float %19, %mul77
  %sub79 = fsub float %mul73, %mul78
  %mul82 = fmul float %30, %31
  %mul83 = fmul float %add36, %mul82
  %add84 = fadd float %mul83, %sub79
  store float %add84, float* %arrayidx10, align 4, !tbaa !50
  %32 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul88 = fmul float %32, 2.500000e-01
  %add89 = fadd float %mul88, 7.500000e-01
  %mul90 = fmul float %add36, %add89
  %33 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %34 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul93 = fmul float %33, %34
  %mul94 = fmul float %add27, %mul93
  %sub95 = fsub float %mul90, %mul94
  %conv96 = fpext float %sub95 to double
  %conv.i271 = fpext float %34 to double
  %square273 = fmul double %conv.i271, %conv.i271
  %mul101 = fmul double %square273, 0x3FEBB67AE0000000
  %conv102 = fpext float %19 to double
  %mul103 = fmul double %mul101, %conv102
  %add104 = fadd double %mul103, %conv96
  %conv105 = fptrunc double %add104 to float
  %35 = load float*, float** %arrayidx, align 8, !tbaa !43
  %arrayidx107 = getelementptr inbounds float, float* %35, i64 %idx_x
  store float %conv105, float* %arrayidx107, align 4, !tbaa !50
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %36 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %37 = fmul float %36, %conv105
  %38 = load float*, float** %arrayidx6, align 8, !tbaa !43
  %arrayidx113 = getelementptr inbounds float, float* %38, i64 %idx_x
  %39 = load float, float* %arrayidx113, align 4, !tbaa !50
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %40 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul114 = fmul float %39, %40
  %add115 = fsub float %mul114, %37
  %41 = load float*, float** %arrayidx9, align 8, !tbaa !43
  %arrayidx117 = getelementptr inbounds float, float* %41, i64 %idx_x
  %42 = load float, float* %arrayidx117, align 4, !tbaa !50
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %43 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %44 = fmul float %42, %43
  %45 = load float, float* %arrayidx14, align 4, !tbaa !50
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %46 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul122 = fmul float %45, %46
  %add123 = fsub float %mul122, %44
  %mul129 = fmul float %42, %46
  %mul133 = fmul float %43, %45
  %add134 = fadd float %mul133, %mul129
  %mul138 = fmul float %40, %conv105
  %mul142 = fmul float %36, %39
  %add143 = fadd float %mul142, %mul138
  store float %add134, float* %arrayidx117, align 4, !tbaa !50
  store float %add123, float* %arrayidx14, align 4, !tbaa !50
  store float %add143, float* %arrayidx107, align 4, !tbaa !50
  store float %add115, float* %arrayidx113, align 4, !tbaa !50
  br label %if.end154

if.end154:                                        ; preds = %if.then4, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %0 = extractvalue %struct.out.rotateOrder2_fxp %rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder2_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder2_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !61
  %cmp = icmp ugt i32 %3, 2
  br i1 %cmp, label %if.then, label %if.end315

if.then:                                          ; preds = %entry
  %cmp5 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp5, label %if.then6, label %if.end315

if.then6:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %4 = load float*, float** %arrayidx, align 8, !tbaa !43
  %arrayidx7 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx7, align 4, !tbaa !50
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %6 = load float, float* %m_fSin3Alpha, align 4, !tbaa !220
  %7 = fmul float %5, %6
  %8 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx9, align 4, !tbaa !50
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %10 = load float, float* %m_fCos3Alpha, align 8, !tbaa !219
  %mul10 = fmul float %9, %10
  %add = fsub float %mul10, %7
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %11 = load float*, float** %arrayidx11, align 8, !tbaa !43
  %arrayidx12 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx12, align 4, !tbaa !50
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !214
  %14 = fmul float %12, %13
  %arrayidx15 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %15 = load float*, float** %arrayidx15, align 8, !tbaa !43
  %arrayidx16 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx16, align 4, !tbaa !50
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %17 = load float, float* %m_fCos2Alpha, align 8, !tbaa !213
  %mul17 = fmul float %16, %17
  %add18 = fsub float %mul17, %14
  %arrayidx19 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %18 = load float*, float** %arrayidx19, align 8, !tbaa !43
  %arrayidx20 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx20, align 4, !tbaa !50
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %20 = load float, float* %m_fSinAlpha, align 4, !tbaa !206
  %21 = fmul float %19, %20
  %arrayidx23 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %22 = load float*, float** %arrayidx23, align 8, !tbaa !43
  %arrayidx24 = getelementptr inbounds float, float* %22, i64 %idx_x
  %23 = load float, float* %arrayidx24, align 4, !tbaa !50
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %24 = load float, float* %m_fCosAlpha, align 8, !tbaa !205
  %mul25 = fmul float %23, %24
  %add26 = fsub float %mul25, %21
  %arrayidx27 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %25 = load float*, float** %arrayidx27, align 8, !tbaa !43
  %arrayidx28 = getelementptr inbounds float, float* %25, i64 %idx_x
  %26 = load float, float* %arrayidx28, align 4, !tbaa !50
  %mul32 = fmul float %19, %24
  %mul36 = fmul float %20, %23
  %add37 = fadd float %mul36, %mul32
  %mul41 = fmul float %12, %17
  %mul45 = fmul float %13, %16
  %add46 = fadd float %mul45, %mul41
  %mul50 = fmul float %5, %10
  %mul54 = fmul float %6, %9
  %add55 = fadd float %mul54, %mul50
  %mul56 = fmul float %add, 1.250000e-01
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul57 = fmul float %27, 3.000000e+00
  %add58 = fadd float %mul57, 5.000000e+00
  %mul59 = fmul float %mul56, %add58
  %mul60 = fmul float %add18, 0x3FF3988E20000000
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul61 = fmul float %mul60, %28
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul62 = fmul float %mul61, %29
  %sub63 = fsub float %mul59, %mul62
  %mul65 = fmul float %add26, 0x3FEEFBDEC0000000
  %square = fmul float %29, %29
  %mul68 = fmul float %mul65, %square
  %add69 = fadd float %sub63, %mul68
  store float %add69, float* %arrayidx9, align 4, !tbaa !50
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul73 = fmul float %add18, %30
  %mul74 = fmul float %add26, 0x3FF94C5840000000
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul76 = fmul float %mul74, %31
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul78 = fmul float %mul76, %32
  %sub79 = fsub float %mul73, %mul78
  %mul80 = fmul float %add, 0x3FF3988E20000000
  %mul82 = fmul float %mul80, %31
  %mul84 = fmul float %mul82, %32
  %add85 = fadd float %mul84, %sub79
  store float %add85, float* %arrayidx16, align 4, !tbaa !50
  %mul88 = fmul float %add26, 1.250000e-01
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul90 = fmul float %33, 5.000000e+00
  %add91 = fadd float %mul90, 3.000000e+00
  %mul92 = fmul float %mul88, %add91
  %mul93 = fmul float %add18, 0x3FF94C5840000000
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul95 = fmul float %mul93, %34
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul97 = fmul float %mul95, %35
  %sub98 = fsub float %mul92, %mul97
  %mul100 = fmul float %add, 0x3FEEFBDEC0000000
  %square529 = fmul float %35, %35
  %mul103 = fmul float %mul100, %square529
  %add104 = fadd float %sub98, %mul103
  store float %add104, float* %arrayidx24, align 4, !tbaa !50
  store float %add104, float* %arrayidx9, align 4, !tbaa !50
  %mul109 = fmul float %26, 2.500000e-01
  %36 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul111 = fmul float %mul109, %36
  %37 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul113 = fmul float %37, 1.500000e+01
  %add114 = fadd float %mul113, -1.000000e+00
  %mul115 = fmul float %mul111, %add114
  %mul117 = fmul float %add46, 0x3FFEFBDEC0000000
  %mul119 = fmul float %mul117, %36
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %square530 = fmul float %38, %38
  %mul122 = fmul float %mul119, %square530
  %add123 = fadd float %mul115, %mul122
  %mul125 = fmul float %add55, 0x3FE94C5840000000
  %call.i524 = tail call float @powf(float %38, float 3.000000e+00) #24
  %mul128 = fmul float %mul125, %call.i524
  %add129 = fadd float %mul128, %add123
  %mul131 = fmul float %add37, 0x3FC3988E20000000
  %39 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %40 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul133 = fmul float %40, 5.000000e+00
  %add134 = fadd float %39, %mul133
  %mul135 = fmul float %mul131, %add134
  %add136 = fadd float %add129, %mul135
  %41 = load float*, float** %arrayidx27, align 8, !tbaa !43
  %arrayidx138 = getelementptr inbounds float, float* %41, i64 %idx_x
  store float %add136, float* %arrayidx138, align 4, !tbaa !50
  %mul139 = fmul float %add37, 6.250000e-02
  %42 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %43 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %mul141 = fmul float %43, 1.500000e+01
  %add142 = fadd float %42, %mul141
  %mul143 = fmul float %mul139, %add142
  %mul145 = fmul float %add46, 0x3FD94C5840000000
  %44 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %mul147 = fmul float %44, 3.000000e+00
  %add148 = fadd float %mul147, 1.000000e+00
  %mul149 = fmul float %mul145, %add148
  %45 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul151 = fmul float %45, %mul149
  %add152 = fadd float %mul143, %mul151
  %mul154 = fmul float %add55, 0x3FEEFBDEC0000000
  %mul156 = fmul float %mul154, %42
  %square531 = fmul float %45, %45
  %mul159 = fmul float %mul156, %square531
  %add160 = fadd float %mul159, %add152
  %conv = fpext float %add160 to double
  %conv163 = fpext float %26 to double
  %mul164 = fmul double %conv163, 0x3FC3988E20000000
  %46 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul167 = fmul float %46, 5.000000e+00
  %add168 = fadd float %45, %mul167
  %conv169 = fpext float %add168 to double
  %mul170 = fmul double %mul164, %conv169
  %sub171 = fsub double %conv, %mul170
  %conv172 = fptrunc double %sub171 to float
  %47 = load float*, float** %arrayidx19, align 8, !tbaa !43
  %arrayidx174 = getelementptr inbounds float, float* %47, i64 %idx_x
  store float %conv172, float* %arrayidx174, align 4, !tbaa !50
  %mul175 = fmul float %add46, 1.250000e-01
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul177 = fmul float %48, 5.000000e+00
  %49 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %mul179 = fmul float %49, 3.000000e+00
  %add180 = fadd float %mul177, %mul179
  %mul181 = fmul float %mul175, %add180
  %mul183 = fmul float %add55, 0x3FD3988E20000000
  %50 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %add185 = fadd float %50, 3.000000e+00
  %mul186 = fmul float %mul183, %add185
  %51 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul188 = fmul float %51, %mul186
  %add189 = fadd float %mul181, %mul188
  %mul191 = fmul float %26, 0x3FFEFBDEC0000000
  %mul193 = fmul float %mul191, %48
  %square532 = fmul float %51, %51
  %mul196 = fmul float %mul193, %square532
  %add197 = fadd float %mul196, %add189
  %conv198 = fpext float %add197 to double
  %conv201 = fpext float %add37 to double
  %mul202 = fmul double %conv201, 0x3FC94C5840000000
  %52 = load float, float* %m_fSin3Beta, align 4, !tbaa !222
  %mul205 = fmul float %52, 3.000000e+00
  %sub206 = fsub float %51, %mul205
  %conv207 = fpext float %sub206 to double
  %mul208 = fmul double %mul202, %conv207
  %add209 = fadd double %mul208, %conv198
  %conv210 = fptrunc double %add209 to float
  %53 = load float*, float** %arrayidx11, align 8, !tbaa !43
  %arrayidx212 = getelementptr inbounds float, float* %53, i64 %idx_x
  store float %conv210, float* %arrayidx212, align 4, !tbaa !50
  %mul213 = fmul float %add55, 6.250000e-02
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !208
  %mul215 = fmul float %54, 1.500000e+01
  %55 = load float, float* %m_fCos3Beta, align 8, !tbaa !221
  %add217 = fadd float %mul215, %55
  %mul218 = fmul float %mul213, %add217
  %mul220 = fmul float %add46, 0x3FD3988E20000000
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !215
  %add222 = fadd float %56, 3.000000e+00
  %mul223 = fmul float %mul220, %add222
  %57 = load float, float* %m_fSinBeta, align 4, !tbaa !209
  %mul225 = fmul float %57, %mul223
  %sub226 = fsub float %mul218, %mul225
  %mul228 = fmul float %add37, 0x3FEEFBDEC0000000
  %mul230 = fmul float %mul228, %54
  %square533 = fmul float %57, %57
  %mul233 = fmul float %mul230, %square533
  %add234 = fadd float %mul233, %sub226
  %conv235 = fpext float %add234 to double
  %mul239 = fmul double %conv163, 0x3FE94C5840000000
  %call.i528 = tail call float @powf(float %57, float 3.000000e+00) #24
  %conv242 = fpext float %call.i528 to double
  %mul243 = fmul double %mul239, %conv242
  %sub244 = fsub double %conv235, %mul243
  %conv245 = fptrunc double %sub244 to float
  %58 = load float*, float** %arrayidx, align 8, !tbaa !43
  %arrayidx247 = getelementptr inbounds float, float* %58, i64 %idx_x
  store float %conv245, float* %arrayidx247, align 4, !tbaa !50
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %59 = load float, float* %m_fSin3Gamma, align 4, !tbaa !224
  %60 = fmul float %59, %conv245
  %61 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx253 = getelementptr inbounds float, float* %61, i64 %idx_x
  %62 = load float, float* %arrayidx253, align 4, !tbaa !50
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %63 = load float, float* %m_fCos3Gamma, align 8, !tbaa !223
  %mul254 = fmul float %62, %63
  %add255 = fsub float %mul254, %60
  %64 = load float*, float** %arrayidx11, align 8, !tbaa !43
  %arrayidx257 = getelementptr inbounds float, float* %64, i64 %idx_x
  %65 = load float, float* %arrayidx257, align 4, !tbaa !50
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %66 = load float, float* %m_fSin2Gamma, align 4, !tbaa !218
  %67 = fmul float %65, %66
  %68 = load float*, float** %arrayidx15, align 8, !tbaa !43
  %arrayidx261 = getelementptr inbounds float, float* %68, i64 %idx_x
  %69 = load float, float* %arrayidx261, align 4, !tbaa !50
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %70 = load float, float* %m_fCos2Gamma, align 8, !tbaa !217
  %mul262 = fmul float %69, %70
  %add263 = fsub float %mul262, %67
  %71 = load float*, float** %arrayidx19, align 8, !tbaa !43
  %arrayidx265 = getelementptr inbounds float, float* %71, i64 %idx_x
  %72 = load float, float* %arrayidx265, align 4, !tbaa !50
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %73 = load float, float* %m_fSinGamma, align 4, !tbaa !212
  %74 = fmul float %72, %73
  %75 = load float*, float** %arrayidx23, align 8, !tbaa !43
  %arrayidx269 = getelementptr inbounds float, float* %75, i64 %idx_x
  %76 = load float, float* %arrayidx269, align 4, !tbaa !50
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %77 = load float, float* %m_fCosGamma, align 8, !tbaa !211
  %mul270 = fmul float %76, %77
  %add271 = fsub float %mul270, %74
  %78 = load float*, float** %arrayidx27, align 8, !tbaa !43
  %arrayidx273 = getelementptr inbounds float, float* %78, i64 %idx_x
  %79 = bitcast float* %arrayidx273 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !50
  %mul277 = fmul float %72, %77
  %mul281 = fmul float %73, %76
  %add282 = fadd float %mul281, %mul277
  %mul286 = fmul float %65, %70
  %mul290 = fmul float %66, %69
  %add291 = fadd float %mul290, %mul286
  %mul295 = fmul float %63, %conv245
  %mul299 = fmul float %59, %62
  %add300 = fadd float %mul299, %mul295
  store float %add255, float* %arrayidx253, align 4, !tbaa !50
  store float %add263, float* %arrayidx261, align 4, !tbaa !50
  store float %add271, float* %arrayidx269, align 4, !tbaa !50
  store i32 %80, i32* %79, align 4, !tbaa !50
  store float %add282, float* %arrayidx265, align 4, !tbaa !50
  store float %add291, float* %arrayidx257, align 4, !tbaa !50
  store float %add300, float* %arrayidx247, align 4, !tbaa !50
  br label %if.end315

if.end315:                                        ; preds = %if.then6, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %0 = extractvalue %struct.out.rotateOrder3_fxp %rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder3_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder3_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %cmp199 = icmp sgt i64 %nSample, 0
  br i1 %cmp199, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %channelpart1, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i.i196 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i196, align 8, !tbaa !43
  %arrayidx.i197 = getelementptr inbounds float*, float** %6, i64 3
  %7 = load float*, float** %arrayidx.i197, align 8, !tbaa !43
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx4, align 8, !tbaa !43
  %arrayidx.i195 = getelementptr inbounds float*, float** %6, i64 1
  %9 = load float*, float** %arrayidx.i195, align 8, !tbaa !43
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx11, align 8, !tbaa !43
  %arrayidx.i193 = getelementptr inbounds float*, float** %6, i64 2
  %11 = load float*, float** %arrayidx.i193, align 8, !tbaa !43
  %12 = load float*, float** %channelpart2, align 8, !tbaa !43
  %arrayidx.i191 = getelementptr inbounds float*, float** %6, i64 6
  %13 = load float*, float** %arrayidx.i191, align 8, !tbaa !43
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx25, align 8, !tbaa !43
  %arrayidx.i189 = getelementptr inbounds float*, float** %6, i64 7
  %15 = load float*, float** %arrayidx.i189, align 8, !tbaa !43
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx32, align 8, !tbaa !43
  %arrayidx.i187 = getelementptr inbounds float*, float** %6, i64 5
  %17 = load float*, float** %arrayidx.i187, align 8, !tbaa !43
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !43
  %arrayidx.i185 = getelementptr inbounds float*, float** %6, i64 8
  %19 = load float*, float** %arrayidx.i185, align 8, !tbaa !43
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx46, align 8, !tbaa !43
  %arrayidx.i183 = getelementptr inbounds float*, float** %6, i64 4
  %21 = load float*, float** %arrayidx.i183, align 8, !tbaa !43
  %22 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx.i181 = getelementptr inbounds float*, float** %6, i64 9
  %23 = load float*, float** %arrayidx.i181, align 8, !tbaa !43
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx60, align 8, !tbaa !43
  %arrayidx.i179 = getelementptr inbounds float*, float** %6, i64 10
  %25 = load float*, float** %arrayidx.i179, align 8, !tbaa !43
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx67, align 8, !tbaa !43
  %arrayidx.i177 = getelementptr inbounds float*, float** %6, i64 11
  %27 = load float*, float** %arrayidx.i177, align 8, !tbaa !43
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx74, align 8, !tbaa !43
  %arrayidx.i175 = getelementptr inbounds float*, float** %6, i64 12
  %29 = load float*, float** %arrayidx.i175, align 8, !tbaa !43
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx81, align 8, !tbaa !43
  %arrayidx.i173 = getelementptr inbounds float*, float** %6, i64 13
  %31 = load float*, float** %arrayidx.i173, align 8, !tbaa !43
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx88, align 8, !tbaa !43
  %arrayidx.i171 = getelementptr inbounds float*, float** %6, i64 14
  %33 = load float*, float** %arrayidx.i171, align 8, !tbaa !43
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx95, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %6, i64 15
  %35 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %conv102 = trunc i64 %nSample to i32
  %cmp103.i = icmp eq i32 %conv102, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.cleanup
  %36 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 8, !tbaa !65
  %cmp397.i = icmp eq i32 %37, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = and i64 %nSample, 4294967295
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95.i, align 8, !tbaa !43
  %38 = zext i32 %37 to i64
  %39 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93.i, align 8, !tbaa !43
  %40 = add nsw i64 %38, -1
  %xtraiter = and i64 %38, 3
  %41 = icmp ult i64 %40, 3
  %unroll_iter = sub nsw i64 %38, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %41, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv108.i
  %42 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !50
  %43 = tail call float @llvm.fabs.f32(float %42) #24
  %conv17.us.i = fpext float %43 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %44 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !43
  %arrayidx45.us.i = getelementptr inbounds float, float* %44, i64 %indvars.iv110.i
  %45 = load float, float* %arrayidx45.us.i, align 4, !tbaa !50
  %46 = load float, float* %m_fZoomRed.i, align 4, !tbaa !279
  %mul46.us.i = fmul float %45, %46
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !50
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %47 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !286
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %48 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !43
  %arrayidx23.us.i = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx23.us.i, align 4, !tbaa !50
  %mul24.us.i = fmul float %47, %49
  %50 = load float, float* %m_fZoom.i, align 8, !tbaa !285
  %mul28.us.i = fmul float %42, %50
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %51 = tail call float @llvm.fabs.f32(float %50) #24
  %52 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !284
  %mul34.us.i = fmul float %51, %52
  %add35.us.i = fadd float %47, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !50
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %38
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %53 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !50
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %54 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !43
  %arrayidx.us.i = getelementptr inbounds float, float* %54, i64 %indvars.iv110.i
  %55 = load float, float* %arrayidx.us.i, align 4, !tbaa !50
  %mul.us.i = fmul float %53, %55
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %56 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !50
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %57 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !43
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %57, i64 %indvars.iv110.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !50
  %mul.us.i.1 = fmul float %56, %58
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %59 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !50
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %60 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !43
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %60, i64 %indvars.iv110.i
  %61 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !50
  %mul.us.i.2 = fmul float %59, %61
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !50
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %63 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !43
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %63, i64 %indvars.iv110.i
  %64 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !50
  %mul.us.i.3 = fmul float %62, %64
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %65 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !50
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %66 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !43
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %66, i64 %indvars.iv110.i
  %67 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !50
  %mul.us.i.epil = fmul float %65, %67
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !498

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct1 = insertvalue %struct.out.zoomProcess_fxp %returnStruct, i64 %bytes_sumBF, 1
  ret %struct.out.zoomProcess_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv201 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %i.0200 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 %conv201
  %68 = bitcast float* %arrayidx1 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !50
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 %conv201
  %70 = bitcast float* %arrayidx3 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !50
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %conv201
  %71 = bitcast float* %arrayidx6 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !50
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %conv201
  %73 = bitcast float* %arrayidx10 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !50
  %arrayidx13 = getelementptr inbounds float, float* %10, i64 %conv201
  %74 = bitcast float* %arrayidx13 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !50
  %arrayidx17 = getelementptr inbounds float, float* %11, i64 %conv201
  %76 = bitcast float* %arrayidx17 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !50
  %arrayidx20 = getelementptr inbounds float, float* %12, i64 %conv201
  %77 = bitcast float* %arrayidx20 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !50
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %conv201
  %79 = bitcast float* %arrayidx24 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !50
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 %conv201
  %80 = bitcast float* %arrayidx27 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !50
  %arrayidx31 = getelementptr inbounds float, float* %15, i64 %conv201
  %82 = bitcast float* %arrayidx31 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !50
  %arrayidx34 = getelementptr inbounds float, float* %16, i64 %conv201
  %83 = bitcast float* %arrayidx34 to i32*
  %84 = load i32, i32* %83, align 4, !tbaa !50
  %arrayidx38 = getelementptr inbounds float, float* %17, i64 %conv201
  %85 = bitcast float* %arrayidx38 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !50
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 %conv201
  %86 = bitcast float* %arrayidx41 to i32*
  %87 = load i32, i32* %86, align 4, !tbaa !50
  %arrayidx45 = getelementptr inbounds float, float* %19, i64 %conv201
  %88 = bitcast float* %arrayidx45 to i32*
  store i32 %87, i32* %88, align 4, !tbaa !50
  %arrayidx48 = getelementptr inbounds float, float* %20, i64 %conv201
  %89 = bitcast float* %arrayidx48 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !50
  %arrayidx52 = getelementptr inbounds float, float* %21, i64 %conv201
  %91 = bitcast float* %arrayidx52 to i32*
  store i32 %90, i32* %91, align 4, !tbaa !50
  %arrayidx55 = getelementptr inbounds float, float* %22, i64 %conv201
  %92 = bitcast float* %arrayidx55 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !50
  %arrayidx59 = getelementptr inbounds float, float* %23, i64 %conv201
  %94 = bitcast float* %arrayidx59 to i32*
  store i32 %93, i32* %94, align 4, !tbaa !50
  %arrayidx62 = getelementptr inbounds float, float* %24, i64 %conv201
  %95 = bitcast float* %arrayidx62 to i32*
  %96 = load i32, i32* %95, align 4, !tbaa !50
  %arrayidx66 = getelementptr inbounds float, float* %25, i64 %conv201
  %97 = bitcast float* %arrayidx66 to i32*
  store i32 %96, i32* %97, align 4, !tbaa !50
  %arrayidx69 = getelementptr inbounds float, float* %26, i64 %conv201
  %98 = bitcast float* %arrayidx69 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !50
  %arrayidx73 = getelementptr inbounds float, float* %27, i64 %conv201
  %100 = bitcast float* %arrayidx73 to i32*
  store i32 %99, i32* %100, align 4, !tbaa !50
  %arrayidx76 = getelementptr inbounds float, float* %28, i64 %conv201
  %101 = bitcast float* %arrayidx76 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !50
  %arrayidx80 = getelementptr inbounds float, float* %29, i64 %conv201
  %103 = bitcast float* %arrayidx80 to i32*
  store i32 %102, i32* %103, align 4, !tbaa !50
  %arrayidx83 = getelementptr inbounds float, float* %30, i64 %conv201
  %104 = bitcast float* %arrayidx83 to i32*
  %105 = load i32, i32* %104, align 4, !tbaa !50
  %arrayidx87 = getelementptr inbounds float, float* %31, i64 %conv201
  %106 = bitcast float* %arrayidx87 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !50
  %arrayidx90 = getelementptr inbounds float, float* %32, i64 %conv201
  %107 = bitcast float* %arrayidx90 to i32*
  %108 = load i32, i32* %107, align 4, !tbaa !50
  %arrayidx94 = getelementptr inbounds float, float* %33, i64 %conv201
  %109 = bitcast float* %arrayidx94 to i32*
  store i32 %108, i32* %109, align 4, !tbaa !50
  %arrayidx97 = getelementptr inbounds float, float* %34, i64 %conv201
  %110 = bitcast float* %arrayidx97 to i32*
  %111 = load i32, i32* %110, align 4, !tbaa !50
  %arrayidx101 = getelementptr inbounds float, float* %35, i64 %conv201
  %112 = bitcast float* %arrayidx101 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !50
  %inc = add i32 %i.0200, 1
  %conv = zext i32 %inc to i64
  %cmp = icmp slt i64 %conv, %nSample
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = insertvalue %struct.out.wrapperZoomProcess_fxp undef, i64 %0, 0
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %output = insertvalue %struct.out.wrapperZoomProcess_fxp %1, i64 %2, 1
  ret %struct.out.wrapperZoomProcess_fxp %output
}

; Function Attrs: uwtable
define %struct.out.setAndFFT_left_fxp @setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !76
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !65
  %cmp54 = icmp eq i32 %6, 0
  br i1 %cmp54, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i46 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %_M_start.i51 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %7, i64 %indvars.iv, i32 0, i32 0, i32 0
  %8 = bitcast float** %_M_start.i51 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !76
  %10 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %10, i64 %indvars.iv
  %11 = bitcast float** %arrayidx.i to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !43
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv6 = zext i32 %13 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %12, i64 %mul7, i1 false)
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %15 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv12 = zext i32 %15 to i64
  %_M_start.i47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %14, i64 %indvars.iv, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i47, align 8, !tbaa !76
  %add.ptr.i48 = getelementptr inbounds float, float* %16, i64 %conv12
  %17 = bitcast float* %add.ptr.i48 to i8*
  %18 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %sub = sub i32 %18, %15
  %conv16 = zext i32 %sub to i64
  %mul17 = shl nuw nsw i64 %conv16, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %mul17, i1 false)
  %19 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i46, align 8, !tbaa !43
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %_M_start.i44 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %20, i64 %indvars.iv, i32 0, i32 0, i32 0
  %21 = load float*, float** %_M_start.i44, align 8, !tbaa !76
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %19, float* %21, %struct.kiss_fft_cpx* %22)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load i32, i32* %5, align 8, !tbaa !65
  %24 = zext i32 %23 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperSetAndFFT_left_fxp @wrapperSetAndFFT_left_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_left_fxp @setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.setAndFFT_left_fxp %setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperSetAndFFT_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperSetAndFFT_left_fxp %output
}

; Function Attrs: uwtable
define %struct.out.setAndFFT_right_fxp @setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !76
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !65
  %cmp54 = icmp eq i32 %6, 0
  br i1 %cmp54, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i46 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %_M_start.i51 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %7, i64 %indvars.iv, i32 0, i32 0, i32 0
  %8 = bitcast float** %_M_start.i51 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !76
  %10 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %10, i64 %indvars.iv
  %11 = bitcast float** %arrayidx.i to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !43
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv6 = zext i32 %13 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %12, i64 %mul7, i1 false)
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %15 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv12 = zext i32 %15 to i64
  %_M_start.i47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %14, i64 %indvars.iv, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i47, align 8, !tbaa !76
  %add.ptr.i48 = getelementptr inbounds float, float* %16, i64 %conv12
  %17 = bitcast float* %add.ptr.i48 to i8*
  %18 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %sub = sub i32 %18, %15
  %conv16 = zext i32 %sub to i64
  %mul17 = shl nuw nsw i64 %conv16, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %mul17, i1 false)
  %19 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i46, align 8, !tbaa !43
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i52, align 8, !tbaa !357
  %_M_start.i44 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %20, i64 %indvars.iv, i32 0, i32 0, i32 0
  %21 = load float*, float** %_M_start.i44, align 8, !tbaa !76
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %19, float* %21, %struct.kiss_fft_cpx* %22)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load i32, i32* %5, align 8, !tbaa !65
  %24 = zext i32 %23 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperSetAndFFT_right_fxp @wrapperSetAndFFT_right_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_right_fxp @setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.setAndFFT_right_fxp %setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperSetAndFFT_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperSetAndFFT_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %1 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %2 = zext i32 %1 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %2, align 16
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !65
  %cmp116 = icmp eq i32 %4, 0
  br i1 %cmp116, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i112 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup4, %for.cond1.preheader.lr.ph
  %5 = phi i32 [ %4, %for.cond1.preheader.lr.ph ], [ %7, %for.cond.cleanup4 ]
  %6 = phi i32 [ %1, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup4 ]
  %indvars.iv119 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next120, %for.cond.cleanup4 ]
  %cmp3114 = icmp eq i32 %6, 0
  br i1 %cmp3114, label %for.cond.cleanup4, label %for.body5

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4, %entry
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct

for.cond.cleanup4.loopexit:                       ; preds = %for.body5
  %.pre = load i32, i32* %3, align 8, !tbaa !65
  br label %for.cond.cleanup4

for.cond.cleanup4:                                ; preds = %for.cond.cleanup4.loopexit, %for.cond1.preheader
  %7 = phi i32 [ %.pre, %for.cond.cleanup4.loopexit ], [ %5, %for.cond1.preheader ]
  %8 = phi i32 [ %20, %for.cond.cleanup4.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %9 = zext i32 %7 to i64
  %cmp = icmp ult i64 %indvars.iv.next120, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body5:                                        ; preds = %for.body5, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ 0, %for.cond1.preheader ]
  %10 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i, i64 0, i32 0
  %11 = load float, float* %r, align 4, !tbaa !232
  %12 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i112, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i.i110 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %12, i64 %indvars.iv119, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i110, align 8, !tbaa !43
  %r10 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 0
  %14 = load float, float* %r10, align 4, !tbaa !232
  %mul = fmul float %11, %14
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv, i32 1
  %15 = load float, float* %i, align 4, !tbaa !234
  %i20 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 1
  %16 = load float, float* %i20, align 4, !tbaa !234
  %mul21 = fmul float %15, %16
  %sub = fsub float %mul, %mul21
  %arrayidx22 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r23 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx22, i64 0, i32 0
  store float %sub, float* %r23, align 8, !tbaa !232
  %mul35 = fmul float %11, %16
  %mul47 = fmul float %14, %15
  %add = fadd float %mul47, %mul35
  %i50 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i50, align 4, !tbaa !234
  %17 = bitcast %struct.kiss_fft_cpx* %arrayidx22 to i64*
  %18 = bitcast %struct.kiss_fft_cpx* %arrayidx.i to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %21 = zext i32 %20 to i64
  %cmp3 = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp3, label %for.body5, label %for.cond.cleanup4.loopexit
}

define %struct.out.wrapperFIR_left_fxp @wrapperFIR_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperFIR_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperFIR_left_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %1 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %2 = zext i32 %1 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %2, align 16
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !65
  %cmp116 = icmp eq i32 %4, 0
  br i1 %cmp116, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i112 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup4, %for.cond1.preheader.lr.ph
  %5 = phi i32 [ %4, %for.cond1.preheader.lr.ph ], [ %7, %for.cond.cleanup4 ]
  %6 = phi i32 [ %1, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup4 ]
  %indvars.iv119 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next120, %for.cond.cleanup4 ]
  %cmp3114 = icmp eq i32 %6, 0
  br i1 %cmp3114, label %for.cond.cleanup4, label %for.body5

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4, %entry
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct

for.cond.cleanup4.loopexit:                       ; preds = %for.body5
  %.pre = load i32, i32* %3, align 8, !tbaa !65
  br label %for.cond.cleanup4

for.cond.cleanup4:                                ; preds = %for.cond.cleanup4.loopexit, %for.cond1.preheader
  %7 = phi i32 [ %.pre, %for.cond.cleanup4.loopexit ], [ %5, %for.cond1.preheader ]
  %8 = phi i32 [ %20, %for.cond.cleanup4.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %9 = zext i32 %7 to i64
  %cmp = icmp ult i64 %indvars.iv.next120, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body5:                                        ; preds = %for.body5, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ 0, %for.cond1.preheader ]
  %10 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i, i64 0, i32 0
  %11 = load float, float* %r, align 4, !tbaa !232
  %12 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i112, align 8, !tbaa !346
  %_M_head_impl.i.i.i.i.i.i.i110 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %12, i64 %indvars.iv119, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i110, align 8, !tbaa !43
  %r10 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 0
  %14 = load float, float* %r10, align 4, !tbaa !232
  %mul = fmul float %11, %14
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv, i32 1
  %15 = load float, float* %i, align 4, !tbaa !234
  %i20 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 1
  %16 = load float, float* %i20, align 4, !tbaa !234
  %mul21 = fmul float %15, %16
  %sub = fsub float %mul, %mul21
  %arrayidx22 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r23 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx22, i64 0, i32 0
  store float %sub, float* %r23, align 8, !tbaa !232
  %mul35 = fmul float %11, %16
  %mul47 = fmul float %14, %15
  %add = fadd float %mul47, %mul35
  %i50 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i50, align 4, !tbaa !234
  %17 = bitcast %struct.kiss_fft_cpx* %arrayidx22 to i64*
  %18 = bitcast %struct.kiss_fft_cpx* %arrayidx.i to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !311
  %21 = zext i32 %20 to i64
  %cmp3 = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp3, label %for.body5, label %for.cond.cleanup4.loopexit
}

define %struct.out.wrapperFIR_right_fxp @wrapperFIR_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperFIR_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperFIR_right_fxp %output
}

; Function Attrs: uwtable
define %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !65
  %cmp44 = icmp eq i32 %2, 0
  br i1 %cmp44, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i41 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup6, %entry
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup6, %for.body.lr.ph
  %indvars.iv46 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next47, %for.cond.cleanup6 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i41, align 8, !tbaa !43
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i39, align 8, !tbaa !357
  %_M_start.i38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 %indvars.iv46, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i38, align 8, !tbaa !76
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %6)
  %7 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %cmp542 = icmp eq i32 %7, 0
  br i1 %cmp542, label %for.cond.cleanup6, label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.body
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i39, align 8, !tbaa !357
  %_M_start.i34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 %indvars.iv46, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i34, align 8, !tbaa !76
  %10 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %11 = zext i32 %7 to i64
  %min.iters.check = icmp ult i32 %7, 8
  br i1 %min.iters.check, label %for.body7.preheader, label %vector.memcheck

for.body7.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body7.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body7.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body7

vector.memcheck:                                  ; preds = %for.body7.lr.ph
  %scevgep = getelementptr float, float* %10, i64 %11
  %scevgep49 = getelementptr float, float* %9, i64 %11
  %bound0 = icmp ult float* %10, %scevgep49
  %bound1 = icmp ult float* %9, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body7.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %11, 4294967288
  %12 = add nsw i64 %n.vec, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %xtraiter = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %14, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %16 = getelementptr inbounds float, float* %9, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %17, align 4, !tbaa !50, !alias.scope !499
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load52 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !50, !alias.scope !499
  %20 = getelementptr inbounds float, float* %10, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load53 = load <4 x float>, <4 x float>* %21, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load54 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %24 = fadd <4 x float> %wide.load, %wide.load53
  %25 = fadd <4 x float> %wide.load52, %wide.load54
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %9, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !499
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load52.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !499
  %32 = getelementptr inbounds float, float* %10, i64 %index.next
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load53.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %34 = getelementptr inbounds float, float* %32, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load54.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %36 = fadd <4 x float> %wide.load.1, %wide.load53.1
  %37 = fadd <4 x float> %wide.load52.1, %wide.load54.1
  %38 = bitcast float* %32 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %39 = bitcast float* %34 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !504

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %40 = getelementptr inbounds float, float* %9, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !50, !alias.scope !499
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load52.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !499
  %44 = getelementptr inbounds float, float* %10, i64 %index.unr
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load53.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load54.epil = load <4 x float>, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %48 = fadd <4 x float> %wide.load.epil, %wide.load53.epil
  %49 = fadd <4 x float> %wide.load52.epil, %wide.load54.epil
  %50 = bitcast float* %44 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  %51 = bitcast float* %46 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !50, !alias.scope !502, !noalias !499
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %11
  br i1 %cmp.n, label %for.cond.cleanup6, label %for.body7.preheader

for.cond.cleanup6:                                ; preds = %for.body7, %middle.block, %for.body
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %52 = load i32, i32* %1, align 8, !tbaa !65
  %53 = zext i32 %52 to i64
  %cmp = icmp ult i64 %indvars.iv.next47, %53
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body7:                                        ; preds = %for.body7, %for.body7.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ %indvars.iv.ph, %for.body7.preheader ]
  %add.ptr.i35 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %54 = load float, float* %add.ptr.i35, align 4, !tbaa !50
  %add.ptr.i = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %55 = load float, float* %add.ptr.i, align 4, !tbaa !50
  %add = fadd float %54, %55
  store float %add, float* %add.ptr.i, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp5 = icmp ult i64 %indvars.iv.next, %11
  br i1 %cmp5, label %for.body7, label %for.cond.cleanup6, !llvm.loop !505
}

define %struct.out.wrapperIFFT_left_fxp @wrapperIFFT_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.IFFT_left_fxp %IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperIFFT_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperIFFT_left_fxp %output
}

; Function Attrs: uwtable
define %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !65
  %cmp44 = icmp eq i32 %2, 0
  br i1 %cmp44, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i41 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup6, %entry
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup6, %for.body.lr.ph
  %indvars.iv46 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next47, %for.cond.cleanup6 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i41, align 8, !tbaa !43
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i39, align 8, !tbaa !357
  %_M_start.i38 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i64 %indvars.iv46, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i38, align 8, !tbaa !76
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %6)
  %7 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %cmp542 = icmp eq i32 %7, 0
  br i1 %cmp542, label %for.cond.cleanup6, label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.body
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i39, align 8, !tbaa !357
  %_M_start.i34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %8, i64 %indvars.iv46, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i34, align 8, !tbaa !76
  %10 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %11 = zext i32 %7 to i64
  %min.iters.check = icmp ult i32 %7, 8
  br i1 %min.iters.check, label %for.body7.preheader, label %vector.memcheck

for.body7.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body7.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body7.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body7

vector.memcheck:                                  ; preds = %for.body7.lr.ph
  %scevgep = getelementptr float, float* %10, i64 %11
  %scevgep49 = getelementptr float, float* %9, i64 %11
  %bound0 = icmp ult float* %10, %scevgep49
  %bound1 = icmp ult float* %9, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body7.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %11, 4294967288
  %12 = add nsw i64 %n.vec, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %xtraiter = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %14, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %16 = getelementptr inbounds float, float* %9, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %17, align 4, !tbaa !50, !alias.scope !506
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load52 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !50, !alias.scope !506
  %20 = getelementptr inbounds float, float* %10, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load53 = load <4 x float>, <4 x float>* %21, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load54 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %24 = fadd <4 x float> %wide.load, %wide.load53
  %25 = fadd <4 x float> %wide.load52, %wide.load54
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %9, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !50, !alias.scope !506
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load52.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !50, !alias.scope !506
  %32 = getelementptr inbounds float, float* %10, i64 %index.next
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load53.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %34 = getelementptr inbounds float, float* %32, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load54.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %36 = fadd <4 x float> %wide.load.1, %wide.load53.1
  %37 = fadd <4 x float> %wide.load52.1, %wide.load54.1
  %38 = bitcast float* %32 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %39 = bitcast float* %34 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !511

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %40 = getelementptr inbounds float, float* %9, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !50, !alias.scope !506
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load52.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !506
  %44 = getelementptr inbounds float, float* %10, i64 %index.unr
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load53.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load54.epil = load <4 x float>, <4 x float>* %47, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %48 = fadd <4 x float> %wide.load.epil, %wide.load53.epil
  %49 = fadd <4 x float> %wide.load52.epil, %wide.load54.epil
  %50 = bitcast float* %44 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  %51 = bitcast float* %46 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !50, !alias.scope !509, !noalias !506
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %11
  br i1 %cmp.n, label %for.cond.cleanup6, label %for.body7.preheader

for.cond.cleanup6:                                ; preds = %for.body7, %middle.block, %for.body
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %52 = load i32, i32* %1, align 8, !tbaa !65
  %53 = zext i32 %52 to i64
  %cmp = icmp ult i64 %indvars.iv.next47, %53
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body7:                                        ; preds = %for.body7, %for.body7.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ %indvars.iv.ph, %for.body7.preheader ]
  %add.ptr.i35 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %54 = load float, float* %add.ptr.i35, align 4, !tbaa !50
  %add.ptr.i = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %55 = load float, float* %add.ptr.i, align 4, !tbaa !50
  %add = fadd float %54, %55
  store float %add, float* %add.ptr.i, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp5 = icmp ult i64 %indvars.iv.next, %11
  br i1 %cmp5, label %for.body7, label %for.cond.cleanup6, !llvm.loop !512
}

define %struct.out.wrapperIFFT_right_fxp @wrapperIFFT_right_fxp_cloned.26_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.IFFT_right_fxp %IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperIFFT_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperIFFT_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_left_fxp @overlap_left_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample0, i64 %bytes_resultSample0, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample0.i8ptr = bitcast float* %resultSample0 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample0.i8ptr, i64 %bytes_resultSample0)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = bitcast float* %resultSample0 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %cmp56 = icmp eq i32 %3, 0
  br i1 %cmp56, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !76
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load float*, float** %_M_start.i51, align 8, !tbaa !76
  %5 = bitcast float* %4 to i8*
  %6 = zext i32 %3 to i64
  %min.iters.check = icmp ult i32 %3, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv58.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %4, i64 %6
  %scevgep67 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6768 = bitcast float* %scevgep67 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6768, i64 1
  %bound0 = icmp ugt i8* %uglygep, %5
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %6, 4294967288
  %7 = add nsw i64 %n.vec, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %xtraiter100 = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter102 = sub nuw nsw i64 %9, %xtraiter100
  %11 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !513
  %12 = insertelement <4 x float> undef, float %11, i32 0
  %13 = shufflevector <4 x float> %12, <4 x float> undef, <4 x i32> zeroinitializer
  %14 = insertelement <4 x float> undef, float %11, i32 0
  %15 = shufflevector <4 x float> %14, <4 x float> undef, <4 x i32> zeroinitializer
  %16 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !513
  %17 = insertelement <4 x float> undef, float %16, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = insertelement <4 x float> undef, float %16, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter103 = phi i64 [ %unroll_iter102, %vector.ph.new ], [ %niter103.nsub.1, %vector.body ]
  %21 = getelementptr inbounds float, float* %4, i64 %index
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %22, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %23 = getelementptr inbounds float, float* %21, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %wide.load70 = load <4 x float>, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %25 = fmul <4 x float> %13, %wide.load
  %26 = fmul <4 x float> %15, %wide.load70
  %27 = bitcast float* %21 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %28 = bitcast float* %23 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %index.next = or i64 %index, 8
  %29 = getelementptr inbounds float, float* %4, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load70.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %33 = fmul <4 x float> %18, %wide.load.1
  %34 = fmul <4 x float> %20, %wide.load70.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %index.next.1 = add i64 %index, 16
  %niter103.nsub.1 = add i64 %niter103, -2
  %niter103.ncmp.1 = icmp eq i64 %niter103.nsub.1, 0
  br i1 %niter103.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !518

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod101 = icmp eq i64 %xtraiter100, 0
  br i1 %lcmp.mod101, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !513
  %38 = insertelement <4 x float> undef, float %37, i32 0
  %39 = shufflevector <4 x float> %38, <4 x float> undef, <4 x i32> zeroinitializer
  %40 = insertelement <4 x float> undef, float %37, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = getelementptr inbounds float, float* %4, i64 %index.unr
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %44 = getelementptr inbounds float, float* %42, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load70.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %46 = fmul <4 x float> %39, %wide.load.epil
  %47 = fmul <4 x float> %41, %wide.load70.epil
  %48 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  %49 = bitcast float* %44 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !516, !noalias !513
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %6
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %50 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %5, %middle.block ], [ %5, %for.body ]
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %51 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv3 = zext i32 %51 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %50, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %52 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %cmp753 = icmp eq i32 %52, 0
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp753, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph

for.cond.cleanup.for.cond.cleanup8_crit_edge:     ; preds = %for.cond.cleanup
  %.phi.trans.insert60 = bitcast %"class.std::vector.0"* %arrayidx to i8**
  %.pre61 = load i8*, i8** %.phi.trans.insert60, align 8, !tbaa !76
  br label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx, i64 0, i32 0, i32 0, i32 0
  %53 = load float*, float** %_M_start.i47, align 8, !tbaa !76
  %54 = bitcast float* %53 to i8*
  %55 = zext i32 %52 to i64
  %min.iters.check74 = icmp ult i32 %52, 8
  br i1 %min.iters.check74, label %for.body9.preheader, label %vector.memcheck84

for.body9.preheader:                              ; preds = %middle.block72, %vector.memcheck84, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck84 ], [ 0, %for.body9.lr.ph ], [ %n.vec87, %middle.block72 ]
  br label %for.body9

vector.memcheck84:                                ; preds = %for.body9.lr.ph
  %scevgep76 = getelementptr float, float* %resultSample0, i64 %55
  %scevgep78 = getelementptr float, float* %53, i64 %55
  %bound080 = icmp ugt float* %scevgep78, %resultSample0
  %bound181 = icmp ult float* %53, %scevgep76
  %found.conflict82 = and i1 %bound080, %bound181
  br i1 %found.conflict82, label %for.body9.preheader, label %vector.ph85

vector.ph85:                                      ; preds = %vector.memcheck84
  %n.vec87 = and i64 %55, 4294967288
  %56 = add nsw i64 %n.vec87, -8
  %57 = lshr exact i64 %56, 3
  %58 = add nuw nsw i64 %57, 1
  %xtraiter = and i64 %58, 1
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %middle.block72.unr-lcssa, label %vector.ph85.new

vector.ph85.new:                                  ; preds = %vector.ph85
  %unroll_iter = sub nuw nsw i64 %58, %xtraiter
  br label %vector.body71

vector.body71:                                    ; preds = %vector.body71, %vector.ph85.new
  %index88 = phi i64 [ 0, %vector.ph85.new ], [ %index.next89.1, %vector.body71 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph85.new ], [ %niter.nsub.1, %vector.body71 ]
  %60 = getelementptr inbounds float, float* %53, i64 %index88
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load96 = load <4 x float>, <4 x float>* %61, align 4, !tbaa !50, !alias.scope !519
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load97 = load <4 x float>, <4 x float>* %63, align 4, !tbaa !50, !alias.scope !519
  %64 = getelementptr inbounds float, float* %resultSample0, i64 %index88
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load98 = load <4 x float>, <4 x float>* %65, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %68 = fadd <4 x float> %wide.load96, %wide.load98
  %69 = fadd <4 x float> %wide.load97, %wide.load99
  %70 = bitcast float* %64 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %index.next89 = or i64 %index88, 8
  %72 = getelementptr inbounds float, float* %53, i64 %index.next89
  %73 = bitcast float* %72 to <4 x float>*
  %wide.load96.1 = load <4 x float>, <4 x float>* %73, align 4, !tbaa !50, !alias.scope !519
  %74 = getelementptr inbounds float, float* %72, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  %wide.load97.1 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !50, !alias.scope !519
  %76 = getelementptr inbounds float, float* %resultSample0, i64 %index.next89
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load98.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load99.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %80 = fadd <4 x float> %wide.load96.1, %wide.load98.1
  %81 = fadd <4 x float> %wide.load97.1, %wide.load99.1
  %82 = bitcast float* %76 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %83 = bitcast float* %78 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %index.next89.1 = add i64 %index88, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block72.unr-lcssa, label %vector.body71, !llvm.loop !524

middle.block72.unr-lcssa:                         ; preds = %vector.body71, %vector.ph85
  %index88.unr = phi i64 [ 0, %vector.ph85 ], [ %index.next89.1, %vector.body71 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block72, label %vector.body71.epil

vector.body71.epil:                               ; preds = %middle.block72.unr-lcssa
  %84 = getelementptr inbounds float, float* %53, i64 %index88.unr
  %85 = bitcast float* %84 to <4 x float>*
  %wide.load96.epil = load <4 x float>, <4 x float>* %85, align 4, !tbaa !50, !alias.scope !519
  %86 = getelementptr inbounds float, float* %84, i64 4
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load97.epil = load <4 x float>, <4 x float>* %87, align 4, !tbaa !50, !alias.scope !519
  %88 = getelementptr inbounds float, float* %resultSample0, i64 %index88.unr
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load98.epil = load <4 x float>, <4 x float>* %89, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %90 = getelementptr inbounds float, float* %88, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load99.epil = load <4 x float>, <4 x float>* %91, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %92 = fadd <4 x float> %wide.load96.epil, %wide.load98.epil
  %93 = fadd <4 x float> %wide.load97.epil, %wide.load99.epil
  %94 = bitcast float* %88 to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  %95 = bitcast float* %90 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !50, !alias.scope !522, !noalias !519
  br label %middle.block72

middle.block72:                                   ; preds = %vector.body71.epil, %middle.block72.unr-lcssa
  %cmp.n91 = icmp eq i64 %n.vec87, %55
  br i1 %cmp.n91, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv58 = phi i64 [ %indvars.iv.next59, %for.body ], [ %indvars.iv58.ph, %for.body.preheader ]
  %96 = load float, float* %m_fFFTScaler, align 8, !tbaa !312
  %add.ptr.i52 = getelementptr inbounds float, float* %4, i64 %indvars.iv58
  %97 = load float, float* %add.ptr.i52, align 4, !tbaa !50
  %mul = fmul float %96, %97
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !50
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1
  %cmp = icmp ult i64 %indvars.iv.next59, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !525

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block72
  %phitmp = zext i32 %52 to i64
  %phitmp65 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup.for.cond.cleanup8_crit_edge
  %98 = phi i8* [ %.pre61, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %54, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp65, %for.cond.cleanup8.loopexit ]
  %99 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv21 = zext i32 %99 to i64
  %100 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i49 = getelementptr inbounds float, float* %100, i64 %conv21
  %101 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* nonnull align 4 %101, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_left_fxp undef, i64 %bytes_resultSample0, 0
  ret %struct.out.overlap_left_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %53, i64 %indvars.iv
  %102 = load float, float* %add.ptr.i, align 4, !tbaa !50
  %arrayidx12 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv
  %103 = load float, float* %arrayidx12, align 4, !tbaa !50
  %add = fadd float %102, %103
  store float %add, float* %arrayidx12, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %55
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !526
}

define %struct.out.wrapperOverlap_left_fxp @wrapperOverlap_left_fxp_cloned.28_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_left_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.overlap_left_fxp @overlap_left_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.overlap_left_fxp %overlap_left_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperOverlap_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperOverlap_left_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_right_fxp @overlap_right_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample1, i64 %bytes_resultSample1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample1.i8ptr = bitcast float* %resultSample1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample1.i8ptr, i64 %bytes_resultSample1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = bitcast float* %resultSample1 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !310
  %cmp55 = icmp eq i32 %3, 0
  br i1 %cmp55, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !76
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load float*, float** %_M_start.i51, align 8, !tbaa !76
  %5 = bitcast float* %4 to i8*
  %6 = zext i32 %3 to i64
  %min.iters.check = icmp ult i32 %3, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv57.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %4, i64 %6
  %scevgep62 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6263 = bitcast float* %scevgep62 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6263, i64 1
  %bound0 = icmp ugt i8* %uglygep, %5
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %6, 4294967288
  %7 = add nsw i64 %n.vec, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %xtraiter95 = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter97 = sub nuw nsw i64 %9, %xtraiter95
  %11 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !527
  %12 = insertelement <4 x float> undef, float %11, i32 0
  %13 = shufflevector <4 x float> %12, <4 x float> undef, <4 x i32> zeroinitializer
  %14 = insertelement <4 x float> undef, float %11, i32 0
  %15 = shufflevector <4 x float> %14, <4 x float> undef, <4 x i32> zeroinitializer
  %16 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !527
  %17 = insertelement <4 x float> undef, float %16, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = insertelement <4 x float> undef, float %16, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter98 = phi i64 [ %unroll_iter97, %vector.ph.new ], [ %niter98.nsub.1, %vector.body ]
  %21 = getelementptr inbounds float, float* %4, i64 %index
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %22, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %23 = getelementptr inbounds float, float* %21, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  %wide.load65 = load <4 x float>, <4 x float>* %24, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %25 = fmul <4 x float> %13, %wide.load
  %26 = fmul <4 x float> %15, %wide.load65
  %27 = bitcast float* %21 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %28 = bitcast float* %23 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %index.next = or i64 %index, 8
  %29 = getelementptr inbounds float, float* %4, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load65.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %33 = fmul <4 x float> %18, %wide.load.1
  %34 = fmul <4 x float> %20, %wide.load65.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %index.next.1 = add i64 %index, 16
  %niter98.nsub.1 = add i64 %niter98, -2
  %niter98.ncmp.1 = icmp eq i64 %niter98.nsub.1, 0
  br i1 %niter98.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !532

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod96 = icmp eq i64 %xtraiter95, 0
  br i1 %lcmp.mod96, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = load float, float* %m_fFFTScaler, align 8, !tbaa !312, !alias.scope !527
  %38 = insertelement <4 x float> undef, float %37, i32 0
  %39 = shufflevector <4 x float> %38, <4 x float> undef, <4 x i32> zeroinitializer
  %40 = insertelement <4 x float> undef, float %37, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = getelementptr inbounds float, float* %4, i64 %index.unr
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %44 = getelementptr inbounds float, float* %42, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load65.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %46 = fmul <4 x float> %39, %wide.load.epil
  %47 = fmul <4 x float> %41, %wide.load65.epil
  %48 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  %49 = bitcast float* %44 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !50, !alias.scope !530, !noalias !527
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %6
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %50 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %5, %middle.block ], [ %5, %for.body ]
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %51 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv3 = zext i32 %51 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %50, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %52 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !309
  %cmp753 = icmp eq i32 %52, 0
  br i1 %cmp753, label %for.cond.cleanup8, label %for.body9.lr.ph

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %53 = load float*, float** %_M_start.i47, align 8, !tbaa !76
  %54 = zext i32 %52 to i64
  %min.iters.check69 = icmp ult i32 %52, 8
  br i1 %min.iters.check69, label %for.body9.preheader, label %vector.memcheck79

for.body9.preheader:                              ; preds = %middle.block67, %vector.memcheck79, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck79 ], [ 0, %for.body9.lr.ph ], [ %n.vec82, %middle.block67 ]
  br label %for.body9

vector.memcheck79:                                ; preds = %for.body9.lr.ph
  %scevgep71 = getelementptr float, float* %resultSample1, i64 %54
  %scevgep73 = getelementptr float, float* %53, i64 %54
  %bound075 = icmp ugt float* %scevgep73, %resultSample1
  %bound176 = icmp ult float* %53, %scevgep71
  %found.conflict77 = and i1 %bound075, %bound176
  br i1 %found.conflict77, label %for.body9.preheader, label %vector.ph80

vector.ph80:                                      ; preds = %vector.memcheck79
  %n.vec82 = and i64 %54, 4294967288
  %55 = add nsw i64 %n.vec82, -8
  %56 = lshr exact i64 %55, 3
  %57 = add nuw nsw i64 %56, 1
  %xtraiter = and i64 %57, 1
  %58 = icmp eq i64 %55, 0
  br i1 %58, label %middle.block67.unr-lcssa, label %vector.ph80.new

vector.ph80.new:                                  ; preds = %vector.ph80
  %unroll_iter = sub nuw nsw i64 %57, %xtraiter
  br label %vector.body66

vector.body66:                                    ; preds = %vector.body66, %vector.ph80.new
  %index83 = phi i64 [ 0, %vector.ph80.new ], [ %index.next84.1, %vector.body66 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph80.new ], [ %niter.nsub.1, %vector.body66 ]
  %59 = getelementptr inbounds float, float* %53, i64 %index83
  %60 = bitcast float* %59 to <4 x float>*
  %wide.load91 = load <4 x float>, <4 x float>* %60, align 4, !tbaa !50, !alias.scope !533
  %61 = getelementptr inbounds float, float* %59, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  %wide.load92 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !50, !alias.scope !533
  %63 = getelementptr inbounds float, float* %resultSample1, i64 %index83
  %64 = bitcast float* %63 to <4 x float>*
  %wide.load93 = load <4 x float>, <4 x float>* %64, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %65 = getelementptr inbounds float, float* %63, i64 4
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %67 = fadd <4 x float> %wide.load91, %wide.load93
  %68 = fadd <4 x float> %wide.load92, %wide.load94
  %69 = bitcast float* %63 to <4 x float>*
  store <4 x float> %67, <4 x float>* %69, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %70 = bitcast float* %65 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %index.next84 = or i64 %index83, 8
  %71 = getelementptr inbounds float, float* %53, i64 %index.next84
  %72 = bitcast float* %71 to <4 x float>*
  %wide.load91.1 = load <4 x float>, <4 x float>* %72, align 4, !tbaa !50, !alias.scope !533
  %73 = getelementptr inbounds float, float* %71, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load92.1 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !50, !alias.scope !533
  %75 = getelementptr inbounds float, float* %resultSample1, i64 %index.next84
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load93.1 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %77 = getelementptr inbounds float, float* %75, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load94.1 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %79 = fadd <4 x float> %wide.load91.1, %wide.load93.1
  %80 = fadd <4 x float> %wide.load92.1, %wide.load94.1
  %81 = bitcast float* %75 to <4 x float>*
  store <4 x float> %79, <4 x float>* %81, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %82 = bitcast float* %77 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %index.next84.1 = add i64 %index83, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block67.unr-lcssa, label %vector.body66, !llvm.loop !538

middle.block67.unr-lcssa:                         ; preds = %vector.body66, %vector.ph80
  %index83.unr = phi i64 [ 0, %vector.ph80 ], [ %index.next84.1, %vector.body66 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block67, label %vector.body66.epil

vector.body66.epil:                               ; preds = %middle.block67.unr-lcssa
  %83 = getelementptr inbounds float, float* %53, i64 %index83.unr
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load91.epil = load <4 x float>, <4 x float>* %84, align 4, !tbaa !50, !alias.scope !533
  %85 = getelementptr inbounds float, float* %83, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load92.epil = load <4 x float>, <4 x float>* %86, align 4, !tbaa !50, !alias.scope !533
  %87 = getelementptr inbounds float, float* %resultSample1, i64 %index83.unr
  %88 = bitcast float* %87 to <4 x float>*
  %wide.load93.epil = load <4 x float>, <4 x float>* %88, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load94.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %91 = fadd <4 x float> %wide.load91.epil, %wide.load93.epil
  %92 = fadd <4 x float> %wide.load92.epil, %wide.load94.epil
  %93 = bitcast float* %87 to <4 x float>*
  store <4 x float> %91, <4 x float>* %93, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  %94 = bitcast float* %89 to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !50, !alias.scope !536, !noalias !533
  br label %middle.block67

middle.block67:                                   ; preds = %vector.body66.epil, %middle.block67.unr-lcssa
  %cmp.n86 = icmp eq i64 %n.vec82, %54
  br i1 %cmp.n86, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv57 = phi i64 [ %indvars.iv.next58, %for.body ], [ %indvars.iv57.ph, %for.body.preheader ]
  %95 = load float, float* %m_fFFTScaler, align 8, !tbaa !312
  %add.ptr.i52 = getelementptr inbounds float, float* %4, i64 %indvars.iv57
  %96 = load float, float* %add.ptr.i52, align 4, !tbaa !50
  %mul = fmul float %95, %96
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !50
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %cmp = icmp ult i64 %indvars.iv.next58, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !539

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block67
  %phitmp = zext i32 %52 to i64
  %phitmp60 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup
  %.lcssa = phi i64 [ %phitmp60, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i50 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %97 = bitcast float** %_M_start.i50 to i8**
  %98 = load i8*, i8** %97, align 8, !tbaa !76
  %99 = load i32, i32* %m_nBlockSize, align 8, !tbaa !308
  %conv21 = zext i32 %99 to i64
  %100 = load float*, float** %_M_start.i, align 8, !tbaa !76
  %add.ptr.i49 = getelementptr inbounds float, float* %100, i64 %conv21
  %101 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* nonnull align 4 %101, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_right_fxp undef, i64 %bytes_resultSample1, 0
  ret %struct.out.overlap_right_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %53, i64 %indvars.iv
  %102 = load float, float* %add.ptr.i, align 4, !tbaa !50
  %arrayidx12 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv
  %103 = load float, float* %arrayidx12, align 4, !tbaa !50
  %add = fadd float %102, %103
  store float %add, float* %arrayidx12, align 4, !tbaa !50
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %54
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !540
}

define %struct.out.wrapperOverlap_right_fxp @wrapperOverlap_right_fxp_cloned.30_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_right_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.overlap_right_fxp @overlap_right_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.overlap_right_fxp %overlap_right_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperOverlap_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperOverlap_right_fxp %output
}

define %emptyStruct @audioDecoding_cloned.31(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder0, i64 %bytes_decoder0, float* %resultSample0, i64 %bytes_resultSample0, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, %class.CAmbisonicBinauralizer* %decoder1, i64 %bytes_decoder1, float* %resultSample1, i64 %bytes_resultSample1, i64 %decoder0ChannelCount, i64 %decoder0FFTSize, i64 %decoder1ChannelCount, i64 %decoder1FFTSize) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperRotatorSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperZoomSet_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.wrapperRotatorSet_fxp %wrapperRotatorSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %0, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %1 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %2 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 4
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperRotateOrder1_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %1, i64 %nSample, float** %channelpart1, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %4 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 5
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperRotateOrder2_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %3, i64 %nSample, float** %channelpart2, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 2
  %6 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 6
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperRotateOrder3_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %5, i64 %nSample, float** %channelpart3, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %7 = extractvalue %struct.out.wrapperZoomSet_fxp %wrapperZoomSet_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %8 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 3
  %9 = extractvalue %struct.out.wrapperRotateOrder1_fxp %wrapperRotateOrder1_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %10 = extractvalue %struct.out.wrapperRotateOrder2_fxp %wrapperRotateOrder2_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %11 = extractvalue %struct.out.wrapperRotateOrder3_fxp %wrapperRotateOrder3_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperZoomProcess_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %7, %class.CBFormat* %sumBF, i64 %8, i64 %nSample, float** %channelpart1, i64 %9, float** %channelpart2, i64 %10, float** %channelpart3, i64 %11, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %12 = extractvalue %struct.out.wrapperZoomProcess_fxp %wrapperZoomProcess_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperSetAndFFT_left_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperSetAndFFT_left_fxp @wrapperSetAndFFT_left_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder0, i64 %bytes_decoder0, %class.CBFormat* %sumBF, i64 %12, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %13 = extractvalue %struct.out.wrapperZoomProcess_fxp %wrapperZoomProcess_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperSetAndFFT_right_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperSetAndFFT_right_fxp @wrapperSetAndFFT_right_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder1, i64 %bytes_decoder1, %class.CBFormat* %sumBF, i64 %13, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %14 = extractvalue %struct.out.wrapperSetAndFFT_left_fxp %wrapperSetAndFFT_left_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperFIR_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperFIR_left_fxp @wrapperFIR_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder0, i64 %14, i64 %decoder0ChannelCount, i64 %decoder0FFTSize, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %15 = extractvalue %struct.out.wrapperSetAndFFT_right_fxp %wrapperSetAndFFT_right_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperFIR_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperFIR_right_fxp @wrapperFIR_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder1, i64 %15, i64 %decoder1ChannelCount, i64 %decoder1FFTSize, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %16 = extractvalue %struct.out.wrapperFIR_left_fxp %wrapperFIR_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperIFFT_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperIFFT_left_fxp @wrapperIFFT_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder0, i64 %16, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %17 = extractvalue %struct.out.wrapperFIR_right_fxp %wrapperFIR_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperIFFT_right_fxp_cloned.26_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperIFFT_right_fxp @wrapperIFFT_right_fxp_cloned.26_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder1, i64 %17, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %18 = extractvalue %struct.out.wrapperIFFT_left_fxp %wrapperIFFT_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperOverlap_left_fxp_cloned.28_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperOverlap_left_fxp @wrapperOverlap_left_fxp_cloned.28_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder0, i64 %18, float* %resultSample0, i64 %bytes_resultSample0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %19 = extractvalue %struct.out.wrapperIFFT_right_fxp %wrapperIFFT_right_fxp_cloned.26_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %wrapperOverlap_right_fxp_cloned.30_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.wrapperOverlap_right_fxp @wrapperOverlap_right_fxp_cloned.30_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder1, i64 %19, float* %resultSample1, i64 %bytes_resultSample1, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct undef
}

define i8* @LaunchDataflowGraph(i8* %data.addr) {
entry:
  %rotator.addr = bitcast i8* %data.addr to %class.CAmbisonicProcessor**
  %rotator = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr
  %nextArg = getelementptr %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, i64 1
  %bytes_rotator.addr = bitcast %class.CAmbisonicProcessor** %nextArg to i64*
  %bytes_rotator = load i64, i64* %bytes_rotator.addr
  %nextArg1 = getelementptr i64, i64* %bytes_rotator.addr, i64 1
  %sumBF.addr = bitcast i64* %nextArg1 to %class.CBFormat**
  %sumBF = load %class.CBFormat*, %class.CBFormat** %sumBF.addr
  %nextArg2 = getelementptr %class.CBFormat*, %class.CBFormat** %sumBF.addr, i64 1
  %bytes_sumBF.addr = bitcast %class.CBFormat** %nextArg2 to i64*
  %bytes_sumBF = load i64, i64* %bytes_sumBF.addr
  %nextArg3 = getelementptr i64, i64* %bytes_sumBF.addr, i64 1
  %zoomer.addr = bitcast i64* %nextArg3 to %class.CAmbisonicZoomer**
  %zoomer = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr
  %nextArg4 = getelementptr %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, i64 1
  %bytes_zoomer.addr = bitcast %class.CAmbisonicZoomer** %nextArg4 to i64*
  %bytes_zoomer = load i64, i64* %bytes_zoomer.addr
  %nextArg5 = getelementptr i64, i64* %bytes_zoomer.addr, i64 1
  %decoder0.addr = bitcast i64* %nextArg5 to %class.CAmbisonicBinauralizer**
  %decoder0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0.addr
  %nextArg6 = getelementptr %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0.addr, i64 1
  %bytes_decoder0.addr = bitcast %class.CAmbisonicBinauralizer** %nextArg6 to i64*
  %bytes_decoder0 = load i64, i64* %bytes_decoder0.addr
  %nextArg7 = getelementptr i64, i64* %bytes_decoder0.addr, i64 1
  %resultSample0.addr = bitcast i64* %nextArg7 to float**
  %resultSample0 = load float*, float** %resultSample0.addr
  %nextArg8 = getelementptr float*, float** %resultSample0.addr, i64 1
  %bytes_resultSample0.addr = bitcast float** %nextArg8 to i64*
  %bytes_resultSample0 = load i64, i64* %bytes_resultSample0.addr
  %nextArg9 = getelementptr i64, i64* %bytes_resultSample0.addr, i64 1
  %nSample.addr = bitcast i64* %nextArg9 to i64*
  %nSample = load i64, i64* %nSample.addr
  %nextArg10 = getelementptr i64, i64* %nSample.addr, i64 1
  %channelpart1.addr = bitcast i64* %nextArg10 to float***
  %channelpart1 = load float**, float*** %channelpart1.addr
  %nextArg11 = getelementptr float**, float*** %channelpart1.addr, i64 1
  %bytes_channelpart1.addr = bitcast float*** %nextArg11 to i64*
  %bytes_channelpart1 = load i64, i64* %bytes_channelpart1.addr
  %nextArg12 = getelementptr i64, i64* %bytes_channelpart1.addr, i64 1
  %channelpart2.addr = bitcast i64* %nextArg12 to float***
  %channelpart2 = load float**, float*** %channelpart2.addr
  %nextArg13 = getelementptr float**, float*** %channelpart2.addr, i64 1
  %bytes_channelpart2.addr = bitcast float*** %nextArg13 to i64*
  %bytes_channelpart2 = load i64, i64* %bytes_channelpart2.addr
  %nextArg14 = getelementptr i64, i64* %bytes_channelpart2.addr, i64 1
  %channelpart3.addr = bitcast i64* %nextArg14 to float***
  %channelpart3 = load float**, float*** %channelpart3.addr
  %nextArg15 = getelementptr float**, float*** %channelpart3.addr, i64 1
  %bytes_channelpart3.addr = bitcast float*** %nextArg15 to i64*
  %bytes_channelpart3 = load i64, i64* %bytes_channelpart3.addr
  %nextArg16 = getelementptr i64, i64* %bytes_channelpart3.addr, i64 1
  %decoder1.addr = bitcast i64* %nextArg16 to %class.CAmbisonicBinauralizer**
  %decoder1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1.addr
  %nextArg17 = getelementptr %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1.addr, i64 1
  %bytes_decoder1.addr = bitcast %class.CAmbisonicBinauralizer** %nextArg17 to i64*
  %bytes_decoder1 = load i64, i64* %bytes_decoder1.addr
  %nextArg18 = getelementptr i64, i64* %bytes_decoder1.addr, i64 1
  %resultSample1.addr = bitcast i64* %nextArg18 to float**
  %resultSample1 = load float*, float** %resultSample1.addr
  %nextArg19 = getelementptr float*, float** %resultSample1.addr, i64 1
  %bytes_resultSample1.addr = bitcast float** %nextArg19 to i64*
  %bytes_resultSample1 = load i64, i64* %bytes_resultSample1.addr
  %nextArg20 = getelementptr i64, i64* %bytes_resultSample1.addr, i64 1
  %decoder0ChannelCount.addr = bitcast i64* %nextArg20 to i64*
  %decoder0ChannelCount = load i64, i64* %decoder0ChannelCount.addr
  %nextArg21 = getelementptr i64, i64* %decoder0ChannelCount.addr, i64 1
  %decoder0FFTSize.addr = bitcast i64* %nextArg21 to i64*
  %decoder0FFTSize = load i64, i64* %decoder0FFTSize.addr
  %nextArg22 = getelementptr i64, i64* %decoder0FFTSize.addr, i64 1
  %decoder1ChannelCount.addr = bitcast i64* %nextArg22 to i64*
  %decoder1ChannelCount = load i64, i64* %decoder1ChannelCount.addr
  %nextArg23 = getelementptr i64, i64* %decoder1ChannelCount.addr, i64 1
  %decoder1FFTSize.addr = bitcast i64* %nextArg23 to i64*
  %decoder1FFTSize = load i64, i64* %decoder1FFTSize.addr
  %audioDecoding_cloned.31.output = call %emptyStruct @audioDecoding_cloned.31(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder0, i64 %bytes_decoder0, float* %resultSample0, i64 %bytes_resultSample0, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, %class.CAmbisonicBinauralizer* %decoder1, i64 %bytes_decoder1, float* %resultSample1, i64 %bytes_resultSample1, i64 %decoder0ChannelCount, i64 %decoder0FFTSize, i64 %decoder1ChannelCount, i64 %decoder1FFTSize)
  %audioDecoding_cloned.31.output.addr = bitcast i8* %data.addr to %emptyStruct*
  store %emptyStruct %audioDecoding_cloned.31.output, %emptyStruct* %audioDecoding_cloned.31.output.addr
  ret i8* null
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noinline noreturn nounwind }
attributes #19 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { cold noreturn nounwind }
attributes #22 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { nounwind }
attributes #25 = { nounwind readnone }
attributes #26 = { builtin }
attributes #27 = { builtin nounwind }
attributes #28 = { noreturn }
attributes #29 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}
!hpvm_hint_cpu = !{!3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!hpvm_hint_gpu = !{}
!hpvm_hint_cpu_gpu = !{}
!hpvm_hint_cpu_spir = !{}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 9.0.0 (https://gitlab.engr.illinois.edu/llvm/hpvm-release.git f83c355d11be7d011508763fedc67e76d592a636)"}
!3 = !{%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* undef}
!4 = !{%struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* undef}
!5 = !{%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!6 = !{%struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!7 = !{%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!8 = !{%struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!9 = !{%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!10 = !{%struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!11 = !{%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!12 = !{%struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!13 = !{%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* undef}
!14 = !{%struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)* undef}
!15 = !{%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!16 = !{%struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!17 = !{%struct.out.setAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!18 = !{%struct.out.wrapperSetAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!19 = !{%struct.out.setAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!20 = !{%struct.out.wrapperSetAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!21 = !{%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!22 = !{%struct.out.wrapperFIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!23 = !{%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!24 = !{%struct.out.wrapperFIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!25 = !{%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!26 = !{%struct.out.wrapperIFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!27 = !{%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!28 = !{%struct.out.wrapperIFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!29 = !{%struct.out.overlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!30 = !{%struct.out.wrapperOverlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!31 = !{%struct.out.overlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!32 = !{%struct.out.wrapperOverlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!33 = !{%emptyStruct (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i64, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i64, i64, i64, i64)* undef}
!34 = !{!35, !36, i64 8}
!35 = !{!"_ZTS4HRTF", !36, i64 8, !36, i64 12}
!36 = !{!"int", !37, i64 0}
!37 = !{!"omnipotent char", !38, i64 0}
!38 = !{!"Simple C++ TBAA"}
!39 = !{!35, !36, i64 12}
!40 = !{!41, !41, i64 0}
!41 = !{!"vtable pointer", !38, i64 0}
!42 = !{!36, !36, i64 0}
!43 = !{!44, !44, i64 0}
!44 = !{!"any pointer", !37, i64 0}
!45 = !{!46, !46, i64 0}
!46 = !{!"short", !37, i64 0}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51, !51, i64 0}
!51 = !{!"float", !37, i64 0}
!52 = !{!53}
!53 = distinct !{!53, !49}
!54 = !{!55}
!55 = distinct !{!55, !49}
!56 = !{!57}
!57 = distinct !{!57, !49}
!58 = distinct !{!58, !59}
!59 = !{!"llvm.loop.isvectorized", i32 1}
!60 = distinct !{!60, !59}
!61 = !{!62, !36, i64 8}
!62 = !{!"_ZTS14CAmbisonicBase", !36, i64 8, !63, i64 12, !36, i64 16, !63, i64 20}
!63 = !{!"bool", !37, i64 0}
!64 = !{!62, !63, i64 12}
!65 = !{!62, !36, i64 16}
!66 = !{!62, !63, i64 20}
!67 = !{i8 0, i8 2}
!68 = !{!69, !51, i64 80}
!69 = !{!"_ZTS16CAmbisonicSource", !70, i64 24, !70, i64 48, !71, i64 72, !51, i64 84}
!70 = !{!"_ZTSSt6vectorIfSaIfEE"}
!71 = !{!"_ZTS10PolarPoint", !51, i64 0, !51, i64 4, !51, i64 8}
!72 = !{!69, !51, i64 84}
!73 = !{!74, !44, i64 8}
!74 = !{!"_ZTSSt12_Vector_baseIfSaIfEE", !75, i64 0}
!75 = !{!"_ZTSNSt12_Vector_baseIfSaIfEE12_Vector_implE", !44, i64 0, !44, i64 8, !44, i64 16}
!76 = !{!74, !44, i64 0}
!77 = !{!69, !51, i64 72}
!78 = !{!69, !51, i64 76}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !59}
!85 = distinct !{!85, !59}
!86 = distinct !{!86, !59}
!87 = distinct !{!87, !88}
!88 = !{!"llvm.loop.unroll.disable"}
!89 = distinct !{!89, !90, !59}
!90 = !{!"llvm.loop.unroll.runtime.disable"}
!91 = !{!92, !36, i64 24}
!92 = !{!"_ZTS8CBFormat", !36, i64 24, !36, i64 28, !70, i64 32, !93, i64 56}
!93 = !{!"_ZTSSt10unique_ptrIA_PfSt14default_deleteIS1_EE", !94, i64 0}
!94 = !{!"_ZTSSt15__uniq_ptr_implIPfSt14default_deleteIA_S0_EE", !95, i64 0}
!95 = !{!"_ZTSSt5tupleIJPPfSt14default_deleteIA_S0_EEE"}
!96 = !{!92, !36, i64 28}
!97 = distinct !{!97, !88}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !59}
!104 = distinct !{!104, !59}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !59}
!111 = distinct !{!111, !59}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !59}
!118 = distinct !{!118, !59}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !59}
!125 = distinct !{!125, !59}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !59}
!132 = distinct !{!132, !59}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !59}
!139 = distinct !{!139, !59}
!140 = !{!141}
!141 = distinct !{!141, !142}
!142 = distinct !{!142, !"LVerDomain"}
!143 = !{!144}
!144 = distinct !{!144, !142}
!145 = distinct !{!145, !59}
!146 = distinct !{!146, !59}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !59}
!153 = distinct !{!153, !59}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = !{!160}
!160 = distinct !{!160, !156}
!161 = !{!158, !155}
!162 = distinct !{!162, !59}
!163 = distinct !{!163, !88}
!164 = distinct !{!164, !59}
!165 = !{!166, !51, i64 124}
!166 = !{!"_ZTS21CAmbisonicEncoderDist", !36, i64 88, !51, i64 92, !36, i64 96, !36, i64 100, !44, i64 104, !36, i64 112, !36, i64 116, !36, i64 120, !51, i64 124, !51, i64 128, !51, i64 132}
!167 = !{!166, !51, i64 128}
!168 = !{!166, !51, i64 132}
!169 = !{!166, !36, i64 88}
!170 = !{!166, !36, i64 100}
!171 = !{!166, !44, i64 104}
!172 = !{!166, !36, i64 96}
!173 = !{!166, !51, i64 92}
!174 = !{!166, !36, i64 112}
!175 = !{!166, !36, i64 116}
!176 = !{!166, !36, i64 120}
!177 = distinct !{!177, !88}
!178 = !{!179, !51, i64 0}
!179 = !{!"_ZTS11Orientation", !51, i64 0, !51, i64 4, !51, i64 8, !51, i64 12, !51, i64 16, !51, i64 20}
!180 = !{!179, !51, i64 4}
!181 = !{!179, !51, i64 8}
!182 = !{!179, !51, i64 16}
!183 = !{!179, !51, i64 20}
!184 = !{!179, !51, i64 12}
!185 = !{!186, !44, i64 48}
!186 = !{!"_ZTS19CAmbisonicProcessor", !179, i64 24, !44, i64 48, !44, i64 56, !44, i64 64, !44, i64 72, !44, i64 80, !36, i64 88, !36, i64 92, !36, i64 96, !36, i64 100, !36, i64 104, !51, i64 108, !44, i64 112, !44, i64 120, !51, i64 128, !51, i64 132, !51, i64 136, !51, i64 140, !51, i64 144, !51, i64 148, !51, i64 152, !51, i64 156, !51, i64 160, !51, i64 164, !51, i64 168, !51, i64 172, !51, i64 176, !51, i64 180, !51, i64 184, !51, i64 188, !51, i64 192, !51, i64 196}
!187 = !{!186, !44, i64 72}
!188 = !{!186, !44, i64 56}
!189 = !{!186, !44, i64 64}
!190 = !{!186, !44, i64 112}
!191 = !{!186, !44, i64 120}
!192 = !{!186, !44, i64 80}
!193 = !{!186, !36, i64 92}
!194 = !{!186, !36, i64 96}
!195 = !{!186, !36, i64 100}
!196 = !{!186, !36, i64 88}
!197 = !{!186, !36, i64 104}
!198 = !{!186, !51, i64 108}
!199 = !{!200, !44, i64 8}
!200 = !{!"_ZTSSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE", !201, i64 0}
!201 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implE", !44, i64 0, !44, i64 8, !44, i64 16}
!202 = !{!200, !44, i64 16}
!203 = !{!200, !44, i64 0}
!204 = !{!186, !51, i64 36}
!205 = !{!186, !51, i64 128}
!206 = !{!186, !51, i64 132}
!207 = !{!186, !51, i64 40}
!208 = !{!186, !51, i64 136}
!209 = !{!186, !51, i64 140}
!210 = !{!186, !51, i64 44}
!211 = !{!186, !51, i64 144}
!212 = !{!186, !51, i64 148}
!213 = !{!186, !51, i64 152}
!214 = !{!186, !51, i64 156}
!215 = !{!186, !51, i64 160}
!216 = !{!186, !51, i64 164}
!217 = !{!186, !51, i64 168}
!218 = !{!186, !51, i64 172}
!219 = !{!186, !51, i64 176}
!220 = !{!186, !51, i64 180}
!221 = !{!186, !51, i64 184}
!222 = !{!186, !51, i64 188}
!223 = !{!186, !51, i64 192}
!224 = !{!186, !51, i64 196}
!225 = !{i64 0, i64 4, !50, i64 4, i64 4, !50, i64 8, i64 4, !50, i64 12, i64 4, !50, i64 16, i64 4, !50, i64 20, i64 4, !50}
!226 = !{!227}
!227 = distinct !{!227, !228}
!228 = distinct !{!228, !"LVerDomain"}
!229 = !{!230}
!230 = distinct !{!230, !228}
!231 = distinct !{!231, !59}
!232 = !{!233, !51, i64 0}
!233 = !{!"_ZTS12kiss_fft_cpx", !51, i64 0, !51, i64 4}
!234 = !{!233, !51, i64 4}
!235 = !{!236}
!236 = distinct !{!236, !237}
!237 = distinct !{!237, !"LVerDomain"}
!238 = !{!239}
!239 = distinct !{!239, !237}
!240 = distinct !{!240, !59}
!241 = distinct !{!241, !59}
!242 = distinct !{!242, !59}
!243 = !{!244}
!244 = distinct !{!244, !245}
!245 = distinct !{!245, !"LVerDomain"}
!246 = !{!247}
!247 = distinct !{!247, !245}
!248 = distinct !{!248, !59}
!249 = distinct !{!249, !88}
!250 = distinct !{!250, !59}
!251 = distinct !{!251, !88}
!252 = !{!253}
!253 = distinct !{!253, !254}
!254 = distinct !{!254, !"LVerDomain"}
!255 = !{!256}
!256 = distinct !{!256, !254}
!257 = distinct !{!257, !59}
!258 = distinct !{!258, !59}
!259 = !{!260, !44, i64 32}
!260 = !{!"_ZTS17CAmbisonicDecoder", !36, i64 24, !36, i64 28, !44, i64 32}
!261 = !{!260, !36, i64 24}
!262 = !{!260, !36, i64 28}
!263 = !{!264}
!264 = distinct !{!264, !265}
!265 = distinct !{!265, !"LVerDomain"}
!266 = !{!267}
!267 = distinct !{!267, !265}
!268 = distinct !{!268, !59}
!269 = distinct !{!269, !88}
!270 = distinct !{!270, !59}
!271 = distinct !{!271, !88}
!272 = !{!273}
!273 = distinct !{!273, !274}
!274 = distinct !{!274, !"LVerDomain"}
!275 = !{!276}
!276 = distinct !{!276, !274}
!277 = distinct !{!277, !59}
!278 = distinct !{!278, !59}
!279 = !{!280, !51, i64 92}
!280 = !{!"_ZTS16CAmbisonicZoomer", !260, i64 24, !281, i64 64, !281, i64 72, !281, i64 80, !51, i64 88, !51, i64 92, !51, i64 96, !51, i64 100}
!281 = !{!"_ZTSSt10unique_ptrIA_fSt14default_deleteIS0_EE", !282, i64 0}
!282 = !{!"_ZTSSt15__uniq_ptr_implIfSt14default_deleteIA_fEE", !283, i64 0}
!283 = !{!"_ZTSSt5tupleIJPfSt14default_deleteIA_fEEE"}
!284 = !{!280, !51, i64 96}
!285 = !{!280, !51, i64 88}
!286 = !{!280, !51, i64 100}
!287 = distinct !{!287, !88}
!288 = distinct !{!288, !88}
!289 = !{!290, !44, i64 0}
!290 = !{!"_ZTSSt10_Head_baseILm1EPFvPvELb0EE", !44, i64 0}
!291 = !{!292, !44, i64 0}
!292 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !44, i64 0}
!293 = !{!294, !44, i64 0}
!294 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !292, i64 0, !295, i64 8, !37, i64 16}
!295 = !{!"long", !37, i64 0}
!296 = !{!294, !295, i64 8}
!297 = !{!295, !295, i64 0}
!298 = !{!37, !37, i64 0}
!299 = !{!300, !36, i64 68}
!300 = !{!"_ZTS22CAmbisonicBinauralizer", !260, i64 24, !36, i64 64, !36, i64 68, !36, i64 72, !36, i64 76, !51, i64 80, !36, i64 84, !301, i64 88, !301, i64 104, !37, i64 120, !304, i64 168, !70, i64 176, !307, i64 200, !70, i64 224, !37, i64 248}
!301 = !{!"_ZTSSt10unique_ptrI15kiss_fftr_statePFvPvEE", !302, i64 0}
!302 = !{!"_ZTSSt15__uniq_ptr_implI15kiss_fftr_statePFvPvEE", !303, i64 0}
!303 = !{!"_ZTSSt5tupleIJP15kiss_fftr_statePFvPvEEE"}
!304 = !{!"_ZTSSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE", !305, i64 0}
!305 = !{!"_ZTSSt15__uniq_ptr_implI12kiss_fft_cpxSt14default_deleteIA_S0_EE", !306, i64 0}
!306 = !{!"_ZTSSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE"}
!307 = !{!"_ZTSSt6vectorIS_IfSaIfEESaIS1_EE"}
!308 = !{!300, !36, i64 64}
!309 = !{!300, !36, i64 84}
!310 = !{!300, !36, i64 72}
!311 = !{!300, !36, i64 76}
!312 = !{!300, !51, i64 80}
!313 = !{!314}
!314 = distinct !{!314, !315}
!315 = distinct !{!315, !"LVerDomain"}
!316 = !{!317}
!317 = distinct !{!317, !315}
!318 = distinct !{!318, !59}
!319 = !{!320}
!320 = distinct !{!320, !321}
!321 = distinct !{!321, !"LVerDomain"}
!322 = !{!323}
!323 = distinct !{!323, !321}
!324 = !{!325, !320, !326}
!325 = distinct !{!325, !321}
!326 = distinct !{!326, !321}
!327 = !{!326}
!328 = !{!325}
!329 = !{!320, !326}
!330 = distinct !{!330, !59}
!331 = distinct !{!331, !59}
!332 = distinct !{!332, !59}
!333 = !{!334}
!334 = distinct !{!334, !335}
!335 = distinct !{!335, !"LVerDomain"}
!336 = !{!337}
!337 = distinct !{!337, !335}
!338 = !{!339}
!339 = distinct !{!339, !335}
!340 = !{!334, !337}
!341 = distinct !{!341, !59}
!342 = distinct !{!342, !59}
!343 = distinct !{!343, !88}
!344 = distinct !{!344, !59}
!345 = distinct !{!345, !90, !59}
!346 = !{!347, !44, i64 0}
!347 = !{!"_ZTSSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE", !348, i64 0}
!348 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implE", !44, i64 0, !44, i64 8, !44, i64 16}
!349 = distinct !{!349, !59}
!350 = distinct !{!350, !90, !59}
!351 = !{!352}
!352 = distinct !{!352, !353}
!353 = distinct !{!353, !"LVerDomain"}
!354 = !{!355}
!355 = distinct !{!355, !353}
!356 = distinct !{!356, !59}
!357 = !{!358, !44, i64 0}
!358 = !{!"_ZTSSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE", !359, i64 0}
!359 = !{!"_ZTSNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE12_Vector_implE", !44, i64 0, !44, i64 8, !44, i64 16}
!360 = !{!361}
!361 = distinct !{!361, !362}
!362 = distinct !{!362, !"LVerDomain"}
!363 = !{!364}
!364 = distinct !{!364, !362}
!365 = distinct !{!365, !59}
!366 = distinct !{!366, !59}
!367 = distinct !{!367, !59}
!368 = !{!369}
!369 = distinct !{!369, !370}
!370 = distinct !{!370, !"LVerDomain"}
!371 = !{!372}
!372 = distinct !{!372, !370}
!373 = distinct !{!373, !59}
!374 = distinct !{!374, !59}
!375 = !{!376}
!376 = distinct !{!376, !377}
!377 = distinct !{!377, !"LVerDomain"}
!378 = !{!379}
!379 = distinct !{!379, !377}
!380 = distinct !{!380, !59}
!381 = distinct !{!381, !59}
!382 = !{!383}
!383 = distinct !{!383, !384}
!384 = distinct !{!384, !"LVerDomain"}
!385 = !{!386}
!386 = distinct !{!386, !384}
!387 = distinct !{!387, !59}
!388 = distinct !{!388, !59}
!389 = !{!390}
!390 = distinct !{!390, !391}
!391 = distinct !{!391, !"LVerDomain"}
!392 = !{!393}
!393 = distinct !{!393, !391}
!394 = distinct !{!394, !59}
!395 = distinct !{!395, !59}
!396 = !{!397, !44, i64 240}
!397 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !44, i64 216, !37, i64 224, !63, i64 225, !44, i64 232, !44, i64 240, !44, i64 248, !44, i64 256}
!398 = !{!399, !37, i64 56}
!399 = !{!"_ZTSSt5ctypeIcE", !44, i64 16, !63, i64 24, !44, i64 32, !44, i64 40, !44, i64 48, !37, i64 56, !37, i64 57, !37, i64 313, !37, i64 569}
!400 = !{!358, !44, i64 8}
!401 = !{!347, !44, i64 8}
!402 = !{!403, !51, i64 4132}
!403 = !{!"_ZTSN12ILLIXR_AUDIO5SoundE", !44, i64 0, !37, i64 8, !44, i64 4104, !44, i64 4112, !71, i64 4120, !51, i64 4132}
!404 = !{!403, !44, i64 0}
!405 = !{!403, !44, i64 4104}
!406 = !{!403, !44, i64 4112}
!407 = !{!403, !51, i64 4120}
!408 = !{!403, !51, i64 4124}
!409 = !{!403, !51, i64 4128}
!410 = !{!71, !51, i64 0}
!411 = !{!71, !51, i64 4}
!412 = !{!71, !51, i64 8}
!413 = !{!414, !416, i64 32}
!414 = !{!"_ZTSSt8ios_base", !295, i64 8, !295, i64 16, !415, i64 24, !416, i64 28, !416, i64 32, !44, i64 40, !417, i64 48, !37, i64 64, !36, i64 192, !44, i64 200, !418, i64 208}
!415 = !{!"_ZTSSt13_Ios_Fmtflags", !37, i64 0}
!416 = !{!"_ZTSSt12_Ios_Iostate", !37, i64 0}
!417 = !{!"_ZTSNSt8ios_base6_WordsE", !44, i64 0, !295, i64 8}
!418 = !{!"_ZTSSt6locale", !44, i64 0}
!419 = !{!420, !421, i64 0}
!420 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudioE", !421, i64 0, !44, i64 8, !44, i64 16, !44, i64 24, !44, i64 32, !44, i64 40, !44, i64 48}
!421 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudio11ProcessTypeE", !37, i64 0}
!422 = !{!420, !44, i64 16}
!423 = !{!424, !36, i64 16}
!424 = !{!"_ZTSN12ILLIXR_AUDIO11WAVHeader_tE", !36, i64 0, !36, i64 4, !36, i64 8, !36, i64 12, !36, i64 16, !46, i64 20, !46, i64 22, !36, i64 24, !36, i64 28, !46, i64 32, !46, i64 34, !36, i64 36, !36, i64 40}
!425 = !{!424, !46, i64 20}
!426 = !{!424, !46, i64 22}
!427 = !{!424, !36, i64 24}
!428 = !{!424, !36, i64 28}
!429 = !{!424, !46, i64 32}
!430 = !{!424, !46, i64 34}
!431 = !{!424, !36, i64 36}
!432 = !{!424, !36, i64 40}
!433 = !{!420, !44, i64 8}
!434 = !{!420, !44, i64 24}
!435 = !{!420, !44, i64 32}
!436 = !{!420, !44, i64 40}
!437 = !{!420, !44, i64 48}
!438 = !{!439, !44, i64 8}
!439 = !{!"_ZTSSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE", !440, i64 0}
!440 = !{!"_ZTSNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implE", !44, i64 0, !44, i64 8, !44, i64 16}
!441 = !{!439, !44, i64 0}
!442 = !{!439, !44, i64 16}
!443 = !{!444}
!444 = distinct !{!444, !445}
!445 = distinct !{!445, !"LVerDomain"}
!446 = !{!447}
!447 = distinct !{!447, !445}
!448 = distinct !{!448, !59}
!449 = distinct !{!449, !88}
!450 = distinct !{!450, !59}
!451 = distinct !{!451, !88}
!452 = !{!453, !44, i64 0}
!453 = !{!"_ZTS7RootArg", !44, i64 0, !295, i64 8, !44, i64 16, !295, i64 24, !44, i64 32, !295, i64 40, !44, i64 48, !295, i64 56, !44, i64 64, !295, i64 72, !295, i64 80, !44, i64 88, !295, i64 96, !44, i64 104, !295, i64 112, !44, i64 120, !295, i64 128, !44, i64 136, !295, i64 144, !44, i64 152, !295, i64 160, !295, i64 168, !295, i64 176, !295, i64 184, !295, i64 192}
!454 = !{!453, !295, i64 8}
!455 = !{!453, !44, i64 16}
!456 = !{!453, !295, i64 24}
!457 = !{!453, !44, i64 32}
!458 = !{!453, !295, i64 40}
!459 = !{!453, !44, i64 48}
!460 = !{!453, !295, i64 56}
!461 = !{!453, !44, i64 64}
!462 = !{!453, !44, i64 88}
!463 = !{!453, !295, i64 96}
!464 = !{!453, !44, i64 104}
!465 = !{!453, !295, i64 112}
!466 = !{!453, !44, i64 120}
!467 = !{!453, !295, i64 128}
!468 = !{!453, !44, i64 136}
!469 = !{!453, !295, i64 144}
!470 = !{!453, !44, i64 152}
!471 = !{!453, !295, i64 160}
!472 = !{!453, !295, i64 168}
!473 = !{!453, !295, i64 176}
!474 = !{!453, !295, i64 184}
!475 = !{!453, !295, i64 192}
!476 = !{!74, !44, i64 16}
!477 = distinct !{!477, !59}
!478 = distinct !{!478, !88}
!479 = distinct !{!479, !90, !59}
!480 = distinct !{!480, !59}
!481 = distinct !{!481, !88}
!482 = distinct !{!482, !90, !59}
!483 = distinct !{!483, !59}
!484 = distinct !{!484, !88}
!485 = distinct !{!485, !90, !59}
!486 = distinct !{!486, !59}
!487 = distinct !{!487, !88}
!488 = distinct !{!488, !90, !59}
!489 = !{!490, !44, i64 0}
!490 = !{!"_ZTSSt10_Head_baseILm0EPfLb0EE", !44, i64 0}
!491 = distinct !{!491, !88}
!492 = distinct !{!492, !88}
!493 = !{!358, !44, i64 16}
!494 = !{!347, !44, i64 16}
!495 = !{!496, !44, i64 0}
!496 = !{!"_ZTSSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE", !44, i64 0}
!497 = distinct !{!497, !88}
!498 = distinct !{!498, !88}
!499 = !{!500}
!500 = distinct !{!500, !501}
!501 = distinct !{!501, !"LVerDomain"}
!502 = !{!503}
!503 = distinct !{!503, !501}
!504 = distinct !{!504, !59}
!505 = distinct !{!505, !59}
!506 = !{!507}
!507 = distinct !{!507, !508}
!508 = distinct !{!508, !"LVerDomain"}
!509 = !{!510}
!510 = distinct !{!510, !508}
!511 = distinct !{!511, !59}
!512 = distinct !{!512, !59}
!513 = !{!514}
!514 = distinct !{!514, !515}
!515 = distinct !{!515, !"LVerDomain"}
!516 = !{!517}
!517 = distinct !{!517, !515}
!518 = distinct !{!518, !59}
!519 = !{!520}
!520 = distinct !{!520, !521}
!521 = distinct !{!521, !"LVerDomain"}
!522 = !{!523}
!523 = distinct !{!523, !521}
!524 = distinct !{!524, !59}
!525 = distinct !{!525, !59}
!526 = distinct !{!526, !59}
!527 = !{!528}
!528 = distinct !{!528, !529}
!529 = distinct !{!529, !"LVerDomain"}
!530 = !{!531}
!531 = distinct !{!531, !529}
!532 = distinct !{!532, !59}
!533 = !{!534}
!534 = distinct !{!534, !535}
!535 = distinct !{!535, !"LVerDomain"}
!536 = !{!537}
!537 = distinct !{!537, !535}
!538 = distinct !{!538, !59}
!539 = distinct !{!539, !59}
!540 = distinct !{!540, !59}
