; ModuleID = 'build/seq/main.hpvm.ll'
source_filename = "src//main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.MIT_HRTF = type { %class.HRTF }
%class.HRTF = type { i32 (...)**, i32, i32 }
%class.CAmbisonicSource = type { %class.CAmbisonicBase.base, %"class.std::vector.0", %"class.std::vector.0", %struct.PolarPoint, float }
%class.CAmbisonicBase.base = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8 }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl_data" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl_data" = type { float*, float*, float* }
%struct.PolarPoint = type { float, float, float }
%class.CBFormat = type { %class.CAmbisonicBase.base, i32, i32, %"class.std::vector.0", %"class.std::unique_ptr" }
%"class.std::unique_ptr" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.6" }
%"struct.std::_Head_base.6" = type { float** }
%class.CAmbisonicEncoder = type { %class.CAmbisonicSource }
%class.CAmbisonicEncoderDist = type { %class.CAmbisonicEncoder, i32, float, i32, i32, float*, i32, i32, i32, float, float, float }
%class.CAmbisonicProcessor = type { %class.CAmbisonicBase.base, %class.Orientation, float*, %struct.kiss_fftr_state*, %struct.kiss_fftr_state*, float*, float**, i32, i32, i32, i32, i32, float, %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.Orientation = type { float, float, float, float, float, float }
%struct.kiss_fftr_state = type opaque
%struct.kiss_fft_cpx = type { float, float }
%class.CAmbisonicSpeaker = type { %class.CAmbisonicSource }
%class.CAmbisonicDecoder = type { %class.CAmbisonicBase.base, i32, i32, %class.CAmbisonicSpeaker* }
%class.CAmbisonicZoomer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", float, float, float, float }
%"class.std::unique_ptr.12" = type { %"class.std::__uniq_ptr_impl.13" }
%"class.std::__uniq_ptr_impl.13" = type { %"class.std::tuple.14" }
%"class.std::tuple.14" = type { %"struct.std::_Tuple_impl.15" }
%"struct.std::_Tuple_impl.15" = type { %"struct.std::_Head_base.20" }
%"struct.std::_Head_base.20" = type { float* }
%class.CAmbisonicBinauralizer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, i32, i32, i32, i32, float, i32, %"class.std::unique_ptr.21", %"class.std::unique_ptr.21", [2 x %"class.std::vector.28"], %"class.std::unique_ptr.33", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", [2 x %"class.std::vector.0"] }
%"class.std::unique_ptr.21" = type { %"class.std::__uniq_ptr_impl.22" }
%"class.std::__uniq_ptr_impl.22" = type { %"class.std::tuple.23" }
%"class.std::tuple.23" = type { %"struct.std::_Tuple_impl.24" }
%"struct.std::_Tuple_impl.24" = type { %"struct.std::_Tuple_impl.25", %"struct.std::_Head_base.27" }
%"struct.std::_Tuple_impl.25" = type { %"struct.std::_Head_base.26" }
%"struct.std::_Head_base.26" = type { void (i8*)* }
%"struct.std::_Head_base.27" = type { %struct.kiss_fftr_state* }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl_data" = type { %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"* }
%"class.std::unique_ptr.33" = type { %"class.std::__uniq_ptr_impl.34" }
%"class.std::__uniq_ptr_impl.34" = type { %"class.std::tuple.35" }
%"class.std::tuple.35" = type { %"struct.std::_Tuple_impl.36" }
%"struct.std::_Tuple_impl.36" = type { %"struct.std::_Head_base.41" }
%"struct.std::_Head_base.41" = type { %struct.kiss_fft_cpx* }
%"class.ILLIXR_AUDIO::Sound" = type { %"class.std::basic_fstream"*, [1024 x float], %class.CBFormat*, %class.CAmbisonicEncoderDist*, %struct.PolarPoint, float }
%"class.std::basic_fstream" = type { %"class.std::basic_iostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.__mbstate_t = type { i32, %union.anon.45 }
%union.anon.45 = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.ILLIXR_AUDIO::ABAudio" = type { i32, %"class.std::vector.46"*, %"class.std::basic_ofstream"*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicProcessor*, %class.CAmbisonicZoomer* }
%"class.std::vector.46" = type { %"struct.std::_Vector_base.47" }
%"struct.std::_Vector_base.47" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl_data" = type { %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%class.CAmbisonicBase = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl_data" = type { %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.ILLIXR_AUDIO::WAVHeader_t" = type { i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, i32 }
%struct.out.rotatorSet_fxp = type <{ i64 }>
%struct.out.wrapperRotatorSet_fxp = type <{ i64 }>
%struct.out.zoomSet_fxp = type <{ i64 }>
%struct.out.wrapperZoomSet_fxp = type <{ i64 }>
%struct.out.psychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.wrapperPsychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.rotateOrder1_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder1_fxp = type <{ i64 }>
%struct.out.rotateOrder2_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder2_fxp = type <{ i64 }>
%struct.out.rotateOrder3_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder3_fxp = type <{ i64 }>
%struct.out.zoomProcess_fxp = type <{ i64, i64 }>
%struct.out.wrapperZoomProcess_fxp = type <{ i64, i64 }>
%struct.out.setAndFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_left_fxp = type <{ i64 }>
%struct.out.setAndFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_right_fxp = type <{ i64 }>
%struct.out.FIR_left_fxp = type <{ i64 }>
%struct.out.wrapperFIR_left_fxp = type <{ i64 }>
%struct.out.FIR_right_fxp = type <{ i64 }>
%struct.out.wrapperFIR_right_fxp = type <{ i64 }>
%struct.out.IFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_left_fxp = type <{ i64 }>
%struct.out.IFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_right_fxp = type <{ i64 }>
%struct.out.overlap_right_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_right_fxp = type <{ i64 }>
%struct.out.overlap_left_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_left_fxp = type <{ i64 }>
%struct.thread.wrapperRotatorSet_fxp_cloned = type <{ i8*, i8*, i8*, i8* }>
%struct.thread.wrapperZoomSet_fxp_cloned = type <{ i8*, i8*, i8*, i8* }>
%struct.thread.wrapperPsychoFilter_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperRotateOrder1_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperRotateOrder2_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperRotateOrder3_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperZoomProcess_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperSetAndFFT_left_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperSetAndFFT_right_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperFIR_left_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperFIR_right_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperIFFT_left_fxp_cloned = type <{ i8*, i8*, i8*, i8* }>
%struct.thread.wrapperIFFT_right_fxp_cloned = type <{ i8*, i8*, i8*, i8* }>
%struct.thread.wrapperOverlap_right_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.thread.wrapperOverlap_left_fxp_cloned = type <{ i8*, i8*, i8*, i8*, i8*, i8* }>
%struct.out.audioDecoding = type <{ i64, i64 }>

$_ZN8CBFormatD2Ev = comdat any

$_ZN8MIT_HRTFD0Ev = comdat any

$_ZN14CAmbisonicBaseD2Ev = comdat any

$_ZN14CAmbisonicBaseD0Ev = comdat any

$_ZN16CAmbisonicSourceD2Ev = comdat any

$_ZN16CAmbisonicSourceD0Ev = comdat any

$_ZN8CBFormatD0Ev = comdat any

$_ZN16CAmbisonicZoomerD2Ev = comdat any

$_ZN16CAmbisonicZoomerD0Ev = comdat any

$_ZN22CAmbisonicBinauralizerD2Ev = comdat any

$_ZN22CAmbisonicBinauralizerD0Ev = comdat any

$_ZN4HRTFD2Ev = comdat any

$_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf = comdat any

$_ZNSt6vectorIfSaIfEE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_ = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm = comdat any

$_ZTS4HRTF = comdat any

$_ZTI4HRTF = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV8MIT_HRTF = unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MIT_HRTF to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD2Ev to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD0Ev to i8*), i8* bitcast (i1 (%class.MIT_HRTF*, float, float, float**)* @_ZN8MIT_HRTF3getEffPPf to i8*)] }, align 8
@_ZTV14CAmbisonicBase = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV16CAmbisonicSource = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSource*, i32, i1, i32)* @_ZN16CAmbisonicSource9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV8CBFormat = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8CBFormat to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD2Ev to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD0Ev to i8*), i8* bitcast (i1 (%class.CBFormat*, i32, i1, i32)* @_ZN8CBFormat9ConfigureEjbj to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat5ResetEv to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat7RefreshEv to i8*)] }, align 8
@_ZTV17CAmbisonicEncoder = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoder*, i32, i1, i32)* @_ZN17CAmbisonicEncoder9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoder7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV21CAmbisonicEncoderDist = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI21CAmbisonicEncoderDist to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)* @_ZN21CAmbisonicEncoderDist9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV19CAmbisonicProcessor = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19CAmbisonicProcessor to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor7RefreshEv to i8*)] }, align 8
@_ZL14first_order_3D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -10, i16 -13, i16 -17, i16 -21, i16 -25, i16 -30, i16 -35, i16 -41, i16 -47, i16 -54, i16 -60, i16 -67, i16 -75, i16 -82, i16 -90, i16 -97, i16 -105, i16 -113, i16 -120, i16 -127, i16 -134, i16 -141, i16 -147, i16 -153, i16 -158, i16 -163, i16 -167, i16 -170, i16 -173, i16 -175, i16 -176, i16 23040, i16 -176, i16 -175, i16 -173, i16 -170, i16 -167, i16 -163, i16 -158, i16 -153, i16 -147, i16 -141, i16 -134, i16 -127, i16 -120, i16 -113, i16 -105, i16 -97, i16 -90, i16 -82, i16 -75, i16 -67, i16 -60, i16 -54, i16 -47, i16 -41, i16 -35, i16 -30, i16 -25, i16 -21, i16 -17, i16 -13, i16 -10, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 5, i16 7, i16 9, i16 11, i16 14, i16 16, i16 19, i16 23, i16 26, i16 30, i16 34, i16 38, i16 42, i16 46, i16 51, i16 55, i16 60, i16 64, i16 68, i16 73, i16 77, i16 80, i16 84, i16 87, i16 90, i16 93, i16 95, i16 97, i16 99, i16 100, i16 101, i16 13438, i16 101, i16 100, i16 99, i16 97, i16 95, i16 93, i16 90, i16 87, i16 84, i16 80, i16 77, i16 73, i16 68, i16 64, i16 60, i16 55, i16 51, i16 46, i16 42, i16 38, i16 34, i16 30, i16 26, i16 23, i16 19, i16 16, i16 14, i16 11, i16 9, i16 7, i16 5, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_3D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -5, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -5, i16 -3, i16 -1, i16 2, i16 6, i16 10, i16 15, i16 21, i16 26, i16 32, i16 38, i16 44, i16 49, i16 53, i16 55, i16 56, i16 54, i16 50, i16 42, i16 32, i16 19, i16 2, i16 -19, i16 -43, i16 -70, i16 -100, i16 -133, i16 -167, i16 -203, i16 -241, i16 -278, i16 -315, i16 -350, i16 -384, i16 -414, i16 -442, i16 -465, i16 -484, i16 -497, i16 -506, i16 25438, i16 -506, i16 -497, i16 -484, i16 -465, i16 -442, i16 -414, i16 -384, i16 -350, i16 -315, i16 -278, i16 -241, i16 -203, i16 -167, i16 -133, i16 -100, i16 -70, i16 -43, i16 -19, i16 2, i16 19, i16 32, i16 42, i16 50, i16 54, i16 56, i16 55, i16 53, i16 49, i16 44, i16 38, i16 32, i16 26, i16 21, i16 15, i16 10, i16 6, i16 2, i16 -1, i16 -3, i16 -5, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -5], [101 x i16] [i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2, i16 -1, i16 0, i16 2, i16 4, i16 6, i16 8, i16 10, i16 12, i16 15, i16 17, i16 19, i16 20, i16 21, i16 21, i16 21, i16 19, i16 16, i16 12, i16 7, i16 0, i16 -8, i16 -17, i16 -27, i16 -39, i16 -52, i16 -65, i16 -79, i16 -94, i16 -108, i16 -123, i16 -136, i16 -149, i16 -161, i16 -172, i16 -181, i16 -188, i16 -194, i16 -197, i16 19884, i16 -197, i16 -194, i16 -188, i16 -181, i16 -172, i16 -161, i16 -149, i16 -136, i16 -123, i16 -108, i16 -94, i16 -79, i16 -65, i16 -52, i16 -39, i16 -27, i16 -17, i16 -8, i16 0, i16 7, i16 12, i16 16, i16 19, i16 21, i16 21, i16 21, i16 20, i16 19, i16 17, i16 15, i16 12, i16 10, i16 8, i16 6, i16 4, i16 2, i16 0, i16 -1, i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2], [101 x i16] [i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -14, i16 -17, i16 -21, i16 -25, i16 -28, i16 -31, i16 -34, i16 -35, i16 -36, i16 -35, i16 -32, i16 -27, i16 -21, i16 -12, i16 -2, i16 11, i16 26, i16 43, i16 62, i16 82, i16 104, i16 127, i16 150, i16 173, i16 196, i16 219, i16 240, i16 259, i16 276, i16 290, i16 302, i16 311, i16 316, i16 10659, i16 316, i16 311, i16 302, i16 290, i16 276, i16 259, i16 240, i16 219, i16 196, i16 173, i16 150, i16 127, i16 104, i16 82, i16 62, i16 43, i16 26, i16 11, i16 -2, i16 -12, i16 -21, i16 -27, i16 -32, i16 -35, i16 -36, i16 -35, i16 -34, i16 -31, i16 -28, i16 -25, i16 -21, i16 -17, i16 -14, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2]], align 16
@_ZL14first_order_2D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -7, i16 -9, i16 -10, i16 -13, i16 -15, i16 -18, i16 -21, i16 -24, i16 -27, i16 -30, i16 -34, i16 -37, i16 -41, i16 -45, i16 -49, i16 -52, i16 -56, i16 -60, i16 -63, i16 -67, i16 -70, i16 -73, i16 -76, i16 -79, i16 -81, i16 -83, i16 -85, i16 -86, i16 -87, i16 -88, i16 19968, i16 -88, i16 -87, i16 -86, i16 -85, i16 -83, i16 -81, i16 -79, i16 -76, i16 -73, i16 -70, i16 -67, i16 -63, i16 -60, i16 -56, i16 -52, i16 -49, i16 -45, i16 -41, i16 -37, i16 -34, i16 -30, i16 -27, i16 -24, i16 -21, i16 -18, i16 -15, i16 -13, i16 -10, i16 -9, i16 -7, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 4, i16 5, i16 7, i16 8, i16 10, i16 12, i16 15, i16 17, i16 20, i16 23, i16 26, i16 29, i16 32, i16 35, i16 39, i16 42, i16 46, i16 49, i16 52, i16 55, i16 58, i16 61, i16 64, i16 67, i16 69, i16 71, i16 73, i16 74, i16 76, i16 76, i16 77, i16 14259, i16 77, i16 76, i16 76, i16 74, i16 73, i16 71, i16 69, i16 67, i16 64, i16 61, i16 58, i16 55, i16 52, i16 49, i16 46, i16 42, i16 39, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 17, i16 15, i16 12, i16 10, i16 8, i16 7, i16 5, i16 4, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_2D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -3, i16 -3, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -2, i16 -1, i16 1, i16 3, i16 5, i16 7, i16 10, i16 13, i16 16, i16 19, i16 22, i16 24, i16 26, i16 27, i16 28, i16 27, i16 25, i16 21, i16 16, i16 9, i16 1, i16 -10, i16 -22, i16 -35, i16 -50, i16 -67, i16 -84, i16 -102, i16 -121, i16 -139, i16 -158, i16 -176, i16 -192, i16 -208, i16 -222, i16 -233, i16 -243, i16 -249, i16 -254, i16 20905, i16 -254, i16 -249, i16 -243, i16 -233, i16 -222, i16 -208, i16 -192, i16 -176, i16 -158, i16 -139, i16 -121, i16 -102, i16 -84, i16 -67, i16 -50, i16 -35, i16 -22, i16 -10, i16 1, i16 9, i16 16, i16 21, i16 25, i16 27, i16 28, i16 27, i16 26, i16 24, i16 22, i16 19, i16 16, i16 13, i16 10, i16 7, i16 5, i16 3, i16 1, i16 -1, i16 -2, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -3, i16 -3], [101 x i16] [i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 10, i16 10, i16 11, i16 11, i16 11, i16 10, i16 8, i16 6, i16 3, i16 0, i16 -4, i16 -9, i16 -15, i16 -21, i16 -28, i16 -35, i16 -42, i16 -50, i16 -58, i16 -65, i16 -72, i16 -79, i16 -86, i16 -91, i16 -96, i16 -100, i16 -103, i16 -104, i16 18220, i16 -104, i16 -103, i16 -100, i16 -96, i16 -91, i16 -86, i16 -79, i16 -72, i16 -65, i16 -58, i16 -50, i16 -42, i16 -35, i16 -28, i16 -21, i16 -15, i16 -9, i16 -4, i16 0, i16 3, i16 6, i16 8, i16 10, i16 11, i16 11, i16 11, i16 10, i16 10, i16 9, i16 8, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1], [101 x i16] [i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -17, i16 -20, i16 -24, i16 -27, i16 -30, i16 -33, i16 -34, i16 -34, i16 -33, i16 -31, i16 -26, i16 -20, i16 -12, i16 -2, i16 11, i16 25, i16 41, i16 59, i16 79, i16 100, i16 122, i16 144, i16 166, i16 189, i16 210, i16 230, i16 249, i16 265, i16 279, i16 290, i16 298, i16 303, i16 10885, i16 303, i16 298, i16 290, i16 279, i16 265, i16 249, i16 230, i16 210, i16 189, i16 166, i16 144, i16 122, i16 100, i16 79, i16 59, i16 41, i16 25, i16 11, i16 -2, i16 -12, i16 -20, i16 -26, i16 -31, i16 -33, i16 -34, i16 -34, i16 -33, i16 -30, i16 -27, i16 -24, i16 -20, i16 -17, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2]], align 16
@_ZL14third_order_2D = internal unnamed_addr constant [4 x [101 x i16]] [[101 x i16] [i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 4, i16 3, i16 2, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -16, i16 -18, i16 -20, i16 -20, i16 -18, i16 -15, i16 -10, i16 -3, i16 6, i16 16, i16 26, i16 37, i16 47, i16 56, i16 62, i16 64, i16 63, i16 57, i16 45, i16 27, i16 3, i16 -26, i16 -60, i16 -98, i16 -140, i16 -183, i16 -226, i16 -268, i16 -307, i16 -342, i16 -370, i16 -391, i16 -404, i16 21262, i16 -404, i16 -391, i16 -370, i16 -342, i16 -307, i16 -268, i16 -226, i16 -183, i16 -140, i16 -98, i16 -60, i16 -26, i16 3, i16 27, i16 45, i16 57, i16 63, i16 64, i16 62, i16 56, i16 47, i16 37, i16 26, i16 16, i16 6, i16 -3, i16 -10, i16 -15, i16 -18, i16 -20, i16 -20, i16 -18, i16 -16, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 2, i16 3, i16 4, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0], [101 x i16] [i16 0, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -9, i16 -11, i16 -13, i16 -14, i16 -14, i16 -13, i16 -10, i16 -7, i16 -2, i16 4, i16 10, i16 18, i16 25, i16 32, i16 38, i16 42, i16 44, i16 43, i16 39, i16 30, i16 18, i16 2, i16 -18, i16 -41, i16 -68, i16 -96, i16 -126, i16 -155, i16 -184, i16 -211, i16 -234, i16 -254, i16 -268, i16 -277, i16 19741, i16 -277, i16 -268, i16 -254, i16 -234, i16 -211, i16 -184, i16 -155, i16 -126, i16 -96, i16 -68, i16 -41, i16 -18, i16 2, i16 18, i16 30, i16 39, i16 43, i16 44, i16 42, i16 38, i16 32, i16 25, i16 18, i16 10, i16 4, i16 -2, i16 -7, i16 -10, i16 -13, i16 -14, i16 -14, i16 -13, i16 -11, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 0], [101 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 1, i16 0, i16 -2, i16 -4, i16 -6, i16 -8, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -6, i16 -1, i16 5, i16 12, i16 20, i16 29, i16 38, i16 47, i16 56, i16 64, i16 71, i16 77, i16 82, i16 84, i16 15409, i16 84, i16 82, i16 77, i16 71, i16 64, i16 56, i16 47, i16 38, i16 29, i16 20, i16 12, i16 5, i16 -1, i16 -6, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -8, i16 -6, i16 -4, i16 -2, i16 0, i16 1, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 20, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -97, i16 -101, i16 -99, i16 -89, i16 -71, i16 -43, i16 -7, i16 39, i16 92, i16 151, i16 215, i16 282, i16 350, i16 415, i16 475, i16 528, i16 572, i16 605, i16 625, i16 8926, i16 625, i16 605, i16 572, i16 528, i16 475, i16 415, i16 350, i16 282, i16 215, i16 151, i16 92, i16 39, i16 -7, i16 -43, i16 -71, i16 -89, i16 -99, i16 -101, i16 -97, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 20, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2]], align 16
@_ZTV17CAmbisonicSpeaker = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicSpeaker to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)* @_ZN17CAmbisonicSpeaker9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeaker7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV17CAmbisonicDecoder = unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicDecoder to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder7RefreshEv to i8*), i8* bitcast (float (%class.CAmbisonicDecoder*, i32, i32)* @_ZN17CAmbisonicDecoder14GetCoefficientEjj to i8*)] }, align 8
@_ZTV16CAmbisonicZoomer = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicZoomer to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicZoomer*, i32, i1, i32)* @_ZN16CAmbisonicZoomer9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer7RefreshEv to i8*)] }, align 8
@_ZTV22CAmbisonicBinauralizer = unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22CAmbisonicBinauralizer to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer7RefreshEv to i8*), i8* bitcast (i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)* @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv to i8*)] }, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"Getting first order cube\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Getting second/third order dodecahedron\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"samples/lectureSample.wav\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"samples/radioMusicSample.wav\00", align 1
@_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ14rotatorSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ11zoomSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c" <number of size 1024 blocks to process> \00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"<optional: encode/decode>\0A\00", align 1
@.str.9 = private unnamed_addr constant [122 x i8] c"Note: If you want to hear the output sound, limit the process sample blocks so that the output is not longer than input!\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"output.wav\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS8MIT_HRTF = constant [10 x i8] c"8MIT_HRTF\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS4HRTF = linkonce_odr constant [6 x i8] c"4HRTF\00", comdat, align 1
@_ZTI4HRTF = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZTS4HRTF, i32 0, i32 0) }, comdat, align 8
@_ZTI8MIT_HRTF = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8MIT_HRTF, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*) }, align 8
@_ZTS14CAmbisonicBase = constant [17 x i8] c"14CAmbisonicBase\00", align 1
@_ZTI14CAmbisonicBase = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14CAmbisonicBase, i32 0, i32 0) }, align 8
@_ZTS16CAmbisonicSource = constant [19 x i8] c"16CAmbisonicSource\00", align 1
@_ZTI16CAmbisonicSource = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicSource, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS8CBFormat = constant [10 x i8] c"8CBFormat\00", align 1
@_ZTI8CBFormat = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8CBFormat, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicEncoder = constant [20 x i8] c"17CAmbisonicEncoder\00", align 1
@_ZTI17CAmbisonicEncoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicEncoder, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS21CAmbisonicEncoderDist = constant [24 x i8] c"21CAmbisonicEncoderDist\00", align 1
@_ZTI21CAmbisonicEncoderDist = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS21CAmbisonicEncoderDist, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*) }, align 8
@_ZTS19CAmbisonicProcessor = constant [22 x i8] c"19CAmbisonicProcessor\00", align 1
@_ZTI19CAmbisonicProcessor = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS19CAmbisonicProcessor, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicSpeaker = constant [20 x i8] c"17CAmbisonicSpeaker\00", align 1
@_ZTI17CAmbisonicSpeaker = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicSpeaker, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS17CAmbisonicDecoder = constant [20 x i8] c"17CAmbisonicDecoder\00", align 1
@_ZTI17CAmbisonicDecoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicDecoder, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS16CAmbisonicZoomer = constant [19 x i8] c"16CAmbisonicZoomer\00", align 1
@_ZTI16CAmbisonicZoomer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicZoomer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS22CAmbisonicBinauralizer = constant [25 x i8] c"22CAmbisonicBinauralizer\00", align 1
@_ZTI22CAmbisonicBinauralizer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22CAmbisonicBinauralizer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZL14third_order_3D = internal unnamed_addr constant <{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }> <{ [101 x i16] [i16 1, i16 3, i16 4, i16 5, i16 6, i16 8, i16 8, i16 8, i16 8, i16 7, i16 5, i16 1, i16 -3, i16 -8, i16 -15, i16 -21, i16 -28, i16 -34, i16 -38, i16 -41, i16 -41, i16 -38, i16 -31, i16 -20, i16 -5, i16 13, i16 33, i16 56, i16 78, i16 99, i16 117, i16 130, i16 136, i16 133, i16 120, i16 95, i16 57, i16 8, i16 -54, i16 -126, i16 -206, i16 -294, i16 -384, i16 -476, i16 -564, i16 -646, i16 -718, i16 -778, i16 -823, i16 -850, i16 26604, i16 -850, i16 -823, i16 -778, i16 -718, i16 -646, i16 -564, i16 -476, i16 -384, i16 -294, i16 -206, i16 -126, i16 -54, i16 8, i16 57, i16 95, i16 120, i16 133, i16 136, i16 130, i16 117, i16 99, i16 78, i16 56, i16 33, i16 13, i16 -5, i16 -20, i16 -31, i16 -38, i16 -41, i16 -41, i16 -38, i16 -34, i16 -28, i16 -21, i16 -15, i16 -8, i16 -3, i16 1, i16 5, i16 7, i16 8, i16 8, i16 8, i16 8, i16 6, i16 5, i16 4, i16 3, i16 1], [101 x i16] [i16 1, i16 2, i16 2, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 1, i16 -2, i16 -6, i16 -10, i16 -14, i16 -18, i16 -22, i16 -25, i16 -27, i16 -27, i16 -25, i16 -20, i16 -13, i16 -4, i16 8, i16 22, i16 36, i16 51, i16 65, i16 77, i16 85, i16 89, i16 87, i16 78, i16 62, i16 37, i16 5, i16 -35, i16 -82, i16 -135, i16 -192, i16 -252, i16 -311, i16 -369, i16 -423, i16 -470, i16 -509, i16 -538, i16 -556, i16 23082, i16 -556, i16 -538, i16 -509, i16 -470, i16 -423, i16 -369, i16 -311, i16 -252, i16 -192, i16 -135, i16 -82, i16 -35, i16 5, i16 37, i16 62, i16 78, i16 87, i16 89, i16 85, i16 77, i16 65, i16 51, i16 36, i16 22, i16 8, i16 -4, i16 -13, i16 -20, i16 -25, i16 -27, i16 -27, i16 -25, i16 -22, i16 -18, i16 -14, i16 -10, i16 -6, i16 -2, i16 1, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 2, i16 2, i16 1], <{ [89 x i16], [12 x i16] }> <{ [89 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 1, i16 0, i16 -2, i16 -5, i16 -8, i16 -11, i16 -14, i16 -17, i16 -20, i16 -23, i16 -25, i16 -27, i16 -29, i16 -30, i16 16773, i16 -30, i16 -29, i16 -27, i16 -25, i16 -23, i16 -20, i16 -17, i16 -14, i16 -11, i16 -8, i16 -5, i16 -2, i16 0, i16 1, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [12 x i16] zeroinitializer }>, [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 19, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -96, i16 -101, i16 -98, i16 -88, i16 -70, i16 -43, i16 -7, i16 38, i16 91, i16 150, i16 214, i16 280, i16 347, i16 412, i16 472, i16 525, i16 568, i16 601, i16 621, i16 8977, i16 621, i16 601, i16 568, i16 525, i16 472, i16 412, i16 347, i16 280, i16 214, i16 150, i16 91, i16 38, i16 -7, i16 -43, i16 -70, i16 -88, i16 -98, i16 -101, i16 -96, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 19, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2] }>, align 16
@.str.12 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]
@str = private unnamed_addr constant [35 x i8] c"Binauralizer Configuration failed!\00", align 1

@_ZN8MIT_HRTFC1Ej = unnamed_addr alias void (%class.MIT_HRTF*, i32), void (%class.MIT_HRTF*, i32)* @_ZN8MIT_HRTFC2Ej
@_ZN16CAmbisonicSourceC1Ev = unnamed_addr alias void (%class.CAmbisonicSource*), void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceC2Ev
@_ZN8CBFormatC1Ev = unnamed_addr alias void (%class.CBFormat*), void (%class.CBFormat*)* @_ZN8CBFormatC2Ev
@_ZN17CAmbisonicEncoderC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderC2Ev
@_ZN17CAmbisonicEncoderD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev
@_ZN21CAmbisonicEncoderDistC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistC2Ev
@_ZN21CAmbisonicEncoderDistD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev
@_ZN19CAmbisonicProcessorC1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorC2Ev
@_ZN19CAmbisonicProcessorD1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev
@_ZN17CAmbisonicSpeakerC1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerC2Ev
@_ZN17CAmbisonicSpeakerD1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev
@_ZN17CAmbisonicDecoderC1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderC2Ev
@_ZN17CAmbisonicDecoderD1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev
@_ZN16CAmbisonicZoomerC1Ev = unnamed_addr alias void (%class.CAmbisonicZoomer*), void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerC2Ev
@_ZN22CAmbisonicBinauralizerC1Ev = unnamed_addr alias void (%class.CAmbisonicBinauralizer*), void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerC2Ev
@_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1), void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1)* @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
@_ZN12ILLIXR_AUDIO5SoundD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*), void (%"class.ILLIXR_AUDIO::Sound"*)* @_ZN12ILLIXR_AUDIO5SoundD2Ev
@_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32), void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32)* @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
@_ZN12ILLIXR_AUDIO7ABAudioD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*), void (%"class.ILLIXR_AUDIO::ABAudio"*)* @_ZN12ILLIXR_AUDIO7ABAudioD2Ev

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define void @_ZN8MIT_HRTFC2Ej(%class.MIT_HRTF* nocapture %this, i32 %i_sampleRate) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 0
  %i_sampleRate2.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  store i32 %i_sampleRate, i32* %i_sampleRate2.i, align 8, !tbaa !34
  %i_len.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  store i32 0, i32* %i_len.i, align 4, !tbaa !39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %call = tail call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %i_sampleRate) #24
  store i32 %call, i32* %i_len.i, align 4, !tbaa !39
  ret void
}

declare i32 @mit_hrtf_availability(i32, i32, i32) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN8MIT_HRTF3getEffPPf(%class.MIT_HRTF* nocapture readonly %this, float %f_azimuth, float %f_elevation, float** nocapture readonly %pfHRTF) unnamed_addr #3 align 2 {
entry:
  %nAzimuth = alloca i32, align 4
  %nElevation = alloca i32, align 4
  %0 = bitcast i32* %nAzimuth to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24
  %sub = fsub fast float -0.000000e+00, %f_azimuth
  %call = tail call fast float @_Z16RadiansToDegreesf(float %sub) #24
  %conv = fptosi float %call to i32
  %cmp = icmp sgt i32 %conv, 180
  %sub2 = add nsw i32 %conv, -360
  %spec.select = select i1 %cmp, i32 %sub2, i32 %conv
  store i32 %spec.select, i32* %nAzimuth, align 4, !tbaa !42
  %1 = bitcast i32* %nElevation to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #24
  %call3 = tail call fast float @_Z16RadiansToDegreesf(float %f_elevation) #24
  %conv4 = fptosi float %call3 to i32
  store i32 %conv4, i32* %nElevation, align 4, !tbaa !42
  %i_len = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  %2 = load i32, i32* %i_len, align 4, !tbaa !39
  %conv5 = zext i32 %2 to i64
  %cmp.i.i.i.i = icmp eq i32 %2, 0
  br i1 %cmp.i.i.i.i, label %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63, label %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit

_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit:               ; preds = %entry
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv5, 1
  %call2.i.i.i.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #24
  %3 = bitcast i8* %call2.i.i.i.i.i.i to i16*
  %4 = shl nuw nsw i64 %conv5, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i.i.i, i8 0, i64 %4, i1 false) #24
  %.pr = load i32, i32* %i_len, align 4, !tbaa !39
  %conv7 = zext i32 %.pr to i64
  %cmp.i.i.i.i51 = icmp eq i32 %.pr, 0
  br i1 %cmp.i.i.i.i51, label %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63, label %for.body.i.i.preheader.i.i.i.i.i61

for.body.i.i.preheader.i.i.i.i.i61:               ; preds = %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit
  %mul.i.i.i.i.i.i52 = shl nuw nsw i64 %conv7, 1
  %call2.i.i.i.i.i.i53 = tail call i8* @_Znwm(i64 %mul.i.i.i.i.i.i52) #24
  %5 = bitcast i8* %call2.i.i.i.i.i.i53 to i16*
  %6 = shl nuw nsw i64 %conv7, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i.i.i53, i8 0, i64 %6, i1 false) #24
  br label %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63

_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63:             ; preds = %for.body.i.i.preheader.i.i.i.i.i61, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit, %entry
  %7 = phi i16* [ %5, %for.body.i.i.preheader.i.i.i.i.i61 ], [ null, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit ], [ null, %entry ]
  %8 = phi i8* [ %call2.i.i.i.i.i.i53, %for.body.i.i.preheader.i.i.i.i.i61 ], [ null, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit ], [ null, %entry ]
  %9 = phi i16* [ %3, %for.body.i.i.preheader.i.i.i.i.i61 ], [ %3, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit ], [ null, %entry ]
  %10 = phi i8* [ %call2.i.i.i.i.i.i, %for.body.i.i.preheader.i.i.i.i.i61 ], [ %call2.i.i.i.i.i.i, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit ], [ null, %entry ]
  %i_sampleRate = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  %11 = load i32, i32* %i_sampleRate, align 8, !tbaa !34
  %call12 = call i32 @mit_hrtf_get(i32* nonnull %nAzimuth, i32* nonnull %nElevation, i32 %11, i16* %9, i16* %7) #24
  %cmp13 = icmp eq i32 %call12, 0
  br i1 %cmp13, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63
  %12 = load i32, i32* %i_len, align 4, !tbaa !39
  %cmp1764 = icmp eq i32 %12, 0
  br i1 %cmp1764, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = load float*, float** %pfHRTF, align 8, !tbaa !43
  %arrayidx31 = getelementptr inbounds float*, float** %pfHRTF, i64 1
  %14 = load float*, float** %arrayidx31, align 8, !tbaa !43
  %15 = zext i32 %12 to i64
  %xtraiter = and i64 %15, 1
  %16 = icmp eq i32 %12, 1
  br i1 %16, label %if.then.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub nsw i64 %15, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.1, %for.body ]
  %add.ptr.i48 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv
  %17 = load i16, i16* %add.ptr.i48, align 2, !tbaa !45
  %conv22 = sitofp i16 %17 to float
  %div = fmul fast float %conv22, 0x3F00002000000000
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  store float %div, float* %arrayidx24, align 4, !tbaa !47
  %add.ptr.i = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %18 = load i16, i16* %add.ptr.i, align 2, !tbaa !45
  %conv29 = sitofp i16 %18 to float
  %div30 = fmul fast float %conv29, 0x3F00002000000000
  %arrayidx33 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  store float %div30, float* %arrayidx33, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.i48.1 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv.next
  %19 = load i16, i16* %add.ptr.i48.1, align 2, !tbaa !45
  %conv22.1 = sitofp i16 %19 to float
  %div.1 = fmul fast float %conv22.1, 0x3F00002000000000
  %arrayidx24.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next
  store float %div.1, float* %arrayidx24.1, align 4, !tbaa !47
  %add.ptr.i.1 = getelementptr inbounds i16, i16* %7, i64 %indvars.iv.next
  %20 = load i16, i16* %add.ptr.i.1, align 2, !tbaa !45
  %conv29.1 = sitofp i16 %20 to float
  %div30.1 = fmul fast float %conv29.1, 0x3F00002000000000
  %arrayidx33.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next
  store float %div30.1, float* %arrayidx33.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %if.then.i.i.i.loopexit.unr-lcssa, label %for.body

cleanup:                                          ; preds = %for.cond.preheader, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63
  %retval.0 = phi i1 [ false, %_ZNSt6vectorIsSaIsEEC2EmRKS0_.exit63 ], [ true, %for.cond.preheader ]
  %tobool.i.i.i = icmp eq i16* %7, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIsSaIsEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i.loopexit.unr-lcssa:                 ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %if.then.i.i.i, label %for.body.epil

for.body.epil:                                    ; preds = %if.then.i.i.i.loopexit.unr-lcssa
  %add.ptr.i48.epil = getelementptr inbounds i16, i16* %9, i64 %indvars.iv.unr
  %21 = load i16, i16* %add.ptr.i48.epil, align 2, !tbaa !45
  %conv22.epil = sitofp i16 %21 to float
  %div.epil = fmul fast float %conv22.epil, 0x3F00002000000000
  %arrayidx24.epil = getelementptr inbounds float, float* %13, i64 %indvars.iv.unr
  store float %div.epil, float* %arrayidx24.epil, align 4, !tbaa !47
  %add.ptr.i.epil = getelementptr inbounds i16, i16* %7, i64 %indvars.iv.unr
  %22 = load i16, i16* %add.ptr.i.epil, align 2, !tbaa !45
  %conv29.epil = sitofp i16 %22 to float
  %div30.epil = fmul fast float %conv29.epil, 0x3F00002000000000
  %arrayidx33.epil = getelementptr inbounds float, float* %14, i64 %indvars.iv.unr
  store float %div30.epil, float* %arrayidx33.epil, align 4, !tbaa !47
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.epil, %if.then.i.i.i.loopexit.unr-lcssa, %cleanup
  %retval.078 = phi i1 [ %retval.0, %cleanup ], [ true, %if.then.i.i.i.loopexit.unr-lcssa ], [ true, %for.body.epil ]
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit

_ZNSt6vectorIsSaIsEED2Ev.exit:                    ; preds = %if.then.i.i.i, %cleanup
  %retval.079 = phi i1 [ %retval.0, %cleanup ], [ %retval.078, %if.then.i.i.i ]
  %tobool.i.i.i.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i.1, label %_ZNSt6vectorIsSaIsEED2Ev.exit.1, label %if.then.i.i.i.1

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit.1

_ZNSt6vectorIsSaIsEED2Ev.exit.1:                  ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIsSaIsEED2Ev.exit
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  ret i1 %retval.079
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare float @_Z16RadiansToDegreesf(float) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @mit_hrtf_get(i32*, i32*, i32, i16*, i16*) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14CAmbisonicBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 0, i32* %m_nOrder, align 8, !tbaa !49
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 0, i8* %m_b3D, align 4, !tbaa !52
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 0, i32* %m_nChannelCount, align 8, !tbaa !53
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 5
  store i8 0, i8* %m_bOpt, align 4, !tbaa !54
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase8GetOrderEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nOrder, align 8, !tbaa !49
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN14CAmbisonicBase9GetHeightEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  %0 = load i8, i8* %m_b3D, align 4, !tbaa !52, !range !55
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase15GetChannelCountEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nChannelCount, align 8, !tbaa !53
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* nocapture %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %frombool = zext i1 %b3D to i8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 %nOrder, i32* %m_nOrder, align 8, !tbaa !49
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 %frombool, i8* %m_b3D, align 4, !tbaa !52
  %call = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 %call, i32* %m_nChannelCount, align 8, !tbaa !53
  ret i1 true
}

declare i32 @_Z17OrderToComponentsjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %fDistance = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false)
  store float 1.000000e+00, float* %fDistance, align 8, !tbaa !56
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float 1.000000e+00, float* %m_fGain, align 4, !tbaa !60
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp5 = alloca float, align 4
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !52
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !53
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %conv = zext i32 %call.i to i64
  %3 = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp, align 4, !tbaa !47
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !61
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !63
  %sub.ptr.sub.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %8 = inttoptr i64 %7 to float*
  %9 = inttoptr i64 %5 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff, float* %9, i64 %sub.i, float* nonnull dereferenceable(4) %ref.tmp) #24
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.else.i:                                        ; preds = %entry
  %cmp6.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp6.i, label %if.then7.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.then7.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %conv
  %tobool.i.i = icmp eq float* %add.ptr.i, %9
  br i1 %tobool.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then7.i
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit:            ; preds = %if.then.i.i, %if.then7.i, %if.else.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !49
  %add = add i32 %10, 1
  %conv4 = zext i32 %add to i64
  %11 = bitcast float* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5, align 4, !tbaa !47
  %_M_finish.i.i6 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !61
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !63
  %sub.ptr.sub.i.i7 = sub i64 %13, %15
  %sub.ptr.div.i.i8 = ashr exact i64 %sub.ptr.sub.i.i7, 2
  %cmp.i9 = icmp ult i64 %sub.ptr.div.i.i8, %conv4
  %16 = inttoptr i64 %15 to float*
  %17 = inttoptr i64 %13 to float*
  br i1 %cmp.i9, label %if.then.i11, label %if.else.i13

if.then.i11:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %sub.i10 = sub nsw i64 %conv4, %sub.ptr.div.i.i8
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights, float* %17, i64 %sub.i10, float* nonnull dereferenceable(4) %ref.tmp5) #24
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit18

if.else.i13:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %cmp6.i12 = icmp ugt i64 %sub.ptr.div.i.i8, %conv4
  br i1 %cmp6.i12, label %if.then7.i16, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit18

if.then7.i16:                                     ; preds = %if.else.i13
  %add.ptr.i14 = getelementptr inbounds float, float* %16, i64 %conv4
  %tobool.i.i15 = icmp eq float* %add.ptr.i14, %17
  br i1 %tobool.i.i15, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit18, label %if.then.i.i17

if.then.i.i17:                                    ; preds = %if.then7.i16
  store float* %add.ptr.i14, float** %_M_finish.i.i6, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit18

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit18:          ; preds = %if.then.i.i17, %if.then7.i16, %if.else.i13, %if.then.i11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicSource5ResetEv(%class.CAmbisonicSource* nocapture %this) unnamed_addr #7 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* readonly %this) unnamed_addr #8 align 2 {
entry:
  %fAzimuth = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 0
  %0 = load float, float* %fAzimuth, align 8, !tbaa !64
  %1 = tail call fast float @llvm.cos.f32(float %0)
  %2 = tail call fast float @llvm.sin.f32(float %0)
  %fElevation = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 1
  %3 = load float, float* %fElevation, align 4, !tbaa !65
  %4 = tail call fast float @llvm.cos.f32(float %3)
  %5 = tail call fast float @llvm.sin.f32(float %3)
  %mul = fmul fast float %0, 2.000000e+00
  %6 = tail call fast float @llvm.cos.f32(float %mul)
  %7 = tail call fast float @llvm.sin.f32(float %mul)
  %mul14 = fmul fast float %3, 2.000000e+00
  %8 = tail call fast float @llvm.sin.f32(float %mul14)
  %9 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  %10 = load i8, i8* %9, align 4, !tbaa !52, !range !55
  %tobool = icmp eq i8 %10, 0
  %11 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4, !tbaa !47
  %_M_start.i362 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load float*, float** %_M_start.i362, align 8, !tbaa !63
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4, !tbaa !47
  %17 = load i32, i32* %11, align 8, !tbaa !49
  %cmp170 = icmp eq i32 %17, 0
  %18 = bitcast i32 %14 to float
  br i1 %tobool, label %if.then163, label %if.then15

if.then15:                                        ; preds = %entry
  br i1 %cmp170, label %if.end223, label %if.end38

if.end38:                                         ; preds = %if.then15
  %mul21 = fmul fast float %4, %2
  %add.ptr.i361 = getelementptr inbounds float, float* %12, i64 1
  %19 = load float, float* %add.ptr.i361, align 4, !tbaa !47
  %mul24 = fmul fast float %mul21, %19
  %add.ptr.i359 = getelementptr inbounds float, float* %15, i64 1
  store float %mul24, float* %add.ptr.i359, align 4, !tbaa !47
  %20 = load float, float* %add.ptr.i361, align 4, !tbaa !47
  %mul29 = fmul fast float %20, %5
  %add.ptr.i355 = getelementptr inbounds float, float* %15, i64 2
  store float %mul29, float* %add.ptr.i355, align 4, !tbaa !47
  %mul32 = fmul fast float %4, %1
  %21 = load float, float* %add.ptr.i361, align 4, !tbaa !47
  %mul35 = fmul fast float %mul32, %21
  %add.ptr.i351 = getelementptr inbounds float, float* %15, i64 3
  store float %mul35, float* %add.ptr.i351, align 4, !tbaa !47
  %cmp40 = icmp eq i32 %17, 1
  br i1 %cmp40, label %if.end223, label %if.end83

if.end83:                                         ; preds = %if.end38
  %square275 = fmul fast float %4, %4
  %add.ptr.i349 = getelementptr inbounds float, float* %12, i64 2
  %22 = load float, float* %add.ptr.i349, align 4, !tbaa !47
  %mul43 = fmul fast float %square275, 0x3FEBB67AE0000000
  %mul44 = fmul fast float %mul43, %7
  %mul47 = fmul fast float %mul44, %22
  %add.ptr.i347 = getelementptr inbounds float, float* %15, i64 4
  store float %mul47, float* %add.ptr.i347, align 4, !tbaa !47
  %23 = load float, float* %add.ptr.i349, align 4, !tbaa !47
  %mul52 = fmul fast float %8, 0x3FEBB67AE0000000
  %mul53 = fmul fast float %mul52, %2
  %mul56 = fmul fast float %mul53, %23
  %add.ptr.i343 = getelementptr inbounds float, float* %15, i64 5
  store float %mul56, float* %add.ptr.i343, align 4, !tbaa !47
  %square276 = fmul fast float %5, %5
  %mul59 = fmul fast float %square276, 1.500000e+00
  %sub = fadd fast float %mul59, -5.000000e-01
  %24 = load float, float* %add.ptr.i349, align 4, !tbaa !47
  %mul62 = fmul fast float %24, %sub
  %add.ptr.i339 = getelementptr inbounds float, float* %15, i64 6
  store float %mul62, float* %add.ptr.i339, align 4, !tbaa !47
  %25 = load float, float* %add.ptr.i349, align 4, !tbaa !47
  %mul68 = fmul fast float %mul52, %1
  %mul71 = fmul fast float %mul68, %25
  %add.ptr.i335 = getelementptr inbounds float, float* %15, i64 7
  store float %mul71, float* %add.ptr.i335, align 4, !tbaa !47
  %26 = load float, float* %add.ptr.i349, align 4, !tbaa !47
  %mul77 = fmul fast float %mul43, %6
  %mul80 = fmul fast float %mul77, %26
  %add.ptr.i331 = getelementptr inbounds float, float* %15, i64 8
  store float %mul80, float* %add.ptr.i331, align 4, !tbaa !47
  %cmp85 = icmp ugt i32 %17, 2
  br i1 %cmp85, label %if.then86, label %if.end223

if.then86:                                        ; preds = %if.end83
  %27 = load float, float* %fAzimuth, align 8, !tbaa !64
  %mul90 = fmul fast float %27, 3.000000e+00
  %28 = tail call fast float @llvm.sin.f32(float %mul90)
  %29 = fmul fast float %square275, %4
  %add.ptr.i329 = getelementptr inbounds float, float* %12, i64 3
  %30 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul91 = fmul fast float %29, 0x3FE94C5840000000
  %mul92 = fmul fast float %mul91, %30
  %mul95 = fmul fast float %mul92, %28
  %add.ptr.i327 = getelementptr inbounds float, float* %15, i64 9
  store float %mul95, float* %add.ptr.i327, align 4, !tbaa !47
  %31 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul100 = fmul fast float %5, 0x3FFEFBDEC0000000
  %mul101 = fmul fast float %mul100, %7
  %mul102 = fmul fast float %mul101, %square275
  %mul105 = fmul fast float %mul102, %31
  %add.ptr.i323 = getelementptr inbounds float, float* %15, i64 10
  store float %mul105, float* %add.ptr.i323, align 4, !tbaa !47
  %mul110 = fmul fast float %square276, 5.000000e+00
  %sub111 = fadd fast float %mul110, -1.000000e+00
  %32 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul112 = fmul fast float %mul21, 0x3FE3988E20000000
  %mul113 = fmul fast float %mul112, %sub111
  %mul116 = fmul fast float %mul113, %32
  %add.ptr.i319 = getelementptr inbounds float, float* %15, i64 11
  store float %mul116, float* %add.ptr.i319, align 4, !tbaa !47
  %sub120 = fadd fast float %mul110, -3.000000e+00
  %33 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul121 = fmul fast float %5, 5.000000e-01
  %mul122 = fmul fast float %mul121, %sub120
  %mul125 = fmul fast float %mul122, %33
  %add.ptr.i315 = getelementptr inbounds float, float* %15, i64 12
  store float %mul125, float* %add.ptr.i315, align 4, !tbaa !47
  %34 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul132 = fmul fast float %mul32, 0x3FE3988E20000000
  %mul133 = fmul fast float %mul132, %sub111
  %mul136 = fmul fast float %mul133, %34
  %add.ptr.i311 = getelementptr inbounds float, float* %15, i64 13
  store float %mul136, float* %add.ptr.i311, align 4, !tbaa !47
  %35 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul142 = fmul fast float %mul100, %6
  %mul143 = fmul fast float %mul142, %square275
  %mul146 = fmul fast float %mul143, %35
  %add.ptr.i307 = getelementptr inbounds float, float* %15, i64 14
  store float %mul146, float* %add.ptr.i307, align 4, !tbaa !47
  %36 = load float, float* %fAzimuth, align 8, !tbaa !64
  %mul152 = fmul fast float %36, 3.000000e+00
  %37 = tail call fast float @llvm.cos.f32(float %mul152)
  %38 = load float, float* %add.ptr.i329, align 4, !tbaa !47
  %mul154 = fmul fast float %mul91, %38
  %mul157 = fmul fast float %mul154, %37
  %add.ptr.i303 = getelementptr inbounds float, float* %15, i64 15
  store float %mul157, float* %add.ptr.i303, align 4, !tbaa !47
  br label %if.end223

if.then163:                                       ; preds = %entry
  br i1 %cmp170, label %if.end223, label %if.end184

if.end184:                                        ; preds = %if.then163
  %mul172 = fmul fast float %4, %1
  %add.ptr.i301 = getelementptr inbounds float, float* %12, i64 1
  %39 = load float, float* %add.ptr.i301, align 4, !tbaa !47
  %mul175 = fmul fast float %mul172, %39
  %add.ptr.i299 = getelementptr inbounds float, float* %15, i64 1
  store float %mul175, float* %add.ptr.i299, align 4, !tbaa !47
  %mul178 = fmul fast float %4, %2
  %40 = load float, float* %add.ptr.i301, align 4, !tbaa !47
  %mul181 = fmul fast float %mul178, %40
  %add.ptr.i295 = getelementptr inbounds float, float* %15, i64 2
  store float %mul181, float* %add.ptr.i295, align 4, !tbaa !47
  %cmp186 = icmp eq i32 %17, 1
  br i1 %cmp186, label %if.end223, label %if.end200

if.end200:                                        ; preds = %if.end184
  %square271 = fmul fast float %4, %4
  %mul188 = fmul fast float %square271, %6
  %add.ptr.i293 = getelementptr inbounds float, float* %12, i64 2
  %41 = load float, float* %add.ptr.i293, align 4, !tbaa !47
  %mul191 = fmul fast float %mul188, %41
  %add.ptr.i291 = getelementptr inbounds float, float* %15, i64 3
  store float %mul191, float* %add.ptr.i291, align 4, !tbaa !47
  %mul194 = fmul fast float %square271, %7
  %42 = load float, float* %add.ptr.i293, align 4, !tbaa !47
  %mul197 = fmul fast float %mul194, %42
  %add.ptr.i287 = getelementptr inbounds float, float* %15, i64 4
  store float %mul197, float* %add.ptr.i287, align 4, !tbaa !47
  %cmp202 = icmp ugt i32 %17, 2
  br i1 %cmp202, label %if.then203, label %if.end223

if.then203:                                       ; preds = %if.end200
  %43 = load float, float* %fAzimuth, align 8, !tbaa !64
  %mul206 = fmul fast float %43, 3.000000e+00
  %44 = tail call fast float @llvm.cos.f32(float %mul206)
  %45 = fmul fast float %square271, %4
  %add.ptr.i285 = getelementptr inbounds float, float* %12, i64 3
  %46 = load float, float* %add.ptr.i285, align 4, !tbaa !47
  %mul207 = fmul fast float %46, %45
  %mul210 = fmul fast float %mul207, %44
  %add.ptr.i283 = getelementptr inbounds float, float* %15, i64 5
  store float %mul210, float* %add.ptr.i283, align 4, !tbaa !47
  %47 = load float, float* %fAzimuth, align 8, !tbaa !64
  %mul215 = fmul fast float %47, 3.000000e+00
  %48 = tail call fast float @llvm.sin.f32(float %mul215)
  %49 = load float, float* %add.ptr.i285, align 4, !tbaa !47
  %mul216 = fmul fast float %49, %45
  %mul219 = fmul fast float %mul216, %48
  %add.ptr.i279 = getelementptr inbounds float, float* %15, i64 6
  store float %mul219, float* %add.ptr.i279, align 4, !tbaa !47
  br label %if.end223

if.end223:                                        ; preds = %if.then203, %if.end200, %if.end184, %if.then163, %if.then86, %if.end83, %if.end38, %if.then15
  %50 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  %51 = load i32, i32* %50, align 8, !tbaa !53
  %cmp224367 = icmp eq i32 %51, 0
  br i1 %cmp224367, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end223
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %52 = zext i32 %51 to i64
  %53 = load float, float* %m_fGain, align 4, !tbaa !60
  %mul227369 = fmul fast float %53, %18
  store float %mul227369, float* %15, align 4, !tbaa !47
  %cmp224370 = icmp eq i32 %51, 1
  br i1 %cmp224370, label %for.cond.cleanup, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.lr.ph
  %54 = add nsw i64 %52, -1
  %55 = add nsw i64 %52, -2
  %xtraiter = and i64 %54, 3
  %56 = icmp ult i64 %55, 3
  br i1 %56, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.for.body_crit_edge.preheader.new

for.body.for.body_crit_edge.preheader.new:        ; preds = %for.body.for.body_crit_edge.preheader
  %unroll_iter = sub nsw i64 %54, %xtraiter
  br label %for.body.for.body_crit_edge

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body.for.body_crit_edge, %for.body.for.body_crit_edge.preheader
  %indvars.iv.next371.unr = phi i64 [ 1, %for.body.for.body_crit_edge.preheader ], [ %indvars.iv.next.3, %for.body.for.body_crit_edge ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.body.for.body_crit_edge.epil

for.body.for.body_crit_edge.epil:                 ; preds = %for.body.for.body_crit_edge.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %indvars.iv.next371.epil = phi i64 [ %indvars.iv.next.epil, %for.body.for.body_crit_edge.epil ], [ %indvars.iv.next371.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.for.body_crit_edge.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %add.ptr.i.phi.trans.insert.epil = getelementptr inbounds float, float* %15, i64 %indvars.iv.next371.epil
  %.pre.epil = load float, float* %add.ptr.i.phi.trans.insert.epil, align 4, !tbaa !47
  %57 = load float, float* %m_fGain, align 4, !tbaa !60
  %add.ptr.i.epil = getelementptr inbounds float, float* %15, i64 %indvars.iv.next371.epil
  %mul227.epil = fmul fast float %.pre.epil, %57
  store float %mul227.epil, float* %add.ptr.i.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.next371.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.body.for.body_crit_edge.epil, !llvm.loop !66

for.cond.cleanup:                                 ; preds = %for.body.for.body_crit_edge.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.body.lr.ph, %if.end223
  ret void

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.for.body_crit_edge.preheader.new
  %indvars.iv.next371 = phi i64 [ 1, %for.body.for.body_crit_edge.preheader.new ], [ %indvars.iv.next.3, %for.body.for.body_crit_edge ]
  %niter = phi i64 [ %unroll_iter, %for.body.for.body_crit_edge.preheader.new ], [ %niter.nsub.3, %for.body.for.body_crit_edge ]
  %add.ptr.i.phi.trans.insert = getelementptr inbounds float, float* %15, i64 %indvars.iv.next371
  %.pre = load float, float* %add.ptr.i.phi.trans.insert, align 4, !tbaa !47
  %58 = load float, float* %m_fGain, align 4, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %15, i64 %indvars.iv.next371
  %mul227 = fmul fast float %.pre, %58
  store float %mul227, float* %add.ptr.i, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next371, 1
  %add.ptr.i.phi.trans.insert.1 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next
  %.pre.1 = load float, float* %add.ptr.i.phi.trans.insert.1, align 4, !tbaa !47
  %59 = load float, float* %m_fGain, align 4, !tbaa !60
  %add.ptr.i.1 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next
  %mul227.1 = fmul fast float %.pre.1, %59
  store float %mul227.1, float* %add.ptr.i.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next371, 2
  %add.ptr.i.phi.trans.insert.2 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next.1
  %.pre.2 = load float, float* %add.ptr.i.phi.trans.insert.2, align 4, !tbaa !47
  %60 = load float, float* %m_fGain, align 4, !tbaa !60
  %add.ptr.i.2 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next.1
  %mul227.2 = fmul fast float %.pre.2, %60
  store float %mul227.2, float* %add.ptr.i.2, align 4, !tbaa !47
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next371, 3
  %add.ptr.i.phi.trans.insert.3 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next.2
  %.pre.3 = load float, float* %add.ptr.i.phi.trans.insert.3, align 4, !tbaa !47
  %61 = load float, float* %m_fGain, align 4, !tbaa !60
  %add.ptr.i.3 = getelementptr inbounds float, float* %15, i64 %indvars.iv.next.2
  %mul227.3 = fmul fast float %.pre.3, %61
  store float %mul227.3, float* %add.ptr.i.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.next371, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.for.body_crit_edge
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.cos.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.sin.f32(float) #9

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* nocapture %this, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) unnamed_addr #10 align 2 {
entry:
  %polPosition.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %polPosition.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx to <2 x float>*
  store <2 x float> %polPosition.coerce0, <2 x float>* %polPosition.sroa.0.0..sroa_cast, align 8
  %polPosition.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  store float %polPosition.coerce1, float* %polPosition.sroa.2.0..sroa_idx3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly uwtable
define { <2 x float>, float } @_ZN16CAmbisonicSource11GetPositionEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %retval.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %retval.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %retval.sroa.0.0..sroa_idx to <2 x float>*
  %retval.sroa.0.0.copyload = load <2 x float>, <2 x float>* %retval.sroa.0.0..sroa_cast, align 8
  %retval.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %retval.sroa.2.0.copyload = load float, float* %retval.sroa.2.0..sroa_idx3, align 8
  %.fca.0.insert = insertvalue { <2 x float>, float } undef, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, float } %.fca.0.insert, float %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, float } %.fca.1.insert
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetOrderWeightEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder, float %fWeight) unnamed_addr #11 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !47
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource17SetOrderWeightAllEf(%class.CAmbisonicSource* nocapture readonly %this, float %fWeight) unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp6 = icmp eq i32 %1, -1
  br i1 %cmp6, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add = add nuw i32 %1, 1
  %3 = zext i32 %add to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %add.ptr.i = getelementptr inbounds float, float* %2, i64 %indvars.iv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetCoefficientEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel, float %fCoeff) unnamed_addr #11 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fCoeff, float* %add.ptr.i, align 4, !tbaa !47
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetOrderWeightEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !47
  ret float %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !47
  ret float %1
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource7SetGainEf(%class.CAmbisonicSource* nocapture %this, float %fGain) unnamed_addr #5 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float %fGain, float* %m_fGain, align 4, !tbaa !60
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource7GetGainEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %0 = load float, float* %m_fGain, align 4, !tbaa !60
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormatC2Ev(%class.CBFormat* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSamples to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN8CBFormat14GetSampleCountEv(%class.CBFormat* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleCount) unnamed_addr #3 align 2 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !52
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !53
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  store i32 %nSampleCount, i32* %m_nSamples, align 8, !tbaa !68
  %mul = mul i32 %call.i, %nSampleCount
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  store i32 %mul, i32* %m_nDataLength, align 4, !tbaa !73
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3
  %conv = zext i32 %mul to i64
  %_M_finish.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish.i.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !61
  %5 = bitcast %"class.std::vector.0"* %m_pfData to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !63
  %sub.ptr.sub.i.i = sub i64 %4, %6
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %7 = inttoptr i64 %6 to float*
  %8 = inttoptr i64 %4 to float*
  %9 = inttoptr i64 %6 to i8*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfData, i64 %sub.i) #24
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %m_pfData to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !63
  %.pre33 = load i32, i32* %m_nDataLength, align 4, !tbaa !73
  %.pre35 = zext i32 %.pre33 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %conv
  %tobool.i.i = icmp eq float* %add.ptr.i, %8
  br i1 %tobool.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then5.i
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then.i.i, %if.then5.i, %if.else.i, %if.then.i
  %conv9.pre-phi = phi i64 [ %.pre35, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ], [ %conv, %if.then.i.i ]
  %10 = phi i8* [ %.pre, %if.then.i ], [ %9, %if.else.i ], [ %9, %if.then5.i ], [ %9, %if.then.i.i ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %m_pfData, i64 0, i32 0, i32 0, i32 0, i32 0
  %mul10 = shl nuw nsw i64 %conv9.pre-phi, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %mul10, i1 false)
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4
  %11 = load i32, i32* %2, align 8, !tbaa !53
  %conv12 = zext i32 %11 to i64
  %12 = shl nuw nsw i64 %conv12, 3
  %call13 = tail call i8* @_Znam(i64 %12) #25
  %13 = ptrtoint i8* %call13 to i64
  %14 = bitcast %"class.std::unique_ptr"* %m_ppfChannels to i64*
  %15 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %m_ppfChannels, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load float**, float*** %15, align 8, !tbaa !43
  store i64 %13, i64* %14, align 8, !tbaa !43
  %cmp.i30 = icmp eq float** %16, null
  br i1 %cmp.i30, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %17 = bitcast float** %16 to i8*
  tail call void @_ZdaPv(i8* %17) #25
  %.pre34 = load i32, i32* %2, align 8, !tbaa !53
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %18 = phi i32 [ %11, %_ZNSt6vectorIfSaIfEE6resizeEm.exit ], [ %.pre34, %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i ]
  %cmp31 = icmp eq i32 %18, 0
  br i1 %cmp31, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit
  %19 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %20 = zext i32 %18 to i64
  %21 = add nsw i64 %20, -1
  %xtraiter = and i64 %20, 3
  %22 = icmp ult i64 %21, 3
  br i1 %22, label %cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub nsw i64 %20, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %for.body ]
  %23 = trunc i64 %indvars.iv to i32
  %mul17 = mul i32 %19, %23
  %conv18 = zext i32 %mul17 to i64
  %24 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i29 = getelementptr inbounds float, float* %24, i64 %conv18
  %25 = load float**, float*** %15, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %25, i64 %indvars.iv
  store float* %add.ptr.i29, float** %arrayidx.i, align 8, !tbaa !43
  %indvars.iv.next = or i64 %indvars.iv, 1
  %26 = trunc i64 %indvars.iv.next to i32
  %mul17.1 = mul i32 %19, %26
  %conv18.1 = zext i32 %mul17.1 to i64
  %27 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i29.1 = getelementptr inbounds float, float* %27, i64 %conv18.1
  %28 = load float**, float*** %15, align 8, !tbaa !43
  %arrayidx.i.1 = getelementptr inbounds float*, float** %28, i64 %indvars.iv.next
  store float* %add.ptr.i29.1, float** %arrayidx.i.1, align 8, !tbaa !43
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %29 = trunc i64 %indvars.iv.next.1 to i32
  %mul17.2 = mul i32 %19, %29
  %conv18.2 = zext i32 %mul17.2 to i64
  %30 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i29.2 = getelementptr inbounds float, float* %30, i64 %conv18.2
  %31 = load float**, float*** %15, align 8, !tbaa !43
  %arrayidx.i.2 = getelementptr inbounds float*, float** %31, i64 %indvars.iv.next.1
  store float* %add.ptr.i29.2, float** %arrayidx.i.2, align 8, !tbaa !43
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %32 = trunc i64 %indvars.iv.next.2 to i32
  %mul17.3 = mul i32 %19, %32
  %conv18.3 = zext i32 %mul17.3 to i64
  %33 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i29.3 = getelementptr inbounds float, float* %33, i64 %conv18.3
  %34 = load float**, float*** %15, align 8, !tbaa !43
  %arrayidx.i.3 = getelementptr inbounds float*, float** %34, i64 %indvars.iv.next.2
  store float* %add.ptr.i29.3, float** %arrayidx.i.3, align 8, !tbaa !43
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %cleanup.loopexit.unr-lcssa ]
  %35 = trunc i64 %indvars.iv.epil to i32
  %mul17.epil = mul i32 %19, %35
  %conv18.epil = zext i32 %mul17.epil to i64
  %36 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i29.epil = getelementptr inbounds float, float* %36, i64 %conv18.epil
  %37 = load float**, float*** %15, align 8, !tbaa !43
  %arrayidx.i.epil = getelementptr inbounds float*, float** %37, i64 %indvars.iv.epil
  store float* %add.ptr.i29.epil, float** %arrayidx.i.epil, align 8, !tbaa !43
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.epil, !llvm.loop !74

cleanup:                                          ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat5ResetEv(%class.CBFormat* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !63
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %2 = load i32, i32* %m_nDataLength, align 4, !tbaa !73
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN8CBFormat7RefreshEv(%class.CBFormat* nocapture %this) unnamed_addr #7 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat12InsertStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture readonly %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 %conv
  %1 = bitcast float** %arrayidx.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !43
  %3 = bitcast float* %pfData to i8*
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat13ExtractStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %0 = bitcast float* %pfData to i8*
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 %conv
  %2 = bitcast float** %arrayidx.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !43
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormataSERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #3 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !63
  %_M_start.i4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i4 to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !63
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %4 = load i32, i32* %m_nDataLength, align 4, !tbaa !73
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormateqERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !52, !range !55
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !52, !range !55
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !49
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !49
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !73
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !73
  %cmp9 = icmp eq i32 %8, %9
  br i1 %cmp9, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %if.else, %land.lhs.true7
  %retval.0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true7 ]
  ret i1 %retval.0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormatneERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !52, !range !55
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !52, !range !55
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !49
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !49
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %lor.lhs.false7, label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !73
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !73
  %cmp9 = icmp ne i32 %8, %9
  ret i1 %cmp9

return:                                           ; preds = %lor.lhs.false, %entry
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !47
  %add.us = fadd fast float %11, %10
  store float %add.us, float* %arrayidx9.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !47
  %add.us.1 = fadd fast float %13, %12
  store float %add.us.1, float* %arrayidx9.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !47
  %add.us.2 = fadd fast float %15, %14
  store float %add.us.2, float* %arrayidx9.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !47
  %add.us.3 = fadd fast float %17, %16
  store float %add.us.3, float* %arrayidx9.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %add.us.epil = fadd fast float %19, %18
  store float %add.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !75

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !47
  %sub.us = fsub fast float %11, %10
  store float %sub.us, float* %arrayidx9.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !47
  %sub.us.1 = fsub fast float %13, %12
  store float %sub.us.1, float* %arrayidx9.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !47
  %sub.us.2 = fsub fast float %15, %14
  store float %sub.us.2, float* %arrayidx9.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !47
  %sub.us.3 = fsub fast float %17, %16
  store float %sub.us.3, float* %arrayidx9.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %sub.us.epil = fsub fast float %19, %18
  store float %sub.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !76

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !47
  %mul.us = fmul fast float %11, %10
  store float %mul.us, float* %arrayidx9.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !47
  %mul.us.1 = fmul fast float %13, %12
  store float %mul.us.1, float* %arrayidx9.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !47
  %mul.us.2 = fmul fast float %15, %14
  store float %mul.us.2, float* %arrayidx9.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !47
  %mul.us.3 = fmul fast float %17, %16
  store float %mul.us.3, float* %arrayidx9.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %mul.us.epil = fmul fast float %19, %18
  store float %mul.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !77

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21, align 8, !tbaa !43
  %5 = zext i32 %2 to i64
  %xtraiter = and i64 %5, 1
  %6 = icmp eq i32 %2, 1
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !43
  br i1 %6, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %arrayidx9.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx9.us, align 4, !tbaa !47
  %div.us = fdiv fast float %10, %9
  store float %div.us, float* %arrayidx9.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %arrayidx9.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx9.us.1, align 4, !tbaa !47
  %div.us.1 = fdiv fast float %12, %11
  store float %div.us.1, float* %arrayidx9.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.1, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.unr
  %13 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %arrayidx9.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.unr
  %14 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !47
  %div.us.epil = fdiv fast float %14, %13
  store float %div.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !47
  br label %for.cond2.for.inc10_crit_edge.us

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %add.us = fadd fast float %9, %8
  store float %add.us, float* %arrayidx.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %add.us.1 = fadd fast float %11, %10
  store float %add.us.1, float* %arrayidx.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %add.us.2 = fadd fast float %13, %12
  store float %add.us.2, float* %arrayidx.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %add.us.3 = fadd fast float %15, %14
  store float %add.us.3, float* %arrayidx.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %add.us.epil = fadd fast float %17, %16
  store float %add.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !78

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %sub.us = fsub fast float %9, %8
  store float %sub.us, float* %arrayidx.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %sub.us.1 = fsub fast float %11, %10
  store float %sub.us.1, float* %arrayidx.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %sub.us.2 = fsub fast float %13, %12
  store float %sub.us.2, float* %arrayidx.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %sub.us.3 = fsub fast float %15, %14
  store float %sub.us.3, float* %arrayidx.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %sub.us.epil = fsub fast float %17, %16
  store float %sub.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !79

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %mul.us = fmul fast float %9, %8
  store float %mul.us, float* %arrayidx.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %mul.us.1 = fmul fast float %11, %10
  store float %mul.us.1, float* %arrayidx.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %mul.us.2 = fmul fast float %13, %12
  store float %mul.us.2, float* %arrayidx.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %mul.us.3 = fmul fast float %15, %14
  store float %mul.us.3, float* %arrayidx.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %mul.us.epil = fmul fast float %17, %16
  store float %mul.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !80

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !68
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = zext i32 %2 to i64
  %xtraiter = and i64 %4, 1
  %5 = icmp eq i32 %2, 1
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %6 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %5, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %7 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %8 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %div.us = fdiv fast float %8, %7
  store float %div.us, float* %arrayidx.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %9 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.1 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next
  %10 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %div.us.1 = fdiv fast float %10, %9
  store float %div.us.1, float* %arrayidx.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.1, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %11 = load float, float* %fValue, align 4, !tbaa !47
  %arrayidx.us.epil = getelementptr inbounds float, float* %6, i64 %indvars.iv.unr
  %12 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %div.us.epil = fdiv fast float %12, %11
  store float %div.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !47
  br label %for.cond2.for.inc5_crit_edge.us

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !56
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !63
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD0Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicEncoder* %this to i8*
  tail call void @_ZdlPv(i8* %5) #25
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0
  %call = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %0, i32 %nOrder, i1 zeroext %b3D, i32 undef)
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* readonly %this) unnamed_addr #8 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoder* nocapture readonly %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #11 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp22 = icmp eq i32 %1, 0
  %cmp320 = icmp eq i32 %nSamples, 0
  %or.cond = or i1 %cmp22, %cmp320
  br i1 %or.cond, label %for.end11, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %2 = zext i32 %1 to i64
  %.pre = load float*, float** %_M_start.i, align 8, !tbaa !63
  %.pre28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %wide.trip.count = zext i32 %nSamples to i64
  %3 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %4 = icmp ult i64 %3, 3
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc9_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv26 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next27, %for.cond2.for.inc9_crit_edge.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv26
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre28, i64 %indvars.iv26
  %5 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %4, label %for.cond2.for.inc9_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv
  %6 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %7 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul.us = fmul fast float %7, %6
  %arrayidx8.us = getelementptr inbounds float, float* %5, i64 %indvars.iv
  store float %mul.us, float* %arrayidx8.us, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next
  %8 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %9 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul.us.1 = fmul fast float %9, %8
  %arrayidx8.us.1 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next
  store float %mul.us.1, float* %arrayidx8.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.1
  %10 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %11 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul.us.2 = fmul fast float %11, %10
  %arrayidx8.us.2 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next.1
  store float %mul.us.2, float* %arrayidx8.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.2
  %12 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %13 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul.us.3 = fmul fast float %13, %12
  %arrayidx8.us.3 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next.2
  store float %mul.us.3, float* %arrayidx8.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc9_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc9_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc9_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc9_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc9_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.epil
  %14 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %15 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul.us.epil = fmul fast float %15, %14
  %arrayidx8.us.epil = getelementptr inbounds float, float* %5, i64 %indvars.iv.epil
  store float %mul.us.epil, float* %arrayidx8.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.epil, !llvm.loop !81

for.cond2.for.inc9_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc9_crit_edge.us.unr-lcssa
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %cmp.us = icmp ult i64 %indvars.iv.next27, %2
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end11

for.end11:                                        ; preds = %for.cond2.for.inc9_crit_edge.us, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 0, i8* %1, align 4, !tbaa !52
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %2, align 8, !tbaa !53
  %3 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 5
  store i8 0, i8* %3, align 4, !tbaa !54
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %4 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !56
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !60
  %5 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = bitcast i32* %m_nSampleRate to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 36, i1 false)
  store float 5.000000e+00, float* %m_fRoomRadius, align 4, !tbaa !82
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float 0.000000e+00, float* %m_fInteriorGain, align 8, !tbaa !84
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float 0.000000e+00, float* %m_fExteriorGain, align 4, !tbaa !85
  %7 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  %call.i2 = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %7, i32 1, i1 zeroext true, i32 undef) #24
  store i32 44100, i32* %m_nSampleRate, align 8, !tbaa !86
  %m_nDelayBufferLength.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 19230, i32* %m_nDelayBufferLength.i, align 4, !tbaa !87
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %8 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !88
  %tobool6.i = icmp eq float* %8, null
  br i1 %tobool6.i, label %_ZN21CAmbisonicEncoderDist9ConfigureEjbj.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %9 = bitcast float* %8 to i8*
  tail call void @_ZdaPv(i8* %9) #25
  %.pre = load i32, i32* %m_nDelayBufferLength.i, align 4, !tbaa !87
  %phitmp = zext i32 %.pre to i64
  %phitmp3 = shl nuw nsw i64 %phitmp, 2
  br label %_ZN21CAmbisonicEncoderDist9ConfigureEjbj.exit

_ZN21CAmbisonicEncoderDist9ConfigureEjbj.exit:    ; preds = %delete.notnull.i, %entry
  %10 = phi i64 [ 76920, %entry ], [ %phitmp3, %delete.notnull.i ]
  %call12.i = tail call i8* @_Znam(i64 %10) #25
  %11 = bitcast float** %m_pfDelayBuffer.i to i8**
  store i8* %call12.i, i8** %11, align 8, !tbaa !88
  %12 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %12, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable.i, i64 3
  %13 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn.i, align 8
  tail call void %13(%class.CAmbisonicEncoderDist* nonnull %this) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !88
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %if.end
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD0Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !88
  %tobool.i = icmp eq float* %1, null
  br i1 %tobool.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %if.end.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %if.end.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN21CAmbisonicEncoderDistD2Ev.exit, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN21CAmbisonicEncoderDistD2Ev.exit

_ZN21CAmbisonicEncoderDistD2Ev.exit:              ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %7 = bitcast %class.CAmbisonicEncoderDist* %this to i8*
  tail call void @_ZdlPv(i8* %7) #25
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN21CAmbisonicEncoderDist9ConfigureEjbj(%class.CAmbisonicEncoderDist* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  %call.i = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %0, i32 %nOrder, i1 zeroext %b3D, i32 undef) #24
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  store i32 %nSampleRate, i32* %m_nSampleRate, align 8, !tbaa !86
  %conv = uitofp i32 %nSampleRate to float
  %mul = fmul fast float %conv, 0x3FDBE82FA0000000
  %add = fadd fast float %mul, 5.000000e-01
  %conv5 = fptoui float %add to i32
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 %conv5, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !88
  %tobool6 = icmp eq float* %1, null
  br i1 %tobool6, label %if.end9, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  %.pre = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull, %entry
  %3 = phi i32 [ %conv5, %entry ], [ %.pre, %delete.notnull ]
  %conv11 = zext i32 %3 to i64
  %4 = shl nuw nsw i64 %conv11, 2
  %call12 = tail call i8* @_Znam(i64 %4) #25
  %5 = bitcast float** %m_pfDelayBuffer to i8**
  store i8* %call12, i8** %5, align 8, !tbaa !88
  %6 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %6, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable, i64 3
  %7 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicEncoderDist* nonnull %this) #24
  ret i1 true
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist5ResetEv(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfDelayBuffer to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !88
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %2 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %3 = load float, float* %fDistance, align 8, !tbaa !56
  %div = fmul fast float %3, 0x3F67D05F40000000
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !86
  %conv2 = uitofp i32 %4 to float
  %mul3 = fmul fast float %div, %conv2
  %add = fadd fast float %mul3, 5.000000e-01
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %add to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !89
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub fast float %add, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !90
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  store i32 0, i32* %m_nIn, align 8, !tbaa !91
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  %add13 = sub i32 %5, %conv5
  %rem = urem i32 %add13, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !92
  %add16 = add nuw nsw i32 %rem, 1
  %rem18 = urem i32 %add16, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem18, i32* %m_nOutB, align 8, !tbaa !93
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7RefreshEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #8 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0) #24
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %1 = load float, float* %fDistance, align 8, !tbaa !56
  %2 = tail call fast float @llvm.fabs.f32(float %1) #24
  %div = fmul fast float %2, 0x3F67D05F40000000
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %3 = load i32, i32* %m_nSampleRate, align 8, !tbaa !86
  %conv = uitofp i32 %3 to float
  %mul = fmul fast float %div, %conv
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv3 = fptosi float %mul to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv3, i32* %m_nDelay, align 8, !tbaa !89
  %conv5 = sitofp i32 %conv3 to float
  %sub = fsub fast float %mul, %conv5
  store float %sub, float* %m_fDelay, align 4, !tbaa !90
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %4 = load i32, i32* %m_nIn, align 8, !tbaa !91
  %sub8 = sub i32 %4, %conv3
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  %add = add i32 %sub8, %5
  %rem = urem i32 %add, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !92
  %add11 = add nuw nsw i32 %rem, 1
  %rem13 = urem i32 %add11, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem13, i32* %m_nOutB, align 8, !tbaa !93
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = load float, float* %m_fRoomRadius, align 4, !tbaa !82
  %cmp = fcmp fast ult float %2, %6
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %7 = fmul fast float %6, 5.000000e-01
  %div22 = fdiv fast float %7, %2
  br label %if.end

if.else:                                          ; preds = %entry
  %8 = fmul fast float %2, 5.000000e-01
  %9 = fdiv fast float %8, %6
  %div30 = fsub fast float 1.000000e+00, %9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %div22.sink39 = phi float [ %div30, %if.else ], [ %div22, %if.then ]
  %div22.sink = phi float [ %9, %if.else ], [ %div22, %if.then ]
  %10 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float %div22.sink39, float* %10, align 8
  %11 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float %div22.sink, float* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* nocapture %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #11 align 2 {
entry:
  %cmp62 = icmp eq i32 %nSamples, 0
  br i1 %cmp62, label %for.end44, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !88
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %_M_head_impl.i.i.i.i.i.i.i59 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %2 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i59, align 8, !tbaa !43
  %3 = load float*, float** %2, align 8, !tbaa !43
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  %4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !53
  %cmp1960 = icmp ugt i32 %5, 1
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !87
  %m_nIn.promoted = load i32, i32* %m_nIn, align 8, !tbaa !91
  %m_nOutA.promoted = load i32, i32* %m_nOutA, align 4, !tbaa !92
  %m_nOutB.promoted = load i32, i32* %m_nOutB, align 8, !tbaa !93
  %wide.trip.count = zext i32 %nSamples to i64
  br i1 %cmp1960, label %for.body.us.preheader, label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %7 = zext i32 %5 to i64
  %8 = add nsw i64 %7, -1
  %9 = add nsw i64 %7, -2
  %xtraiter = and i64 %8, 3
  %10 = icmp ult i64 %9, 3
  %unroll_iter = sub nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond18.for.end_crit_edge.us, %for.body.us.preheader
  %indvars.iv71 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next72, %for.cond18.for.end_crit_edge.us ]
  %rem4066.us = phi i32 [ %m_nOutB.promoted, %for.body.us.preheader ], [ %rem40.us, %for.cond18.for.end_crit_edge.us ]
  %rem3565.us = phi i32 [ %m_nOutA.promoted, %for.body.us.preheader ], [ %rem35.us, %for.cond18.for.end_crit_edge.us ]
  %rem64.us = phi i32 [ %m_nIn.promoted, %for.body.us.preheader ], [ %rem.us, %for.cond18.for.end_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv71
  %11 = bitcast float* %arrayidx.us to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !47
  %idxprom2.us = sext i32 %rem64.us to i64
  %arrayidx3.us = getelementptr inbounds float, float* %0, i64 %idxprom2.us
  %13 = bitcast float* %arrayidx3.us to i32*
  store i32 %12, i32* %13, align 4, !tbaa !47
  %idxprom5.us = sext i32 %rem3565.us to i64
  %arrayidx6.us = getelementptr inbounds float, float* %0, i64 %idxprom5.us
  %14 = load float, float* %arrayidx6.us, align 4, !tbaa !47
  %15 = load float, float* %m_fDelay, align 4, !tbaa !90
  %sub.us = fsub fast float 1.000000e+00, %15
  %mul.us = fmul fast float %sub.us, %14
  %idxprom8.us = sext i32 %rem4066.us to i64
  %arrayidx9.us = getelementptr inbounds float, float* %0, i64 %idxprom8.us
  %16 = load float, float* %arrayidx9.us, align 4, !tbaa !47
  %mul11.us = fmul fast float %16, %15
  %add.us = fadd fast float %mul11.us, %mul.us
  %17 = load float, float* %m_fInteriorGain, align 8, !tbaa !84
  %mul12.us = fmul fast float %add.us, %17
  %18 = load float, float* %1, align 4, !tbaa !47
  %mul13.us = fmul fast float %mul12.us, %18
  %arrayidx16.us = getelementptr inbounds float, float* %3, i64 %indvars.iv71
  store float %mul13.us, float* %arrayidx16.us, align 4, !tbaa !47
  %19 = load float, float* %m_fExteriorGain, align 4, !tbaa !85
  %mul17.us = fmul fast float %19, %add.us
  br i1 %10, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.body20.us:                                    ; preds = %for.body20.us, %for.body.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body20.us ], [ 1, %for.body.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body20.us ], [ %unroll_iter, %for.body.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %20 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul23.us = fmul fast float %mul17.us, %20
  %arrayidx.i.us = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %21 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  %arrayidx28.us = getelementptr inbounds float, float* %21, i64 %indvars.iv71
  store float %mul23.us, float* %arrayidx28.us, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.us.1 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next
  %22 = load float, float* %add.ptr.i.us.1, align 4, !tbaa !47
  %mul23.us.1 = fmul fast float %mul17.us, %22
  %arrayidx.i.us.1 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i.us.1, align 8, !tbaa !43
  %arrayidx28.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv71
  store float %mul23.us.1, float* %arrayidx28.us.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.us.2 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.1
  %24 = load float, float* %add.ptr.i.us.2, align 4, !tbaa !47
  %mul23.us.2 = fmul fast float %mul17.us, %24
  %arrayidx.i.us.2 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.1
  %25 = load float*, float** %arrayidx.i.us.2, align 8, !tbaa !43
  %arrayidx28.us.2 = getelementptr inbounds float, float* %25, i64 %indvars.iv71
  store float %mul23.us.2, float* %arrayidx28.us.2, align 4, !tbaa !47
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.us.3 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.2
  %26 = load float, float* %add.ptr.i.us.3, align 4, !tbaa !47
  %mul23.us.3 = fmul fast float %mul17.us, %26
  %arrayidx.i.us.3 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.2
  %27 = load float*, float** %arrayidx.i.us.3, align 8, !tbaa !43
  %arrayidx28.us.3 = getelementptr inbounds float, float* %27, i64 %indvars.iv71
  store float %mul23.us.3, float* %arrayidx28.us.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.cond18.for.end_crit_edge.us.unr-lcssa:        ; preds = %for.body20.us, %for.body.us
  %indvars.iv.unr = phi i64 [ 1, %for.body.us ], [ %indvars.iv.next.3, %for.body20.us ]
  br i1 %lcmp.mod, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil

for.body20.us.epil:                               ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body20.us.epil ], [ %indvars.iv.unr, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body20.us.epil ], [ %xtraiter, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %add.ptr.i.us.epil = getelementptr inbounds float, float* %1, i64 %indvars.iv.epil
  %28 = load float, float* %add.ptr.i.us.epil, align 4, !tbaa !47
  %mul23.us.epil = fmul fast float %mul17.us, %28
  %arrayidx.i.us.epil = getelementptr inbounds float*, float** %2, i64 %indvars.iv.epil
  %29 = load float*, float** %arrayidx.i.us.epil, align 8, !tbaa !43
  %arrayidx28.us.epil = getelementptr inbounds float, float* %29, i64 %indvars.iv71
  store float %mul23.us.epil, float* %arrayidx28.us.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil, !llvm.loop !94

for.cond18.for.end_crit_edge.us:                  ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %add30.us = add nsw i32 %rem64.us, 1
  %rem.us = urem i32 %add30.us, %6
  %add33.us = add nsw i32 %rem3565.us, 1
  %rem35.us = urem i32 %add33.us, %6
  %add38.us = add nsw i32 %rem4066.us, 1
  %rem40.us = urem i32 %add38.us, %6
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %exitcond = icmp eq i64 %indvars.iv.next72, %wide.trip.count
  br i1 %exitcond, label %for.cond.for.end44_crit_edge, label %for.body.us

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body ], [ 0, %for.body.lr.ph ]
  %rem4066 = phi i32 [ %rem40, %for.body ], [ %m_nOutB.promoted, %for.body.lr.ph ]
  %rem3565 = phi i32 [ %rem35, %for.body ], [ %m_nOutA.promoted, %for.body.lr.ph ]
  %rem64 = phi i32 [ %rem, %for.body ], [ %m_nIn.promoted, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv73
  %30 = bitcast float* %arrayidx to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !47
  %idxprom2 = sext i32 %rem64 to i64
  %arrayidx3 = getelementptr inbounds float, float* %0, i64 %idxprom2
  %32 = bitcast float* %arrayidx3 to i32*
  store i32 %31, i32* %32, align 4, !tbaa !47
  %idxprom5 = sext i32 %rem3565 to i64
  %arrayidx6 = getelementptr inbounds float, float* %0, i64 %idxprom5
  %33 = load float, float* %arrayidx6, align 4, !tbaa !47
  %34 = load float, float* %m_fDelay, align 4, !tbaa !90
  %sub = fsub fast float 1.000000e+00, %34
  %mul = fmul fast float %sub, %33
  %idxprom8 = sext i32 %rem4066 to i64
  %arrayidx9 = getelementptr inbounds float, float* %0, i64 %idxprom8
  %35 = load float, float* %arrayidx9, align 4, !tbaa !47
  %mul11 = fmul fast float %35, %34
  %add = fadd fast float %mul11, %mul
  %36 = load float, float* %m_fInteriorGain, align 8, !tbaa !84
  %mul12 = fmul fast float %add, %36
  %37 = load float, float* %1, align 4, !tbaa !47
  %mul13 = fmul fast float %mul12, %37
  %arrayidx16 = getelementptr inbounds float, float* %3, i64 %indvars.iv73
  store float %mul13, float* %arrayidx16, align 4, !tbaa !47
  %add30 = add nsw i32 %rem64, 1
  %rem = urem i32 %add30, %6
  %add33 = add nsw i32 %rem3565, 1
  %rem35 = urem i32 %add33, %6
  %add38 = add nsw i32 %rem4066, 1
  %rem40 = urem i32 %add38, %6
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond76 = icmp eq i64 %indvars.iv.next74, %wide.trip.count
  br i1 %exitcond76, label %for.cond.for.end44_crit_edge, label %for.body

for.cond.for.end44_crit_edge:                     ; preds = %for.body, %for.cond18.for.end_crit_edge.us
  %rem40.lcssa = phi i32 [ %rem40.us, %for.cond18.for.end_crit_edge.us ], [ %rem40, %for.body ]
  %rem35.lcssa = phi i32 [ %rem35.us, %for.cond18.for.end_crit_edge.us ], [ %rem35, %for.body ]
  %rem.lcssa = phi i32 [ %rem.us, %for.cond18.for.end_crit_edge.us ], [ %rem, %for.body ]
  store i32 %rem.lcssa, i32* %m_nIn, align 8, !tbaa !91
  store i32 %rem35.lcssa, i32* %m_nOutA, align 4, !tbaa !92
  store i32 %rem40.lcssa, i32* %m_nOutB, align 8, !tbaa !93
  br label %for.end44

for.end44:                                        ; preds = %for.cond.for.end44_crit_edge, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN21CAmbisonicEncoderDist13SetRoomRadiusEf(%class.CAmbisonicEncoderDist* nocapture %this, float %fRoomRadius) local_unnamed_addr #5 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  store float %fRoomRadius, float* %m_fRoomRadius, align 4, !tbaa !82
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN21CAmbisonicEncoderDist13GetRoomRadiusEv(%class.CAmbisonicEncoderDist* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %0 = load float, float* %m_fRoomRadius, align 4, !tbaa !82
  ret float %0
}

; Function Attrs: nofree nounwind uwtable writeonly
define void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* nocapture %this) unnamed_addr #14 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %fYaw2.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 0
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %5 = bitcast float* %fYaw2.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 64, i1 false)
  %6 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %1 = load float*, float** %m_pfTempSample, align 8, !tbaa !95
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %3 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %tobool3 = icmp eq float* %3, null
  br i1 %tobool3, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #25
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %5 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !99
  %tobool10 = icmp eq %struct.kiss_fftr_state* %5, null
  br i1 %tobool10, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end9
  %6 = bitcast %struct.kiss_fftr_state* %5 to i8*
  tail call void @free(i8* %6) #24
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %7 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !100
  %tobool14 = icmp eq %struct.kiss_fftr_state* %7, null
  br i1 %tobool14, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end13
  %8 = bitcast %struct.kiss_fftr_state* %7 to i8*
  tail call void @free(i8* %8) #24
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %9 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !101
  %tobool18 = icmp eq %struct.kiss_fft_cpx** %9, null
  br i1 %tobool18, label %if.end34, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end17
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc
  %isnull31 = icmp eq %struct.kiss_fft_cpx** %.pr, null
  br i1 %isnull31, label %if.end34, label %delete.notnull32

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %.pr90 = phi %struct.kiss_fft_cpx** [ %9, %for.cond.preheader ], [ %.pr, %for.inc ]
  %i.089 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc ]
  %idxprom = zext i32 %i.089 to i64
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pr90, i64 %idxprom
  %11 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx, align 8, !tbaa !43
  %tobool21 = icmp eq %struct.kiss_fft_cpx* %11, null
  br i1 %tobool21, label %for.inc, label %delete.notnull27

delete.notnull27:                                 ; preds = %for.body
  %12 = bitcast %struct.kiss_fft_cpx* %11 to i8*
  tail call void @_ZdaPv(i8* %12) #25
  %.pr.pre = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !101
  br label %for.inc

for.inc:                                          ; preds = %delete.notnull27, %for.body
  %.pr = phi %struct.kiss_fft_cpx** [ %.pr90, %for.body ], [ %.pr.pre, %delete.notnull27 ]
  %inc = add i32 %i.089, 1
  %13 = load i32, i32* %10, align 8, !tbaa !49
  %cmp = icmp ugt i32 %inc, %13
  br i1 %cmp, label %for.cond.cleanup, label %for.body

delete.notnull32:                                 ; preds = %for.cond.cleanup
  %14 = bitcast %struct.kiss_fft_cpx** %.pr to i8*
  tail call void @_ZdaPv(i8* %14) #25
  br label %if.end34

if.end34:                                         ; preds = %delete.notnull32, %for.cond.cleanup, %if.end17
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %15 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !102
  %tobool35 = icmp eq %struct.kiss_fft_cpx* %15, null
  br i1 %tobool35, label %if.end41, label %delete.notnull39

delete.notnull39:                                 ; preds = %if.end34
  %16 = bitcast %struct.kiss_fft_cpx* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #25
  br label %if.end41

if.end41:                                         ; preds = %delete.notnull39, %if.end34
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %17 = load float**, float*** %m_pfOverlap, align 8, !tbaa !103
  %tobool42 = icmp eq float** %17, null
  br i1 %tobool42, label %if.end68, label %for.cond45.preheader

for.cond45.preheader:                             ; preds = %if.end41
  %18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %19 = load i32, i32* %18, align 8, !tbaa !53
  %cmp4687 = icmp eq i32 %19, 0
  br i1 %cmp4687, label %delete.notnull66, label %for.body48

for.cond.cleanup47:                               ; preds = %for.inc61
  %isnull65 = icmp eq float** %.pr85, null
  br i1 %isnull65, label %if.end68, label %delete.notnull66

for.body48:                                       ; preds = %for.inc61, %for.cond45.preheader
  %20 = phi i32 [ %23, %for.inc61 ], [ %19, %for.cond45.preheader ]
  %.pr8592 = phi float** [ %.pr85, %for.inc61 ], [ %17, %for.cond45.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc61 ], [ 0, %for.cond45.preheader ]
  %arrayidx51 = getelementptr inbounds float*, float** %.pr8592, i64 %indvars.iv
  %21 = load float*, float** %arrayidx51, align 8, !tbaa !43
  %tobool52 = icmp eq float* %21, null
  br i1 %tobool52, label %for.inc61, label %delete.notnull58

delete.notnull58:                                 ; preds = %for.body48
  %22 = bitcast float* %21 to i8*
  tail call void @_ZdaPv(i8* %22) #25
  %.pr85.pre = load float**, float*** %m_pfOverlap, align 8, !tbaa !103
  %.pre = load i32, i32* %18, align 8, !tbaa !53
  br label %for.inc61

for.inc61:                                        ; preds = %delete.notnull58, %for.body48
  %23 = phi i32 [ %20, %for.body48 ], [ %.pre, %delete.notnull58 ]
  %.pr85 = phi float** [ %.pr8592, %for.body48 ], [ %.pr85.pre, %delete.notnull58 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = zext i32 %23 to i64
  %cmp46 = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47

delete.notnull66:                                 ; preds = %for.cond.cleanup47, %for.cond45.preheader
  %.lcssa96 = phi float** [ %.pr85, %for.cond.cleanup47 ], [ %17, %for.cond45.preheader ]
  %25 = bitcast float** %.lcssa96 to i8*
  tail call void @_ZdaPv(i8* %25) #25
  br label %if.end68

if.end68:                                         ; preds = %delete.notnull66, %for.cond.cleanup47, %if.end41
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD0Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #3 align 2 {
entry:
  tail call void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* %this) #24
  %0 = bitcast %class.CAmbisonicProcessor* %this to i8*
  tail call void @_ZdlPv(i8* %0) #25
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nBlockSize, i32 %nMisc) local_unnamed_addr #3 align 2 {
entry:
  %pfPsychIR = alloca %"class.std::vector.7", align 8
  %ref.tmp = alloca float*, align 8
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !52
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !53
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !95
  %tobool4 = icmp eq float* %3, null
  br i1 %tobool4, label %if.end7, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #25
  %.pre = load i32, i32* %2, align 8, !tbaa !53
  br label %if.end7

if.end7:                                          ; preds = %delete.notnull, %entry
  %5 = phi i32 [ %call.i, %entry ], [ %.pre, %delete.notnull ]
  %conv = zext i32 %5 to i64
  %6 = shl nuw nsw i64 %conv, 2
  %call8 = tail call i8* @_Znam(i64 %6) #25
  %7 = bitcast float** %m_pfTempSample to i8**
  store i8* %call8, i8** %7, align 8, !tbaa !95
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call8, i8 0, i64 %6, i1 false)
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 1, i8* %8, align 4, !tbaa !54
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  store i32 %nBlockSize, i32* %m_nBlockSize, align 4, !tbaa !104
  %m_nTaps = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 9
  store i32 101, i32* %m_nTaps, align 8, !tbaa !105
  %cmp = icmp ult i32 %nBlockSize, 101
  %sub = add i32 %nBlockSize, -1
  %cond = select i1 %cmp, i32 %sub, i32 100
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !106
  %add = add i32 %nBlockSize, 101
  %add22 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end7
  %storemerge = phi i32 [ 1, %if.end7 ], [ %shl, %while.cond ]
  %cmp23 = icmp ult i32 %storemerge, %add22
  %shl = shl i32 %storemerge, 1
  br i1 %cmp23, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !107
  %div = lshr i32 %storemerge, 1
  %add26 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  store i32 %add26, i32* %m_nFFTBins, align 8, !tbaa !108
  %conv28 = uitofp i32 %storemerge to float
  %div29 = fdiv fast float 1.000000e+00, %conv28
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  store float %div29, float* %m_fFFTScaler, align 4, !tbaa !109
  %9 = shl nuw nsw i64 %conv, 3
  %call32 = tail call i8* @_Znam(i64 %9) #25
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %10 = bitcast float*** %m_pfOverlap to i8**
  store i8* %call32, i8** %10, align 8, !tbaa !103
  %cmp34274 = icmp eq i32 %5, 0
  br i1 %cmp34274, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %while.end
  %conv36 = zext i32 %cond to i64
  %11 = shl nuw nsw i64 %conv36, 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %while.end
  %conv40 = zext i32 %storemerge to i64
  %12 = shl nuw nsw i64 %conv40, 2
  %call41 = tail call i8* @_Znam(i64 %12) #25
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %13 = bitcast float** %m_pfScratchBufferA to i8**
  store i8* %call41, i8** %13, align 8, !tbaa !98
  %14 = load i32, i32* %0, align 8, !tbaa !49
  %add42 = add i32 %14, 1
  %conv43 = zext i32 %add42 to i64
  %15 = shl nuw nsw i64 %conv43, 3
  %call44 = tail call i8* @_Znam(i64 %15) #25
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %16 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8**
  store i8* %call44, i8** %16, align 8, !tbaa !101
  %conv61 = zext i32 %add26 to i64
  %17 = shl nuw nsw i64 %conv61, 3
  %call62271 = tail call i8* @_Znam(i64 %17) #25
  %18 = bitcast i8* %call44 to i8**
  store i8* %call62271, i8** %18, align 8, !tbaa !43
  %cmp48290 = icmp eq i32 %14, 0
  %call62291 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48290, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv280 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next281, %for.body ]
  %call37 = tail call i8* @_Znam(i64 %11) #25
  %19 = load float**, float*** %m_pfOverlap, align 8, !tbaa !103
  %arrayidx = getelementptr inbounds float*, float** %19, i64 %indvars.iv280
  %20 = bitcast float** %arrayidx to i8**
  store i8* %call37, i8** %20, align 8, !tbaa !43
  %indvars.iv.next281 = add nuw nsw i64 %indvars.iv280, 1
  %exitcond = icmp eq i64 %indvars.iv.next281, %conv
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

for.cond.cleanup49:                               ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62.lcssa = phi i8* [ %call62291, %for.cond.cleanup ], [ %call62, %for.body50.for.body50_crit_edge ]
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %21 = bitcast %struct.kiss_fft_cpx** %m_pcpScratch to i8**
  store i8* %call62.lcssa, i8** %21, align 8, !tbaa !102
  %22 = bitcast %"class.std::vector.7"* %pfPsychIR to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #24
  %23 = bitcast float** %ref.tmp to i8*
  %24 = bitcast float** %ref.tmp to i8**
  %_M_finish.i264 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0, i32 1
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %for.body68

for.body50.for.body50_crit_edge:                  ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62293 = phi i8* [ %call62, %for.body50.for.body50_crit_edge ], [ %call62291, %for.cond.cleanup ]
  %inc58292 = phi i32 [ %inc58, %for.body50.for.body50_crit_edge ], [ 1, %for.cond.cleanup ]
  %.pre282 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !101
  %idxprom55 = zext i32 %inc58292 to i64
  %arrayidx56 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre282, i64 %idxprom55
  %25 = bitcast %struct.kiss_fft_cpx** %arrayidx56 to i8**
  store i8* %call62293, i8** %25, align 8, !tbaa !43
  %inc58 = add i32 %inc58292, 1
  %cmp48 = icmp ugt i32 %inc58, %14
  %call62 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.cond.cleanup67:                               ; preds = %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit
  %26 = bitcast %class.CAmbisonicProcessor* %this to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %26, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 3
  %27 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %27(%class.CAmbisonicProcessor* nonnull %this) #24
  %28 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %call76 = call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %28, i32 0, i8* null, i64* null) #24
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  store %struct.kiss_fftr_state* %call76, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !99
  %29 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %call78 = call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %29, i32 1, i8* null, i64* null) #24
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  store %struct.kiss_fftr_state* %call78, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !100
  %30 = load i32, i32* %0, align 8, !tbaa !49
  %_M_start.i251 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %for.cond85.preheader

for.body68:                                       ; preds = %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge, %for.cond.cleanup49
  %31 = phi i32 [ %14, %for.cond.cleanup49 ], [ %39, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge ]
  %32 = phi %"class.std::unique_ptr.12"* [ null, %for.cond.cleanup49 ], [ %.pre285, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge ]
  %33 = phi %"class.std::unique_ptr.12"* [ null, %for.cond.cleanup49 ], [ %.pre284, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge ]
  %34 = phi i32 [ 101, %for.cond.cleanup49 ], [ %.pre283, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge ]
  %i63.0270 = phi i32 [ 0, %for.cond.cleanup49 ], [ %inc73, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #24
  %conv70 = zext i32 %34 to i64
  %35 = shl nuw nsw i64 %conv70, 2
  %call71 = call i8* @_Znam(i64 %35) #25
  store i8* %call71, i8** %24, align 8, !tbaa !43
  %cmp.i = icmp eq %"class.std::unique_ptr.12"* %33, %32
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.body68
  %36 = ptrtoint i8* %call71 to i64
  %37 = bitcast %"class.std::unique_ptr.12"* %33 to i64*
  store i64 %36, i64* %37, align 8, !tbaa !43
  %38 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i264, align 8, !tbaa !110
  %incdec.ptr.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %38, i64 1
  store %"class.std::unique_ptr.12"* %incdec.ptr.i, %"class.std::unique_ptr.12"** %_M_finish.i264, align 8, !tbaa !110
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit

if.else.i:                                        ; preds = %for.body68
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_(%"class.std::vector.7"* nonnull %pfPsychIR, %"class.std::unique_ptr.12"* %32, float** nonnull dereferenceable(8) %ref.tmp) #24
  %.pre286 = load i32, i32* %0, align 8, !tbaa !49
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit: ; preds = %if.else.i, %if.then.i
  %39 = phi i32 [ %31, %if.then.i ], [ %.pre286, %if.else.i ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #24
  %inc73 = add i32 %i63.0270, 1
  %cmp66 = icmp ugt i32 %inc73, %39
  br i1 %cmp66, label %for.cond.cleanup67, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit.for.body68_crit_edge: ; preds = %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_.exit
  %.pre283 = load i32, i32* %m_nTaps, align 8, !tbaa !105
  %.pre284 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i264, align 8, !tbaa !110
  %.pre285 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage.i, align 8, !tbaa !112
  br label %for.body68

for.cond85.preheader:                             ; preds = %for.cond.cleanup88, %for.cond.cleanup67
  %40 = phi i32 [ %30, %for.cond.cleanup67 ], [ %65, %for.cond.cleanup88 ]
  %i_m.0268 = phi i32 [ 0, %for.cond.cleanup67 ], [ %inc198, %for.cond.cleanup88 ]
  %41 = load i32, i32* %m_nTaps, align 8, !tbaa !105
  %cmp87265 = icmp eq i32 %41, 0
  br i1 %cmp87265, label %for.cond85.preheader.for.cond.cleanup88_crit_edge, label %for.body89.lr.ph

for.cond85.preheader.for.cond.cleanup88_crit_edge: ; preds = %for.cond85.preheader
  %.pre287 = zext i32 %i_m.0268 to i64
  br label %for.cond.cleanup88

for.body89.lr.ph:                                 ; preds = %for.cond85.preheader
  %42 = load i8, i8* %1, align 4, !tbaa !52, !range !55
  %tobool90 = icmp eq i8 %42, 0
  %idxprom119 = zext i32 %i_m.0268 to i64
  %43 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i251, align 8
  %_M_head_impl.i.i.i.i.i.i.i249 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %43, i64 %idxprom119, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = zext i32 %41 to i64
  br i1 %tobool90, label %for.body89.us, label %for.body89

for.body89.us:                                    ; preds = %for.inc173.us, %for.body89.lr.ph
  %indvars.iv278 = phi i64 [ %indvars.iv.next279, %for.inc173.us ], [ 0, %for.body89.lr.ph ]
  switch i32 %40, label %for.inc173.us [
    i32 1, label %sw.bb132.us
    i32 2, label %sw.bb145.us
    i32 3, label %sw.bb158.us
  ]

sw.bb158.us:                                      ; preds = %for.body89.us
  %arrayidx162.us = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* @_ZL14third_order_2D, i64 0, i64 %idxprom119, i64 %indvars.iv278
  br label %for.inc173.us.sink.split

sw.bb145.us:                                      ; preds = %for.body89.us
  %arrayidx149.us = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_2D, i64 0, i64 %idxprom119, i64 %indvars.iv278
  br label %for.inc173.us.sink.split

sw.bb132.us:                                      ; preds = %for.body89.us
  %arrayidx136.us = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_2D, i64 0, i64 %idxprom119, i64 %indvars.iv278
  br label %for.inc173.us.sink.split

for.inc173.us.sink.split:                         ; preds = %sw.bb132.us, %sw.bb145.us, %sw.bb158.us
  %arrayidx136.us.sink = phi i16* [ %arrayidx136.us, %sw.bb132.us ], [ %arrayidx149.us, %sw.bb145.us ], [ %arrayidx162.us, %sw.bb158.us ]
  %45 = load i16, i16* %arrayidx136.us.sink, align 2, !tbaa !45
  %conv138.us = sitofp i16 %45 to float
  %div140.us = fmul fast float %conv138.us, 0x3F10002000000000
  %46 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i249, align 8, !tbaa !43
  %arrayidx.i246.us = getelementptr inbounds float, float* %46, i64 %indvars.iv278
  store float %div140.us, float* %arrayidx.i246.us, align 4, !tbaa !47
  br label %for.inc173.us

for.inc173.us:                                    ; preds = %for.inc173.us.sink.split, %for.body89.us
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %cmp87.us = icmp ult i64 %indvars.iv.next279, %44
  br i1 %cmp87.us, label %for.body89.us, label %for.cond.cleanup88

for.cond.cleanup82:                               ; preds = %for.cond.cleanup88
  %47 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i251, align 8, !tbaa !113
  %48 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i264, align 8, !tbaa !110
  %cmp3.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %47, %48
  br i1 %cmp3.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, %for.cond.cleanup82
  %__first.addr.04.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i ], [ %47, %for.cond.cleanup82 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i = icmp eq float* %49, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %50 = bitcast float* %49 to i8*
  call void @_ZdaPv(i8* %50) #25
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i, %for.body.i.i.i.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i, %48
  br i1 %cmp.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.loopexit.i, label %for.body.i.i.i.i

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.loopexit.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i251, align 8, !tbaa !113
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.i

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.i: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.loopexit.i, %for.cond.cleanup82
  %51 = phi %"class.std::unique_ptr.12"* [ %.pre.i, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.loopexit.i ], [ %47, %for.cond.cleanup82 ]
  %tobool.i.i.i = icmp eq %"class.std::unique_ptr.12"* %51, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.i
  %52 = bitcast %"class.std::unique_ptr.12"* %51 to i8*
  call void @_ZdlPv(i8* nonnull %52) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit: ; preds = %if.then.i.i.i, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #24
  ret i1 true

for.cond.cleanup88:                               ; preds = %for.inc173, %for.inc173.us, %for.cond85.preheader.for.cond.cleanup88_crit_edge
  %conv177.pre-phi = phi i64 [ %.pre287, %for.cond85.preheader.for.cond.cleanup88_crit_edge ], [ %idxprom119, %for.inc173.us ], [ %idxprom119, %for.inc173 ]
  %53 = load i8*, i8** %13, align 8, !tbaa !98
  %54 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i251, align 8, !tbaa !113
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %54, i64 %conv177.pre-phi, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast float** %_M_head_impl.i.i.i.i.i.i to i8**
  %56 = load i8*, i8** %55, align 8, !tbaa !43
  %conv181 = zext i32 %41 to i64
  %mul182 = shl nuw nsw i64 %conv181, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %56, i64 %mul182, i1 false)
  %57 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %58 = load i32, i32* %m_nTaps, align 8, !tbaa !105
  %idxprom185 = zext i32 %58 to i64
  %arrayidx186 = getelementptr inbounds float, float* %57, i64 %idxprom185
  %59 = bitcast float* %arrayidx186 to i8*
  %60 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %sub189 = sub i32 %60, %58
  %conv190 = zext i32 %sub189 to i64
  %mul191 = shl nuw nsw i64 %conv190, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %mul191, i1 false)
  %61 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !99
  %62 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %63 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !101
  %arrayidx196 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %63, i64 %conv177.pre-phi
  %64 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx196, align 8, !tbaa !43
  call void @kiss_fftr(%struct.kiss_fftr_state* %61, float* %62, %struct.kiss_fft_cpx* %64) #24
  %inc198 = add i32 %i_m.0268, 1
  %65 = load i32, i32* %0, align 8, !tbaa !49
  %cmp81 = icmp ugt i32 %inc198, %65
  br i1 %cmp81, label %for.cond.cleanup82, label %for.cond85.preheader

for.body89:                                       ; preds = %for.inc173, %for.body89.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc173 ], [ 0, %for.body89.lr.ph ]
  switch i32 %40, label %for.inc173 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb105
    i32 3, label %sw.bb118
  ]

sw.bb:                                            ; preds = %for.body89
  %arrayidx96 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_3D, i64 0, i64 %idxprom119, i64 %indvars.iv
  br label %for.inc173.sink.split

sw.bb105:                                         ; preds = %for.body89
  %arrayidx109 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_3D, i64 0, i64 %idxprom119, i64 %indvars.iv
  br label %for.inc173.sink.split

sw.bb118:                                         ; preds = %for.body89
  %arrayidx122 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* bitcast (<{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }>* @_ZL14third_order_3D to [4 x [101 x i16]]*), i64 0, i64 %idxprom119, i64 %indvars.iv
  br label %for.inc173.sink.split

for.inc173.sink.split:                            ; preds = %sw.bb118, %sw.bb105, %sw.bb
  %arrayidx122.sink = phi i16* [ %arrayidx122, %sw.bb118 ], [ %arrayidx109, %sw.bb105 ], [ %arrayidx96, %sw.bb ]
  %66 = load i16, i16* %arrayidx122.sink, align 2, !tbaa !45
  %conv124 = sitofp i16 %66 to float
  %div126 = fmul fast float %conv124, 0x3F10002000000000
  %67 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i249, align 8, !tbaa !43
  %arrayidx.i250 = getelementptr inbounds float, float* %67, i64 %indvars.iv
  store float %div126, float* %arrayidx.i250, align 4, !tbaa !47
  br label %for.inc173

for.inc173:                                       ; preds = %for.inc173.sink.split, %for.body89
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp87 = icmp ult i64 %indvars.iv.next, %44
  br i1 %cmp87, label %for.body89, label %for.cond.cleanup88
}

declare %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) local_unnamed_addr #0

declare void @kiss_fftr(%struct.kiss_fftr_state*, float*, %struct.kiss_fft_cpx*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor5ResetEv(%class.CAmbisonicProcessor* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load float**, float*** %m_pfOverlap, align 8, !tbaa !103
  %arrayidx = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %3 = bitcast float** %arrayidx to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !43
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !106
  %conv = zext i32 %5 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %0, align 8, !tbaa !53
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor7RefreshEv(%class.CAmbisonicProcessor* %this) unnamed_addr #8 align 2 {
entry:
  %fAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 3
  %0 = load float, float* %fAlpha, align 4, !tbaa !114
  %1 = tail call fast float @llvm.cos.f32(float %0)
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  store float %1, float* %m_fCosAlpha, align 8, !tbaa !115
  %2 = tail call fast float @llvm.sin.f32(float %0)
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  store float %2, float* %m_fSinAlpha, align 4, !tbaa !116
  %fBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 4
  %3 = load float, float* %fBeta, align 8, !tbaa !117
  %4 = tail call fast float @llvm.cos.f32(float %3)
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  store float %4, float* %m_fCosBeta, align 8, !tbaa !118
  %5 = tail call fast float @llvm.sin.f32(float %3)
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  store float %5, float* %m_fSinBeta, align 4, !tbaa !119
  %fGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 5
  %6 = load float, float* %fGamma, align 4, !tbaa !120
  %7 = tail call fast float @llvm.cos.f32(float %6)
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  store float %7, float* %m_fCosGamma, align 8, !tbaa !121
  %8 = tail call fast float @llvm.sin.f32(float %6)
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  store float %8, float* %m_fSinGamma, align 4, !tbaa !122
  %mul = fmul fast float %0, 2.000000e+00
  %9 = tail call fast float @llvm.cos.f32(float %mul)
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  store float %9, float* %m_fCos2Alpha, align 8, !tbaa !123
  %10 = tail call fast float @llvm.sin.f32(float %mul)
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  store float %10, float* %m_fSin2Alpha, align 4, !tbaa !124
  %mul17 = fmul fast float %3, 2.000000e+00
  %11 = tail call fast float @llvm.cos.f32(float %mul17)
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  store float %11, float* %m_fCos2Beta, align 8, !tbaa !125
  %12 = tail call fast float @llvm.sin.f32(float %mul17)
  %m_fSin2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 24
  store float %12, float* %m_fSin2Beta, align 4, !tbaa !126
  %mul23 = fmul fast float %6, 2.000000e+00
  %13 = tail call fast float @llvm.cos.f32(float %mul23)
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  store float %13, float* %m_fCos2Gamma, align 8, !tbaa !127
  %14 = tail call fast float @llvm.sin.f32(float %mul23)
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  store float %14, float* %m_fSin2Gamma, align 4, !tbaa !128
  %mul29 = fmul fast float %0, 3.000000e+00
  %15 = tail call fast float @llvm.cos.f32(float %mul29)
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  store float %15, float* %m_fCos3Alpha, align 8, !tbaa !129
  %16 = tail call fast float @llvm.sin.f32(float %mul29)
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  store float %16, float* %m_fSin3Alpha, align 4, !tbaa !130
  %mul35 = fmul fast float %3, 3.000000e+00
  %17 = tail call fast float @llvm.cos.f32(float %mul35)
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  store float %17, float* %m_fCos3Beta, align 8, !tbaa !131
  %18 = tail call fast float @llvm.sin.f32(float %mul35)
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  store float %18, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul41 = fmul fast float %6, 3.000000e+00
  %19 = tail call fast float @llvm.cos.f32(float %mul41)
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  store float %19, float* %m_fCos3Gamma, align 8, !tbaa !133
  %20 = tail call fast float @llvm.sin.f32(float %mul41)
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  store float %20, float* %m_fSin3Gamma, align 4, !tbaa !134
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* nocapture %this, %class.Orientation* nocapture readonly byval(%class.Orientation) align 8 %orientation) local_unnamed_addr #3 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %m_orientation to i8*
  %1 = bitcast %class.Orientation* %orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !135
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14GetOrientationEv(%class.Orientation* noalias nocapture sret %agg.result, %class.CAmbisonicProcessor* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %agg.result to i8*
  %1 = bitcast %class.Orientation* %m_orientation to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !135
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  %1 = load i8, i8* %0, align 4, !tbaa !54, !range !55
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !49
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end11, label %if.end3

if.end3:                                          ; preds = %if.end
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr = load i32, i32* %2, align 8, !tbaa !49
  %cmp5 = icmp ugt i32 %.pr, 1
  br i1 %cmp5, label %if.end7, label %if.end11

if.end7:                                          ; preds = %if.end3
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr19 = load i32, i32* %2, align 8, !tbaa !49
  %cmp9 = icmp ugt i32 %.pr19, 2
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7, %if.end3, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfScratchBufferA to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !98
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !53
  %cmp167 = icmp eq i32 %4, 0
  br i1 %cmp167, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i156 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup91, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup91, %for.body.lr.ph
  %indvars.iv173 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next174, %for.cond.cleanup91 ]
  %5 = load i8*, i8** %0, align 8, !tbaa !98
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i156, align 8, !tbaa !43
  %arrayidx.i157 = getelementptr inbounds float*, float** %6, i64 %indvars.iv173
  %7 = bitcast float** %arrayidx.i157 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !43
  %9 = load i32, i32* %m_nBlockSize, align 4, !tbaa !104
  %conv6 = zext i32 %9 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %8, i64 %mul7, i1 false)
  %10 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %11 = load i32, i32* %m_nBlockSize, align 4, !tbaa !104
  %idxprom = zext i32 %11 to i64
  %arrayidx = getelementptr inbounds float, float* %10, i64 %idxprom
  %12 = bitcast float* %arrayidx to i8*
  %13 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %sub = sub i32 %13, %11
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %mul13, i1 false)
  %14 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !99
  %15 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %16 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !102
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %14, float* %15, %struct.kiss_fft_cpx* %16) #24
  %17 = load i32, i32* %m_nFFTBins, align 8, !tbaa !108
  %cmp16158 = icmp eq i32 %17, 0
  br i1 %cmp16158, label %for.cond.cleanup17, label %for.body18.lr.ph

for.body18.lr.ph:                                 ; preds = %for.body
  %18 = trunc i64 %indvars.iv173 to i32
  %conv.i = uitofp i32 %18 to double
  %19 = tail call fast double @llvm.sqrt.f64(double %conv.i) #24
  %conv2 = fptosi double %19 to i32
  %20 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !102
  %21 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !101
  %idxprom22 = zext i32 %conv2 to i64
  %arrayidx23 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %21, i64 %idxprom22
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx23, align 8, !tbaa !43
  br label %for.body18

for.cond.cleanup17:                               ; preds = %for.body18, %for.body
  %23 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !100
  %24 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !102
  %25 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %23, %struct.kiss_fft_cpx* %24, float* %25) #24
  %26 = load i32, i32* %m_nFFTSize, align 8, !tbaa !107
  %cmp71160 = icmp eq i32 %26, 0
  br i1 %cmp71160, label %for.cond.cleanup17.for.cond.cleanup72_crit_edge, label %for.body73.lr.ph

for.cond.cleanup17.for.cond.cleanup72_crit_edge:  ; preds = %for.cond.cleanup17
  %.pre = load i8*, i8** %0, align 8, !tbaa !98
  br label %for.cond.cleanup72

for.body73.lr.ph:                                 ; preds = %for.cond.cleanup17
  %27 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %28 = zext i32 %26 to i64
  %29 = bitcast float* %27 to i8*
  %30 = add nsw i64 %28, -1
  %xtraiter = and i64 %28, 3
  %31 = icmp ult i64 %30, 3
  br i1 %31, label %for.cond.cleanup72.loopexit.unr-lcssa, label %for.body73.lr.ph.new

for.body73.lr.ph.new:                             ; preds = %for.body73.lr.ph
  %unroll_iter = sub nsw i64 %28, %xtraiter
  br label %for.body73

for.body18:                                       ; preds = %for.body18, %for.body18.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next, %for.body18 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %20, i64 %indvars.iv, i32 0
  %32 = load float, float* %r, align 4, !tbaa !136
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %indvars.iv, i32 0
  %33 = load float, float* %r26, align 4, !tbaa !136
  %mul27 = fmul fast float %33, %32
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %20, i64 %indvars.iv, i32 1
  %34 = load float, float* %i, align 4, !tbaa !138
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %indvars.iv, i32 1
  %35 = load float, float* %i36, align 4, !tbaa !138
  %mul37 = fmul fast float %35, %34
  %sub38 = fsub fast float %mul27, %mul37
  %mul50 = fmul fast float %35, %32
  %mul61 = fmul fast float %34, %33
  %add = fadd fast float %mul50, %mul61
  store float %sub38, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %36 = load i32, i32* %m_nFFTBins, align 8, !tbaa !108
  %37 = zext i32 %36 to i64
  %cmp16 = icmp ult i64 %indvars.iv.next, %37
  br i1 %cmp16, label %for.body18, label %for.cond.cleanup17

for.cond.cleanup72.loopexit.unr-lcssa:            ; preds = %for.body73, %for.body73.lr.ph
  %indvars.iv169.unr = phi i64 [ 0, %for.body73.lr.ph ], [ %indvars.iv.next170.3, %for.body73 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup72, label %for.body73.epil

for.body73.epil:                                  ; preds = %for.body73.epil, %for.cond.cleanup72.loopexit.unr-lcssa
  %indvars.iv169.epil = phi i64 [ %indvars.iv.next170.epil, %for.body73.epil ], [ %indvars.iv169.unr, %for.cond.cleanup72.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body73.epil ], [ %xtraiter, %for.cond.cleanup72.loopexit.unr-lcssa ]
  %38 = load float, float* %m_fFFTScaler, align 4, !tbaa !109
  %arrayidx76.epil = getelementptr inbounds float, float* %27, i64 %indvars.iv169.epil
  %39 = load float, float* %arrayidx76.epil, align 4, !tbaa !47
  %mul77.epil = fmul fast float %39, %38
  store float %mul77.epil, float* %arrayidx76.epil, align 4, !tbaa !47
  %indvars.iv.next170.epil = add nuw nsw i64 %indvars.iv169.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup72, label %for.body73.epil, !llvm.loop !139

for.cond.cleanup72:                               ; preds = %for.body73.epil, %for.cond.cleanup72.loopexit.unr-lcssa, %for.cond.cleanup17.for.cond.cleanup72_crit_edge
  %40 = phi i8* [ %.pre, %for.cond.cleanup17.for.cond.cleanup72_crit_edge ], [ %29, %for.body73.epil ], [ %29, %for.cond.cleanup72.loopexit.unr-lcssa ]
  %41 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i156, align 8, !tbaa !43
  %arrayidx.i155 = getelementptr inbounds float*, float** %41, i64 %indvars.iv173
  %42 = bitcast float** %arrayidx.i155 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !43
  %44 = load i32, i32* %m_nBlockSize, align 4, !tbaa !104
  %conv86 = zext i32 %44 to i64
  %mul87 = shl nuw nsw i64 %conv86, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %40, i64 %mul87, i1 false)
  %45 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !106
  %cmp90162 = icmp eq i32 %45, 0
  %46 = load float**, float*** %m_pfOverlap, align 8, !tbaa !103
  %arrayidx94163 = getelementptr inbounds float*, float** %46, i64 %indvars.iv173
  br i1 %cmp90162, label %for.cond.cleanup72.for.cond.cleanup91_crit_edge, label %for.body92.lr.ph

for.cond.cleanup72.for.cond.cleanup91_crit_edge:  ; preds = %for.cond.cleanup72
  %.phi.trans.insert = bitcast float** %arrayidx94163 to i8**
  %.pre176 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !43
  br label %for.cond.cleanup91

for.body92.lr.ph:                                 ; preds = %for.cond.cleanup72
  %47 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i156, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %47, i64 %indvars.iv173
  %48 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %49 = zext i32 %45 to i64
  %.pre175 = load float*, float** %arrayidx94163, align 8, !tbaa !43
  %50 = bitcast float* %.pre175 to i8*
  %51 = add nsw i64 %49, -1
  %xtraiter178 = and i64 %49, 3
  %52 = icmp ult i64 %51, 3
  br i1 %52, label %for.cond.cleanup91.loopexit.unr-lcssa, label %for.body92.lr.ph.new

for.body92.lr.ph.new:                             ; preds = %for.body92.lr.ph
  %unroll_iter181 = sub nsw i64 %49, %xtraiter178
  br label %for.body92

for.body73:                                       ; preds = %for.body73, %for.body73.lr.ph.new
  %indvars.iv169 = phi i64 [ 0, %for.body73.lr.ph.new ], [ %indvars.iv.next170.3, %for.body73 ]
  %niter = phi i64 [ %unroll_iter, %for.body73.lr.ph.new ], [ %niter.nsub.3, %for.body73 ]
  %53 = load float, float* %m_fFFTScaler, align 4, !tbaa !109
  %arrayidx76 = getelementptr inbounds float, float* %27, i64 %indvars.iv169
  %54 = load float, float* %arrayidx76, align 4, !tbaa !47
  %mul77 = fmul fast float %54, %53
  store float %mul77, float* %arrayidx76, align 4, !tbaa !47
  %indvars.iv.next170 = or i64 %indvars.iv169, 1
  %55 = load float, float* %m_fFFTScaler, align 4, !tbaa !109
  %arrayidx76.1 = getelementptr inbounds float, float* %27, i64 %indvars.iv.next170
  %56 = load float, float* %arrayidx76.1, align 4, !tbaa !47
  %mul77.1 = fmul fast float %56, %55
  store float %mul77.1, float* %arrayidx76.1, align 4, !tbaa !47
  %indvars.iv.next170.1 = or i64 %indvars.iv169, 2
  %57 = load float, float* %m_fFFTScaler, align 4, !tbaa !109
  %arrayidx76.2 = getelementptr inbounds float, float* %27, i64 %indvars.iv.next170.1
  %58 = load float, float* %arrayidx76.2, align 4, !tbaa !47
  %mul77.2 = fmul fast float %58, %57
  store float %mul77.2, float* %arrayidx76.2, align 4, !tbaa !47
  %indvars.iv.next170.2 = or i64 %indvars.iv169, 3
  %59 = load float, float* %m_fFFTScaler, align 4, !tbaa !109
  %arrayidx76.3 = getelementptr inbounds float, float* %27, i64 %indvars.iv.next170.2
  %60 = load float, float* %arrayidx76.3, align 4, !tbaa !47
  %mul77.3 = fmul fast float %60, %59
  store float %mul77.3, float* %arrayidx76.3, align 4, !tbaa !47
  %indvars.iv.next170.3 = add nuw nsw i64 %indvars.iv169, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup72.loopexit.unr-lcssa, label %for.body73

for.cond.cleanup91.loopexit.unr-lcssa:            ; preds = %for.body92, %for.body92.lr.ph
  %indvars.iv171.unr = phi i64 [ 0, %for.body92.lr.ph ], [ %indvars.iv.next172.3, %for.body92 ]
  %lcmp.mod180 = icmp eq i64 %xtraiter178, 0
  br i1 %lcmp.mod180, label %for.cond.cleanup91, label %for.body92.epil

for.body92.epil:                                  ; preds = %for.body92.epil, %for.cond.cleanup91.loopexit.unr-lcssa
  %indvars.iv171.epil = phi i64 [ %indvars.iv.next172.epil, %for.body92.epil ], [ %indvars.iv171.unr, %for.cond.cleanup91.loopexit.unr-lcssa ]
  %epil.iter179 = phi i64 [ %epil.iter179.sub, %for.body92.epil ], [ %xtraiter178, %for.cond.cleanup91.loopexit.unr-lcssa ]
  %arrayidx96.epil = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv171.epil
  %61 = load float, float* %arrayidx96.epil, align 4, !tbaa !47
  %arrayidx101.epil = getelementptr inbounds float, float* %48, i64 %indvars.iv171.epil
  %62 = load float, float* %arrayidx101.epil, align 4, !tbaa !47
  %add102.epil = fadd fast float %62, %61
  store float %add102.epil, float* %arrayidx101.epil, align 4, !tbaa !47
  %indvars.iv.next172.epil = add nuw nsw i64 %indvars.iv171.epil, 1
  %epil.iter179.sub = add i64 %epil.iter179, -1
  %epil.iter179.cmp = icmp eq i64 %epil.iter179.sub, 0
  br i1 %epil.iter179.cmp, label %for.cond.cleanup91, label %for.body92.epil, !llvm.loop !140

for.cond.cleanup91:                               ; preds = %for.body92.epil, %for.cond.cleanup91.loopexit.unr-lcssa, %for.cond.cleanup72.for.cond.cleanup91_crit_edge
  %63 = phi i8* [ %.pre176, %for.cond.cleanup72.for.cond.cleanup91_crit_edge ], [ %50, %for.body92.epil ], [ %50, %for.cond.cleanup91.loopexit.unr-lcssa ]
  %64 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !98
  %65 = load i32, i32* %m_nBlockSize, align 4, !tbaa !104
  %idxprom111 = zext i32 %65 to i64
  %arrayidx112 = getelementptr inbounds float, float* %64, i64 %idxprom111
  %66 = bitcast float* %arrayidx112 to i8*
  %conv114 = zext i32 %45 to i64
  %mul115 = shl nuw nsw i64 %conv114, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %66, i64 %mul115, i1 false)
  %indvars.iv.next174 = add nuw nsw i64 %indvars.iv173, 1
  %67 = load i32, i32* %3, align 8, !tbaa !53
  %68 = zext i32 %67 to i64
  %cmp = icmp ult i64 %indvars.iv.next174, %68
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body92:                                       ; preds = %for.body92, %for.body92.lr.ph.new
  %indvars.iv171 = phi i64 [ 0, %for.body92.lr.ph.new ], [ %indvars.iv.next172.3, %for.body92 ]
  %niter182 = phi i64 [ %unroll_iter181, %for.body92.lr.ph.new ], [ %niter182.nsub.3, %for.body92 ]
  %arrayidx96 = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv171
  %69 = load float, float* %arrayidx96, align 4, !tbaa !47
  %arrayidx101 = getelementptr inbounds float, float* %48, i64 %indvars.iv171
  %70 = load float, float* %arrayidx101, align 4, !tbaa !47
  %add102 = fadd fast float %70, %69
  store float %add102, float* %arrayidx101, align 4, !tbaa !47
  %indvars.iv.next172 = or i64 %indvars.iv171, 1
  %arrayidx96.1 = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv.next172
  %71 = load float, float* %arrayidx96.1, align 4, !tbaa !47
  %arrayidx101.1 = getelementptr inbounds float, float* %48, i64 %indvars.iv.next172
  %72 = load float, float* %arrayidx101.1, align 4, !tbaa !47
  %add102.1 = fadd fast float %72, %71
  store float %add102.1, float* %arrayidx101.1, align 4, !tbaa !47
  %indvars.iv.next172.1 = or i64 %indvars.iv171, 2
  %arrayidx96.2 = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv.next172.1
  %73 = load float, float* %arrayidx96.2, align 4, !tbaa !47
  %arrayidx101.2 = getelementptr inbounds float, float* %48, i64 %indvars.iv.next172.1
  %74 = load float, float* %arrayidx101.2, align 4, !tbaa !47
  %add102.2 = fadd fast float %74, %73
  store float %add102.2, float* %arrayidx101.2, align 4, !tbaa !47
  %indvars.iv.next172.2 = or i64 %indvars.iv171, 3
  %arrayidx96.3 = getelementptr inbounds float, float* %.pre175, i64 %indvars.iv.next172.2
  %75 = load float, float* %arrayidx96.3, align 4, !tbaa !47
  %arrayidx101.3 = getelementptr inbounds float, float* %48, i64 %indvars.iv.next172.2
  %76 = load float, float* %arrayidx101.3, align 4, !tbaa !47
  %add102.3 = fadd fast float %76, %75
  store float %add102.3, float* %arrayidx101.3, align 4, !tbaa !47
  %indvars.iv.next172.3 = add nuw nsw i64 %indvars.iv171, 4
  %niter182.nsub.3 = add i64 %niter182, -4
  %niter182.ncmp.3 = icmp eq i64 %niter182.nsub.3, 0
  br i1 %niter182.ncmp.3, label %for.cond.cleanup91.loopexit.unr-lcssa, label %for.body92
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #11 align 2 {
entry:
  %cmp175 = icmp eq i32 %nSamples, 0
  br i1 %cmp175, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 3
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i174 = getelementptr inbounds float*, float** %0, i64 1
  %2 = load float*, float** %arrayidx.i174, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !95
  %arrayidx7 = getelementptr inbounds float, float* %3, i64 1
  %arrayidx.i172 = getelementptr inbounds float*, float** %0, i64 2
  %4 = load float*, float** %arrayidx.i172, align 8, !tbaa !43
  %arrayidx13 = getelementptr inbounds float, float* %3, i64 2
  %5 = bitcast float* %arrayidx13 to i32*
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 3
  %6 = bitcast float* %arrayidx7 to i32*
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %7 = load float, float* %arrayidx, align 4, !tbaa !47
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %9 = fmul fast float %8, %7
  %arrayidx5 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !47
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul6 = fmul fast float %11, %10
  %add = fsub fast float %mul6, %9
  store float %add, float* %arrayidx7, align 4, !tbaa !47
  %arrayidx11 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %12 = bitcast float* %arrayidx11 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !47
  store i32 %13, i32* %5, align 4, !tbaa !47
  %14 = load float, float* %arrayidx, align 4, !tbaa !47
  %15 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul19 = fmul fast float %15, %14
  %16 = load float, float* %arrayidx5, align 4, !tbaa !47
  %17 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %mul25 = fmul fast float %17, %16
  %add26 = fadd fast float %mul25, %mul19
  store float %add26, float* %arrayidx28, align 4, !tbaa !47
  %18 = bitcast float* %arrayidx5 to i32*
  store float %add, float* %arrayidx5, align 4, !tbaa !47
  %19 = load float, float* %arrayidx13, align 4, !tbaa !47
  %20 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul37 = fmul fast float %20, %19
  %21 = load float, float* %arrayidx28, align 4, !tbaa !47
  %22 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul40 = fmul fast float %22, %21
  %add41 = fadd fast float %mul40, %mul37
  store float %add41, float* %arrayidx11, align 4, !tbaa !47
  %23 = load float, float* %arrayidx28, align 4, !tbaa !47
  %24 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul49 = fmul fast float %24, %23
  %25 = load float, float* %arrayidx13, align 4, !tbaa !47
  %26 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul53 = fmul fast float %26, %25
  %sub54 = fsub fast float %mul49, %mul53
  store float %sub54, float* %arrayidx, align 4, !tbaa !47
  %27 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %28 = fmul fast float %sub54, %27
  %29 = load float, float* %arrayidx5, align 4, !tbaa !47
  %30 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul69 = fmul fast float %30, %29
  %add70 = fsub fast float %mul69, %28
  store float %add70, float* %arrayidx7, align 4, !tbaa !47
  %31 = load i32, i32* %12, align 4, !tbaa !47
  store i32 %31, i32* %5, align 4, !tbaa !47
  %32 = load float, float* %arrayidx, align 4, !tbaa !47
  %33 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul84 = fmul fast float %33, %32
  %34 = load float, float* %arrayidx5, align 4, !tbaa !47
  %35 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %mul90 = fmul fast float %35, %34
  %add91 = fadd fast float %mul90, %mul84
  store float %add91, float* %arrayidx28, align 4, !tbaa !47
  store float %add91, float* %arrayidx, align 4, !tbaa !47
  %36 = load i32, i32* %6, align 4, !tbaa !47
  store i32 %36, i32* %18, align 4, !tbaa !47
  %37 = load i32, i32* %5, align 4, !tbaa !47
  store i32 %37, i32* %12, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #8 align 2 {
entry:
  %cmp380 = icmp eq i32 %nSamples, 0
  br i1 %cmp380, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i374 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i374, align 8, !tbaa !43
  %arrayidx.i375 = getelementptr inbounds float*, float** %0, i64 8
  %1 = load float*, float** %arrayidx.i375, align 8, !tbaa !43
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %arrayidx.i373 = getelementptr inbounds float*, float** %0, i64 4
  %2 = load float*, float** %arrayidx.i373, align 8, !tbaa !43
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !95
  %arrayidx8 = getelementptr inbounds float, float* %3, i64 4
  %arrayidx.i371 = getelementptr inbounds float*, float** %0, i64 7
  %4 = load float*, float** %arrayidx.i371, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i369 = getelementptr inbounds float*, float** %0, i64 5
  %5 = load float*, float** %arrayidx.i369, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %arrayidx22 = getelementptr inbounds float, float* %3, i64 5
  %arrayidx.i367 = getelementptr inbounds float*, float** %0, i64 6
  %6 = load float*, float** %arrayidx.i367, align 8, !tbaa !43
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 6
  %7 = bitcast float* %arrayidx28 to i32*
  %arrayidx43 = getelementptr inbounds float, float* %3, i64 7
  %arrayidx58 = getelementptr inbounds float, float* %3, i64 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %8 = bitcast float* %arrayidx43 to i32*
  %9 = bitcast float* %arrayidx22 to i32*
  %10 = bitcast float* %arrayidx58 to i32*
  %11 = bitcast float* %arrayidx8 to i32*
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %12 = load float, float* %arrayidx, align 4, !tbaa !47
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %14 = fmul fast float %13, %12
  %arrayidx6 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %15 = load float, float* %arrayidx6, align 4, !tbaa !47
  %16 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul7 = fmul fast float %16, %15
  %add = fsub fast float %mul7, %14
  store float %add, float* %arrayidx8, align 4, !tbaa !47
  %arrayidx12 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %17 = load float, float* %arrayidx12, align 4, !tbaa !47
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %19 = fmul fast float %18, %17
  %arrayidx18 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %20 = load float, float* %arrayidx18, align 4, !tbaa !47
  %21 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul19 = fmul fast float %21, %20
  %add20 = fsub fast float %mul19, %19
  store float %add20, float* %arrayidx22, align 4, !tbaa !47
  %arrayidx26 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %22 = bitcast float* %arrayidx26 to i32*
  %23 = load i32, i32* %22, align 4, !tbaa !47
  store i32 %23, i32* %7, align 4, !tbaa !47
  %24 = load float, float* %arrayidx12, align 4, !tbaa !47
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul34 = fmul fast float %25, %24
  %26 = load float, float* %arrayidx18, align 4, !tbaa !47
  %27 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %mul40 = fmul fast float %27, %26
  %add41 = fadd fast float %mul40, %mul34
  store float %add41, float* %arrayidx43, align 4, !tbaa !47
  %28 = load float, float* %arrayidx, align 4, !tbaa !47
  %29 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul49 = fmul fast float %29, %28
  %30 = load float, float* %arrayidx6, align 4, !tbaa !47
  %31 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %mul55 = fmul fast float %31, %30
  %add56 = fadd fast float %mul55, %mul49
  store float %add56, float* %arrayidx58, align 4, !tbaa !47
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %33 = fmul fast float %add20, %32
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul65 = fmul fast float %add, %34
  %add66 = fsub fast float %mul65, %33
  store float %add66, float* %arrayidx6, align 4, !tbaa !47
  %35 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %36 = load float, float* %arrayidx22, align 4, !tbaa !47
  %37 = fmul fast float %36, %35
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %39 = load float, float* %arrayidx8, align 4, !tbaa !47
  %mul79 = fmul fast float %39, %38
  %add80 = fsub fast float %mul79, %37
  store float %add80, float* %arrayidx18, align 4, !tbaa !47
  %40 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul85 = fmul fast float %40, 7.500000e-01
  %add86 = fadd fast float %mul85, 2.500000e-01
  %41 = load float, float* %arrayidx28, align 4, !tbaa !47
  %mul89 = fmul fast float %add86, %41
  %conv = fpext float %mul89 to double
  %42 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %conv.i353 = fpext float %42 to double
  %43 = load float, float* %arrayidx58, align 4, !tbaa !47
  %conv97 = fpext float %43 to double
  %44 = fmul fast double %conv.i353, %conv.i353
  %mul94 = fmul fast double %44, 0x3FEBB67AE0000000
  %mul98 = fmul fast double %mul94, %conv97
  %add99 = fadd fast double %mul98, %conv
  %mul101 = fmul fast float %42, 0x3FFBB67AE0000000
  %45 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul103 = fmul fast float %mul101, %45
  %46 = load float, float* %arrayidx43, align 4, !tbaa !47
  %mul106 = fmul fast float %mul103, %46
  %conv107 = fpext float %mul106 to double
  %add108 = fadd fast double %add99, %conv107
  %conv109 = fptrunc double %add108 to float
  store float %conv109, float* %arrayidx26, align 4, !tbaa !47
  %47 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %48 = load float, float* %arrayidx43, align 4, !tbaa !47
  %mul117 = fmul fast float %48, %47
  %49 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %50 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %51 = load float, float* %arrayidx28, align 4, !tbaa !47
  %mul124.neg = fmul fast float %51, 0x3FFBB67AE0000000
  %52 = load float, float* %arrayidx58, align 4, !tbaa !47
  %reass.add377379 = fsub fast float %52, %mul124.neg
  %reass.mul378 = fmul fast float %50, %49
  %reass.mul = fmul fast float %reass.mul378, %reass.add377379
  %add132 = fadd fast float %reass.mul, %mul117
  store float %add132, float* %arrayidx12, align 4, !tbaa !47
  %53 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul138 = fmul fast float %53, 2.500000e-01
  %add139 = fadd fast float %mul138, 7.500000e-01
  %54 = load float, float* %arrayidx58, align 4, !tbaa !47
  %mul142 = fmul fast float %add139, %54
  %55 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %56 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul145 = fmul fast float %56, %55
  %57 = load float, float* %arrayidx43, align 4, !tbaa !47
  %mul148 = fmul fast float %mul145, %57
  %sub149 = fsub fast float %mul142, %mul148
  %conv150 = fpext float %sub149 to double
  %conv.i = fpext float %56 to double
  %58 = load float, float* %arrayidx28, align 4, !tbaa !47
  %conv158 = fpext float %58 to double
  %59 = fmul fast double %conv.i, %conv.i
  %mul155 = fmul fast double %59, 0x3FEBB67AE0000000
  %mul159 = fmul fast double %mul155, %conv158
  %add160 = fadd fast double %mul159, %conv150
  %conv161 = fptrunc double %add160 to float
  store float %conv161, float* %arrayidx, align 4, !tbaa !47
  %60 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %61 = fmul fast float %60, %conv161
  %62 = load float, float* %arrayidx6, align 4, !tbaa !47
  %63 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul176 = fmul fast float %63, %62
  %add177 = fsub fast float %mul176, %61
  store float %add177, float* %arrayidx8, align 4, !tbaa !47
  %64 = load float, float* %arrayidx12, align 4, !tbaa !47
  %65 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %66 = fmul fast float %65, %64
  %67 = load float, float* %arrayidx18, align 4, !tbaa !47
  %68 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul190 = fmul fast float %68, %67
  %add191 = fsub fast float %mul190, %66
  store float %add191, float* %arrayidx22, align 4, !tbaa !47
  %69 = load i32, i32* %22, align 4, !tbaa !47
  store i32 %69, i32* %7, align 4, !tbaa !47
  %70 = load float, float* %arrayidx12, align 4, !tbaa !47
  %71 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul205 = fmul fast float %71, %70
  %72 = load float, float* %arrayidx18, align 4, !tbaa !47
  %73 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %mul211 = fmul fast float %73, %72
  %add212 = fadd fast float %mul211, %mul205
  store float %add212, float* %arrayidx43, align 4, !tbaa !47
  %74 = load float, float* %arrayidx, align 4, !tbaa !47
  %75 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul220 = fmul fast float %75, %74
  %76 = load float, float* %arrayidx6, align 4, !tbaa !47
  %77 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %mul226 = fmul fast float %77, %76
  %add227 = fadd fast float %mul226, %mul220
  store float %add227, float* %arrayidx58, align 4, !tbaa !47
  store i32 %69, i32* %22, align 4, !tbaa !47
  %78 = load i32, i32* %8, align 4, !tbaa !47
  %79 = bitcast float* %arrayidx12 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !47
  %80 = load i32, i32* %9, align 4, !tbaa !47
  %81 = bitcast float* %arrayidx18 to i32*
  store i32 %80, i32* %81, align 4, !tbaa !47
  %82 = load i32, i32* %10, align 4, !tbaa !47
  %83 = bitcast float* %arrayidx to i32*
  store i32 %82, i32* %83, align 4, !tbaa !47
  %84 = load i32, i32* %11, align 4, !tbaa !47
  %85 = bitcast float* %arrayidx6 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #8 align 2 {
entry:
  %cmp680 = icmp eq i32 %nSamples, 0
  br i1 %cmp680, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i654 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i654, align 8, !tbaa !43
  %arrayidx.i655 = getelementptr inbounds float*, float** %0, i64 15
  %1 = load float*, float** %arrayidx.i655, align 8, !tbaa !43
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  %arrayidx.i653 = getelementptr inbounds float*, float** %0, i64 9
  %2 = load float*, float** %arrayidx.i653, align 8, !tbaa !43
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !95
  %arrayidx10 = getelementptr inbounds float, float* %3, i64 9
  %arrayidx.i651 = getelementptr inbounds float*, float** %0, i64 14
  %4 = load float*, float** %arrayidx.i651, align 8, !tbaa !43
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %arrayidx.i649 = getelementptr inbounds float*, float** %0, i64 10
  %5 = load float*, float** %arrayidx.i649, align 8, !tbaa !43
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %arrayidx24 = getelementptr inbounds float, float* %3, i64 10
  %arrayidx.i647 = getelementptr inbounds float*, float** %0, i64 13
  %6 = load float*, float** %arrayidx.i647, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i645 = getelementptr inbounds float*, float** %0, i64 11
  %7 = load float*, float** %arrayidx.i645, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %arrayidx38 = getelementptr inbounds float, float* %3, i64 11
  %arrayidx.i643 = getelementptr inbounds float*, float** %0, i64 12
  %8 = load float*, float** %arrayidx.i643, align 8, !tbaa !43
  %arrayidx44 = getelementptr inbounds float, float* %3, i64 12
  %9 = bitcast float* %arrayidx44 to i32*
  %arrayidx59 = getelementptr inbounds float, float* %3, i64 13
  %arrayidx74 = getelementptr inbounds float, float* %3, i64 14
  %arrayidx89 = getelementptr inbounds float, float* %3, i64 15
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %10 = bitcast float* %arrayidx24 to i32*
  %11 = bitcast float* %arrayidx38 to i32*
  %12 = bitcast float* %arrayidx59 to i32*
  %13 = bitcast float* %arrayidx74 to i32*
  %14 = bitcast float* %arrayidx89 to i32*
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %15 = load float, float* %arrayidx, align 4, !tbaa !47
  %16 = load float, float* %m_fSin3Alpha, align 4, !tbaa !130
  %17 = fmul fast float %16, %15
  %arrayidx8 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %18 = load float, float* %arrayidx8, align 4, !tbaa !47
  %19 = load float, float* %m_fCos3Alpha, align 8, !tbaa !129
  %mul9 = fmul fast float %19, %18
  %add = fsub fast float %mul9, %17
  store float %add, float* %arrayidx10, align 4, !tbaa !47
  %arrayidx14 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %20 = load float, float* %arrayidx14, align 4, !tbaa !47
  %21 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %22 = fmul fast float %21, %20
  %arrayidx20 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %23 = load float, float* %arrayidx20, align 4, !tbaa !47
  %24 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul21 = fmul fast float %24, %23
  %add22 = fsub fast float %mul21, %22
  store float %add22, float* %arrayidx24, align 4, !tbaa !47
  %arrayidx28 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %25 = load float, float* %arrayidx28, align 4, !tbaa !47
  %26 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %27 = fmul fast float %26, %25
  %arrayidx34 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %28 = load float, float* %arrayidx34, align 4, !tbaa !47
  %29 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul35 = fmul fast float %29, %28
  %add36 = fsub fast float %mul35, %27
  store float %add36, float* %arrayidx38, align 4, !tbaa !47
  %arrayidx42 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %30 = bitcast float* %arrayidx42 to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !47
  store i32 %31, i32* %9, align 4, !tbaa !47
  %32 = load float, float* %arrayidx28, align 4, !tbaa !47
  %33 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul50 = fmul fast float %33, %32
  %34 = load float, float* %arrayidx34, align 4, !tbaa !47
  %35 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %mul56 = fmul fast float %35, %34
  %add57 = fadd fast float %mul56, %mul50
  store float %add57, float* %arrayidx59, align 4, !tbaa !47
  %36 = load float, float* %arrayidx14, align 4, !tbaa !47
  %37 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul65 = fmul fast float %37, %36
  %38 = load float, float* %arrayidx20, align 4, !tbaa !47
  %39 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %mul71 = fmul fast float %39, %38
  %add72 = fadd fast float %mul71, %mul65
  store float %add72, float* %arrayidx74, align 4, !tbaa !47
  %40 = load float, float* %arrayidx, align 4, !tbaa !47
  %41 = load float, float* %m_fCos3Alpha, align 8, !tbaa !129
  %mul80 = fmul fast float %41, %40
  %42 = load float, float* %arrayidx8, align 4, !tbaa !47
  %43 = load float, float* %m_fSin3Alpha, align 4, !tbaa !130
  %mul86 = fmul fast float %43, %42
  %add87 = fadd fast float %mul86, %mul80
  store float %add87, float* %arrayidx89, align 4, !tbaa !47
  %mul92 = fmul fast float %add, 1.250000e-01
  %44 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul93 = fmul fast float %44, 3.000000e+00
  %add94 = fadd fast float %mul93, 5.000000e+00
  %mul95 = fmul fast float %mul92, %add94
  %45 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %46 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul100 = fmul fast float %add22, 0xBFF3988E20000000
  %mul100.neg = fmul fast float %mul100, %45
  %square = fmul fast float %46, 0x3FEEFBDEC0000000
  %mul108 = fmul fast float %square, %add36
  %reass.add667 = fadd fast float %mul108, %mul100.neg
  %reass.mul668 = fmul fast float %reass.add667, %46
  %add109 = fadd fast float %reass.mul668, %mul95
  store float %add109, float* %arrayidx8, align 4, !tbaa !47
  %47 = load float, float* %arrayidx24, align 4, !tbaa !47
  %48 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul117 = fmul fast float %48, %47
  %49 = load float, float* %arrayidx38, align 4, !tbaa !47
  %50 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %51 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul124.neg = fmul fast float %49, 0x3FF94C5840000000
  %52 = load float, float* %arrayidx10, align 4, !tbaa !47
  %mul132 = fmul fast float %52, 0x3FF3988E20000000
  %reass.add677679 = fsub fast float %mul132, %mul124.neg
  %reass.mul678 = fmul fast float %51, %50
  %reass.mul670 = fmul fast float %reass.mul678, %reass.add677679
  %add133 = fadd fast float %reass.mul670, %mul117
  store float %add133, float* %arrayidx20, align 4, !tbaa !47
  %53 = load float, float* %arrayidx38, align 4, !tbaa !47
  %mul140 = fmul fast float %53, 1.250000e-01
  %54 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul142 = fmul fast float %54, 5.000000e+00
  %add143 = fadd fast float %mul142, 3.000000e+00
  %mul144 = fmul fast float %mul140, %add143
  %55 = load float, float* %arrayidx24, align 4, !tbaa !47
  %56 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %57 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul151 = fmul fast float %55, 0xBFF94C5840000000
  %mul151.neg = fmul fast float %mul151, %56
  %58 = load float, float* %arrayidx10, align 4, !tbaa !47
  %square656 = fmul fast float %57, 0x3FEEFBDEC0000000
  %mul159 = fmul fast float %square656, %58
  %reass.add671 = fadd fast float %mul159, %mul151.neg
  %reass.mul672 = fmul fast float %reass.add671, %57
  %add160 = fadd fast float %reass.mul672, %mul144
  store float %add160, float* %arrayidx34, align 4, !tbaa !47
  %59 = load float, float* %arrayidx44, align 4, !tbaa !47
  %mul167 = fmul fast float %59, 2.500000e-01
  %60 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul169 = fmul fast float %mul167, %60
  %61 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul171 = fmul fast float %61, 1.500000e+01
  %add172 = fadd fast float %mul171, -1.000000e+00
  %mul173 = fmul fast float %mul169, %add172
  %62 = load float, float* %arrayidx74, align 4, !tbaa !47
  %63 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul179 = fmul fast float %60, 0x3FFEFBDEC0000000
  %mul182 = fmul fast float %mul179, %62
  %64 = load float, float* %arrayidx89, align 4, !tbaa !47
  %mul187 = fmul fast float %63, 0x3FE94C5840000000
  %mul190 = fmul fast float %mul187, %64
  %65 = load float, float* %arrayidx59, align 4, !tbaa !47
  %mul195 = fmul fast float %65, 0x3FC3988E20000000
  %66 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul197 = fmul fast float %66, 5.000000e+00
  %add198 = fadd fast float %mul197, %63
  %mul199 = fmul fast float %mul195, %add198
  %reass.add673 = fadd fast float %mul190, %mul182
  %reass.mul674 = fmul fast float %63, %63
  %reass.mul = fmul fast float %reass.mul674, %reass.add673
  %add191 = fadd fast float %reass.mul, %mul173
  %add200 = fadd fast float %add191, %mul199
  store float %add200, float* %arrayidx42, align 4, !tbaa !47
  %67 = load float, float* %arrayidx59, align 4, !tbaa !47
  %mul207 = fmul fast float %67, 6.250000e-02
  %68 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %69 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %mul209 = fmul fast float %69, 1.500000e+01
  %add210 = fadd fast float %mul209, %68
  %mul211 = fmul fast float %mul207, %add210
  %70 = load float, float* %arrayidx74, align 4, !tbaa !47
  %71 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul217 = fmul fast float %71, 3.000000e+00
  %add218 = fadd fast float %mul217, 1.000000e+00
  %72 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul219 = fmul fast float %70, 0x3FD94C5840000000
  %mul221 = fmul fast float %mul219, %add218
  %73 = load float, float* %arrayidx89, align 4, !tbaa !47
  %mul228 = fmul fast float %68, 0x3FEEFBDEC0000000
  %square659 = fmul fast float %mul228, %72
  %mul231 = fmul fast float %square659, %73
  %reass.add663 = fadd fast float %mul221, %mul231
  %reass.mul664 = fmul fast float %reass.add663, %72
  %add232 = fadd fast float %reass.mul664, %mul211
  %conv = fpext float %add232 to double
  %74 = load float, float* %arrayidx44, align 4, !tbaa !47
  %conv237 = fpext float %74 to double
  %mul238 = fmul fast double %conv237, 0x3FC3988E20000000
  %75 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul241 = fmul fast float %75, 5.000000e+00
  %add242 = fadd fast float %mul241, %72
  %conv243 = fpext float %add242 to double
  %mul244 = fmul fast double %mul238, %conv243
  %sub245 = fsub fast double %conv, %mul244
  %conv246 = fptrunc double %sub245 to float
  store float %conv246, float* %arrayidx28, align 4, !tbaa !47
  %76 = load float, float* %arrayidx74, align 4, !tbaa !47
  %mul253 = fmul fast float %76, 1.250000e-01
  %77 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul255 = fmul fast float %77, 5.000000e+00
  %78 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %mul257 = fmul fast float %78, 3.000000e+00
  %add258 = fadd fast float %mul257, %mul255
  %mul259 = fmul fast float %mul253, %add258
  %79 = load float, float* %arrayidx89, align 4, !tbaa !47
  %80 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %add265 = fadd fast float %80, 3.000000e+00
  %81 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul266 = fmul fast float %79, 0x3FD3988E20000000
  %mul268 = fmul fast float %mul266, %add265
  %82 = load float, float* %arrayidx44, align 4, !tbaa !47
  %mul275 = fmul fast float %77, 0x3FFEFBDEC0000000
  %square660 = fmul fast float %mul275, %81
  %mul278 = fmul fast float %square660, %82
  %reass.add665 = fadd fast float %mul278, %mul268
  %reass.mul666 = fmul fast float %reass.add665, %81
  %add279 = fadd fast float %reass.mul666, %mul259
  %conv280 = fpext float %add279 to double
  %83 = load float, float* %arrayidx59, align 4, !tbaa !47
  %conv285 = fpext float %83 to double
  %mul286 = fmul fast double %conv285, 0x3FC94C5840000000
  %84 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul289 = fmul fast float %84, 3.000000e+00
  %sub290 = fsub fast float %81, %mul289
  %conv291 = fpext float %sub290 to double
  %mul292 = fmul fast double %mul286, %conv291
  %add293 = fadd fast double %mul292, %conv280
  %conv294 = fptrunc double %add293 to float
  store float %conv294, float* %arrayidx14, align 4, !tbaa !47
  %85 = load float, float* %arrayidx89, align 4, !tbaa !47
  %mul301 = fmul fast float %85, 6.250000e-02
  %86 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul303 = fmul fast float %86, 1.500000e+01
  %87 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %add305 = fadd fast float %mul303, %87
  %mul306 = fmul fast float %mul301, %add305
  %88 = load float, float* %arrayidx74, align 4, !tbaa !47
  %89 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %add312 = fadd fast float %89, 3.000000e+00
  %90 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul315 = fmul fast float %88, 0xBFD3988E20000000
  %mul315.neg = fmul fast float %mul315, %add312
  %91 = load float, float* %arrayidx59, align 4, !tbaa !47
  %mul322 = fmul fast float %86, 0x3FEEFBDEC0000000
  %square661 = fmul fast float %mul322, %90
  %mul325 = fmul fast float %square661, %91
  %reass.add675 = fadd fast float %mul315.neg, %mul325
  %reass.mul676 = fmul fast float %reass.add675, %90
  %add326 = fadd fast float %reass.mul676, %mul306
  %conv327 = fpext float %add326 to double
  %92 = load float, float* %arrayidx44, align 4, !tbaa !47
  %conv332 = fpext float %92 to double
  %mul333 = fmul fast double %conv332, 0x3FE94C5840000000
  %square662 = fmul fast float %90, %90
  %93 = fmul fast float %square662, %90
  %conv336 = fpext float %93 to double
  %mul337 = fmul fast double %mul333, %conv336
  %sub338 = fsub fast double %conv327, %mul337
  %conv339 = fptrunc double %sub338 to float
  store float %conv339, float* %arrayidx, align 4, !tbaa !47
  %94 = load float, float* %m_fSin3Gamma, align 4, !tbaa !134
  %95 = fmul fast float %94, %conv339
  %96 = load float, float* %arrayidx8, align 4, !tbaa !47
  %97 = load float, float* %m_fCos3Gamma, align 8, !tbaa !133
  %mul354 = fmul fast float %97, %96
  %add355 = fsub fast float %mul354, %95
  store float %add355, float* %arrayidx10, align 4, !tbaa !47
  %98 = load float, float* %arrayidx14, align 4, !tbaa !47
  %99 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %100 = fmul fast float %99, %98
  %101 = load float, float* %arrayidx20, align 4, !tbaa !47
  %102 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul368 = fmul fast float %102, %101
  %add369 = fsub fast float %mul368, %100
  store float %add369, float* %arrayidx24, align 4, !tbaa !47
  %103 = load float, float* %arrayidx28, align 4, !tbaa !47
  %104 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %105 = fmul fast float %104, %103
  %106 = load float, float* %arrayidx34, align 4, !tbaa !47
  %107 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul382 = fmul fast float %107, %106
  %add383 = fsub fast float %mul382, %105
  store float %add383, float* %arrayidx38, align 4, !tbaa !47
  %108 = load i32, i32* %30, align 4, !tbaa !47
  store i32 %108, i32* %9, align 4, !tbaa !47
  %109 = load float, float* %arrayidx28, align 4, !tbaa !47
  %110 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul397 = fmul fast float %110, %109
  %111 = load float, float* %arrayidx34, align 4, !tbaa !47
  %112 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %mul403 = fmul fast float %112, %111
  %add404 = fadd fast float %mul403, %mul397
  store float %add404, float* %arrayidx59, align 4, !tbaa !47
  %113 = load float, float* %arrayidx14, align 4, !tbaa !47
  %114 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul412 = fmul fast float %114, %113
  %115 = load float, float* %arrayidx20, align 4, !tbaa !47
  %116 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %mul418 = fmul fast float %116, %115
  %add419 = fadd fast float %mul418, %mul412
  store float %add419, float* %arrayidx74, align 4, !tbaa !47
  %117 = load float, float* %arrayidx, align 4, !tbaa !47
  %118 = load float, float* %m_fCos3Gamma, align 8, !tbaa !133
  %mul427 = fmul fast float %118, %117
  %119 = load float, float* %arrayidx8, align 4, !tbaa !47
  %120 = load float, float* %m_fSin3Gamma, align 4, !tbaa !134
  %mul433 = fmul fast float %120, %119
  %add434 = fadd fast float %mul433, %mul427
  store float %add434, float* %arrayidx89, align 4, !tbaa !47
  store float %add355, float* %arrayidx8, align 4, !tbaa !47
  %121 = load i32, i32* %10, align 4, !tbaa !47
  %122 = bitcast float* %arrayidx20 to i32*
  store i32 %121, i32* %122, align 4, !tbaa !47
  %123 = load i32, i32* %11, align 4, !tbaa !47
  %124 = bitcast float* %arrayidx34 to i32*
  store i32 %123, i32* %124, align 4, !tbaa !47
  %125 = load i32, i32* %9, align 4, !tbaa !47
  store i32 %125, i32* %30, align 4, !tbaa !47
  %126 = load i32, i32* %12, align 4, !tbaa !47
  %127 = bitcast float* %arrayidx28 to i32*
  store i32 %126, i32* %127, align 4, !tbaa !47
  %128 = load i32, i32* %13, align 4, !tbaa !47
  %129 = bitcast float* %arrayidx14 to i32*
  store i32 %128, i32* %129, align 4, !tbaa !47
  %130 = load i32, i32* %14, align 4, !tbaa !47
  %131 = bitcast float* %arrayidx to i32*
  store i32 %130, i32* %131, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

declare void @kiss_fftri(%struct.kiss_fftr_state*, %struct.kiss_fft_cpx*, float*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerC2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !56
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !63
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD0Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicSpeaker* %this to i8*
  tail call void @_ZdlPv(i8* %5) #25
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN17CAmbisonicSpeaker9ConfigureEjbj(%class.CAmbisonicSpeaker* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0
  %call = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %0, i32 %nOrder, i1 zeroext %b3D, i32 undef)
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7RefreshEv(%class.CAmbisonicSpeaker* readonly %this) unnamed_addr #8 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float* nocapture %pfDst) local_unnamed_addr #3 align 2 {
entry:
  %0 = bitcast float* %pfDst to i8*
  %conv = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !53
  %cmp62 = icmp eq i32 %2, 0
  br i1 %cmp62, label %for.end33, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 4, !tbaa !52, !range !55
  %tobool = icmp eq i8 %5, 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %cmp2258 = icmp eq i32 %nSamples, 0
  br i1 %tobool, label %for.body.us.preheader, label %for.body.lr.ph.split

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %7 = zext i32 %2 to i64
  %8 = add i32 %nSamples, -1
  %xtraiter = and i32 %nSamples, 3
  %9 = icmp ult i32 %8, 3
  %unroll_iter = sub i32 %nSamples, %xtraiter
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %if.end.loopexit.us, %for.body.us.preheader
  %indvars.iv = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next, %if.end.loopexit.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %10 = load float, float* %add.ptr.i.us, align 4, !tbaa !47
  %mul20.us = fmul fast float %10, 2.000000e+00
  br i1 %cmp2258, label %if.end.loopexit.us, label %for.body23.us.preheader

for.body23.us.preheader:                          ; preds = %for.body.us
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !43
  br i1 %9, label %if.end.loopexit.us.loopexit.unr-lcssa, label %for.body23.us

for.body23.us:                                    ; preds = %for.body23.us, %for.body23.us.preheader
  %out.160.us = phi float* [ %incdec.ptr26.us.3, %for.body23.us ], [ %pfDst, %for.body23.us.preheader ]
  %in.159.us = phi float* [ %incdec.ptr24.us.3, %for.body23.us ], [ %11, %for.body23.us.preheader ]
  %niter = phi i32 [ %niter.nsub.3, %for.body23.us ], [ %unroll_iter, %for.body23.us.preheader ]
  %incdec.ptr24.us = getelementptr inbounds float, float* %in.159.us, i64 1
  %12 = load float, float* %in.159.us, align 4, !tbaa !47
  %mul25.us = fmul fast float %mul20.us, %12
  %incdec.ptr26.us = getelementptr inbounds float, float* %out.160.us, i64 1
  %13 = load float, float* %out.160.us, align 4, !tbaa !47
  %add27.us = fadd fast float %13, %mul25.us
  store float %add27.us, float* %out.160.us, align 4, !tbaa !47
  %incdec.ptr24.us.1 = getelementptr inbounds float, float* %in.159.us, i64 2
  %14 = load float, float* %incdec.ptr24.us, align 4, !tbaa !47
  %mul25.us.1 = fmul fast float %mul20.us, %14
  %incdec.ptr26.us.1 = getelementptr inbounds float, float* %out.160.us, i64 2
  %15 = load float, float* %incdec.ptr26.us, align 4, !tbaa !47
  %add27.us.1 = fadd fast float %15, %mul25.us.1
  store float %add27.us.1, float* %incdec.ptr26.us, align 4, !tbaa !47
  %incdec.ptr24.us.2 = getelementptr inbounds float, float* %in.159.us, i64 3
  %16 = load float, float* %incdec.ptr24.us.1, align 4, !tbaa !47
  %mul25.us.2 = fmul fast float %mul20.us, %16
  %incdec.ptr26.us.2 = getelementptr inbounds float, float* %out.160.us, i64 3
  %17 = load float, float* %incdec.ptr26.us.1, align 4, !tbaa !47
  %add27.us.2 = fadd fast float %17, %mul25.us.2
  store float %add27.us.2, float* %incdec.ptr26.us.1, align 4, !tbaa !47
  %incdec.ptr24.us.3 = getelementptr inbounds float, float* %in.159.us, i64 4
  %18 = load float, float* %incdec.ptr24.us.2, align 4, !tbaa !47
  %mul25.us.3 = fmul fast float %mul20.us, %18
  %incdec.ptr26.us.3 = getelementptr inbounds float, float* %out.160.us, i64 4
  %19 = load float, float* %incdec.ptr26.us.2, align 4, !tbaa !47
  %add27.us.3 = fadd fast float %19, %mul25.us.3
  store float %add27.us.3, float* %incdec.ptr26.us.2, align 4, !tbaa !47
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %if.end.loopexit.us.loopexit.unr-lcssa, label %for.body23.us

if.end.loopexit.us.loopexit.unr-lcssa:            ; preds = %for.body23.us, %for.body23.us.preheader
  %out.160.us.unr = phi float* [ %pfDst, %for.body23.us.preheader ], [ %incdec.ptr26.us.3, %for.body23.us ]
  %in.159.us.unr = phi float* [ %11, %for.body23.us.preheader ], [ %incdec.ptr24.us.3, %for.body23.us ]
  br i1 %lcmp.mod, label %if.end.loopexit.us, label %for.body23.us.epil

for.body23.us.epil:                               ; preds = %for.body23.us.epil, %if.end.loopexit.us.loopexit.unr-lcssa
  %out.160.us.epil = phi float* [ %incdec.ptr26.us.epil, %for.body23.us.epil ], [ %out.160.us.unr, %if.end.loopexit.us.loopexit.unr-lcssa ]
  %in.159.us.epil = phi float* [ %incdec.ptr24.us.epil, %for.body23.us.epil ], [ %in.159.us.unr, %if.end.loopexit.us.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body23.us.epil ], [ %xtraiter, %if.end.loopexit.us.loopexit.unr-lcssa ]
  %incdec.ptr24.us.epil = getelementptr inbounds float, float* %in.159.us.epil, i64 1
  %20 = load float, float* %in.159.us.epil, align 4, !tbaa !47
  %mul25.us.epil = fmul fast float %mul20.us, %20
  %incdec.ptr26.us.epil = getelementptr inbounds float, float* %out.160.us.epil, i64 1
  %21 = load float, float* %out.160.us.epil, align 4, !tbaa !47
  %add27.us.epil = fadd fast float %21, %mul25.us.epil
  store float %add27.us.epil, float* %out.160.us.epil, align 4, !tbaa !47
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %if.end.loopexit.us, label %for.body23.us.epil, !llvm.loop !141

if.end.loopexit.us:                               ; preds = %for.body23.us.epil, %if.end.loopexit.us.loopexit.unr-lcssa, %for.body.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp.us = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp.us, label %for.body.us, label %for.end33

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph
  br i1 %cmp2258, label %for.end33, label %for.body.us65.preheader

for.body.us65.preheader:                          ; preds = %for.body.lr.ph.split
  %22 = zext i32 %2 to i64
  %23 = add i32 %nSamples, -1
  %xtraiter117 = and i32 %nSamples, 3
  %24 = icmp ult i32 %23, 3
  %unroll_iter120 = sub i32 %nSamples, %xtraiter117
  %lcmp.mod119 = icmp eq i32 %xtraiter117, 0
  br label %for.body.us65

for.body.us65:                                    ; preds = %for.cond10.if.end.loopexit53_crit_edge.us106, %for.body.us65.preheader
  %indvars.iv112 = phi i64 [ 0, %for.body.us65.preheader ], [ %indvars.iv.next113, %for.cond10.if.end.loopexit53_crit_edge.us106 ]
  %arrayidx.i.us68 = getelementptr inbounds float*, float** %3, i64 %indvars.iv112
  %25 = load float*, float** %arrayidx.i.us68, align 8, !tbaa !43
  %add.ptr.i.us69 = getelementptr inbounds float, float* %6, i64 %indvars.iv112
  %26 = load float, float* %add.ptr.i.us69, align 4, !tbaa !47
  %conv5.us71 = fpext float %26 to double
  %27 = trunc i64 %indvars.iv112 to i32
  %conv.i.us72 = uitofp i32 %27 to double
  %28 = tail call fast double @llvm.sqrt.f64(double %conv.i.us72) #24
  %29 = tail call fast double @llvm.floor.f64(double %28)
  %mul7.us73 = fmul fast double %29, 2.000000e+00
  %add.us74 = fadd fast double %mul7.us73, 1.000000e+00
  %mul8.us75 = fmul fast double %add.us74, %conv5.us71
  %conv9.us76 = fptrunc double %mul8.us75 to float
  br i1 %24, label %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa, label %for.body12.us77

for.body12.us77:                                  ; preds = %for.body12.us77, %for.body.us65
  %out.056.us79 = phi float* [ %incdec.ptr14.us83.3, %for.body12.us77 ], [ %pfDst, %for.body.us65 ]
  %in.055.us80 = phi float* [ %incdec.ptr.us81.3, %for.body12.us77 ], [ %25, %for.body.us65 ]
  %niter121 = phi i32 [ %niter121.nsub.3, %for.body12.us77 ], [ %unroll_iter120, %for.body.us65 ]
  %incdec.ptr.us81 = getelementptr inbounds float, float* %in.055.us80, i64 1
  %30 = load float, float* %in.055.us80, align 4, !tbaa !47
  %mul13.us82 = fmul fast float %30, %conv9.us76
  %incdec.ptr14.us83 = getelementptr inbounds float, float* %out.056.us79, i64 1
  %31 = load float, float* %out.056.us79, align 4, !tbaa !47
  %add15.us84 = fadd fast float %31, %mul13.us82
  store float %add15.us84, float* %out.056.us79, align 4, !tbaa !47
  %incdec.ptr.us81.1 = getelementptr inbounds float, float* %in.055.us80, i64 2
  %32 = load float, float* %incdec.ptr.us81, align 4, !tbaa !47
  %mul13.us82.1 = fmul fast float %32, %conv9.us76
  %incdec.ptr14.us83.1 = getelementptr inbounds float, float* %out.056.us79, i64 2
  %33 = load float, float* %incdec.ptr14.us83, align 4, !tbaa !47
  %add15.us84.1 = fadd fast float %33, %mul13.us82.1
  store float %add15.us84.1, float* %incdec.ptr14.us83, align 4, !tbaa !47
  %incdec.ptr.us81.2 = getelementptr inbounds float, float* %in.055.us80, i64 3
  %34 = load float, float* %incdec.ptr.us81.1, align 4, !tbaa !47
  %mul13.us82.2 = fmul fast float %34, %conv9.us76
  %incdec.ptr14.us83.2 = getelementptr inbounds float, float* %out.056.us79, i64 3
  %35 = load float, float* %incdec.ptr14.us83.1, align 4, !tbaa !47
  %add15.us84.2 = fadd fast float %35, %mul13.us82.2
  store float %add15.us84.2, float* %incdec.ptr14.us83.1, align 4, !tbaa !47
  %incdec.ptr.us81.3 = getelementptr inbounds float, float* %in.055.us80, i64 4
  %36 = load float, float* %incdec.ptr.us81.2, align 4, !tbaa !47
  %mul13.us82.3 = fmul fast float %36, %conv9.us76
  %incdec.ptr14.us83.3 = getelementptr inbounds float, float* %out.056.us79, i64 4
  %37 = load float, float* %incdec.ptr14.us83.2, align 4, !tbaa !47
  %add15.us84.3 = fadd fast float %37, %mul13.us82.3
  store float %add15.us84.3, float* %incdec.ptr14.us83.2, align 4, !tbaa !47
  %niter121.nsub.3 = add i32 %niter121, -4
  %niter121.ncmp.3 = icmp eq i32 %niter121.nsub.3, 0
  br i1 %niter121.ncmp.3, label %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa, label %for.body12.us77

for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa: ; preds = %for.body12.us77, %for.body.us65
  %out.056.us79.unr = phi float* [ %pfDst, %for.body.us65 ], [ %incdec.ptr14.us83.3, %for.body12.us77 ]
  %in.055.us80.unr = phi float* [ %25, %for.body.us65 ], [ %incdec.ptr.us81.3, %for.body12.us77 ]
  br i1 %lcmp.mod119, label %for.cond10.if.end.loopexit53_crit_edge.us106, label %for.body12.us77.epil

for.body12.us77.epil:                             ; preds = %for.body12.us77.epil, %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa
  %out.056.us79.epil = phi float* [ %incdec.ptr14.us83.epil, %for.body12.us77.epil ], [ %out.056.us79.unr, %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa ]
  %in.055.us80.epil = phi float* [ %incdec.ptr.us81.epil, %for.body12.us77.epil ], [ %in.055.us80.unr, %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa ]
  %epil.iter118 = phi i32 [ %epil.iter118.sub, %for.body12.us77.epil ], [ %xtraiter117, %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa ]
  %incdec.ptr.us81.epil = getelementptr inbounds float, float* %in.055.us80.epil, i64 1
  %38 = load float, float* %in.055.us80.epil, align 4, !tbaa !47
  %mul13.us82.epil = fmul fast float %38, %conv9.us76
  %incdec.ptr14.us83.epil = getelementptr inbounds float, float* %out.056.us79.epil, i64 1
  %39 = load float, float* %out.056.us79.epil, align 4, !tbaa !47
  %add15.us84.epil = fadd fast float %39, %mul13.us82.epil
  store float %add15.us84.epil, float* %out.056.us79.epil, align 4, !tbaa !47
  %epil.iter118.sub = add i32 %epil.iter118, -1
  %epil.iter118.cmp = icmp eq i32 %epil.iter118.sub, 0
  br i1 %epil.iter118.cmp, label %for.cond10.if.end.loopexit53_crit_edge.us106, label %for.body12.us77.epil, !llvm.loop !142

for.cond10.if.end.loopexit53_crit_edge.us106:     ; preds = %for.body12.us77.epil, %for.cond10.if.end.loopexit53_crit_edge.us106.unr-lcssa
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %cmp.us92 = icmp ult i64 %indvars.iv.next113, %22
  br i1 %cmp.us92, label %for.body.us65, label %for.end33

for.end33:                                        ; preds = %for.cond10.if.end.loopexit53_crit_edge.us106, %for.body.lr.ph.split, %if.end.loopexit.us, %entry
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #9

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN17CAmbisonicDecoderC2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSpeakerSetUp to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %tobool = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %1
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %3) #25
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD0Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty.i = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %1
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %3) #25
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %entry
  %11 = bitcast %class.CAmbisonicDecoder* %this to i8*
  tail call void @_ZdlPv(i8* %11) #25
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #3 align 2 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !52
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !53
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers)
  %3 = bitcast %class.CAmbisonicDecoder* %this to void (%class.CAmbisonicDecoder*)***
  %vtable = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %3, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable, i64 4
  %4 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicDecoder* %this) #24
  ret i1 true
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #15 align 2 {
entry:
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  store i32 %nSpeakerSetUp, i32* %m_nSpeakerSetUp, align 8, !tbaa !145
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %tobool = icmp eq %class.CAmbisonicSpeaker* %0, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 -1, i32 0, i32 3, i32 2
  %2 = bitcast float* %1 to i8*
  %3 = bitcast float* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %arraydestroy.isempty = icmp eq i64 %4, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %4
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %5 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %6, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %7 = bitcast float* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %7) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %8, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %9 = bitcast float* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %0
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %2) #25
  %.pr = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !145
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  %10 = phi i32 [ %nSpeakerSetUp, %entry ], [ %.pr, %arraydestroy.done3 ]
  switch i32 %10, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb12
    i32 1, label %sw.bb38
    i32 2, label %sw.bb81
    i32 3, label %sw.bb140
    i32 4, label %sw.bb214
    i32 5, label %for.body320.lr.ph
    i32 6, label %for.body361.lr.ph
    i32 7, label %for.body405.lr.ph
    i32 8, label %for.body449.lr.ph
    i32 9, label %for.body493.lr.ph
    i32 10, label %for.body537.lr.ph
    i32 11, label %sw.bb564
    i32 12, label %sw.bb649
    i32 13, label %sw.bb977
    i32 14, label %sw.bb1063
  ]

sw.bb:                                            ; preds = %if.end
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 %nSpeakers, i32* %m_nSpeakers, align 4, !tbaa !146
  %conv = zext i32 %nSpeakers to i64
  %11 = mul nuw nsw i64 %conv, 88
  %12 = add nuw nsw i64 %11, 8
  %call = tail call i8* @_Znam(i64 %12) #25
  %13 = bitcast i8* %call to i64*
  store i64 %conv, i64* %13, align 16
  %14 = getelementptr inbounds i8, i8* %call, i64 8
  %15 = bitcast i8* %14 to %class.CAmbisonicSpeaker*
  %isempty = icmp eq i32 %nSpeakers, 0
  br i1 %isempty, label %arrayctor.cont.thread, label %new.ctorloop

arrayctor.cont.thread:                            ; preds = %sw.bb
  %16 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %16, align 8, !tbaa !143
  br label %sw.epilog

new.ctorloop:                                     ; preds = %sw.bb
  %arrayctor.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %15, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %arrayctor.loop, %new.ctorloop
  %arrayctor.cur = phi %class.CAmbisonicSpeaker* [ %15, %new.ctorloop ], [ %arrayctor.next, %arrayctor.loop ]
  %17 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %18, align 8, !tbaa !49
  %19 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %19, align 4, !tbaa !52
  %20 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %20, align 8, !tbaa !53
  %21 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %21, align 4, !tbaa !54
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 3, i32 2
  %22 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !56
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !tbaa !40
  %arrayctor.next = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %arrayctor.loop
  %.pre = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %phitmp = icmp eq i32 %.pre, 0
  %23 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %23, align 8, !tbaa !143
  br i1 %phitmp, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %24 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %26 = load i32, i32* %24, align 8, !tbaa !49
  %27 = load i8, i8* %25, align 4, !tbaa !52, !range !55
  %tobool101620 = icmp ne i8 %27, 0
  %28 = bitcast i8* %14 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1621 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %28, align 8, !tbaa !40
  %vfn1622 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1621, i64 2
  %29 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1622, align 8
  %call111623 = tail call zeroext i1 %29(%class.CAmbisonicSpeaker* nonnull %15, i32 %26, i1 zeroext %tobool101620, i32 0) #24
  %30 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %cmp1624 = icmp ugt i32 %30, 1
  br i1 %cmp1624, label %for.body.for.body_crit_edge, label %sw.epilog

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv.next15771625 = phi i64 [ %indvars.iv.next1577, %for.body.for.body_crit_edge ], [ 1, %for.body.lr.ph ]
  %.pre1600 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %.pre1600, i64 %indvars.iv.next15771625
  %31 = load i32, i32* %24, align 8, !tbaa !49
  %32 = load i8, i8* %25, align 4, !tbaa !52, !range !55
  %tobool10 = icmp ne i8 %32, 0
  %33 = bitcast %class.CAmbisonicSpeaker* %arrayidx to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %33, align 8, !tbaa !40
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable, i64 2
  %34 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn, align 8
  %call11 = tail call zeroext i1 %34(%class.CAmbisonicSpeaker* nonnull %arrayidx, i32 %31, i1 zeroext %tobool10, i32 0) #24
  %indvars.iv.next1577 = add nuw nsw i64 %indvars.iv.next15771625, 1
  %35 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %36 = zext i32 %35 to i64
  %cmp = icmp ult i64 %indvars.iv.next1577, %36
  br i1 %cmp, label %for.body.for.body_crit_edge, label %sw.epilog

sw.bb12:                                          ; preds = %if.end
  %m_nSpeakers13 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers13, align 4, !tbaa !146
  %call16 = tail call i8* @_Znam(i64 96) #25
  %37 = bitcast i8* %call16 to i64*
  store i64 1, i64* %37, align 16
  %38 = getelementptr inbounds i8, i8* %call16, i64 8
  %39 = bitcast i8* %38 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %call16, i64 16
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 8, !tbaa !49
  %42 = getelementptr inbounds i8, i8* %call16, i64 20
  store i8 0, i8* %42, align 4, !tbaa !52
  %43 = getelementptr inbounds i8, i8* %call16, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8, !tbaa !53
  %45 = getelementptr inbounds i8, i8* %call16, i64 28
  store i8 0, i8* %45, align 4, !tbaa !54
  %m_pfCoeff.i.i1468 = getelementptr inbounds i8, i8* %call16, i64 32
  %fDistance.i.i1469 = getelementptr inbounds i8, i8* %call16, i64 88
  %46 = bitcast i8* %fDistance.i.i1469 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1468, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %46, align 8, !tbaa !56
  %m_fGain.i.i1470 = getelementptr inbounds i8, i8* %call16, i64 92
  %47 = bitcast i8* %m_fGain.i.i1470 to float*
  store float 1.000000e+00, float* %47, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !40
  %48 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %38, i8** %48, align 8, !tbaa !143
  %49 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8, !tbaa !49
  %51 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %52 = load i8, i8* %51, align 4, !tbaa !52, !range !55
  %tobool30 = icmp ne i8 %52, 0
  %53 = bitcast i8* %38 to %class.CAmbisonicSource*
  %call.i = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* nonnull %53, i32 %50, i1 zeroext %tobool30, i32 undef) #24
  %54 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %55 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %54, align 8, !tbaa !143
  %56 = bitcast %class.CAmbisonicSource* %55 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable36 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %56, align 8, !tbaa !40
  %vfn37 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable36, i64 5
  %57 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn37, align 8
  tail call void %57(%class.CAmbisonicSource* %55, <2 x float> zeroinitializer, float 1.000000e+00) #24
  br label %sw.epilog

sw.bb38:                                          ; preds = %if.end
  %m_nSpeakers39 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 2, i32* %m_nSpeakers39, align 4, !tbaa !146
  %call42 = tail call i8* @_Znam(i64 184) #25
  %58 = bitcast i8* %call42 to i64*
  store i64 2, i64* %58, align 16
  %59 = getelementptr inbounds i8, i8* %call42, i64 8
  %60 = bitcast i8* %59 to i32 (...)***
  %61 = getelementptr inbounds i8, i8* %call42, i64 16
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 8, !tbaa !49
  %63 = getelementptr inbounds i8, i8* %call42, i64 20
  store i8 0, i8* %63, align 4, !tbaa !52
  %64 = getelementptr inbounds i8, i8* %call42, i64 24
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8, !tbaa !53
  %66 = getelementptr inbounds i8, i8* %call42, i64 28
  store i8 0, i8* %66, align 4, !tbaa !54
  %m_pfCoeff.i.i1471 = getelementptr inbounds i8, i8* %call42, i64 32
  %fDistance.i.i1472 = getelementptr inbounds i8, i8* %call42, i64 88
  %67 = bitcast i8* %fDistance.i.i1472 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1471, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %67, align 8, !tbaa !56
  %m_fGain.i.i1473 = getelementptr inbounds i8, i8* %call42, i64 92
  %68 = bitcast i8* %m_fGain.i.i1473 to float*
  store float 1.000000e+00, float* %68, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8, !tbaa !40
  %arrayctor.next48 = getelementptr inbounds i8, i8* %call42, i64 96
  %69 = bitcast i8* %arrayctor.next48 to i32 (...)***
  %70 = getelementptr inbounds i8, i8* %call42, i64 104
  %71 = bitcast i8* %70 to i32*
  store i32 0, i32* %71, align 8, !tbaa !49
  %72 = getelementptr inbounds i8, i8* %call42, i64 108
  store i8 0, i8* %72, align 4, !tbaa !52
  %73 = getelementptr inbounds i8, i8* %call42, i64 112
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 8, !tbaa !53
  %75 = getelementptr inbounds i8, i8* %call42, i64 116
  store i8 0, i8* %75, align 4, !tbaa !54
  %m_pfCoeff.i.i1471.1 = getelementptr inbounds i8, i8* %call42, i64 120
  %fDistance.i.i1472.1 = getelementptr inbounds i8, i8* %call42, i64 176
  %76 = bitcast i8* %fDistance.i.i1472.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1471.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %76, align 8, !tbaa !56
  %m_fGain.i.i1473.1 = getelementptr inbounds i8, i8* %call42, i64 180
  %77 = bitcast i8* %m_fGain.i.i1473.1 to float*
  store float 1.000000e+00, float* %77, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8, !tbaa !40
  %78 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %59, i8** %78, align 8, !tbaa !143
  %call52 = tail call fast float @_Z16DegreesToRadiansf(float 3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1387 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call52, i32 0
  %79 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %80 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8, !tbaa !49
  %82 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %83 = load i8, i8* %82, align 4, !tbaa !52, !range !55
  %tobool57 = icmp ne i8 %83, 0
  %84 = bitcast %class.CAmbisonicSpeaker* %79 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable58 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %84, align 8, !tbaa !40
  %vfn59 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable58, i64 2
  %85 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn59, align 8
  %call60 = tail call zeroext i1 %85(%class.CAmbisonicSpeaker* %79, i32 %81, i1 zeroext %tobool57, i32 0) #24
  %86 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %87 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %86, align 8, !tbaa !143
  %88 = bitcast %class.CAmbisonicSource* %87 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable64 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %88, align 8, !tbaa !40
  %vfn65 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable64, i64 5
  %89 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn65, align 8
  tail call void %89(%class.CAmbisonicSource* %87, <2 x float> %polPosition.sroa.0.0.vec.insert1387, float 1.000000e+00) #24
  %call66 = tail call fast float @_Z16DegreesToRadiansf(float -3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1385 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1387, float %call66, i32 0
  %90 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx69 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %90, i64 1
  %91 = load i32, i32* %80, align 8, !tbaa !49
  %92 = load i8, i8* %82, align 4, !tbaa !52, !range !55
  %tobool72 = icmp ne i8 %92, 0
  %93 = bitcast %class.CAmbisonicSpeaker* %arrayidx69 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable73 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %93, align 8, !tbaa !40
  %vfn74 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable73, i64 2
  %94 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn74, align 8
  %call75 = tail call zeroext i1 %94(%class.CAmbisonicSpeaker* nonnull %arrayidx69, i32 %91, i1 zeroext %tobool72, i32 0) #24
  %95 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %96 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %95, i64 1, i32 0
  %97 = bitcast %class.CAmbisonicSource* %96 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable79 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %97, align 8, !tbaa !40
  %vfn80 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable79, i64 5
  %98 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn80, align 8
  tail call void %98(%class.CAmbisonicSource* nonnull %96, <2 x float> %polPosition.sroa.0.0.vec.insert1385, float 1.000000e+00) #24
  br label %sw.epilog

sw.bb81:                                          ; preds = %if.end
  %m_nSpeakers82 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 3, i32* %m_nSpeakers82, align 4, !tbaa !146
  %call85 = tail call i8* @_Znam(i64 272) #25
  %99 = bitcast i8* %call85 to i64*
  store i64 3, i64* %99, align 16
  %100 = getelementptr inbounds i8, i8* %call85, i64 8
  %101 = bitcast i8* %100 to i32 (...)***
  %102 = getelementptr inbounds i8, i8* %call85, i64 16
  %103 = bitcast i8* %102 to i32*
  store i32 0, i32* %103, align 8, !tbaa !49
  %104 = getelementptr inbounds i8, i8* %call85, i64 20
  store i8 0, i8* %104, align 4, !tbaa !52
  %105 = getelementptr inbounds i8, i8* %call85, i64 24
  %106 = bitcast i8* %105 to i32*
  store i32 0, i32* %106, align 8, !tbaa !53
  %107 = getelementptr inbounds i8, i8* %call85, i64 28
  store i8 0, i8* %107, align 4, !tbaa !54
  %m_pfCoeff.i.i1474 = getelementptr inbounds i8, i8* %call85, i64 32
  %fDistance.i.i1475 = getelementptr inbounds i8, i8* %call85, i64 88
  %108 = bitcast i8* %fDistance.i.i1475 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1474, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %108, align 8, !tbaa !56
  %m_fGain.i.i1476 = getelementptr inbounds i8, i8* %call85, i64 92
  %109 = bitcast i8* %m_fGain.i.i1476 to float*
  store float 1.000000e+00, float* %109, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8, !tbaa !40
  %arrayctor.next91 = getelementptr inbounds i8, i8* %call85, i64 96
  %110 = bitcast i8* %arrayctor.next91 to i32 (...)***
  %111 = getelementptr inbounds i8, i8* %call85, i64 104
  %112 = bitcast i8* %111 to i32*
  store i32 0, i32* %112, align 8, !tbaa !49
  %113 = getelementptr inbounds i8, i8* %call85, i64 108
  store i8 0, i8* %113, align 4, !tbaa !52
  %114 = getelementptr inbounds i8, i8* %call85, i64 112
  %115 = bitcast i8* %114 to i32*
  store i32 0, i32* %115, align 8, !tbaa !53
  %116 = getelementptr inbounds i8, i8* %call85, i64 116
  store i8 0, i8* %116, align 4, !tbaa !54
  %m_pfCoeff.i.i1474.1 = getelementptr inbounds i8, i8* %call85, i64 120
  %fDistance.i.i1475.1 = getelementptr inbounds i8, i8* %call85, i64 176
  %117 = bitcast i8* %fDistance.i.i1475.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1474.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %117, align 8, !tbaa !56
  %m_fGain.i.i1476.1 = getelementptr inbounds i8, i8* %call85, i64 180
  %118 = bitcast i8* %m_fGain.i.i1476.1 to float*
  store float 1.000000e+00, float* %118, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8, !tbaa !40
  %arrayctor.next91.1 = getelementptr inbounds i8, i8* %call85, i64 184
  %119 = bitcast i8* %arrayctor.next91.1 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %call85, i64 192
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !tbaa !49
  %122 = getelementptr inbounds i8, i8* %call85, i64 196
  store i8 0, i8* %122, align 4, !tbaa !52
  %123 = getelementptr inbounds i8, i8* %call85, i64 200
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 8, !tbaa !53
  %125 = getelementptr inbounds i8, i8* %call85, i64 204
  store i8 0, i8* %125, align 4, !tbaa !54
  %m_pfCoeff.i.i1474.2 = getelementptr inbounds i8, i8* %call85, i64 208
  %fDistance.i.i1475.2 = getelementptr inbounds i8, i8* %call85, i64 264
  %126 = bitcast i8* %fDistance.i.i1475.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1474.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %126, align 8, !tbaa !56
  %m_fGain.i.i1476.2 = getelementptr inbounds i8, i8* %call85, i64 268
  %127 = bitcast i8* %m_fGain.i.i1476.2 to float*
  store float 1.000000e+00, float* %127, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8, !tbaa !40
  %128 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %100, i8** %128, align 8, !tbaa !143
  %call95 = tail call fast float @_Z16DegreesToRadiansf(float 3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1383 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call95, i32 0
  %129 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %130 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %131 = load i32, i32* %130, align 8, !tbaa !49
  %132 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %133 = load i8, i8* %132, align 4, !tbaa !52, !range !55
  %tobool101 = icmp ne i8 %133, 0
  %134 = bitcast %class.CAmbisonicSpeaker* %129 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable102 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %134, align 8, !tbaa !40
  %vfn103 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable102, i64 2
  %135 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn103, align 8
  %call104 = tail call zeroext i1 %135(%class.CAmbisonicSpeaker* %129, i32 %131, i1 zeroext %tobool101, i32 0) #24
  %136 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %137 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %136, align 8, !tbaa !143
  %138 = bitcast %class.CAmbisonicSource* %137 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable108 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %138, align 8, !tbaa !40
  %vfn109 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable108, i64 5
  %139 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn109, align 8
  tail call void %139(%class.CAmbisonicSource* %137, <2 x float> %polPosition.sroa.0.0.vec.insert1383, float 1.000000e+00) #24
  %call110 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.0.vec.insert1381 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1383, float %call110, i32 0
  %140 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx113 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %140, i64 1
  %141 = load i32, i32* %130, align 8, !tbaa !49
  %142 = load i8, i8* %132, align 4, !tbaa !52, !range !55
  %tobool116 = icmp ne i8 %142, 0
  %143 = bitcast %class.CAmbisonicSpeaker* %arrayidx113 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable117 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %143, align 8, !tbaa !40
  %vfn118 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable117, i64 2
  %144 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn118, align 8
  %call119 = tail call zeroext i1 %144(%class.CAmbisonicSpeaker* nonnull %arrayidx113, i32 %141, i1 zeroext %tobool116, i32 0) #24
  %145 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %146 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %145, i64 1, i32 0
  %147 = bitcast %class.CAmbisonicSource* %146 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable123 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %147, align 8, !tbaa !40
  %vfn124 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable123, i64 5
  %148 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn124, align 8
  tail call void %148(%class.CAmbisonicSource* nonnull %146, <2 x float> %polPosition.sroa.0.0.vec.insert1381, float 1.000000e+00) #24
  %call125 = tail call fast float @_Z16DegreesToRadiansf(float -3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1379 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1381, float %call125, i32 0
  %149 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %149, i64 2
  %150 = load i32, i32* %130, align 8, !tbaa !49
  %151 = load i8, i8* %132, align 4, !tbaa !52, !range !55
  %tobool131 = icmp ne i8 %151, 0
  %152 = bitcast %class.CAmbisonicSpeaker* %arrayidx128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %152, align 8, !tbaa !40
  %vfn133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable132, i64 2
  %153 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn133, align 8
  %call134 = tail call zeroext i1 %153(%class.CAmbisonicSpeaker* nonnull %arrayidx128, i32 %150, i1 zeroext %tobool131, i32 0) #24
  %154 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %155 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %154, i64 2, i32 0
  %156 = bitcast %class.CAmbisonicSource* %155 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable138 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %156, align 8, !tbaa !40
  %vfn139 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable138, i64 5
  %157 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn139, align 8
  tail call void %157(%class.CAmbisonicSource* nonnull %155, <2 x float> %polPosition.sroa.0.0.vec.insert1379, float 1.000000e+00) #24
  br label %sw.epilog

sw.bb140:                                         ; preds = %if.end
  %m_nSpeakers141 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 4, i32* %m_nSpeakers141, align 4, !tbaa !146
  %call144 = tail call i8* @_Znam(i64 360) #25
  %158 = bitcast i8* %call144 to i64*
  store i64 4, i64* %158, align 16
  %159 = getelementptr inbounds i8, i8* %call144, i64 8
  %160 = bitcast i8* %159 to i32 (...)***
  %161 = getelementptr inbounds i8, i8* %call144, i64 16
  %162 = bitcast i8* %161 to i32*
  store i32 0, i32* %162, align 8, !tbaa !49
  %163 = getelementptr inbounds i8, i8* %call144, i64 20
  store i8 0, i8* %163, align 4, !tbaa !52
  %164 = getelementptr inbounds i8, i8* %call144, i64 24
  %165 = bitcast i8* %164 to i32*
  store i32 0, i32* %165, align 8, !tbaa !53
  %166 = getelementptr inbounds i8, i8* %call144, i64 28
  store i8 0, i8* %166, align 4, !tbaa !54
  %m_pfCoeff.i.i1477 = getelementptr inbounds i8, i8* %call144, i64 32
  %fDistance.i.i1478 = getelementptr inbounds i8, i8* %call144, i64 88
  %167 = bitcast i8* %fDistance.i.i1478 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1477, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %167, align 8, !tbaa !56
  %m_fGain.i.i1479 = getelementptr inbounds i8, i8* %call144, i64 92
  %168 = bitcast i8* %m_fGain.i.i1479 to float*
  store float 1.000000e+00, float* %168, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8, !tbaa !40
  %arrayctor.next150 = getelementptr inbounds i8, i8* %call144, i64 96
  %169 = bitcast i8* %arrayctor.next150 to i32 (...)***
  %170 = getelementptr inbounds i8, i8* %call144, i64 104
  %171 = bitcast i8* %170 to i32*
  store i32 0, i32* %171, align 8, !tbaa !49
  %172 = getelementptr inbounds i8, i8* %call144, i64 108
  store i8 0, i8* %172, align 4, !tbaa !52
  %173 = getelementptr inbounds i8, i8* %call144, i64 112
  %174 = bitcast i8* %173 to i32*
  store i32 0, i32* %174, align 8, !tbaa !53
  %175 = getelementptr inbounds i8, i8* %call144, i64 116
  store i8 0, i8* %175, align 4, !tbaa !54
  %m_pfCoeff.i.i1477.1 = getelementptr inbounds i8, i8* %call144, i64 120
  %fDistance.i.i1478.1 = getelementptr inbounds i8, i8* %call144, i64 176
  %176 = bitcast i8* %fDistance.i.i1478.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1477.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %176, align 8, !tbaa !56
  %m_fGain.i.i1479.1 = getelementptr inbounds i8, i8* %call144, i64 180
  %177 = bitcast i8* %m_fGain.i.i1479.1 to float*
  store float 1.000000e+00, float* %177, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8, !tbaa !40
  %arrayctor.next150.1 = getelementptr inbounds i8, i8* %call144, i64 184
  %178 = bitcast i8* %arrayctor.next150.1 to i32 (...)***
  %179 = getelementptr inbounds i8, i8* %call144, i64 192
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 8, !tbaa !49
  %181 = getelementptr inbounds i8, i8* %call144, i64 196
  store i8 0, i8* %181, align 4, !tbaa !52
  %182 = getelementptr inbounds i8, i8* %call144, i64 200
  %183 = bitcast i8* %182 to i32*
  store i32 0, i32* %183, align 8, !tbaa !53
  %184 = getelementptr inbounds i8, i8* %call144, i64 204
  store i8 0, i8* %184, align 4, !tbaa !54
  %m_pfCoeff.i.i1477.2 = getelementptr inbounds i8, i8* %call144, i64 208
  %fDistance.i.i1478.2 = getelementptr inbounds i8, i8* %call144, i64 264
  %185 = bitcast i8* %fDistance.i.i1478.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1477.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %185, align 8, !tbaa !56
  %m_fGain.i.i1479.2 = getelementptr inbounds i8, i8* %call144, i64 268
  %186 = bitcast i8* %m_fGain.i.i1479.2 to float*
  store float 1.000000e+00, float* %186, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8, !tbaa !40
  %arrayctor.next150.2 = getelementptr inbounds i8, i8* %call144, i64 272
  %187 = bitcast i8* %arrayctor.next150.2 to i32 (...)***
  %188 = getelementptr inbounds i8, i8* %call144, i64 280
  %189 = bitcast i8* %188 to i32*
  store i32 0, i32* %189, align 8, !tbaa !49
  %190 = getelementptr inbounds i8, i8* %call144, i64 284
  store i8 0, i8* %190, align 4, !tbaa !52
  %191 = getelementptr inbounds i8, i8* %call144, i64 288
  %192 = bitcast i8* %191 to i32*
  store i32 0, i32* %192, align 8, !tbaa !53
  %193 = getelementptr inbounds i8, i8* %call144, i64 292
  store i8 0, i8* %193, align 4, !tbaa !54
  %m_pfCoeff.i.i1477.3 = getelementptr inbounds i8, i8* %call144, i64 296
  %fDistance.i.i1478.3 = getelementptr inbounds i8, i8* %call144, i64 352
  %194 = bitcast i8* %fDistance.i.i1478.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1477.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %194, align 8, !tbaa !56
  %m_fGain.i.i1479.3 = getelementptr inbounds i8, i8* %call144, i64 356
  %195 = bitcast i8* %m_fGain.i.i1479.3 to float*
  store float 1.000000e+00, float* %195, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8, !tbaa !40
  %196 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %159, i8** %196, align 8, !tbaa !143
  %call154 = tail call fast float @_Z16DegreesToRadiansf(float 4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1377 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call154, i32 0
  %197 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %198 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %199 = load i32, i32* %198, align 8, !tbaa !49
  %200 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %201 = load i8, i8* %200, align 4, !tbaa !52, !range !55
  %tobool160 = icmp ne i8 %201, 0
  %202 = bitcast %class.CAmbisonicSpeaker* %197 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable161 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %202, align 8, !tbaa !40
  %vfn162 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable161, i64 2
  %203 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn162, align 8
  %call163 = tail call zeroext i1 %203(%class.CAmbisonicSpeaker* %197, i32 %199, i1 zeroext %tobool160, i32 0) #24
  %204 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %205 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %204, align 8, !tbaa !143
  %206 = bitcast %class.CAmbisonicSource* %205 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable167 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %206, align 8, !tbaa !40
  %vfn168 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable167, i64 5
  %207 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn168, align 8
  tail call void %207(%class.CAmbisonicSource* %205, <2 x float> %polPosition.sroa.0.0.vec.insert1377, float 1.000000e+00) #24
  %call169 = tail call fast float @_Z16DegreesToRadiansf(float -4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1375 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1377, float %call169, i32 0
  %208 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx172 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %208, i64 1
  %209 = load i32, i32* %198, align 8, !tbaa !49
  %210 = load i8, i8* %200, align 4, !tbaa !52, !range !55
  %tobool175 = icmp ne i8 %210, 0
  %211 = bitcast %class.CAmbisonicSpeaker* %arrayidx172 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable176 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %211, align 8, !tbaa !40
  %vfn177 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable176, i64 2
  %212 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn177, align 8
  %call178 = tail call zeroext i1 %212(%class.CAmbisonicSpeaker* nonnull %arrayidx172, i32 %209, i1 zeroext %tobool175, i32 0) #24
  %213 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %214 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %213, i64 1, i32 0
  %215 = bitcast %class.CAmbisonicSource* %214 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable182 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %215, align 8, !tbaa !40
  %vfn183 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable182, i64 5
  %216 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn183, align 8
  tail call void %216(%class.CAmbisonicSource* nonnull %214, <2 x float> %polPosition.sroa.0.0.vec.insert1375, float 1.000000e+00) #24
  %call184 = tail call fast float @_Z16DegreesToRadiansf(float 1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1373 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1375, float %call184, i32 0
  %217 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx187 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %217, i64 2
  %218 = load i32, i32* %198, align 8, !tbaa !49
  %219 = load i8, i8* %200, align 4, !tbaa !52, !range !55
  %tobool190 = icmp ne i8 %219, 0
  %220 = bitcast %class.CAmbisonicSpeaker* %arrayidx187 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable191 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %220, align 8, !tbaa !40
  %vfn192 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable191, i64 2
  %221 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn192, align 8
  %call193 = tail call zeroext i1 %221(%class.CAmbisonicSpeaker* nonnull %arrayidx187, i32 %218, i1 zeroext %tobool190, i32 0) #24
  %222 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %223 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %222, i64 2, i32 0
  %224 = bitcast %class.CAmbisonicSource* %223 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable197 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %224, align 8, !tbaa !40
  %vfn198 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable197, i64 5
  %225 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn198, align 8
  tail call void %225(%class.CAmbisonicSource* nonnull %223, <2 x float> %polPosition.sroa.0.0.vec.insert1373, float 1.000000e+00) #24
  %call199 = tail call fast float @_Z16DegreesToRadiansf(float -1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1371 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1373, float %call199, i32 0
  %226 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx202 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %226, i64 3
  %227 = load i32, i32* %198, align 8, !tbaa !49
  %228 = load i8, i8* %200, align 4, !tbaa !52, !range !55
  %tobool205 = icmp ne i8 %228, 0
  %229 = bitcast %class.CAmbisonicSpeaker* %arrayidx202 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable206 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %229, align 8, !tbaa !40
  %vfn207 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable206, i64 2
  %230 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn207, align 8
  %call208 = tail call zeroext i1 %230(%class.CAmbisonicSpeaker* nonnull %arrayidx202, i32 %227, i1 zeroext %tobool205, i32 0) #24
  %231 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %232 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %231, i64 3, i32 0
  %233 = bitcast %class.CAmbisonicSource* %232 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable212 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %233, align 8, !tbaa !40
  %vfn213 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable212, i64 5
  %234 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn213, align 8
  tail call void %234(%class.CAmbisonicSource* nonnull %232, <2 x float> %polPosition.sroa.0.0.vec.insert1371, float 1.000000e+00) #24
  br label %sw.epilog

sw.bb214:                                         ; preds = %if.end
  %m_nSpeakers215 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers215, align 4, !tbaa !146
  %call218 = tail call i8* @_Znam(i64 448) #25
  %235 = bitcast i8* %call218 to i64*
  store i64 5, i64* %235, align 16
  %236 = getelementptr inbounds i8, i8* %call218, i64 8
  %237 = bitcast i8* %236 to i32 (...)***
  %238 = getelementptr inbounds i8, i8* %call218, i64 16
  %239 = bitcast i8* %238 to i32*
  store i32 0, i32* %239, align 8, !tbaa !49
  %240 = getelementptr inbounds i8, i8* %call218, i64 20
  store i8 0, i8* %240, align 4, !tbaa !52
  %241 = getelementptr inbounds i8, i8* %call218, i64 24
  %242 = bitcast i8* %241 to i32*
  store i32 0, i32* %242, align 8, !tbaa !53
  %243 = getelementptr inbounds i8, i8* %call218, i64 28
  store i8 0, i8* %243, align 4, !tbaa !54
  %m_pfCoeff.i.i1483 = getelementptr inbounds i8, i8* %call218, i64 32
  %fDistance.i.i1484 = getelementptr inbounds i8, i8* %call218, i64 88
  %244 = bitcast i8* %fDistance.i.i1484 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1483, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %244, align 8, !tbaa !56
  %m_fGain.i.i1485 = getelementptr inbounds i8, i8* %call218, i64 92
  %245 = bitcast i8* %m_fGain.i.i1485 to float*
  store float 1.000000e+00, float* %245, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %237, align 8, !tbaa !40
  %arrayctor.next224 = getelementptr inbounds i8, i8* %call218, i64 96
  %246 = bitcast i8* %arrayctor.next224 to i32 (...)***
  %247 = getelementptr inbounds i8, i8* %call218, i64 104
  %248 = bitcast i8* %247 to i32*
  store i32 0, i32* %248, align 8, !tbaa !49
  %249 = getelementptr inbounds i8, i8* %call218, i64 108
  store i8 0, i8* %249, align 4, !tbaa !52
  %250 = getelementptr inbounds i8, i8* %call218, i64 112
  %251 = bitcast i8* %250 to i32*
  store i32 0, i32* %251, align 8, !tbaa !53
  %252 = getelementptr inbounds i8, i8* %call218, i64 116
  store i8 0, i8* %252, align 4, !tbaa !54
  %m_pfCoeff.i.i1483.1 = getelementptr inbounds i8, i8* %call218, i64 120
  %fDistance.i.i1484.1 = getelementptr inbounds i8, i8* %call218, i64 176
  %253 = bitcast i8* %fDistance.i.i1484.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1483.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %253, align 8, !tbaa !56
  %m_fGain.i.i1485.1 = getelementptr inbounds i8, i8* %call218, i64 180
  %254 = bitcast i8* %m_fGain.i.i1485.1 to float*
  store float 1.000000e+00, float* %254, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8, !tbaa !40
  %arrayctor.next224.1 = getelementptr inbounds i8, i8* %call218, i64 184
  %255 = bitcast i8* %arrayctor.next224.1 to i32 (...)***
  %256 = getelementptr inbounds i8, i8* %call218, i64 192
  %257 = bitcast i8* %256 to i32*
  store i32 0, i32* %257, align 8, !tbaa !49
  %258 = getelementptr inbounds i8, i8* %call218, i64 196
  store i8 0, i8* %258, align 4, !tbaa !52
  %259 = getelementptr inbounds i8, i8* %call218, i64 200
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 8, !tbaa !53
  %261 = getelementptr inbounds i8, i8* %call218, i64 204
  store i8 0, i8* %261, align 4, !tbaa !54
  %m_pfCoeff.i.i1483.2 = getelementptr inbounds i8, i8* %call218, i64 208
  %fDistance.i.i1484.2 = getelementptr inbounds i8, i8* %call218, i64 264
  %262 = bitcast i8* %fDistance.i.i1484.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1483.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %262, align 8, !tbaa !56
  %m_fGain.i.i1485.2 = getelementptr inbounds i8, i8* %call218, i64 268
  %263 = bitcast i8* %m_fGain.i.i1485.2 to float*
  store float 1.000000e+00, float* %263, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %255, align 8, !tbaa !40
  %arrayctor.next224.2 = getelementptr inbounds i8, i8* %call218, i64 272
  %264 = bitcast i8* %arrayctor.next224.2 to i32 (...)***
  %265 = getelementptr inbounds i8, i8* %call218, i64 280
  %266 = bitcast i8* %265 to i32*
  store i32 0, i32* %266, align 8, !tbaa !49
  %267 = getelementptr inbounds i8, i8* %call218, i64 284
  store i8 0, i8* %267, align 4, !tbaa !52
  %268 = getelementptr inbounds i8, i8* %call218, i64 288
  %269 = bitcast i8* %268 to i32*
  store i32 0, i32* %269, align 8, !tbaa !53
  %270 = getelementptr inbounds i8, i8* %call218, i64 292
  store i8 0, i8* %270, align 4, !tbaa !54
  %m_pfCoeff.i.i1483.3 = getelementptr inbounds i8, i8* %call218, i64 296
  %fDistance.i.i1484.3 = getelementptr inbounds i8, i8* %call218, i64 352
  %271 = bitcast i8* %fDistance.i.i1484.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1483.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %271, align 8, !tbaa !56
  %m_fGain.i.i1485.3 = getelementptr inbounds i8, i8* %call218, i64 356
  %272 = bitcast i8* %m_fGain.i.i1485.3 to float*
  store float 1.000000e+00, float* %272, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %264, align 8, !tbaa !40
  %arrayctor.next224.3 = getelementptr inbounds i8, i8* %call218, i64 360
  %273 = bitcast i8* %arrayctor.next224.3 to i32 (...)***
  %274 = getelementptr inbounds i8, i8* %call218, i64 368
  %275 = bitcast i8* %274 to i32*
  store i32 0, i32* %275, align 8, !tbaa !49
  %276 = getelementptr inbounds i8, i8* %call218, i64 372
  store i8 0, i8* %276, align 4, !tbaa !52
  %277 = getelementptr inbounds i8, i8* %call218, i64 376
  %278 = bitcast i8* %277 to i32*
  store i32 0, i32* %278, align 8, !tbaa !53
  %279 = getelementptr inbounds i8, i8* %call218, i64 380
  store i8 0, i8* %279, align 4, !tbaa !54
  %m_pfCoeff.i.i1483.4 = getelementptr inbounds i8, i8* %call218, i64 384
  %fDistance.i.i1484.4 = getelementptr inbounds i8, i8* %call218, i64 440
  %280 = bitcast i8* %fDistance.i.i1484.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1483.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %280, align 8, !tbaa !56
  %m_fGain.i.i1485.4 = getelementptr inbounds i8, i8* %call218, i64 444
  %281 = bitcast i8* %m_fGain.i.i1485.4 to float*
  store float 1.000000e+00, float* %281, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8, !tbaa !40
  %282 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %236, i8** %282, align 8, !tbaa !143
  %call228 = tail call fast float @_Z16DegreesToRadiansf(float 3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1369 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call228, i32 0
  %283 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %284 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %285 = load i32, i32* %284, align 8, !tbaa !49
  %286 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %287 = load i8, i8* %286, align 4, !tbaa !52, !range !55
  %tobool234 = icmp ne i8 %287, 0
  %288 = bitcast %class.CAmbisonicSpeaker* %283 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable235 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %288, align 8, !tbaa !40
  %vfn236 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable235, i64 2
  %289 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn236, align 8
  %call237 = tail call zeroext i1 %289(%class.CAmbisonicSpeaker* %283, i32 %285, i1 zeroext %tobool234, i32 0) #24
  %290 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %291 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %290, align 8, !tbaa !143
  %292 = bitcast %class.CAmbisonicSource* %291 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable241 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %292, align 8, !tbaa !40
  %vfn242 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable241, i64 5
  %293 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn242, align 8
  tail call void %293(%class.CAmbisonicSource* %291, <2 x float> %polPosition.sroa.0.0.vec.insert1369, float 1.000000e+00) #24
  %call243 = tail call fast float @_Z16DegreesToRadiansf(float -3.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1367 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1369, float %call243, i32 0
  %294 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx246 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %294, i64 1
  %295 = load i32, i32* %284, align 8, !tbaa !49
  %296 = load i8, i8* %286, align 4, !tbaa !52, !range !55
  %tobool249 = icmp ne i8 %296, 0
  %297 = bitcast %class.CAmbisonicSpeaker* %arrayidx246 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable250 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %297, align 8, !tbaa !40
  %vfn251 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable250, i64 2
  %298 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn251, align 8
  %call252 = tail call zeroext i1 %298(%class.CAmbisonicSpeaker* nonnull %arrayidx246, i32 %295, i1 zeroext %tobool249, i32 0) #24
  %299 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %300 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %299, i64 1, i32 0
  %301 = bitcast %class.CAmbisonicSource* %300 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable256 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %301, align 8, !tbaa !40
  %vfn257 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable256, i64 5
  %302 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn257, align 8
  tail call void %302(%class.CAmbisonicSource* nonnull %300, <2 x float> %polPosition.sroa.0.0.vec.insert1367, float 1.000000e+00) #24
  %call258 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.0.vec.insert1365 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1367, float %call258, i32 0
  %303 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx261 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %303, i64 2
  %304 = load i32, i32* %284, align 8, !tbaa !49
  %305 = load i8, i8* %286, align 4, !tbaa !52, !range !55
  %tobool264 = icmp ne i8 %305, 0
  %306 = bitcast %class.CAmbisonicSpeaker* %arrayidx261 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable265 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %306, align 8, !tbaa !40
  %vfn266 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable265, i64 2
  %307 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn266, align 8
  %call267 = tail call zeroext i1 %307(%class.CAmbisonicSpeaker* nonnull %arrayidx261, i32 %304, i1 zeroext %tobool264, i32 0) #24
  %308 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %309 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %308, i64 2, i32 0
  %310 = bitcast %class.CAmbisonicSource* %309 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable271 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %310, align 8, !tbaa !40
  %vfn272 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable271, i64 5
  %311 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn272, align 8
  tail call void %311(%class.CAmbisonicSource* nonnull %309, <2 x float> %polPosition.sroa.0.0.vec.insert1365, float 1.000000e+00) #24
  %call273 = tail call fast float @_Z16DegreesToRadiansf(float 1.100000e+02) #24
  %polPosition.sroa.0.0.vec.insert = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1365, float %call273, i32 0
  %312 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx276 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %312, i64 3
  %313 = load i32, i32* %284, align 8, !tbaa !49
  %314 = load i8, i8* %286, align 4, !tbaa !52, !range !55
  %tobool279 = icmp ne i8 %314, 0
  %315 = bitcast %class.CAmbisonicSpeaker* %arrayidx276 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable280 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %315, align 8, !tbaa !40
  %vfn281 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable280, i64 2
  %316 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn281, align 8
  %call282 = tail call zeroext i1 %316(%class.CAmbisonicSpeaker* nonnull %arrayidx276, i32 %313, i1 zeroext %tobool279, i32 0) #24
  %317 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %318 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %317, i64 3, i32 0
  %319 = bitcast %class.CAmbisonicSource* %318 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable286 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %319, align 8, !tbaa !40
  %vfn287 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable286, i64 5
  %320 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn287, align 8
  tail call void %320(%class.CAmbisonicSource* nonnull %318, <2 x float> %polPosition.sroa.0.0.vec.insert, float 1.000000e+00) #24
  %call288 = tail call fast float @_Z16DegreesToRadiansf(float -1.100000e+02) #24
  %polPosition.sroa.0.0.vec.insert1361 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert, float %call288, i32 0
  %321 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx291 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %321, i64 4
  %322 = load i32, i32* %284, align 8, !tbaa !49
  %323 = load i8, i8* %286, align 4, !tbaa !52, !range !55
  %tobool294 = icmp ne i8 %323, 0
  %324 = bitcast %class.CAmbisonicSpeaker* %arrayidx291 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable295 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %324, align 8, !tbaa !40
  %vfn296 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable295, i64 2
  %325 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn296, align 8
  %call297 = tail call zeroext i1 %325(%class.CAmbisonicSpeaker* nonnull %arrayidx291, i32 %322, i1 zeroext %tobool294, i32 0) #24
  %326 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %327 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %326, i64 4, i32 0
  %328 = bitcast %class.CAmbisonicSource* %327 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable301 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %328, align 8, !tbaa !40
  %vfn302 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable301, i64 5
  %329 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn302, align 8
  tail call void %329(%class.CAmbisonicSource* nonnull %327, <2 x float> %polPosition.sroa.0.0.vec.insert1361, float 1.000000e+00) #24
  br label %sw.epilog

for.body320.lr.ph:                                ; preds = %if.end
  %m_nSpeakers304 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers304, align 4, !tbaa !146
  %call307 = tail call i8* @_Znam(i64 448) #25
  %330 = bitcast i8* %call307 to i64*
  store i64 5, i64* %330, align 16
  %331 = getelementptr inbounds i8, i8* %call307, i64 8
  %332 = bitcast i8* %331 to i32 (...)***
  %333 = getelementptr inbounds i8, i8* %call307, i64 16
  %334 = bitcast i8* %333 to i32*
  store i32 0, i32* %334, align 8, !tbaa !49
  %335 = getelementptr inbounds i8, i8* %call307, i64 20
  store i8 0, i8* %335, align 4, !tbaa !52
  %336 = getelementptr inbounds i8, i8* %call307, i64 24
  %337 = bitcast i8* %336 to i32*
  store i32 0, i32* %337, align 8, !tbaa !53
  %338 = getelementptr inbounds i8, i8* %call307, i64 28
  store i8 0, i8* %338, align 4, !tbaa !54
  %m_pfCoeff.i.i1486 = getelementptr inbounds i8, i8* %call307, i64 32
  %fDistance.i.i1487 = getelementptr inbounds i8, i8* %call307, i64 88
  %339 = bitcast i8* %fDistance.i.i1487 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1486, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %339, align 8, !tbaa !56
  %m_fGain.i.i1488 = getelementptr inbounds i8, i8* %call307, i64 92
  %340 = bitcast i8* %m_fGain.i.i1488 to float*
  store float 1.000000e+00, float* %340, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %332, align 8, !tbaa !40
  %arrayctor.next313 = getelementptr inbounds i8, i8* %call307, i64 96
  %341 = bitcast i8* %arrayctor.next313 to i32 (...)***
  %342 = getelementptr inbounds i8, i8* %call307, i64 104
  %343 = bitcast i8* %342 to i32*
  store i32 0, i32* %343, align 8, !tbaa !49
  %344 = getelementptr inbounds i8, i8* %call307, i64 108
  store i8 0, i8* %344, align 4, !tbaa !52
  %345 = getelementptr inbounds i8, i8* %call307, i64 112
  %346 = bitcast i8* %345 to i32*
  store i32 0, i32* %346, align 8, !tbaa !53
  %347 = getelementptr inbounds i8, i8* %call307, i64 116
  store i8 0, i8* %347, align 4, !tbaa !54
  %m_pfCoeff.i.i1486.1 = getelementptr inbounds i8, i8* %call307, i64 120
  %fDistance.i.i1487.1 = getelementptr inbounds i8, i8* %call307, i64 176
  %348 = bitcast i8* %fDistance.i.i1487.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1486.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %348, align 8, !tbaa !56
  %m_fGain.i.i1488.1 = getelementptr inbounds i8, i8* %call307, i64 180
  %349 = bitcast i8* %m_fGain.i.i1488.1 to float*
  store float 1.000000e+00, float* %349, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %341, align 8, !tbaa !40
  %arrayctor.next313.1 = getelementptr inbounds i8, i8* %call307, i64 184
  %350 = bitcast i8* %arrayctor.next313.1 to i32 (...)***
  %351 = getelementptr inbounds i8, i8* %call307, i64 192
  %352 = bitcast i8* %351 to i32*
  store i32 0, i32* %352, align 8, !tbaa !49
  %353 = getelementptr inbounds i8, i8* %call307, i64 196
  store i8 0, i8* %353, align 4, !tbaa !52
  %354 = getelementptr inbounds i8, i8* %call307, i64 200
  %355 = bitcast i8* %354 to i32*
  store i32 0, i32* %355, align 8, !tbaa !53
  %356 = getelementptr inbounds i8, i8* %call307, i64 204
  store i8 0, i8* %356, align 4, !tbaa !54
  %m_pfCoeff.i.i1486.2 = getelementptr inbounds i8, i8* %call307, i64 208
  %fDistance.i.i1487.2 = getelementptr inbounds i8, i8* %call307, i64 264
  %357 = bitcast i8* %fDistance.i.i1487.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1486.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %357, align 8, !tbaa !56
  %m_fGain.i.i1488.2 = getelementptr inbounds i8, i8* %call307, i64 268
  %358 = bitcast i8* %m_fGain.i.i1488.2 to float*
  store float 1.000000e+00, float* %358, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %350, align 8, !tbaa !40
  %arrayctor.next313.2 = getelementptr inbounds i8, i8* %call307, i64 272
  %359 = bitcast i8* %arrayctor.next313.2 to i32 (...)***
  %360 = getelementptr inbounds i8, i8* %call307, i64 280
  %361 = bitcast i8* %360 to i32*
  store i32 0, i32* %361, align 8, !tbaa !49
  %362 = getelementptr inbounds i8, i8* %call307, i64 284
  store i8 0, i8* %362, align 4, !tbaa !52
  %363 = getelementptr inbounds i8, i8* %call307, i64 288
  %364 = bitcast i8* %363 to i32*
  store i32 0, i32* %364, align 8, !tbaa !53
  %365 = getelementptr inbounds i8, i8* %call307, i64 292
  store i8 0, i8* %365, align 4, !tbaa !54
  %m_pfCoeff.i.i1486.3 = getelementptr inbounds i8, i8* %call307, i64 296
  %fDistance.i.i1487.3 = getelementptr inbounds i8, i8* %call307, i64 352
  %366 = bitcast i8* %fDistance.i.i1487.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1486.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %366, align 8, !tbaa !56
  %m_fGain.i.i1488.3 = getelementptr inbounds i8, i8* %call307, i64 356
  %367 = bitcast i8* %m_fGain.i.i1488.3 to float*
  store float 1.000000e+00, float* %367, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8, !tbaa !40
  %arrayctor.next313.3 = getelementptr inbounds i8, i8* %call307, i64 360
  %368 = bitcast i8* %arrayctor.next313.3 to i32 (...)***
  %369 = getelementptr inbounds i8, i8* %call307, i64 368
  %370 = bitcast i8* %369 to i32*
  store i32 0, i32* %370, align 8, !tbaa !49
  %371 = getelementptr inbounds i8, i8* %call307, i64 372
  store i8 0, i8* %371, align 4, !tbaa !52
  %372 = getelementptr inbounds i8, i8* %call307, i64 376
  %373 = bitcast i8* %372 to i32*
  store i32 0, i32* %373, align 8, !tbaa !53
  %374 = getelementptr inbounds i8, i8* %call307, i64 380
  store i8 0, i8* %374, align 4, !tbaa !54
  %m_pfCoeff.i.i1486.4 = getelementptr inbounds i8, i8* %call307, i64 384
  %fDistance.i.i1487.4 = getelementptr inbounds i8, i8* %call307, i64 440
  %375 = bitcast i8* %fDistance.i.i1487.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1486.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %375, align 8, !tbaa !56
  %m_fGain.i.i1488.4 = getelementptr inbounds i8, i8* %call307, i64 444
  %376 = bitcast i8* %m_fGain.i.i1488.4 to float*
  store float 1.000000e+00, float* %376, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8, !tbaa !40
  %377 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %331, i8** %377, align 8, !tbaa !143
  %378 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %379 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body320

for.body320:                                      ; preds = %for.body320, %for.body320.lr.ph
  %indvars.iv1578 = phi i64 [ 0, %for.body320.lr.ph ], [ %indvars.iv.next1579, %for.body320 ]
  %380 = phi i32 [ 5, %for.body320.lr.ph ], [ %391, %for.body320 ]
  %polPosition.sroa.0.01531 = phi <2 x float> [ zeroinitializer, %for.body320.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1359, %for.body320 ]
  %381 = trunc i64 %indvars.iv1578 to i32
  %conv321 = uitofp i32 %381 to float
  %mul = fmul fast float %conv321, 3.600000e+02
  %conv323 = uitofp i32 %380 to float
  %div = fdiv fast float %mul, %conv323
  %call324 = tail call fast float @_Z16DegreesToRadiansf(float %div) #24
  %sub = fsub fast float -0.000000e+00, %call324
  %polPosition.sroa.0.0.vec.insert1359 = insertelement <2 x float> %polPosition.sroa.0.01531, float %sub, i32 0
  %382 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx328 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %382, i64 %indvars.iv1578
  %383 = load i32, i32* %378, align 8, !tbaa !49
  %384 = load i8, i8* %379, align 4, !tbaa !52, !range !55
  %tobool331 = icmp ne i8 %384, 0
  %385 = bitcast %class.CAmbisonicSpeaker* %arrayidx328 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable332 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %385, align 8, !tbaa !40
  %vfn333 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable332, i64 2
  %386 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn333, align 8
  %call334 = tail call zeroext i1 %386(%class.CAmbisonicSpeaker* %arrayidx328, i32 %383, i1 zeroext %tobool331, i32 0) #24
  %387 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %388 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %387, i64 %indvars.iv1578, i32 0
  %389 = bitcast %class.CAmbisonicSource* %388 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable339 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %389, align 8, !tbaa !40
  %vfn340 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable339, i64 5
  %390 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn340, align 8
  tail call void %390(%class.CAmbisonicSource* %388, <2 x float> %polPosition.sroa.0.0.vec.insert1359, float 1.000000e+00) #24
  %indvars.iv.next1579 = add nuw nsw i64 %indvars.iv1578, 1
  %391 = load i32, i32* %m_nSpeakers304, align 4, !tbaa !146
  %392 = zext i32 %391 to i64
  %cmp319 = icmp ult i64 %indvars.iv.next1579, %392
  br i1 %cmp319, label %for.body320, label %sw.epilog

for.body361.lr.ph:                                ; preds = %if.end
  %m_nSpeakers345 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers345, align 4, !tbaa !146
  %call348 = tail call i8* @_Znam(i64 536) #25
  %393 = bitcast i8* %call348 to i64*
  store i64 6, i64* %393, align 16
  %394 = getelementptr inbounds i8, i8* %call348, i64 8
  %395 = bitcast i8* %394 to i32 (...)***
  %396 = getelementptr inbounds i8, i8* %call348, i64 16
  %397 = bitcast i8* %396 to i32*
  store i32 0, i32* %397, align 8, !tbaa !49
  %398 = getelementptr inbounds i8, i8* %call348, i64 20
  store i8 0, i8* %398, align 4, !tbaa !52
  %399 = getelementptr inbounds i8, i8* %call348, i64 24
  %400 = bitcast i8* %399 to i32*
  store i32 0, i32* %400, align 8, !tbaa !53
  %401 = getelementptr inbounds i8, i8* %call348, i64 28
  store i8 0, i8* %401, align 4, !tbaa !54
  %m_pfCoeff.i.i1492 = getelementptr inbounds i8, i8* %call348, i64 32
  %fDistance.i.i1493 = getelementptr inbounds i8, i8* %call348, i64 88
  %402 = bitcast i8* %fDistance.i.i1493 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %402, align 8, !tbaa !56
  %m_fGain.i.i1494 = getelementptr inbounds i8, i8* %call348, i64 92
  %403 = bitcast i8* %m_fGain.i.i1494 to float*
  store float 1.000000e+00, float* %403, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %395, align 8, !tbaa !40
  %arrayctor.next354 = getelementptr inbounds i8, i8* %call348, i64 96
  %404 = bitcast i8* %arrayctor.next354 to i32 (...)***
  %405 = getelementptr inbounds i8, i8* %call348, i64 104
  %406 = bitcast i8* %405 to i32*
  store i32 0, i32* %406, align 8, !tbaa !49
  %407 = getelementptr inbounds i8, i8* %call348, i64 108
  store i8 0, i8* %407, align 4, !tbaa !52
  %408 = getelementptr inbounds i8, i8* %call348, i64 112
  %409 = bitcast i8* %408 to i32*
  store i32 0, i32* %409, align 8, !tbaa !53
  %410 = getelementptr inbounds i8, i8* %call348, i64 116
  store i8 0, i8* %410, align 4, !tbaa !54
  %m_pfCoeff.i.i1492.1 = getelementptr inbounds i8, i8* %call348, i64 120
  %fDistance.i.i1493.1 = getelementptr inbounds i8, i8* %call348, i64 176
  %411 = bitcast i8* %fDistance.i.i1493.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %411, align 8, !tbaa !56
  %m_fGain.i.i1494.1 = getelementptr inbounds i8, i8* %call348, i64 180
  %412 = bitcast i8* %m_fGain.i.i1494.1 to float*
  store float 1.000000e+00, float* %412, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %404, align 8, !tbaa !40
  %arrayctor.next354.1 = getelementptr inbounds i8, i8* %call348, i64 184
  %413 = bitcast i8* %arrayctor.next354.1 to i32 (...)***
  %414 = getelementptr inbounds i8, i8* %call348, i64 192
  %415 = bitcast i8* %414 to i32*
  store i32 0, i32* %415, align 8, !tbaa !49
  %416 = getelementptr inbounds i8, i8* %call348, i64 196
  store i8 0, i8* %416, align 4, !tbaa !52
  %417 = getelementptr inbounds i8, i8* %call348, i64 200
  %418 = bitcast i8* %417 to i32*
  store i32 0, i32* %418, align 8, !tbaa !53
  %419 = getelementptr inbounds i8, i8* %call348, i64 204
  store i8 0, i8* %419, align 4, !tbaa !54
  %m_pfCoeff.i.i1492.2 = getelementptr inbounds i8, i8* %call348, i64 208
  %fDistance.i.i1493.2 = getelementptr inbounds i8, i8* %call348, i64 264
  %420 = bitcast i8* %fDistance.i.i1493.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %420, align 8, !tbaa !56
  %m_fGain.i.i1494.2 = getelementptr inbounds i8, i8* %call348, i64 268
  %421 = bitcast i8* %m_fGain.i.i1494.2 to float*
  store float 1.000000e+00, float* %421, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %413, align 8, !tbaa !40
  %arrayctor.next354.2 = getelementptr inbounds i8, i8* %call348, i64 272
  %422 = bitcast i8* %arrayctor.next354.2 to i32 (...)***
  %423 = getelementptr inbounds i8, i8* %call348, i64 280
  %424 = bitcast i8* %423 to i32*
  store i32 0, i32* %424, align 8, !tbaa !49
  %425 = getelementptr inbounds i8, i8* %call348, i64 284
  store i8 0, i8* %425, align 4, !tbaa !52
  %426 = getelementptr inbounds i8, i8* %call348, i64 288
  %427 = bitcast i8* %426 to i32*
  store i32 0, i32* %427, align 8, !tbaa !53
  %428 = getelementptr inbounds i8, i8* %call348, i64 292
  store i8 0, i8* %428, align 4, !tbaa !54
  %m_pfCoeff.i.i1492.3 = getelementptr inbounds i8, i8* %call348, i64 296
  %fDistance.i.i1493.3 = getelementptr inbounds i8, i8* %call348, i64 352
  %429 = bitcast i8* %fDistance.i.i1493.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %429, align 8, !tbaa !56
  %m_fGain.i.i1494.3 = getelementptr inbounds i8, i8* %call348, i64 356
  %430 = bitcast i8* %m_fGain.i.i1494.3 to float*
  store float 1.000000e+00, float* %430, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %422, align 8, !tbaa !40
  %arrayctor.next354.3 = getelementptr inbounds i8, i8* %call348, i64 360
  %431 = bitcast i8* %arrayctor.next354.3 to i32 (...)***
  %432 = getelementptr inbounds i8, i8* %call348, i64 368
  %433 = bitcast i8* %432 to i32*
  store i32 0, i32* %433, align 8, !tbaa !49
  %434 = getelementptr inbounds i8, i8* %call348, i64 372
  store i8 0, i8* %434, align 4, !tbaa !52
  %435 = getelementptr inbounds i8, i8* %call348, i64 376
  %436 = bitcast i8* %435 to i32*
  store i32 0, i32* %436, align 8, !tbaa !53
  %437 = getelementptr inbounds i8, i8* %call348, i64 380
  store i8 0, i8* %437, align 4, !tbaa !54
  %m_pfCoeff.i.i1492.4 = getelementptr inbounds i8, i8* %call348, i64 384
  %fDistance.i.i1493.4 = getelementptr inbounds i8, i8* %call348, i64 440
  %438 = bitcast i8* %fDistance.i.i1493.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %438, align 8, !tbaa !56
  %m_fGain.i.i1494.4 = getelementptr inbounds i8, i8* %call348, i64 444
  %439 = bitcast i8* %m_fGain.i.i1494.4 to float*
  store float 1.000000e+00, float* %439, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8, !tbaa !40
  %arrayctor.next354.4 = getelementptr inbounds i8, i8* %call348, i64 448
  %440 = bitcast i8* %arrayctor.next354.4 to i32 (...)***
  %441 = getelementptr inbounds i8, i8* %call348, i64 456
  %442 = bitcast i8* %441 to i32*
  store i32 0, i32* %442, align 8, !tbaa !49
  %443 = getelementptr inbounds i8, i8* %call348, i64 460
  store i8 0, i8* %443, align 4, !tbaa !52
  %444 = getelementptr inbounds i8, i8* %call348, i64 464
  %445 = bitcast i8* %444 to i32*
  store i32 0, i32* %445, align 8, !tbaa !53
  %446 = getelementptr inbounds i8, i8* %call348, i64 468
  store i8 0, i8* %446, align 4, !tbaa !54
  %m_pfCoeff.i.i1492.5 = getelementptr inbounds i8, i8* %call348, i64 472
  %fDistance.i.i1493.5 = getelementptr inbounds i8, i8* %call348, i64 528
  %447 = bitcast i8* %fDistance.i.i1493.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1492.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %447, align 8, !tbaa !56
  %m_fGain.i.i1494.5 = getelementptr inbounds i8, i8* %call348, i64 532
  %448 = bitcast i8* %m_fGain.i.i1494.5 to float*
  store float 1.000000e+00, float* %448, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8, !tbaa !40
  %449 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %394, i8** %449, align 8, !tbaa !143
  %450 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %451 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body361

for.body361:                                      ; preds = %for.body361, %for.body361.lr.ph
  %indvars.iv1580 = phi i64 [ 0, %for.body361.lr.ph ], [ %indvars.iv.next1581, %for.body361 ]
  %452 = phi i32 [ 6, %for.body361.lr.ph ], [ %463, %for.body361 ]
  %polPosition.sroa.0.11534 = phi <2 x float> [ zeroinitializer, %for.body361.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1357, %for.body361 ]
  %453 = trunc i64 %indvars.iv1580 to i32
  %conv362 = uitofp i32 %453 to float
  %mul363 = fmul fast float %conv362, 3.600000e+02
  %conv365 = uitofp i32 %452 to float
  %div366 = fdiv fast float %mul363, %conv365
  %add = fadd fast float %div366, 3.000000e+01
  %call367 = tail call fast float @_Z16DegreesToRadiansf(float %add) #24
  %sub368 = fsub fast float -0.000000e+00, %call367
  %polPosition.sroa.0.0.vec.insert1357 = insertelement <2 x float> %polPosition.sroa.0.11534, float %sub368, i32 0
  %454 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx372 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %454, i64 %indvars.iv1580
  %455 = load i32, i32* %450, align 8, !tbaa !49
  %456 = load i8, i8* %451, align 4, !tbaa !52, !range !55
  %tobool375 = icmp ne i8 %456, 0
  %457 = bitcast %class.CAmbisonicSpeaker* %arrayidx372 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable376 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %457, align 8, !tbaa !40
  %vfn377 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable376, i64 2
  %458 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn377, align 8
  %call378 = tail call zeroext i1 %458(%class.CAmbisonicSpeaker* %arrayidx372, i32 %455, i1 zeroext %tobool375, i32 0) #24
  %459 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %460 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %459, i64 %indvars.iv1580, i32 0
  %461 = bitcast %class.CAmbisonicSource* %460 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable383 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %461, align 8, !tbaa !40
  %vfn384 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable383, i64 5
  %462 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn384, align 8
  tail call void %462(%class.CAmbisonicSource* %460, <2 x float> %polPosition.sroa.0.0.vec.insert1357, float 1.000000e+00) #24
  %indvars.iv.next1581 = add nuw nsw i64 %indvars.iv1580, 1
  %463 = load i32, i32* %m_nSpeakers345, align 4, !tbaa !146
  %464 = zext i32 %463 to i64
  %cmp360 = icmp ult i64 %indvars.iv.next1581, %464
  br i1 %cmp360, label %for.body361, label %sw.epilog

for.body405.lr.ph:                                ; preds = %if.end
  %m_nSpeakers389 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers389, align 4, !tbaa !146
  %call392 = tail call i8* @_Znam(i64 536) #25
  %465 = bitcast i8* %call392 to i64*
  store i64 6, i64* %465, align 16
  %466 = getelementptr inbounds i8, i8* %call392, i64 8
  %467 = bitcast i8* %466 to i32 (...)***
  %468 = getelementptr inbounds i8, i8* %call392, i64 16
  %469 = bitcast i8* %468 to i32*
  store i32 0, i32* %469, align 8, !tbaa !49
  %470 = getelementptr inbounds i8, i8* %call392, i64 20
  store i8 0, i8* %470, align 4, !tbaa !52
  %471 = getelementptr inbounds i8, i8* %call392, i64 24
  %472 = bitcast i8* %471 to i32*
  store i32 0, i32* %472, align 8, !tbaa !53
  %473 = getelementptr inbounds i8, i8* %call392, i64 28
  store i8 0, i8* %473, align 4, !tbaa !54
  %m_pfCoeff.i.i1495 = getelementptr inbounds i8, i8* %call392, i64 32
  %fDistance.i.i1496 = getelementptr inbounds i8, i8* %call392, i64 88
  %474 = bitcast i8* %fDistance.i.i1496 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %474, align 8, !tbaa !56
  %m_fGain.i.i1497 = getelementptr inbounds i8, i8* %call392, i64 92
  %475 = bitcast i8* %m_fGain.i.i1497 to float*
  store float 1.000000e+00, float* %475, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %467, align 8, !tbaa !40
  %arrayctor.next398 = getelementptr inbounds i8, i8* %call392, i64 96
  %476 = bitcast i8* %arrayctor.next398 to i32 (...)***
  %477 = getelementptr inbounds i8, i8* %call392, i64 104
  %478 = bitcast i8* %477 to i32*
  store i32 0, i32* %478, align 8, !tbaa !49
  %479 = getelementptr inbounds i8, i8* %call392, i64 108
  store i8 0, i8* %479, align 4, !tbaa !52
  %480 = getelementptr inbounds i8, i8* %call392, i64 112
  %481 = bitcast i8* %480 to i32*
  store i32 0, i32* %481, align 8, !tbaa !53
  %482 = getelementptr inbounds i8, i8* %call392, i64 116
  store i8 0, i8* %482, align 4, !tbaa !54
  %m_pfCoeff.i.i1495.1 = getelementptr inbounds i8, i8* %call392, i64 120
  %fDistance.i.i1496.1 = getelementptr inbounds i8, i8* %call392, i64 176
  %483 = bitcast i8* %fDistance.i.i1496.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %483, align 8, !tbaa !56
  %m_fGain.i.i1497.1 = getelementptr inbounds i8, i8* %call392, i64 180
  %484 = bitcast i8* %m_fGain.i.i1497.1 to float*
  store float 1.000000e+00, float* %484, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %476, align 8, !tbaa !40
  %arrayctor.next398.1 = getelementptr inbounds i8, i8* %call392, i64 184
  %485 = bitcast i8* %arrayctor.next398.1 to i32 (...)***
  %486 = getelementptr inbounds i8, i8* %call392, i64 192
  %487 = bitcast i8* %486 to i32*
  store i32 0, i32* %487, align 8, !tbaa !49
  %488 = getelementptr inbounds i8, i8* %call392, i64 196
  store i8 0, i8* %488, align 4, !tbaa !52
  %489 = getelementptr inbounds i8, i8* %call392, i64 200
  %490 = bitcast i8* %489 to i32*
  store i32 0, i32* %490, align 8, !tbaa !53
  %491 = getelementptr inbounds i8, i8* %call392, i64 204
  store i8 0, i8* %491, align 4, !tbaa !54
  %m_pfCoeff.i.i1495.2 = getelementptr inbounds i8, i8* %call392, i64 208
  %fDistance.i.i1496.2 = getelementptr inbounds i8, i8* %call392, i64 264
  %492 = bitcast i8* %fDistance.i.i1496.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %492, align 8, !tbaa !56
  %m_fGain.i.i1497.2 = getelementptr inbounds i8, i8* %call392, i64 268
  %493 = bitcast i8* %m_fGain.i.i1497.2 to float*
  store float 1.000000e+00, float* %493, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %485, align 8, !tbaa !40
  %arrayctor.next398.2 = getelementptr inbounds i8, i8* %call392, i64 272
  %494 = bitcast i8* %arrayctor.next398.2 to i32 (...)***
  %495 = getelementptr inbounds i8, i8* %call392, i64 280
  %496 = bitcast i8* %495 to i32*
  store i32 0, i32* %496, align 8, !tbaa !49
  %497 = getelementptr inbounds i8, i8* %call392, i64 284
  store i8 0, i8* %497, align 4, !tbaa !52
  %498 = getelementptr inbounds i8, i8* %call392, i64 288
  %499 = bitcast i8* %498 to i32*
  store i32 0, i32* %499, align 8, !tbaa !53
  %500 = getelementptr inbounds i8, i8* %call392, i64 292
  store i8 0, i8* %500, align 4, !tbaa !54
  %m_pfCoeff.i.i1495.3 = getelementptr inbounds i8, i8* %call392, i64 296
  %fDistance.i.i1496.3 = getelementptr inbounds i8, i8* %call392, i64 352
  %501 = bitcast i8* %fDistance.i.i1496.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %501, align 8, !tbaa !56
  %m_fGain.i.i1497.3 = getelementptr inbounds i8, i8* %call392, i64 356
  %502 = bitcast i8* %m_fGain.i.i1497.3 to float*
  store float 1.000000e+00, float* %502, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %494, align 8, !tbaa !40
  %arrayctor.next398.3 = getelementptr inbounds i8, i8* %call392, i64 360
  %503 = bitcast i8* %arrayctor.next398.3 to i32 (...)***
  %504 = getelementptr inbounds i8, i8* %call392, i64 368
  %505 = bitcast i8* %504 to i32*
  store i32 0, i32* %505, align 8, !tbaa !49
  %506 = getelementptr inbounds i8, i8* %call392, i64 372
  store i8 0, i8* %506, align 4, !tbaa !52
  %507 = getelementptr inbounds i8, i8* %call392, i64 376
  %508 = bitcast i8* %507 to i32*
  store i32 0, i32* %508, align 8, !tbaa !53
  %509 = getelementptr inbounds i8, i8* %call392, i64 380
  store i8 0, i8* %509, align 4, !tbaa !54
  %m_pfCoeff.i.i1495.4 = getelementptr inbounds i8, i8* %call392, i64 384
  %fDistance.i.i1496.4 = getelementptr inbounds i8, i8* %call392, i64 440
  %510 = bitcast i8* %fDistance.i.i1496.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %510, align 8, !tbaa !56
  %m_fGain.i.i1497.4 = getelementptr inbounds i8, i8* %call392, i64 444
  %511 = bitcast i8* %m_fGain.i.i1497.4 to float*
  store float 1.000000e+00, float* %511, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %503, align 8, !tbaa !40
  %arrayctor.next398.4 = getelementptr inbounds i8, i8* %call392, i64 448
  %512 = bitcast i8* %arrayctor.next398.4 to i32 (...)***
  %513 = getelementptr inbounds i8, i8* %call392, i64 456
  %514 = bitcast i8* %513 to i32*
  store i32 0, i32* %514, align 8, !tbaa !49
  %515 = getelementptr inbounds i8, i8* %call392, i64 460
  store i8 0, i8* %515, align 4, !tbaa !52
  %516 = getelementptr inbounds i8, i8* %call392, i64 464
  %517 = bitcast i8* %516 to i32*
  store i32 0, i32* %517, align 8, !tbaa !53
  %518 = getelementptr inbounds i8, i8* %call392, i64 468
  store i8 0, i8* %518, align 4, !tbaa !54
  %m_pfCoeff.i.i1495.5 = getelementptr inbounds i8, i8* %call392, i64 472
  %fDistance.i.i1496.5 = getelementptr inbounds i8, i8* %call392, i64 528
  %519 = bitcast i8* %fDistance.i.i1496.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1495.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %519, align 8, !tbaa !56
  %m_fGain.i.i1497.5 = getelementptr inbounds i8, i8* %call392, i64 532
  %520 = bitcast i8* %m_fGain.i.i1497.5 to float*
  store float 1.000000e+00, float* %520, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %512, align 8, !tbaa !40
  %521 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %466, i8** %521, align 8, !tbaa !143
  %522 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %523 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body405

for.body405:                                      ; preds = %for.body405, %for.body405.lr.ph
  %indvars.iv1582 = phi i64 [ 0, %for.body405.lr.ph ], [ %indvars.iv.next1583, %for.body405 ]
  %524 = phi i32 [ 6, %for.body405.lr.ph ], [ %535, %for.body405 ]
  %polPosition.sroa.0.21537 = phi <2 x float> [ zeroinitializer, %for.body405.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1355, %for.body405 ]
  %525 = trunc i64 %indvars.iv1582 to i32
  %conv406 = uitofp i32 %525 to float
  %mul407 = fmul fast float %conv406, 3.600000e+02
  %conv409 = uitofp i32 %524 to float
  %div410 = fdiv fast float %mul407, %conv409
  %call411 = tail call fast float @_Z16DegreesToRadiansf(float %div410) #24
  %sub412 = fsub fast float -0.000000e+00, %call411
  %polPosition.sroa.0.0.vec.insert1355 = insertelement <2 x float> %polPosition.sroa.0.21537, float %sub412, i32 0
  %526 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx416 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %526, i64 %indvars.iv1582
  %527 = load i32, i32* %522, align 8, !tbaa !49
  %528 = load i8, i8* %523, align 4, !tbaa !52, !range !55
  %tobool419 = icmp ne i8 %528, 0
  %529 = bitcast %class.CAmbisonicSpeaker* %arrayidx416 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable420 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %529, align 8, !tbaa !40
  %vfn421 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable420, i64 2
  %530 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn421, align 8
  %call422 = tail call zeroext i1 %530(%class.CAmbisonicSpeaker* %arrayidx416, i32 %527, i1 zeroext %tobool419, i32 0) #24
  %531 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %532 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %531, i64 %indvars.iv1582, i32 0
  %533 = bitcast %class.CAmbisonicSource* %532 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable427 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %533, align 8, !tbaa !40
  %vfn428 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable427, i64 5
  %534 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn428, align 8
  tail call void %534(%class.CAmbisonicSource* %532, <2 x float> %polPosition.sroa.0.0.vec.insert1355, float 1.000000e+00) #24
  %indvars.iv.next1583 = add nuw nsw i64 %indvars.iv1582, 1
  %535 = load i32, i32* %m_nSpeakers389, align 4, !tbaa !146
  %536 = zext i32 %535 to i64
  %cmp404 = icmp ult i64 %indvars.iv.next1583, %536
  br i1 %cmp404, label %for.body405, label %sw.epilog

for.body449.lr.ph:                                ; preds = %if.end
  %m_nSpeakers433 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers433, align 4, !tbaa !146
  %call436 = tail call i8* @_Znam(i64 712) #25
  %537 = bitcast i8* %call436 to i64*
  store i64 8, i64* %537, align 16
  %538 = getelementptr inbounds i8, i8* %call436, i64 8
  %539 = bitcast i8* %538 to i32 (...)***
  %540 = getelementptr inbounds i8, i8* %call436, i64 16
  %541 = bitcast i8* %540 to i32*
  store i32 0, i32* %541, align 8, !tbaa !49
  %542 = getelementptr inbounds i8, i8* %call436, i64 20
  store i8 0, i8* %542, align 4, !tbaa !52
  %543 = getelementptr inbounds i8, i8* %call436, i64 24
  %544 = bitcast i8* %543 to i32*
  store i32 0, i32* %544, align 8, !tbaa !53
  %545 = getelementptr inbounds i8, i8* %call436, i64 28
  store i8 0, i8* %545, align 4, !tbaa !54
  %m_pfCoeff.i.i1498 = getelementptr inbounds i8, i8* %call436, i64 32
  %fDistance.i.i1499 = getelementptr inbounds i8, i8* %call436, i64 88
  %546 = bitcast i8* %fDistance.i.i1499 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %546, align 8, !tbaa !56
  %m_fGain.i.i1500 = getelementptr inbounds i8, i8* %call436, i64 92
  %547 = bitcast i8* %m_fGain.i.i1500 to float*
  store float 1.000000e+00, float* %547, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %539, align 8, !tbaa !40
  %arrayctor.next442 = getelementptr inbounds i8, i8* %call436, i64 96
  %548 = bitcast i8* %arrayctor.next442 to i32 (...)***
  %549 = getelementptr inbounds i8, i8* %call436, i64 104
  %550 = bitcast i8* %549 to i32*
  store i32 0, i32* %550, align 8, !tbaa !49
  %551 = getelementptr inbounds i8, i8* %call436, i64 108
  store i8 0, i8* %551, align 4, !tbaa !52
  %552 = getelementptr inbounds i8, i8* %call436, i64 112
  %553 = bitcast i8* %552 to i32*
  store i32 0, i32* %553, align 8, !tbaa !53
  %554 = getelementptr inbounds i8, i8* %call436, i64 116
  store i8 0, i8* %554, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.1 = getelementptr inbounds i8, i8* %call436, i64 120
  %fDistance.i.i1499.1 = getelementptr inbounds i8, i8* %call436, i64 176
  %555 = bitcast i8* %fDistance.i.i1499.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %555, align 8, !tbaa !56
  %m_fGain.i.i1500.1 = getelementptr inbounds i8, i8* %call436, i64 180
  %556 = bitcast i8* %m_fGain.i.i1500.1 to float*
  store float 1.000000e+00, float* %556, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %548, align 8, !tbaa !40
  %arrayctor.next442.1 = getelementptr inbounds i8, i8* %call436, i64 184
  %557 = bitcast i8* %arrayctor.next442.1 to i32 (...)***
  %558 = getelementptr inbounds i8, i8* %call436, i64 192
  %559 = bitcast i8* %558 to i32*
  store i32 0, i32* %559, align 8, !tbaa !49
  %560 = getelementptr inbounds i8, i8* %call436, i64 196
  store i8 0, i8* %560, align 4, !tbaa !52
  %561 = getelementptr inbounds i8, i8* %call436, i64 200
  %562 = bitcast i8* %561 to i32*
  store i32 0, i32* %562, align 8, !tbaa !53
  %563 = getelementptr inbounds i8, i8* %call436, i64 204
  store i8 0, i8* %563, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.2 = getelementptr inbounds i8, i8* %call436, i64 208
  %fDistance.i.i1499.2 = getelementptr inbounds i8, i8* %call436, i64 264
  %564 = bitcast i8* %fDistance.i.i1499.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %564, align 8, !tbaa !56
  %m_fGain.i.i1500.2 = getelementptr inbounds i8, i8* %call436, i64 268
  %565 = bitcast i8* %m_fGain.i.i1500.2 to float*
  store float 1.000000e+00, float* %565, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %557, align 8, !tbaa !40
  %arrayctor.next442.2 = getelementptr inbounds i8, i8* %call436, i64 272
  %566 = bitcast i8* %arrayctor.next442.2 to i32 (...)***
  %567 = getelementptr inbounds i8, i8* %call436, i64 280
  %568 = bitcast i8* %567 to i32*
  store i32 0, i32* %568, align 8, !tbaa !49
  %569 = getelementptr inbounds i8, i8* %call436, i64 284
  store i8 0, i8* %569, align 4, !tbaa !52
  %570 = getelementptr inbounds i8, i8* %call436, i64 288
  %571 = bitcast i8* %570 to i32*
  store i32 0, i32* %571, align 8, !tbaa !53
  %572 = getelementptr inbounds i8, i8* %call436, i64 292
  store i8 0, i8* %572, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.3 = getelementptr inbounds i8, i8* %call436, i64 296
  %fDistance.i.i1499.3 = getelementptr inbounds i8, i8* %call436, i64 352
  %573 = bitcast i8* %fDistance.i.i1499.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %573, align 8, !tbaa !56
  %m_fGain.i.i1500.3 = getelementptr inbounds i8, i8* %call436, i64 356
  %574 = bitcast i8* %m_fGain.i.i1500.3 to float*
  store float 1.000000e+00, float* %574, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8, !tbaa !40
  %arrayctor.next442.3 = getelementptr inbounds i8, i8* %call436, i64 360
  %575 = bitcast i8* %arrayctor.next442.3 to i32 (...)***
  %576 = getelementptr inbounds i8, i8* %call436, i64 368
  %577 = bitcast i8* %576 to i32*
  store i32 0, i32* %577, align 8, !tbaa !49
  %578 = getelementptr inbounds i8, i8* %call436, i64 372
  store i8 0, i8* %578, align 4, !tbaa !52
  %579 = getelementptr inbounds i8, i8* %call436, i64 376
  %580 = bitcast i8* %579 to i32*
  store i32 0, i32* %580, align 8, !tbaa !53
  %581 = getelementptr inbounds i8, i8* %call436, i64 380
  store i8 0, i8* %581, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.4 = getelementptr inbounds i8, i8* %call436, i64 384
  %fDistance.i.i1499.4 = getelementptr inbounds i8, i8* %call436, i64 440
  %582 = bitcast i8* %fDistance.i.i1499.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %582, align 8, !tbaa !56
  %m_fGain.i.i1500.4 = getelementptr inbounds i8, i8* %call436, i64 444
  %583 = bitcast i8* %m_fGain.i.i1500.4 to float*
  store float 1.000000e+00, float* %583, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %575, align 8, !tbaa !40
  %arrayctor.next442.4 = getelementptr inbounds i8, i8* %call436, i64 448
  %584 = bitcast i8* %arrayctor.next442.4 to i32 (...)***
  %585 = getelementptr inbounds i8, i8* %call436, i64 456
  %586 = bitcast i8* %585 to i32*
  store i32 0, i32* %586, align 8, !tbaa !49
  %587 = getelementptr inbounds i8, i8* %call436, i64 460
  store i8 0, i8* %587, align 4, !tbaa !52
  %588 = getelementptr inbounds i8, i8* %call436, i64 464
  %589 = bitcast i8* %588 to i32*
  store i32 0, i32* %589, align 8, !tbaa !53
  %590 = getelementptr inbounds i8, i8* %call436, i64 468
  store i8 0, i8* %590, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.5 = getelementptr inbounds i8, i8* %call436, i64 472
  %fDistance.i.i1499.5 = getelementptr inbounds i8, i8* %call436, i64 528
  %591 = bitcast i8* %fDistance.i.i1499.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %591, align 8, !tbaa !56
  %m_fGain.i.i1500.5 = getelementptr inbounds i8, i8* %call436, i64 532
  %592 = bitcast i8* %m_fGain.i.i1500.5 to float*
  store float 1.000000e+00, float* %592, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %584, align 8, !tbaa !40
  %arrayctor.next442.5 = getelementptr inbounds i8, i8* %call436, i64 536
  %593 = bitcast i8* %arrayctor.next442.5 to i32 (...)***
  %594 = getelementptr inbounds i8, i8* %call436, i64 544
  %595 = bitcast i8* %594 to i32*
  store i32 0, i32* %595, align 8, !tbaa !49
  %596 = getelementptr inbounds i8, i8* %call436, i64 548
  store i8 0, i8* %596, align 4, !tbaa !52
  %597 = getelementptr inbounds i8, i8* %call436, i64 552
  %598 = bitcast i8* %597 to i32*
  store i32 0, i32* %598, align 8, !tbaa !53
  %599 = getelementptr inbounds i8, i8* %call436, i64 556
  store i8 0, i8* %599, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.6 = getelementptr inbounds i8, i8* %call436, i64 560
  %fDistance.i.i1499.6 = getelementptr inbounds i8, i8* %call436, i64 616
  %600 = bitcast i8* %fDistance.i.i1499.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %600, align 8, !tbaa !56
  %m_fGain.i.i1500.6 = getelementptr inbounds i8, i8* %call436, i64 620
  %601 = bitcast i8* %m_fGain.i.i1500.6 to float*
  store float 1.000000e+00, float* %601, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %593, align 8, !tbaa !40
  %arrayctor.next442.6 = getelementptr inbounds i8, i8* %call436, i64 624
  %602 = bitcast i8* %arrayctor.next442.6 to i32 (...)***
  %603 = getelementptr inbounds i8, i8* %call436, i64 632
  %604 = bitcast i8* %603 to i32*
  store i32 0, i32* %604, align 8, !tbaa !49
  %605 = getelementptr inbounds i8, i8* %call436, i64 636
  store i8 0, i8* %605, align 4, !tbaa !52
  %606 = getelementptr inbounds i8, i8* %call436, i64 640
  %607 = bitcast i8* %606 to i32*
  store i32 0, i32* %607, align 8, !tbaa !53
  %608 = getelementptr inbounds i8, i8* %call436, i64 644
  store i8 0, i8* %608, align 4, !tbaa !54
  %m_pfCoeff.i.i1498.7 = getelementptr inbounds i8, i8* %call436, i64 648
  %fDistance.i.i1499.7 = getelementptr inbounds i8, i8* %call436, i64 704
  %609 = bitcast i8* %fDistance.i.i1499.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1498.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %609, align 8, !tbaa !56
  %m_fGain.i.i1500.7 = getelementptr inbounds i8, i8* %call436, i64 708
  %610 = bitcast i8* %m_fGain.i.i1500.7 to float*
  store float 1.000000e+00, float* %610, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %602, align 8, !tbaa !40
  %611 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %538, i8** %611, align 8, !tbaa !143
  %612 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %613 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body449

for.body449:                                      ; preds = %for.body449, %for.body449.lr.ph
  %indvars.iv1584 = phi i64 [ 0, %for.body449.lr.ph ], [ %indvars.iv.next1585, %for.body449 ]
  %614 = phi i32 [ 8, %for.body449.lr.ph ], [ %625, %for.body449 ]
  %polPosition.sroa.0.31540 = phi <2 x float> [ zeroinitializer, %for.body449.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1353, %for.body449 ]
  %615 = trunc i64 %indvars.iv1584 to i32
  %conv450 = uitofp i32 %615 to float
  %mul451 = fmul fast float %conv450, 3.600000e+02
  %conv453 = uitofp i32 %614 to float
  %div454 = fdiv fast float %mul451, %conv453
  %call455 = tail call fast float @_Z16DegreesToRadiansf(float %div454) #24
  %sub456 = fsub fast float -0.000000e+00, %call455
  %polPosition.sroa.0.0.vec.insert1353 = insertelement <2 x float> %polPosition.sroa.0.31540, float %sub456, i32 0
  %616 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx460 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %616, i64 %indvars.iv1584
  %617 = load i32, i32* %612, align 8, !tbaa !49
  %618 = load i8, i8* %613, align 4, !tbaa !52, !range !55
  %tobool463 = icmp ne i8 %618, 0
  %619 = bitcast %class.CAmbisonicSpeaker* %arrayidx460 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable464 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %619, align 8, !tbaa !40
  %vfn465 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable464, i64 2
  %620 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn465, align 8
  %call466 = tail call zeroext i1 %620(%class.CAmbisonicSpeaker* %arrayidx460, i32 %617, i1 zeroext %tobool463, i32 0) #24
  %621 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %622 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %621, i64 %indvars.iv1584, i32 0
  %623 = bitcast %class.CAmbisonicSource* %622 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable471 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %623, align 8, !tbaa !40
  %vfn472 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable471, i64 5
  %624 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn472, align 8
  tail call void %624(%class.CAmbisonicSource* %622, <2 x float> %polPosition.sroa.0.0.vec.insert1353, float 1.000000e+00) #24
  %indvars.iv.next1585 = add nuw nsw i64 %indvars.iv1584, 1
  %625 = load i32, i32* %m_nSpeakers433, align 4, !tbaa !146
  %626 = zext i32 %625 to i64
  %cmp448 = icmp ult i64 %indvars.iv.next1585, %626
  br i1 %cmp448, label %for.body449, label %sw.epilog

for.body493.lr.ph:                                ; preds = %if.end
  %m_nSpeakers477 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 10, i32* %m_nSpeakers477, align 4, !tbaa !146
  %call480 = tail call i8* @_Znam(i64 888) #25
  %627 = bitcast i8* %call480 to i64*
  store i64 10, i64* %627, align 16
  %628 = getelementptr inbounds i8, i8* %call480, i64 8
  %629 = bitcast i8* %628 to i32 (...)***
  %630 = getelementptr inbounds i8, i8* %call480, i64 16
  %631 = bitcast i8* %630 to i32*
  store i32 0, i32* %631, align 8, !tbaa !49
  %632 = getelementptr inbounds i8, i8* %call480, i64 20
  store i8 0, i8* %632, align 4, !tbaa !52
  %633 = getelementptr inbounds i8, i8* %call480, i64 24
  %634 = bitcast i8* %633 to i32*
  store i32 0, i32* %634, align 8, !tbaa !53
  %635 = getelementptr inbounds i8, i8* %call480, i64 28
  store i8 0, i8* %635, align 4, !tbaa !54
  %m_pfCoeff.i.i1501 = getelementptr inbounds i8, i8* %call480, i64 32
  %fDistance.i.i1502 = getelementptr inbounds i8, i8* %call480, i64 88
  %636 = bitcast i8* %fDistance.i.i1502 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %636, align 8, !tbaa !56
  %m_fGain.i.i1503 = getelementptr inbounds i8, i8* %call480, i64 92
  %637 = bitcast i8* %m_fGain.i.i1503 to float*
  store float 1.000000e+00, float* %637, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %629, align 8, !tbaa !40
  %arrayctor.next486 = getelementptr inbounds i8, i8* %call480, i64 96
  %638 = bitcast i8* %arrayctor.next486 to i32 (...)***
  %639 = getelementptr inbounds i8, i8* %call480, i64 104
  %640 = bitcast i8* %639 to i32*
  store i32 0, i32* %640, align 8, !tbaa !49
  %641 = getelementptr inbounds i8, i8* %call480, i64 108
  store i8 0, i8* %641, align 4, !tbaa !52
  %642 = getelementptr inbounds i8, i8* %call480, i64 112
  %643 = bitcast i8* %642 to i32*
  store i32 0, i32* %643, align 8, !tbaa !53
  %644 = getelementptr inbounds i8, i8* %call480, i64 116
  store i8 0, i8* %644, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.1 = getelementptr inbounds i8, i8* %call480, i64 120
  %fDistance.i.i1502.1 = getelementptr inbounds i8, i8* %call480, i64 176
  %645 = bitcast i8* %fDistance.i.i1502.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %645, align 8, !tbaa !56
  %m_fGain.i.i1503.1 = getelementptr inbounds i8, i8* %call480, i64 180
  %646 = bitcast i8* %m_fGain.i.i1503.1 to float*
  store float 1.000000e+00, float* %646, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %638, align 8, !tbaa !40
  %arrayctor.next486.1 = getelementptr inbounds i8, i8* %call480, i64 184
  %647 = bitcast i8* %arrayctor.next486.1 to i32 (...)***
  %648 = getelementptr inbounds i8, i8* %call480, i64 192
  %649 = bitcast i8* %648 to i32*
  store i32 0, i32* %649, align 8, !tbaa !49
  %650 = getelementptr inbounds i8, i8* %call480, i64 196
  store i8 0, i8* %650, align 4, !tbaa !52
  %651 = getelementptr inbounds i8, i8* %call480, i64 200
  %652 = bitcast i8* %651 to i32*
  store i32 0, i32* %652, align 8, !tbaa !53
  %653 = getelementptr inbounds i8, i8* %call480, i64 204
  store i8 0, i8* %653, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.2 = getelementptr inbounds i8, i8* %call480, i64 208
  %fDistance.i.i1502.2 = getelementptr inbounds i8, i8* %call480, i64 264
  %654 = bitcast i8* %fDistance.i.i1502.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %654, align 8, !tbaa !56
  %m_fGain.i.i1503.2 = getelementptr inbounds i8, i8* %call480, i64 268
  %655 = bitcast i8* %m_fGain.i.i1503.2 to float*
  store float 1.000000e+00, float* %655, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %647, align 8, !tbaa !40
  %arrayctor.next486.2 = getelementptr inbounds i8, i8* %call480, i64 272
  %656 = bitcast i8* %arrayctor.next486.2 to i32 (...)***
  %657 = getelementptr inbounds i8, i8* %call480, i64 280
  %658 = bitcast i8* %657 to i32*
  store i32 0, i32* %658, align 8, !tbaa !49
  %659 = getelementptr inbounds i8, i8* %call480, i64 284
  store i8 0, i8* %659, align 4, !tbaa !52
  %660 = getelementptr inbounds i8, i8* %call480, i64 288
  %661 = bitcast i8* %660 to i32*
  store i32 0, i32* %661, align 8, !tbaa !53
  %662 = getelementptr inbounds i8, i8* %call480, i64 292
  store i8 0, i8* %662, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.3 = getelementptr inbounds i8, i8* %call480, i64 296
  %fDistance.i.i1502.3 = getelementptr inbounds i8, i8* %call480, i64 352
  %663 = bitcast i8* %fDistance.i.i1502.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %663, align 8, !tbaa !56
  %m_fGain.i.i1503.3 = getelementptr inbounds i8, i8* %call480, i64 356
  %664 = bitcast i8* %m_fGain.i.i1503.3 to float*
  store float 1.000000e+00, float* %664, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %656, align 8, !tbaa !40
  %arrayctor.next486.3 = getelementptr inbounds i8, i8* %call480, i64 360
  %665 = bitcast i8* %arrayctor.next486.3 to i32 (...)***
  %666 = getelementptr inbounds i8, i8* %call480, i64 368
  %667 = bitcast i8* %666 to i32*
  store i32 0, i32* %667, align 8, !tbaa !49
  %668 = getelementptr inbounds i8, i8* %call480, i64 372
  store i8 0, i8* %668, align 4, !tbaa !52
  %669 = getelementptr inbounds i8, i8* %call480, i64 376
  %670 = bitcast i8* %669 to i32*
  store i32 0, i32* %670, align 8, !tbaa !53
  %671 = getelementptr inbounds i8, i8* %call480, i64 380
  store i8 0, i8* %671, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.4 = getelementptr inbounds i8, i8* %call480, i64 384
  %fDistance.i.i1502.4 = getelementptr inbounds i8, i8* %call480, i64 440
  %672 = bitcast i8* %fDistance.i.i1502.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %672, align 8, !tbaa !56
  %m_fGain.i.i1503.4 = getelementptr inbounds i8, i8* %call480, i64 444
  %673 = bitcast i8* %m_fGain.i.i1503.4 to float*
  store float 1.000000e+00, float* %673, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %665, align 8, !tbaa !40
  %arrayctor.next486.4 = getelementptr inbounds i8, i8* %call480, i64 448
  %674 = bitcast i8* %arrayctor.next486.4 to i32 (...)***
  %675 = getelementptr inbounds i8, i8* %call480, i64 456
  %676 = bitcast i8* %675 to i32*
  store i32 0, i32* %676, align 8, !tbaa !49
  %677 = getelementptr inbounds i8, i8* %call480, i64 460
  store i8 0, i8* %677, align 4, !tbaa !52
  %678 = getelementptr inbounds i8, i8* %call480, i64 464
  %679 = bitcast i8* %678 to i32*
  store i32 0, i32* %679, align 8, !tbaa !53
  %680 = getelementptr inbounds i8, i8* %call480, i64 468
  store i8 0, i8* %680, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.5 = getelementptr inbounds i8, i8* %call480, i64 472
  %fDistance.i.i1502.5 = getelementptr inbounds i8, i8* %call480, i64 528
  %681 = bitcast i8* %fDistance.i.i1502.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %681, align 8, !tbaa !56
  %m_fGain.i.i1503.5 = getelementptr inbounds i8, i8* %call480, i64 532
  %682 = bitcast i8* %m_fGain.i.i1503.5 to float*
  store float 1.000000e+00, float* %682, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %674, align 8, !tbaa !40
  %arrayctor.next486.5 = getelementptr inbounds i8, i8* %call480, i64 536
  %683 = bitcast i8* %arrayctor.next486.5 to i32 (...)***
  %684 = getelementptr inbounds i8, i8* %call480, i64 544
  %685 = bitcast i8* %684 to i32*
  store i32 0, i32* %685, align 8, !tbaa !49
  %686 = getelementptr inbounds i8, i8* %call480, i64 548
  store i8 0, i8* %686, align 4, !tbaa !52
  %687 = getelementptr inbounds i8, i8* %call480, i64 552
  %688 = bitcast i8* %687 to i32*
  store i32 0, i32* %688, align 8, !tbaa !53
  %689 = getelementptr inbounds i8, i8* %call480, i64 556
  store i8 0, i8* %689, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.6 = getelementptr inbounds i8, i8* %call480, i64 560
  %fDistance.i.i1502.6 = getelementptr inbounds i8, i8* %call480, i64 616
  %690 = bitcast i8* %fDistance.i.i1502.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %690, align 8, !tbaa !56
  %m_fGain.i.i1503.6 = getelementptr inbounds i8, i8* %call480, i64 620
  %691 = bitcast i8* %m_fGain.i.i1503.6 to float*
  store float 1.000000e+00, float* %691, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %683, align 8, !tbaa !40
  %arrayctor.next486.6 = getelementptr inbounds i8, i8* %call480, i64 624
  %692 = bitcast i8* %arrayctor.next486.6 to i32 (...)***
  %693 = getelementptr inbounds i8, i8* %call480, i64 632
  %694 = bitcast i8* %693 to i32*
  store i32 0, i32* %694, align 8, !tbaa !49
  %695 = getelementptr inbounds i8, i8* %call480, i64 636
  store i8 0, i8* %695, align 4, !tbaa !52
  %696 = getelementptr inbounds i8, i8* %call480, i64 640
  %697 = bitcast i8* %696 to i32*
  store i32 0, i32* %697, align 8, !tbaa !53
  %698 = getelementptr inbounds i8, i8* %call480, i64 644
  store i8 0, i8* %698, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.7 = getelementptr inbounds i8, i8* %call480, i64 648
  %fDistance.i.i1502.7 = getelementptr inbounds i8, i8* %call480, i64 704
  %699 = bitcast i8* %fDistance.i.i1502.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %699, align 8, !tbaa !56
  %m_fGain.i.i1503.7 = getelementptr inbounds i8, i8* %call480, i64 708
  %700 = bitcast i8* %m_fGain.i.i1503.7 to float*
  store float 1.000000e+00, float* %700, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %692, align 8, !tbaa !40
  %arrayctor.next486.7 = getelementptr inbounds i8, i8* %call480, i64 712
  %701 = bitcast i8* %arrayctor.next486.7 to i32 (...)***
  %702 = getelementptr inbounds i8, i8* %call480, i64 720
  %703 = bitcast i8* %702 to i32*
  store i32 0, i32* %703, align 8, !tbaa !49
  %704 = getelementptr inbounds i8, i8* %call480, i64 724
  store i8 0, i8* %704, align 4, !tbaa !52
  %705 = getelementptr inbounds i8, i8* %call480, i64 728
  %706 = bitcast i8* %705 to i32*
  store i32 0, i32* %706, align 8, !tbaa !53
  %707 = getelementptr inbounds i8, i8* %call480, i64 732
  store i8 0, i8* %707, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.8 = getelementptr inbounds i8, i8* %call480, i64 736
  %fDistance.i.i1502.8 = getelementptr inbounds i8, i8* %call480, i64 792
  %708 = bitcast i8* %fDistance.i.i1502.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %708, align 8, !tbaa !56
  %m_fGain.i.i1503.8 = getelementptr inbounds i8, i8* %call480, i64 796
  %709 = bitcast i8* %m_fGain.i.i1503.8 to float*
  store float 1.000000e+00, float* %709, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %701, align 8, !tbaa !40
  %arrayctor.next486.8 = getelementptr inbounds i8, i8* %call480, i64 800
  %710 = bitcast i8* %arrayctor.next486.8 to i32 (...)***
  %711 = getelementptr inbounds i8, i8* %call480, i64 808
  %712 = bitcast i8* %711 to i32*
  store i32 0, i32* %712, align 8, !tbaa !49
  %713 = getelementptr inbounds i8, i8* %call480, i64 812
  store i8 0, i8* %713, align 4, !tbaa !52
  %714 = getelementptr inbounds i8, i8* %call480, i64 816
  %715 = bitcast i8* %714 to i32*
  store i32 0, i32* %715, align 8, !tbaa !53
  %716 = getelementptr inbounds i8, i8* %call480, i64 820
  store i8 0, i8* %716, align 4, !tbaa !54
  %m_pfCoeff.i.i1501.9 = getelementptr inbounds i8, i8* %call480, i64 824
  %fDistance.i.i1502.9 = getelementptr inbounds i8, i8* %call480, i64 880
  %717 = bitcast i8* %fDistance.i.i1502.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1501.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %717, align 8, !tbaa !56
  %m_fGain.i.i1503.9 = getelementptr inbounds i8, i8* %call480, i64 884
  %718 = bitcast i8* %m_fGain.i.i1503.9 to float*
  store float 1.000000e+00, float* %718, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %710, align 8, !tbaa !40
  %719 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %628, i8** %719, align 8, !tbaa !143
  %720 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %721 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body493

for.body493:                                      ; preds = %for.body493, %for.body493.lr.ph
  %indvars.iv1586 = phi i64 [ 0, %for.body493.lr.ph ], [ %indvars.iv.next1587, %for.body493 ]
  %722 = phi i32 [ 10, %for.body493.lr.ph ], [ %733, %for.body493 ]
  %polPosition.sroa.0.41543 = phi <2 x float> [ zeroinitializer, %for.body493.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1351, %for.body493 ]
  %723 = trunc i64 %indvars.iv1586 to i32
  %conv494 = uitofp i32 %723 to float
  %mul495 = fmul fast float %conv494, 3.600000e+02
  %conv497 = uitofp i32 %722 to float
  %div498 = fdiv fast float %mul495, %conv497
  %call499 = tail call fast float @_Z16DegreesToRadiansf(float %div498) #24
  %sub500 = fsub fast float -0.000000e+00, %call499
  %polPosition.sroa.0.0.vec.insert1351 = insertelement <2 x float> %polPosition.sroa.0.41543, float %sub500, i32 0
  %724 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx504 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %724, i64 %indvars.iv1586
  %725 = load i32, i32* %720, align 8, !tbaa !49
  %726 = load i8, i8* %721, align 4, !tbaa !52, !range !55
  %tobool507 = icmp ne i8 %726, 0
  %727 = bitcast %class.CAmbisonicSpeaker* %arrayidx504 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable508 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %727, align 8, !tbaa !40
  %vfn509 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable508, i64 2
  %728 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn509, align 8
  %call510 = tail call zeroext i1 %728(%class.CAmbisonicSpeaker* %arrayidx504, i32 %725, i1 zeroext %tobool507, i32 0) #24
  %729 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %730 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %729, i64 %indvars.iv1586, i32 0
  %731 = bitcast %class.CAmbisonicSource* %730 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable515 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %731, align 8, !tbaa !40
  %vfn516 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable515, i64 5
  %732 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn516, align 8
  tail call void %732(%class.CAmbisonicSource* %730, <2 x float> %polPosition.sroa.0.0.vec.insert1351, float 1.000000e+00) #24
  %indvars.iv.next1587 = add nuw nsw i64 %indvars.iv1586, 1
  %733 = load i32, i32* %m_nSpeakers477, align 4, !tbaa !146
  %734 = zext i32 %733 to i64
  %cmp492 = icmp ult i64 %indvars.iv.next1587, %734
  br i1 %cmp492, label %for.body493, label %sw.epilog

for.body537.lr.ph:                                ; preds = %if.end
  %m_nSpeakers521 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 12, i32* %m_nSpeakers521, align 4, !tbaa !146
  %call524 = tail call i8* @_Znam(i64 1064) #25
  %735 = bitcast i8* %call524 to i64*
  store i64 12, i64* %735, align 16
  %736 = getelementptr inbounds i8, i8* %call524, i64 8
  %737 = bitcast i8* %736 to i32 (...)***
  %738 = getelementptr inbounds i8, i8* %call524, i64 16
  %739 = bitcast i8* %738 to i32*
  store i32 0, i32* %739, align 8, !tbaa !49
  %740 = getelementptr inbounds i8, i8* %call524, i64 20
  store i8 0, i8* %740, align 4, !tbaa !52
  %741 = getelementptr inbounds i8, i8* %call524, i64 24
  %742 = bitcast i8* %741 to i32*
  store i32 0, i32* %742, align 8, !tbaa !53
  %743 = getelementptr inbounds i8, i8* %call524, i64 28
  store i8 0, i8* %743, align 4, !tbaa !54
  %m_pfCoeff.i.i1507 = getelementptr inbounds i8, i8* %call524, i64 32
  %fDistance.i.i1508 = getelementptr inbounds i8, i8* %call524, i64 88
  %744 = bitcast i8* %fDistance.i.i1508 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %744, align 8, !tbaa !56
  %m_fGain.i.i1509 = getelementptr inbounds i8, i8* %call524, i64 92
  %745 = bitcast i8* %m_fGain.i.i1509 to float*
  store float 1.000000e+00, float* %745, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %737, align 8, !tbaa !40
  %arrayctor.next530 = getelementptr inbounds i8, i8* %call524, i64 96
  %746 = bitcast i8* %arrayctor.next530 to i32 (...)***
  %747 = getelementptr inbounds i8, i8* %call524, i64 104
  %748 = bitcast i8* %747 to i32*
  store i32 0, i32* %748, align 8, !tbaa !49
  %749 = getelementptr inbounds i8, i8* %call524, i64 108
  store i8 0, i8* %749, align 4, !tbaa !52
  %750 = getelementptr inbounds i8, i8* %call524, i64 112
  %751 = bitcast i8* %750 to i32*
  store i32 0, i32* %751, align 8, !tbaa !53
  %752 = getelementptr inbounds i8, i8* %call524, i64 116
  store i8 0, i8* %752, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.1 = getelementptr inbounds i8, i8* %call524, i64 120
  %fDistance.i.i1508.1 = getelementptr inbounds i8, i8* %call524, i64 176
  %753 = bitcast i8* %fDistance.i.i1508.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %753, align 8, !tbaa !56
  %m_fGain.i.i1509.1 = getelementptr inbounds i8, i8* %call524, i64 180
  %754 = bitcast i8* %m_fGain.i.i1509.1 to float*
  store float 1.000000e+00, float* %754, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %746, align 8, !tbaa !40
  %arrayctor.next530.1 = getelementptr inbounds i8, i8* %call524, i64 184
  %755 = bitcast i8* %arrayctor.next530.1 to i32 (...)***
  %756 = getelementptr inbounds i8, i8* %call524, i64 192
  %757 = bitcast i8* %756 to i32*
  store i32 0, i32* %757, align 8, !tbaa !49
  %758 = getelementptr inbounds i8, i8* %call524, i64 196
  store i8 0, i8* %758, align 4, !tbaa !52
  %759 = getelementptr inbounds i8, i8* %call524, i64 200
  %760 = bitcast i8* %759 to i32*
  store i32 0, i32* %760, align 8, !tbaa !53
  %761 = getelementptr inbounds i8, i8* %call524, i64 204
  store i8 0, i8* %761, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.2 = getelementptr inbounds i8, i8* %call524, i64 208
  %fDistance.i.i1508.2 = getelementptr inbounds i8, i8* %call524, i64 264
  %762 = bitcast i8* %fDistance.i.i1508.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %762, align 8, !tbaa !56
  %m_fGain.i.i1509.2 = getelementptr inbounds i8, i8* %call524, i64 268
  %763 = bitcast i8* %m_fGain.i.i1509.2 to float*
  store float 1.000000e+00, float* %763, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %755, align 8, !tbaa !40
  %arrayctor.next530.2 = getelementptr inbounds i8, i8* %call524, i64 272
  %764 = bitcast i8* %arrayctor.next530.2 to i32 (...)***
  %765 = getelementptr inbounds i8, i8* %call524, i64 280
  %766 = bitcast i8* %765 to i32*
  store i32 0, i32* %766, align 8, !tbaa !49
  %767 = getelementptr inbounds i8, i8* %call524, i64 284
  store i8 0, i8* %767, align 4, !tbaa !52
  %768 = getelementptr inbounds i8, i8* %call524, i64 288
  %769 = bitcast i8* %768 to i32*
  store i32 0, i32* %769, align 8, !tbaa !53
  %770 = getelementptr inbounds i8, i8* %call524, i64 292
  store i8 0, i8* %770, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.3 = getelementptr inbounds i8, i8* %call524, i64 296
  %fDistance.i.i1508.3 = getelementptr inbounds i8, i8* %call524, i64 352
  %771 = bitcast i8* %fDistance.i.i1508.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %771, align 8, !tbaa !56
  %m_fGain.i.i1509.3 = getelementptr inbounds i8, i8* %call524, i64 356
  %772 = bitcast i8* %m_fGain.i.i1509.3 to float*
  store float 1.000000e+00, float* %772, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %764, align 8, !tbaa !40
  %arrayctor.next530.3 = getelementptr inbounds i8, i8* %call524, i64 360
  %773 = bitcast i8* %arrayctor.next530.3 to i32 (...)***
  %774 = getelementptr inbounds i8, i8* %call524, i64 368
  %775 = bitcast i8* %774 to i32*
  store i32 0, i32* %775, align 8, !tbaa !49
  %776 = getelementptr inbounds i8, i8* %call524, i64 372
  store i8 0, i8* %776, align 4, !tbaa !52
  %777 = getelementptr inbounds i8, i8* %call524, i64 376
  %778 = bitcast i8* %777 to i32*
  store i32 0, i32* %778, align 8, !tbaa !53
  %779 = getelementptr inbounds i8, i8* %call524, i64 380
  store i8 0, i8* %779, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.4 = getelementptr inbounds i8, i8* %call524, i64 384
  %fDistance.i.i1508.4 = getelementptr inbounds i8, i8* %call524, i64 440
  %780 = bitcast i8* %fDistance.i.i1508.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %780, align 8, !tbaa !56
  %m_fGain.i.i1509.4 = getelementptr inbounds i8, i8* %call524, i64 444
  %781 = bitcast i8* %m_fGain.i.i1509.4 to float*
  store float 1.000000e+00, float* %781, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %773, align 8, !tbaa !40
  %arrayctor.next530.4 = getelementptr inbounds i8, i8* %call524, i64 448
  %782 = bitcast i8* %arrayctor.next530.4 to i32 (...)***
  %783 = getelementptr inbounds i8, i8* %call524, i64 456
  %784 = bitcast i8* %783 to i32*
  store i32 0, i32* %784, align 8, !tbaa !49
  %785 = getelementptr inbounds i8, i8* %call524, i64 460
  store i8 0, i8* %785, align 4, !tbaa !52
  %786 = getelementptr inbounds i8, i8* %call524, i64 464
  %787 = bitcast i8* %786 to i32*
  store i32 0, i32* %787, align 8, !tbaa !53
  %788 = getelementptr inbounds i8, i8* %call524, i64 468
  store i8 0, i8* %788, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.5 = getelementptr inbounds i8, i8* %call524, i64 472
  %fDistance.i.i1508.5 = getelementptr inbounds i8, i8* %call524, i64 528
  %789 = bitcast i8* %fDistance.i.i1508.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %789, align 8, !tbaa !56
  %m_fGain.i.i1509.5 = getelementptr inbounds i8, i8* %call524, i64 532
  %790 = bitcast i8* %m_fGain.i.i1509.5 to float*
  store float 1.000000e+00, float* %790, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %782, align 8, !tbaa !40
  %arrayctor.next530.5 = getelementptr inbounds i8, i8* %call524, i64 536
  %791 = bitcast i8* %arrayctor.next530.5 to i32 (...)***
  %792 = getelementptr inbounds i8, i8* %call524, i64 544
  %793 = bitcast i8* %792 to i32*
  store i32 0, i32* %793, align 8, !tbaa !49
  %794 = getelementptr inbounds i8, i8* %call524, i64 548
  store i8 0, i8* %794, align 4, !tbaa !52
  %795 = getelementptr inbounds i8, i8* %call524, i64 552
  %796 = bitcast i8* %795 to i32*
  store i32 0, i32* %796, align 8, !tbaa !53
  %797 = getelementptr inbounds i8, i8* %call524, i64 556
  store i8 0, i8* %797, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.6 = getelementptr inbounds i8, i8* %call524, i64 560
  %fDistance.i.i1508.6 = getelementptr inbounds i8, i8* %call524, i64 616
  %798 = bitcast i8* %fDistance.i.i1508.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %798, align 8, !tbaa !56
  %m_fGain.i.i1509.6 = getelementptr inbounds i8, i8* %call524, i64 620
  %799 = bitcast i8* %m_fGain.i.i1509.6 to float*
  store float 1.000000e+00, float* %799, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %791, align 8, !tbaa !40
  %arrayctor.next530.6 = getelementptr inbounds i8, i8* %call524, i64 624
  %800 = bitcast i8* %arrayctor.next530.6 to i32 (...)***
  %801 = getelementptr inbounds i8, i8* %call524, i64 632
  %802 = bitcast i8* %801 to i32*
  store i32 0, i32* %802, align 8, !tbaa !49
  %803 = getelementptr inbounds i8, i8* %call524, i64 636
  store i8 0, i8* %803, align 4, !tbaa !52
  %804 = getelementptr inbounds i8, i8* %call524, i64 640
  %805 = bitcast i8* %804 to i32*
  store i32 0, i32* %805, align 8, !tbaa !53
  %806 = getelementptr inbounds i8, i8* %call524, i64 644
  store i8 0, i8* %806, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.7 = getelementptr inbounds i8, i8* %call524, i64 648
  %fDistance.i.i1508.7 = getelementptr inbounds i8, i8* %call524, i64 704
  %807 = bitcast i8* %fDistance.i.i1508.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %807, align 8, !tbaa !56
  %m_fGain.i.i1509.7 = getelementptr inbounds i8, i8* %call524, i64 708
  %808 = bitcast i8* %m_fGain.i.i1509.7 to float*
  store float 1.000000e+00, float* %808, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %800, align 8, !tbaa !40
  %arrayctor.next530.7 = getelementptr inbounds i8, i8* %call524, i64 712
  %809 = bitcast i8* %arrayctor.next530.7 to i32 (...)***
  %810 = getelementptr inbounds i8, i8* %call524, i64 720
  %811 = bitcast i8* %810 to i32*
  store i32 0, i32* %811, align 8, !tbaa !49
  %812 = getelementptr inbounds i8, i8* %call524, i64 724
  store i8 0, i8* %812, align 4, !tbaa !52
  %813 = getelementptr inbounds i8, i8* %call524, i64 728
  %814 = bitcast i8* %813 to i32*
  store i32 0, i32* %814, align 8, !tbaa !53
  %815 = getelementptr inbounds i8, i8* %call524, i64 732
  store i8 0, i8* %815, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.8 = getelementptr inbounds i8, i8* %call524, i64 736
  %fDistance.i.i1508.8 = getelementptr inbounds i8, i8* %call524, i64 792
  %816 = bitcast i8* %fDistance.i.i1508.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %816, align 8, !tbaa !56
  %m_fGain.i.i1509.8 = getelementptr inbounds i8, i8* %call524, i64 796
  %817 = bitcast i8* %m_fGain.i.i1509.8 to float*
  store float 1.000000e+00, float* %817, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %809, align 8, !tbaa !40
  %arrayctor.next530.8 = getelementptr inbounds i8, i8* %call524, i64 800
  %818 = bitcast i8* %arrayctor.next530.8 to i32 (...)***
  %819 = getelementptr inbounds i8, i8* %call524, i64 808
  %820 = bitcast i8* %819 to i32*
  store i32 0, i32* %820, align 8, !tbaa !49
  %821 = getelementptr inbounds i8, i8* %call524, i64 812
  store i8 0, i8* %821, align 4, !tbaa !52
  %822 = getelementptr inbounds i8, i8* %call524, i64 816
  %823 = bitcast i8* %822 to i32*
  store i32 0, i32* %823, align 8, !tbaa !53
  %824 = getelementptr inbounds i8, i8* %call524, i64 820
  store i8 0, i8* %824, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.9 = getelementptr inbounds i8, i8* %call524, i64 824
  %fDistance.i.i1508.9 = getelementptr inbounds i8, i8* %call524, i64 880
  %825 = bitcast i8* %fDistance.i.i1508.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %825, align 8, !tbaa !56
  %m_fGain.i.i1509.9 = getelementptr inbounds i8, i8* %call524, i64 884
  %826 = bitcast i8* %m_fGain.i.i1509.9 to float*
  store float 1.000000e+00, float* %826, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %818, align 8, !tbaa !40
  %arrayctor.next530.9 = getelementptr inbounds i8, i8* %call524, i64 888
  %827 = bitcast i8* %arrayctor.next530.9 to i32 (...)***
  %828 = getelementptr inbounds i8, i8* %call524, i64 896
  %829 = bitcast i8* %828 to i32*
  store i32 0, i32* %829, align 8, !tbaa !49
  %830 = getelementptr inbounds i8, i8* %call524, i64 900
  store i8 0, i8* %830, align 4, !tbaa !52
  %831 = getelementptr inbounds i8, i8* %call524, i64 904
  %832 = bitcast i8* %831 to i32*
  store i32 0, i32* %832, align 8, !tbaa !53
  %833 = getelementptr inbounds i8, i8* %call524, i64 908
  store i8 0, i8* %833, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.10 = getelementptr inbounds i8, i8* %call524, i64 912
  %fDistance.i.i1508.10 = getelementptr inbounds i8, i8* %call524, i64 968
  %834 = bitcast i8* %fDistance.i.i1508.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %834, align 8, !tbaa !56
  %m_fGain.i.i1509.10 = getelementptr inbounds i8, i8* %call524, i64 972
  %835 = bitcast i8* %m_fGain.i.i1509.10 to float*
  store float 1.000000e+00, float* %835, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %827, align 8, !tbaa !40
  %arrayctor.next530.10 = getelementptr inbounds i8, i8* %call524, i64 976
  %836 = bitcast i8* %arrayctor.next530.10 to i32 (...)***
  %837 = getelementptr inbounds i8, i8* %call524, i64 984
  %838 = bitcast i8* %837 to i32*
  store i32 0, i32* %838, align 8, !tbaa !49
  %839 = getelementptr inbounds i8, i8* %call524, i64 988
  store i8 0, i8* %839, align 4, !tbaa !52
  %840 = getelementptr inbounds i8, i8* %call524, i64 992
  %841 = bitcast i8* %840 to i32*
  store i32 0, i32* %841, align 8, !tbaa !53
  %842 = getelementptr inbounds i8, i8* %call524, i64 996
  store i8 0, i8* %842, align 4, !tbaa !54
  %m_pfCoeff.i.i1507.11 = getelementptr inbounds i8, i8* %call524, i64 1000
  %fDistance.i.i1508.11 = getelementptr inbounds i8, i8* %call524, i64 1056
  %843 = bitcast i8* %fDistance.i.i1508.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1507.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %843, align 8, !tbaa !56
  %m_fGain.i.i1509.11 = getelementptr inbounds i8, i8* %call524, i64 1060
  %844 = bitcast i8* %m_fGain.i.i1509.11 to float*
  store float 1.000000e+00, float* %844, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %836, align 8, !tbaa !40
  %845 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %736, i8** %845, align 8, !tbaa !143
  %846 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %847 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body537

for.body537:                                      ; preds = %for.body537, %for.body537.lr.ph
  %indvars.iv1588 = phi i64 [ 0, %for.body537.lr.ph ], [ %indvars.iv.next1589, %for.body537 ]
  %848 = phi i32 [ 12, %for.body537.lr.ph ], [ %859, %for.body537 ]
  %polPosition.sroa.0.51546 = phi <2 x float> [ zeroinitializer, %for.body537.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1349, %for.body537 ]
  %849 = trunc i64 %indvars.iv1588 to i32
  %conv538 = uitofp i32 %849 to float
  %mul539 = fmul fast float %conv538, 3.600000e+02
  %conv541 = uitofp i32 %848 to float
  %div542 = fdiv fast float %mul539, %conv541
  %call543 = tail call fast float @_Z16DegreesToRadiansf(float %div542) #24
  %sub544 = fsub fast float -0.000000e+00, %call543
  %polPosition.sroa.0.0.vec.insert1349 = insertelement <2 x float> %polPosition.sroa.0.51546, float %sub544, i32 0
  %850 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx548 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %850, i64 %indvars.iv1588
  %851 = load i32, i32* %846, align 8, !tbaa !49
  %852 = load i8, i8* %847, align 4, !tbaa !52, !range !55
  %tobool551 = icmp ne i8 %852, 0
  %853 = bitcast %class.CAmbisonicSpeaker* %arrayidx548 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable552 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %853, align 8, !tbaa !40
  %vfn553 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable552, i64 2
  %854 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn553, align 8
  %call554 = tail call zeroext i1 %854(%class.CAmbisonicSpeaker* %arrayidx548, i32 %851, i1 zeroext %tobool551, i32 0) #24
  %855 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %856 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %855, i64 %indvars.iv1588, i32 0
  %857 = bitcast %class.CAmbisonicSource* %856 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable559 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %857, align 8, !tbaa !40
  %vfn560 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable559, i64 5
  %858 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn560, align 8
  tail call void %858(%class.CAmbisonicSource* %856, <2 x float> %polPosition.sroa.0.0.vec.insert1349, float 1.000000e+00) #24
  %indvars.iv.next1589 = add nuw nsw i64 %indvars.iv1588, 1
  %859 = load i32, i32* %m_nSpeakers521, align 4, !tbaa !146
  %860 = zext i32 %859 to i64
  %cmp536 = icmp ult i64 %indvars.iv.next1589, %860
  br i1 %cmp536, label %for.body537, label %sw.epilog

sw.bb564:                                         ; preds = %if.end
  %m_nSpeakers565 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers565, align 4, !tbaa !146
  %call568 = tail call i8* @_Znam(i64 712) #25
  %861 = bitcast i8* %call568 to i64*
  store i64 8, i64* %861, align 16
  %862 = getelementptr inbounds i8, i8* %call568, i64 8
  %863 = bitcast i8* %862 to i32 (...)***
  %864 = getelementptr inbounds i8, i8* %call568, i64 16
  %865 = bitcast i8* %864 to i32*
  store i32 0, i32* %865, align 8, !tbaa !49
  %866 = getelementptr inbounds i8, i8* %call568, i64 20
  store i8 0, i8* %866, align 4, !tbaa !52
  %867 = getelementptr inbounds i8, i8* %call568, i64 24
  %868 = bitcast i8* %867 to i32*
  store i32 0, i32* %868, align 8, !tbaa !53
  %869 = getelementptr inbounds i8, i8* %call568, i64 28
  store i8 0, i8* %869, align 4, !tbaa !54
  %m_pfCoeff.i.i1510 = getelementptr inbounds i8, i8* %call568, i64 32
  %fDistance.i.i1511 = getelementptr inbounds i8, i8* %call568, i64 88
  %870 = bitcast i8* %fDistance.i.i1511 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %870, align 8, !tbaa !56
  %m_fGain.i.i1512 = getelementptr inbounds i8, i8* %call568, i64 92
  %871 = bitcast i8* %m_fGain.i.i1512 to float*
  store float 1.000000e+00, float* %871, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %863, align 8, !tbaa !40
  %arrayctor.next574 = getelementptr inbounds i8, i8* %call568, i64 96
  %872 = bitcast i8* %arrayctor.next574 to i32 (...)***
  %873 = getelementptr inbounds i8, i8* %call568, i64 104
  %874 = bitcast i8* %873 to i32*
  store i32 0, i32* %874, align 8, !tbaa !49
  %875 = getelementptr inbounds i8, i8* %call568, i64 108
  store i8 0, i8* %875, align 4, !tbaa !52
  %876 = getelementptr inbounds i8, i8* %call568, i64 112
  %877 = bitcast i8* %876 to i32*
  store i32 0, i32* %877, align 8, !tbaa !53
  %878 = getelementptr inbounds i8, i8* %call568, i64 116
  store i8 0, i8* %878, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.1 = getelementptr inbounds i8, i8* %call568, i64 120
  %fDistance.i.i1511.1 = getelementptr inbounds i8, i8* %call568, i64 176
  %879 = bitcast i8* %fDistance.i.i1511.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %879, align 8, !tbaa !56
  %m_fGain.i.i1512.1 = getelementptr inbounds i8, i8* %call568, i64 180
  %880 = bitcast i8* %m_fGain.i.i1512.1 to float*
  store float 1.000000e+00, float* %880, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %872, align 8, !tbaa !40
  %arrayctor.next574.1 = getelementptr inbounds i8, i8* %call568, i64 184
  %881 = bitcast i8* %arrayctor.next574.1 to i32 (...)***
  %882 = getelementptr inbounds i8, i8* %call568, i64 192
  %883 = bitcast i8* %882 to i32*
  store i32 0, i32* %883, align 8, !tbaa !49
  %884 = getelementptr inbounds i8, i8* %call568, i64 196
  store i8 0, i8* %884, align 4, !tbaa !52
  %885 = getelementptr inbounds i8, i8* %call568, i64 200
  %886 = bitcast i8* %885 to i32*
  store i32 0, i32* %886, align 8, !tbaa !53
  %887 = getelementptr inbounds i8, i8* %call568, i64 204
  store i8 0, i8* %887, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.2 = getelementptr inbounds i8, i8* %call568, i64 208
  %fDistance.i.i1511.2 = getelementptr inbounds i8, i8* %call568, i64 264
  %888 = bitcast i8* %fDistance.i.i1511.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %888, align 8, !tbaa !56
  %m_fGain.i.i1512.2 = getelementptr inbounds i8, i8* %call568, i64 268
  %889 = bitcast i8* %m_fGain.i.i1512.2 to float*
  store float 1.000000e+00, float* %889, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %881, align 8, !tbaa !40
  %arrayctor.next574.2 = getelementptr inbounds i8, i8* %call568, i64 272
  %890 = bitcast i8* %arrayctor.next574.2 to i32 (...)***
  %891 = getelementptr inbounds i8, i8* %call568, i64 280
  %892 = bitcast i8* %891 to i32*
  store i32 0, i32* %892, align 8, !tbaa !49
  %893 = getelementptr inbounds i8, i8* %call568, i64 284
  store i8 0, i8* %893, align 4, !tbaa !52
  %894 = getelementptr inbounds i8, i8* %call568, i64 288
  %895 = bitcast i8* %894 to i32*
  store i32 0, i32* %895, align 8, !tbaa !53
  %896 = getelementptr inbounds i8, i8* %call568, i64 292
  store i8 0, i8* %896, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.3 = getelementptr inbounds i8, i8* %call568, i64 296
  %fDistance.i.i1511.3 = getelementptr inbounds i8, i8* %call568, i64 352
  %897 = bitcast i8* %fDistance.i.i1511.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %897, align 8, !tbaa !56
  %m_fGain.i.i1512.3 = getelementptr inbounds i8, i8* %call568, i64 356
  %898 = bitcast i8* %m_fGain.i.i1512.3 to float*
  store float 1.000000e+00, float* %898, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %890, align 8, !tbaa !40
  %arrayctor.next574.3 = getelementptr inbounds i8, i8* %call568, i64 360
  %899 = bitcast i8* %arrayctor.next574.3 to i32 (...)***
  %900 = getelementptr inbounds i8, i8* %call568, i64 368
  %901 = bitcast i8* %900 to i32*
  store i32 0, i32* %901, align 8, !tbaa !49
  %902 = getelementptr inbounds i8, i8* %call568, i64 372
  store i8 0, i8* %902, align 4, !tbaa !52
  %903 = getelementptr inbounds i8, i8* %call568, i64 376
  %904 = bitcast i8* %903 to i32*
  store i32 0, i32* %904, align 8, !tbaa !53
  %905 = getelementptr inbounds i8, i8* %call568, i64 380
  store i8 0, i8* %905, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.4 = getelementptr inbounds i8, i8* %call568, i64 384
  %fDistance.i.i1511.4 = getelementptr inbounds i8, i8* %call568, i64 440
  %906 = bitcast i8* %fDistance.i.i1511.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %906, align 8, !tbaa !56
  %m_fGain.i.i1512.4 = getelementptr inbounds i8, i8* %call568, i64 444
  %907 = bitcast i8* %m_fGain.i.i1512.4 to float*
  store float 1.000000e+00, float* %907, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %899, align 8, !tbaa !40
  %arrayctor.next574.4 = getelementptr inbounds i8, i8* %call568, i64 448
  %908 = bitcast i8* %arrayctor.next574.4 to i32 (...)***
  %909 = getelementptr inbounds i8, i8* %call568, i64 456
  %910 = bitcast i8* %909 to i32*
  store i32 0, i32* %910, align 8, !tbaa !49
  %911 = getelementptr inbounds i8, i8* %call568, i64 460
  store i8 0, i8* %911, align 4, !tbaa !52
  %912 = getelementptr inbounds i8, i8* %call568, i64 464
  %913 = bitcast i8* %912 to i32*
  store i32 0, i32* %913, align 8, !tbaa !53
  %914 = getelementptr inbounds i8, i8* %call568, i64 468
  store i8 0, i8* %914, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.5 = getelementptr inbounds i8, i8* %call568, i64 472
  %fDistance.i.i1511.5 = getelementptr inbounds i8, i8* %call568, i64 528
  %915 = bitcast i8* %fDistance.i.i1511.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %915, align 8, !tbaa !56
  %m_fGain.i.i1512.5 = getelementptr inbounds i8, i8* %call568, i64 532
  %916 = bitcast i8* %m_fGain.i.i1512.5 to float*
  store float 1.000000e+00, float* %916, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %908, align 8, !tbaa !40
  %arrayctor.next574.5 = getelementptr inbounds i8, i8* %call568, i64 536
  %917 = bitcast i8* %arrayctor.next574.5 to i32 (...)***
  %918 = getelementptr inbounds i8, i8* %call568, i64 544
  %919 = bitcast i8* %918 to i32*
  store i32 0, i32* %919, align 8, !tbaa !49
  %920 = getelementptr inbounds i8, i8* %call568, i64 548
  store i8 0, i8* %920, align 4, !tbaa !52
  %921 = getelementptr inbounds i8, i8* %call568, i64 552
  %922 = bitcast i8* %921 to i32*
  store i32 0, i32* %922, align 8, !tbaa !53
  %923 = getelementptr inbounds i8, i8* %call568, i64 556
  store i8 0, i8* %923, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.6 = getelementptr inbounds i8, i8* %call568, i64 560
  %fDistance.i.i1511.6 = getelementptr inbounds i8, i8* %call568, i64 616
  %924 = bitcast i8* %fDistance.i.i1511.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %924, align 8, !tbaa !56
  %m_fGain.i.i1512.6 = getelementptr inbounds i8, i8* %call568, i64 620
  %925 = bitcast i8* %m_fGain.i.i1512.6 to float*
  store float 1.000000e+00, float* %925, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %917, align 8, !tbaa !40
  %arrayctor.next574.6 = getelementptr inbounds i8, i8* %call568, i64 624
  %926 = bitcast i8* %arrayctor.next574.6 to i32 (...)***
  %927 = getelementptr inbounds i8, i8* %call568, i64 632
  %928 = bitcast i8* %927 to i32*
  store i32 0, i32* %928, align 8, !tbaa !49
  %929 = getelementptr inbounds i8, i8* %call568, i64 636
  store i8 0, i8* %929, align 4, !tbaa !52
  %930 = getelementptr inbounds i8, i8* %call568, i64 640
  %931 = bitcast i8* %930 to i32*
  store i32 0, i32* %931, align 8, !tbaa !53
  %932 = getelementptr inbounds i8, i8* %call568, i64 644
  store i8 0, i8* %932, align 4, !tbaa !54
  %m_pfCoeff.i.i1510.7 = getelementptr inbounds i8, i8* %call568, i64 648
  %fDistance.i.i1511.7 = getelementptr inbounds i8, i8* %call568, i64 704
  %933 = bitcast i8* %fDistance.i.i1511.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1510.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %933, align 8, !tbaa !56
  %m_fGain.i.i1512.7 = getelementptr inbounds i8, i8* %call568, i64 708
  %934 = bitcast i8* %m_fGain.i.i1512.7 to float*
  store float 1.000000e+00, float* %934, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %926, align 8, !tbaa !40
  %935 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %862, i8** %935, align 8, !tbaa !143
  %call578 = tail call fast float @_Z16DegreesToRadiansf(float 4.500000e+01) #24
  %polPosition.sroa.0.4.vec.insert1458 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call578, i32 1
  %936 = load i32, i32* %m_nSpeakers565, align 4, !tbaa !146
  %div5811550 = lshr i32 %936, 1
  %cmp5821551 = icmp eq i32 %div5811550, 0
  br i1 %cmp5821551, label %for.end611, label %for.body583.lr.ph

for.body583.lr.ph:                                ; preds = %sw.bb564
  %937 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %938 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body583

for.body583:                                      ; preds = %for.body583, %for.body583.lr.ph
  %indvars.iv1592 = phi i64 [ 0, %for.body583.lr.ph ], [ %indvars.iv.next1593, %for.body583 ]
  %div5811554 = phi i32 [ %div5811550, %for.body583.lr.ph ], [ %div581, %for.body583 ]
  %polPosition.sroa.0.61553 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1458, %for.body583.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1347, %for.body583 ]
  %939 = trunc i64 %indvars.iv1592 to i32
  %conv584 = uitofp i32 %939 to float
  %mul585 = fmul fast float %conv584, 3.600000e+02
  %conv588 = uitofp i32 %div5811554 to float
  %div589 = fdiv fast float %mul585, %conv588
  %add590 = fadd fast float %div589, 4.500000e+01
  %call591 = tail call fast float @_Z16DegreesToRadiansf(float %add590) #24
  %sub592 = fsub fast float -0.000000e+00, %call591
  %polPosition.sroa.0.0.vec.insert1347 = insertelement <2 x float> %polPosition.sroa.0.61553, float %sub592, i32 0
  %940 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx596 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %940, i64 %indvars.iv1592
  %941 = load i32, i32* %937, align 8, !tbaa !49
  %942 = load i8, i8* %938, align 4, !tbaa !52, !range !55
  %tobool599 = icmp ne i8 %942, 0
  %943 = bitcast %class.CAmbisonicSpeaker* %arrayidx596 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable600 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %943, align 8, !tbaa !40
  %vfn601 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable600, i64 2
  %944 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn601, align 8
  %call602 = tail call zeroext i1 %944(%class.CAmbisonicSpeaker* %arrayidx596, i32 %941, i1 zeroext %tobool599, i32 0) #24
  %945 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %946 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %945, i64 %indvars.iv1592, i32 0
  %947 = bitcast %class.CAmbisonicSource* %946 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable607 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %947, align 8, !tbaa !40
  %vfn608 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable607, i64 5
  %948 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn608, align 8
  tail call void %948(%class.CAmbisonicSource* %946, <2 x float> %polPosition.sroa.0.0.vec.insert1347, float 1.000000e+00) #24
  %indvars.iv.next1593 = add nuw nsw i64 %indvars.iv1592, 1
  %949 = load i32, i32* %m_nSpeakers565, align 4, !tbaa !146
  %div581 = lshr i32 %949, 1
  %950 = zext i32 %div581 to i64
  %cmp582 = icmp ult i64 %indvars.iv.next1593, %950
  br i1 %cmp582, label %for.body583, label %for.end611

for.end611:                                       ; preds = %for.body583, %sw.bb564
  %polPosition.sroa.0.6.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1458, %sw.bb564 ], [ %polPosition.sroa.0.0.vec.insert1347, %for.body583 ]
  %call612 = tail call fast float @_Z16DegreesToRadiansf(float -4.500000e+01) #24
  %951 = load i32, i32* %m_nSpeakers565, align 4, !tbaa !146
  %div615 = lshr i32 %951, 1
  %cmp6181547 = icmp ult i32 %div615, %951
  br i1 %cmp6181547, label %for.body619.lr.ph, label %sw.epilog

for.body619.lr.ph:                                ; preds = %for.end611
  %polPosition.sroa.0.4.vec.insert1456 = insertelement <2 x float> %polPosition.sroa.0.6.lcssa, float %call612, i32 1
  %952 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %953 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %954 = zext i32 %div615 to i64
  br label %for.body619

for.body619:                                      ; preds = %for.body619, %for.body619.lr.ph
  %indvars.iv1590 = phi i64 [ %954, %for.body619.lr.ph ], [ %indvars.iv.next1591, %for.body619 ]
  %955 = phi i32 [ %951, %for.body619.lr.ph ], [ %966, %for.body619 ]
  %polPosition.sroa.0.71549 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1456, %for.body619.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1435, %for.body619 ]
  %956 = trunc i64 %indvars.iv1590 to i32
  %sub620 = add i32 %956, -4
  %conv621 = uitofp i32 %sub620 to float
  %mul622 = fmul fast float %conv621, 3.600000e+02
  %div624 = lshr i32 %955, 1
  %conv625 = uitofp i32 %div624 to float
  %div626 = fdiv fast float %mul622, %conv625
  %add627 = fadd fast float %div626, 4.500000e+01
  %call628 = tail call fast float @_Z16DegreesToRadiansf(float %add627) #24
  %sub629 = fsub fast float -0.000000e+00, %call628
  %polPosition.sroa.0.0.vec.insert1435 = insertelement <2 x float> %polPosition.sroa.0.71549, float %sub629, i32 0
  %957 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx633 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %957, i64 %indvars.iv1590
  %958 = load i32, i32* %952, align 8, !tbaa !49
  %959 = load i8, i8* %953, align 4, !tbaa !52, !range !55
  %tobool636 = icmp ne i8 %959, 0
  %960 = bitcast %class.CAmbisonicSpeaker* %arrayidx633 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable637 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %960, align 8, !tbaa !40
  %vfn638 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable637, i64 2
  %961 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn638, align 8
  %call639 = tail call zeroext i1 %961(%class.CAmbisonicSpeaker* %arrayidx633, i32 %958, i1 zeroext %tobool636, i32 0) #24
  %962 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %963 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %962, i64 %indvars.iv1590, i32 0
  %964 = bitcast %class.CAmbisonicSource* %963 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable644 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %964, align 8, !tbaa !40
  %vfn645 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable644, i64 5
  %965 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn645, align 8
  tail call void %965(%class.CAmbisonicSource* %963, <2 x float> %polPosition.sroa.0.0.vec.insert1435, float 1.000000e+00) #24
  %indvars.iv.next1591 = add nuw nsw i64 %indvars.iv1590, 1
  %966 = load i32, i32* %m_nSpeakers565, align 4, !tbaa !146
  %967 = zext i32 %966 to i64
  %cmp618 = icmp ult i64 %indvars.iv.next1591, %967
  br i1 %cmp618, label %for.body619, label %sw.epilog

sw.bb649:                                         ; preds = %if.end
  %m_nSpeakers650 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 20, i32* %m_nSpeakers650, align 4, !tbaa !146
  %call653 = tail call i8* @_Znam(i64 1768) #25
  %968 = bitcast i8* %call653 to i64*
  store i64 20, i64* %968, align 16
  %969 = getelementptr inbounds i8, i8* %call653, i64 8
  %970 = bitcast i8* %969 to i32 (...)***
  %971 = getelementptr inbounds i8, i8* %call653, i64 16
  %972 = bitcast i8* %971 to i32*
  store i32 0, i32* %972, align 8, !tbaa !49
  %973 = getelementptr inbounds i8, i8* %call653, i64 20
  store i8 0, i8* %973, align 4, !tbaa !52
  %974 = getelementptr inbounds i8, i8* %call653, i64 24
  %975 = bitcast i8* %974 to i32*
  store i32 0, i32* %975, align 8, !tbaa !53
  %976 = getelementptr inbounds i8, i8* %call653, i64 28
  store i8 0, i8* %976, align 4, !tbaa !54
  %m_pfCoeff.i.i1513 = getelementptr inbounds i8, i8* %call653, i64 32
  %fDistance.i.i1514 = getelementptr inbounds i8, i8* %call653, i64 88
  %977 = bitcast i8* %fDistance.i.i1514 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %977, align 8, !tbaa !56
  %m_fGain.i.i1515 = getelementptr inbounds i8, i8* %call653, i64 92
  %978 = bitcast i8* %m_fGain.i.i1515 to float*
  store float 1.000000e+00, float* %978, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %970, align 8, !tbaa !40
  %arrayctor.next659 = getelementptr inbounds i8, i8* %call653, i64 96
  %979 = bitcast i8* %arrayctor.next659 to i32 (...)***
  %980 = getelementptr inbounds i8, i8* %call653, i64 104
  %981 = bitcast i8* %980 to i32*
  store i32 0, i32* %981, align 8, !tbaa !49
  %982 = getelementptr inbounds i8, i8* %call653, i64 108
  store i8 0, i8* %982, align 4, !tbaa !52
  %983 = getelementptr inbounds i8, i8* %call653, i64 112
  %984 = bitcast i8* %983 to i32*
  store i32 0, i32* %984, align 8, !tbaa !53
  %985 = getelementptr inbounds i8, i8* %call653, i64 116
  store i8 0, i8* %985, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.1 = getelementptr inbounds i8, i8* %call653, i64 120
  %fDistance.i.i1514.1 = getelementptr inbounds i8, i8* %call653, i64 176
  %986 = bitcast i8* %fDistance.i.i1514.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %986, align 8, !tbaa !56
  %m_fGain.i.i1515.1 = getelementptr inbounds i8, i8* %call653, i64 180
  %987 = bitcast i8* %m_fGain.i.i1515.1 to float*
  store float 1.000000e+00, float* %987, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %979, align 8, !tbaa !40
  %arrayctor.next659.1 = getelementptr inbounds i8, i8* %call653, i64 184
  %988 = bitcast i8* %arrayctor.next659.1 to i32 (...)***
  %989 = getelementptr inbounds i8, i8* %call653, i64 192
  %990 = bitcast i8* %989 to i32*
  store i32 0, i32* %990, align 8, !tbaa !49
  %991 = getelementptr inbounds i8, i8* %call653, i64 196
  store i8 0, i8* %991, align 4, !tbaa !52
  %992 = getelementptr inbounds i8, i8* %call653, i64 200
  %993 = bitcast i8* %992 to i32*
  store i32 0, i32* %993, align 8, !tbaa !53
  %994 = getelementptr inbounds i8, i8* %call653, i64 204
  store i8 0, i8* %994, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.2 = getelementptr inbounds i8, i8* %call653, i64 208
  %fDistance.i.i1514.2 = getelementptr inbounds i8, i8* %call653, i64 264
  %995 = bitcast i8* %fDistance.i.i1514.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %995, align 8, !tbaa !56
  %m_fGain.i.i1515.2 = getelementptr inbounds i8, i8* %call653, i64 268
  %996 = bitcast i8* %m_fGain.i.i1515.2 to float*
  store float 1.000000e+00, float* %996, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %988, align 8, !tbaa !40
  %arrayctor.next659.2 = getelementptr inbounds i8, i8* %call653, i64 272
  %997 = bitcast i8* %arrayctor.next659.2 to i32 (...)***
  %998 = getelementptr inbounds i8, i8* %call653, i64 280
  %999 = bitcast i8* %998 to i32*
  store i32 0, i32* %999, align 8, !tbaa !49
  %1000 = getelementptr inbounds i8, i8* %call653, i64 284
  store i8 0, i8* %1000, align 4, !tbaa !52
  %1001 = getelementptr inbounds i8, i8* %call653, i64 288
  %1002 = bitcast i8* %1001 to i32*
  store i32 0, i32* %1002, align 8, !tbaa !53
  %1003 = getelementptr inbounds i8, i8* %call653, i64 292
  store i8 0, i8* %1003, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.3 = getelementptr inbounds i8, i8* %call653, i64 296
  %fDistance.i.i1514.3 = getelementptr inbounds i8, i8* %call653, i64 352
  %1004 = bitcast i8* %fDistance.i.i1514.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1004, align 8, !tbaa !56
  %m_fGain.i.i1515.3 = getelementptr inbounds i8, i8* %call653, i64 356
  %1005 = bitcast i8* %m_fGain.i.i1515.3 to float*
  store float 1.000000e+00, float* %1005, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %997, align 8, !tbaa !40
  %arrayctor.next659.3 = getelementptr inbounds i8, i8* %call653, i64 360
  %1006 = bitcast i8* %arrayctor.next659.3 to i32 (...)***
  %1007 = getelementptr inbounds i8, i8* %call653, i64 368
  %1008 = bitcast i8* %1007 to i32*
  store i32 0, i32* %1008, align 8, !tbaa !49
  %1009 = getelementptr inbounds i8, i8* %call653, i64 372
  store i8 0, i8* %1009, align 4, !tbaa !52
  %1010 = getelementptr inbounds i8, i8* %call653, i64 376
  %1011 = bitcast i8* %1010 to i32*
  store i32 0, i32* %1011, align 8, !tbaa !53
  %1012 = getelementptr inbounds i8, i8* %call653, i64 380
  store i8 0, i8* %1012, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.4 = getelementptr inbounds i8, i8* %call653, i64 384
  %fDistance.i.i1514.4 = getelementptr inbounds i8, i8* %call653, i64 440
  %1013 = bitcast i8* %fDistance.i.i1514.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1013, align 8, !tbaa !56
  %m_fGain.i.i1515.4 = getelementptr inbounds i8, i8* %call653, i64 444
  %1014 = bitcast i8* %m_fGain.i.i1515.4 to float*
  store float 1.000000e+00, float* %1014, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1006, align 8, !tbaa !40
  %arrayctor.next659.4 = getelementptr inbounds i8, i8* %call653, i64 448
  %1015 = bitcast i8* %arrayctor.next659.4 to i32 (...)***
  %1016 = getelementptr inbounds i8, i8* %call653, i64 456
  %1017 = bitcast i8* %1016 to i32*
  store i32 0, i32* %1017, align 8, !tbaa !49
  %1018 = getelementptr inbounds i8, i8* %call653, i64 460
  store i8 0, i8* %1018, align 4, !tbaa !52
  %1019 = getelementptr inbounds i8, i8* %call653, i64 464
  %1020 = bitcast i8* %1019 to i32*
  store i32 0, i32* %1020, align 8, !tbaa !53
  %1021 = getelementptr inbounds i8, i8* %call653, i64 468
  store i8 0, i8* %1021, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.5 = getelementptr inbounds i8, i8* %call653, i64 472
  %fDistance.i.i1514.5 = getelementptr inbounds i8, i8* %call653, i64 528
  %1022 = bitcast i8* %fDistance.i.i1514.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1022, align 8, !tbaa !56
  %m_fGain.i.i1515.5 = getelementptr inbounds i8, i8* %call653, i64 532
  %1023 = bitcast i8* %m_fGain.i.i1515.5 to float*
  store float 1.000000e+00, float* %1023, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1015, align 8, !tbaa !40
  %arrayctor.next659.5 = getelementptr inbounds i8, i8* %call653, i64 536
  %1024 = bitcast i8* %arrayctor.next659.5 to i32 (...)***
  %1025 = getelementptr inbounds i8, i8* %call653, i64 544
  %1026 = bitcast i8* %1025 to i32*
  store i32 0, i32* %1026, align 8, !tbaa !49
  %1027 = getelementptr inbounds i8, i8* %call653, i64 548
  store i8 0, i8* %1027, align 4, !tbaa !52
  %1028 = getelementptr inbounds i8, i8* %call653, i64 552
  %1029 = bitcast i8* %1028 to i32*
  store i32 0, i32* %1029, align 8, !tbaa !53
  %1030 = getelementptr inbounds i8, i8* %call653, i64 556
  store i8 0, i8* %1030, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.6 = getelementptr inbounds i8, i8* %call653, i64 560
  %fDistance.i.i1514.6 = getelementptr inbounds i8, i8* %call653, i64 616
  %1031 = bitcast i8* %fDistance.i.i1514.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1031, align 8, !tbaa !56
  %m_fGain.i.i1515.6 = getelementptr inbounds i8, i8* %call653, i64 620
  %1032 = bitcast i8* %m_fGain.i.i1515.6 to float*
  store float 1.000000e+00, float* %1032, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1024, align 8, !tbaa !40
  %arrayctor.next659.6 = getelementptr inbounds i8, i8* %call653, i64 624
  %1033 = bitcast i8* %arrayctor.next659.6 to i32 (...)***
  %1034 = getelementptr inbounds i8, i8* %call653, i64 632
  %1035 = bitcast i8* %1034 to i32*
  store i32 0, i32* %1035, align 8, !tbaa !49
  %1036 = getelementptr inbounds i8, i8* %call653, i64 636
  store i8 0, i8* %1036, align 4, !tbaa !52
  %1037 = getelementptr inbounds i8, i8* %call653, i64 640
  %1038 = bitcast i8* %1037 to i32*
  store i32 0, i32* %1038, align 8, !tbaa !53
  %1039 = getelementptr inbounds i8, i8* %call653, i64 644
  store i8 0, i8* %1039, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.7 = getelementptr inbounds i8, i8* %call653, i64 648
  %fDistance.i.i1514.7 = getelementptr inbounds i8, i8* %call653, i64 704
  %1040 = bitcast i8* %fDistance.i.i1514.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1040, align 8, !tbaa !56
  %m_fGain.i.i1515.7 = getelementptr inbounds i8, i8* %call653, i64 708
  %1041 = bitcast i8* %m_fGain.i.i1515.7 to float*
  store float 1.000000e+00, float* %1041, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1033, align 8, !tbaa !40
  %arrayctor.next659.7 = getelementptr inbounds i8, i8* %call653, i64 712
  %1042 = bitcast i8* %arrayctor.next659.7 to i32 (...)***
  %1043 = getelementptr inbounds i8, i8* %call653, i64 720
  %1044 = bitcast i8* %1043 to i32*
  store i32 0, i32* %1044, align 8, !tbaa !49
  %1045 = getelementptr inbounds i8, i8* %call653, i64 724
  store i8 0, i8* %1045, align 4, !tbaa !52
  %1046 = getelementptr inbounds i8, i8* %call653, i64 728
  %1047 = bitcast i8* %1046 to i32*
  store i32 0, i32* %1047, align 8, !tbaa !53
  %1048 = getelementptr inbounds i8, i8* %call653, i64 732
  store i8 0, i8* %1048, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.8 = getelementptr inbounds i8, i8* %call653, i64 736
  %fDistance.i.i1514.8 = getelementptr inbounds i8, i8* %call653, i64 792
  %1049 = bitcast i8* %fDistance.i.i1514.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1049, align 8, !tbaa !56
  %m_fGain.i.i1515.8 = getelementptr inbounds i8, i8* %call653, i64 796
  %1050 = bitcast i8* %m_fGain.i.i1515.8 to float*
  store float 1.000000e+00, float* %1050, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1042, align 8, !tbaa !40
  %arrayctor.next659.8 = getelementptr inbounds i8, i8* %call653, i64 800
  %1051 = bitcast i8* %arrayctor.next659.8 to i32 (...)***
  %1052 = getelementptr inbounds i8, i8* %call653, i64 808
  %1053 = bitcast i8* %1052 to i32*
  store i32 0, i32* %1053, align 8, !tbaa !49
  %1054 = getelementptr inbounds i8, i8* %call653, i64 812
  store i8 0, i8* %1054, align 4, !tbaa !52
  %1055 = getelementptr inbounds i8, i8* %call653, i64 816
  %1056 = bitcast i8* %1055 to i32*
  store i32 0, i32* %1056, align 8, !tbaa !53
  %1057 = getelementptr inbounds i8, i8* %call653, i64 820
  store i8 0, i8* %1057, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.9 = getelementptr inbounds i8, i8* %call653, i64 824
  %fDistance.i.i1514.9 = getelementptr inbounds i8, i8* %call653, i64 880
  %1058 = bitcast i8* %fDistance.i.i1514.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1058, align 8, !tbaa !56
  %m_fGain.i.i1515.9 = getelementptr inbounds i8, i8* %call653, i64 884
  %1059 = bitcast i8* %m_fGain.i.i1515.9 to float*
  store float 1.000000e+00, float* %1059, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1051, align 8, !tbaa !40
  %arrayctor.next659.9 = getelementptr inbounds i8, i8* %call653, i64 888
  %1060 = bitcast i8* %arrayctor.next659.9 to i32 (...)***
  %1061 = getelementptr inbounds i8, i8* %call653, i64 896
  %1062 = bitcast i8* %1061 to i32*
  store i32 0, i32* %1062, align 8, !tbaa !49
  %1063 = getelementptr inbounds i8, i8* %call653, i64 900
  store i8 0, i8* %1063, align 4, !tbaa !52
  %1064 = getelementptr inbounds i8, i8* %call653, i64 904
  %1065 = bitcast i8* %1064 to i32*
  store i32 0, i32* %1065, align 8, !tbaa !53
  %1066 = getelementptr inbounds i8, i8* %call653, i64 908
  store i8 0, i8* %1066, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.10 = getelementptr inbounds i8, i8* %call653, i64 912
  %fDistance.i.i1514.10 = getelementptr inbounds i8, i8* %call653, i64 968
  %1067 = bitcast i8* %fDistance.i.i1514.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1067, align 8, !tbaa !56
  %m_fGain.i.i1515.10 = getelementptr inbounds i8, i8* %call653, i64 972
  %1068 = bitcast i8* %m_fGain.i.i1515.10 to float*
  store float 1.000000e+00, float* %1068, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1060, align 8, !tbaa !40
  %arrayctor.next659.10 = getelementptr inbounds i8, i8* %call653, i64 976
  %1069 = bitcast i8* %arrayctor.next659.10 to i32 (...)***
  %1070 = getelementptr inbounds i8, i8* %call653, i64 984
  %1071 = bitcast i8* %1070 to i32*
  store i32 0, i32* %1071, align 8, !tbaa !49
  %1072 = getelementptr inbounds i8, i8* %call653, i64 988
  store i8 0, i8* %1072, align 4, !tbaa !52
  %1073 = getelementptr inbounds i8, i8* %call653, i64 992
  %1074 = bitcast i8* %1073 to i32*
  store i32 0, i32* %1074, align 8, !tbaa !53
  %1075 = getelementptr inbounds i8, i8* %call653, i64 996
  store i8 0, i8* %1075, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.11 = getelementptr inbounds i8, i8* %call653, i64 1000
  %fDistance.i.i1514.11 = getelementptr inbounds i8, i8* %call653, i64 1056
  %1076 = bitcast i8* %fDistance.i.i1514.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1076, align 8, !tbaa !56
  %m_fGain.i.i1515.11 = getelementptr inbounds i8, i8* %call653, i64 1060
  %1077 = bitcast i8* %m_fGain.i.i1515.11 to float*
  store float 1.000000e+00, float* %1077, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1069, align 8, !tbaa !40
  %arrayctor.next659.11 = getelementptr inbounds i8, i8* %call653, i64 1064
  %1078 = bitcast i8* %arrayctor.next659.11 to i32 (...)***
  %1079 = getelementptr inbounds i8, i8* %call653, i64 1072
  %1080 = bitcast i8* %1079 to i32*
  store i32 0, i32* %1080, align 8, !tbaa !49
  %1081 = getelementptr inbounds i8, i8* %call653, i64 1076
  store i8 0, i8* %1081, align 4, !tbaa !52
  %1082 = getelementptr inbounds i8, i8* %call653, i64 1080
  %1083 = bitcast i8* %1082 to i32*
  store i32 0, i32* %1083, align 8, !tbaa !53
  %1084 = getelementptr inbounds i8, i8* %call653, i64 1084
  store i8 0, i8* %1084, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.12 = getelementptr inbounds i8, i8* %call653, i64 1088
  %fDistance.i.i1514.12 = getelementptr inbounds i8, i8* %call653, i64 1144
  %1085 = bitcast i8* %fDistance.i.i1514.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1085, align 8, !tbaa !56
  %m_fGain.i.i1515.12 = getelementptr inbounds i8, i8* %call653, i64 1148
  %1086 = bitcast i8* %m_fGain.i.i1515.12 to float*
  store float 1.000000e+00, float* %1086, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1078, align 8, !tbaa !40
  %arrayctor.next659.12 = getelementptr inbounds i8, i8* %call653, i64 1152
  %1087 = bitcast i8* %arrayctor.next659.12 to i32 (...)***
  %1088 = getelementptr inbounds i8, i8* %call653, i64 1160
  %1089 = bitcast i8* %1088 to i32*
  store i32 0, i32* %1089, align 8, !tbaa !49
  %1090 = getelementptr inbounds i8, i8* %call653, i64 1164
  store i8 0, i8* %1090, align 4, !tbaa !52
  %1091 = getelementptr inbounds i8, i8* %call653, i64 1168
  %1092 = bitcast i8* %1091 to i32*
  store i32 0, i32* %1092, align 8, !tbaa !53
  %1093 = getelementptr inbounds i8, i8* %call653, i64 1172
  store i8 0, i8* %1093, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.13 = getelementptr inbounds i8, i8* %call653, i64 1176
  %fDistance.i.i1514.13 = getelementptr inbounds i8, i8* %call653, i64 1232
  %1094 = bitcast i8* %fDistance.i.i1514.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1094, align 8, !tbaa !56
  %m_fGain.i.i1515.13 = getelementptr inbounds i8, i8* %call653, i64 1236
  %1095 = bitcast i8* %m_fGain.i.i1515.13 to float*
  store float 1.000000e+00, float* %1095, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1087, align 8, !tbaa !40
  %arrayctor.next659.13 = getelementptr inbounds i8, i8* %call653, i64 1240
  %1096 = bitcast i8* %arrayctor.next659.13 to i32 (...)***
  %1097 = getelementptr inbounds i8, i8* %call653, i64 1248
  %1098 = bitcast i8* %1097 to i32*
  store i32 0, i32* %1098, align 8, !tbaa !49
  %1099 = getelementptr inbounds i8, i8* %call653, i64 1252
  store i8 0, i8* %1099, align 4, !tbaa !52
  %1100 = getelementptr inbounds i8, i8* %call653, i64 1256
  %1101 = bitcast i8* %1100 to i32*
  store i32 0, i32* %1101, align 8, !tbaa !53
  %1102 = getelementptr inbounds i8, i8* %call653, i64 1260
  store i8 0, i8* %1102, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.14 = getelementptr inbounds i8, i8* %call653, i64 1264
  %fDistance.i.i1514.14 = getelementptr inbounds i8, i8* %call653, i64 1320
  %1103 = bitcast i8* %fDistance.i.i1514.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1103, align 8, !tbaa !56
  %m_fGain.i.i1515.14 = getelementptr inbounds i8, i8* %call653, i64 1324
  %1104 = bitcast i8* %m_fGain.i.i1515.14 to float*
  store float 1.000000e+00, float* %1104, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1096, align 8, !tbaa !40
  %arrayctor.next659.14 = getelementptr inbounds i8, i8* %call653, i64 1328
  %1105 = bitcast i8* %arrayctor.next659.14 to i32 (...)***
  %1106 = getelementptr inbounds i8, i8* %call653, i64 1336
  %1107 = bitcast i8* %1106 to i32*
  store i32 0, i32* %1107, align 8, !tbaa !49
  %1108 = getelementptr inbounds i8, i8* %call653, i64 1340
  store i8 0, i8* %1108, align 4, !tbaa !52
  %1109 = getelementptr inbounds i8, i8* %call653, i64 1344
  %1110 = bitcast i8* %1109 to i32*
  store i32 0, i32* %1110, align 8, !tbaa !53
  %1111 = getelementptr inbounds i8, i8* %call653, i64 1348
  store i8 0, i8* %1111, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.15 = getelementptr inbounds i8, i8* %call653, i64 1352
  %fDistance.i.i1514.15 = getelementptr inbounds i8, i8* %call653, i64 1408
  %1112 = bitcast i8* %fDistance.i.i1514.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1112, align 8, !tbaa !56
  %m_fGain.i.i1515.15 = getelementptr inbounds i8, i8* %call653, i64 1412
  %1113 = bitcast i8* %m_fGain.i.i1515.15 to float*
  store float 1.000000e+00, float* %1113, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1105, align 8, !tbaa !40
  %arrayctor.next659.15 = getelementptr inbounds i8, i8* %call653, i64 1416
  %1114 = bitcast i8* %arrayctor.next659.15 to i32 (...)***
  %1115 = getelementptr inbounds i8, i8* %call653, i64 1424
  %1116 = bitcast i8* %1115 to i32*
  store i32 0, i32* %1116, align 8, !tbaa !49
  %1117 = getelementptr inbounds i8, i8* %call653, i64 1428
  store i8 0, i8* %1117, align 4, !tbaa !52
  %1118 = getelementptr inbounds i8, i8* %call653, i64 1432
  %1119 = bitcast i8* %1118 to i32*
  store i32 0, i32* %1119, align 8, !tbaa !53
  %1120 = getelementptr inbounds i8, i8* %call653, i64 1436
  store i8 0, i8* %1120, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.16 = getelementptr inbounds i8, i8* %call653, i64 1440
  %fDistance.i.i1514.16 = getelementptr inbounds i8, i8* %call653, i64 1496
  %1121 = bitcast i8* %fDistance.i.i1514.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1121, align 8, !tbaa !56
  %m_fGain.i.i1515.16 = getelementptr inbounds i8, i8* %call653, i64 1500
  %1122 = bitcast i8* %m_fGain.i.i1515.16 to float*
  store float 1.000000e+00, float* %1122, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1114, align 8, !tbaa !40
  %arrayctor.next659.16 = getelementptr inbounds i8, i8* %call653, i64 1504
  %1123 = bitcast i8* %arrayctor.next659.16 to i32 (...)***
  %1124 = getelementptr inbounds i8, i8* %call653, i64 1512
  %1125 = bitcast i8* %1124 to i32*
  store i32 0, i32* %1125, align 8, !tbaa !49
  %1126 = getelementptr inbounds i8, i8* %call653, i64 1516
  store i8 0, i8* %1126, align 4, !tbaa !52
  %1127 = getelementptr inbounds i8, i8* %call653, i64 1520
  %1128 = bitcast i8* %1127 to i32*
  store i32 0, i32* %1128, align 8, !tbaa !53
  %1129 = getelementptr inbounds i8, i8* %call653, i64 1524
  store i8 0, i8* %1129, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.17 = getelementptr inbounds i8, i8* %call653, i64 1528
  %fDistance.i.i1514.17 = getelementptr inbounds i8, i8* %call653, i64 1584
  %1130 = bitcast i8* %fDistance.i.i1514.17 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.17, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1130, align 8, !tbaa !56
  %m_fGain.i.i1515.17 = getelementptr inbounds i8, i8* %call653, i64 1588
  %1131 = bitcast i8* %m_fGain.i.i1515.17 to float*
  store float 1.000000e+00, float* %1131, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1123, align 8, !tbaa !40
  %arrayctor.next659.17 = getelementptr inbounds i8, i8* %call653, i64 1592
  %1132 = bitcast i8* %arrayctor.next659.17 to i32 (...)***
  %1133 = getelementptr inbounds i8, i8* %call653, i64 1600
  %1134 = bitcast i8* %1133 to i32*
  store i32 0, i32* %1134, align 8, !tbaa !49
  %1135 = getelementptr inbounds i8, i8* %call653, i64 1604
  store i8 0, i8* %1135, align 4, !tbaa !52
  %1136 = getelementptr inbounds i8, i8* %call653, i64 1608
  %1137 = bitcast i8* %1136 to i32*
  store i32 0, i32* %1137, align 8, !tbaa !53
  %1138 = getelementptr inbounds i8, i8* %call653, i64 1612
  store i8 0, i8* %1138, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.18 = getelementptr inbounds i8, i8* %call653, i64 1616
  %fDistance.i.i1514.18 = getelementptr inbounds i8, i8* %call653, i64 1672
  %1139 = bitcast i8* %fDistance.i.i1514.18 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.18, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1139, align 8, !tbaa !56
  %m_fGain.i.i1515.18 = getelementptr inbounds i8, i8* %call653, i64 1676
  %1140 = bitcast i8* %m_fGain.i.i1515.18 to float*
  store float 1.000000e+00, float* %1140, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1132, align 8, !tbaa !40
  %arrayctor.next659.18 = getelementptr inbounds i8, i8* %call653, i64 1680
  %1141 = bitcast i8* %arrayctor.next659.18 to i32 (...)***
  %1142 = getelementptr inbounds i8, i8* %call653, i64 1688
  %1143 = bitcast i8* %1142 to i32*
  store i32 0, i32* %1143, align 8, !tbaa !49
  %1144 = getelementptr inbounds i8, i8* %call653, i64 1692
  store i8 0, i8* %1144, align 4, !tbaa !52
  %1145 = getelementptr inbounds i8, i8* %call653, i64 1696
  %1146 = bitcast i8* %1145 to i32*
  store i32 0, i32* %1146, align 8, !tbaa !53
  %1147 = getelementptr inbounds i8, i8* %call653, i64 1700
  store i8 0, i8* %1147, align 4, !tbaa !54
  %m_pfCoeff.i.i1513.19 = getelementptr inbounds i8, i8* %call653, i64 1704
  %fDistance.i.i1514.19 = getelementptr inbounds i8, i8* %call653, i64 1760
  %1148 = bitcast i8* %fDistance.i.i1514.19 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1513.19, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1148, align 8, !tbaa !56
  %m_fGain.i.i1515.19 = getelementptr inbounds i8, i8* %call653, i64 1764
  %1149 = bitcast i8* %m_fGain.i.i1515.19 to float*
  store float 1.000000e+00, float* %1149, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1141, align 8, !tbaa !40
  %1150 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %969, i8** %1150, align 8, !tbaa !143
  %call663 = tail call fast float @_Z16DegreesToRadiansf(float 0xC051466660000000) #24
  %polPosition.sroa.0.4.vec.insert1454 = insertelement <2 x float> undef, float %call663, i32 1
  %call665 = tail call fast float @_Z16DegreesToRadiansf(float 9.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1389 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1454, float %call665, i32 0
  %1151 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1152 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1153 = load i32, i32* %1152, align 8, !tbaa !49
  %1154 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1155 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool671 = icmp ne i8 %1155, 0
  %1156 = bitcast %class.CAmbisonicSpeaker* %1151 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable672 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1156, align 8, !tbaa !40
  %vfn673 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable672, i64 2
  %1157 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn673, align 8
  %call674 = tail call zeroext i1 %1157(%class.CAmbisonicSpeaker* %1151, i32 %1153, i1 zeroext %tobool671, i32 0) #24
  %1158 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1159 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1158, align 8, !tbaa !143
  %1160 = bitcast %class.CAmbisonicSource* %1159 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable678 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1160, align 8, !tbaa !40
  %vfn679 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable678, i64 5
  %1161 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn679, align 8
  tail call void %1161(%class.CAmbisonicSource* %1159, <2 x float> %polPosition.sroa.0.0.vec.insert1389, float 1.000000e+00) #24
  %call680 = tail call fast float @_Z16DegreesToRadiansf(float -9.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1433 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1389, float %call680, i32 0
  %1162 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx683 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1162, i64 1
  %1163 = load i32, i32* %1152, align 8, !tbaa !49
  %1164 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool686 = icmp ne i8 %1164, 0
  %1165 = bitcast %class.CAmbisonicSpeaker* %arrayidx683 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable687 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1165, align 8, !tbaa !40
  %vfn688 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable687, i64 2
  %1166 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn688, align 8
  %call689 = tail call zeroext i1 %1166(%class.CAmbisonicSpeaker* nonnull %arrayidx683, i32 %1163, i1 zeroext %tobool686, i32 0) #24
  %1167 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1168 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1167, i64 1, i32 0
  %1169 = bitcast %class.CAmbisonicSource* %1168 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable693 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1169, align 8, !tbaa !40
  %vfn694 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable693, i64 5
  %1170 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn694, align 8
  tail call void %1170(%class.CAmbisonicSource* nonnull %1168, <2 x float> %polPosition.sroa.0.0.vec.insert1433, float 1.000000e+00) #24
  %call695 = tail call fast float @_Z16DegreesToRadiansf(float 0xC041A66660000000) #24
  %polPosition.sroa.0.4.vec.insert1450 = insertelement <2 x float> undef, float %call695, i32 1
  %call697 = tail call fast float @_Z16DegreesToRadiansf(float 4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1431 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1450, float %call697, i32 0
  %1171 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx700 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1171, i64 2
  %1172 = load i32, i32* %1152, align 8, !tbaa !49
  %1173 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool703 = icmp ne i8 %1173, 0
  %1174 = bitcast %class.CAmbisonicSpeaker* %arrayidx700 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable704 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1174, align 8, !tbaa !40
  %vfn705 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable704, i64 2
  %1175 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn705, align 8
  %call706 = tail call zeroext i1 %1175(%class.CAmbisonicSpeaker* nonnull %arrayidx700, i32 %1172, i1 zeroext %tobool703, i32 0) #24
  %1176 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1177 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1176, i64 2, i32 0
  %1178 = bitcast %class.CAmbisonicSource* %1177 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable710 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1178, align 8, !tbaa !40
  %vfn711 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable710, i64 5
  %1179 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn711, align 8
  tail call void %1179(%class.CAmbisonicSource* nonnull %1177, <2 x float> %polPosition.sroa.0.0.vec.insert1431, float 1.000000e+00) #24
  %call712 = tail call fast float @_Z16DegreesToRadiansf(float 1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1429 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1431, float %call712, i32 0
  %1180 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx715 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1180, i64 3
  %1181 = load i32, i32* %1152, align 8, !tbaa !49
  %1182 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool718 = icmp ne i8 %1182, 0
  %1183 = bitcast %class.CAmbisonicSpeaker* %arrayidx715 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable719 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1183, align 8, !tbaa !40
  %vfn720 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable719, i64 2
  %1184 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn720, align 8
  %call721 = tail call zeroext i1 %1184(%class.CAmbisonicSpeaker* nonnull %arrayidx715, i32 %1181, i1 zeroext %tobool718, i32 0) #24
  %1185 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1186 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1185, i64 3, i32 0
  %1187 = bitcast %class.CAmbisonicSource* %1186 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable725 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1187, align 8, !tbaa !40
  %vfn726 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable725, i64 5
  %1188 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn726, align 8
  tail call void %1188(%class.CAmbisonicSource* nonnull %1186, <2 x float> %polPosition.sroa.0.0.vec.insert1429, float 1.000000e+00) #24
  %call727 = tail call fast float @_Z16DegreesToRadiansf(float -4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1427 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1429, float %call727, i32 0
  %1189 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx730 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1189, i64 4
  %1190 = load i32, i32* %1152, align 8, !tbaa !49
  %1191 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool733 = icmp ne i8 %1191, 0
  %1192 = bitcast %class.CAmbisonicSpeaker* %arrayidx730 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable734 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1192, align 8, !tbaa !40
  %vfn735 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable734, i64 2
  %1193 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn735, align 8
  %call736 = tail call zeroext i1 %1193(%class.CAmbisonicSpeaker* nonnull %arrayidx730, i32 %1190, i1 zeroext %tobool733, i32 0) #24
  %1194 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1195 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1194, i64 4, i32 0
  %1196 = bitcast %class.CAmbisonicSource* %1195 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable740 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1196, align 8, !tbaa !40
  %vfn741 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable740, i64 5
  %1197 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn741, align 8
  tail call void %1197(%class.CAmbisonicSource* nonnull %1195, <2 x float> %polPosition.sroa.0.0.vec.insert1427, float 1.000000e+00) #24
  %call742 = tail call fast float @_Z16DegreesToRadiansf(float -1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1425 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1427, float %call742, i32 0
  %1198 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx745 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1198, i64 5
  %1199 = load i32, i32* %1152, align 8, !tbaa !49
  %1200 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool748 = icmp ne i8 %1200, 0
  %1201 = bitcast %class.CAmbisonicSpeaker* %arrayidx745 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable749 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1201, align 8, !tbaa !40
  %vfn750 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable749, i64 2
  %1202 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn750, align 8
  %call751 = tail call zeroext i1 %1202(%class.CAmbisonicSpeaker* nonnull %arrayidx745, i32 %1199, i1 zeroext %tobool748, i32 0) #24
  %1203 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1204 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1203, i64 5, i32 0
  %1205 = bitcast %class.CAmbisonicSource* %1204 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable755 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1205, align 8, !tbaa !40
  %vfn756 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable755, i64 5
  %1206 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn756, align 8
  tail call void %1206(%class.CAmbisonicSource* nonnull %1204, <2 x float> %polPosition.sroa.0.0.vec.insert1425, float 1.000000e+00) #24
  %call757 = tail call fast float @_Z16DegreesToRadiansf(float 0xC034E66660000000) #24
  %polPosition.sroa.0.4.vec.insert1448 = insertelement <2 x float> undef, float %call757, i32 1
  %call759 = tail call fast float @_Z16DegreesToRadiansf(float 1.800000e+02) #24
  %polPosition.sroa.0.0.vec.insert1421 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1448, float %call759, i32 0
  %1207 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx762 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1207, i64 6
  %1208 = load i32, i32* %1152, align 8, !tbaa !49
  %1209 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool765 = icmp ne i8 %1209, 0
  %1210 = bitcast %class.CAmbisonicSpeaker* %arrayidx762 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable766 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1210, align 8, !tbaa !40
  %vfn767 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable766, i64 2
  %1211 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn767, align 8
  %call768 = tail call zeroext i1 %1211(%class.CAmbisonicSpeaker* nonnull %arrayidx762, i32 %1208, i1 zeroext %tobool765, i32 0) #24
  %1212 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1212, i64 6, i32 0
  %1214 = bitcast %class.CAmbisonicSource* %1213 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable772 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1214, align 8, !tbaa !40
  %vfn773 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable772, i64 5
  %1215 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn773, align 8
  tail call void %1215(%class.CAmbisonicSource* nonnull %1213, <2 x float> %polPosition.sroa.0.0.vec.insert1421, float 1.000000e+00) #24
  %call774 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.0.vec.insert1415 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1421, float %call774, i32 0
  %1216 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx777 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1216, i64 7
  %1217 = load i32, i32* %1152, align 8, !tbaa !49
  %1218 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool780 = icmp ne i8 %1218, 0
  %1219 = bitcast %class.CAmbisonicSpeaker* %arrayidx777 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable781 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1219, align 8, !tbaa !40
  %vfn782 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable781, i64 2
  %1220 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn782, align 8
  %call783 = tail call zeroext i1 %1220(%class.CAmbisonicSpeaker* nonnull %arrayidx777, i32 %1217, i1 zeroext %tobool780, i32 0) #24
  %1221 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1222 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1221, i64 7, i32 0
  %1223 = bitcast %class.CAmbisonicSource* %1222 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable787 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1223, align 8, !tbaa !40
  %vfn788 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable787, i64 5
  %1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn788, align 8
  tail call void %1224(%class.CAmbisonicSource* nonnull %1222, <2 x float> %polPosition.sroa.0.0.vec.insert1415, float 1.000000e+00) #24
  %call789 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.4.vec.insert1444 = insertelement <2 x float> undef, float %call789, i32 1
  %call791 = tail call fast float @_Z16DegreesToRadiansf(float 0x4051466660000000) #24
  %polPosition.sroa.0.0.vec.insert1407 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1444, float %call791, i32 0
  %1225 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx794 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1225, i64 8
  %1226 = load i32, i32* %1152, align 8, !tbaa !49
  %1227 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool797 = icmp ne i8 %1227, 0
  %1228 = bitcast %class.CAmbisonicSpeaker* %arrayidx794 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable798 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1228, align 8, !tbaa !40
  %vfn799 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable798, i64 2
  %1229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn799, align 8
  %call800 = tail call zeroext i1 %1229(%class.CAmbisonicSpeaker* nonnull %arrayidx794, i32 %1226, i1 zeroext %tobool797, i32 0) #24
  %1230 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1231 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1230, i64 8, i32 0
  %1232 = bitcast %class.CAmbisonicSource* %1231 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable804 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1232, align 8, !tbaa !40
  %vfn805 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable804, i64 5
  %1233 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn805, align 8
  tail call void %1233(%class.CAmbisonicSource* nonnull %1231, <2 x float> %polPosition.sroa.0.0.vec.insert1407, float 1.000000e+00) #24
  %call806 = tail call fast float @_Z16DegreesToRadiansf(float 0x405BB999A0000000) #24
  %polPosition.sroa.0.0.vec.insert1397 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1407, float %call806, i32 0
  %1234 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx809 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1234, i64 9
  %1235 = load i32, i32* %1152, align 8, !tbaa !49
  %1236 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool812 = icmp ne i8 %1236, 0
  %1237 = bitcast %class.CAmbisonicSpeaker* %arrayidx809 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable813 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1237, align 8, !tbaa !40
  %vfn814 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable813, i64 2
  %1238 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn814, align 8
  %call815 = tail call zeroext i1 %1238(%class.CAmbisonicSpeaker* nonnull %arrayidx809, i32 %1235, i1 zeroext %tobool812, i32 0) #24
  %1239 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1239, i64 9, i32 0
  %1241 = bitcast %class.CAmbisonicSource* %1240 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable819 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1241, align 8, !tbaa !40
  %vfn820 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable819, i64 5
  %1242 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn820, align 8
  tail call void %1242(%class.CAmbisonicSource* nonnull %1240, <2 x float> %polPosition.sroa.0.0.vec.insert1397, float 1.000000e+00) #24
  %call821 = tail call fast float @_Z16DegreesToRadiansf(float 0xC051466660000000) #24
  %polPosition.sroa.0.0.vec.insert1363 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1397, float %call821, i32 0
  %1243 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx824 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1243, i64 10
  %1244 = load i32, i32* %1152, align 8, !tbaa !49
  %1245 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool827 = icmp ne i8 %1245, 0
  %1246 = bitcast %class.CAmbisonicSpeaker* %arrayidx824 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable828 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1246, align 8, !tbaa !40
  %vfn829 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable828, i64 2
  %1247 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn829, align 8
  %call830 = tail call zeroext i1 %1247(%class.CAmbisonicSpeaker* nonnull %arrayidx824, i32 %1244, i1 zeroext %tobool827, i32 0) #24
  %1248 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1249 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1248, i64 10, i32 0
  %1250 = bitcast %class.CAmbisonicSource* %1249 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable834 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1250, align 8, !tbaa !40
  %vfn835 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable834, i64 5
  %1251 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn835, align 8
  tail call void %1251(%class.CAmbisonicSource* nonnull %1249, <2 x float> %polPosition.sroa.0.0.vec.insert1363, float 1.000000e+00) #24
  %call836 = tail call fast float @_Z16DegreesToRadiansf(float 0xC05BB999A0000000) #24
  %polPosition.sroa.0.0.vec.insert1391 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1363, float %call836, i32 0
  %1252 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx839 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1252, i64 11
  %1253 = load i32, i32* %1152, align 8, !tbaa !49
  %1254 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool842 = icmp ne i8 %1254, 0
  %1255 = bitcast %class.CAmbisonicSpeaker* %arrayidx839 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable843 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1255, align 8, !tbaa !40
  %vfn844 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable843, i64 2
  %1256 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn844, align 8
  %call845 = tail call zeroext i1 %1256(%class.CAmbisonicSpeaker* nonnull %arrayidx839, i32 %1253, i1 zeroext %tobool842, i32 0) #24
  %1257 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1258 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1257, i64 11, i32 0
  %1259 = bitcast %class.CAmbisonicSource* %1258 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable849 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1259, align 8, !tbaa !40
  %vfn850 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable849, i64 5
  %1260 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn850, align 8
  tail call void %1260(%class.CAmbisonicSource* nonnull %1258, <2 x float> %polPosition.sroa.0.0.vec.insert1391, float 1.000000e+00) #24
  %call851 = tail call fast float @_Z16DegreesToRadiansf(float 0x4034E66660000000) #24
  %polPosition.sroa.0.4.vec.insert1442 = insertelement <2 x float> undef, float %call851, i32 1
  %call853 = tail call fast float @_Z16DegreesToRadiansf(float 1.800000e+02) #24
  %polPosition.sroa.0.0.vec.insert1393 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1442, float %call853, i32 0
  %1261 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx856 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1261, i64 12
  %1262 = load i32, i32* %1152, align 8, !tbaa !49
  %1263 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool859 = icmp ne i8 %1263, 0
  %1264 = bitcast %class.CAmbisonicSpeaker* %arrayidx856 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable860 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1264, align 8, !tbaa !40
  %vfn861 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable860, i64 2
  %1265 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn861, align 8
  %call862 = tail call zeroext i1 %1265(%class.CAmbisonicSpeaker* nonnull %arrayidx856, i32 %1262, i1 zeroext %tobool859, i32 0) #24
  %1266 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1267 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1266, i64 12, i32 0
  %1268 = bitcast %class.CAmbisonicSource* %1267 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable866 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1268, align 8, !tbaa !40
  %vfn867 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable866, i64 5
  %1269 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn867, align 8
  tail call void %1269(%class.CAmbisonicSource* nonnull %1267, <2 x float> %polPosition.sroa.0.0.vec.insert1393, float 1.000000e+00) #24
  %call868 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.0.vec.insert1395 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1393, float %call868, i32 0
  %1270 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx871 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1270, i64 13
  %1271 = load i32, i32* %1152, align 8, !tbaa !49
  %1272 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool874 = icmp ne i8 %1272, 0
  %1273 = bitcast %class.CAmbisonicSpeaker* %arrayidx871 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable875 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1273, align 8, !tbaa !40
  %vfn876 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable875, i64 2
  %1274 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn876, align 8
  %call877 = tail call zeroext i1 %1274(%class.CAmbisonicSpeaker* nonnull %arrayidx871, i32 %1271, i1 zeroext %tobool874, i32 0) #24
  %1275 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1276 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1275, i64 13, i32 0
  %1277 = bitcast %class.CAmbisonicSource* %1276 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable881 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1277, align 8, !tbaa !40
  %vfn882 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable881, i64 5
  %1278 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn882, align 8
  tail call void %1278(%class.CAmbisonicSource* nonnull %1276, <2 x float> %polPosition.sroa.0.0.vec.insert1395, float 1.000000e+00) #24
  %call883 = tail call fast float @_Z16DegreesToRadiansf(float 0x4041A66660000000) #24
  %polPosition.sroa.0.4.vec.insert1438 = insertelement <2 x float> undef, float %call883, i32 1
  %call885 = tail call fast float @_Z16DegreesToRadiansf(float 4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1399 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1438, float %call885, i32 0
  %1279 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx888 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1279, i64 14
  %1280 = load i32, i32* %1152, align 8, !tbaa !49
  %1281 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool891 = icmp ne i8 %1281, 0
  %1282 = bitcast %class.CAmbisonicSpeaker* %arrayidx888 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable892 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1282, align 8, !tbaa !40
  %vfn893 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable892, i64 2
  %1283 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn893, align 8
  %call894 = tail call zeroext i1 %1283(%class.CAmbisonicSpeaker* nonnull %arrayidx888, i32 %1280, i1 zeroext %tobool891, i32 0) #24
  %1284 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1285 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1284, i64 14, i32 0
  %1286 = bitcast %class.CAmbisonicSource* %1285 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable898 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1286, align 8, !tbaa !40
  %vfn899 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable898, i64 5
  %1287 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn899, align 8
  tail call void %1287(%class.CAmbisonicSource* nonnull %1285, <2 x float> %polPosition.sroa.0.0.vec.insert1399, float 1.000000e+00) #24
  %call900 = tail call fast float @_Z16DegreesToRadiansf(float 1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1401 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1399, float %call900, i32 0
  %1288 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx903 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1288, i64 15
  %1289 = load i32, i32* %1152, align 8, !tbaa !49
  %1290 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool906 = icmp ne i8 %1290, 0
  %1291 = bitcast %class.CAmbisonicSpeaker* %arrayidx903 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable907 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1291, align 8, !tbaa !40
  %vfn908 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable907, i64 2
  %1292 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn908, align 8
  %call909 = tail call zeroext i1 %1292(%class.CAmbisonicSpeaker* nonnull %arrayidx903, i32 %1289, i1 zeroext %tobool906, i32 0) #24
  %1293 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1294 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1293, i64 15, i32 0
  %1295 = bitcast %class.CAmbisonicSource* %1294 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable913 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1295, align 8, !tbaa !40
  %vfn914 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable913, i64 5
  %1296 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn914, align 8
  tail call void %1296(%class.CAmbisonicSource* nonnull %1294, <2 x float> %polPosition.sroa.0.0.vec.insert1401, float 1.000000e+00) #24
  %call915 = tail call fast float @_Z16DegreesToRadiansf(float -4.500000e+01) #24
  %polPosition.sroa.0.0.vec.insert1403 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1401, float %call915, i32 0
  %1297 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx918 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1297, i64 16
  %1298 = load i32, i32* %1152, align 8, !tbaa !49
  %1299 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool921 = icmp ne i8 %1299, 0
  %1300 = bitcast %class.CAmbisonicSpeaker* %arrayidx918 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable922 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1300, align 8, !tbaa !40
  %vfn923 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable922, i64 2
  %1301 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn923, align 8
  %call924 = tail call zeroext i1 %1301(%class.CAmbisonicSpeaker* nonnull %arrayidx918, i32 %1298, i1 zeroext %tobool921, i32 0) #24
  %1302 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1303 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1302, i64 16, i32 0
  %1304 = bitcast %class.CAmbisonicSource* %1303 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable928 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1304, align 8, !tbaa !40
  %vfn929 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable928, i64 5
  %1305 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn929, align 8
  tail call void %1305(%class.CAmbisonicSource* nonnull %1303, <2 x float> %polPosition.sroa.0.0.vec.insert1403, float 1.000000e+00) #24
  %call930 = tail call fast float @_Z16DegreesToRadiansf(float -1.350000e+02) #24
  %polPosition.sroa.0.0.vec.insert1405 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1403, float %call930, i32 0
  %1306 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx933 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1306, i64 17
  %1307 = load i32, i32* %1152, align 8, !tbaa !49
  %1308 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool936 = icmp ne i8 %1308, 0
  %1309 = bitcast %class.CAmbisonicSpeaker* %arrayidx933 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable937 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1309, align 8, !tbaa !40
  %vfn938 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable937, i64 2
  %1310 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn938, align 8
  %call939 = tail call zeroext i1 %1310(%class.CAmbisonicSpeaker* nonnull %arrayidx933, i32 %1307, i1 zeroext %tobool936, i32 0) #24
  %1311 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1312 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1311, i64 17, i32 0
  %1313 = bitcast %class.CAmbisonicSource* %1312 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable943 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1313, align 8, !tbaa !40
  %vfn944 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable943, i64 5
  %1314 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn944, align 8
  tail call void %1314(%class.CAmbisonicSource* nonnull %1312, <2 x float> %polPosition.sroa.0.0.vec.insert1405, float 1.000000e+00) #24
  %call945 = tail call fast float @_Z16DegreesToRadiansf(float 0x4051466660000000) #24
  %polPosition.sroa.0.4.vec.insert = insertelement <2 x float> undef, float %call945, i32 1
  %call947 = tail call fast float @_Z16DegreesToRadiansf(float 9.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1409 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert, float %call947, i32 0
  %1315 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx950 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1315, i64 18
  %1316 = load i32, i32* %1152, align 8, !tbaa !49
  %1317 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool953 = icmp ne i8 %1317, 0
  %1318 = bitcast %class.CAmbisonicSpeaker* %arrayidx950 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable954 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1318, align 8, !tbaa !40
  %vfn955 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable954, i64 2
  %1319 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn955, align 8
  %call956 = tail call zeroext i1 %1319(%class.CAmbisonicSpeaker* nonnull %arrayidx950, i32 %1316, i1 zeroext %tobool953, i32 0) #24
  %1320 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1321 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1320, i64 18, i32 0
  %1322 = bitcast %class.CAmbisonicSource* %1321 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable960 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1322, align 8, !tbaa !40
  %vfn961 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable960, i64 5
  %1323 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn961, align 8
  tail call void %1323(%class.CAmbisonicSource* nonnull %1321, <2 x float> %polPosition.sroa.0.0.vec.insert1409, float 1.000000e+00) #24
  %call962 = tail call fast float @_Z16DegreesToRadiansf(float -9.000000e+01) #24
  %polPosition.sroa.0.0.vec.insert1411 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1409, float %call962, i32 0
  %1324 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx965 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1324, i64 19
  %1325 = load i32, i32* %1152, align 8, !tbaa !49
  %1326 = load i8, i8* %1154, align 4, !tbaa !52, !range !55
  %tobool968 = icmp ne i8 %1326, 0
  %1327 = bitcast %class.CAmbisonicSpeaker* %arrayidx965 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable969 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1327, align 8, !tbaa !40
  %vfn970 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable969, i64 2
  %1328 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn970, align 8
  %call971 = tail call zeroext i1 %1328(%class.CAmbisonicSpeaker* nonnull %arrayidx965, i32 %1325, i1 zeroext %tobool968, i32 0) #24
  %1329 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1330 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1329, i64 19, i32 0
  %1331 = bitcast %class.CAmbisonicSource* %1330 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable975 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1331, align 8, !tbaa !40
  %vfn976 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable975, i64 5
  %1332 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn976, align 8
  tail call void %1332(%class.CAmbisonicSource* nonnull %1330, <2 x float> %polPosition.sroa.0.0.vec.insert1411, float 1.000000e+00) #24
  br label %sw.epilog

sw.bb977:                                         ; preds = %if.end
  %m_nSpeakers978 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers978, align 4, !tbaa !146
  %call981 = tail call i8* @_Znam(i64 712) #25
  %1333 = bitcast i8* %call981 to i64*
  store i64 8, i64* %1333, align 16
  %1334 = getelementptr inbounds i8, i8* %call981, i64 8
  %1335 = bitcast i8* %1334 to i32 (...)***
  %1336 = getelementptr inbounds i8, i8* %call981, i64 16
  %1337 = bitcast i8* %1336 to i32*
  store i32 0, i32* %1337, align 8, !tbaa !49
  %1338 = getelementptr inbounds i8, i8* %call981, i64 20
  store i8 0, i8* %1338, align 4, !tbaa !52
  %1339 = getelementptr inbounds i8, i8* %call981, i64 24
  %1340 = bitcast i8* %1339 to i32*
  store i32 0, i32* %1340, align 8, !tbaa !53
  %1341 = getelementptr inbounds i8, i8* %call981, i64 28
  store i8 0, i8* %1341, align 4, !tbaa !54
  %m_pfCoeff.i.i1504 = getelementptr inbounds i8, i8* %call981, i64 32
  %fDistance.i.i1505 = getelementptr inbounds i8, i8* %call981, i64 88
  %1342 = bitcast i8* %fDistance.i.i1505 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1342, align 8, !tbaa !56
  %m_fGain.i.i1506 = getelementptr inbounds i8, i8* %call981, i64 92
  %1343 = bitcast i8* %m_fGain.i.i1506 to float*
  store float 1.000000e+00, float* %1343, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1335, align 8, !tbaa !40
  %arrayctor.next987 = getelementptr inbounds i8, i8* %call981, i64 96
  %1344 = bitcast i8* %arrayctor.next987 to i32 (...)***
  %1345 = getelementptr inbounds i8, i8* %call981, i64 104
  %1346 = bitcast i8* %1345 to i32*
  store i32 0, i32* %1346, align 8, !tbaa !49
  %1347 = getelementptr inbounds i8, i8* %call981, i64 108
  store i8 0, i8* %1347, align 4, !tbaa !52
  %1348 = getelementptr inbounds i8, i8* %call981, i64 112
  %1349 = bitcast i8* %1348 to i32*
  store i32 0, i32* %1349, align 8, !tbaa !53
  %1350 = getelementptr inbounds i8, i8* %call981, i64 116
  store i8 0, i8* %1350, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.1 = getelementptr inbounds i8, i8* %call981, i64 120
  %fDistance.i.i1505.1 = getelementptr inbounds i8, i8* %call981, i64 176
  %1351 = bitcast i8* %fDistance.i.i1505.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1351, align 8, !tbaa !56
  %m_fGain.i.i1506.1 = getelementptr inbounds i8, i8* %call981, i64 180
  %1352 = bitcast i8* %m_fGain.i.i1506.1 to float*
  store float 1.000000e+00, float* %1352, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1344, align 8, !tbaa !40
  %arrayctor.next987.1 = getelementptr inbounds i8, i8* %call981, i64 184
  %1353 = bitcast i8* %arrayctor.next987.1 to i32 (...)***
  %1354 = getelementptr inbounds i8, i8* %call981, i64 192
  %1355 = bitcast i8* %1354 to i32*
  store i32 0, i32* %1355, align 8, !tbaa !49
  %1356 = getelementptr inbounds i8, i8* %call981, i64 196
  store i8 0, i8* %1356, align 4, !tbaa !52
  %1357 = getelementptr inbounds i8, i8* %call981, i64 200
  %1358 = bitcast i8* %1357 to i32*
  store i32 0, i32* %1358, align 8, !tbaa !53
  %1359 = getelementptr inbounds i8, i8* %call981, i64 204
  store i8 0, i8* %1359, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.2 = getelementptr inbounds i8, i8* %call981, i64 208
  %fDistance.i.i1505.2 = getelementptr inbounds i8, i8* %call981, i64 264
  %1360 = bitcast i8* %fDistance.i.i1505.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1360, align 8, !tbaa !56
  %m_fGain.i.i1506.2 = getelementptr inbounds i8, i8* %call981, i64 268
  %1361 = bitcast i8* %m_fGain.i.i1506.2 to float*
  store float 1.000000e+00, float* %1361, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1353, align 8, !tbaa !40
  %arrayctor.next987.2 = getelementptr inbounds i8, i8* %call981, i64 272
  %1362 = bitcast i8* %arrayctor.next987.2 to i32 (...)***
  %1363 = getelementptr inbounds i8, i8* %call981, i64 280
  %1364 = bitcast i8* %1363 to i32*
  store i32 0, i32* %1364, align 8, !tbaa !49
  %1365 = getelementptr inbounds i8, i8* %call981, i64 284
  store i8 0, i8* %1365, align 4, !tbaa !52
  %1366 = getelementptr inbounds i8, i8* %call981, i64 288
  %1367 = bitcast i8* %1366 to i32*
  store i32 0, i32* %1367, align 8, !tbaa !53
  %1368 = getelementptr inbounds i8, i8* %call981, i64 292
  store i8 0, i8* %1368, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.3 = getelementptr inbounds i8, i8* %call981, i64 296
  %fDistance.i.i1505.3 = getelementptr inbounds i8, i8* %call981, i64 352
  %1369 = bitcast i8* %fDistance.i.i1505.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1369, align 8, !tbaa !56
  %m_fGain.i.i1506.3 = getelementptr inbounds i8, i8* %call981, i64 356
  %1370 = bitcast i8* %m_fGain.i.i1506.3 to float*
  store float 1.000000e+00, float* %1370, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1362, align 8, !tbaa !40
  %arrayctor.next987.3 = getelementptr inbounds i8, i8* %call981, i64 360
  %1371 = bitcast i8* %arrayctor.next987.3 to i32 (...)***
  %1372 = getelementptr inbounds i8, i8* %call981, i64 368
  %1373 = bitcast i8* %1372 to i32*
  store i32 0, i32* %1373, align 8, !tbaa !49
  %1374 = getelementptr inbounds i8, i8* %call981, i64 372
  store i8 0, i8* %1374, align 4, !tbaa !52
  %1375 = getelementptr inbounds i8, i8* %call981, i64 376
  %1376 = bitcast i8* %1375 to i32*
  store i32 0, i32* %1376, align 8, !tbaa !53
  %1377 = getelementptr inbounds i8, i8* %call981, i64 380
  store i8 0, i8* %1377, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.4 = getelementptr inbounds i8, i8* %call981, i64 384
  %fDistance.i.i1505.4 = getelementptr inbounds i8, i8* %call981, i64 440
  %1378 = bitcast i8* %fDistance.i.i1505.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1378, align 8, !tbaa !56
  %m_fGain.i.i1506.4 = getelementptr inbounds i8, i8* %call981, i64 444
  %1379 = bitcast i8* %m_fGain.i.i1506.4 to float*
  store float 1.000000e+00, float* %1379, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1371, align 8, !tbaa !40
  %arrayctor.next987.4 = getelementptr inbounds i8, i8* %call981, i64 448
  %1380 = bitcast i8* %arrayctor.next987.4 to i32 (...)***
  %1381 = getelementptr inbounds i8, i8* %call981, i64 456
  %1382 = bitcast i8* %1381 to i32*
  store i32 0, i32* %1382, align 8, !tbaa !49
  %1383 = getelementptr inbounds i8, i8* %call981, i64 460
  store i8 0, i8* %1383, align 4, !tbaa !52
  %1384 = getelementptr inbounds i8, i8* %call981, i64 464
  %1385 = bitcast i8* %1384 to i32*
  store i32 0, i32* %1385, align 8, !tbaa !53
  %1386 = getelementptr inbounds i8, i8* %call981, i64 468
  store i8 0, i8* %1386, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.5 = getelementptr inbounds i8, i8* %call981, i64 472
  %fDistance.i.i1505.5 = getelementptr inbounds i8, i8* %call981, i64 528
  %1387 = bitcast i8* %fDistance.i.i1505.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1387, align 8, !tbaa !56
  %m_fGain.i.i1506.5 = getelementptr inbounds i8, i8* %call981, i64 532
  %1388 = bitcast i8* %m_fGain.i.i1506.5 to float*
  store float 1.000000e+00, float* %1388, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1380, align 8, !tbaa !40
  %arrayctor.next987.5 = getelementptr inbounds i8, i8* %call981, i64 536
  %1389 = bitcast i8* %arrayctor.next987.5 to i32 (...)***
  %1390 = getelementptr inbounds i8, i8* %call981, i64 544
  %1391 = bitcast i8* %1390 to i32*
  store i32 0, i32* %1391, align 8, !tbaa !49
  %1392 = getelementptr inbounds i8, i8* %call981, i64 548
  store i8 0, i8* %1392, align 4, !tbaa !52
  %1393 = getelementptr inbounds i8, i8* %call981, i64 552
  %1394 = bitcast i8* %1393 to i32*
  store i32 0, i32* %1394, align 8, !tbaa !53
  %1395 = getelementptr inbounds i8, i8* %call981, i64 556
  store i8 0, i8* %1395, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.6 = getelementptr inbounds i8, i8* %call981, i64 560
  %fDistance.i.i1505.6 = getelementptr inbounds i8, i8* %call981, i64 616
  %1396 = bitcast i8* %fDistance.i.i1505.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1396, align 8, !tbaa !56
  %m_fGain.i.i1506.6 = getelementptr inbounds i8, i8* %call981, i64 620
  %1397 = bitcast i8* %m_fGain.i.i1506.6 to float*
  store float 1.000000e+00, float* %1397, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1389, align 8, !tbaa !40
  %arrayctor.next987.6 = getelementptr inbounds i8, i8* %call981, i64 624
  %1398 = bitcast i8* %arrayctor.next987.6 to i32 (...)***
  %1399 = getelementptr inbounds i8, i8* %call981, i64 632
  %1400 = bitcast i8* %1399 to i32*
  store i32 0, i32* %1400, align 8, !tbaa !49
  %1401 = getelementptr inbounds i8, i8* %call981, i64 636
  store i8 0, i8* %1401, align 4, !tbaa !52
  %1402 = getelementptr inbounds i8, i8* %call981, i64 640
  %1403 = bitcast i8* %1402 to i32*
  store i32 0, i32* %1403, align 8, !tbaa !53
  %1404 = getelementptr inbounds i8, i8* %call981, i64 644
  store i8 0, i8* %1404, align 4, !tbaa !54
  %m_pfCoeff.i.i1504.7 = getelementptr inbounds i8, i8* %call981, i64 648
  %fDistance.i.i1505.7 = getelementptr inbounds i8, i8* %call981, i64 704
  %1405 = bitcast i8* %fDistance.i.i1505.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1504.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1405, align 8, !tbaa !56
  %m_fGain.i.i1506.7 = getelementptr inbounds i8, i8* %call981, i64 708
  %1406 = bitcast i8* %m_fGain.i.i1506.7 to float*
  store float 1.000000e+00, float* %1406, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1398, align 8, !tbaa !40
  %1407 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1334, i8** %1407, align 8, !tbaa !143
  %call991 = tail call fast float @_Z16DegreesToRadiansf(float 0x40419999A0000000) #24
  %polPosition.sroa.0.4.vec.insert1440 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call991, i32 1
  %1408 = load i32, i32* %m_nSpeakers978, align 4, !tbaa !146
  %div9951558 = lshr i32 %1408, 1
  %cmp9961559 = icmp eq i32 %div9951558, 0
  br i1 %cmp9961559, label %for.end1025, label %for.body997.lr.ph

for.body997.lr.ph:                                ; preds = %sw.bb977
  %1409 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1410 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body997

for.body997:                                      ; preds = %for.body997, %for.body997.lr.ph
  %indvars.iv1596 = phi i64 [ 0, %for.body997.lr.ph ], [ %indvars.iv.next1597, %for.body997 ]
  %div9951562 = phi i32 [ %div9951558, %for.body997.lr.ph ], [ %div995, %for.body997 ]
  %polPosition.sroa.0.81561 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1440, %for.body997.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1413, %for.body997 ]
  %1411 = trunc i64 %indvars.iv1596 to i32
  %conv998 = uitofp i32 %1411 to float
  %mul999 = fmul fast float %conv998, 3.600000e+02
  %conv1002 = uitofp i32 %div9951562 to float
  %div1003 = fdiv fast float %mul999, %conv1002
  %add1004 = fadd fast float %div1003, 4.500000e+01
  %call1005 = tail call fast float @_Z16DegreesToRadiansf(float %add1004) #24
  %sub1006 = fsub fast float -0.000000e+00, %call1005
  %polPosition.sroa.0.0.vec.insert1413 = insertelement <2 x float> %polPosition.sroa.0.81561, float %sub1006, i32 0
  %1412 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx1010 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1412, i64 %indvars.iv1596
  %1413 = load i32, i32* %1409, align 8, !tbaa !49
  %1414 = load i8, i8* %1410, align 4, !tbaa !52, !range !55
  %tobool1013 = icmp ne i8 %1414, 0
  %1415 = bitcast %class.CAmbisonicSpeaker* %arrayidx1010 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1014 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1415, align 8, !tbaa !40
  %vfn1015 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1014, i64 2
  %1416 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1015, align 8
  %call1016 = tail call zeroext i1 %1416(%class.CAmbisonicSpeaker* %arrayidx1010, i32 %1413, i1 zeroext %tobool1013, i32 0) #24
  %1417 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1418 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1417, i64 %indvars.iv1596, i32 0
  %1419 = bitcast %class.CAmbisonicSource* %1418 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1021 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1419, align 8, !tbaa !40
  %vfn1022 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1021, i64 5
  %1420 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1022, align 8
  tail call void %1420(%class.CAmbisonicSource* %1418, <2 x float> %polPosition.sroa.0.0.vec.insert1413, float 1.000000e+00) #24
  %indvars.iv.next1597 = add nuw nsw i64 %indvars.iv1596, 1
  %1421 = load i32, i32* %m_nSpeakers978, align 4, !tbaa !146
  %div995 = lshr i32 %1421, 1
  %1422 = zext i32 %div995 to i64
  %cmp996 = icmp ult i64 %indvars.iv.next1597, %1422
  br i1 %cmp996, label %for.body997, label %for.end1025

for.end1025:                                      ; preds = %for.body997, %sw.bb977
  %polPosition.sroa.0.8.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1440, %sw.bb977 ], [ %polPosition.sroa.0.0.vec.insert1413, %for.body997 ]
  %call1026 = tail call fast float @_Z16DegreesToRadiansf(float 0xC0419999A0000000) #24
  %1423 = load i32, i32* %m_nSpeakers978, align 4, !tbaa !146
  %div1029 = lshr i32 %1423, 1
  %cmp10321555 = icmp ult i32 %div1029, %1423
  br i1 %cmp10321555, label %for.body1033.lr.ph, label %sw.epilog

for.body1033.lr.ph:                               ; preds = %for.end1025
  %polPosition.sroa.0.4.vec.insert1446 = insertelement <2 x float> %polPosition.sroa.0.8.lcssa, float %call1026, i32 1
  %1424 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1425 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1426 = zext i32 %div1029 to i64
  br label %for.body1033

for.body1033:                                     ; preds = %for.body1033, %for.body1033.lr.ph
  %indvars.iv1594 = phi i64 [ %1426, %for.body1033.lr.ph ], [ %indvars.iv.next1595, %for.body1033 ]
  %1427 = phi i32 [ %1423, %for.body1033.lr.ph ], [ %1438, %for.body1033 ]
  %polPosition.sroa.0.91557 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1446, %for.body1033.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1417, %for.body1033 ]
  %1428 = trunc i64 %indvars.iv1594 to i32
  %sub1034 = add i32 %1428, -4
  %conv1035 = uitofp i32 %sub1034 to float
  %mul1036 = fmul fast float %conv1035, 3.600000e+02
  %div1038 = lshr i32 %1427, 1
  %conv1039 = uitofp i32 %div1038 to float
  %div1040 = fdiv fast float %mul1036, %conv1039
  %add1041 = fadd fast float %div1040, 4.500000e+01
  %call1042 = tail call fast float @_Z16DegreesToRadiansf(float %add1041) #24
  %sub1043 = fsub fast float -0.000000e+00, %call1042
  %polPosition.sroa.0.0.vec.insert1417 = insertelement <2 x float> %polPosition.sroa.0.91557, float %sub1043, i32 0
  %1429 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx1047 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1429, i64 %indvars.iv1594
  %1430 = load i32, i32* %1424, align 8, !tbaa !49
  %1431 = load i8, i8* %1425, align 4, !tbaa !52, !range !55
  %tobool1050 = icmp ne i8 %1431, 0
  %1432 = bitcast %class.CAmbisonicSpeaker* %arrayidx1047 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1051 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1432, align 8, !tbaa !40
  %vfn1052 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1051, i64 2
  %1433 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1052, align 8
  %call1053 = tail call zeroext i1 %1433(%class.CAmbisonicSpeaker* %arrayidx1047, i32 %1430, i1 zeroext %tobool1050, i32 0) #24
  %1434 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1435 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1434, i64 %indvars.iv1594, i32 0
  %1436 = bitcast %class.CAmbisonicSource* %1435 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1058 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1436, align 8, !tbaa !40
  %vfn1059 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1058, i64 5
  %1437 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1059, align 8
  tail call void %1437(%class.CAmbisonicSource* %1435, <2 x float> %polPosition.sroa.0.0.vec.insert1417, float 1.000000e+00) #24
  %indvars.iv.next1595 = add nuw nsw i64 %indvars.iv1594, 1
  %1438 = load i32, i32* %m_nSpeakers978, align 4, !tbaa !146
  %1439 = zext i32 %1438 to i64
  %cmp1032 = icmp ult i64 %indvars.iv.next1595, %1439
  br i1 %cmp1032, label %for.body1033, label %sw.epilog

sw.bb1063:                                        ; preds = %if.end
  %m_nSpeakers1064 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 17, i32* %m_nSpeakers1064, align 4, !tbaa !146
  %call1067 = tail call i8* @_Znam(i64 1504) #25
  %1440 = bitcast i8* %call1067 to i64*
  store i64 17, i64* %1440, align 16
  %1441 = getelementptr inbounds i8, i8* %call1067, i64 8
  %1442 = bitcast i8* %1441 to i32 (...)***
  %1443 = getelementptr inbounds i8, i8* %call1067, i64 16
  %1444 = bitcast i8* %1443 to i32*
  store i32 0, i32* %1444, align 8, !tbaa !49
  %1445 = getelementptr inbounds i8, i8* %call1067, i64 20
  store i8 0, i8* %1445, align 4, !tbaa !52
  %1446 = getelementptr inbounds i8, i8* %call1067, i64 24
  %1447 = bitcast i8* %1446 to i32*
  store i32 0, i32* %1447, align 8, !tbaa !53
  %1448 = getelementptr inbounds i8, i8* %call1067, i64 28
  store i8 0, i8* %1448, align 4, !tbaa !54
  %m_pfCoeff.i.i1489 = getelementptr inbounds i8, i8* %call1067, i64 32
  %fDistance.i.i1490 = getelementptr inbounds i8, i8* %call1067, i64 88
  %1449 = bitcast i8* %fDistance.i.i1490 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1449, align 8, !tbaa !56
  %m_fGain.i.i1491 = getelementptr inbounds i8, i8* %call1067, i64 92
  %1450 = bitcast i8* %m_fGain.i.i1491 to float*
  store float 1.000000e+00, float* %1450, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1442, align 8, !tbaa !40
  %arrayctor.next1073 = getelementptr inbounds i8, i8* %call1067, i64 96
  %1451 = bitcast i8* %arrayctor.next1073 to i32 (...)***
  %1452 = getelementptr inbounds i8, i8* %call1067, i64 104
  %1453 = bitcast i8* %1452 to i32*
  store i32 0, i32* %1453, align 8, !tbaa !49
  %1454 = getelementptr inbounds i8, i8* %call1067, i64 108
  store i8 0, i8* %1454, align 4, !tbaa !52
  %1455 = getelementptr inbounds i8, i8* %call1067, i64 112
  %1456 = bitcast i8* %1455 to i32*
  store i32 0, i32* %1456, align 8, !tbaa !53
  %1457 = getelementptr inbounds i8, i8* %call1067, i64 116
  store i8 0, i8* %1457, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.1 = getelementptr inbounds i8, i8* %call1067, i64 120
  %fDistance.i.i1490.1 = getelementptr inbounds i8, i8* %call1067, i64 176
  %1458 = bitcast i8* %fDistance.i.i1490.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1458, align 8, !tbaa !56
  %m_fGain.i.i1491.1 = getelementptr inbounds i8, i8* %call1067, i64 180
  %1459 = bitcast i8* %m_fGain.i.i1491.1 to float*
  store float 1.000000e+00, float* %1459, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1451, align 8, !tbaa !40
  %arrayctor.next1073.1 = getelementptr inbounds i8, i8* %call1067, i64 184
  %1460 = bitcast i8* %arrayctor.next1073.1 to i32 (...)***
  %1461 = getelementptr inbounds i8, i8* %call1067, i64 192
  %1462 = bitcast i8* %1461 to i32*
  store i32 0, i32* %1462, align 8, !tbaa !49
  %1463 = getelementptr inbounds i8, i8* %call1067, i64 196
  store i8 0, i8* %1463, align 4, !tbaa !52
  %1464 = getelementptr inbounds i8, i8* %call1067, i64 200
  %1465 = bitcast i8* %1464 to i32*
  store i32 0, i32* %1465, align 8, !tbaa !53
  %1466 = getelementptr inbounds i8, i8* %call1067, i64 204
  store i8 0, i8* %1466, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.2 = getelementptr inbounds i8, i8* %call1067, i64 208
  %fDistance.i.i1490.2 = getelementptr inbounds i8, i8* %call1067, i64 264
  %1467 = bitcast i8* %fDistance.i.i1490.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1467, align 8, !tbaa !56
  %m_fGain.i.i1491.2 = getelementptr inbounds i8, i8* %call1067, i64 268
  %1468 = bitcast i8* %m_fGain.i.i1491.2 to float*
  store float 1.000000e+00, float* %1468, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1460, align 8, !tbaa !40
  %arrayctor.next1073.2 = getelementptr inbounds i8, i8* %call1067, i64 272
  %1469 = bitcast i8* %arrayctor.next1073.2 to i32 (...)***
  %1470 = getelementptr inbounds i8, i8* %call1067, i64 280
  %1471 = bitcast i8* %1470 to i32*
  store i32 0, i32* %1471, align 8, !tbaa !49
  %1472 = getelementptr inbounds i8, i8* %call1067, i64 284
  store i8 0, i8* %1472, align 4, !tbaa !52
  %1473 = getelementptr inbounds i8, i8* %call1067, i64 288
  %1474 = bitcast i8* %1473 to i32*
  store i32 0, i32* %1474, align 8, !tbaa !53
  %1475 = getelementptr inbounds i8, i8* %call1067, i64 292
  store i8 0, i8* %1475, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.3 = getelementptr inbounds i8, i8* %call1067, i64 296
  %fDistance.i.i1490.3 = getelementptr inbounds i8, i8* %call1067, i64 352
  %1476 = bitcast i8* %fDistance.i.i1490.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1476, align 8, !tbaa !56
  %m_fGain.i.i1491.3 = getelementptr inbounds i8, i8* %call1067, i64 356
  %1477 = bitcast i8* %m_fGain.i.i1491.3 to float*
  store float 1.000000e+00, float* %1477, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1469, align 8, !tbaa !40
  %arrayctor.next1073.3 = getelementptr inbounds i8, i8* %call1067, i64 360
  %1478 = bitcast i8* %arrayctor.next1073.3 to i32 (...)***
  %1479 = getelementptr inbounds i8, i8* %call1067, i64 368
  %1480 = bitcast i8* %1479 to i32*
  store i32 0, i32* %1480, align 8, !tbaa !49
  %1481 = getelementptr inbounds i8, i8* %call1067, i64 372
  store i8 0, i8* %1481, align 4, !tbaa !52
  %1482 = getelementptr inbounds i8, i8* %call1067, i64 376
  %1483 = bitcast i8* %1482 to i32*
  store i32 0, i32* %1483, align 8, !tbaa !53
  %1484 = getelementptr inbounds i8, i8* %call1067, i64 380
  store i8 0, i8* %1484, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.4 = getelementptr inbounds i8, i8* %call1067, i64 384
  %fDistance.i.i1490.4 = getelementptr inbounds i8, i8* %call1067, i64 440
  %1485 = bitcast i8* %fDistance.i.i1490.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1485, align 8, !tbaa !56
  %m_fGain.i.i1491.4 = getelementptr inbounds i8, i8* %call1067, i64 444
  %1486 = bitcast i8* %m_fGain.i.i1491.4 to float*
  store float 1.000000e+00, float* %1486, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1478, align 8, !tbaa !40
  %arrayctor.next1073.4 = getelementptr inbounds i8, i8* %call1067, i64 448
  %1487 = bitcast i8* %arrayctor.next1073.4 to i32 (...)***
  %1488 = getelementptr inbounds i8, i8* %call1067, i64 456
  %1489 = bitcast i8* %1488 to i32*
  store i32 0, i32* %1489, align 8, !tbaa !49
  %1490 = getelementptr inbounds i8, i8* %call1067, i64 460
  store i8 0, i8* %1490, align 4, !tbaa !52
  %1491 = getelementptr inbounds i8, i8* %call1067, i64 464
  %1492 = bitcast i8* %1491 to i32*
  store i32 0, i32* %1492, align 8, !tbaa !53
  %1493 = getelementptr inbounds i8, i8* %call1067, i64 468
  store i8 0, i8* %1493, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.5 = getelementptr inbounds i8, i8* %call1067, i64 472
  %fDistance.i.i1490.5 = getelementptr inbounds i8, i8* %call1067, i64 528
  %1494 = bitcast i8* %fDistance.i.i1490.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1494, align 8, !tbaa !56
  %m_fGain.i.i1491.5 = getelementptr inbounds i8, i8* %call1067, i64 532
  %1495 = bitcast i8* %m_fGain.i.i1491.5 to float*
  store float 1.000000e+00, float* %1495, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1487, align 8, !tbaa !40
  %arrayctor.next1073.5 = getelementptr inbounds i8, i8* %call1067, i64 536
  %1496 = bitcast i8* %arrayctor.next1073.5 to i32 (...)***
  %1497 = getelementptr inbounds i8, i8* %call1067, i64 544
  %1498 = bitcast i8* %1497 to i32*
  store i32 0, i32* %1498, align 8, !tbaa !49
  %1499 = getelementptr inbounds i8, i8* %call1067, i64 548
  store i8 0, i8* %1499, align 4, !tbaa !52
  %1500 = getelementptr inbounds i8, i8* %call1067, i64 552
  %1501 = bitcast i8* %1500 to i32*
  store i32 0, i32* %1501, align 8, !tbaa !53
  %1502 = getelementptr inbounds i8, i8* %call1067, i64 556
  store i8 0, i8* %1502, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.6 = getelementptr inbounds i8, i8* %call1067, i64 560
  %fDistance.i.i1490.6 = getelementptr inbounds i8, i8* %call1067, i64 616
  %1503 = bitcast i8* %fDistance.i.i1490.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1503, align 8, !tbaa !56
  %m_fGain.i.i1491.6 = getelementptr inbounds i8, i8* %call1067, i64 620
  %1504 = bitcast i8* %m_fGain.i.i1491.6 to float*
  store float 1.000000e+00, float* %1504, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1496, align 8, !tbaa !40
  %arrayctor.next1073.6 = getelementptr inbounds i8, i8* %call1067, i64 624
  %1505 = bitcast i8* %arrayctor.next1073.6 to i32 (...)***
  %1506 = getelementptr inbounds i8, i8* %call1067, i64 632
  %1507 = bitcast i8* %1506 to i32*
  store i32 0, i32* %1507, align 8, !tbaa !49
  %1508 = getelementptr inbounds i8, i8* %call1067, i64 636
  store i8 0, i8* %1508, align 4, !tbaa !52
  %1509 = getelementptr inbounds i8, i8* %call1067, i64 640
  %1510 = bitcast i8* %1509 to i32*
  store i32 0, i32* %1510, align 8, !tbaa !53
  %1511 = getelementptr inbounds i8, i8* %call1067, i64 644
  store i8 0, i8* %1511, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.7 = getelementptr inbounds i8, i8* %call1067, i64 648
  %fDistance.i.i1490.7 = getelementptr inbounds i8, i8* %call1067, i64 704
  %1512 = bitcast i8* %fDistance.i.i1490.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1512, align 8, !tbaa !56
  %m_fGain.i.i1491.7 = getelementptr inbounds i8, i8* %call1067, i64 708
  %1513 = bitcast i8* %m_fGain.i.i1491.7 to float*
  store float 1.000000e+00, float* %1513, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1505, align 8, !tbaa !40
  %arrayctor.next1073.7 = getelementptr inbounds i8, i8* %call1067, i64 712
  %1514 = bitcast i8* %arrayctor.next1073.7 to i32 (...)***
  %1515 = getelementptr inbounds i8, i8* %call1067, i64 720
  %1516 = bitcast i8* %1515 to i32*
  store i32 0, i32* %1516, align 8, !tbaa !49
  %1517 = getelementptr inbounds i8, i8* %call1067, i64 724
  store i8 0, i8* %1517, align 4, !tbaa !52
  %1518 = getelementptr inbounds i8, i8* %call1067, i64 728
  %1519 = bitcast i8* %1518 to i32*
  store i32 0, i32* %1519, align 8, !tbaa !53
  %1520 = getelementptr inbounds i8, i8* %call1067, i64 732
  store i8 0, i8* %1520, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.8 = getelementptr inbounds i8, i8* %call1067, i64 736
  %fDistance.i.i1490.8 = getelementptr inbounds i8, i8* %call1067, i64 792
  %1521 = bitcast i8* %fDistance.i.i1490.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1521, align 8, !tbaa !56
  %m_fGain.i.i1491.8 = getelementptr inbounds i8, i8* %call1067, i64 796
  %1522 = bitcast i8* %m_fGain.i.i1491.8 to float*
  store float 1.000000e+00, float* %1522, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1514, align 8, !tbaa !40
  %arrayctor.next1073.8 = getelementptr inbounds i8, i8* %call1067, i64 800
  %1523 = bitcast i8* %arrayctor.next1073.8 to i32 (...)***
  %1524 = getelementptr inbounds i8, i8* %call1067, i64 808
  %1525 = bitcast i8* %1524 to i32*
  store i32 0, i32* %1525, align 8, !tbaa !49
  %1526 = getelementptr inbounds i8, i8* %call1067, i64 812
  store i8 0, i8* %1526, align 4, !tbaa !52
  %1527 = getelementptr inbounds i8, i8* %call1067, i64 816
  %1528 = bitcast i8* %1527 to i32*
  store i32 0, i32* %1528, align 8, !tbaa !53
  %1529 = getelementptr inbounds i8, i8* %call1067, i64 820
  store i8 0, i8* %1529, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.9 = getelementptr inbounds i8, i8* %call1067, i64 824
  %fDistance.i.i1490.9 = getelementptr inbounds i8, i8* %call1067, i64 880
  %1530 = bitcast i8* %fDistance.i.i1490.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1530, align 8, !tbaa !56
  %m_fGain.i.i1491.9 = getelementptr inbounds i8, i8* %call1067, i64 884
  %1531 = bitcast i8* %m_fGain.i.i1491.9 to float*
  store float 1.000000e+00, float* %1531, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1523, align 8, !tbaa !40
  %arrayctor.next1073.9 = getelementptr inbounds i8, i8* %call1067, i64 888
  %1532 = bitcast i8* %arrayctor.next1073.9 to i32 (...)***
  %1533 = getelementptr inbounds i8, i8* %call1067, i64 896
  %1534 = bitcast i8* %1533 to i32*
  store i32 0, i32* %1534, align 8, !tbaa !49
  %1535 = getelementptr inbounds i8, i8* %call1067, i64 900
  store i8 0, i8* %1535, align 4, !tbaa !52
  %1536 = getelementptr inbounds i8, i8* %call1067, i64 904
  %1537 = bitcast i8* %1536 to i32*
  store i32 0, i32* %1537, align 8, !tbaa !53
  %1538 = getelementptr inbounds i8, i8* %call1067, i64 908
  store i8 0, i8* %1538, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.10 = getelementptr inbounds i8, i8* %call1067, i64 912
  %fDistance.i.i1490.10 = getelementptr inbounds i8, i8* %call1067, i64 968
  %1539 = bitcast i8* %fDistance.i.i1490.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1539, align 8, !tbaa !56
  %m_fGain.i.i1491.10 = getelementptr inbounds i8, i8* %call1067, i64 972
  %1540 = bitcast i8* %m_fGain.i.i1491.10 to float*
  store float 1.000000e+00, float* %1540, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1532, align 8, !tbaa !40
  %arrayctor.next1073.10 = getelementptr inbounds i8, i8* %call1067, i64 976
  %1541 = bitcast i8* %arrayctor.next1073.10 to i32 (...)***
  %1542 = getelementptr inbounds i8, i8* %call1067, i64 984
  %1543 = bitcast i8* %1542 to i32*
  store i32 0, i32* %1543, align 8, !tbaa !49
  %1544 = getelementptr inbounds i8, i8* %call1067, i64 988
  store i8 0, i8* %1544, align 4, !tbaa !52
  %1545 = getelementptr inbounds i8, i8* %call1067, i64 992
  %1546 = bitcast i8* %1545 to i32*
  store i32 0, i32* %1546, align 8, !tbaa !53
  %1547 = getelementptr inbounds i8, i8* %call1067, i64 996
  store i8 0, i8* %1547, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.11 = getelementptr inbounds i8, i8* %call1067, i64 1000
  %fDistance.i.i1490.11 = getelementptr inbounds i8, i8* %call1067, i64 1056
  %1548 = bitcast i8* %fDistance.i.i1490.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1548, align 8, !tbaa !56
  %m_fGain.i.i1491.11 = getelementptr inbounds i8, i8* %call1067, i64 1060
  %1549 = bitcast i8* %m_fGain.i.i1491.11 to float*
  store float 1.000000e+00, float* %1549, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1541, align 8, !tbaa !40
  %arrayctor.next1073.11 = getelementptr inbounds i8, i8* %call1067, i64 1064
  %1550 = bitcast i8* %arrayctor.next1073.11 to i32 (...)***
  %1551 = getelementptr inbounds i8, i8* %call1067, i64 1072
  %1552 = bitcast i8* %1551 to i32*
  store i32 0, i32* %1552, align 8, !tbaa !49
  %1553 = getelementptr inbounds i8, i8* %call1067, i64 1076
  store i8 0, i8* %1553, align 4, !tbaa !52
  %1554 = getelementptr inbounds i8, i8* %call1067, i64 1080
  %1555 = bitcast i8* %1554 to i32*
  store i32 0, i32* %1555, align 8, !tbaa !53
  %1556 = getelementptr inbounds i8, i8* %call1067, i64 1084
  store i8 0, i8* %1556, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.12 = getelementptr inbounds i8, i8* %call1067, i64 1088
  %fDistance.i.i1490.12 = getelementptr inbounds i8, i8* %call1067, i64 1144
  %1557 = bitcast i8* %fDistance.i.i1490.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1557, align 8, !tbaa !56
  %m_fGain.i.i1491.12 = getelementptr inbounds i8, i8* %call1067, i64 1148
  %1558 = bitcast i8* %m_fGain.i.i1491.12 to float*
  store float 1.000000e+00, float* %1558, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1550, align 8, !tbaa !40
  %arrayctor.next1073.12 = getelementptr inbounds i8, i8* %call1067, i64 1152
  %1559 = bitcast i8* %arrayctor.next1073.12 to i32 (...)***
  %1560 = getelementptr inbounds i8, i8* %call1067, i64 1160
  %1561 = bitcast i8* %1560 to i32*
  store i32 0, i32* %1561, align 8, !tbaa !49
  %1562 = getelementptr inbounds i8, i8* %call1067, i64 1164
  store i8 0, i8* %1562, align 4, !tbaa !52
  %1563 = getelementptr inbounds i8, i8* %call1067, i64 1168
  %1564 = bitcast i8* %1563 to i32*
  store i32 0, i32* %1564, align 8, !tbaa !53
  %1565 = getelementptr inbounds i8, i8* %call1067, i64 1172
  store i8 0, i8* %1565, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.13 = getelementptr inbounds i8, i8* %call1067, i64 1176
  %fDistance.i.i1490.13 = getelementptr inbounds i8, i8* %call1067, i64 1232
  %1566 = bitcast i8* %fDistance.i.i1490.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1566, align 8, !tbaa !56
  %m_fGain.i.i1491.13 = getelementptr inbounds i8, i8* %call1067, i64 1236
  %1567 = bitcast i8* %m_fGain.i.i1491.13 to float*
  store float 1.000000e+00, float* %1567, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1559, align 8, !tbaa !40
  %arrayctor.next1073.13 = getelementptr inbounds i8, i8* %call1067, i64 1240
  %1568 = bitcast i8* %arrayctor.next1073.13 to i32 (...)***
  %1569 = getelementptr inbounds i8, i8* %call1067, i64 1248
  %1570 = bitcast i8* %1569 to i32*
  store i32 0, i32* %1570, align 8, !tbaa !49
  %1571 = getelementptr inbounds i8, i8* %call1067, i64 1252
  store i8 0, i8* %1571, align 4, !tbaa !52
  %1572 = getelementptr inbounds i8, i8* %call1067, i64 1256
  %1573 = bitcast i8* %1572 to i32*
  store i32 0, i32* %1573, align 8, !tbaa !53
  %1574 = getelementptr inbounds i8, i8* %call1067, i64 1260
  store i8 0, i8* %1574, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.14 = getelementptr inbounds i8, i8* %call1067, i64 1264
  %fDistance.i.i1490.14 = getelementptr inbounds i8, i8* %call1067, i64 1320
  %1575 = bitcast i8* %fDistance.i.i1490.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1575, align 8, !tbaa !56
  %m_fGain.i.i1491.14 = getelementptr inbounds i8, i8* %call1067, i64 1324
  %1576 = bitcast i8* %m_fGain.i.i1491.14 to float*
  store float 1.000000e+00, float* %1576, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1568, align 8, !tbaa !40
  %arrayctor.next1073.14 = getelementptr inbounds i8, i8* %call1067, i64 1328
  %1577 = bitcast i8* %arrayctor.next1073.14 to i32 (...)***
  %1578 = getelementptr inbounds i8, i8* %call1067, i64 1336
  %1579 = bitcast i8* %1578 to i32*
  store i32 0, i32* %1579, align 8, !tbaa !49
  %1580 = getelementptr inbounds i8, i8* %call1067, i64 1340
  store i8 0, i8* %1580, align 4, !tbaa !52
  %1581 = getelementptr inbounds i8, i8* %call1067, i64 1344
  %1582 = bitcast i8* %1581 to i32*
  store i32 0, i32* %1582, align 8, !tbaa !53
  %1583 = getelementptr inbounds i8, i8* %call1067, i64 1348
  store i8 0, i8* %1583, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.15 = getelementptr inbounds i8, i8* %call1067, i64 1352
  %fDistance.i.i1490.15 = getelementptr inbounds i8, i8* %call1067, i64 1408
  %1584 = bitcast i8* %fDistance.i.i1490.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1584, align 8, !tbaa !56
  %m_fGain.i.i1491.15 = getelementptr inbounds i8, i8* %call1067, i64 1412
  %1585 = bitcast i8* %m_fGain.i.i1491.15 to float*
  store float 1.000000e+00, float* %1585, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1577, align 8, !tbaa !40
  %arrayctor.next1073.15 = getelementptr inbounds i8, i8* %call1067, i64 1416
  %1586 = bitcast i8* %arrayctor.next1073.15 to i32 (...)***
  %1587 = getelementptr inbounds i8, i8* %call1067, i64 1424
  %1588 = bitcast i8* %1587 to i32*
  store i32 0, i32* %1588, align 8, !tbaa !49
  %1589 = getelementptr inbounds i8, i8* %call1067, i64 1428
  store i8 0, i8* %1589, align 4, !tbaa !52
  %1590 = getelementptr inbounds i8, i8* %call1067, i64 1432
  %1591 = bitcast i8* %1590 to i32*
  store i32 0, i32* %1591, align 8, !tbaa !53
  %1592 = getelementptr inbounds i8, i8* %call1067, i64 1436
  store i8 0, i8* %1592, align 4, !tbaa !54
  %m_pfCoeff.i.i1489.16 = getelementptr inbounds i8, i8* %call1067, i64 1440
  %fDistance.i.i1490.16 = getelementptr inbounds i8, i8* %call1067, i64 1496
  %1593 = bitcast i8* %fDistance.i.i1490.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1489.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1593, align 8, !tbaa !56
  %m_fGain.i.i1491.16 = getelementptr inbounds i8, i8* %call1067, i64 1500
  %1594 = bitcast i8* %m_fGain.i.i1491.16 to float*
  store float 1.000000e+00, float* %1594, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1586, align 8, !tbaa !40
  %1595 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1441, i8** %1595, align 8, !tbaa !143
  %1596 = load i32, i32* %m_nSpeakers1064, align 4, !tbaa !146
  %cmp10811564 = icmp eq i32 %1596, 0
  br i1 %cmp10811564, label %sw.epilog, label %for.body1082.lr.ph

for.body1082.lr.ph:                               ; preds = %sw.bb1063
  %1597 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1598 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1082

for.body1082:                                     ; preds = %for.body1082, %for.body1082.lr.ph
  %indvars.iv1598 = phi i64 [ 0, %for.body1082.lr.ph ], [ %indvars.iv.next1599, %for.body1082 ]
  %polPosition.sroa.0.101566 = phi <2 x float> [ zeroinitializer, %for.body1082.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1423, %for.body1082 ]
  %call1083 = tail call fast float @_Z16DegreesToRadiansf(float 0.000000e+00) #24
  %polPosition.sroa.0.0.vec.insert1423 = insertelement <2 x float> %polPosition.sroa.0.101566, float %call1083, i32 0
  %1599 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx1087 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1599, i64 %indvars.iv1598
  %1600 = load i32, i32* %1597, align 8, !tbaa !49
  %1601 = load i8, i8* %1598, align 4, !tbaa !52, !range !55
  %tobool1090 = icmp ne i8 %1601, 0
  %1602 = bitcast %class.CAmbisonicSpeaker* %arrayidx1087 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1091 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1602, align 8, !tbaa !40
  %vfn1092 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1091, i64 2
  %1603 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1092, align 8
  %call1093 = tail call zeroext i1 %1603(%class.CAmbisonicSpeaker* %arrayidx1087, i32 %1600, i1 zeroext %tobool1090, i32 0) #24
  %1604 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1605 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1604, i64 %indvars.iv1598, i32 0
  %1606 = bitcast %class.CAmbisonicSource* %1605 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1098 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1606, align 8, !tbaa !40
  %vfn1099 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1098, i64 5
  %1607 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1099, align 8
  tail call void %1607(%class.CAmbisonicSource* %1605, <2 x float> %polPosition.sroa.0.0.vec.insert1423, float 1.000000e+00) #24
  %indvars.iv.next1599 = add nuw nsw i64 %indvars.iv1598, 1
  %1608 = load i32, i32* %m_nSpeakers1064, align 4, !tbaa !146
  %1609 = zext i32 %1608 to i64
  %cmp1081 = icmp ult i64 %indvars.iv.next1599, %1609
  br i1 %cmp1081, label %for.body1082, label %sw.epilog

sw.default:                                       ; preds = %if.end
  %m_nSpeakers1103 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers1103, align 4, !tbaa !146
  %call1106 = tail call i8* @_Znam(i64 96) #25
  %1610 = bitcast i8* %call1106 to i64*
  store i64 1, i64* %1610, align 16
  %1611 = getelementptr inbounds i8, i8* %call1106, i64 8
  %1612 = bitcast i8* %1611 to i32 (...)***
  %1613 = getelementptr inbounds i8, i8* %call1106, i64 16
  %1614 = bitcast i8* %1613 to i32*
  store i32 0, i32* %1614, align 8, !tbaa !49
  %1615 = getelementptr inbounds i8, i8* %call1106, i64 20
  store i8 0, i8* %1615, align 4, !tbaa !52
  %1616 = getelementptr inbounds i8, i8* %call1106, i64 24
  %1617 = bitcast i8* %1616 to i32*
  store i32 0, i32* %1617, align 8, !tbaa !53
  %1618 = getelementptr inbounds i8, i8* %call1106, i64 28
  store i8 0, i8* %1618, align 4, !tbaa !54
  %m_pfCoeff.i.i1480 = getelementptr inbounds i8, i8* %call1106, i64 32
  %fDistance.i.i1481 = getelementptr inbounds i8, i8* %call1106, i64 88
  %1619 = bitcast i8* %fDistance.i.i1481 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1480, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1619, align 8, !tbaa !56
  %m_fGain.i.i1482 = getelementptr inbounds i8, i8* %call1106, i64 92
  %1620 = bitcast i8* %m_fGain.i.i1482 to float*
  store float 1.000000e+00, float* %1620, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1612, align 8, !tbaa !40
  %1621 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1611, i8** %1621, align 8, !tbaa !143
  %1622 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1623 = load i32, i32* %1622, align 8, !tbaa !49
  %1624 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1625 = load i8, i8* %1624, align 4, !tbaa !52, !range !55
  %tobool1120 = icmp ne i8 %1625, 0
  %1626 = bitcast i8* %1611 to %class.CAmbisonicSource*
  %call.i1610 = tail call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* nonnull %1626, i32 %1623, i1 zeroext %tobool1120, i32 undef) #24
  %1627 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1628 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1627, align 8, !tbaa !143
  %1629 = bitcast %class.CAmbisonicSource* %1628 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1127 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1629, align 8, !tbaa !40
  %vfn1128 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1127, i64 5
  %1630 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1128, align 8
  tail call void %1630(%class.CAmbisonicSource* %1628, <2 x float> zeroinitializer, float 1.000000e+00) #24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %for.body1082, %sw.bb1063, %for.body1033, %for.end1025, %sw.bb649, %for.body619, %for.end611, %for.body537, %for.body493, %for.body449, %for.body405, %for.body361, %for.body320, %sw.bb214, %sw.bb140, %sw.bb81, %sw.bb38, %sw.bb12, %for.body.for.body_crit_edge, %for.body.lr.ph, %arrayctor.cont, %arrayctor.cont.thread
  %m_nSpeakers1129 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %1631 = load i32, i32* %m_nSpeakers1129, align 4, !tbaa !146
  %conv1130 = uitofp i32 %1631 to float
  %1632 = tail call fast float @llvm.sqrt.f32(float %conv1130)
  %div1131 = fdiv fast float 1.000000e+00, %1632
  %cmp11341525 = icmp eq i32 %1631, 0
  br i1 %cmp11341525, label %for.end1143, label %for.body1135

for.body1135:                                     ; preds = %for.body1135, %sw.epilog
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1135 ], [ 0, %sw.epilog ]
  %1633 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %1634 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1633, i64 %indvars.iv, i32 0
  %1635 = bitcast %class.CAmbisonicSource* %1634 to void (%class.CAmbisonicSource*, float)***
  %vtable1139 = load void (%class.CAmbisonicSource*, float)**, void (%class.CAmbisonicSource*, float)*** %1635, align 8, !tbaa !40
  %vfn1140 = getelementptr inbounds void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vtable1139, i64 12
  %1636 = load void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vfn1140, align 8
  tail call void %1636(%class.CAmbisonicSource* %1634, float %div1131) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1637 = load i32, i32* %m_nSpeakers1129, align 4, !tbaa !146
  %1638 = zext i32 %1637 to i64
  %cmp1134 = icmp ult i64 %indvars.iv.next, %1638
  br i1 %cmp1134, label %for.body1135, label %for.end1143

for.end1143:                                      ; preds = %for.body1135, %sw.epilog
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder5ResetEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv, i32 0
  %3 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*)***
  %vtable = load void (%class.CAmbisonicSource*)**, void (%class.CAmbisonicSource*)*** %3, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vtable, i64 3
  %4 = load void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicSource* %2) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %6 = zext i32 %5 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to void (%class.CAmbisonicSpeaker*)***
  %vtable = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable, i64 4
  %3 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSpeaker* %arrayidx) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %5 = zext i32 %4 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf(%class.CAmbisonicDecoder* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float** nocapture readonly %ppfDst) local_unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %cmp9 = icmp eq i32 %0, 0
  br i1 %cmp9, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %conv.i = zext i32 %nSamples to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %cmp2258.i = icmp eq i32 %nSamples, 0
  br i1 %cmp2258.i, label %for.body.us, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %1 = add i32 %nSamples, -1
  %xtraiter = and i32 %nSamples, 3
  %2 = icmp ult i32 %1, 3
  %unroll_iter = sub i32 %nSamples, %xtraiter
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  %xtraiter44 = and i32 %nSamples, 3
  %3 = icmp ult i32 %1, 3
  %unroll_iter47 = sub i32 %nSamples, %xtraiter44
  %lcmp.mod46 = icmp eq i32 %xtraiter44, 0
  br label %for.body

for.body.us:                                      ; preds = %for.body.us, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.us ], [ 0, %for.body.lr.ph ]
  %arrayidx3.us = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv
  %4 = bitcast float** %arrayidx3.us to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !43
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 %mul.i, i1 false) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %7 = zext i32 %6 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp.us, label %for.body.us, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.us, %entry
  ret void

for.body:                                         ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.preheader
  %indvars.iv36 = phi i64 [ %indvars.iv.next37, %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit ], [ 0, %for.body.preheader ]
  %8 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %arrayidx3 = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv36
  %9 = load float*, float** %arrayidx3, align 8, !tbaa !43
  %10 = bitcast float* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %mul.i, i1 false) #24
  %11 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %indvars.iv36, i32 0, i32 0, i32 4
  %12 = load i32, i32* %11, align 8, !tbaa !53
  %cmp62.i = icmp eq i32 %12, 0
  br i1 %cmp62.i, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.body
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %14 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %indvars.iv36, i32 0, i32 0, i32 2
  %15 = load i8, i8* %14, align 4, !tbaa !52, !range !55
  %tobool.i = icmp eq i8 %15, 0
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %indvars.iv36, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i.i, align 8, !tbaa !63
  %17 = zext i32 %12 to i64
  br i1 %tobool.i, label %for.body.us.i, label %for.body.us65.i

for.body.us.i:                                    ; preds = %if.end.loopexit.us.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end.loopexit.us.i ], [ 0, %for.body.lr.ph.i ]
  %add.ptr.i.us.i = getelementptr inbounds float, float* %16, i64 %indvars.iv.i
  %18 = load float, float* %add.ptr.i.us.i, align 4, !tbaa !47
  %mul20.us.i = fmul fast float %18, 2.000000e+00
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %13, i64 %indvars.iv.i
  %19 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !43
  br i1 %3, label %if.end.loopexit.us.i.unr-lcssa, label %for.body23.us.i

for.body23.us.i:                                  ; preds = %for.body23.us.i, %for.body.us.i
  %out.160.us.i = phi float* [ %incdec.ptr26.us.i.3, %for.body23.us.i ], [ %9, %for.body.us.i ]
  %in.159.us.i = phi float* [ %incdec.ptr24.us.i.3, %for.body23.us.i ], [ %19, %for.body.us.i ]
  %niter48 = phi i32 [ %niter48.nsub.3, %for.body23.us.i ], [ %unroll_iter47, %for.body.us.i ]
  %incdec.ptr24.us.i = getelementptr inbounds float, float* %in.159.us.i, i64 1
  %20 = load float, float* %in.159.us.i, align 4, !tbaa !47
  %mul25.us.i = fmul fast float %mul20.us.i, %20
  %incdec.ptr26.us.i = getelementptr inbounds float, float* %out.160.us.i, i64 1
  %21 = load float, float* %out.160.us.i, align 4, !tbaa !47
  %add27.us.i = fadd fast float %21, %mul25.us.i
  store float %add27.us.i, float* %out.160.us.i, align 4, !tbaa !47
  %incdec.ptr24.us.i.1 = getelementptr inbounds float, float* %in.159.us.i, i64 2
  %22 = load float, float* %incdec.ptr24.us.i, align 4, !tbaa !47
  %mul25.us.i.1 = fmul fast float %mul20.us.i, %22
  %incdec.ptr26.us.i.1 = getelementptr inbounds float, float* %out.160.us.i, i64 2
  %23 = load float, float* %incdec.ptr26.us.i, align 4, !tbaa !47
  %add27.us.i.1 = fadd fast float %23, %mul25.us.i.1
  store float %add27.us.i.1, float* %incdec.ptr26.us.i, align 4, !tbaa !47
  %incdec.ptr24.us.i.2 = getelementptr inbounds float, float* %in.159.us.i, i64 3
  %24 = load float, float* %incdec.ptr24.us.i.1, align 4, !tbaa !47
  %mul25.us.i.2 = fmul fast float %mul20.us.i, %24
  %incdec.ptr26.us.i.2 = getelementptr inbounds float, float* %out.160.us.i, i64 3
  %25 = load float, float* %incdec.ptr26.us.i.1, align 4, !tbaa !47
  %add27.us.i.2 = fadd fast float %25, %mul25.us.i.2
  store float %add27.us.i.2, float* %incdec.ptr26.us.i.1, align 4, !tbaa !47
  %incdec.ptr24.us.i.3 = getelementptr inbounds float, float* %in.159.us.i, i64 4
  %26 = load float, float* %incdec.ptr24.us.i.2, align 4, !tbaa !47
  %mul25.us.i.3 = fmul fast float %mul20.us.i, %26
  %incdec.ptr26.us.i.3 = getelementptr inbounds float, float* %out.160.us.i, i64 4
  %27 = load float, float* %incdec.ptr26.us.i.2, align 4, !tbaa !47
  %add27.us.i.3 = fadd fast float %27, %mul25.us.i.3
  store float %add27.us.i.3, float* %incdec.ptr26.us.i.2, align 4, !tbaa !47
  %niter48.nsub.3 = add i32 %niter48, -4
  %niter48.ncmp.3 = icmp eq i32 %niter48.nsub.3, 0
  br i1 %niter48.ncmp.3, label %if.end.loopexit.us.i.unr-lcssa, label %for.body23.us.i

if.end.loopexit.us.i.unr-lcssa:                   ; preds = %for.body23.us.i, %for.body.us.i
  %out.160.us.i.unr = phi float* [ %9, %for.body.us.i ], [ %incdec.ptr26.us.i.3, %for.body23.us.i ]
  %in.159.us.i.unr = phi float* [ %19, %for.body.us.i ], [ %incdec.ptr24.us.i.3, %for.body23.us.i ]
  br i1 %lcmp.mod46, label %if.end.loopexit.us.i, label %for.body23.us.i.epil

for.body23.us.i.epil:                             ; preds = %for.body23.us.i.epil, %if.end.loopexit.us.i.unr-lcssa
  %out.160.us.i.epil = phi float* [ %incdec.ptr26.us.i.epil, %for.body23.us.i.epil ], [ %out.160.us.i.unr, %if.end.loopexit.us.i.unr-lcssa ]
  %in.159.us.i.epil = phi float* [ %incdec.ptr24.us.i.epil, %for.body23.us.i.epil ], [ %in.159.us.i.unr, %if.end.loopexit.us.i.unr-lcssa ]
  %epil.iter45 = phi i32 [ %epil.iter45.sub, %for.body23.us.i.epil ], [ %xtraiter44, %if.end.loopexit.us.i.unr-lcssa ]
  %incdec.ptr24.us.i.epil = getelementptr inbounds float, float* %in.159.us.i.epil, i64 1
  %28 = load float, float* %in.159.us.i.epil, align 4, !tbaa !47
  %mul25.us.i.epil = fmul fast float %mul20.us.i, %28
  %incdec.ptr26.us.i.epil = getelementptr inbounds float, float* %out.160.us.i.epil, i64 1
  %29 = load float, float* %out.160.us.i.epil, align 4, !tbaa !47
  %add27.us.i.epil = fadd fast float %29, %mul25.us.i.epil
  store float %add27.us.i.epil, float* %out.160.us.i.epil, align 4, !tbaa !47
  %epil.iter45.sub = add i32 %epil.iter45, -1
  %epil.iter45.cmp = icmp eq i32 %epil.iter45.sub, 0
  br i1 %epil.iter45.cmp, label %if.end.loopexit.us.i, label %for.body23.us.i.epil, !llvm.loop !147

if.end.loopexit.us.i:                             ; preds = %for.body23.us.i.epil, %if.end.loopexit.us.i.unr-lcssa
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond35 = icmp eq i64 %indvars.iv.next.i, %17
  br i1 %exitcond35, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, label %for.body.us.i

for.body.us65.i:                                  ; preds = %for.cond10.if.end.loopexit53_crit_edge.us106.i, %for.body.lr.ph.i
  %indvars.iv112.i = phi i64 [ %indvars.iv.next113.i, %for.cond10.if.end.loopexit53_crit_edge.us106.i ], [ 0, %for.body.lr.ph.i ]
  %arrayidx.i.us68.i = getelementptr inbounds float*, float** %13, i64 %indvars.iv112.i
  %30 = load float*, float** %arrayidx.i.us68.i, align 8, !tbaa !43
  %add.ptr.i.us69.i = getelementptr inbounds float, float* %16, i64 %indvars.iv112.i
  %31 = load float, float* %add.ptr.i.us69.i, align 4, !tbaa !47
  %conv5.us71.i = fpext float %31 to double
  %32 = trunc i64 %indvars.iv112.i to i32
  %conv.i.us72.i = uitofp i32 %32 to double
  %33 = tail call fast double @llvm.sqrt.f64(double %conv.i.us72.i) #24
  %34 = tail call fast double @llvm.floor.f64(double %33) #24
  %mul7.us73.i = fmul fast double %34, 2.000000e+00
  %add.us74.i = fadd fast double %mul7.us73.i, 1.000000e+00
  %mul8.us75.i = fmul fast double %add.us74.i, %conv5.us71.i
  %conv9.us76.i = fptrunc double %mul8.us75.i to float
  br i1 %2, label %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa, label %for.body12.us77.i

for.body12.us77.i:                                ; preds = %for.body12.us77.i, %for.body.us65.i
  %out.056.us79.i = phi float* [ %incdec.ptr14.us83.i.3, %for.body12.us77.i ], [ %9, %for.body.us65.i ]
  %in.055.us80.i = phi float* [ %incdec.ptr.us81.i.3, %for.body12.us77.i ], [ %30, %for.body.us65.i ]
  %niter = phi i32 [ %niter.nsub.3, %for.body12.us77.i ], [ %unroll_iter, %for.body.us65.i ]
  %incdec.ptr.us81.i = getelementptr inbounds float, float* %in.055.us80.i, i64 1
  %35 = load float, float* %in.055.us80.i, align 4, !tbaa !47
  %mul13.us82.i = fmul fast float %35, %conv9.us76.i
  %incdec.ptr14.us83.i = getelementptr inbounds float, float* %out.056.us79.i, i64 1
  %36 = load float, float* %out.056.us79.i, align 4, !tbaa !47
  %add15.us84.i = fadd fast float %36, %mul13.us82.i
  store float %add15.us84.i, float* %out.056.us79.i, align 4, !tbaa !47
  %incdec.ptr.us81.i.1 = getelementptr inbounds float, float* %in.055.us80.i, i64 2
  %37 = load float, float* %incdec.ptr.us81.i, align 4, !tbaa !47
  %mul13.us82.i.1 = fmul fast float %37, %conv9.us76.i
  %incdec.ptr14.us83.i.1 = getelementptr inbounds float, float* %out.056.us79.i, i64 2
  %38 = load float, float* %incdec.ptr14.us83.i, align 4, !tbaa !47
  %add15.us84.i.1 = fadd fast float %38, %mul13.us82.i.1
  store float %add15.us84.i.1, float* %incdec.ptr14.us83.i, align 4, !tbaa !47
  %incdec.ptr.us81.i.2 = getelementptr inbounds float, float* %in.055.us80.i, i64 3
  %39 = load float, float* %incdec.ptr.us81.i.1, align 4, !tbaa !47
  %mul13.us82.i.2 = fmul fast float %39, %conv9.us76.i
  %incdec.ptr14.us83.i.2 = getelementptr inbounds float, float* %out.056.us79.i, i64 3
  %40 = load float, float* %incdec.ptr14.us83.i.1, align 4, !tbaa !47
  %add15.us84.i.2 = fadd fast float %40, %mul13.us82.i.2
  store float %add15.us84.i.2, float* %incdec.ptr14.us83.i.1, align 4, !tbaa !47
  %incdec.ptr.us81.i.3 = getelementptr inbounds float, float* %in.055.us80.i, i64 4
  %41 = load float, float* %incdec.ptr.us81.i.2, align 4, !tbaa !47
  %mul13.us82.i.3 = fmul fast float %41, %conv9.us76.i
  %incdec.ptr14.us83.i.3 = getelementptr inbounds float, float* %out.056.us79.i, i64 4
  %42 = load float, float* %incdec.ptr14.us83.i.2, align 4, !tbaa !47
  %add15.us84.i.3 = fadd fast float %42, %mul13.us82.i.3
  store float %add15.us84.i.3, float* %incdec.ptr14.us83.i.2, align 4, !tbaa !47
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa, label %for.body12.us77.i

for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa: ; preds = %for.body12.us77.i, %for.body.us65.i
  %out.056.us79.i.unr = phi float* [ %9, %for.body.us65.i ], [ %incdec.ptr14.us83.i.3, %for.body12.us77.i ]
  %in.055.us80.i.unr = phi float* [ %30, %for.body.us65.i ], [ %incdec.ptr.us81.i.3, %for.body12.us77.i ]
  br i1 %lcmp.mod, label %for.cond10.if.end.loopexit53_crit_edge.us106.i, label %for.body12.us77.i.epil

for.body12.us77.i.epil:                           ; preds = %for.body12.us77.i.epil, %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa
  %out.056.us79.i.epil = phi float* [ %incdec.ptr14.us83.i.epil, %for.body12.us77.i.epil ], [ %out.056.us79.i.unr, %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa ]
  %in.055.us80.i.epil = phi float* [ %incdec.ptr.us81.i.epil, %for.body12.us77.i.epil ], [ %in.055.us80.i.unr, %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body12.us77.i.epil ], [ %xtraiter, %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa ]
  %incdec.ptr.us81.i.epil = getelementptr inbounds float, float* %in.055.us80.i.epil, i64 1
  %43 = load float, float* %in.055.us80.i.epil, align 4, !tbaa !47
  %mul13.us82.i.epil = fmul fast float %43, %conv9.us76.i
  %incdec.ptr14.us83.i.epil = getelementptr inbounds float, float* %out.056.us79.i.epil, i64 1
  %44 = load float, float* %out.056.us79.i.epil, align 4, !tbaa !47
  %add15.us84.i.epil = fadd fast float %44, %mul13.us82.i.epil
  store float %add15.us84.i.epil, float* %out.056.us79.i.epil, align 4, !tbaa !47
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond10.if.end.loopexit53_crit_edge.us106.i, label %for.body12.us77.i.epil, !llvm.loop !148

for.cond10.if.end.loopexit53_crit_edge.us106.i:   ; preds = %for.body12.us77.i.epil, %for.cond10.if.end.loopexit53_crit_edge.us106.i.unr-lcssa
  %indvars.iv.next113.i = add nuw nsw i64 %indvars.iv112.i, 1
  %exitcond = icmp eq i64 %indvars.iv.next113.i, %17
  br i1 %exitcond, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, label %for.body.us65.i

_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit: ; preds = %for.cond10.if.end.loopexit53_crit_edge.us106.i, %if.end.loopexit.us.i, %for.body
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %45 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  %46 = zext i32 %45 to i64
  %cmp = icmp ult i64 %indvars.iv.next37, %46
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerSetUpEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !145
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !146
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) local_unnamed_addr #15 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %3 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) #24
  ret void
}

; Function Attrs: nounwind uwtable
define { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable, i64 6
  %3 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn, align 8
  %call = tail call { <2 x float>, float } %3(%class.CAmbisonicSource* %1) #24
  ret { <2 x float>, float } %call
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder14SetOrderWeightEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder, float %fWeight) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 7
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nOrder, float %fWeight) #24
  ret void
}

; Function Attrs: nounwind uwtable
define float @_ZN17CAmbisonicDecoder14GetOrderWeightEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 10
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call fast float %3(%class.CAmbisonicSource* %1, i32 %nOrder) #24
  ret float %call
}

; Function Attrs: nounwind uwtable
define float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel) unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 11
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call fast float %3(%class.CAmbisonicSource* %1, i32 %nChannel) #24
  ret float %call
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder14SetCoefficientEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel, float %fCoeff) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !143
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 9
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nChannel, float %fCoeff) #24
  ret void
}

declare float @_Z16DegreesToRadiansf(float) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable
declare float @llvm.sqrt.f32(float) #9

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicZoomerC2Ev(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !49
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !52
  %8 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !53
  %9 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !49
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !52
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !53
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1
  %3 = load i32, i32* %0, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %3, i32* %4, align 8, !tbaa !49
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 1, i8* %5, align 4, !tbaa !52
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %3, i1 zeroext true) #24
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i, i32* %6, align 8, !tbaa !53
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront, i32 0, i32 1) #24
  %7 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoderFront to void (%class.CAmbisonicDecoder*)***
  %vtable.i = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %7, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i, i64 4
  %8 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %8(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront) #24
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 2
  %9 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !146
  %cmp5.i = icmp eq i32 %9, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %10 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %10, i64 %indvars.iv.i
  %11 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i83 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %11, align 8, !tbaa !40
  %vfn.i84 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i83, i64 4
  %12 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i84, align 8
  tail call void %12(%class.CAmbisonicSpeaker* %arrayidx.i) #24
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %13 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !146
  %14 = zext i32 %13 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %14
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %entry
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float 0.000000e+00, float* %m_fZoomRed, align 4, !tbaa !149
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2
  %15 = load i32, i32* %2, align 8, !tbaa !53
  %conv = zext i32 %15 to i64
  %16 = shl nuw nsw i64 %conv, 2
  %call6 = tail call i8* @_Znam(i64 %16) #25
  %17 = ptrtoint i8* %call6 to i64
  %18 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront to i64*
  %19 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8, !tbaa !43
  store i64 %17, i64* %18, align 8, !tbaa !43
  %cmp.i85 = icmp eq float* %20, null
  br i1 %cmp.i85, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i: ; preds = %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %21 = bitcast float* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #25
  %.pre = load i32, i32* %2, align 8, !tbaa !53
  %.pre153 = zext i32 %.pre to i64
  %.pre154 = shl nuw nsw i64 %.pre153, 2
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i, %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %.pre-phi = phi i64 [ %16, %_ZN17CAmbisonicDecoder7RefreshEv.exit ], [ %.pre154, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i ]
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3
  %call9 = tail call i8* @_Znam(i64 %.pre-phi) #25
  %22 = ptrtoint i8* %call9 to i64
  %23 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted to i64*
  %24 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load float*, float** %24, align 8, !tbaa !43
  store i64 %22, i64* %23, align 8, !tbaa !43
  %cmp.i86 = icmp eq float* %25, null
  br i1 %cmp.i86, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit
  %26 = bitcast float* %25 to i8*
  tail call void @_ZdaPv(i8* %26) #25
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i87, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4
  %27 = load i32, i32* %0, align 8, !tbaa !49
  %add = add i32 %27, 1
  %conv11 = zext i32 %add to i64
  %28 = shl nuw nsw i64 %conv11, 2
  %call12 = tail call i8* @_Znam(i64 %28) #25
  %29 = ptrtoint i8* %call12 to i64
  %30 = bitcast %"class.std::unique_ptr.12"* %a_m to i64*
  %31 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %a_m, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8, !tbaa !43
  store i64 %29, i64* %30, align 8, !tbaa !43
  %cmp.i89 = icmp eq float* %32, null
  br i1 %cmp.i89, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88
  %33 = bitcast float* %32 to i8*
  tail call void @_ZdaPv(i8* %33) #25
  %.pre152 = load i32, i32* %0, align 8, !tbaa !49
  %.pre155 = add i32 %.pre152, 1
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88
  %add14146.pre-phi = phi i32 [ %add, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88 ], [ %.pre155, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90 ]
  %34 = phi i32 [ %27, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit88 ], [ %.pre152, %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i90 ]
  %cmp147 = icmp eq i32 %add14146.pre-phi, 0
  br i1 %cmp147, label %for.cond34.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91
  %35 = load float*, float** %31, align 8, !tbaa !43
  %36 = zext i32 %add14146.pre-phi to i64
  %cmp7.i = icmp eq i32 %34, 0
  br label %for.body

for.cond34.preheader:                             ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit141, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetIPfvEEvT_.exit91
  %37 = load i32, i32* %2, align 8, !tbaa !53
  %cmp36144 = icmp eq i32 %37, 0
  br i1 %cmp36144, label %cleanup, label %for.body38.lr.ph

for.body38.lr.ph:                                 ; preds = %for.cond34.preheader
  %m_pAmbSpeakers.i127 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br label %for.body38

for.body:                                         ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit141, %for.body.lr.ph
  %indvars.iv150 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next151, %_ZN16CAmbisonicZoomer9factorialEj.exit141 ]
  %38 = trunc i64 %indvars.iv150 to i32
  %mul = shl i32 %38, 1
  %add15 = or i32 %mul, 1
  %conv16 = uitofp i32 %add15 to float
  br i1 %cmp7.i, label %for.body.i103.preheader, label %for.body.i93

for.cond.cleanup.loopexit.i:                      ; preds = %for.body.i93
  %phitmp.i = uitofp i32 %mul.i to float
  br label %for.body.i103.preheader

for.body.i93:                                     ; preds = %for.body.i93, %for.body
  %i.09.i = phi i32 [ %inc.i, %for.body.i93 ], [ 1, %for.body ]
  %ret.08.i = phi i32 [ %mul.i, %for.body.i93 ], [ 1, %for.body ]
  %mul.i = mul i32 %ret.08.i, %i.09.i
  %inc.i = add i32 %i.09.i, 1
  %cmp.i92 = icmp ugt i32 %inc.i, %34
  br i1 %cmp.i92, label %for.cond.cleanup.loopexit.i, label %for.body.i93

for.body.i103.preheader:                          ; preds = %for.cond.cleanup.loopexit.i, %for.body
  %ret.0.lcssa.i = phi float [ 1.000000e+00, %for.body ], [ %phitmp.i, %for.cond.cleanup.loopexit.i ]
  %mul19 = fmul fast float %ret.0.lcssa.i, %conv16
  br label %for.body.i103

for.body.i103:                                    ; preds = %for.body.i103, %for.body.i103.preheader
  %i.09.i98 = phi i32 [ %inc.i101, %for.body.i103 ], [ 1, %for.body.i103.preheader ]
  %ret.08.i99 = phi i32 [ %mul.i100, %for.body.i103 ], [ 1, %for.body.i103.preheader ]
  %mul.i100 = mul i32 %ret.08.i99, %i.09.i98
  %inc.i101 = add i32 %i.09.i98, 1
  %cmp.i102 = icmp ugt i32 %inc.i101, %add14146.pre-phi
  br i1 %cmp.i102, label %_ZN16CAmbisonicZoomer9factorialEj.exit104, label %for.body.i103

_ZN16CAmbisonicZoomer9factorialEj.exit104:        ; preds = %for.body.i103
  %phitmp.i95 = uitofp i32 %mul.i100 to float
  %mul23 = fmul fast float %mul19, %phitmp.i95
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1
  %39 = trunc i64 %indvars.iv.next151 to i32
  %add26 = add i32 %34, %39
  %cmp7.i105 = icmp eq i32 %add26, 0
  br i1 %cmp7.i105, label %_ZN16CAmbisonicZoomer9factorialEj.exit115, label %for.body.i114

for.cond.cleanup.loopexit.i107:                   ; preds = %for.body.i114
  %phitmp.i106 = uitofp i32 %mul.i111 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit115

for.body.i114:                                    ; preds = %for.body.i114, %_ZN16CAmbisonicZoomer9factorialEj.exit104
  %i.09.i109 = phi i32 [ %inc.i112, %for.body.i114 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ]
  %ret.08.i110 = phi i32 [ %mul.i111, %for.body.i114 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ]
  %mul.i111 = mul i32 %ret.08.i110, %i.09.i109
  %inc.i112 = add i32 %i.09.i109, 1
  %cmp.i113 = icmp ugt i32 %inc.i112, %add26
  br i1 %cmp.i113, label %for.cond.cleanup.loopexit.i107, label %for.body.i114

_ZN16CAmbisonicZoomer9factorialEj.exit115:        ; preds = %for.cond.cleanup.loopexit.i107, %_ZN16CAmbisonicZoomer9factorialEj.exit104
  %ret.0.lcssa.i108 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit104 ], [ %phitmp.i106, %for.cond.cleanup.loopexit.i107 ]
  %sub = sub i32 %34, %38
  %cmp7.i131 = icmp eq i32 %sub, 0
  br i1 %cmp7.i131, label %_ZN16CAmbisonicZoomer9factorialEj.exit141, label %for.body.i140

for.cond.cleanup.loopexit.i133:                   ; preds = %for.body.i140
  %phitmp.i132 = uitofp i32 %mul.i137 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit141

for.body.i140:                                    ; preds = %for.body.i140, %_ZN16CAmbisonicZoomer9factorialEj.exit115
  %i.09.i135 = phi i32 [ %inc.i138, %for.body.i140 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ]
  %ret.08.i136 = phi i32 [ %mul.i137, %for.body.i140 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ]
  %mul.i137 = mul i32 %ret.08.i136, %i.09.i135
  %inc.i138 = add i32 %i.09.i135, 1
  %cmp.i139 = icmp ugt i32 %inc.i138, %sub
  br i1 %cmp.i139, label %for.cond.cleanup.loopexit.i133, label %for.body.i140

_ZN16CAmbisonicZoomer9factorialEj.exit141:        ; preds = %for.cond.cleanup.loopexit.i133, %_ZN16CAmbisonicZoomer9factorialEj.exit115
  %ret.0.lcssa.i134 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit115 ], [ %phitmp.i132, %for.cond.cleanup.loopexit.i133 ]
  %mul30 = fmul fast float %ret.0.lcssa.i134, %ret.0.lcssa.i108
  %div = fdiv fast float %mul23, %mul30
  %arrayidx.i143 = getelementptr inbounds float, float* %35, i64 %indvars.iv150
  store float %div, float* %arrayidx.i143, align 4, !tbaa !47
  %cmp = icmp ult i64 %indvars.iv.next151, %36
  br i1 %cmp, label %for.body, label %for.cond34.preheader

for.body38:                                       ; preds = %for.body38, %for.body38.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next, %for.body38 ]
  %40 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i127, align 8, !tbaa !143
  %41 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %40, i64 0, i32 0
  %42 = bitcast %class.CAmbisonicSpeaker* %40 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i128 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %42, align 8, !tbaa !40
  %vfn.i129 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i128, i64 11
  %43 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i129, align 8
  %44 = trunc i64 %indvars.iv to i32
  %call.i130 = tail call fast float %43(%class.CAmbisonicSource* %41, i32 %44) #24
  %45 = load float*, float** %19, align 8, !tbaa !43
  %arrayidx.i126 = getelementptr inbounds float, float* %45, i64 %indvars.iv
  store float %call.i130, float* %arrayidx.i126, align 4, !tbaa !47
  %conv.i = uitofp i32 %44 to double
  %46 = tail call fast double @llvm.sqrt.f64(double %conv.i) #24
  %47 = tail call fast double @llvm.floor.f64(double %46)
  %conv45 = fptosi double %47 to i32
  %conv50 = zext i32 %conv45 to i64
  %48 = load float*, float** %31, align 8, !tbaa !43
  %arrayidx.i122 = getelementptr inbounds float, float* %48, i64 %conv50
  %49 = load float, float* %arrayidx.i122, align 4, !tbaa !47
  %mul52 = fmul fast float %49, %call.i130
  %50 = load float*, float** %24, align 8, !tbaa !43
  %arrayidx.i120 = getelementptr inbounds float, float* %50, i64 %indvars.iv
  store float %mul52, float* %arrayidx.i120, align 4, !tbaa !47
  %51 = load float, float* %arrayidx.i126, align 4, !tbaa !47
  %mul62 = fmul fast float %51, %mul52
  %52 = load float, float* %m_AmbFrontMic, align 8, !tbaa !154
  %add63 = fadd fast float %52, %mul62
  store float %add63, float* %m_AmbFrontMic, align 8, !tbaa !154
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %53 = load i32, i32* %2, align 8, !tbaa !53
  %54 = zext i32 %53 to i64
  %cmp36 = icmp ult i64 %indvars.iv.next, %54
  br i1 %cmp36, label %for.body38, label %cleanup

cleanup:                                          ; preds = %for.body38, %for.cond34.preheader
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* nocapture readnone %this, i32 %M) local_unnamed_addr #7 align 2 {
entry:
  %cmp7 = icmp eq i32 %M, 0
  br i1 %cmp7, label %for.cond.cleanup, label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %phitmp = uitofp i32 %mul to float
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %ret.0.lcssa = phi float [ 1.000000e+00, %entry ], [ %phitmp, %for.cond.cleanup.loopexit ]
  ret float %ret.0.lcssa

for.body:                                         ; preds = %for.body, %entry
  %i.09 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %ret.08 = phi i32 [ %mul, %for.body ], [ 1, %entry ]
  %mul = mul i32 %i.09, %ret.08
  %inc = add i32 %i.09, 1
  %cmp = icmp ugt i32 %inc, %M
  br i1 %cmp, label %for.cond.cleanup.loopexit, label %for.body
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicZoomer5ResetEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #7 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7RefreshEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #8 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !155
  %mul = fmul fast float %0, %0
  %sub = fsub fast float 1.000000e+00, %mul
  %1 = tail call fast float @llvm.sqrt.f32(float %sub)
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float %1, float* %m_fZoomRed, align 4, !tbaa !149
  %sub4 = fsub fast float 1.000000e+00, %0
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  store float %sub4, float* %m_fZoomBlend, align 4, !tbaa !156
  ret void
}

; Function Attrs: nounwind uwtable writeonly
define void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* nocapture %this, float %fZoom) local_unnamed_addr #16 align 2 {
entry:
  %fZoom.addr = alloca float, align 4
  %ref.tmp = alloca float, align 4
  store float %fZoom, float* %fZoom.addr, align 4, !tbaa !47
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp, align 4, !tbaa !47
  %cmp.i = fcmp fast ogt float %fZoom, 0x3FEFAE1480000000
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %fZoom.addr
  %0 = bitcast float* %__b.__a.i to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !47
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %2 = bitcast float* %m_fZoom to i32*
  store i32 %1, i32* %2, align 8, !tbaa !155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicZoomer7GetZoomEv(%class.CAmbisonicZoomer* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !155
  ret float %0
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #8 align 2 {
entry:
  %cmp103 = icmp eq i32 %nSamples, 0
  br i1 %cmp103, label %for.cond.cleanup, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !53
  %cmp397 = icmp eq i32 %1, 0
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br i1 %cmp397, label %for.cond2.preheader.preheader, label %for.cond2.preheader.us.preheader

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph
  %wide.trip.count120 = zext i32 %nSamples to i64
  %2 = add nsw i64 %wide.trip.count120, -1
  %xtraiter = and i64 %wide.trip.count120, 7
  %3 = icmp ult i64 %2, 7
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond2.preheader.preheader.new

for.cond2.preheader.preheader.new:                ; preds = %for.cond2.preheader.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count120, %xtraiter
  br label %for.cond.cleanup12

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i.i93 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112 = zext i32 %nSamples to i64
  %.pre = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95, align 8, !tbaa !43
  %4 = zext i32 %1 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93, align 8, !tbaa !43
  %6 = add nsw i64 %4, -1
  %xtraiter126 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter130 = sub nsw i64 %4, %xtraiter126
  %lcmp.mod128 = icmp eq i64 %xtraiter126, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond.cleanup12.us, %for.cond2.preheader.us.preheader
  %indvars.iv110 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next111, %for.cond.cleanup12.us ]
  br i1 %7, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.cond.cleanup12.us:                            ; preds = %for.inc52.us
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond113 = icmp eq i64 %indvars.iv.next111, %wide.trip.count112
  br i1 %exitcond113, label %for.cond.cleanup, label %for.cond2.preheader.us

for.body13.us:                                    ; preds = %for.body13.us.preheader, %for.inc52.us
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc52.us ], [ 0, %for.body13.us.preheader ]
  %arrayidx.i94.us = getelementptr inbounds float, float* %5, i64 %indvars.iv108
  %8 = load float, float* %arrayidx.i94.us, align 4, !tbaa !47
  %9 = tail call fast float @llvm.fabs.f32(float %8) #24
  %conv17.us = fpext float %9 to double
  %cmp18.us = fcmp fast ogt double %conv17.us, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us, label %if.then.us, label %if.else.us

if.else.us:                                       ; preds = %for.body13.us
  %arrayidx.i86.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %10 = load float*, float** %arrayidx.i86.us, align 8, !tbaa !43
  %arrayidx45.us = getelementptr inbounds float, float* %10, i64 %indvars.iv110
  %11 = load float, float* %arrayidx45.us, align 4, !tbaa !47
  %12 = load float, float* %m_fZoomRed, align 4, !tbaa !149
  %mul46.us = fmul fast float %12, %11
  store float %mul46.us, float* %arrayidx45.us, align 4, !tbaa !47
  br label %for.inc52.us

if.then.us:                                       ; preds = %for.body13.us
  %13 = load float, float* %m_fZoomBlend, align 4, !tbaa !156
  %arrayidx.i92.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %14 = load float*, float** %arrayidx.i92.us, align 8, !tbaa !43
  %arrayidx23.us = getelementptr inbounds float, float* %14, i64 %indvars.iv110
  %15 = load float, float* %arrayidx23.us, align 4, !tbaa !47
  %mul24.us = fmul fast float %15, %13
  %16 = load float, float* %m_fZoom, align 8, !tbaa !155
  %mul28.us = fmul fast float %8, %add.us.lcssa
  %mul29.us = fmul fast float %mul28.us, %16
  %add30.us = fadd fast float %mul29.us, %mul24.us
  %17 = tail call fast float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic, align 8, !tbaa !154
  %mul34.us = fmul fast float %17, %18
  %add35.us = fadd fast float %mul34.us, %13
  %div.us = fdiv fast float %add30.us, %add35.us
  store float %div.us, float* %arrayidx23.us, align 4, !tbaa !47
  br label %for.inc52.us

for.inc52.us:                                     ; preds = %if.then.us, %if.else.us
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %4
  br i1 %exitcond, label %for.cond.cleanup12.us, label %for.body13.us

for.body5.us:                                     ; preds = %for.body5.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body5.us ], [ 0, %for.cond2.preheader.us ]
  %fMic.098.us = phi float [ %add.us.3, %for.body5.us ], [ 0.000000e+00, %for.cond2.preheader.us ]
  %niter131 = phi i64 [ %niter131.nsub.3, %for.body5.us ], [ %unroll_iter130, %for.cond2.preheader.us ]
  %arrayidx.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv
  %19 = load float, float* %arrayidx.i.us, align 4, !tbaa !47
  %arrayidx.i96.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv
  %20 = load float*, float** %arrayidx.i96.us, align 8, !tbaa !43
  %arrayidx.us = getelementptr inbounds float, float* %20, i64 %indvars.iv110
  %21 = load float, float* %arrayidx.us, align 4, !tbaa !47
  %mul.us = fmul fast float %21, %19
  %add.us = fadd fast float %mul.us, %fMic.098.us
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.us.1 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next
  %22 = load float, float* %arrayidx.i.us.1, align 4, !tbaa !47
  %arrayidx.i96.us.1 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i96.us.1, align 8, !tbaa !43
  %arrayidx.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110
  %24 = load float, float* %arrayidx.us.1, align 4, !tbaa !47
  %mul.us.1 = fmul fast float %24, %22
  %add.us.1 = fadd fast float %mul.us.1, %add.us
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.us.2 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.1
  %25 = load float, float* %arrayidx.i.us.2, align 4, !tbaa !47
  %arrayidx.i96.us.2 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.1
  %26 = load float*, float** %arrayidx.i96.us.2, align 8, !tbaa !43
  %arrayidx.us.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110
  %27 = load float, float* %arrayidx.us.2, align 4, !tbaa !47
  %mul.us.2 = fmul fast float %27, %25
  %add.us.2 = fadd fast float %mul.us.2, %add.us.1
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.us.3 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.2
  %28 = load float, float* %arrayidx.i.us.3, align 4, !tbaa !47
  %arrayidx.i96.us.3 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.2
  %29 = load float*, float** %arrayidx.i96.us.3, align 8, !tbaa !43
  %arrayidx.us.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110
  %30 = load float, float* %arrayidx.us.3, align 4, !tbaa !47
  %mul.us.3 = fmul fast float %30, %28
  %add.us.3 = fadd fast float %mul.us.3, %add.us.2
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter131.nsub.3 = add i64 %niter131, -4
  %niter131.ncmp.3 = icmp eq i64 %niter131.nsub.3, 0
  br i1 %niter131.ncmp.3, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.body13.us.preheader.unr-lcssa:                ; preds = %for.body5.us, %for.cond2.preheader.us
  %add.us.lcssa.ph = phi float [ undef, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body5.us ]
  %fMic.098.us.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  br i1 %lcmp.mod128, label %for.body13.us.preheader, label %for.body5.us.epil

for.body5.us.epil:                                ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.us.epil ], [ %indvars.iv.unr, %for.body13.us.preheader.unr-lcssa ]
  %fMic.098.us.epil = phi float [ %add.us.epil, %for.body5.us.epil ], [ %fMic.098.us.unr, %for.body13.us.preheader.unr-lcssa ]
  %epil.iter127 = phi i64 [ %epil.iter127.sub, %for.body5.us.epil ], [ %xtraiter126, %for.body13.us.preheader.unr-lcssa ]
  %arrayidx.i.us.epil = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.epil
  %31 = load float, float* %arrayidx.i.us.epil, align 4, !tbaa !47
  %arrayidx.i96.us.epil = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.epil
  %32 = load float*, float** %arrayidx.i96.us.epil, align 8, !tbaa !43
  %arrayidx.us.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110
  %33 = load float, float* %arrayidx.us.epil, align 4, !tbaa !47
  %mul.us.epil = fmul fast float %33, %31
  %add.us.epil = fadd fast float %mul.us.epil, %fMic.098.us.epil
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter127.sub = add i64 %epil.iter127, -1
  %epil.iter127.cmp = icmp eq i64 %epil.iter127.sub, 0
  br i1 %epil.iter127.cmp, label %for.body13.us.preheader, label %for.body5.us.epil, !llvm.loop !157

for.body13.us.preheader:                          ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %add.us.lcssa = phi float [ %add.us.lcssa.ph, %for.body13.us.preheader.unr-lcssa ], [ %add.us.epil, %for.body5.us.epil ]
  br label %for.body13.us

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.cond.cleanup12.epil

for.cond.cleanup12.epil:                          ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %epil.iter = phi i64 [ %epil.iter.sub, %for.cond.cleanup12.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.cond.cleanup12.epil, !llvm.loop !158

for.cond.cleanup:                                 ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond.cleanup12.us, %entry
  ret void

for.cond.cleanup12:                               ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader.new
  %niter = phi i64 [ %unroll_iter, %for.cond2.preheader.preheader.new ], [ %niter.nsub.7, %for.cond.cleanup12 ]
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond.cleanup12
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !52
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !53
  %4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !49
  %7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !52
  %8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !53
  %9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8
  %11 = bitcast %"class.std::unique_ptr.21"* %m_pFFT_cfg to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %11, align 8, !tbaa !159
  %12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.std::_Head_base.27"* %12 to i64*
  store i64 0, i64* %13, align 8, !tbaa !161
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9
  %14 = bitcast %"class.std::unique_ptr.21"* %m_pIFFT_cfg to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %14, align 8, !tbaa !159
  %15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %16 = bitcast i32* %m_nBlockSize to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false)
  %17 = bitcast %"struct.std::_Head_base.27"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 184, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate, i32 %nBlockSize, i32* nocapture dereferenceable(4) %tailLength, %"class.std::__cxx11::basic_string"* nocapture readonly %HRTFPath) unnamed_addr #15 align 2 {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %pfHRTF = alloca [2 x float*], align 16
  %myEncoder = alloca %class.CAmbisonicEncoder, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !163
  %_M_p.i9.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 0, i32 0
  %2 = load i8*, i8** %_M_p.i9.i, align 8, !tbaa !165
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !168
  %cmp.i.i.i.i.i = icmp ne i8* %2, null
  %cmp.i.i.i.i = icmp eq i64 %3, 0
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0)) #26
  unreachable

if.end.i.i.i.i:                                   ; preds = %entry
  %4 = bitcast %union.anon* %0 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #24
  store i64 %3, i64* %__dnew.i.i.i.i, align 8, !tbaa !169
  %cmp3.i.i.i.i = icmp ugt i64 %3, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #24
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !165
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !169
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !170
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.i.i.i.i
  %7 = phi i8* [ %call5.i.i.i.i, %if.then4.i.i.i.i ], [ %4, %if.end.i.i.i.i ]
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  switch i64 %3, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %8 = load i8, i8* %2, align 1, !tbaa !170
  store i8 %8, i8* %7, align 1, !tbaa !170
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %2, i64 %3, i1 false) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !169
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !168
  %10 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !165
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24
  %call.i = call i8* @_Znwm(i64 16) #25
  %11 = bitcast i8* %call.i to i32 (...)***
  %i_sampleRate2.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %12 = bitcast i8* %i_sampleRate2.i.i.i to i32*
  store i32 %nSampleRate, i32* %12, align 8, !tbaa !34
  %i_len.i.i.i = getelementptr inbounds i8, i8* %call.i, i64 12
  %13 = bitcast i8* %i_len.i.i.i to i32*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !40
  %call.i.i = call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate) #24
  store i32 %call.i.i, i32* %13, align 4, !tbaa !39
  %14 = bitcast i8* %call.i to %class.HRTF*
  %cmp.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.i.i, label %delete.notnull.i, label %_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

delete.notnull.i:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  call void @_ZdlPv(i8* nonnull %call.i) #25
  br label %_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit

_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit: ; preds = %delete.notnull.i, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %retval.0.i = phi %class.HRTF* [ null, %delete.notnull.i ], [ %14, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit ]
  %15 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !165
  %cmp.i.i.i = icmp eq i8* %15, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  call void @_ZdlPv(i8* %15) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
  %cmp = icmp eq %class.HRTF* %retval.0.i, null
  br i1 %cmp, label %cleanup287, label %if.end

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %i_len.i = getelementptr inbounds %class.HRTF, %class.HRTF* %retval.0.i, i64 0, i32 2
  %16 = load i32, i32* %i_len.i, align 4, !tbaa !39
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 3
  store i32 %16, i32* %m_nTaps, align 4, !tbaa !171
  store i32 %16, i32* %tailLength, align 4, !tbaa !42
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  store i32 %nBlockSize, i32* %m_nBlockSize, align 8, !tbaa !179
  %17 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %cmp5 = icmp ugt i32 %17, %nBlockSize
  %nBlockSize. = select i1 %cmp5, i32 %nBlockSize, i32 %17
  %cond = add i32 %nBlockSize., -1
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !180
  %add = add i32 %17, %nBlockSize
  %add13 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end
  %storemerge = phi i32 [ 1, %if.end ], [ %shl, %while.cond ]
  %cmp14 = icmp ult i32 %storemerge, %add13
  %shl = shl i32 %storemerge, 1
  br i1 %cmp14, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !181
  %div = lshr i32 %storemerge, 1
  %add17 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  store i32 %add17, i32* %m_nFFTBins, align 4, !tbaa !182
  %conv = uitofp i32 %storemerge to float
  %div19 = fdiv fast float 1.000000e+00, %conv
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  store float %div19, float* %m_fFFTScaler, align 8, !tbaa !183
  %frombool.i = zext i1 %b3D to i8
  %18 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %18, align 8, !tbaa !49
  %19 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %19, align 4, !tbaa !52
  %call.i390 = call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D) #24
  %20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 %call.i390, i32* %20, align 8, !tbaa !53
  %21 = bitcast %class.CAmbisonicBinauralizer* %this to void (%class.CAmbisonicBinauralizer*)***
  %vtable = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %21, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable, i64 6
  %22 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn, align 8
  call void %22(%class.CAmbisonicBinauralizer* nonnull %this) #24
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %23 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !146
  %vtable22 = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %21, align 8, !tbaa !40
  %vfn23 = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable22, i64 7
  %24 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn23, align 8
  call void %24(%class.CAmbisonicBinauralizer* nonnull %this) #24
  %25 = bitcast [2 x float*]* %pfHRTF to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #24
  %26 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %conv26 = zext i32 %26 to i64
  %27 = shl nuw nsw i64 %conv26, 2
  %call27 = call i8* @_Znam(i64 %27) #25
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %28 = bitcast [2 x float*]* %pfHRTF to i8**
  store i8* %call27, i8** %28, align 16, !tbaa !43
  %call27.1 = call i8* @_Znam(i64 %27) #25
  %arrayidx.1 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %29 = bitcast float** %arrayidx.1 to i8**
  store i8* %call27.1, i8** %29, align 8, !tbaa !43
  %30 = load i32, i32* %20, align 8, !tbaa !53
  %conv31 = zext i32 %30 to i64
  %31 = shl nuw nsw i64 %conv31, 3
  %cmp37462 = icmp eq i32 %30, 0
  %call32 = call i8* @_Znam(i64 %31) #25
  br i1 %cmp37462, label %for.cond52.preheader.thread, label %for.body30.us.preheader

for.cond52.preheader.thread:                      ; preds = %while.end
  %call32.1 = call i8* @_Znam(i64 %31) #25
  %32 = bitcast i8* %call32 to float**
  %33 = bitcast i8* %call32.1 to float**
  br label %delete.notnull

for.body30.us.preheader:                          ; preds = %while.end
  %34 = bitcast i8* %call32 to float**
  br label %for.body38.us

for.body38.us:                                    ; preds = %for.body38.us, %for.body30.us.preheader
  %indvars.iv512 = phi i64 [ 0, %for.body30.us.preheader ], [ %indvars.iv.next513, %for.body38.us ]
  %call41.us = call i8* @_Znam(i64 %27) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us, i8 0, i64 %27, i1 false)
  %arrayidx45.us = getelementptr inbounds float*, float** %34, i64 %indvars.iv512
  %35 = bitcast float** %arrayidx45.us to i8**
  store i8* %call41.us, i8** %35, align 8, !tbaa !43
  %indvars.iv.next513 = add nuw nsw i64 %indvars.iv512, 1
  %exitcond515 = icmp eq i64 %indvars.iv.next513, %conv31
  br i1 %exitcond515, label %for.cond35.for.inc49_crit_edge.us, label %for.body38.us

for.cond35.for.inc49_crit_edge.us:                ; preds = %for.body38.us
  %call32.us.1 = call i8* @_Znam(i64 %31) #25
  %36 = bitcast i8* %call32.us.1 to float**
  br label %for.body38.us.1

for.cond52.preheader:                             ; preds = %for.body38.us.1
  br i1 %cmp37462, label %delete.notnull, label %for.cond56.preheader.lr.ph

for.cond56.preheader.lr.ph:                       ; preds = %for.cond52.preheader
  %cmp57456 = icmp eq i32 %23, 0
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %37 = bitcast %class.HRTF* %retval.0.i to i1 (%class.HRTF*, float, float, float**)***
  %wide.trip.count508 = zext i32 %23 to i64
  br label %for.cond56.preheader

for.cond56.preheader:                             ; preds = %for.inc119, %for.cond56.preheader.lr.ph
  %38 = phi i32 [ %30, %for.cond56.preheader.lr.ph ], [ %80, %for.inc119 ]
  %indvars.iv510 = phi i64 [ 0, %for.cond56.preheader.lr.ph ], [ %indvars.iv.next511, %for.inc119 ]
  br i1 %cmp57456, label %for.inc119, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.cond56.preheader
  %39 = trunc i64 %indvars.iv510 to i32
  %conv.i = uitofp i32 %39 to double
  %40 = call fast double @llvm.sqrt.f64(double %conv.i) #24
  %41 = call fast double @llvm.floor.f64(double %40)
  %mul = fmul fast double %41, 2.000000e+00
  %add72 = fadd fast double %mul, 1.000000e+00
  %arrayidx99 = getelementptr inbounds float*, float** %34, i64 %indvars.iv510
  %arrayidx108 = getelementptr inbounds float*, float** %36, i64 %indvars.iv510
  br label %for.body58

for.body58:                                       ; preds = %for.inc116, %for.body58.lr.ph
  %indvars.iv506 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next507, %for.inc116 ]
  %42 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %43 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %42, i64 %indvars.iv506, i32 0
  %44 = bitcast %class.CAmbisonicSource* %43 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable.i = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %44, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable.i, i64 6
  %45 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn.i, align 8
  %call.i391 = call { <2 x float>, float } %45(%class.CAmbisonicSource* %43) #24
  %call60.fca.0.extract = extractvalue { <2 x float>, float } %call.i391, 0
  %position.sroa.0.0.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 0
  %position.sroa.0.4.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 1
  %vtable61 = load i1 (%class.HRTF*, float, float, float**)**, i1 (%class.HRTF*, float, float, float**)*** %37, align 8, !tbaa !40
  %vfn62 = getelementptr inbounds i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vtable61, i64 2
  %46 = load i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vfn62, align 8
  %call63 = call zeroext i1 %46(%class.HRTF* nonnull %retval.0.i, float %position.sroa.0.0.vec.extract, float %position.sroa.0.4.vec.extract, float** nonnull %arrayidx) #24
  br i1 %call63, label %if.end67, label %cleanup284

if.end67:                                         ; preds = %for.body58
  %47 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %48 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %47, i64 %indvars.iv506, i32 0
  %49 = bitcast %class.CAmbisonicSource* %48 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i394 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %49, align 8, !tbaa !40
  %vfn.i395 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i394, i64 11
  %50 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i395, align 8
  %call.i396 = call fast float %50(%class.CAmbisonicSource* %48, i32 %39) #24
  %conv70 = fpext float %call.i396 to double
  %mul73 = fmul fast double %add72, %conv70
  %conv74 = fptrunc double %mul73 to float
  %51 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %cmp77451 = icmp eq i32 %51, 0
  br i1 %cmp77451, label %for.inc116, label %for.body78.lr.ph

for.body78.lr.ph:                                 ; preds = %if.end67
  %52 = load float*, float** %arrayidx, align 16, !tbaa !43
  %53 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %54 = zext i32 %51 to i64
  %55 = add nsw i64 %54, -1
  %xtraiter576 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %for.cond90.preheader.unr-lcssa, label %for.body78.lr.ph.new

for.body78.lr.ph.new:                             ; preds = %for.body78.lr.ph
  %unroll_iter578 = sub nsw i64 %54, %xtraiter576
  br label %for.body78

for.cond90.preheader.unr-lcssa:                   ; preds = %for.body78, %for.body78.lr.ph
  %indvars.iv500.unr = phi i64 [ 0, %for.body78.lr.ph ], [ %indvars.iv.next501.1, %for.body78 ]
  %lcmp.mod577 = icmp eq i64 %xtraiter576, 0
  br i1 %lcmp.mod577, label %for.cond90.preheader, label %for.body78.epil

for.body78.epil:                                  ; preds = %for.cond90.preheader.unr-lcssa
  %arrayidx81.epil = getelementptr inbounds float, float* %52, i64 %indvars.iv500.unr
  %57 = load float, float* %arrayidx81.epil, align 4, !tbaa !47
  %mul82.epil = fmul fast float %57, %conv74
  store float %mul82.epil, float* %arrayidx81.epil, align 4, !tbaa !47
  %arrayidx85.epil = getelementptr inbounds float, float* %53, i64 %indvars.iv500.unr
  %58 = load float, float* %arrayidx85.epil, align 4, !tbaa !47
  %mul86.epil = fmul fast float %58, %conv74
  store float %mul86.epil, float* %arrayidx85.epil, align 4, !tbaa !47
  br label %for.cond90.preheader

for.cond90.preheader:                             ; preds = %for.body78.epil, %for.cond90.preheader.unr-lcssa
  %cmp92454 = icmp eq i32 %51, 0
  br i1 %cmp92454, label %for.inc116, label %for.body93.lr.ph

for.body93.lr.ph:                                 ; preds = %for.cond90.preheader
  %59 = load float*, float** %arrayidx, align 16, !tbaa !43
  %60 = load float*, float** %arrayidx99, align 8, !tbaa !43
  %61 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %62 = load float*, float** %arrayidx108, align 8, !tbaa !43
  %xtraiter580 = and i64 %54, 1
  %63 = icmp eq i64 %55, 0
  br i1 %63, label %for.inc116.loopexit.unr-lcssa, label %for.body93.lr.ph.new

for.body93.lr.ph.new:                             ; preds = %for.body93.lr.ph
  %unroll_iter582 = sub nsw i64 %54, %xtraiter580
  br label %for.body93

for.body78:                                       ; preds = %for.body78, %for.body78.lr.ph.new
  %indvars.iv500 = phi i64 [ 0, %for.body78.lr.ph.new ], [ %indvars.iv.next501.1, %for.body78 ]
  %niter579 = phi i64 [ %unroll_iter578, %for.body78.lr.ph.new ], [ %niter579.nsub.1, %for.body78 ]
  %arrayidx81 = getelementptr inbounds float, float* %52, i64 %indvars.iv500
  %64 = load float, float* %arrayidx81, align 4, !tbaa !47
  %mul82 = fmul fast float %64, %conv74
  store float %mul82, float* %arrayidx81, align 4, !tbaa !47
  %arrayidx85 = getelementptr inbounds float, float* %53, i64 %indvars.iv500
  %65 = load float, float* %arrayidx85, align 4, !tbaa !47
  %mul86 = fmul fast float %65, %conv74
  store float %mul86, float* %arrayidx85, align 4, !tbaa !47
  %indvars.iv.next501 = or i64 %indvars.iv500, 1
  %arrayidx81.1 = getelementptr inbounds float, float* %52, i64 %indvars.iv.next501
  %66 = load float, float* %arrayidx81.1, align 4, !tbaa !47
  %mul82.1 = fmul fast float %66, %conv74
  store float %mul82.1, float* %arrayidx81.1, align 4, !tbaa !47
  %arrayidx85.1 = getelementptr inbounds float, float* %53, i64 %indvars.iv.next501
  %67 = load float, float* %arrayidx85.1, align 4, !tbaa !47
  %mul86.1 = fmul fast float %67, %conv74
  store float %mul86.1, float* %arrayidx85.1, align 4, !tbaa !47
  %indvars.iv.next501.1 = add nuw nsw i64 %indvars.iv500, 2
  %niter579.nsub.1 = add i64 %niter579, -2
  %niter579.ncmp.1 = icmp eq i64 %niter579.nsub.1, 0
  br i1 %niter579.ncmp.1, label %for.cond90.preheader.unr-lcssa, label %for.body78

for.body93:                                       ; preds = %for.body93, %for.body93.lr.ph.new
  %indvars.iv502 = phi i64 [ 0, %for.body93.lr.ph.new ], [ %indvars.iv.next503.1, %for.body93 ]
  %niter583 = phi i64 [ %unroll_iter582, %for.body93.lr.ph.new ], [ %niter583.nsub.1, %for.body93 ]
  %arrayidx96 = getelementptr inbounds float, float* %59, i64 %indvars.iv502
  %68 = load float, float* %arrayidx96, align 4, !tbaa !47
  %arrayidx101 = getelementptr inbounds float, float* %60, i64 %indvars.iv502
  %69 = load float, float* %arrayidx101, align 4, !tbaa !47
  %add102 = fadd fast float %69, %68
  store float %add102, float* %arrayidx101, align 4, !tbaa !47
  %arrayidx105 = getelementptr inbounds float, float* %61, i64 %indvars.iv502
  %70 = load float, float* %arrayidx105, align 4, !tbaa !47
  %arrayidx110 = getelementptr inbounds float, float* %62, i64 %indvars.iv502
  %71 = load float, float* %arrayidx110, align 4, !tbaa !47
  %add111 = fadd fast float %71, %70
  store float %add111, float* %arrayidx110, align 4, !tbaa !47
  %indvars.iv.next503 = or i64 %indvars.iv502, 1
  %arrayidx96.1 = getelementptr inbounds float, float* %59, i64 %indvars.iv.next503
  %72 = load float, float* %arrayidx96.1, align 4, !tbaa !47
  %arrayidx101.1 = getelementptr inbounds float, float* %60, i64 %indvars.iv.next503
  %73 = load float, float* %arrayidx101.1, align 4, !tbaa !47
  %add102.1 = fadd fast float %73, %72
  store float %add102.1, float* %arrayidx101.1, align 4, !tbaa !47
  %arrayidx105.1 = getelementptr inbounds float, float* %61, i64 %indvars.iv.next503
  %74 = load float, float* %arrayidx105.1, align 4, !tbaa !47
  %arrayidx110.1 = getelementptr inbounds float, float* %62, i64 %indvars.iv.next503
  %75 = load float, float* %arrayidx110.1, align 4, !tbaa !47
  %add111.1 = fadd fast float %75, %74
  store float %add111.1, float* %arrayidx110.1, align 4, !tbaa !47
  %indvars.iv.next503.1 = add nuw nsw i64 %indvars.iv502, 2
  %niter583.nsub.1 = add i64 %niter583, -2
  %niter583.ncmp.1 = icmp eq i64 %niter583.nsub.1, 0
  br i1 %niter583.ncmp.1, label %for.inc116.loopexit.unr-lcssa, label %for.body93

for.inc116.loopexit.unr-lcssa:                    ; preds = %for.body93, %for.body93.lr.ph
  %indvars.iv502.unr = phi i64 [ 0, %for.body93.lr.ph ], [ %indvars.iv.next503.1, %for.body93 ]
  %lcmp.mod581 = icmp eq i64 %xtraiter580, 0
  br i1 %lcmp.mod581, label %for.inc116, label %for.body93.epil

for.body93.epil:                                  ; preds = %for.inc116.loopexit.unr-lcssa
  %arrayidx96.epil = getelementptr inbounds float, float* %59, i64 %indvars.iv502.unr
  %76 = load float, float* %arrayidx96.epil, align 4, !tbaa !47
  %arrayidx101.epil = getelementptr inbounds float, float* %60, i64 %indvars.iv502.unr
  %77 = load float, float* %arrayidx101.epil, align 4, !tbaa !47
  %add102.epil = fadd fast float %77, %76
  store float %add102.epil, float* %arrayidx101.epil, align 4, !tbaa !47
  %arrayidx105.epil = getelementptr inbounds float, float* %61, i64 %indvars.iv502.unr
  %78 = load float, float* %arrayidx105.epil, align 4, !tbaa !47
  %arrayidx110.epil = getelementptr inbounds float, float* %62, i64 %indvars.iv502.unr
  %79 = load float, float* %arrayidx110.epil, align 4, !tbaa !47
  %add111.epil = fadd fast float %79, %78
  store float %add111.epil, float* %arrayidx110.epil, align 4, !tbaa !47
  br label %for.inc116

for.inc116:                                       ; preds = %for.body93.epil, %for.inc116.loopexit.unr-lcssa, %for.cond90.preheader, %if.end67
  %indvars.iv.next507 = add nuw nsw i64 %indvars.iv506, 1
  %exitcond509 = icmp eq i64 %indvars.iv.next507, %wide.trip.count508
  br i1 %exitcond509, label %for.inc119.loopexit, label %for.body58

for.inc119.loopexit:                              ; preds = %for.inc116
  %.pre = load i32, i32* %20, align 8, !tbaa !53
  br label %for.inc119

for.inc119:                                       ; preds = %for.inc119.loopexit, %for.cond56.preheader
  %80 = phi i32 [ %.pre, %for.inc119.loopexit ], [ %38, %for.cond56.preheader ]
  %indvars.iv.next511 = add nuw nsw i64 %indvars.iv510, 1
  %81 = zext i32 %80 to i64
  %cmp54 = icmp ult i64 %indvars.iv.next511, %81
  br i1 %cmp54, label %for.cond56.preheader, label %delete.notnull

delete.notnull:                                   ; preds = %for.inc119, %for.cond52.preheader, %for.cond52.preheader.thread
  %82 = phi float** [ %32, %for.cond52.preheader.thread ], [ %34, %for.cond52.preheader ], [ %34, %for.inc119 ]
  %83 = phi float** [ %33, %for.cond52.preheader.thread ], [ %36, %for.cond52.preheader ], [ %36, %for.inc119 ]
  %84 = phi i8* [ %call32.1, %for.cond52.preheader.thread ], [ %call32.us.1, %for.cond52.preheader ], [ %call32.us.1, %for.inc119 ]
  %85 = bitcast %class.HRTF* %retval.0.i to void (%class.HRTF*)***
  %vtable122 = load void (%class.HRTF*)**, void (%class.HRTF*)*** %85, align 8, !tbaa !40
  %vfn123 = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable122, i64 1
  %86 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn123, align 8
  call void %86(%class.HRTF* nonnull %retval.0.i) #24
  %87 = bitcast %class.CAmbisonicEncoder* %myEncoder to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %87) #24
  %88 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %89, align 8, !tbaa !49
  %90 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %90, align 4, !tbaa !52
  %91 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %91, align 8, !tbaa !53
  %92 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %92, align 4, !tbaa !54
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3, i32 2
  %93 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !56
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8, !tbaa !40
  %94 = load i32, i32* %18, align 8, !tbaa !49
  %95 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0
  %call.i397 = call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* nonnull %95, i32 %94, i1 zeroext true, i32 undef) #24
  %call125 = call fast float @_Z16DegreesToRadiansf(float 9.000000e+01) #24
  %position90.sroa.0.4.vec.insert = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call125, i32 0
  %polPosition.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3
  %polPosition.sroa.0.0..sroa_cast.i = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx.i to <2 x float>*
  store <2 x float> %position90.sroa.0.4.vec.insert, <2 x float>* %polPosition.sroa.0.0..sroa_cast.i, align 8
  store float 5.000000e+00, float* %fDistance.i.i, align 8
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* nonnull %95) #24
  %96 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %conv130 = zext i32 %96 to i64
  %97 = shl nuw nsw i64 %conv130, 2
  %call131 = call i8* @_Znam(i64 %97) #25
  %98 = bitcast i8* %call131 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call131, i8 0, i64 %97, i1 false)
  %99 = load i32, i32* %20, align 8, !tbaa !53
  %cmp134447 = icmp eq i32 %99, 0
  br i1 %cmp134447, label %for.cond156.preheader, label %for.cond136.preheader.lr.ph

for.cond136.preheader.lr.ph:                      ; preds = %delete.notnull
  %cmp138445 = icmp eq i32 %96, 0
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load float*, float** %_M_start.i.i, align 8
  br i1 %cmp138445, label %for.body206.lr.ph, label %for.cond136.preheader.us.preheader

for.cond136.preheader.us.preheader:               ; preds = %for.cond136.preheader.lr.ph
  %101 = zext i32 %99 to i64
  %xtraiter572 = and i64 %conv130, 1
  %102 = icmp eq i32 %96, 1
  %unroll_iter574 = sub nsw i64 %conv130, %xtraiter572
  %lcmp.mod573 = icmp eq i64 %xtraiter572, 0
  br label %for.cond136.preheader.us

for.cond136.preheader.us:                         ; preds = %for.cond136.for.inc153_crit_edge.us, %for.cond136.preheader.us.preheader
  %indvars.iv498 = phi i64 [ 0, %for.cond136.preheader.us.preheader ], [ %indvars.iv.next499, %for.cond136.for.inc153_crit_edge.us ]
  %add.ptr.i.i.us = getelementptr inbounds float, float* %100, i64 %indvars.iv498
  %arrayidx143.us = getelementptr inbounds float*, float** %82, i64 %indvars.iv498
  %103 = load float*, float** %arrayidx143.us, align 8, !tbaa !43
  br i1 %102, label %for.cond136.for.inc153_crit_edge.us.unr-lcssa, label %for.body139.us

for.body139.us:                                   ; preds = %for.body139.us, %for.cond136.preheader.us
  %indvars.iv494 = phi i64 [ %indvars.iv.next495.1, %for.body139.us ], [ 0, %for.cond136.preheader.us ]
  %niter575 = phi i64 [ %niter575.nsub.1, %for.body139.us ], [ %unroll_iter574, %for.cond136.preheader.us ]
  %104 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !47
  %arrayidx145.us = getelementptr inbounds float, float* %103, i64 %indvars.iv494
  %105 = load float, float* %arrayidx145.us, align 4, !tbaa !47
  %mul146.us = fmul fast float %105, %104
  %arrayidx148.us = getelementptr inbounds float, float* %98, i64 %indvars.iv494
  %106 = load float, float* %arrayidx148.us, align 4, !tbaa !47
  %add149.us = fadd fast float %106, %mul146.us
  store float %add149.us, float* %arrayidx148.us, align 4, !tbaa !47
  %indvars.iv.next495 = or i64 %indvars.iv494, 1
  %107 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !47
  %arrayidx145.us.1 = getelementptr inbounds float, float* %103, i64 %indvars.iv.next495
  %108 = load float, float* %arrayidx145.us.1, align 4, !tbaa !47
  %mul146.us.1 = fmul fast float %108, %107
  %arrayidx148.us.1 = getelementptr inbounds float, float* %98, i64 %indvars.iv.next495
  %109 = load float, float* %arrayidx148.us.1, align 4, !tbaa !47
  %add149.us.1 = fadd fast float %109, %mul146.us.1
  store float %add149.us.1, float* %arrayidx148.us.1, align 4, !tbaa !47
  %indvars.iv.next495.1 = add nuw nsw i64 %indvars.iv494, 2
  %niter575.nsub.1 = add i64 %niter575, -2
  %niter575.ncmp.1 = icmp eq i64 %niter575.nsub.1, 0
  br i1 %niter575.ncmp.1, label %for.cond136.for.inc153_crit_edge.us.unr-lcssa, label %for.body139.us

for.cond136.for.inc153_crit_edge.us.unr-lcssa:    ; preds = %for.body139.us, %for.cond136.preheader.us
  %indvars.iv494.unr = phi i64 [ 0, %for.cond136.preheader.us ], [ %indvars.iv.next495.1, %for.body139.us ]
  br i1 %lcmp.mod573, label %for.cond136.for.inc153_crit_edge.us, label %for.body139.us.epil

for.body139.us.epil:                              ; preds = %for.cond136.for.inc153_crit_edge.us.unr-lcssa
  %110 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !47
  %arrayidx145.us.epil = getelementptr inbounds float, float* %103, i64 %indvars.iv494.unr
  %111 = load float, float* %arrayidx145.us.epil, align 4, !tbaa !47
  %mul146.us.epil = fmul fast float %111, %110
  %arrayidx148.us.epil = getelementptr inbounds float, float* %98, i64 %indvars.iv494.unr
  %112 = load float, float* %arrayidx148.us.epil, align 4, !tbaa !47
  %add149.us.epil = fadd fast float %112, %mul146.us.epil
  store float %add149.us.epil, float* %arrayidx148.us.epil, align 4, !tbaa !47
  br label %for.cond136.for.inc153_crit_edge.us

for.cond136.for.inc153_crit_edge.us:              ; preds = %for.body139.us.epil, %for.cond136.for.inc153_crit_edge.us.unr-lcssa
  %indvars.iv.next499 = add nuw nsw i64 %indvars.iv498, 1
  %cmp134.us = icmp ult i64 %indvars.iv.next499, %101
  br i1 %cmp134.us, label %for.cond136.preheader.us, label %for.cond156.preheader

for.cond156.preheader:                            ; preds = %for.cond136.for.inc153_crit_edge.us, %delete.notnull
  %cmp158441 = icmp eq i32 %96, 0
  br i1 %cmp158441, label %for.cond173.preheader, label %for.body159.preheader

for.body159.preheader:                            ; preds = %for.cond156.preheader
  %113 = add nsw i64 %conv130, -1
  %xtraiter567 = and i64 %conv130, 3
  %114 = icmp ult i64 %113, 3
  br i1 %114, label %for.cond173.preheader.loopexit.unr-lcssa, label %for.body159.preheader.new

for.body159.preheader.new:                        ; preds = %for.body159.preheader
  %unroll_iter570 = sub nsw i64 %conv130, %xtraiter567
  br label %for.body159

for.cond173.preheader.loopexit.unr-lcssa:         ; preds = %for.body159, %for.body159.preheader
  %cond167.lcssa.ph = phi float [ undef, %for.body159.preheader ], [ %cond167.3, %for.body159 ]
  %indvars.iv490.unr = phi i64 [ 0, %for.body159.preheader ], [ %indvars.iv.next491.3, %for.body159 ]
  %fMax.0442.unr = phi float [ 0.000000e+00, %for.body159.preheader ], [ %cond167.3, %for.body159 ]
  %lcmp.mod568 = icmp eq i64 %xtraiter567, 0
  br i1 %lcmp.mod568, label %for.cond173.preheader, label %for.body159.epil

for.body159.epil:                                 ; preds = %for.body159.epil, %for.cond173.preheader.loopexit.unr-lcssa
  %indvars.iv490.epil = phi i64 [ %indvars.iv.next491.epil, %for.body159.epil ], [ %indvars.iv490.unr, %for.cond173.preheader.loopexit.unr-lcssa ]
  %fMax.0442.epil = phi float [ %cond167.epil, %for.body159.epil ], [ %fMax.0442.unr, %for.cond173.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body159.epil ], [ %xtraiter567, %for.cond173.preheader.loopexit.unr-lcssa ]
  %arrayidx161.epil = getelementptr inbounds float, float* %98, i64 %indvars.iv490.epil
  %115 = load float, float* %arrayidx161.epil, align 4, !tbaa !47
  %116 = call fast float @llvm.fabs.f32(float %115) #24
  %cmp163.epil = fcmp fast ogt float %116, %fMax.0442.epil
  %cond167.epil = select i1 %cmp163.epil, float %116, float %fMax.0442.epil
  %indvars.iv.next491.epil = add nuw nsw i64 %indvars.iv490.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond173.preheader, label %for.body159.epil, !llvm.loop !184

for.cond173.preheader:                            ; preds = %for.body159.epil, %for.cond173.preheader.loopexit.unr-lcssa, %for.cond156.preheader
  %cmp158441535 = phi i1 [ true, %for.cond156.preheader ], [ %cmp158441, %for.body159.epil ], [ %cmp158441, %for.cond173.preheader.loopexit.unr-lcssa ]
  %fMax.0.lcssa = phi float [ 0.000000e+00, %for.cond156.preheader ], [ %cond167.lcssa.ph, %for.cond173.preheader.loopexit.unr-lcssa ], [ %cond167.epil, %for.body159.epil ]
  %cmp178418 = icmp eq i32 %99, 0
  %brmerge = or i1 %cmp178418, %cmp158441535
  br i1 %brmerge, label %for.cond200.preheader, label %for.cond180.preheader.us.us.preheader

for.cond180.preheader.us.us.preheader:            ; preds = %for.cond173.preheader
  %wide.trip.count484 = zext i32 %99 to i64
  %xtraiter559 = and i64 %conv130, 1
  %117 = icmp eq i32 %96, 1
  %unroll_iter561 = sub nsw i64 %conv130, %xtraiter559
  %118 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  %119 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  %lcmp.mod560 = icmp eq i64 %xtraiter559, 0
  %120 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  br label %for.cond180.preheader.us.us

for.cond180.preheader.us.us:                      ; preds = %for.cond180.for.inc194_crit_edge.us.us, %for.cond180.preheader.us.us.preheader
  %indvars.iv482 = phi i64 [ 0, %for.cond180.preheader.us.us.preheader ], [ %indvars.iv.next483, %for.cond180.for.inc194_crit_edge.us.us ]
  %arrayidx187.us.us = getelementptr inbounds float*, float** %82, i64 %indvars.iv482
  %121 = load float*, float** %arrayidx187.us.us, align 8, !tbaa !43
  br i1 %117, label %for.cond180.for.inc194_crit_edge.us.us.unr-lcssa, label %for.body183.us.us

for.cond180.for.inc194_crit_edge.us.us.unr-lcssa: ; preds = %for.body183.us.us, %for.cond180.preheader.us.us
  %indvars.iv480.unr = phi i64 [ 0, %for.cond180.preheader.us.us ], [ %indvars.iv.next481.1565, %for.body183.us.us ]
  br i1 %lcmp.mod560, label %for.cond180.for.inc194_crit_edge.us.us, label %for.body183.us.us.epil

for.body183.us.us.epil:                           ; preds = %for.cond180.for.inc194_crit_edge.us.us.unr-lcssa
  %arrayidx189.us.us.epil = getelementptr inbounds float, float* %121, i64 %indvars.iv480.unr
  %122 = load float, float* %arrayidx189.us.us.epil, align 4, !tbaa !47
  %123 = fmul fast float %122, 0x3FD6666660000000
  %124 = fmul fast float %123, %120
  store float %124, float* %arrayidx189.us.us.epil, align 4, !tbaa !47
  br label %for.cond180.for.inc194_crit_edge.us.us

for.cond180.for.inc194_crit_edge.us.us:           ; preds = %for.body183.us.us.epil, %for.cond180.for.inc194_crit_edge.us.us.unr-lcssa
  %indvars.iv.next483 = add nuw nsw i64 %indvars.iv482, 1
  %exitcond485 = icmp eq i64 %indvars.iv.next483, %wide.trip.count484
  br i1 %exitcond485, label %for.cond180.preheader.us.us.preheader.1, label %for.cond180.preheader.us.us

for.body183.us.us:                                ; preds = %for.body183.us.us, %for.cond180.preheader.us.us
  %indvars.iv480 = phi i64 [ %indvars.iv.next481.1565, %for.body183.us.us ], [ 0, %for.cond180.preheader.us.us ]
  %niter562 = phi i64 [ %niter562.nsub.1, %for.body183.us.us ], [ %unroll_iter561, %for.cond180.preheader.us.us ]
  %arrayidx189.us.us = getelementptr inbounds float, float* %121, i64 %indvars.iv480
  %125 = load float, float* %arrayidx189.us.us, align 4, !tbaa !47
  %126 = fmul fast float %125, 0x3FD6666660000000
  %127 = fmul fast float %126, %118
  store float %127, float* %arrayidx189.us.us, align 4, !tbaa !47
  %indvars.iv.next481 = or i64 %indvars.iv480, 1
  %arrayidx189.us.us.1564 = getelementptr inbounds float, float* %121, i64 %indvars.iv.next481
  %128 = load float, float* %arrayidx189.us.us.1564, align 4, !tbaa !47
  %129 = fmul fast float %128, 0x3FD6666660000000
  %130 = fmul fast float %129, %119
  store float %130, float* %arrayidx189.us.us.1564, align 4, !tbaa !47
  %indvars.iv.next481.1565 = add nuw nsw i64 %indvars.iv480, 2
  %niter562.nsub.1 = add i64 %niter562, -2
  %niter562.ncmp.1 = icmp eq i64 %niter562.nsub.1, 0
  br i1 %niter562.ncmp.1, label %for.cond180.for.inc194_crit_edge.us.us.unr-lcssa, label %for.body183.us.us

for.body159:                                      ; preds = %for.body159, %for.body159.preheader.new
  %indvars.iv490 = phi i64 [ 0, %for.body159.preheader.new ], [ %indvars.iv.next491.3, %for.body159 ]
  %fMax.0442 = phi float [ 0.000000e+00, %for.body159.preheader.new ], [ %cond167.3, %for.body159 ]
  %niter571 = phi i64 [ %unroll_iter570, %for.body159.preheader.new ], [ %niter571.nsub.3, %for.body159 ]
  %arrayidx161 = getelementptr inbounds float, float* %98, i64 %indvars.iv490
  %131 = load float, float* %arrayidx161, align 4, !tbaa !47
  %132 = call fast float @llvm.fabs.f32(float %131) #24
  %cmp163 = fcmp fast ogt float %132, %fMax.0442
  %cond167 = select i1 %cmp163, float %132, float %fMax.0442
  %indvars.iv.next491 = or i64 %indvars.iv490, 1
  %arrayidx161.1 = getelementptr inbounds float, float* %98, i64 %indvars.iv.next491
  %133 = load float, float* %arrayidx161.1, align 4, !tbaa !47
  %134 = call fast float @llvm.fabs.f32(float %133) #24
  %cmp163.1 = fcmp fast ogt float %134, %cond167
  %cond167.1 = select i1 %cmp163.1, float %134, float %cond167
  %indvars.iv.next491.1 = or i64 %indvars.iv490, 2
  %arrayidx161.2 = getelementptr inbounds float, float* %98, i64 %indvars.iv.next491.1
  %135 = load float, float* %arrayidx161.2, align 4, !tbaa !47
  %136 = call fast float @llvm.fabs.f32(float %135) #24
  %cmp163.2 = fcmp fast ogt float %136, %cond167.1
  %cond167.2 = select i1 %cmp163.2, float %136, float %cond167.1
  %indvars.iv.next491.2 = or i64 %indvars.iv490, 3
  %arrayidx161.3 = getelementptr inbounds float, float* %98, i64 %indvars.iv.next491.2
  %137 = load float, float* %arrayidx161.3, align 4, !tbaa !47
  %138 = call fast float @llvm.fabs.f32(float %137) #24
  %cmp163.3 = fcmp fast ogt float %138, %cond167.2
  %cond167.3 = select i1 %cmp163.3, float %138, float %cond167.2
  %indvars.iv.next491.3 = add nuw nsw i64 %indvars.iv490, 4
  %niter571.nsub.3 = add i64 %niter571, -4
  %niter571.ncmp.3 = icmp eq i64 %niter571.nsub.3, 0
  br i1 %niter571.ncmp.3, label %for.cond173.preheader.loopexit.unr-lcssa, label %for.body159

for.cond200.preheader:                            ; preds = %for.cond180.for.inc194_crit_edge.us.us.1, %for.cond173.preheader
  br i1 %cmp134447, label %for.inc235.1, label %for.body206.lr.ph

for.body206.lr.ph:                                ; preds = %for.cond200.preheader, %for.cond136.preheader.lr.ph
  %.in = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %139 = bitcast float** %.in to i8**
  %_M_head_impl.i.i.i.i.i.i400557 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body206

for.body206:                                      ; preds = %for.body206.for.body206_crit_edge, %for.body206.lr.ph
  %140 = phi i32 [ %96, %for.body206.lr.ph ], [ %.pre525, %for.body206.for.body206_crit_edge ]
  %indvars.iv476 = phi i64 [ 0, %for.body206.lr.ph ], [ %indvars.iv.next477, %for.body206.for.body206_crit_edge ]
  %141 = load i8*, i8** %139, align 8, !tbaa !63
  %arrayidx211 = getelementptr inbounds float*, float** %82, i64 %indvars.iv476
  %142 = bitcast float** %arrayidx211 to i8**
  %143 = load i8*, i8** %142, align 8, !tbaa !43
  %conv213 = zext i32 %140 to i64
  %mul214 = shl nuw nsw i64 %conv213, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %143, i64 %mul214, i1 false)
  %144 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %conv217 = zext i32 %144 to i64
  %145 = load float*, float** %.in, align 8, !tbaa !63
  %add.ptr.i402 = getelementptr inbounds float, float* %145, i64 %conv217
  %146 = bitcast float* %add.ptr.i402 to i8*
  %147 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %sub221 = sub i32 %147, %144
  %conv222 = zext i32 %sub221 to i64
  %mul223 = shl nuw nsw i64 %conv222, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %146, i8 0, i64 %mul223, i1 false)
  %148 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i400557, align 8, !tbaa !43
  %149 = load float*, float** %.in, align 8, !tbaa !63
  %150 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %150, i64 %indvars.iv476, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  call void @kiss_fftr(%struct.kiss_fftr_state* %148, float* %149, %struct.kiss_fft_cpx* %151) #24
  %indvars.iv.next477 = add nuw nsw i64 %indvars.iv476, 1
  %152 = load i32, i32* %20, align 8, !tbaa !53
  %153 = zext i32 %152 to i64
  %cmp205 = icmp ult i64 %indvars.iv.next477, %153
  br i1 %cmp205, label %for.body206.for.body206_crit_edge, label %for.inc235

for.body206.for.body206_crit_edge:                ; preds = %for.body206
  %.pre525 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  br label %for.body206

for.inc235:                                       ; preds = %for.body206
  %phitmp = icmp eq i32 %152, 0
  br i1 %phitmp, label %for.inc235.1, label %for.body206.lr.ph.1

delete.notnull244:                                ; preds = %for.inc235.1
  %154 = bitcast float* %186 to i8*
  call void @_ZdaPv(i8* %154) #25
  br label %for.inc246

for.inc246:                                       ; preds = %for.inc235.1, %delete.notnull244
  %155 = load float*, float** %arrayidx.1, align 8, !tbaa !43
  %isnull243.1 = icmp eq float* %155, null
  br i1 %isnull243.1, label %for.inc246.1, label %delete.notnull244.1

for.body255:                                      ; preds = %for.inc246.1, %for.inc263
  %156 = phi i32 [ %159, %for.inc263 ], [ %171, %for.inc246.1 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc263 ], [ 0, %for.inc246.1 ]
  %arrayidx259 = getelementptr inbounds float*, float** %82, i64 %indvars.iv
  %157 = load float*, float** %arrayidx259, align 8, !tbaa !43
  %isnull260 = icmp eq float* %157, null
  br i1 %isnull260, label %for.inc263, label %delete.notnull261

delete.notnull261:                                ; preds = %for.body255
  %158 = bitcast float* %157 to i8*
  call void @_ZdaPv(i8* %158) #25
  %.pre526 = load i32, i32* %20, align 8, !tbaa !53
  br label %for.inc263

for.inc263:                                       ; preds = %delete.notnull261, %for.body255
  %159 = phi i32 [ %156, %for.body255 ], [ %.pre526, %delete.notnull261 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %160 = zext i32 %159 to i64
  %cmp254 = icmp ult i64 %indvars.iv.next, %160
  br i1 %cmp254, label %for.body255, label %for.inc271

for.inc271:                                       ; preds = %for.inc246.1, %for.inc263
  call void @_ZdaPv(i8* %call32) #25
  %.pre527 = load i32, i32* %20, align 8, !tbaa !53
  %cmp254408.1 = icmp eq i32 %.pre527, 0
  br i1 %cmp254408.1, label %for.inc271.1, label %for.body255.1

if.then.i.i.i.i.i:                                ; preds = %for.inc271.1
  %161 = bitcast float* %169 to i8*
  call void @_ZdlPv(i8* nonnull %161) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %for.inc271.1, %if.then.i.i.i.i.i
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %162 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i = icmp eq float* %162, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %163 = bitcast float* %162 to i8*
  call void @_ZdlPv(i8* nonnull %163) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %87) #24
  br label %cleanup284

cleanup284:                                       ; preds = %_ZN17CAmbisonicEncoderD2Ev.exit, %for.body58
  %retval.3 = phi i1 [ true, %_ZN17CAmbisonicEncoderD2Ev.exit ], [ false, %for.body58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #24
  br label %cleanup287

cleanup287:                                       ; preds = %cleanup284, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %retval.4 = phi i1 [ %retval.3, %cleanup284 ], [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  ret i1 %retval.4

for.body255.1:                                    ; preds = %for.inc263.1, %for.inc271
  %164 = phi i32 [ %167, %for.inc263.1 ], [ %.pre527, %for.inc271 ]
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc263.1 ], [ 0, %for.inc271 ]
  %arrayidx259.1 = getelementptr inbounds float*, float** %83, i64 %indvars.iv.1
  %165 = load float*, float** %arrayidx259.1, align 8, !tbaa !43
  %isnull260.1 = icmp eq float* %165, null
  br i1 %isnull260.1, label %for.inc263.1, label %delete.notnull261.1

delete.notnull261.1:                              ; preds = %for.body255.1
  %166 = bitcast float* %165 to i8*
  call void @_ZdaPv(i8* %166) #25
  %.pre528 = load i32, i32* %20, align 8, !tbaa !53
  br label %for.inc263.1

for.inc263.1:                                     ; preds = %delete.notnull261.1, %for.body255.1
  %167 = phi i32 [ %.pre528, %delete.notnull261.1 ], [ %164, %for.body255.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %168 = zext i32 %167 to i64
  %cmp254.1 = icmp ult i64 %indvars.iv.next.1, %168
  br i1 %cmp254.1, label %for.body255.1, label %for.inc271.1

for.inc271.1:                                     ; preds = %for.inc263.1, %for.inc271
  call void @_ZdaPv(i8* %84) #25
  call void @_ZdaPv(i8* nonnull %call131) #25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8, !tbaa !40
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %169 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i = icmp eq float* %169, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

delete.notnull244.1:                              ; preds = %for.inc246
  %170 = bitcast float* %155 to i8*
  call void @_ZdaPv(i8* %170) #25
  br label %for.inc246.1

for.inc246.1:                                     ; preds = %delete.notnull244.1, %for.inc246
  %171 = load i32, i32* %20, align 8, !tbaa !53
  %cmp254408 = icmp eq i32 %171, 0
  br i1 %cmp254408, label %for.inc271, label %for.body255

for.body206.lr.ph.1:                              ; preds = %for.inc235
  %_M_start.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 0
  br label %for.body206.1

for.body206.1:                                    ; preds = %for.body206.1, %for.body206.lr.ph.1
  %indvars.iv476.1 = phi i64 [ 0, %for.body206.lr.ph.1 ], [ %indvars.iv.next477.1, %for.body206.1 ]
  %172 = load i8*, i8** %139, align 8, !tbaa !63
  %arrayidx211.1 = getelementptr inbounds float*, float** %83, i64 %indvars.iv476.1
  %173 = bitcast float** %arrayidx211.1 to i8**
  %174 = load i8*, i8** %173, align 8, !tbaa !43
  %175 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %conv213.1 = zext i32 %175 to i64
  %mul214.1 = shl nuw nsw i64 %conv213.1, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %174, i64 %mul214.1, i1 false)
  %176 = load i32, i32* %m_nTaps, align 4, !tbaa !171
  %conv217.1 = zext i32 %176 to i64
  %177 = load float*, float** %.in, align 8, !tbaa !63
  %add.ptr.i402.1 = getelementptr inbounds float, float* %177, i64 %conv217.1
  %178 = bitcast float* %add.ptr.i402.1 to i8*
  %179 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %sub221.1 = sub i32 %179, %176
  %conv222.1 = zext i32 %sub221.1 to i64
  %mul223.1 = shl nuw nsw i64 %conv222.1, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %178, i8 0, i64 %mul223.1, i1 false)
  %180 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i400557, align 8, !tbaa !43
  %181 = load float*, float** %.in, align 8, !tbaa !63
  %182 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i.1, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %182, i64 %indvars.iv476.1, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.1, align 8, !tbaa !43
  call void @kiss_fftr(%struct.kiss_fftr_state* %180, float* %181, %struct.kiss_fft_cpx* %183) #24
  %indvars.iv.next477.1 = add nuw nsw i64 %indvars.iv476.1, 1
  %184 = load i32, i32* %20, align 8, !tbaa !53
  %185 = zext i32 %184 to i64
  %cmp205.1 = icmp ult i64 %indvars.iv.next477.1, %185
  br i1 %cmp205.1, label %for.body206.1, label %for.inc235.1

for.inc235.1:                                     ; preds = %for.body206.1, %for.inc235, %for.cond200.preheader
  %186 = load float*, float** %arrayidx, align 16, !tbaa !43
  %isnull243 = icmp eq float* %186, null
  br i1 %isnull243, label %for.inc246, label %delete.notnull244

for.cond180.preheader.us.us.preheader.1:          ; preds = %for.cond180.for.inc194_crit_edge.us.us
  %wide.trip.count484.1 = zext i32 %99 to i64
  %xtraiter = and i64 %conv130, 1
  %187 = icmp eq i32 %96, 1
  %unroll_iter = sub nsw i64 %conv130, %xtraiter
  %188 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  %189 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %190 = fdiv fast float 1.000000e+00, %fMax.0.lcssa
  br label %for.cond180.preheader.us.us.1

for.cond180.preheader.us.us.1:                    ; preds = %for.cond180.for.inc194_crit_edge.us.us.1, %for.cond180.preheader.us.us.preheader.1
  %indvars.iv482.1 = phi i64 [ 0, %for.cond180.preheader.us.us.preheader.1 ], [ %indvars.iv.next483.1, %for.cond180.for.inc194_crit_edge.us.us.1 ]
  %arrayidx187.us.us.1 = getelementptr inbounds float*, float** %83, i64 %indvars.iv482.1
  %191 = load float*, float** %arrayidx187.us.us.1, align 8, !tbaa !43
  br i1 %187, label %for.cond180.for.inc194_crit_edge.us.us.1.unr-lcssa, label %for.body183.us.us.1

for.body183.us.us.1:                              ; preds = %for.body183.us.us.1, %for.cond180.preheader.us.us.1
  %indvars.iv480.1 = phi i64 [ %indvars.iv.next481.1.1, %for.body183.us.us.1 ], [ 0, %for.cond180.preheader.us.us.1 ]
  %niter = phi i64 [ %niter.nsub.1, %for.body183.us.us.1 ], [ %unroll_iter, %for.cond180.preheader.us.us.1 ]
  %arrayidx189.us.us.1 = getelementptr inbounds float, float* %191, i64 %indvars.iv480.1
  %192 = load float, float* %arrayidx189.us.us.1, align 4, !tbaa !47
  %193 = fmul fast float %192, 0x3FD6666660000000
  %194 = fmul fast float %193, %188
  store float %194, float* %arrayidx189.us.us.1, align 4, !tbaa !47
  %indvars.iv.next481.1 = or i64 %indvars.iv480.1, 1
  %arrayidx189.us.us.1.1 = getelementptr inbounds float, float* %191, i64 %indvars.iv.next481.1
  %195 = load float, float* %arrayidx189.us.us.1.1, align 4, !tbaa !47
  %196 = fmul fast float %195, 0x3FD6666660000000
  %197 = fmul fast float %196, %189
  store float %197, float* %arrayidx189.us.us.1.1, align 4, !tbaa !47
  %indvars.iv.next481.1.1 = add nuw nsw i64 %indvars.iv480.1, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond180.for.inc194_crit_edge.us.us.1.unr-lcssa, label %for.body183.us.us.1

for.cond180.for.inc194_crit_edge.us.us.1.unr-lcssa: ; preds = %for.body183.us.us.1, %for.cond180.preheader.us.us.1
  %indvars.iv480.1.unr = phi i64 [ 0, %for.cond180.preheader.us.us.1 ], [ %indvars.iv.next481.1.1, %for.body183.us.us.1 ]
  br i1 %lcmp.mod, label %for.cond180.for.inc194_crit_edge.us.us.1, label %for.body183.us.us.1.epil

for.body183.us.us.1.epil:                         ; preds = %for.cond180.for.inc194_crit_edge.us.us.1.unr-lcssa
  %arrayidx189.us.us.1.epil = getelementptr inbounds float, float* %191, i64 %indvars.iv480.1.unr
  %198 = load float, float* %arrayidx189.us.us.1.epil, align 4, !tbaa !47
  %199 = fmul fast float %198, 0x3FD6666660000000
  %200 = fmul fast float %199, %190
  store float %200, float* %arrayidx189.us.us.1.epil, align 4, !tbaa !47
  br label %for.cond180.for.inc194_crit_edge.us.us.1

for.cond180.for.inc194_crit_edge.us.us.1:         ; preds = %for.body183.us.us.1.epil, %for.cond180.for.inc194_crit_edge.us.us.1.unr-lcssa
  %indvars.iv.next483.1 = add nuw nsw i64 %indvars.iv482.1, 1
  %exitcond485.1 = icmp eq i64 %indvars.iv.next483.1, %wide.trip.count484.1
  br i1 %exitcond485.1, label %for.cond200.preheader, label %for.cond180.preheader.us.us.1

for.body38.us.1:                                  ; preds = %for.body38.us.1, %for.cond35.for.inc49_crit_edge.us
  %indvars.iv512.1 = phi i64 [ 0, %for.cond35.for.inc49_crit_edge.us ], [ %indvars.iv.next513.1, %for.body38.us.1 ]
  %call41.us.1 = call i8* @_Znam(i64 %27) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us.1, i8 0, i64 %27, i1 false)
  %arrayidx45.us.1 = getelementptr inbounds float*, float** %36, i64 %indvars.iv512.1
  %201 = bitcast float** %arrayidx45.us.1 to i8**
  store i8* %call41.us.1, i8** %201, align 8, !tbaa !43
  %indvars.iv.next513.1 = add nuw nsw i64 %indvars.iv512.1, 1
  %exitcond515.1 = icmp eq i64 %indvars.iv.next513.1, %conv31
  br i1 %exitcond515.1, label %for.cond52.preheader, label %for.body38.us.1
}

; Function Attrs: nounwind uwtable
define %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nocapture readnone %this, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* nocapture readnone %HRTFPath) local_unnamed_addr #3 align 2 {
entry:
  %call = tail call i8* @_Znwm(i64 16) #25
  %0 = bitcast i8* %call to i32 (...)***
  %i_sampleRate2.i.i = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %i_sampleRate2.i.i to i32*
  store i32 %nSampleRate, i32* %1, align 8, !tbaa !34
  %i_len.i.i = getelementptr inbounds i8, i8* %call, i64 12
  %2 = bitcast i8* %i_len.i.i to i32*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %call.i = tail call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate) #24
  store i32 %call.i, i32* %2, align 4, !tbaa !39
  %3 = bitcast i8* %call to %class.HRTF*
  %cmp.i = icmp eq i32 %call.i, 0
  br i1 %cmp.i, label %delete.notnull, label %cleanup

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdlPv(i8* nonnull %call) #25
  br label %cleanup

cleanup:                                          ; preds = %delete.notnull, %entry
  %retval.0 = phi %class.HRTF* [ null, %delete.notnull ], [ %3, %entry ]
  ret %class.HRTF* %retval.0
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer5ResetEv(%class.CAmbisonicBinauralizer* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !63
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %_M_start.i8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast float** %_M_start.i8 to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !63
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %conv6 = zext i32 %5 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul7, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN22CAmbisonicBinauralizer7RefreshEv(%class.CAmbisonicBinauralizer* nocapture %this) unnamed_addr #7 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, float** nocapture readonly %ppfDst) local_unnamed_addr #3 align 2 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %m_nFFTSize208 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %_M_start.i522 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i522 to i8**
  %_M_head_impl.i.i.i.i.i.i.i520 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize220 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i517 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i515 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nFFTBins239 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i490 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %m_fFFTScaler331 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %m_nOverlapLength347 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %3 = load i8*, i8** %0, align 8, !tbaa !63
  %4 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %conv209 = zext i32 %4 to i64
  %mul210 = shl nuw nsw i64 %conv209, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul210, i1 false)
  %5 = load i32, i32* %1, align 8, !tbaa !53
  %cmp213527 = icmp eq i32 %5, 0
  br i1 %cmp213527, label %entry.for.cond327.preheader_crit_edge, label %for.body214.lr.ph

entry.for.cond327.preheader_crit_edge:            ; preds = %entry
  %.pre = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  br label %for.cond327.preheader

for.body214.lr.ph:                                ; preds = %entry
  %_M_start.i511 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body214

for.cond327.preheader:                            ; preds = %for.inc324, %entry.for.cond327.preheader_crit_edge
  %6 = phi i32 [ %.pre, %entry.for.cond327.preheader_crit_edge ], [ %37, %for.inc324 ]
  %cmp329529 = icmp eq i32 %6, 0
  br i1 %cmp329529, label %for.cond327.preheader.for.end338_crit_edge, label %for.body330.lr.ph

for.cond327.preheader.for.end338_crit_edge:       ; preds = %for.cond327.preheader
  %.pre546 = load i8*, i8** %0, align 8, !tbaa !63
  br label %for.end338

for.body330.lr.ph:                                ; preds = %for.cond327.preheader
  %7 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %8 = zext i32 %6 to i64
  %9 = bitcast float* %7 to i8*
  %10 = add nsw i64 %8, -1
  %xtraiter585 = and i64 %8, 3
  %11 = icmp ult i64 %10, 3
  br i1 %11, label %for.end338.loopexit.unr-lcssa, label %for.body330.lr.ph.new

for.body330.lr.ph.new:                            ; preds = %for.body330.lr.ph
  %unroll_iter588 = sub nsw i64 %8, %xtraiter585
  br label %for.body330

for.body214:                                      ; preds = %for.inc324, %for.body214.lr.ph
  %indvars.iv538 = phi i64 [ 0, %for.body214.lr.ph ], [ %indvars.iv.next539, %for.inc324 ]
  %12 = load i8*, i8** %2, align 8, !tbaa !63
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i520, align 8, !tbaa !43
  %arrayidx.i521 = getelementptr inbounds float*, float** %13, i64 %indvars.iv538
  %14 = bitcast float** %arrayidx.i521 to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !43
  %16 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv221 = zext i32 %16 to i64
  %mul222 = shl nuw nsw i64 %conv221, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %15, i64 %mul222, i1 false)
  %17 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv225 = zext i32 %17 to i64
  %18 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %add.ptr.i519 = getelementptr inbounds float, float* %18, i64 %conv225
  %19 = bitcast float* %add.ptr.i519 to i8*
  %20 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %sub229 = sub i32 %20, %17
  %conv230 = zext i32 %sub229 to i64
  %mul231 = shl nuw nsw i64 %conv230, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 %mul231, i1 false)
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i517, align 8, !tbaa !43
  %22 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %23 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %21, float* %22, %struct.kiss_fft_cpx* %23) #24
  %24 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !182
  %cmp240523 = icmp eq i32 %24, 0
  br i1 %cmp240523, label %for.end303, label %for.body241.lr.ph

for.body241.lr.ph:                                ; preds = %for.body214
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  %26 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i511, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i.i509 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %26, i64 %indvars.iv538, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i509, align 8, !tbaa !43
  br label %for.body241

for.body241:                                      ; preds = %for.body241, %for.body241.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body241.lr.ph ], [ %indvars.iv.next, %for.body241 ]
  %r245 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 0
  %28 = load float, float* %r245, align 4, !tbaa !136
  %r253 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %27, i64 %indvars.iv, i32 0
  %29 = load float, float* %r253, align 4, !tbaa !136
  %mul254 = fmul fast float %29, %28
  %i258 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i258, align 4, !tbaa !138
  %i266 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %27, i64 %indvars.iv, i32 1
  %31 = load float, float* %i266, align 4, !tbaa !138
  %mul267 = fmul fast float %31, %30
  %sub268 = fsub fast float %mul254, %mul267
  %mul282 = fmul fast float %31, %28
  %mul295 = fmul fast float %30, %29
  %add296 = fadd fast float %mul282, %mul295
  store float %sub268, float* %r245, align 4
  store float %add296, float* %i258, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %32 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !182
  %33 = zext i32 %32 to i64
  %cmp240 = icmp ult i64 %indvars.iv.next, %33
  br i1 %cmp240, label %for.body241, label %for.end303

for.end303:                                       ; preds = %for.body241, %for.body214
  %34 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i490, align 8, !tbaa !43
  %35 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  %36 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %34, %struct.kiss_fft_cpx* %35, float* %36) #24
  %37 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %cmp312525 = icmp eq i32 %37, 0
  br i1 %cmp312525, label %for.inc324, label %for.body313.lr.ph

for.body313.lr.ph:                                ; preds = %for.end303
  %38 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %39 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %40 = zext i32 %37 to i64
  %41 = add nsw i64 %40, -1
  %xtraiter595 = and i64 %40, 3
  %42 = icmp ult i64 %41, 3
  br i1 %42, label %for.inc324.loopexit.unr-lcssa, label %for.body313.lr.ph.new

for.body313.lr.ph.new:                            ; preds = %for.body313.lr.ph
  %unroll_iter598 = sub nsw i64 %40, %xtraiter595
  br label %for.body313

for.body313:                                      ; preds = %for.body313, %for.body313.lr.ph.new
  %indvars.iv536 = phi i64 [ 0, %for.body313.lr.ph.new ], [ %indvars.iv.next537.3, %for.body313 ]
  %niter599 = phi i64 [ %unroll_iter598, %for.body313.lr.ph.new ], [ %niter599.nsub.3, %for.body313 ]
  %add.ptr.i488 = getelementptr inbounds float, float* %38, i64 %indvars.iv536
  %43 = load float, float* %add.ptr.i488, align 4, !tbaa !47
  %add.ptr.i486 = getelementptr inbounds float, float* %39, i64 %indvars.iv536
  %44 = load float, float* %add.ptr.i486, align 4, !tbaa !47
  %add320 = fadd fast float %44, %43
  store float %add320, float* %add.ptr.i486, align 4, !tbaa !47
  %indvars.iv.next537 = or i64 %indvars.iv536, 1
  %add.ptr.i488.1601 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537
  %45 = load float, float* %add.ptr.i488.1601, align 4, !tbaa !47
  %add.ptr.i486.1602 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537
  %46 = load float, float* %add.ptr.i486.1602, align 4, !tbaa !47
  %add320.1603 = fadd fast float %46, %45
  store float %add320.1603, float* %add.ptr.i486.1602, align 4, !tbaa !47
  %indvars.iv.next537.1604 = or i64 %indvars.iv536, 2
  %add.ptr.i488.2 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537.1604
  %47 = load float, float* %add.ptr.i488.2, align 4, !tbaa !47
  %add.ptr.i486.2 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537.1604
  %48 = load float, float* %add.ptr.i486.2, align 4, !tbaa !47
  %add320.2 = fadd fast float %48, %47
  store float %add320.2, float* %add.ptr.i486.2, align 4, !tbaa !47
  %indvars.iv.next537.2 = or i64 %indvars.iv536, 3
  %add.ptr.i488.3 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537.2
  %49 = load float, float* %add.ptr.i488.3, align 4, !tbaa !47
  %add.ptr.i486.3 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537.2
  %50 = load float, float* %add.ptr.i486.3, align 4, !tbaa !47
  %add320.3 = fadd fast float %50, %49
  store float %add320.3, float* %add.ptr.i486.3, align 4, !tbaa !47
  %indvars.iv.next537.3 = add nuw nsw i64 %indvars.iv536, 4
  %niter599.nsub.3 = add i64 %niter599, -4
  %niter599.ncmp.3 = icmp eq i64 %niter599.nsub.3, 0
  br i1 %niter599.ncmp.3, label %for.inc324.loopexit.unr-lcssa, label %for.body313

for.inc324.loopexit.unr-lcssa:                    ; preds = %for.body313, %for.body313.lr.ph
  %indvars.iv536.unr = phi i64 [ 0, %for.body313.lr.ph ], [ %indvars.iv.next537.3, %for.body313 ]
  %lcmp.mod597 = icmp eq i64 %xtraiter595, 0
  br i1 %lcmp.mod597, label %for.inc324, label %for.body313.epil

for.body313.epil:                                 ; preds = %for.body313.epil, %for.inc324.loopexit.unr-lcssa
  %indvars.iv536.epil = phi i64 [ %indvars.iv.next537.epil, %for.body313.epil ], [ %indvars.iv536.unr, %for.inc324.loopexit.unr-lcssa ]
  %epil.iter596 = phi i64 [ %epil.iter596.sub, %for.body313.epil ], [ %xtraiter595, %for.inc324.loopexit.unr-lcssa ]
  %add.ptr.i488.epil = getelementptr inbounds float, float* %38, i64 %indvars.iv536.epil
  %51 = load float, float* %add.ptr.i488.epil, align 4, !tbaa !47
  %add.ptr.i486.epil = getelementptr inbounds float, float* %39, i64 %indvars.iv536.epil
  %52 = load float, float* %add.ptr.i486.epil, align 4, !tbaa !47
  %add320.epil = fadd fast float %52, %51
  store float %add320.epil, float* %add.ptr.i486.epil, align 4, !tbaa !47
  %indvars.iv.next537.epil = add nuw nsw i64 %indvars.iv536.epil, 1
  %epil.iter596.sub = add i64 %epil.iter596, -1
  %epil.iter596.cmp = icmp eq i64 %epil.iter596.sub, 0
  br i1 %epil.iter596.cmp, label %for.inc324, label %for.body313.epil, !llvm.loop !187

for.inc324:                                       ; preds = %for.body313.epil, %for.inc324.loopexit.unr-lcssa, %for.end303
  %indvars.iv.next539 = add nuw nsw i64 %indvars.iv538, 1
  %53 = load i32, i32* %1, align 8, !tbaa !53
  %54 = zext i32 %53 to i64
  %cmp213 = icmp ult i64 %indvars.iv.next539, %54
  br i1 %cmp213, label %for.body214, label %for.cond327.preheader

for.body330:                                      ; preds = %for.body330, %for.body330.lr.ph.new
  %indvars.iv540 = phi i64 [ 0, %for.body330.lr.ph.new ], [ %indvars.iv.next541.3, %for.body330 ]
  %niter589 = phi i64 [ %unroll_iter588, %for.body330.lr.ph.new ], [ %niter589.nsub.3, %for.body330 ]
  %55 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484 = getelementptr inbounds float, float* %7, i64 %indvars.iv540
  %56 = load float, float* %add.ptr.i484, align 4, !tbaa !47
  %mul335 = fmul fast float %56, %55
  store float %mul335, float* %add.ptr.i484, align 4, !tbaa !47
  %indvars.iv.next541 = or i64 %indvars.iv540, 1
  %57 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1591 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541
  %58 = load float, float* %add.ptr.i484.1591, align 4, !tbaa !47
  %mul335.1592 = fmul fast float %58, %57
  store float %mul335.1592, float* %add.ptr.i484.1591, align 4, !tbaa !47
  %indvars.iv.next541.1593 = or i64 %indvars.iv540, 2
  %59 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541.1593
  %60 = load float, float* %add.ptr.i484.2, align 4, !tbaa !47
  %mul335.2 = fmul fast float %60, %59
  store float %mul335.2, float* %add.ptr.i484.2, align 4, !tbaa !47
  %indvars.iv.next541.2 = or i64 %indvars.iv540, 3
  %61 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541.2
  %62 = load float, float* %add.ptr.i484.3, align 4, !tbaa !47
  %mul335.3 = fmul fast float %62, %61
  store float %mul335.3, float* %add.ptr.i484.3, align 4, !tbaa !47
  %indvars.iv.next541.3 = add nuw nsw i64 %indvars.iv540, 4
  %niter589.nsub.3 = add i64 %niter589, -4
  %niter589.ncmp.3 = icmp eq i64 %niter589.nsub.3, 0
  br i1 %niter589.ncmp.3, label %for.end338.loopexit.unr-lcssa, label %for.body330

for.end338.loopexit.unr-lcssa:                    ; preds = %for.body330, %for.body330.lr.ph
  %indvars.iv540.unr = phi i64 [ 0, %for.body330.lr.ph ], [ %indvars.iv.next541.3, %for.body330 ]
  %lcmp.mod587 = icmp eq i64 %xtraiter585, 0
  br i1 %lcmp.mod587, label %for.end338, label %for.body330.epil

for.body330.epil:                                 ; preds = %for.body330.epil, %for.end338.loopexit.unr-lcssa
  %indvars.iv540.epil = phi i64 [ %indvars.iv.next541.epil, %for.body330.epil ], [ %indvars.iv540.unr, %for.end338.loopexit.unr-lcssa ]
  %epil.iter586 = phi i64 [ %epil.iter586.sub, %for.body330.epil ], [ %xtraiter585, %for.end338.loopexit.unr-lcssa ]
  %63 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv540.epil
  %64 = load float, float* %add.ptr.i484.epil, align 4, !tbaa !47
  %mul335.epil = fmul fast float %64, %63
  store float %mul335.epil, float* %add.ptr.i484.epil, align 4, !tbaa !47
  %indvars.iv.next541.epil = add nuw nsw i64 %indvars.iv540.epil, 1
  %epil.iter586.sub = add i64 %epil.iter586, -1
  %epil.iter586.cmp = icmp eq i64 %epil.iter586.sub, 0
  br i1 %epil.iter586.cmp, label %for.end338, label %for.body330.epil, !llvm.loop !188

for.end338:                                       ; preds = %for.body330.epil, %for.end338.loopexit.unr-lcssa, %for.cond327.preheader.for.end338_crit_edge
  %65 = phi i8* [ %.pre546, %for.cond327.preheader.for.end338_crit_edge ], [ %9, %for.body330.epil ], [ %9, %for.end338.loopexit.unr-lcssa ]
  %66 = bitcast float** %ppfDst to i8**
  %67 = load i8*, i8** %66, align 8, !tbaa !43
  %68 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv344 = zext i32 %68 to i64
  %mul345 = shl nuw nsw i64 %conv344, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %65, i64 %mul345, i1 false)
  %69 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !180
  %cmp348531 = icmp eq i32 %69, 0
  %arrayidx352 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  br i1 %cmp348531, label %for.end338.for.end362_crit_edge, label %for.body349.lr.ph

for.end338.for.end362_crit_edge:                  ; preds = %for.end338
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %arrayidx352 to i8**
  %.pre547 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !63
  br label %for.end362

for.body349.lr.ph:                                ; preds = %for.end338
  %_M_start.i480 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load float*, float** %_M_start.i480, align 8, !tbaa !63
  %71 = load float*, float** %ppfDst, align 8, !tbaa !43
  %72 = zext i32 %69 to i64
  %73 = bitcast float* %70 to i8*
  %74 = add nsw i64 %72, -1
  %xtraiter574 = and i64 %72, 3
  %75 = icmp ult i64 %74, 3
  br i1 %75, label %for.end362.loopexit.unr-lcssa, label %for.body349.lr.ph.new

for.body349.lr.ph.new:                            ; preds = %for.body349.lr.ph
  %unroll_iter577 = sub nsw i64 %72, %xtraiter574
  br label %for.body349

for.body349:                                      ; preds = %for.body349, %for.body349.lr.ph.new
  %indvars.iv542 = phi i64 [ 0, %for.body349.lr.ph.new ], [ %indvars.iv.next543.3, %for.body349 ]
  %niter578 = phi i64 [ %unroll_iter577, %for.body349.lr.ph.new ], [ %niter578.nsub.3, %for.body349 ]
  %add.ptr.i481 = getelementptr inbounds float, float* %70, i64 %indvars.iv542
  %76 = load float, float* %add.ptr.i481, align 4, !tbaa !47
  %arrayidx358 = getelementptr inbounds float, float* %71, i64 %indvars.iv542
  %77 = load float, float* %arrayidx358, align 4, !tbaa !47
  %add359 = fadd fast float %77, %76
  store float %add359, float* %arrayidx358, align 4, !tbaa !47
  %indvars.iv.next543 = or i64 %indvars.iv542, 1
  %add.ptr.i481.1580 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543
  %78 = load float, float* %add.ptr.i481.1580, align 4, !tbaa !47
  %arrayidx358.1581 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543
  %79 = load float, float* %arrayidx358.1581, align 4, !tbaa !47
  %add359.1582 = fadd fast float %79, %78
  store float %add359.1582, float* %arrayidx358.1581, align 4, !tbaa !47
  %indvars.iv.next543.1583 = or i64 %indvars.iv542, 2
  %add.ptr.i481.2 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543.1583
  %80 = load float, float* %add.ptr.i481.2, align 4, !tbaa !47
  %arrayidx358.2 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543.1583
  %81 = load float, float* %arrayidx358.2, align 4, !tbaa !47
  %add359.2 = fadd fast float %81, %80
  store float %add359.2, float* %arrayidx358.2, align 4, !tbaa !47
  %indvars.iv.next543.2 = or i64 %indvars.iv542, 3
  %add.ptr.i481.3 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543.2
  %82 = load float, float* %add.ptr.i481.3, align 4, !tbaa !47
  %arrayidx358.3 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543.2
  %83 = load float, float* %arrayidx358.3, align 4, !tbaa !47
  %add359.3 = fadd fast float %83, %82
  store float %add359.3, float* %arrayidx358.3, align 4, !tbaa !47
  %indvars.iv.next543.3 = add nuw nsw i64 %indvars.iv542, 4
  %niter578.nsub.3 = add i64 %niter578, -4
  %niter578.ncmp.3 = icmp eq i64 %niter578.nsub.3, 0
  br i1 %niter578.ncmp.3, label %for.end362.loopexit.unr-lcssa, label %for.body349

for.end362.loopexit.unr-lcssa:                    ; preds = %for.body349, %for.body349.lr.ph
  %indvars.iv542.unr = phi i64 [ 0, %for.body349.lr.ph ], [ %indvars.iv.next543.3, %for.body349 ]
  %lcmp.mod576 = icmp eq i64 %xtraiter574, 0
  br i1 %lcmp.mod576, label %for.end362.loopexit, label %for.body349.epil

for.body349.epil:                                 ; preds = %for.body349.epil, %for.end362.loopexit.unr-lcssa
  %indvars.iv542.epil = phi i64 [ %indvars.iv.next543.epil, %for.body349.epil ], [ %indvars.iv542.unr, %for.end362.loopexit.unr-lcssa ]
  %epil.iter575 = phi i64 [ %epil.iter575.sub, %for.body349.epil ], [ %xtraiter574, %for.end362.loopexit.unr-lcssa ]
  %add.ptr.i481.epil = getelementptr inbounds float, float* %70, i64 %indvars.iv542.epil
  %84 = load float, float* %add.ptr.i481.epil, align 4, !tbaa !47
  %arrayidx358.epil = getelementptr inbounds float, float* %71, i64 %indvars.iv542.epil
  %85 = load float, float* %arrayidx358.epil, align 4, !tbaa !47
  %add359.epil = fadd fast float %85, %84
  store float %add359.epil, float* %arrayidx358.epil, align 4, !tbaa !47
  %indvars.iv.next543.epil = add nuw nsw i64 %indvars.iv542.epil, 1
  %epil.iter575.sub = add i64 %epil.iter575, -1
  %epil.iter575.cmp = icmp eq i64 %epil.iter575.sub, 0
  br i1 %epil.iter575.cmp, label %for.end362.loopexit, label %for.body349.epil, !llvm.loop !189

for.end362.loopexit:                              ; preds = %for.body349.epil, %for.end362.loopexit.unr-lcssa
  %phitmp = zext i32 %69 to i64
  %phitmp555 = shl nuw nsw i64 %phitmp, 2
  br label %for.end362

for.end362:                                       ; preds = %for.end362.loopexit, %for.end338.for.end362_crit_edge
  %86 = phi i8* [ %.pre547, %for.end338.for.end362_crit_edge ], [ %73, %for.end362.loopexit ]
  %.lcssa = phi i64 [ 0, %for.end338.for.end362_crit_edge ], [ %phitmp555, %for.end362.loopexit ]
  %87 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv369 = zext i32 %87 to i64
  %88 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %88, i64 %conv369
  %89 = bitcast float* %add.ptr.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* nonnull align 4 %89, i64 %.lcssa, i1 false)
  %90 = load i8*, i8** %0, align 8, !tbaa !63
  %91 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %conv209.1 = zext i32 %91 to i64
  %mul210.1 = shl nuw nsw i64 %conv209.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 %mul210.1, i1 false)
  %92 = load i32, i32* %1, align 8, !tbaa !53
  %cmp213527.1 = icmp eq i32 %92, 0
  br i1 %cmp213527.1, label %for.end362.for.cond327.preheader.1_crit_edge, label %for.body214.lr.ph.1

for.end362.for.cond327.preheader.1_crit_edge:     ; preds = %for.end362
  %.pre548 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  br label %for.cond327.preheader.1

for.body214.lr.ph.1:                              ; preds = %for.end362
  %_M_start.i511.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 0
  br label %for.body214.1

for.body214.1:                                    ; preds = %for.inc324.1, %for.body214.lr.ph.1
  %indvars.iv538.1 = phi i64 [ 0, %for.body214.lr.ph.1 ], [ %indvars.iv.next539.1, %for.inc324.1 ]
  %93 = load i8*, i8** %2, align 8, !tbaa !63
  %94 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i520, align 8, !tbaa !43
  %arrayidx.i521.1 = getelementptr inbounds float*, float** %94, i64 %indvars.iv538.1
  %95 = bitcast float** %arrayidx.i521.1 to i8**
  %96 = load i8*, i8** %95, align 8, !tbaa !43
  %97 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv221.1 = zext i32 %97 to i64
  %mul222.1 = shl nuw nsw i64 %conv221.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %96, i64 %mul222.1, i1 false)
  %98 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv225.1 = zext i32 %98 to i64
  %99 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %add.ptr.i519.1 = getelementptr inbounds float, float* %99, i64 %conv225.1
  %100 = bitcast float* %add.ptr.i519.1 to i8*
  %101 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %sub229.1 = sub i32 %101, %98
  %conv230.1 = zext i32 %sub229.1 to i64
  %mul231.1 = shl nuw nsw i64 %conv230.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 0, i64 %mul231.1, i1 false)
  %102 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i517, align 8, !tbaa !43
  %103 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %104 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %102, float* %103, %struct.kiss_fft_cpx* %104) #24
  %105 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !182
  %cmp240523.1 = icmp eq i32 %105, 0
  br i1 %cmp240523.1, label %for.end303.1, label %for.body241.lr.ph.1

for.body241.lr.ph.1:                              ; preds = %for.body214.1
  %106 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  %107 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i511.1, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i.i509.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %107, i64 %indvars.iv538.1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i509.1, align 8, !tbaa !43
  br label %for.body241.1

for.body241.1:                                    ; preds = %for.body241.1, %for.body241.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body241.lr.ph.1 ], [ %indvars.iv.next.1, %for.body241.1 ]
  %r245.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %106, i64 %indvars.iv.1, i32 0
  %109 = load float, float* %r245.1, align 4, !tbaa !136
  %r253.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %108, i64 %indvars.iv.1, i32 0
  %110 = load float, float* %r253.1, align 4, !tbaa !136
  %mul254.1 = fmul fast float %110, %109
  %i258.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %106, i64 %indvars.iv.1, i32 1
  %111 = load float, float* %i258.1, align 4, !tbaa !138
  %i266.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %108, i64 %indvars.iv.1, i32 1
  %112 = load float, float* %i266.1, align 4, !tbaa !138
  %mul267.1 = fmul fast float %112, %111
  %sub268.1 = fsub fast float %mul254.1, %mul267.1
  %mul282.1 = fmul fast float %112, %109
  %mul295.1 = fmul fast float %111, %110
  %add296.1 = fadd fast float %mul282.1, %mul295.1
  store float %sub268.1, float* %r245.1, align 4
  store float %add296.1, float* %i258.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %113 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !182
  %114 = zext i32 %113 to i64
  %cmp240.1 = icmp ult i64 %indvars.iv.next.1, %114
  br i1 %cmp240.1, label %for.body241.1, label %for.end303.1

for.end303.1:                                     ; preds = %for.body241.1, %for.body214.1
  %115 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i490, align 8, !tbaa !43
  %116 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i515, align 8, !tbaa !43
  %117 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %115, %struct.kiss_fft_cpx* %116, float* %117) #24
  %118 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !181
  %cmp312525.1 = icmp eq i32 %118, 0
  br i1 %cmp312525.1, label %for.inc324.1, label %for.body313.lr.ph.1

for.body313.lr.ph.1:                              ; preds = %for.end303.1
  %119 = load float*, float** %_M_start.i522, align 8, !tbaa !63
  %120 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %121 = zext i32 %118 to i64
  %122 = add nsw i64 %121, -1
  %xtraiter569 = and i64 %121, 3
  %123 = icmp ult i64 %122, 3
  br i1 %123, label %for.inc324.1.loopexit.unr-lcssa, label %for.body313.lr.ph.1.new

for.body313.lr.ph.1.new:                          ; preds = %for.body313.lr.ph.1
  %unroll_iter572 = sub nsw i64 %121, %xtraiter569
  br label %for.body313.1

for.body313.1:                                    ; preds = %for.body313.1, %for.body313.lr.ph.1.new
  %indvars.iv536.1 = phi i64 [ 0, %for.body313.lr.ph.1.new ], [ %indvars.iv.next537.1.3, %for.body313.1 ]
  %niter573 = phi i64 [ %unroll_iter572, %for.body313.lr.ph.1.new ], [ %niter573.nsub.3, %for.body313.1 ]
  %add.ptr.i488.1 = getelementptr inbounds float, float* %119, i64 %indvars.iv536.1
  %124 = load float, float* %add.ptr.i488.1, align 4, !tbaa !47
  %add.ptr.i486.1 = getelementptr inbounds float, float* %120, i64 %indvars.iv536.1
  %125 = load float, float* %add.ptr.i486.1, align 4, !tbaa !47
  %add320.1 = fadd fast float %125, %124
  store float %add320.1, float* %add.ptr.i486.1, align 4, !tbaa !47
  %indvars.iv.next537.1 = or i64 %indvars.iv536.1, 1
  %add.ptr.i488.1.1 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1
  %126 = load float, float* %add.ptr.i488.1.1, align 4, !tbaa !47
  %add.ptr.i486.1.1 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1
  %127 = load float, float* %add.ptr.i486.1.1, align 4, !tbaa !47
  %add320.1.1 = fadd fast float %127, %126
  store float %add320.1.1, float* %add.ptr.i486.1.1, align 4, !tbaa !47
  %indvars.iv.next537.1.1 = or i64 %indvars.iv536.1, 2
  %add.ptr.i488.1.2 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1.1
  %128 = load float, float* %add.ptr.i488.1.2, align 4, !tbaa !47
  %add.ptr.i486.1.2 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1.1
  %129 = load float, float* %add.ptr.i486.1.2, align 4, !tbaa !47
  %add320.1.2 = fadd fast float %129, %128
  store float %add320.1.2, float* %add.ptr.i486.1.2, align 4, !tbaa !47
  %indvars.iv.next537.1.2 = or i64 %indvars.iv536.1, 3
  %add.ptr.i488.1.3 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1.2
  %130 = load float, float* %add.ptr.i488.1.3, align 4, !tbaa !47
  %add.ptr.i486.1.3 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1.2
  %131 = load float, float* %add.ptr.i486.1.3, align 4, !tbaa !47
  %add320.1.3 = fadd fast float %131, %130
  store float %add320.1.3, float* %add.ptr.i486.1.3, align 4, !tbaa !47
  %indvars.iv.next537.1.3 = add nuw nsw i64 %indvars.iv536.1, 4
  %niter573.nsub.3 = add i64 %niter573, -4
  %niter573.ncmp.3 = icmp eq i64 %niter573.nsub.3, 0
  br i1 %niter573.ncmp.3, label %for.inc324.1.loopexit.unr-lcssa, label %for.body313.1

for.inc324.1.loopexit.unr-lcssa:                  ; preds = %for.body313.1, %for.body313.lr.ph.1
  %indvars.iv536.1.unr = phi i64 [ 0, %for.body313.lr.ph.1 ], [ %indvars.iv.next537.1.3, %for.body313.1 ]
  %lcmp.mod571 = icmp eq i64 %xtraiter569, 0
  br i1 %lcmp.mod571, label %for.inc324.1, label %for.body313.1.epil

for.body313.1.epil:                               ; preds = %for.body313.1.epil, %for.inc324.1.loopexit.unr-lcssa
  %indvars.iv536.1.epil = phi i64 [ %indvars.iv.next537.1.epil, %for.body313.1.epil ], [ %indvars.iv536.1.unr, %for.inc324.1.loopexit.unr-lcssa ]
  %epil.iter570 = phi i64 [ %epil.iter570.sub, %for.body313.1.epil ], [ %xtraiter569, %for.inc324.1.loopexit.unr-lcssa ]
  %add.ptr.i488.1.epil = getelementptr inbounds float, float* %119, i64 %indvars.iv536.1.epil
  %132 = load float, float* %add.ptr.i488.1.epil, align 4, !tbaa !47
  %add.ptr.i486.1.epil = getelementptr inbounds float, float* %120, i64 %indvars.iv536.1.epil
  %133 = load float, float* %add.ptr.i486.1.epil, align 4, !tbaa !47
  %add320.1.epil = fadd fast float %133, %132
  store float %add320.1.epil, float* %add.ptr.i486.1.epil, align 4, !tbaa !47
  %indvars.iv.next537.1.epil = add nuw nsw i64 %indvars.iv536.1.epil, 1
  %epil.iter570.sub = add i64 %epil.iter570, -1
  %epil.iter570.cmp = icmp eq i64 %epil.iter570.sub, 0
  br i1 %epil.iter570.cmp, label %for.inc324.1, label %for.body313.1.epil, !llvm.loop !190

for.inc324.1:                                     ; preds = %for.body313.1.epil, %for.inc324.1.loopexit.unr-lcssa, %for.end303.1
  %indvars.iv.next539.1 = add nuw nsw i64 %indvars.iv538.1, 1
  %134 = load i32, i32* %1, align 8, !tbaa !53
  %135 = zext i32 %134 to i64
  %cmp213.1 = icmp ult i64 %indvars.iv.next539.1, %135
  br i1 %cmp213.1, label %for.body214.1, label %for.cond327.preheader.1

for.cond327.preheader.1:                          ; preds = %for.inc324.1, %for.end362.for.cond327.preheader.1_crit_edge
  %136 = phi i32 [ %.pre548, %for.end362.for.cond327.preheader.1_crit_edge ], [ %118, %for.inc324.1 ]
  %cmp329529.1 = icmp eq i32 %136, 0
  br i1 %cmp329529.1, label %for.cond327.preheader.1.for.end338.1_crit_edge, label %for.body330.lr.ph.1

for.cond327.preheader.1.for.end338.1_crit_edge:   ; preds = %for.cond327.preheader.1
  %.pre549 = load i8*, i8** %0, align 8, !tbaa !63
  br label %for.end338.1

for.body330.lr.ph.1:                              ; preds = %for.cond327.preheader.1
  %137 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %138 = zext i32 %136 to i64
  %139 = bitcast float* %137 to i8*
  %140 = add nsw i64 %138, -1
  %xtraiter564 = and i64 %138, 3
  %141 = icmp ult i64 %140, 3
  br i1 %141, label %for.end338.1.loopexit.unr-lcssa, label %for.body330.lr.ph.1.new

for.body330.lr.ph.1.new:                          ; preds = %for.body330.lr.ph.1
  %unroll_iter567 = sub nsw i64 %138, %xtraiter564
  br label %for.body330.1

for.body330.1:                                    ; preds = %for.body330.1, %for.body330.lr.ph.1.new
  %indvars.iv540.1 = phi i64 [ 0, %for.body330.lr.ph.1.new ], [ %indvars.iv.next541.1.3, %for.body330.1 ]
  %niter568 = phi i64 [ %unroll_iter567, %for.body330.lr.ph.1.new ], [ %niter568.nsub.3, %for.body330.1 ]
  %142 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1 = getelementptr inbounds float, float* %137, i64 %indvars.iv540.1
  %143 = load float, float* %add.ptr.i484.1, align 4, !tbaa !47
  %mul335.1 = fmul fast float %143, %142
  store float %mul335.1, float* %add.ptr.i484.1, align 4, !tbaa !47
  %indvars.iv.next541.1 = or i64 %indvars.iv540.1, 1
  %144 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1.1 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1
  %145 = load float, float* %add.ptr.i484.1.1, align 4, !tbaa !47
  %mul335.1.1 = fmul fast float %145, %144
  store float %mul335.1.1, float* %add.ptr.i484.1.1, align 4, !tbaa !47
  %indvars.iv.next541.1.1 = or i64 %indvars.iv540.1, 2
  %146 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1.2 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1.1
  %147 = load float, float* %add.ptr.i484.1.2, align 4, !tbaa !47
  %mul335.1.2 = fmul fast float %147, %146
  store float %mul335.1.2, float* %add.ptr.i484.1.2, align 4, !tbaa !47
  %indvars.iv.next541.1.2 = or i64 %indvars.iv540.1, 3
  %148 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1.3 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1.2
  %149 = load float, float* %add.ptr.i484.1.3, align 4, !tbaa !47
  %mul335.1.3 = fmul fast float %149, %148
  store float %mul335.1.3, float* %add.ptr.i484.1.3, align 4, !tbaa !47
  %indvars.iv.next541.1.3 = add nuw nsw i64 %indvars.iv540.1, 4
  %niter568.nsub.3 = add i64 %niter568, -4
  %niter568.ncmp.3 = icmp eq i64 %niter568.nsub.3, 0
  br i1 %niter568.ncmp.3, label %for.end338.1.loopexit.unr-lcssa, label %for.body330.1

for.end338.1.loopexit.unr-lcssa:                  ; preds = %for.body330.1, %for.body330.lr.ph.1
  %indvars.iv540.1.unr = phi i64 [ 0, %for.body330.lr.ph.1 ], [ %indvars.iv.next541.1.3, %for.body330.1 ]
  %lcmp.mod566 = icmp eq i64 %xtraiter564, 0
  br i1 %lcmp.mod566, label %for.end338.1, label %for.body330.1.epil

for.body330.1.epil:                               ; preds = %for.body330.1.epil, %for.end338.1.loopexit.unr-lcssa
  %indvars.iv540.1.epil = phi i64 [ %indvars.iv.next541.1.epil, %for.body330.1.epil ], [ %indvars.iv540.1.unr, %for.end338.1.loopexit.unr-lcssa ]
  %epil.iter565 = phi i64 [ %epil.iter565.sub, %for.body330.1.epil ], [ %xtraiter564, %for.end338.1.loopexit.unr-lcssa ]
  %150 = load float, float* %m_fFFTScaler331, align 8, !tbaa !183
  %add.ptr.i484.1.epil = getelementptr inbounds float, float* %137, i64 %indvars.iv540.1.epil
  %151 = load float, float* %add.ptr.i484.1.epil, align 4, !tbaa !47
  %mul335.1.epil = fmul fast float %151, %150
  store float %mul335.1.epil, float* %add.ptr.i484.1.epil, align 4, !tbaa !47
  %indvars.iv.next541.1.epil = add nuw nsw i64 %indvars.iv540.1.epil, 1
  %epil.iter565.sub = add i64 %epil.iter565, -1
  %epil.iter565.cmp = icmp eq i64 %epil.iter565.sub, 0
  br i1 %epil.iter565.cmp, label %for.end338.1, label %for.body330.1.epil, !llvm.loop !191

for.end338.1:                                     ; preds = %for.body330.1.epil, %for.end338.1.loopexit.unr-lcssa, %for.cond327.preheader.1.for.end338.1_crit_edge
  %152 = phi i8* [ %.pre549, %for.cond327.preheader.1.for.end338.1_crit_edge ], [ %139, %for.body330.1.epil ], [ %139, %for.end338.1.loopexit.unr-lcssa ]
  %arrayidx340.1 = getelementptr inbounds float*, float** %ppfDst, i64 1
  %153 = bitcast float** %arrayidx340.1 to i8**
  %154 = load i8*, i8** %153, align 8, !tbaa !43
  %155 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv344.1 = zext i32 %155 to i64
  %mul345.1 = shl nuw nsw i64 %conv344.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %152, i64 %mul345.1, i1 false)
  %156 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !180
  %cmp348531.1 = icmp eq i32 %156, 0
  %arrayidx352.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  br i1 %cmp348531.1, label %for.end338.1.for.end362.1_crit_edge, label %for.body349.lr.ph.1

for.end338.1.for.end362.1_crit_edge:              ; preds = %for.end338.1
  %.phi.trans.insert550 = bitcast %"class.std::vector.0"* %arrayidx352.1 to i8**
  %.pre551 = load i8*, i8** %.phi.trans.insert550, align 8, !tbaa !63
  br label %for.end362.1

for.body349.lr.ph.1:                              ; preds = %for.end338.1
  %_M_start.i480.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load float*, float** %_M_start.i480.1, align 8, !tbaa !63
  %158 = load float*, float** %arrayidx340.1, align 8, !tbaa !43
  %159 = zext i32 %156 to i64
  %160 = bitcast float* %157 to i8*
  %161 = add nsw i64 %159, -1
  %xtraiter = and i64 %159, 3
  %162 = icmp ult i64 %161, 3
  br i1 %162, label %for.end362.loopexit.1.unr-lcssa, label %for.body349.lr.ph.1.new

for.body349.lr.ph.1.new:                          ; preds = %for.body349.lr.ph.1
  %unroll_iter = sub nsw i64 %159, %xtraiter
  br label %for.body349.1

for.body349.1:                                    ; preds = %for.body349.1, %for.body349.lr.ph.1.new
  %indvars.iv542.1 = phi i64 [ 0, %for.body349.lr.ph.1.new ], [ %indvars.iv.next543.1.3, %for.body349.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body349.lr.ph.1.new ], [ %niter.nsub.3, %for.body349.1 ]
  %add.ptr.i481.1 = getelementptr inbounds float, float* %157, i64 %indvars.iv542.1
  %163 = load float, float* %add.ptr.i481.1, align 4, !tbaa !47
  %arrayidx358.1 = getelementptr inbounds float, float* %158, i64 %indvars.iv542.1
  %164 = load float, float* %arrayidx358.1, align 4, !tbaa !47
  %add359.1 = fadd fast float %164, %163
  store float %add359.1, float* %arrayidx358.1, align 4, !tbaa !47
  %indvars.iv.next543.1 = or i64 %indvars.iv542.1, 1
  %add.ptr.i481.1.1 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1
  %165 = load float, float* %add.ptr.i481.1.1, align 4, !tbaa !47
  %arrayidx358.1.1 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1
  %166 = load float, float* %arrayidx358.1.1, align 4, !tbaa !47
  %add359.1.1 = fadd fast float %166, %165
  store float %add359.1.1, float* %arrayidx358.1.1, align 4, !tbaa !47
  %indvars.iv.next543.1.1 = or i64 %indvars.iv542.1, 2
  %add.ptr.i481.1.2 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1.1
  %167 = load float, float* %add.ptr.i481.1.2, align 4, !tbaa !47
  %arrayidx358.1.2 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1.1
  %168 = load float, float* %arrayidx358.1.2, align 4, !tbaa !47
  %add359.1.2 = fadd fast float %168, %167
  store float %add359.1.2, float* %arrayidx358.1.2, align 4, !tbaa !47
  %indvars.iv.next543.1.2 = or i64 %indvars.iv542.1, 3
  %add.ptr.i481.1.3 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1.2
  %169 = load float, float* %add.ptr.i481.1.3, align 4, !tbaa !47
  %arrayidx358.1.3 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1.2
  %170 = load float, float* %arrayidx358.1.3, align 4, !tbaa !47
  %add359.1.3 = fadd fast float %170, %169
  store float %add359.1.3, float* %arrayidx358.1.3, align 4, !tbaa !47
  %indvars.iv.next543.1.3 = add nuw nsw i64 %indvars.iv542.1, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.end362.loopexit.1.unr-lcssa, label %for.body349.1

for.end362.loopexit.1.unr-lcssa:                  ; preds = %for.body349.1, %for.body349.lr.ph.1
  %indvars.iv542.1.unr = phi i64 [ 0, %for.body349.lr.ph.1 ], [ %indvars.iv.next543.1.3, %for.body349.1 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.end362.loopexit.1, label %for.body349.1.epil

for.body349.1.epil:                               ; preds = %for.body349.1.epil, %for.end362.loopexit.1.unr-lcssa
  %indvars.iv542.1.epil = phi i64 [ %indvars.iv.next543.1.epil, %for.body349.1.epil ], [ %indvars.iv542.1.unr, %for.end362.loopexit.1.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body349.1.epil ], [ %xtraiter, %for.end362.loopexit.1.unr-lcssa ]
  %add.ptr.i481.1.epil = getelementptr inbounds float, float* %157, i64 %indvars.iv542.1.epil
  %171 = load float, float* %add.ptr.i481.1.epil, align 4, !tbaa !47
  %arrayidx358.1.epil = getelementptr inbounds float, float* %158, i64 %indvars.iv542.1.epil
  %172 = load float, float* %arrayidx358.1.epil, align 4, !tbaa !47
  %add359.1.epil = fadd fast float %172, %171
  store float %add359.1.epil, float* %arrayidx358.1.epil, align 4, !tbaa !47
  %indvars.iv.next543.1.epil = add nuw nsw i64 %indvars.iv542.1.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end362.loopexit.1, label %for.body349.1.epil, !llvm.loop !192

for.end362.loopexit.1:                            ; preds = %for.body349.1.epil, %for.end362.loopexit.1.unr-lcssa
  %phitmp556 = zext i32 %156 to i64
  %phitmp557 = shl nuw nsw i64 %phitmp556, 2
  br label %for.end362.1

for.end362.1:                                     ; preds = %for.end362.loopexit.1, %for.end338.1.for.end362.1_crit_edge
  %173 = phi i8* [ %.pre551, %for.end338.1.for.end362.1_crit_edge ], [ %160, %for.end362.loopexit.1 ]
  %.lcssa.1 = phi i64 [ 0, %for.end338.1.for.end362.1_crit_edge ], [ %phitmp557, %for.end362.loopexit.1 ]
  %174 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !179
  %conv369.1 = zext i32 %174 to i64
  %175 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i.1 = getelementptr inbounds float, float* %175, i64 %conv369.1
  %176 = bitcast float* %add.ptr.i.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* nonnull align 4 %176, i64 %.lcssa.1, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !52, !range !55
  %tobool = icmp ne i8 %3, 0
  %call = tail call i32 @_Z15OrderToSpeakersjb(i32 %1, i1 zeroext %tobool) #24
  %4 = load i32, i32* %0, align 8, !tbaa !49
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24) #24
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %5, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %6 = bitcast i8* %_M_ctype.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !193
  %tobool.i47 = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.i47, label %if.then.i48, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit

if.then.i48:                                      ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit:    ; preds = %if.then
  %_M_widen_ok.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i, align 8, !tbaa !195
  %tobool.i = icmp eq i8 %8, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  %arrayidx.i31 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 9, i64 10
  %9 = load i8, i8* %arrayidx.i31, align 1, !tbaa !170
  br label %if.end

if.end.i:                                         ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %7) #24
  %10 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i32 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %10, align 8, !tbaa !40
  %vfn.i33 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i32, i64 6
  %11 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i33, align 8
  %call.i34 = tail call signext i8 %11(%"class.std::ctype"* nonnull %7, i8 signext 10) #24
  br label %if.end

if.else:                                          ; preds = %entry
  %call1.i17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39) #24
  %vtable.i19 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i20 = getelementptr i8, i8* %vtable.i19, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i20 to i64*
  %vbase.offset.i21 = load i64, i64* %12, align 8
  %add.ptr.i22 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i21
  %_M_ctype.i35 = getelementptr inbounds i8, i8* %add.ptr.i22, i64 240
  %13 = bitcast i8* %_M_ctype.i35 to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !193
  %tobool.i50 = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i50, label %if.then.i51, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53

if.then.i51:                                      ; preds = %if.else
  tail call void @_ZSt16__throw_bad_castv() #26
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53:  ; preds = %if.else
  %_M_widen_ok.i37 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i37, align 8, !tbaa !195
  %tobool.i38 = icmp eq i8 %15, 0
  br i1 %tobool.i38, label %if.end.i44, label %if.then.i40

if.then.i40:                                      ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  %arrayidx.i39 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i39, align 1, !tbaa !170
  br label %if.end

if.end.i44:                                       ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14) #24
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i41 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !40
  %vfn.i42 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i41, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i42, align 8
  %call.i43 = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10) #24
  br label %if.end

if.end:                                           ; preds = %if.end.i44, %if.then.i40, %if.end.i, %if.then.i
  %retval.0.i45.sink = phi i8 [ %9, %if.then.i ], [ %call.i34, %if.end.i ], [ %16, %if.then.i40 ], [ %call.i43, %if.end.i44 ]
  %nSpeakerSetUp.0 = phi i32 [ 13, %if.then.i ], [ 13, %if.end.i ], [ 12, %if.then.i40 ], [ 12, %if.end.i44 ]
  %call1.i24 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i45.sink) #24
  %call.i25 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i24) #24
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1
  %19 = load i32, i32* %0, align 8, !tbaa !49
  %20 = load i8, i8* %2, align 4, !tbaa !52, !range !55
  %tobool9 = icmp ne i8 %20, 0
  %21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %19, i32* %21, align 8, !tbaa !49
  %22 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 %20, i8* %22, align 4, !tbaa !52
  %call.i.i26 = tail call i32 @_Z17OrderToComponentsjb(i32 %19, i1 zeroext %tobool9) #24
  %23 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i26, i32* %23, align 8, !tbaa !53
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder, i32 %nSpeakerSetUp.0, i32 %call) #24
  %24 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoder to void (%class.CAmbisonicDecoder*)***
  %vtable.i27 = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %24, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i27, i64 4
  %25 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %25(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder) #24
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %26 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !146
  %cmp5.i = icmp eq i32 %26, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %27 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %27, i64 %indvars.iv.i
  %28 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i28 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %28, align 8, !tbaa !40
  %vfn.i29 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i28, i64 4
  %29 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i29, align 8
  tail call void %29(%class.CAmbisonicSpeaker* %arrayidx.i) #24
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %30 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !146
  %31 = zext i32 %30 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %31
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %if.end
  ret void
}

declare i32 @_Z15OrderToSpeakersjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %conv = zext i32 %0 to i64
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %1 = bitcast float** %_M_finish.i.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !61
  %3 = bitcast %"class.std::vector.0"* %m_pfScratchBufferA to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !63
  %sub.ptr.sub.i.i = sub i64 %2, %4
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %5 = inttoptr i64 %4 to float*
  %6 = inttoptr i64 %2 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferA, i64 %sub.i) #24
  %.pre = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %.pre125 = zext i32 %.pre to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %5, i64 %conv
  %tobool.i.i = icmp eq float* %add.ptr.i, %6
  br i1 %tobool.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then5.i
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then.i.i, %if.then5.i, %if.else.i, %if.then.i
  %conv3.pre-phi = phi i64 [ %.pre125, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ], [ %conv, %if.then.i.i ]
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13
  %_M_finish.i.i41 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast float** %_M_finish.i.i41 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !61
  %9 = bitcast %"class.std::vector.0"* %m_pfScratchBufferB to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !63
  %sub.ptr.sub.i.i42 = sub i64 %8, %10
  %sub.ptr.div.i.i43 = ashr exact i64 %sub.ptr.sub.i.i42, 2
  %cmp.i44 = icmp ugt i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  %11 = inttoptr i64 %10 to float*
  %12 = inttoptr i64 %8 to float*
  br i1 %cmp.i44, label %if.then.i46, label %if.else.i48

if.then.i46:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %sub.i45 = sub nsw i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferB, i64 %sub.i45) #24
  %.pre121 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %.pre126 = zext i32 %.pre121 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit53

if.else.i48:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %cmp4.i47 = icmp ult i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  br i1 %cmp4.i47, label %if.then5.i51, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit53

if.then5.i51:                                     ; preds = %if.else.i48
  %add.ptr.i49 = getelementptr inbounds float, float* %11, i64 %conv3.pre-phi
  %tobool.i.i50 = icmp eq float* %add.ptr.i49, %12
  br i1 %tobool.i.i50, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit53, label %if.then.i.i52

if.then.i.i52:                                    ; preds = %if.then5.i51
  store float* %add.ptr.i49, float** %_M_finish.i.i41, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit53

_ZNSt6vectorIfSaIfEE6resizeEm.exit53:             ; preds = %if.then.i.i52, %if.then5.i51, %if.else.i48, %if.then.i46
  %conv5.pre-phi = phi i64 [ %.pre126, %if.then.i46 ], [ %conv3.pre-phi, %if.else.i48 ], [ %conv3.pre-phi, %if.then5.i51 ], [ %conv3.pre-phi, %if.then.i.i52 ]
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14
  %_M_finish.i.i54 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast float** %_M_finish.i.i54 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !61
  %15 = bitcast %"class.std::vector.0"* %m_pfScratchBufferC to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !63
  %sub.ptr.sub.i.i55 = sub i64 %14, %16
  %sub.ptr.div.i.i56 = ashr exact i64 %sub.ptr.sub.i.i55, 2
  %cmp.i57 = icmp ugt i64 %conv5.pre-phi, %sub.ptr.div.i.i56
  %17 = inttoptr i64 %16 to float*
  %18 = inttoptr i64 %14 to float*
  br i1 %cmp.i57, label %if.then.i59, label %if.else.i61

if.then.i59:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit53
  %sub.i58 = sub nsw i64 %conv5.pre-phi, %sub.ptr.div.i.i56
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferC, i64 %sub.i58) #24
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit66

if.else.i61:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit53
  %cmp4.i60 = icmp ult i64 %conv5.pre-phi, %sub.ptr.div.i.i56
  br i1 %cmp4.i60, label %if.then5.i64, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit66

if.then5.i64:                                     ; preds = %if.else.i61
  %add.ptr.i62 = getelementptr inbounds float, float* %17, i64 %conv5.pre-phi
  %tobool.i.i63 = icmp eq float* %add.ptr.i62, %18
  br i1 %tobool.i.i63, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit66, label %if.then.i.i65

if.then.i.i65:                                    ; preds = %if.then5.i64
  store float* %add.ptr.i62, float** %_M_finish.i.i54, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit66

_ZNSt6vectorIfSaIfEE6resizeEm.exit66:             ; preds = %if.then.i.i65, %if.then5.i64, %if.else.i61, %if.then.i59
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %19 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %conv6 = zext i32 %19 to i64
  %_M_finish.i.i67 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast float** %_M_finish.i.i67 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !61
  %22 = bitcast %"class.std::vector.0"* %arrayidx to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !63
  %sub.ptr.sub.i.i68 = sub i64 %21, %23
  %sub.ptr.div.i.i69 = ashr exact i64 %sub.ptr.sub.i.i68, 2
  %cmp.i70 = icmp ult i64 %sub.ptr.div.i.i69, %conv6
  %24 = inttoptr i64 %23 to float*
  %25 = inttoptr i64 %21 to float*
  br i1 %cmp.i70, label %if.then.i72, label %if.else.i74

if.then.i72:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit66
  %sub.i71 = sub nsw i64 %conv6, %sub.ptr.div.i.i69
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx, i64 %sub.i71) #24
  %.pre122 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %.pre127 = zext i32 %.pre122 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit79

if.else.i74:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit66
  %cmp4.i73 = icmp ugt i64 %sub.ptr.div.i.i69, %conv6
  br i1 %cmp4.i73, label %if.then5.i77, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit79

if.then5.i77:                                     ; preds = %if.else.i74
  %add.ptr.i75 = getelementptr inbounds float, float* %24, i64 %conv6
  %tobool.i.i76 = icmp eq float* %add.ptr.i75, %25
  br i1 %tobool.i.i76, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit79, label %if.then.i.i78

if.then.i.i78:                                    ; preds = %if.then5.i77
  store float* %add.ptr.i75, float** %_M_finish.i.i67, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit79

_ZNSt6vectorIfSaIfEE6resizeEm.exit79:             ; preds = %if.then.i.i78, %if.then5.i77, %if.else.i74, %if.then.i72
  %conv10.pre-phi = phi i64 [ %.pre127, %if.then.i72 ], [ %conv6, %if.else.i74 ], [ %conv6, %if.then5.i77 ], [ %conv6, %if.then.i.i78 ]
  %arrayidx8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  %_M_finish.i.i80 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast float** %_M_finish.i.i80 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !61
  %28 = bitcast %"class.std::vector.0"* %arrayidx8 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !63
  %sub.ptr.sub.i.i81 = sub i64 %27, %29
  %sub.ptr.div.i.i82 = ashr exact i64 %sub.ptr.sub.i.i81, 2
  %cmp.i83 = icmp ugt i64 %conv10.pre-phi, %sub.ptr.div.i.i82
  %30 = inttoptr i64 %29 to float*
  %31 = inttoptr i64 %27 to float*
  br i1 %cmp.i83, label %if.then.i85, label %if.else.i87

if.then.i85:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit79
  %sub.i84 = sub nsw i64 %conv10.pre-phi, %sub.ptr.div.i.i82
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx8, i64 %sub.i84) #24
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit92

if.else.i87:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit79
  %cmp4.i86 = icmp ult i64 %conv10.pre-phi, %sub.ptr.div.i.i82
  br i1 %cmp4.i86, label %if.then5.i90, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit92

if.then5.i90:                                     ; preds = %if.else.i87
  %add.ptr.i88 = getelementptr inbounds float, float* %30, i64 %conv10.pre-phi
  %tobool.i.i89 = icmp eq float* %add.ptr.i88, %31
  br i1 %tobool.i.i89, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit92, label %if.then.i.i91

if.then.i.i91:                                    ; preds = %if.then5.i90
  store float* %add.ptr.i88, float** %_M_finish.i.i80, align 8, !tbaa !61
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit92

_ZNSt6vectorIfSaIfEE6resizeEm.exit92:             ; preds = %if.then.i.i91, %if.then5.i90, %if.else.i87, %if.then.i85
  %32 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %call = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %32, i32 0, i8* null, i64* null) #24
  %33 = ptrtoint %struct.kiss_fftr_state* %call to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !43
  store i64 %33, i64* %34, align 8, !tbaa !43
  %cmp.i93 = icmp eq i64 %35, 0
  br i1 %cmp.i93, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit, label %if.then.i94

if.then.i94:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit92
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %37 = inttoptr i64 %35 to i8*
  tail call void %36(i8* %37) #24
  br label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit: ; preds = %if.then.i94, %_ZNSt6vectorIfSaIfEE6resizeEm.exit92
  %38 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %call13 = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %38, i32 1, i8* null, i64* null) #24
  %39 = ptrtoint %struct.kiss_fftr_state* %call13 to i64
  %_M_head_impl.i.i.i.i.i.i95 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i95 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !43
  store i64 %39, i64* %40, align 8, !tbaa !43
  %cmp.i96 = icmp eq i64 %41, 0
  br i1 %cmp.i96, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit99, label %if.then.i98

if.then.i98:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %_M_head_impl.i.i.i.i.i.i.i97 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i97, align 8, !tbaa !43
  %43 = inttoptr i64 %41 to i8*
  tail call void %42(i8* %43) #24
  br label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit99

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit99: ; preds = %if.then.i98, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %44 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %arrayidx14 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0
  %45 = load i32, i32* %44, align 8, !tbaa !53
  %conv15 = zext i32 %45 to i64
  %_M_finish.i.i101 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::unique_ptr.33"** %_M_finish.i.i101 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !197
  %48 = bitcast %"class.std::vector.28"* %arrayidx14 to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !185
  %sub.ptr.sub.i.i102 = sub i64 %47, %49
  %sub.ptr.div.i.i103 = ashr exact i64 %sub.ptr.sub.i.i102, 3
  %cmp.i104 = icmp ult i64 %sub.ptr.div.i.i103, %conv15
  %50 = inttoptr i64 %49 to %"class.std::unique_ptr.33"*
  %51 = inttoptr i64 %47 to %"class.std::unique_ptr.33"*
  br i1 %cmp.i104, label %if.then.i106, label %if.else.i108

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %for.cond.cleanup19.1
  %52 = bitcast %struct.kiss_fft_cpx* %93 to i8*
  tail call void @_ZdaPv(i8* %52) #25
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit: ; preds = %for.cond.cleanup19.1, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i
  ret void

if.then.i106:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit99
  %sub.i105 = sub nsw i64 %conv15, %sub.ptr.div.i.i103
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* nonnull %arrayidx14, i64 %sub.i105) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.else.i108:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit99
  %cmp4.i107 = icmp ugt i64 %sub.ptr.div.i.i103, %conv15
  br i1 %cmp4.i107, label %if.then5.i111, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.then5.i111:                                    ; preds = %if.else.i108
  %add.ptr.i109 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %50, i64 %conv15
  %tobool.i.i110 = icmp eq %"class.std::unique_ptr.33"* %add.ptr.i109, %51
  br i1 %tobool.i.i110, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, %if.then5.i111
  %__first.addr.04.i.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i ], [ %add.ptr.i109, %if.then5.i111 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %53, null
  br i1 %cmp.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i.i
  %54 = bitcast %struct.kiss_fft_cpx* %53 to i8*
  tail call void @_ZdaPv(i8* %54) #25
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i, %for.body.i.i.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i, %51
  br i1 %cmp.i.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i, label %for.body.i.i.i.i.i

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i
  store %"class.std::unique_ptr.33"* %add.ptr.i109, %"class.std::unique_ptr.33"** %_M_finish.i.i101, align 8, !tbaa !197
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i, %if.then5.i111, %if.else.i108, %if.then.i106
  %55 = load i32, i32* %44, align 8, !tbaa !53
  %cmp18116 = icmp eq i32 %55, 0
  br i1 %cmp18116, label %for.cond.cleanup19, label %for.body20.lr.ph

for.body20.lr.ph:                                 ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %_M_start.i = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %arrayidx14, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body20

for.cond.cleanup19:                               ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %56 = phi i32 [ 0, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit ], [ %72, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115 ]
  %arrayidx14.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1
  %conv15.1 = zext i32 %56 to i64
  %_M_finish.i.i101.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::unique_ptr.33"** %_M_finish.i.i101.1 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !197
  %59 = bitcast %"class.std::vector.28"* %arrayidx14.1 to i64*
  %60 = load i64, i64* %59, align 8, !tbaa !185
  %sub.ptr.sub.i.i102.1 = sub i64 %58, %60
  %sub.ptr.div.i.i103.1 = ashr exact i64 %sub.ptr.sub.i.i102.1, 3
  %cmp.i104.1 = icmp ult i64 %sub.ptr.div.i.i103.1, %conv15.1
  %61 = inttoptr i64 %60 to %"class.std::unique_ptr.33"*
  %62 = inttoptr i64 %58 to %"class.std::unique_ptr.33"*
  br i1 %cmp.i104.1, label %if.then.i106.1, label %if.else.i108.1

for.body20:                                       ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115, %for.body20.lr.ph
  %63 = phi i32 [ %55, %for.body20.lr.ph ], [ %72, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115 ]
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115 ]
  %64 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i, align 8, !tbaa !185
  %add.ptr.i112 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %64, i64 %indvars.iv
  %65 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %conv26 = zext i32 %65 to i64
  %66 = shl nuw nsw i64 %conv26, 3
  %call27 = tail call i8* @_Znam(i64 %66) #25
  %67 = ptrtoint i8* %call27 to i64
  %68 = bitcast %"class.std::unique_ptr.33"* %add.ptr.i112 to i64*
  %69 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr.i112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %69, align 8, !tbaa !43
  store i64 %67, i64* %68, align 8, !tbaa !43
  %cmp.i113 = icmp eq %struct.kiss_fft_cpx* %70, null
  br i1 %cmp.i113, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114: ; preds = %for.body20
  %71 = bitcast %struct.kiss_fft_cpx* %70 to i8*
  tail call void @_ZdaPv(i8* %71) #25
  %.pre123 = load i32, i32* %44, align 8, !tbaa !53
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114, %for.body20
  %72 = phi i32 [ %63, %for.body20 ], [ %.pre123, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %73 = zext i32 %72 to i64
  %cmp18 = icmp ult i64 %indvars.iv.next, %73
  br i1 %cmp18, label %for.body20, label %for.cond.cleanup19

if.else.i108.1:                                   ; preds = %for.cond.cleanup19
  %cmp4.i107.1 = icmp ugt i64 %sub.ptr.div.i.i103.1, %conv15.1
  br i1 %cmp4.i107.1, label %if.then5.i111.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then5.i111.1:                                  ; preds = %if.else.i108.1
  %add.ptr.i109.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %61, i64 %conv15.1
  %tobool.i.i110.1 = icmp eq %"class.std::unique_ptr.33"* %add.ptr.i109.1, %62
  br i1 %tobool.i.i110.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1, label %for.body.i.i.i.i.i.1

for.body.i.i.i.i.i.1:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, %if.then5.i111.1
  %__first.addr.04.i.i.i.i.i.1 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.i.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1 ], [ %add.ptr.i109.1, %if.then5.i111.1 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %74, null
  br i1 %cmp.i.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i.i.1
  %75 = bitcast %struct.kiss_fft_cpx* %74 to i8*
  tail call void @_ZdaPv(i8* %75) #25
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.1, %for.body.i.i.i.i.i.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.i.1, i64 1
  %cmp.i.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.i.1, %62
  br i1 %cmp.i.i.i.i.i.1, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i.1, label %for.body.i.i.i.i.i.1

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i.1: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1
  store %"class.std::unique_ptr.33"* %add.ptr.i109.1, %"class.std::unique_ptr.33"** %_M_finish.i.i101.1, align 8, !tbaa !197
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then.i106.1:                                   ; preds = %for.cond.cleanup19
  %sub.i105.1 = sub nsw i64 %conv15.1, %sub.ptr.div.i.i103.1
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* nonnull %arrayidx14.1, i64 %sub.i105.1) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1: ; preds = %if.then.i106.1, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.i.1, %if.then5.i111.1, %if.else.i108.1
  %76 = load i32, i32* %44, align 8, !tbaa !53
  %cmp18116.1 = icmp eq i32 %76, 0
  br i1 %cmp18116.1, label %for.cond.cleanup19.1, label %for.body20.lr.ph.1

for.body20.lr.ph.1:                               ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %_M_start.i.1 = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %arrayidx14.1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body20.1

for.body20.1:                                     ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1, %for.body20.lr.ph.1
  %77 = phi i32 [ %76, %for.body20.lr.ph.1 ], [ %86, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1 ]
  %indvars.iv.1 = phi i64 [ 0, %for.body20.lr.ph.1 ], [ %indvars.iv.next.1, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1 ]
  %78 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i.1, align 8, !tbaa !185
  %add.ptr.i112.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %78, i64 %indvars.iv.1
  %79 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %conv26.1 = zext i32 %79 to i64
  %80 = shl nuw nsw i64 %conv26.1, 3
  %call27.1 = tail call i8* @_Znam(i64 %80) #25
  %81 = ptrtoint i8* %call27.1 to i64
  %82 = bitcast %"class.std::unique_ptr.33"* %add.ptr.i112.1 to i64*
  %83 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr.i112.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %83, align 8, !tbaa !43
  store i64 %81, i64* %82, align 8, !tbaa !43
  %cmp.i113.1 = icmp eq %struct.kiss_fft_cpx* %84, null
  br i1 %cmp.i113.1, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114.1: ; preds = %for.body20.1
  %85 = bitcast %struct.kiss_fft_cpx* %84 to i8*
  tail call void @_ZdaPv(i8* %85) #25
  %.pre124 = load i32, i32* %44, align 8, !tbaa !53
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114.1, %for.body20.1
  %86 = phi i32 [ %.pre124, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i114.1 ], [ %77, %for.body20.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %87 = zext i32 %86 to i64
  %cmp18.1 = icmp ult i64 %indvars.iv.next.1, %87
  br i1 %cmp18.1, label %for.body20.1, label %for.cond.cleanup19.1

for.cond.cleanup19.1:                             ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit115.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11
  %88 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %conv32 = zext i32 %88 to i64
  %89 = shl nuw nsw i64 %conv32, 3
  %call33 = tail call i8* @_Znam(i64 %89) #25
  %90 = ptrtoint i8* %call33 to i64
  %91 = bitcast %"class.std::unique_ptr.33"* %m_pcpScratch to i64*
  %92 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %m_pcpScratch, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %92, align 8, !tbaa !43
  store i64 %90, i64* %91, align 8, !tbaa !43
  %cmp.i100 = icmp eq %struct.kiss_fft_cpx* %93, null
  br i1 %cmp.i100, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetIPS0_vEEvT_.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %"class.std::__cxx11::basic_string"* %srcFilename, i32 %nOrder, i1 zeroext %b3D) unnamed_addr #15 align 2 {
entry:
  %temp = alloca [44 x i8], align 16
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float 1.000000e+00, float* %amp, align 4, !tbaa !198
  %call = tail call i8* @_Znwm(i64 528) #25
  %0 = bitcast i8* %call to %"class.std::basic_fstream"*
  tail call void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %srcFilename, i32 8)
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to i8**
  store i8* %call, i8** %1, align 8, !tbaa !200
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %.cast = bitcast i8* %call to %"class.std::basic_istream"*
  %call3 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* nonnull %.cast, i8* nonnull %2, i64 44) #24
  %call4 = call i8* @_Znwm(i64 64) #25
  %3 = bitcast i8* %call4 to %class.CBFormat*
  %4 = bitcast i8* %call4 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %call4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8, !tbaa !49
  %7 = getelementptr inbounds i8, i8* %call4, i64 12
  store i8 0, i8* %7, align 4, !tbaa !52
  %8 = getelementptr inbounds i8, i8* %call4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !53
  %10 = getelementptr inbounds i8, i8* %call4, i64 20
  store i8 0, i8* %10, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds i8, i8* %call4, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %11 = bitcast %class.CBFormat** %BFormat to i8**
  store i8* %call4, i8** %11, align 8, !tbaa !201
  %call6 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %3, i32 %nOrder, i1 zeroext true, i32 1024) #24
  %12 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !201
  %13 = bitcast %class.CBFormat* %12 to void (%class.CBFormat*)***
  %vtable9 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %13, align 8, !tbaa !40
  %vfn10 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable9, i64 4
  %14 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn10, align 8
  call void %14(%class.CBFormat* %12) #24
  %call11 = call i8* @_Znwm(i64 136) #25
  %15 = bitcast i8* %call11 to %class.CAmbisonicEncoderDist*
  %16 = getelementptr inbounds i8, i8* %call11, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8, !tbaa !49
  %18 = getelementptr inbounds i8, i8* %call11, i64 12
  store i8 0, i8* %18, align 4, !tbaa !52
  %19 = getelementptr inbounds i8, i8* %call11, i64 16
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8, !tbaa !53
  %21 = getelementptr inbounds i8, i8* %call11, i64 20
  store i8 0, i8* %21, align 4, !tbaa !54
  %m_pfCoeff.i.i.i = getelementptr inbounds i8, i8* %call11, i64 24
  %fDistance.i.i.i = getelementptr inbounds i8, i8* %call11, i64 80
  %22 = bitcast i8* %fDistance.i.i.i to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i.i, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %22, align 8, !tbaa !56
  %m_fGain.i.i.i = getelementptr inbounds i8, i8* %call11, i64 84
  %23 = bitcast i8* %m_fGain.i.i.i to float*
  store float 1.000000e+00, float* %23, align 4, !tbaa !60
  %24 = bitcast i8* %call11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !40
  %m_nSampleRate.i = getelementptr inbounds i8, i8* %call11, i64 88
  %25 = bitcast i8* %m_nSampleRate.i to i32*
  %m_fRoomRadius.i = getelementptr inbounds i8, i8* %call11, i64 124
  %26 = bitcast i8* %m_fRoomRadius.i to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSampleRate.i, i8 0, i64 36, i1 false) #24
  store float 5.000000e+00, float* %26, align 4, !tbaa !82
  %m_fInteriorGain.i = getelementptr inbounds i8, i8* %call11, i64 128
  %27 = bitcast i8* %m_fInteriorGain.i to float*
  store float 0.000000e+00, float* %27, align 8, !tbaa !84
  %m_fExteriorGain.i = getelementptr inbounds i8, i8* %call11, i64 132
  %28 = bitcast i8* %m_fExteriorGain.i to float*
  store float 0.000000e+00, float* %28, align 4, !tbaa !85
  %29 = bitcast i8* %call11 to %class.CAmbisonicSource*
  %call.i2.i = call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* nonnull %29, i32 1, i1 zeroext true, i32 undef) #24
  store i32 44100, i32* %25, align 8, !tbaa !86
  %m_nDelayBufferLength.i.i = getelementptr inbounds i8, i8* %call11, i64 100
  %30 = bitcast i8* %m_nDelayBufferLength.i.i to i32*
  store i32 19230, i32* %30, align 4, !tbaa !87
  %m_pfDelayBuffer.i.i = getelementptr inbounds i8, i8* %call11, i64 104
  %31 = bitcast i8* %m_pfDelayBuffer.i.i to float**
  %32 = load float*, float** %31, align 8, !tbaa !88
  %tobool6.i.i = icmp eq float* %32, null
  br i1 %tobool6.i.i, label %_ZN21CAmbisonicEncoderDistC2Ev.exit, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %entry
  %33 = bitcast float* %32 to i8*
  call void @_ZdaPv(i8* %33) #25
  %.pre.i = load i32, i32* %30, align 4, !tbaa !87
  %phitmp.i = zext i32 %.pre.i to i64
  %phitmp3.i = shl nuw nsw i64 %phitmp.i, 2
  br label %_ZN21CAmbisonicEncoderDistC2Ev.exit

_ZN21CAmbisonicEncoderDistC2Ev.exit:              ; preds = %delete.notnull.i.i, %entry
  %34 = phi i64 [ 76920, %entry ], [ %phitmp3.i, %delete.notnull.i.i ]
  %call12.i.i = call i8* @_Znam(i64 %34) #25
  %35 = bitcast i8* %m_pfDelayBuffer.i.i to i8**
  store i8* %call12.i.i, i8** %35, align 8, !tbaa !88
  %36 = bitcast i8* %call11 to void (%class.CAmbisonicEncoderDist*)***
  %vtable.i.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %36, align 8, !tbaa !40
  %vfn.i.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable.i.i, i64 3
  %37 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn.i.i, align 8
  call void %37(%class.CAmbisonicEncoderDist* nonnull %15) #24
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %38 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to i8**
  store i8* %call11, i8** %38, align 8, !tbaa !202
  %39 = bitcast i8* %call11 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable13 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %39, align 8, !tbaa !40
  %vfn14 = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable13, i64 2
  %40 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn14, align 8
  %call15 = call zeroext i1 %40(%class.CAmbisonicEncoderDist* nonnull %15, i32 %nOrder, i1 zeroext true, i32 48000) #24
  %41 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !202
  %42 = bitcast %class.CAmbisonicEncoderDist* %41 to void (%class.CAmbisonicEncoderDist*)***
  %vtable20 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %42, align 8, !tbaa !40
  %vfn21 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable20, i64 4
  %43 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn21, align 8
  call void %43(%class.CAmbisonicEncoderDist* %41) #24
  %fAzimuth = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8, !tbaa !203
  %fElevation = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %fElevation, align 4, !tbaa !204
  %fDistance = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %fDistance, align 8, !tbaa !205
  %44 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %45 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %44, align 8, !tbaa !202
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %agg.tmp.sroa.0.0..sroa_idx to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %46 = bitcast %class.CAmbisonicSource* %45 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable27 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %46, align 8, !tbaa !40
  %vfn28 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable27, i64 5
  %47 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn28, align 8
  call void %47(%class.CAmbisonicSource* %45, <2 x float> %agg.tmp.sroa.0.0.copyload, float 0.000000e+00) #24
  %48 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !202
  %49 = bitcast %class.CAmbisonicEncoderDist* %48 to void (%class.CAmbisonicEncoderDist*)***
  %vtable30 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %49, align 8, !tbaa !40
  %vfn31 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable30, i64 4
  %50 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn31, align 8
  call void %50(%class.CAmbisonicEncoderDist* %48) #24
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  ret void
}

; Function Attrs: nounwind uwtable
declare void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %struct.PolarPoint* nocapture readonly dereferenceable(12) %pos) local_unnamed_addr #15 align 2 {
entry:
  %0 = bitcast %struct.PolarPoint* %pos to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !206
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %2 = bitcast %struct.PolarPoint* %srcPos to i32*
  store i32 %1, i32* %2, align 8, !tbaa !203
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 1
  %3 = bitcast float* %fElevation to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !207
  %fElevation4 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  %5 = bitcast float* %fElevation4 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !204
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 2
  %6 = bitcast float* %fDistance to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !208
  %fDistance6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  %8 = bitcast float* %fDistance6 to i32*
  store i32 %7, i32* %8, align 8, !tbaa !205
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %10 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %9, align 8, !tbaa !202
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %srcPos to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %agg.tmp.sroa.2.0.copyload.cast = bitcast i32 %7 to float
  %11 = bitcast %class.CAmbisonicSource* %10 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %11, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %12 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %12(%class.CAmbisonicSource* %10, <2 x float> %agg.tmp.sroa.0.0.copyload, float %agg.tmp.sroa.2.0.copyload.cast) #24
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !202
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !40
  %vfn10 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9, i64 4
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* %13) #24
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, float %ampScale) local_unnamed_addr #5 align 2 {
entry:
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float %ampScale, float* %amp, align 4, !tbaa !198
  ret void
}

; Function Attrs: nounwind uwtable
define %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* nocapture %this) local_unnamed_addr #3 align 2 {
entry:
  %sampleTemp = alloca [1024 x i16], align 16
  %0 = bitcast [1024 x i16]* %sampleTemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #24
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to %"class.std::basic_istream"**
  %2 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %1, align 8, !tbaa !200
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %2, i8* nonnull %0, i64 2048) #24
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !202
  %arraydecay8 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !201
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %3, float* nonnull %arraydecay8, i32 1024, %class.CBFormat* %4)
  %5 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !201
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #24
  ret %class.CBFormat* %5

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.body ]
  %6 = load float, float* %amp, align 4, !tbaa !198
  %conv = fpext float %6 to double
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv
  %7 = load i16, i16* %arrayidx, align 4, !tbaa !45
  %conv3 = sitofp i16 %7 to double
  %div = fmul fast double %conv, 0x3F00002000400080
  %mul = fmul fast double %div, %conv3
  %conv4 = fptrunc double %mul to float
  %arrayidx6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv
  store float %conv4, float* %arrayidx6, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %8 = load float, float* %amp, align 4, !tbaa !198
  %conv.1 = fpext float %8 to double
  %arrayidx.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv.next
  %9 = load i16, i16* %arrayidx.1, align 2, !tbaa !45
  %conv3.1 = sitofp i16 %9 to double
  %div.1 = fmul fast double %conv.1, 0x3F00002000400080
  %mul.1 = fmul fast double %div.1, %conv3.1
  %conv4.1 = fptrunc double %mul.1 to float
  %arrayidx6.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv.next
  store float %conv4.1, float* %arrayidx6.1, align 4, !tbaa !47
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 1024
  br i1 %exitcond.1, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5SoundD2Ev(%"class.ILLIXR_AUDIO::Sound"* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !200
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_fstream", %"class.std::basic_fstream"* %0, i64 0, i32 1
  %call.i = tail call %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i) #24
  %tobool.i = icmp eq %"class.std::basic_filebuf"* %call.i, null
  br i1 %tobool.i, label %if.then.i, label %_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv.exit

if.then.i:                                        ; preds = %entry
  %1 = bitcast %"class.std::basic_fstream"* %0 to i8**
  %vtable.i = load i8*, i8** %1, align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %2 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %2, align 8
  %3 = bitcast %"class.std::basic_fstream"* %0 to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %3, i64 %vbase.offset.i
  %4 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %5 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %6 = load i32, i32* %5, align 8, !tbaa !209
  %or.i.i.i = or i32 %6, 4
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %4, i32 %or.i.i.i) #24
  br label %_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv.exit

_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv.exit: ; preds = %if.then.i, %entry
  %7 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !200
  %isnull = icmp eq %"class.std::basic_fstream"* %7, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv.exit
  %8 = bitcast %"class.std::basic_fstream"* %7 to void (%"class.std::basic_fstream"*)***
  %vtable = load void (%"class.std::basic_fstream"*)**, void (%"class.std::basic_fstream"*)*** %8, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vtable, i64 1
  %9 = load void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vfn, align 8
  tail call void %9(%"class.std::basic_fstream"* nonnull %7) #24
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv.exit
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %10 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !201
  %isnull3 = icmp eq %class.CBFormat* %10, null
  br i1 %isnull3, label %delete.end7, label %delete.notnull4

delete.notnull4:                                  ; preds = %delete.end
  %11 = bitcast %class.CBFormat* %10 to void (%class.CBFormat*)***
  %vtable5 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %11, align 8, !tbaa !40
  %vfn6 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable5, i64 1
  %12 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn6, align 8
  tail call void %12(%class.CBFormat* nonnull %10) #24
  br label %delete.end7

delete.end7:                                      ; preds = %delete.notnull4, %delete.end
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !202
  %isnull8 = icmp eq %class.CAmbisonicEncoderDist* %13, null
  br i1 %isnull8, label %delete.end12, label %delete.notnull9

delete.notnull9:                                  ; preds = %delete.end7
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable10 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !40
  %vfn11 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable10, i64 1
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn11, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* nonnull %13) #24
  br label %delete.end12

delete.end12:                                     ; preds = %delete.notnull9, %delete.end7
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nocapture %this, %"class.std::__cxx11::basic_string"* %outputFilePath, i32 %procTypeIn) unnamed_addr #3 align 2 {
entry:
  %wavh.i = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 4
  %temp = alloca i32, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp10 = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  store i32 %procTypeIn, i32* %processType, align 8, !tbaa !215
  %cmp = icmp eq i32 %procTypeIn, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 512) #25
  %0 = bitcast i8* %call to %"class.std::basic_ofstream"*
  tail call void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %outputFilePath, i32 20)
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  store i8* %call, i8** %1, align 8, !tbaa !218
  %2 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %sGroupID.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 0
  store i32 1179011410, i32* %sGroupID.i.i, align 4, !tbaa !219
  %dwFileLength.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 1
  store i32 48000000, i32* %dwFileLength.i.i, align 4, !tbaa !221
  %sRiffType.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 2
  store i32 1163280727, i32* %sRiffType.i.i, align 4, !tbaa !222
  %subchunkID.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 3
  store i32 544501094, i32* %subchunkID.i.i, align 4, !tbaa !223
  %subchunksize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 4
  store i32 16, i32* %subchunksize.i.i, align 4, !tbaa !224
  %audioFormat.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 5
  store i16 1, i16* %audioFormat.i.i, align 4, !tbaa !225
  %NumChannels.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 6
  store i16 2, i16* %NumChannels.i.i, align 2, !tbaa !226
  %SampleRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i.i, align 4, !tbaa !227
  %byteRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 8
  store i32 192000, i32* %byteRate.i.i, align 4, !tbaa !228
  %BlockAlign.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i.i, align 4, !tbaa !229
  %BitsPerSample.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i.i, align 2, !tbaa !230
  %dataChunkID.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i.i, align 4, !tbaa !231
  %dataChunkSize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i.i, align 4, !tbaa !232
  %3 = bitcast i8* %call to %"class.std::basic_ostream"*
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* nonnull %3, i8* nonnull %2, i64 44) #24
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = call i8* @_Znwm(i64 24) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call4, i8 0, i64 24, i1 false) #24
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %4 = bitcast %"class.std::vector.46"** %soundSrcs to i8**
  store i8* %call4, i8** %4, align 8, !tbaa !233
  %call5 = call i8* @_Znwm(i64 296) #25
  %5 = bitcast i8* %call5 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %call5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8, !tbaa !49
  %8 = getelementptr inbounds i8, i8* %call5, i64 12
  store i8 0, i8* %8, align 4, !tbaa !52
  %9 = getelementptr inbounds i8, i8* %call5, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8, !tbaa !53
  %11 = getelementptr inbounds i8, i8* %call5, i64 20
  store i8 0, i8* %11, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %12 = getelementptr inbounds i8, i8* %call5, i64 24
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %call5, i64 32
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8, !tbaa !49
  %16 = getelementptr inbounds i8, i8* %call5, i64 36
  store i8 0, i8* %16, align 4, !tbaa !52
  %17 = getelementptr inbounds i8, i8* %call5, i64 40
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8, !tbaa !53
  %19 = getelementptr inbounds i8, i8* %call5, i64 44
  store i8 0, i8* %19, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i35 = getelementptr inbounds i8, i8* %call5, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i35, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg.i = getelementptr inbounds i8, i8* %call5, i64 88
  %20 = bitcast i8* %m_pFFT_cfg.i to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %20, align 8, !tbaa !159
  %21 = getelementptr inbounds i8, i8* %call5, i64 96
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8, !tbaa !161
  %m_pIFFT_cfg.i = getelementptr inbounds i8, i8* %call5, i64 104
  %23 = bitcast i8* %m_pIFFT_cfg.i to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %23, align 8, !tbaa !159
  %24 = getelementptr inbounds i8, i8* %call5, i64 112
  %m_nBlockSize.i = getelementptr inbounds i8, i8* %call5, i64 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nBlockSize.i, i8 0, i64 24, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 184, i1 false) #24
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %25 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  store i8* %call5, i8** %25, align 8, !tbaa !234
  %call6 = call i8* @_Znwm(i64 296) #25
  %26 = bitcast i8* %call6 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %call6, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8, !tbaa !49
  %29 = getelementptr inbounds i8, i8* %call6, i64 12
  store i8 0, i8* %29, align 4, !tbaa !52
  %30 = getelementptr inbounds i8, i8* %call6, i64 16
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8, !tbaa !53
  %32 = getelementptr inbounds i8, i8* %call6, i64 20
  store i8 0, i8* %32, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8, !tbaa !40
  %33 = getelementptr inbounds i8, i8* %call6, i64 24
  %34 = bitcast i8* %33 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %call6, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8, !tbaa !49
  %37 = getelementptr inbounds i8, i8* %call6, i64 36
  store i8 0, i8* %37, align 4, !tbaa !52
  %38 = getelementptr inbounds i8, i8* %call6, i64 40
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8, !tbaa !53
  %40 = getelementptr inbounds i8, i8* %call6, i64 44
  store i8 0, i8* %40, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i36 = getelementptr inbounds i8, i8* %call6, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i36, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg.i37 = getelementptr inbounds i8, i8* %call6, i64 88
  %41 = bitcast i8* %m_pFFT_cfg.i37 to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %41, align 8, !tbaa !159
  %42 = getelementptr inbounds i8, i8* %call6, i64 96
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 8, !tbaa !161
  %m_pIFFT_cfg.i38 = getelementptr inbounds i8, i8* %call6, i64 104
  %44 = bitcast i8* %m_pIFFT_cfg.i38 to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %44, align 8, !tbaa !159
  %45 = getelementptr inbounds i8, i8* %call6, i64 112
  %m_nBlockSize.i39 = getelementptr inbounds i8, i8* %call6, i64 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nBlockSize.i39, i8 0, i64 24, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 184, i1 false) #24
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %46 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  store i8* %call6, i8** %46, align 8, !tbaa !235
  %47 = bitcast i32* %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #24
  %48 = bitcast i8* %call5 to %class.CAmbisonicBinauralizer*
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %50 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %49, %union.anon** %50, align 8, !tbaa !163
  %51 = bitcast %union.anon* %49 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !168
  store i8 0, i8* %51, align 8, !tbaa !170
  %call8 = call zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nonnull %48, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp) #24
  br i1 %call8, label %land.rhs, label %cleanup.done22

land.rhs:                                         ; preds = %if.end
  %52 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !235
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 2
  %54 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp10 to %union.anon**
  store %union.anon* %53, %union.anon** %54, align 8, !tbaa !163
  %_M_string_length.i.i.i.i.i.i56 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i.i56, align 8, !tbaa !168
  %.cast60 = bitcast %union.anon* %53 to i8*
  store i8 0, i8* %.cast60, align 8, !tbaa !170
  %55 = bitcast %class.CAmbisonicBinauralizer* %52 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable14 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %55, align 8, !tbaa !40
  %vfn15 = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable14, i64 5
  %56 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn15, align 8
  %call16 = call zeroext i1 %56(%class.CAmbisonicBinauralizer* %52, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp10) #24
  %_M_p.i.i.i.i40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp10, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %_M_p.i.i.i.i40, align 8, !tbaa !165
  %cmp.i.i.i42 = icmp eq i8* %57, %.cast60
  br i1 %cmp.i.i.i42, label %cleanup.done22, label %if.then.i.i43

if.then.i.i43:                                    ; preds = %land.rhs
  call void @_ZdlPv(i8* %57) #24
  br label %cleanup.done22

cleanup.done22:                                   ; preds = %if.then.i.i43, %land.rhs, %if.end
  %58 = phi i1 [ false, %if.end ], [ %call16, %land.rhs ], [ %call16, %if.then.i.i43 ]
  %59 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !165
  %cmp.i.i.i = icmp eq i8* %59, %51
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %cleanup.done22
  call void @_ZdlPv(i8* %59) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %cleanup.done22
  br i1 %58, label %if.end25, label %if.then23

if.then23:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %puts = call i32 @puts(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str, i64 0, i64 0))
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %call26 = call i8* @_Znwm(i64 200) #25
  %60 = bitcast i8* %call26 to %class.CAmbisonicProcessor*
  %61 = bitcast i8* %call26 to i32 (...)***
  %62 = getelementptr inbounds i8, i8* %call26, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8, !tbaa !49
  %64 = getelementptr inbounds i8, i8* %call26, i64 12
  store i8 0, i8* %64, align 4, !tbaa !52
  %65 = getelementptr inbounds i8, i8* %call26, i64 16
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 8, !tbaa !53
  %67 = getelementptr inbounds i8, i8* %call26, i64 20
  store i8 0, i8* %67, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8, !tbaa !40
  %fYaw2.i.i = getelementptr inbounds i8, i8* %call26, i64 24
  %m_ppcpPsychFilters.i = getelementptr inbounds i8, i8* %call26, i64 112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %fYaw2.i.i, i8 0, i64 64, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_ppcpPsychFilters.i, i8 0, i64 16, i1 false) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %68 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  store i8* %call26, i8** %68, align 8, !tbaa !236
  %call28 = call zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* nonnull %60, i32 3, i1 zeroext true, i32 1024, i32 undef)
  %call29 = call i8* @_Znwm(i64 104) #25
  %69 = bitcast i8* %call29 to %class.CAmbisonicZoomer*
  %70 = bitcast i8* %call29 to i32 (...)***
  %71 = getelementptr inbounds i8, i8* %call29, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 0, i32* %72, align 8, !tbaa !49
  %73 = getelementptr inbounds i8, i8* %call29, i64 12
  store i8 0, i8* %73, align 4, !tbaa !52
  %74 = getelementptr inbounds i8, i8* %call29, i64 16
  %75 = bitcast i8* %74 to i32*
  store i32 0, i32* %75, align 8, !tbaa !53
  %76 = getelementptr inbounds i8, i8* %call29, i64 20
  store i8 0, i8* %76, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8, !tbaa !40
  %77 = getelementptr inbounds i8, i8* %call29, i64 24
  %78 = bitcast i8* %77 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %call29, i64 32
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 8, !tbaa !49
  %81 = getelementptr inbounds i8, i8* %call29, i64 36
  store i8 0, i8* %81, align 4, !tbaa !52
  %82 = getelementptr inbounds i8, i8* %call29, i64 40
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8, !tbaa !53
  %84 = getelementptr inbounds i8, i8* %call29, i64 44
  store i8 0, i8* %84, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !tbaa !40
  %m_nSpeakerSetUp.i.i = getelementptr inbounds i8, i8* %call29, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i, i8 0, i64 44, i1 false) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %85 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  store i8* %call29, i8** %85, align 8, !tbaa !237
  %call33 = call zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* nonnull %69, i32 3, i1 zeroext true, i32 0) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #24
  ret void
}

; Function Attrs: nounwind uwtable
declare void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %wavh = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 4
  %0 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %0) #24
  %sGroupID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 0
  store i32 1179011410, i32* %sGroupID.i, align 4, !tbaa !219
  %dwFileLength.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 1
  store i32 48000000, i32* %dwFileLength.i, align 4, !tbaa !221
  %sRiffType.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 2
  store i32 1163280727, i32* %sRiffType.i, align 4, !tbaa !222
  %subchunkID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 3
  store i32 544501094, i32* %subchunkID.i, align 4, !tbaa !223
  %subchunksize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 4
  store i32 16, i32* %subchunksize.i, align 4, !tbaa !224
  %audioFormat.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 5
  store i16 1, i16* %audioFormat.i, align 4, !tbaa !225
  %NumChannels.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 6
  store i16 2, i16* %NumChannels.i, align 2, !tbaa !226
  %SampleRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i, align 4, !tbaa !227
  %byteRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 8
  store i32 192000, i32* %byteRate.i, align 4, !tbaa !228
  %BlockAlign.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i, align 4, !tbaa !229
  %BitsPerSample.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i, align 2, !tbaa !230
  %dataChunkID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i, align 4, !tbaa !231
  %dataChunkSize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i, align 4, !tbaa !232
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  %2 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %1, align 8, !tbaa !218
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %2, i8* nonnull %0, i64 44) #24
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %0) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !215
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !218
  tail call void @free(i8* %2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %3 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i10 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i10 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !238
  %6 = bitcast %"class.std::vector.46"* %3 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !240
  %cmp213 = icmp eq i64 %5, %7
  br i1 %cmp213, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %.in = phi %"class.std::vector.46"* [ %3, %if.end ], [ %21, %for.body ]
  %8 = bitcast %"class.std::vector.46"* %.in to i8*
  tail call void @free(i8* %8) #24
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !234
  tail call void @free(i8* %10) #24
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %11 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !235
  tail call void @free(i8* %12) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %13 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !236
  tail call void @free(i8* %14) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %15 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !237
  tail call void @free(i8* %16) #24
  ret void

for.body:                                         ; preds = %for.body, %if.end
  %17 = phi %"class.std::vector.46"* [ %21, %for.body ], [ %3, %if.end ]
  %conv15 = phi i64 [ %conv, %for.body ], [ 0, %if.end ]
  %soundIdx.014 = phi i32 [ %inc, %for.body ], [ 0, %if.end ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !240
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %18, i64 %conv15
  %19 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !43
  tail call void @free(i8* %20) #24
  %inc = add i32 %soundIdx.014, 1
  %conv = zext i32 %inc to i64
  %21 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !238
  %24 = bitcast %"class.std::vector.46"* %21 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !240
  %sub.ptr.sub.i = sub i64 %23, %25
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp2 = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp2, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #15 align 2 {
entry:
  %__dnew.i.i.i.i129 = alloca i64, align 8
  %__dnew.i.i.i.i63 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp3 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp11 = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !215
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp11, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp11 to %union.anon**
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i129 to i8*
  %_M_p.i13.i.i.i.i133 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp11, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i134 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp11, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i140 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp11, i64 0, i32 1
  %soundSrcs22 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 4136) #25
  %5 = bitcast i8* %call to %"class.ILLIXR_AUDIO::Sound"*
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !163
  %8 = bitcast %union.anon* %6 to i8*
  %9 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #24
  store i64 25, i64* %__dnew.i.i.i.i, align 8, !tbaa !169
  %call5.i.i.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0) #24
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !165
  %10 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !169
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %10, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i.i, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !168
  %11 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !165
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %11, i64 %10
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #24
  call void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %5, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 3, i1 zeroext undef)
  %12 = ptrtoint i8* %call to i64
  %13 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !165
  %cmp.i.i.i28 = icmp eq i8* %13, %8
  br i1 %cmp.i.i.i28, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then
  call void @_ZdlPv(i8* %13) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %if.then
  %srcPos.i = getelementptr inbounds i8, i8* %call, i64 4120
  %14 = bitcast i8* %srcPos.i to i32*
  store i32 -1110651699, i32* %14, align 8, !tbaa !203
  %fElevation4.i = getelementptr inbounds i8, i8* %call, i64 4124
  %15 = bitcast i8* %fElevation4.i to i32*
  store i32 1070134723, i32* %15, align 4, !tbaa !204
  %fDistance6.i = getelementptr inbounds i8, i8* %call, i64 4128
  %16 = bitcast i8* %fDistance6.i to i32*
  store i32 1065353216, i32* %16, align 8, !tbaa !205
  %BEncoder.i = getelementptr inbounds i8, i8* %call, i64 4112
  %17 = bitcast i8* %BEncoder.i to %class.CAmbisonicEncoderDist**
  %18 = bitcast i8* %BEncoder.i to %class.CAmbisonicSource**
  %19 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %18, align 8, !tbaa !202
  %agg.tmp.sroa.0.0..sroa_cast.i = bitcast i8* %srcPos.i to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i, align 8
  %20 = bitcast %class.CAmbisonicSource* %19 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %20, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i, i64 5
  %21 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i, align 8
  call void %21(%class.CAmbisonicSource* %19, <2 x float> %agg.tmp.sroa.0.0.copyload.i, float 1.000000e+00) #24
  %22 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %17, align 8, !tbaa !202
  %23 = bitcast %class.CAmbisonicEncoderDist* %22 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !40
  %vfn10.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i, i64 4
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i, align 8
  call void %24(%class.CAmbisonicEncoderDist* %22) #24
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %25 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i29 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i29, align 8, !tbaa !238
  %_M_end_of_storage.i30 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %25, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i30, align 8, !tbaa !241
  %cmp.i31 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %26, %27
  br i1 %cmp.i31, label %if.else.i37, label %if.then.i33

if.then.i33:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %28 = bitcast %"class.ILLIXR_AUDIO::Sound"** %26 to i64*
  store i64 %12, i64* %28, align 8, !tbaa !43
  %29 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i29, align 8, !tbaa !238
  %incdec.ptr.i32 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %29, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit62

if.else.i37:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %30 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %26 to i64
  %31 = bitcast %"class.std::vector.46"* %25 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !240
  %sub.ptr.sub.i21.i.i.i34 = sub i64 %30, %32
  %sub.ptr.div.i22.i.i.i35 = ashr exact i64 %sub.ptr.sub.i21.i.i.i34, 3
  %cmp.i.i.i36 = icmp eq i64 %sub.ptr.sub.i21.i.i.i34, 9223372036854775800
  br i1 %cmp.i.i.i36, label %if.then.i.i.i38, label %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47

if.then.i.i.i38:                                  ; preds = %if.else.i37
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47: ; preds = %if.else.i37
  %cmp.i.i.i.i39 = icmp eq i64 %sub.ptr.sub.i21.i.i.i34, 0
  %.sroa.speculated.i.i.i40 = select i1 %cmp.i.i.i.i39, i64 1, i64 %sub.ptr.div.i22.i.i.i35
  %add.i.i.i41 = add nsw i64 %.sroa.speculated.i.i.i40, %sub.ptr.div.i22.i.i.i35
  %cmp7.i.i.i42 = icmp ult i64 %add.i.i.i41, %sub.ptr.div.i22.i.i.i35
  %cmp9.i.i.i43 = icmp ugt i64 %add.i.i.i41, 1152921504606846975
  %or.cond.i.i.i44 = or i1 %cmp7.i.i.i42, %cmp9.i.i.i43
  %cond.i.i.i45 = select i1 %or.cond.i.i.i44, i64 1152921504606846975, i64 %add.i.i.i41
  %cmp.i48.i.i46 = icmp eq i64 %cond.i.i.i45, 0
  br i1 %cmp.i48.i.i46, label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i54, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i50

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i50: ; preds = %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47
  %mul.i.i.i.i.i48 = shl i64 %cond.i.i.i45, 3
  %call2.i.i.i.i.i49 = call i8* @_Znwm(i64 %mul.i.i.i.i.i48) #24
  %33 = bitcast i8* %call2.i.i.i.i.i49 to %"class.ILLIXR_AUDIO::Sound"**
  br label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i54

_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i54: ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i50, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47
  %34 = phi i8* [ %call2.i.i.i.i.i49, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i50 ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47 ]
  %cond.i49.i.i51 = phi %"class.ILLIXR_AUDIO::Sound"** [ %33, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i50 ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i47 ]
  %add.ptr.i.i52 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i51, i64 %sub.ptr.div.i22.i.i.i35
  %35 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i52 to i64*
  store i64 %12, i64* %35, align 8, !tbaa !43
  %cmp.i.i.i.i43.i.i53 = icmp sgt i64 %sub.ptr.sub.i21.i.i.i34, 0
  br i1 %cmp.i.i.i.i43.i.i53, label %if.then.i.i.i.i44.i.i55, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i58

if.then.i.i.i.i44.i.i55:                          ; preds = %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i54
  %36 = inttoptr i64 %32 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 %sub.ptr.sub.i21.i.i.i34, i1 false) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i58

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i58: ; preds = %if.then.i.i.i.i44.i.i55, %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i54
  %incdec.ptr.i.i56 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i52, i64 1
  %tobool.i.i.i57 = icmp eq i64 %32, 0
  br i1 %tobool.i.i.i57, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61, label %if.then.i38.i.i59

if.then.i38.i.i59:                                ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i58
  %37 = inttoptr i64 %32 to i8*
  call void @_ZdlPv(i8* nonnull %37) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61: ; preds = %if.then.i38.i.i59, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i58
  %38 = bitcast %"class.std::vector.46"* %25 to i8**
  store i8* %34, i8** %38, align 8, !tbaa !240
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i56, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i29, align 8, !tbaa !238
  %add.ptr20.i.i60 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i51, i64 %cond.i.i.i45
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit62

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit62: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61, %if.then.i33
  %_M_finish.i29.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i29, %if.then.i33 ], [ %_M_end_of_storage.i30, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61 ]
  %incdec.ptr.i32.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i32, %if.then.i33 ], [ %add.ptr20.i.i60, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i61 ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i32.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i29.sink, align 8, !tbaa !43
  %call2 = call i8* @_Znwm(i64 4136) #25
  %39 = bitcast i8* %call2 to %"class.ILLIXR_AUDIO::Sound"*
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp3, i64 0, i32 2
  %41 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp3 to %union.anon**
  store %union.anon* %40, %union.anon** %41, align 8, !tbaa !163
  %42 = bitcast %union.anon* %40 to i8*
  %43 = bitcast i64* %__dnew.i.i.i.i63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #24
  store i64 28, i64* %__dnew.i.i.i.i63, align 8, !tbaa !169
  %call5.i.i.i.i66 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp3, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i63, i64 0) #24
  %_M_p.i13.i.i.i.i67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp3, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i.i66, i8** %_M_p.i13.i.i.i.i67, align 8, !tbaa !165
  %44 = load i64, i64* %__dnew.i.i.i.i63, align 8, !tbaa !169
  %_M_allocated_capacity.i.i.i.i.i68 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp3, i64 0, i32 2, i32 0
  store i64 %44, i64* %_M_allocated_capacity.i.i.i.i.i68, align 8, !tbaa !170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i.i66, i8* nonnull align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i64 28, i1 false) #24
  %_M_string_length.i.i.i.i.i.i74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp3, i64 0, i32 1
  store i64 %44, i64* %_M_string_length.i.i.i.i.i.i74, align 8, !tbaa !168
  %45 = load i8*, i8** %_M_p.i13.i.i.i.i67, align 8, !tbaa !165
  %arrayidx.i.i.i.i.i75 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8 0, i8* %arrayidx.i.i.i.i.i75, align 1, !tbaa !170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #24
  call void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %39, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp3, i32 3, i1 zeroext undef)
  %46 = ptrtoint i8* %call2 to i64
  %47 = load i8*, i8** %_M_p.i13.i.i.i.i67, align 8, !tbaa !165
  %cmp.i.i.i79 = icmp eq i8* %47, %42
  br i1 %cmp.i.i.i79, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81, label %if.then.i.i80

if.then.i.i80:                                    ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit62
  call void @_ZdlPv(i8* %47) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81: ; preds = %if.then.i.i80, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit62
  %srcPos.i82 = getelementptr inbounds i8, i8* %call2, i64 4120
  %48 = bitcast i8* %srcPos.i82 to i32*
  store i32 1065353216, i32* %48, align 8, !tbaa !203
  %fElevation4.i84 = getelementptr inbounds i8, i8* %call2, i64 4124
  %49 = bitcast i8* %fElevation4.i84 to i32*
  store i32 0, i32* %49, align 4, !tbaa !204
  %fDistance6.i86 = getelementptr inbounds i8, i8* %call2, i64 4128
  %50 = bitcast i8* %fDistance6.i86 to i32*
  store i32 1084227584, i32* %50, align 8, !tbaa !205
  %BEncoder.i87 = getelementptr inbounds i8, i8* %call2, i64 4112
  %51 = bitcast i8* %BEncoder.i87 to %class.CAmbisonicEncoderDist**
  %52 = bitcast i8* %BEncoder.i87 to %class.CAmbisonicSource**
  %53 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %52, align 8, !tbaa !202
  %agg.tmp.sroa.0.0..sroa_cast.i88 = bitcast i8* %srcPos.i82 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i89 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i88, align 8
  %54 = bitcast %class.CAmbisonicSource* %53 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i91 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %54, align 8, !tbaa !40
  %vfn.i92 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i91, i64 5
  %55 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i92, align 8
  call void %55(%class.CAmbisonicSource* %53, <2 x float> %agg.tmp.sroa.0.0.copyload.i89, float 5.000000e+00) #24
  %56 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %51, align 8, !tbaa !202
  %57 = bitcast %class.CAmbisonicEncoderDist* %56 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i93 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %57, align 8, !tbaa !40
  %vfn10.i94 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i93, i64 4
  %58 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i94, align 8
  call void %58(%class.CAmbisonicEncoderDist* %56) #24
  %59 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i95 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %59, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i95, align 8, !tbaa !238
  %_M_end_of_storage.i96 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %59, i64 0, i32 0, i32 0, i32 0, i32 2
  %61 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i96, align 8, !tbaa !241
  %cmp.i97 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %60, %61
  br i1 %cmp.i97, label %if.else.i103, label %if.then.i99

if.then.i99:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81
  %62 = bitcast %"class.ILLIXR_AUDIO::Sound"** %60 to i64*
  store i64 %46, i64* %62, align 8, !tbaa !43
  %63 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i95, align 8, !tbaa !238
  %incdec.ptr.i98 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %63, i64 1
  br label %if.end.sink.split

if.else.i103:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81
  %64 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %60 to i64
  %65 = bitcast %"class.std::vector.46"* %59 to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !240
  %sub.ptr.sub.i21.i.i.i100 = sub i64 %64, %66
  %sub.ptr.div.i22.i.i.i101 = ashr exact i64 %sub.ptr.sub.i21.i.i.i100, 3
  %cmp.i.i.i102 = icmp eq i64 %sub.ptr.sub.i21.i.i.i100, 9223372036854775800
  br i1 %cmp.i.i.i102, label %if.then.i.i.i104, label %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113

if.then.i.i.i104:                                 ; preds = %if.else.i103
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113: ; preds = %if.else.i103
  %cmp.i.i.i.i105 = icmp eq i64 %sub.ptr.sub.i21.i.i.i100, 0
  %.sroa.speculated.i.i.i106 = select i1 %cmp.i.i.i.i105, i64 1, i64 %sub.ptr.div.i22.i.i.i101
  %add.i.i.i107 = add nsw i64 %.sroa.speculated.i.i.i106, %sub.ptr.div.i22.i.i.i101
  %cmp7.i.i.i108 = icmp ult i64 %add.i.i.i107, %sub.ptr.div.i22.i.i.i101
  %cmp9.i.i.i109 = icmp ugt i64 %add.i.i.i107, 1152921504606846975
  %or.cond.i.i.i110 = or i1 %cmp7.i.i.i108, %cmp9.i.i.i109
  %cond.i.i.i111 = select i1 %or.cond.i.i.i110, i64 1152921504606846975, i64 %add.i.i.i107
  %cmp.i48.i.i112 = icmp eq i64 %cond.i.i.i111, 0
  br i1 %cmp.i48.i.i112, label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i120, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i116

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i116: ; preds = %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113
  %mul.i.i.i.i.i114 = shl i64 %cond.i.i.i111, 3
  %call2.i.i.i.i.i115 = call i8* @_Znwm(i64 %mul.i.i.i.i.i114) #24
  %67 = bitcast i8* %call2.i.i.i.i.i115 to %"class.ILLIXR_AUDIO::Sound"**
  br label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i120

_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i120: ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i116, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113
  %68 = phi i8* [ %call2.i.i.i.i.i115, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i116 ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113 ]
  %cond.i49.i.i117 = phi %"class.ILLIXR_AUDIO::Sound"** [ %67, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i116 ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i113 ]
  %add.ptr.i.i118 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i117, i64 %sub.ptr.div.i22.i.i.i101
  %69 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i118 to i64*
  store i64 %46, i64* %69, align 8, !tbaa !43
  %cmp.i.i.i.i43.i.i119 = icmp sgt i64 %sub.ptr.sub.i21.i.i.i100, 0
  br i1 %cmp.i.i.i.i43.i.i119, label %if.then.i.i.i.i44.i.i121, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i124

if.then.i.i.i.i44.i.i121:                         ; preds = %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i120
  %70 = inttoptr i64 %66 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %70, i64 %sub.ptr.sub.i21.i.i.i100, i1 false) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i124

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i124: ; preds = %if.then.i.i.i.i44.i.i121, %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i120
  %incdec.ptr.i.i122 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i118, i64 1
  %tobool.i.i.i123 = icmp eq i64 %66, 0
  br i1 %tobool.i.i.i123, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127, label %if.then.i38.i.i125

if.then.i38.i.i125:                               ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i124
  %71 = inttoptr i64 %66 to i8*
  call void @_ZdlPv(i8* nonnull %71) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127: ; preds = %if.then.i38.i.i125, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i124
  %72 = bitcast %"class.std::vector.46"* %59 to i8**
  store i8* %68, i8** %72, align 8, !tbaa !240
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i122, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i95, align 8, !tbaa !238
  %add.ptr20.i.i126 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i117, i64 %cond.i.i.i111
  br label %if.end.sink.split

for.body:                                         ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit, %for.cond.preheader
  %i.0178 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit ]
  %call10 = call i8* @_Znwm(i64 4136) #25
  %73 = bitcast i8* %call10 to %"class.ILLIXR_AUDIO::Sound"*
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !163
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24
  store i64 25, i64* %__dnew.i.i.i.i129, align 8, !tbaa !169
  %call5.i.i.i.i132 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp11, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i129, i64 0) #24
  store i8* %call5.i.i.i.i132, i8** %_M_p.i13.i.i.i.i133, align 8, !tbaa !165
  %74 = load i64, i64* %__dnew.i.i.i.i129, align 8, !tbaa !169
  store i64 %74, i64* %_M_allocated_capacity.i.i.i.i.i134, align 8, !tbaa !170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i.i132, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25, i1 false) #24
  store i64 %74, i64* %_M_string_length.i.i.i.i.i.i140, align 8, !tbaa !168
  %75 = load i8*, i8** %_M_p.i13.i.i.i.i133, align 8, !tbaa !165
  %arrayidx.i.i.i.i.i141 = getelementptr inbounds i8, i8* %75, i64 %74
  store i8 0, i8* %arrayidx.i.i.i.i.i141, align 1, !tbaa !170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24
  call void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %73, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp11, i32 3, i1 zeroext undef)
  %76 = ptrtoint i8* %call10 to i64
  %77 = load i8*, i8** %_M_p.i13.i.i.i.i133, align 8, !tbaa !165
  %cmp.i.i.i145 = icmp eq i8* %77, %3
  br i1 %cmp.i.i.i145, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147, label %if.then.i.i146

if.then.i.i146:                                   ; preds = %for.body
  call void @_ZdlPv(i8* %77) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147: ; preds = %if.then.i.i146, %for.body
  %conv = uitofp i32 %i.0178 to double
  %mul = fmul fast double %conv, -1.000000e-01
  %conv13 = fptrunc double %mul to float
  %mul16 = fmul fast double %conv, 1.570000e+00
  %conv17 = fptrunc double %mul16 to float
  %conv20 = uitofp i32 %i.0178 to float
  %srcPos.i148 = getelementptr inbounds i8, i8* %call10, i64 4120
  %78 = bitcast i8* %srcPos.i148 to float*
  store float %conv13, float* %78, align 8, !tbaa !203
  %fElevation4.i150 = getelementptr inbounds i8, i8* %call10, i64 4124
  %79 = bitcast i8* %fElevation4.i150 to float*
  store float %conv17, float* %79, align 4, !tbaa !204
  %fDistance6.i152 = getelementptr inbounds i8, i8* %call10, i64 4128
  %80 = bitcast i8* %fDistance6.i152 to float*
  store float %conv20, float* %80, align 8, !tbaa !205
  %BEncoder.i153 = getelementptr inbounds i8, i8* %call10, i64 4112
  %81 = bitcast i8* %BEncoder.i153 to %class.CAmbisonicEncoderDist**
  %82 = bitcast i8* %BEncoder.i153 to %class.CAmbisonicSource**
  %83 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %82, align 8, !tbaa !202
  %agg.tmp.sroa.0.0..sroa_cast.i154 = bitcast i8* %srcPos.i148 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i155 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i154, align 8
  %84 = bitcast %class.CAmbisonicSource* %83 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i157 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %84, align 8, !tbaa !40
  %vfn.i158 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i157, i64 5
  %85 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i158, align 8
  call void %85(%class.CAmbisonicSource* %83, <2 x float> %agg.tmp.sroa.0.0.copyload.i155, float %conv20) #24
  %86 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %81, align 8, !tbaa !202
  %87 = bitcast %class.CAmbisonicEncoderDist* %86 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i159 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %87, align 8, !tbaa !40
  %vfn10.i160 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i159, i64 4
  %88 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i160, align 8
  call void %88(%class.CAmbisonicEncoderDist* %86) #24
  %89 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs22, align 8, !tbaa !233
  %_M_finish.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %89, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !238
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %89, i64 0, i32 0, i32 0, i32 0, i32 2
  %91 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i, align 8, !tbaa !241
  %cmp.i = icmp eq %"class.ILLIXR_AUDIO::Sound"** %90, %91
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147
  %92 = bitcast %"class.ILLIXR_AUDIO::Sound"** %90 to i64*
  store i64 %76, i64* %92, align 8, !tbaa !43
  %93 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !238
  %incdec.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %93, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

if.else.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147
  %94 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %90 to i64
  %95 = bitcast %"class.std::vector.46"* %89 to i64*
  %96 = load i64, i64* %95, align 8, !tbaa !240
  %sub.ptr.sub.i21.i.i.i = sub i64 %94, %96
  %sub.ptr.div.i22.i.i.i = ashr exact i64 %sub.ptr.sub.i21.i.i.i, 3
  %cmp.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i.i, 9223372036854775800
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i

if.then.i.i.i:                                    ; preds = %if.else.i
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i: ; preds = %if.else.i
  %cmp.i.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i.i, 0
  %.sroa.speculated.i.i.i = select i1 %cmp.i.i.i.i, i64 1, i64 %sub.ptr.div.i22.i.i.i
  %add.i.i.i = add nsw i64 %.sroa.speculated.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 1152921504606846975
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp9.i.i.i
  %cond.i.i.i = select i1 %or.cond.i.i.i, i64 1152921504606846975, i64 %add.i.i.i
  %cmp.i48.i.i = icmp eq i64 %cond.i.i.i, 0
  br i1 %cmp.i48.i.i, label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i: ; preds = %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i
  %mul.i.i.i.i.i = shl i64 %cond.i.i.i, 3
  %call2.i.i.i.i.i = call i8* @_Znwm(i64 %mul.i.i.i.i.i) #24
  %97 = bitcast i8* %call2.i.i.i.i.i to %"class.ILLIXR_AUDIO::Sound"**
  br label %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i

_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i: ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i
  %98 = phi i8* [ %call2.i.i.i.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i ]
  %cond.i49.i.i = phi %"class.ILLIXR_AUDIO::Sound"** [ %97, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc.exit.i.i ]
  %add.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i, i64 %sub.ptr.div.i22.i.i.i
  %99 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i to i64*
  store i64 %76, i64* %99, align 8, !tbaa !43
  %cmp.i.i.i.i43.i.i = icmp sgt i64 %sub.ptr.sub.i21.i.i.i, 0
  br i1 %cmp.i.i.i.i43.i.i, label %if.then.i.i.i.i44.i.i, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i

if.then.i.i.i.i44.i.i:                            ; preds = %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i
  %100 = inttoptr i64 %96 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %100, i64 %sub.ptr.sub.i21.i.i.i, i1 false) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i: ; preds = %if.then.i.i.i.i44.i.i, %_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm.exit.i.i
  %incdec.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i, i64 1
  %tobool.i.i.i = icmp eq i64 %96, 0
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i, label %if.then.i38.i.i

if.then.i38.i.i:                                  ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i
  %101 = inttoptr i64 %96 to i8*
  call void @_ZdlPv(i8* nonnull %101) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i: ; preds = %if.then.i38.i.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit.i.i
  %102 = bitcast %"class.std::vector.46"* %89 to i8**
  store i8* %98, i8** %102, align 8, !tbaa !240
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !238
  %add.ptr20.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i49.i.i, i64 %cond.i.i.i
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i, %if.then.i
  %_M_finish.i.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i, %if.then.i ], [ %_M_end_of_storage.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i ]
  %incdec.ptr.i.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i, %if.then.i ], [ %add.ptr20.i.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i.sink, align 8, !tbaa !43
  %inc = add nuw nsw i32 %i.0178, 1
  %exitcond = icmp eq i32 %inc, 16
  br i1 %exitcond, label %if.end, label %for.body

if.end.sink.split:                                ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127, %if.then.i99
  %_M_end_of_storage.i96.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_end_of_storage.i96, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127 ], [ %_M_finish.i95, %if.then.i99 ]
  %add.ptr20.i.i126.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %add.ptr20.i.i126, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i127 ], [ %incdec.ptr.i98, %if.then.i99 ]
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr20.i.i126.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i96.sink, align 8, !tbaa !43
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio12processBlockEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %sumBF = alloca %class.CBFormat, align 8
  %call = tail call i8* @_Znam(i64 16) #25
  %0 = bitcast i8* %call to float**
  %call2 = tail call i8* @_Znam(i64 4096) #25
  %1 = bitcast i8* %call to i8**
  store i8* %call2, i8** %1, align 8, !tbaa !43
  %call3 = tail call i8* @_Znam(i64 4096) #25
  %arrayidx4 = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %arrayidx4 to float**
  %3 = bitcast i8* %arrayidx4 to i8**
  store i8* %call3, i8** %3, align 8, !tbaa !43
  %4 = bitcast %class.CBFormat* %sumBF to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #24
  %5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !49
  %7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !52
  %8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !53
  %9 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %10 = bitcast i32* %m_nSamples.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #24
  %call5 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %sumBF, i32 3, i1 zeroext true, i32 1024)
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %11 = load i32, i32* %processType, align 8, !tbaa !215
  %cmp = icmp eq i32 %11, 2
  br i1 %cmp, label %if.end9, label %if.end

if.end:                                           ; preds = %entry
  call void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
  %.pr = load i32, i32* %processType, align 8, !tbaa !215
  %cmp7 = icmp eq i32 %.pr, 1
  br i1 %cmp7, label %if.end13, label %if.end9

if.end9:                                          ; preds = %if.end, %entry
  call void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8, !tbaa !234
  call void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %12, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %13 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !235
  call void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %13, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
  %.pr32 = load i32, i32* %processType, align 8, !tbaa !215
  %cmp11 = icmp eq i32 %.pr32, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end9
  call void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, float** nonnull %0)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end9, %if.end
  %14 = load float*, float** %0, align 8, !tbaa !43
  %isnull = icmp eq float* %14, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end13
  %15 = bitcast float* %14 to i8*
  call void @_ZdaPv(i8* %15) #25
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end13
  %16 = load float*, float** %2, align 8, !tbaa !43
  %isnull16 = icmp eq float* %16, null
  br i1 %isnull16, label %delete.notnull20, label %delete.notnull17

delete.notnull17:                                 ; preds = %delete.end
  %17 = bitcast float* %16 to i8*
  call void @_ZdaPv(i8* %17) #25
  br label %delete.notnull20

delete.notnull20:                                 ; preds = %delete.notnull17, %delete.end
  call void @_ZdaPv(i8* nonnull %call) #25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i = icmp eq float** %18, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i: ; preds = %delete.notnull20
  %19 = bitcast float** %18 to i8*
  call void @_ZdaPv(i8* %19) #25
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i, %delete.notnull20
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i = icmp eq float* %20, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %21 = bitcast float* %20 to i8*
  call void @_ZdlPv(i8* nonnull %21) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 {
entry:
  %sampleTemp.i = alloca [1024 x i16], align 16
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %0 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i17 = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i17 to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !238
  %3 = bitcast %"class.std::vector.46"* %0 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !240
  %cmp20 = icmp eq i64 %2, %4
  br i1 %cmp20, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = bitcast [1024 x i16]* %sampleTemp.i to i8*
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i.i to i8**
  %m_nDataLength.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %8 = phi %"class.std::vector.46"* [ %0, %for.body.lr.ph ], [ %43, %for.inc ]
  %conv22 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.inc ]
  %soundIdx.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !240
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %9, i64 %conv22
  %10 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !43
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %5) #24
  %11 = bitcast %"class.ILLIXR_AUDIO::Sound"* %10 to %"class.std::basic_istream"**
  %12 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %11, align 8, !tbaa !200
  %call.i = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %12, i8* nonnull %5, i64 2048) #24
  %amp.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body
  %indvars.iv.i13 = phi i64 [ 0, %for.body ], [ %indvars.iv.next.i16.1, %for.body.i ]
  %13 = load float, float* %amp.i, align 4, !tbaa !198
  %conv.i14 = fpext float %13 to double
  %arrayidx.i = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.i13
  %14 = load i16, i16* %arrayidx.i, align 4, !tbaa !45
  %conv3.i = sitofp i16 %14 to double
  %div.i = fmul fast double %conv.i14, 0x3F00002000400080
  %mul.i15 = fmul fast double %div.i, %conv3.i
  %conv4.i = fptrunc double %mul.i15 to float
  %arrayidx6.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.i13
  store float %conv4.i, float* %arrayidx6.i, align 4, !tbaa !47
  %indvars.iv.next.i16 = or i64 %indvars.iv.i13, 1
  %15 = load float, float* %amp.i, align 4, !tbaa !198
  %conv.i14.1 = fpext float %15 to double
  %arrayidx.i.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.next.i16
  %16 = load i16, i16* %arrayidx.i.1, align 2, !tbaa !45
  %conv3.i.1 = sitofp i16 %16 to double
  %div.i.1 = fmul fast double %conv.i14.1, 0x3F00002000400080
  %mul.i15.1 = fmul fast double %div.i.1, %conv3.i.1
  %conv4.i.1 = fptrunc double %mul.i15.1 to float
  %arrayidx6.i.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.next.i16
  store float %conv4.i.1, float* %arrayidx6.i.1, align 4, !tbaa !47
  %indvars.iv.next.i16.1 = add nuw nsw i64 %indvars.iv.i13, 2
  %exitcond.i.1 = icmp eq i64 %indvars.iv.next.i16.1, 1024
  br i1 %exitcond.i.1, label %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit, label %for.body.i

_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit:    ; preds = %for.body.i
  %BEncoder.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 3
  %17 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder.i, align 8, !tbaa !202
  %arraydecay8.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 0
  %BFormat.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 2
  %18 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !201
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %17, float* nonnull %arraydecay8.i, i32 1024, %class.CBFormat* %18) #24
  %19 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !201
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %5) #24
  %cmp6 = icmp eq i32 %soundIdx.021, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %20 = load i8*, i8** %7, align 8, !tbaa !63
  %_M_start.i4.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast float** %_M_start.i4.i to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !63
  %23 = load i32, i32* %m_nDataLength.i, align 4, !tbaa !73
  %conv.i = zext i32 %23 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %mul.i, i1 false) #24
  br label %for.inc

if.else:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %24 = load i32, i32* %6, align 8, !tbaa !53
  %cmp25.i = icmp eq i32 %24, 0
  br i1 %cmp25.i, label %for.inc, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %if.else
  %25 = load i32, i32* %m_nSamples.i, align 8, !tbaa !68
  %cmp323.i = icmp eq i32 %25, 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %for.inc, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %27 = zext i32 %24 to i64
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i21.i, align 8, !tbaa !43
  %28 = zext i32 %25 to i64
  %29 = add nsw i64 %28, -1
  %xtraiter = and i64 %28, 3
  %30 = icmp ult i64 %29, 3
  %unroll_iter = sub nsw i64 %28, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %26, i64 %indvars.iv29.i
  %31 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !43
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %32 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !43
  br i1 %30, label %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.us.i = getelementptr inbounds float, float* %31, i64 %indvars.iv.i
  %33 = load float, float* %arrayidx.us.i, align 4, !tbaa !47
  %arrayidx9.us.i = getelementptr inbounds float, float* %32, i64 %indvars.iv.i
  %34 = load float, float* %arrayidx9.us.i, align 4, !tbaa !47
  %add.us.i = fadd fast float %34, %33
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !47
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %31, i64 %indvars.iv.next.i
  %35 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !47
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %32, i64 %indvars.iv.next.i
  %36 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !47
  %add.us.i.1 = fadd fast float %36, %35
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !47
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %31, i64 %indvars.iv.next.i.1
  %37 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !47
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %32, i64 %indvars.iv.next.i.1
  %38 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !47
  %add.us.i.2 = fadd fast float %38, %37
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !47
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %31, i64 %indvars.iv.next.i.2
  %39 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !47
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %32, i64 %indvars.iv.next.i.2
  %40 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !47
  %add.us.i.3 = fadd fast float %40, %39
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !47
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa, label %for.body4.us.i

for.cond2.for.inc10_crit_edge.us.i.unr-lcssa:     ; preds = %for.body4.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body4.us.i ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.epil

for.body4.us.i.epil:                              ; preds = %for.body4.us.i.epil, %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body4.us.i.epil ], [ %indvars.iv.i.unr, %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.i.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa ]
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %31, i64 %indvars.iv.i.epil
  %41 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !47
  %arrayidx9.us.i.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv.i.epil
  %42 = load float, float* %arrayidx9.us.i.epil, align 4, !tbaa !47
  %add.us.i.epil = fadd fast float %42, %41
  store float %add.us.i.epil, float* %arrayidx9.us.i.epil, align 4, !tbaa !47
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.epil, !llvm.loop !242

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i.epil, %for.cond2.for.inc10_crit_edge.us.i.unr-lcssa
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond23 = icmp eq i64 %indvars.iv.next30.i, %27
  br i1 %exitcond23, label %for.inc, label %for.cond2.preheader.us.i

for.inc:                                          ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %if.else, %if.then
  %inc = add i32 %soundIdx.021, 1
  %conv = zext i32 %inc to i64
  %43 = load %"class.std::vector.46"*, %"class.std::vector.46"** %soundSrcs, align 8, !tbaa !233
  %_M_finish.i = getelementptr inbounds %"class.std::vector.46", %"class.std::vector.46"* %43, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !238
  %46 = bitcast %"class.std::vector.46"* %43 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !240
  %sub.ptr.sub.i = sub i64 %45, %47
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 {
entry:
  %fZoom.addr.i.i = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %inc.i = add nsw i32 %0, 1
  store i32 %inc.i, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %conv.i = sitofp i32 %inc.i to double
  %mul3.i = fmul fast double %conv.i, 0x3F712609C699F47A
  %conv4.i = fptrunc double %mul3.i to float
  %1 = tail call fast float @llvm.cos.f32(float %conv4.i) #24
  %2 = tail call fast float @llvm.sin.f32(float %conv4.i) #24
  %cmp.i.i = fcmp fast oeq float %1, 1.000000e+00
  br i1 %cmp.i.i, label %_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit, label %if.else.i.i

if.else.i.i:                                      ; preds = %entry
  %cmp5.i.i = fcmp fast oeq float %1, -1.000000e+00
  br i1 %cmp5.i.i, label %_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit, label %if.else11.i.i

if.else11.i.i:                                    ; preds = %if.else.i.i
  %add.i.i = fsub fast float -0.000000e+00, %2
  %call.i63.i.i = tail call fast float @atan2f(float %add.i.i, float 0.000000e+00) #27
  %call.i64.i.i = tail call fast float @acosf(float %1) #27
  %call.i65.i.i = tail call fast float @atan2f(float %2, float 0.000000e+00) #27
  br label %_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit

_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit: ; preds = %if.else11.i.i, %if.else.i.i, %entry
  %head.sroa.6.0.i = phi float [ %call.i63.i.i, %if.else11.i.i ], [ 0.000000e+00, %entry ], [ -0.000000e+00, %if.else.i.i ]
  %head.sroa.9.0.i = phi float [ %call.i64.i.i, %if.else11.i.i ], [ 0.000000e+00, %entry ], [ 0x400921FB60000000, %if.else.i.i ]
  %head.sroa.12.0.i = phi float [ %call.i65.i.i, %if.else11.i.i ], [ 0.000000e+00, %entry ], [ 0.000000e+00, %if.else.i.i ]
  %rotator.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %3 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !236
  %agg.tmp6.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %agg.tmp6.sroa.0.0..sroa_idx.i, align 8
  %agg.tmp6.sroa.4.0..sroa_idx24.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %agg.tmp6.sroa.4.0..sroa_idx24.i, align 4
  %agg.tmp6.sroa.5.0..sroa_idx26.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 2
  store float %conv4.i, float* %agg.tmp6.sroa.5.0..sroa_idx26.i, align 8
  %agg.tmp6.sroa.6.0..sroa_idx28.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 3
  store float %head.sroa.6.0.i, float* %agg.tmp6.sroa.6.0..sroa_idx28.i, align 4
  %agg.tmp6.sroa.7.0..sroa_idx30.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 4
  store float %head.sroa.9.0.i, float* %agg.tmp6.sroa.7.0..sroa_idx30.i, align 8
  %agg.tmp6.sroa.8.0..sroa_idx32.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 5
  store float %head.sroa.12.0.i, float* %agg.tmp6.sroa.8.0..sroa_idx32.i, align 4
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !236
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable.i = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !40
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable.i, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn.i, align 8
  tail call void %6(%class.CAmbisonicProcessor* %4) #24
  %7 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !236
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 5
  %9 = load i8, i8* %8, align 4, !tbaa !54, !range !55
  %tobool.i = icmp eq i8 %9, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 undef) #24
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv.exit
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !tbaa !49
  %cmp.i = icmp eq i32 %11, 0
  br i1 %cmp.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024) #24
  %.pr.i = load i32, i32* %10, align 8, !tbaa !49
  %cmp5.i = icmp ugt i32 %.pr.i, 1
  br i1 %cmp5.i, label %if.end7.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.end7.i:                                        ; preds = %if.end3.i
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024) #24
  %.pr19.i = load i32, i32* %10, align 8, !tbaa !49
  %cmp9.i = icmp ugt i32 %.pr19.i, 2
  br i1 %cmp9.i, label %if.then10.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.then10.i:                                      ; preds = %if.end7.i
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024) #24
  br label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit: ; preds = %if.then10.i, %if.end7.i, %if.end3.i, %if.end.i
  %12 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %inc.i3 = add nsw i32 %12, 1
  store i32 %inc.i3, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %zoomer.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %13 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !237
  %div.i = sdiv i32 %inc.i3, 100
  %conv.i4 = sitofp i32 %div.i to float
  %14 = tail call fast float @llvm.sin.f32(float %conv.i4) #24
  %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  store float %14, float* %fZoom.addr.i.i, align 4, !tbaa !47
  %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i.i, align 4, !tbaa !47
  %cmp.i.i.i = fcmp fast ogt float %14, 0x3FEFAE1480000000
  %__b.__a.i.i.i = select i1 %cmp.i.i.i, float* %ref.tmp.i.i, float* %fZoom.addr.i.i
  %15 = bitcast float* %__b.__a.i.i.i to i32*
  %16 = load i32, i32* %15, align 4, !tbaa !47
  %m_fZoom.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %13, i64 0, i32 5
  %17 = bitcast float* %m_fZoom.i.i to i32*
  store i32 %16, i32* %17, align 8, !tbaa !155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  %18 = bitcast %class.CAmbisonicZoomer* %13 to void (%class.CAmbisonicZoomer*)***
  %vtable.i5 = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %18, align 8, !tbaa !40
  %vfn.i6 = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable.i5, i64 4
  %19 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn.i6, align 8
  tail call void %19(%class.CAmbisonicZoomer* %13) #24
  %20 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !237
  %21 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8, !tbaa !53
  %cmp397.i = icmp eq i32 %22, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  %_M_head_impl.i.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95.i, align 8, !tbaa !43
  %23 = zext i32 %22 to i64
  %24 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93.i, align 8, !tbaa !43
  %25 = add nsw i64 %23, -1
  %xtraiter = and i64 %23, 3
  %26 = icmp ult i64 %25, 3
  %unroll_iter = sub nsw i64 %23, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %26, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, 1024
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %24, i64 %indvars.iv108.i
  %27 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !47
  %28 = tail call fast float @llvm.fabs.f32(float %27) #24
  %conv17.us.i = fpext float %28 to double
  %cmp18.us.i = fcmp fast ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %29 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !43
  %arrayidx45.us.i = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx45.us.i, align 4, !tbaa !47
  %31 = load float, float* %m_fZoomRed.i, align 4, !tbaa !149
  %mul46.us.i = fmul fast float %31, %30
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !47
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %32 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !156
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %33 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !43
  %arrayidx23.us.i = getelementptr inbounds float, float* %33, i64 %indvars.iv110.i
  %34 = load float, float* %arrayidx23.us.i, align 4, !tbaa !47
  %mul24.us.i = fmul fast float %34, %32
  %35 = load float, float* %m_fZoom.i, align 8, !tbaa !155
  %mul28.us.i = fmul fast float %27, %add.us.i.lcssa
  %mul29.us.i = fmul fast float %mul28.us.i, %35
  %add30.us.i = fadd fast float %mul29.us.i, %mul24.us.i
  %36 = tail call fast float @llvm.fabs.f32(float %35) #24
  %37 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !154
  %mul34.us.i = fmul fast float %36, %37
  %add35.us.i = fadd fast float %mul34.us.i, %32
  %div.us.i = fdiv fast float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !47
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %23
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %38 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !47
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %39 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !43
  %arrayidx.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv110.i
  %40 = load float, float* %arrayidx.us.i, align 4, !tbaa !47
  %mul.us.i = fmul fast float %40, %38
  %add.us.i = fadd fast float %mul.us.i, %fMic.098.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %41 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !47
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %42 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !43
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %42, i64 %indvars.iv110.i
  %43 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !47
  %mul.us.i.1 = fmul fast float %43, %41
  %add.us.i.1 = fadd fast float %mul.us.i.1, %add.us.i
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %44 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !47
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %45 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !43
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %45, i64 %indvars.iv110.i
  %46 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !47
  %mul.us.i.2 = fmul fast float %46, %44
  %add.us.i.2 = fadd fast float %mul.us.i.2, %add.us.i.1
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %47 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !47
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %48 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !43
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !47
  %mul.us.i.3 = fmul fast float %49, %47
  %add.us.i.3 = fadd fast float %mul.us.i.3, %add.us.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %50 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !47
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %51 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !43
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %51, i64 %indvars.iv110.i
  %52 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !47
  %mul.us.i.epil = fmul fast float %52, %50
  %add.us.i.epil = fadd fast float %mul.us.i.epil, %fMic.098.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !243

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, float** nocapture readonly %resultSample) local_unnamed_addr #3 align 2 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp3 = alloca float, align 4
  %ref.tmp11 = alloca float, align 4
  %ref.tmp13 = alloca float, align 4
  %tempSample0 = alloca i16, align 2
  %tempSample1 = alloca i16, align 2
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  %ref.tmp3.0..sroa_cast = bitcast float* %ref.tmp3 to i8*
  %arrayidx8 = getelementptr inbounds float*, float** %resultSample, i64 1
  %ref.tmp11.0..sroa_cast = bitcast float* %ref.tmp11 to i8*
  %ref.tmp13.0..sroa_cast = bitcast float* %ref.tmp13 to i8*
  %0 = bitcast i16* %tempSample0 to i8*
  %1 = bitcast i16* %tempSample1 to i8*
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %3 = load float*, float** %resultSample, align 8, !tbaa !43
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp, align 4, !tbaa !47
  %4 = load float, float* %arrayidx2, align 4, !tbaa !47
  %cmp.i = fcmp fast ogt float %4, 1.000000e+00
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %arrayidx2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp3, align 4, !tbaa !47
  %5 = load float, float* %__b.__a.i, align 4, !tbaa !47
  %cmp.i49 = fcmp fast olt float %5, -1.000000e+00
  %__b.__a.i50 = select i1 %cmp.i49, float* %ref.tmp3, float* %__b.__a.i
  %6 = bitcast float* %__b.__a.i50 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !47
  %8 = bitcast float* %arrayidx2 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  %9 = load float*, float** %arrayidx8, align 8, !tbaa !43
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp11, align 4, !tbaa !47
  %10 = load float, float* %arrayidx10, align 4, !tbaa !47
  %cmp.i47 = fcmp fast ogt float %10, 1.000000e+00
  %__b.__a.i48 = select i1 %cmp.i47, float* %ref.tmp11, float* %arrayidx10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp13, align 4, !tbaa !47
  %11 = load float, float* %__b.__a.i48, align 4, !tbaa !47
  %cmp.i45 = fcmp fast olt float %11, -1.000000e+00
  %__b.__a.i46 = select i1 %cmp.i45, float* %ref.tmp13, float* %__b.__a.i48
  %12 = bitcast float* %__b.__a.i46 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !47
  %14 = bitcast float* %arrayidx10 to i32*
  store i32 %13, i32* %14, align 4, !tbaa !47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24
  %15 = load float, float* %arrayidx2, align 4, !tbaa !47
  %conv = fpext float %15 to double
  %mul = fmul fast double %conv, 3.276700e+04
  %conv21 = fptosi double %mul to i16
  store i16 %conv21, i16* %tempSample0, align 2, !tbaa !45
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1) #24
  %16 = bitcast i32 %13 to float
  %conv25 = fpext float %16 to double
  %mul27 = fmul fast double %conv25, 3.276700e+04
  %conv28 = fptosi double %mul27 to i16
  store i16 %conv28, i16* %tempSample1, align 2, !tbaa !45
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !218
  %call29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %17, i8* nonnull %0, i64 2) #24
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !218
  %call31 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %18, i8* nonnull %1, i64 2) #24
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD2Ev(%class.CBFormat* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq float** %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i, align 8, !tbaa !63
  %tobool.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !42
  %conv = sitofp i32 %inc to double
  %mul3 = fmul fast double %conv, 0x3F712609C699F47A
  %conv4 = fptrunc double %mul3 to float
  %1 = tail call fast float @llvm.cos.f32(float %conv4) #24
  %2 = tail call fast float @llvm.sin.f32(float %conv4) #24
  %cmp.i = fcmp fast oeq float %1, 1.000000e+00
  br i1 %cmp.i, label %_ZN11OrientationC2Efff.exit, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp5.i = fcmp fast oeq float %1, -1.000000e+00
  br i1 %cmp5.i, label %_ZN11OrientationC2Efff.exit, label %if.else11.i

if.else11.i:                                      ; preds = %if.else.i
  %add.i = fsub fast float -0.000000e+00, %2
  %call.i63.i = tail call fast float @atan2f(float %add.i, float 0.000000e+00) #27
  %call.i64.i = tail call fast float @acosf(float %1) #27
  %call.i65.i = tail call fast float @atan2f(float %2, float 0.000000e+00) #27
  br label %_ZN11OrientationC2Efff.exit

_ZN11OrientationC2Efff.exit:                      ; preds = %if.else11.i, %if.else.i, %entry
  %head.sroa.6.0 = phi float [ %call.i63.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ -0.000000e+00, %if.else.i ]
  %head.sroa.9.0 = phi float [ %call.i64.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ 0x400921FB60000000, %if.else.i ]
  %head.sroa.12.0 = phi float [ %call.i65.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ 0.000000e+00, %if.else.i ]
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %3 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !236
  %agg.tmp6.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %agg.tmp6.sroa.0.0..sroa_idx, align 8
  %agg.tmp6.sroa.4.0..sroa_idx24 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %agg.tmp6.sroa.4.0..sroa_idx24, align 4
  %agg.tmp6.sroa.5.0..sroa_idx26 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 2
  store float %conv4, float* %agg.tmp6.sroa.5.0..sroa_idx26, align 8
  %agg.tmp6.sroa.6.0..sroa_idx28 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 3
  store float %head.sroa.6.0, float* %agg.tmp6.sroa.6.0..sroa_idx28, align 4
  %agg.tmp6.sroa.7.0..sroa_idx30 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 4
  store float %head.sroa.9.0, float* %agg.tmp6.sroa.7.0..sroa_idx30, align 8
  %agg.tmp6.sroa.8.0..sroa_idx32 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %3, i64 0, i32 1, i32 5
  store float %head.sroa.12.0, float* %agg.tmp6.sroa.8.0..sroa_idx32, align 4
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !236
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicProcessor* %4) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !42
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !237
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %2 = tail call fast float @llvm.sin.f32(float %conv)
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %2, float* %fZoom.addr.i, align 4, !tbaa !47
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !47
  %cmp.i.i = fcmp fast ogt float %2, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %3 = bitcast float* %__b.__a.i.i to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !47
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 5
  %5 = bitcast float* %m_fZoom.i to i32*
  store i32 %4, i32* %5, align 8, !tbaa !155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %6 = bitcast %class.CAmbisonicZoomer* %1 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicZoomer* %1) #24
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: norecurse nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #18 {
entry:
  %audio = alloca %"class.ILLIXR_AUDIO::ABAudio", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %argc, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #24
  %0 = load i8*, i8** %argv, align 8, !tbaa !43
  %tobool.i = icmp eq i8* %0, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !40
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %2 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !209
  %or.i.i.i = or i32 %4, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull %2, i32 %or.i.i.i) #24
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

if.else.i:                                        ; preds = %if.then
  %call.i.i257 = tail call i64 @strlen(i8* nonnull %0) #24
  %call1.i258 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull %0, i64 %call.i.i257) #24
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit: ; preds = %if.else.i, %if.then.i
  %call1.i260 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i64 41) #24
  %call1.i263 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i64 26) #24
  %call1.i266 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9, i64 0, i64 0), i64 121) #24
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 1
  %5 = load i8*, i8** %arrayidx5, align 8, !tbaa !43
  %call.i = tail call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10) #24
  %conv.i = trunc i64 %call.i to i32
  %6 = bitcast %"class.ILLIXR_AUDIO::ABAudio"* %audio to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #24
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !163
  %9 = bitcast %union.anon* %7 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !168
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %10, align 2, !tbaa !170
  call void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 2)
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !165
  %cmp.i.i.i = icmp eq i8* %11, %9
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @_ZdlPv(i8* %11) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %if.end
  call void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio)
  %call7 = call i8* @_Znam(i64 4096) #25
  %call8 = call i8* @_Znam(i64 4096) #25
  %call9 = call i8* @_Znwm(i64 64) #25
  %12 = bitcast i8* %call9 to %class.CBFormat*
  %13 = bitcast i8* %call9 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %call9, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8, !tbaa !49
  %16 = getelementptr inbounds i8, i8* %call9, i64 12
  store i8 0, i8* %16, align 4, !tbaa !52
  %17 = getelementptr inbounds i8, i8* %call9, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8, !tbaa !53
  %19 = getelementptr inbounds i8, i8* %call9, i64 20
  store i8 0, i8* %19, align 4, !tbaa !54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !40
  %m_nSamples.i = getelementptr inbounds i8, i8* %call9, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %call10 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %12, i32 3, i1 zeroext true, i32 1024) #24
  %call11 = call i8* @_Znam(i64 24) #25
  %call12 = call i8* @_Znam(i64 4096) #25
  %20 = bitcast i8* %call11 to i8**
  store i8* %call12, i8** %20, align 8, !tbaa !43
  %call14 = call i8* @_Znam(i64 4096) #25
  %arrayidx15 = getelementptr inbounds i8, i8* %call11, i64 8
  %21 = bitcast i8* %arrayidx15 to i8**
  store i8* %call14, i8** %21, align 8, !tbaa !43
  %call16 = call i8* @_Znam(i64 4096) #25
  %arrayidx17 = getelementptr inbounds i8, i8* %call11, i64 16
  %22 = bitcast i8* %arrayidx17 to i8**
  store i8* %call16, i8** %22, align 8, !tbaa !43
  %call18 = call i8* @_Znam(i64 40) #25
  %call19 = call i8* @_Znam(i64 4096) #25
  %23 = bitcast i8* %call18 to i8**
  store i8* %call19, i8** %23, align 8, !tbaa !43
  %call21 = call i8* @_Znam(i64 4096) #25
  %arrayidx22 = getelementptr inbounds i8, i8* %call18, i64 8
  %24 = bitcast i8* %arrayidx22 to i8**
  store i8* %call21, i8** %24, align 8, !tbaa !43
  %call23 = call i8* @_Znam(i64 4096) #25
  %arrayidx24 = getelementptr inbounds i8, i8* %call18, i64 16
  %25 = bitcast i8* %arrayidx24 to i8**
  store i8* %call23, i8** %25, align 8, !tbaa !43
  %call25 = call i8* @_Znam(i64 4096) #25
  %arrayidx26 = getelementptr inbounds i8, i8* %call18, i64 24
  %26 = bitcast i8* %arrayidx26 to i8**
  store i8* %call25, i8** %26, align 8, !tbaa !43
  %call27 = call i8* @_Znam(i64 4096) #25
  %arrayidx28 = getelementptr inbounds i8, i8* %call18, i64 32
  %27 = bitcast i8* %arrayidx28 to i8**
  store i8* %call27, i8** %27, align 8, !tbaa !43
  %call29 = call i8* @_Znam(i64 56) #25
  %call30 = call i8* @_Znam(i64 4096) #25
  %28 = bitcast i8* %call29 to i8**
  store i8* %call30, i8** %28, align 8, !tbaa !43
  %call32 = call i8* @_Znam(i64 4096) #25
  %arrayidx33 = getelementptr inbounds i8, i8* %call29, i64 8
  %29 = bitcast i8* %arrayidx33 to i8**
  store i8* %call32, i8** %29, align 8, !tbaa !43
  %call34 = call i8* @_Znam(i64 4096) #25
  %arrayidx35 = getelementptr inbounds i8, i8* %call29, i64 16
  %30 = bitcast i8* %arrayidx35 to i8**
  store i8* %call34, i8** %30, align 8, !tbaa !43
  %call36 = call i8* @_Znam(i64 4096) #25
  %arrayidx37 = getelementptr inbounds i8, i8* %call29, i64 24
  %31 = bitcast i8* %arrayidx37 to i8**
  store i8* %call36, i8** %31, align 8, !tbaa !43
  %call38 = call i8* @_Znam(i64 4096) #25
  %arrayidx39 = getelementptr inbounds i8, i8* %call29, i64 32
  %32 = bitcast i8* %arrayidx39 to i8**
  store i8* %call38, i8** %32, align 8, !tbaa !43
  %call40 = call i8* @_Znam(i64 4096) #25
  %arrayidx41 = getelementptr inbounds i8, i8* %call29, i64 40
  %33 = bitcast i8* %arrayidx41 to i8**
  store i8* %call40, i8** %33, align 8, !tbaa !43
  %call42 = call i8* @_Znam(i64 4096) #25
  %arrayidx43 = getelementptr inbounds i8, i8* %call29, i64 48
  %34 = bitcast i8* %arrayidx43 to i8**
  store i8* %call42, i8** %34, align 8, !tbaa !43
  %call44 = call noalias i8* @malloc(i64 200) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 5
  %35 = bitcast %class.CAmbisonicProcessor** %rotator to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !236
  %37 = bitcast i8* %call44 to i64*
  store i64 %36, i64* %37, align 1, !tbaa !244
  %bytes_rotator46 = getelementptr inbounds i8, i8* %call44, i64 8
  %38 = bitcast i8* %bytes_rotator46 to i64*
  store i64 200, i64* %38, align 1, !tbaa !246
  %sumBF47 = getelementptr inbounds i8, i8* %call44, i64 16
  %39 = bitcast i8* %sumBF47 to i8**
  store i8* %call9, i8** %39, align 1, !tbaa !247
  %bytes_sumBF48 = getelementptr inbounds i8, i8* %call44, i64 24
  %40 = bitcast i8* %bytes_sumBF48 to i64*
  store i64 64, i64* %40, align 1, !tbaa !248
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 6
  %41 = bitcast %class.CAmbisonicZoomer** %zoomer to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !237
  %zoomer49 = getelementptr inbounds i8, i8* %call44, i64 32
  %43 = bitcast i8* %zoomer49 to i64*
  store i64 %42, i64* %43, align 1, !tbaa !249
  %bytes_zoomer50 = getelementptr inbounds i8, i8* %call44, i64 40
  %44 = bitcast i8* %bytes_zoomer50 to i64*
  store i64 104, i64* %44, align 1, !tbaa !250
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 3
  %45 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i64*
  %46 = load i64, i64* %45, align 8, !tbaa !234
  %decoder051 = getelementptr inbounds i8, i8* %call44, i64 48
  %47 = bitcast i8* %decoder051 to i64*
  store i64 %46, i64* %47, align 1, !tbaa !251
  %bytes_decoder052 = getelementptr inbounds i8, i8* %call44, i64 56
  %48 = bitcast i8* %bytes_decoder052 to i64*
  store i64 296, i64* %48, align 1, !tbaa !252
  %resultSample053 = getelementptr inbounds i8, i8* %call44, i64 64
  %49 = bitcast i8* %resultSample053 to i8**
  store i8* %call7, i8** %49, align 1, !tbaa !253
  %bytes_resultSample054 = getelementptr inbounds i8, i8* %call44, i64 72
  %50 = bitcast i8* %bytes_resultSample054 to i64*
  store i64 4096, i64* %50, align 1, !tbaa !254
  %nSample = getelementptr inbounds i8, i8* %call44, i64 80
  %51 = bitcast i8* %nSample to i64*
  store i64 1024, i64* %51, align 1, !tbaa !255
  %channelpart155 = getelementptr inbounds i8, i8* %call44, i64 88
  %52 = bitcast i8* %channelpart155 to i8**
  store i8* %call11, i8** %52, align 1, !tbaa !256
  %bytes_channelpart156 = getelementptr inbounds i8, i8* %call44, i64 96
  %53 = bitcast i8* %bytes_channelpart156 to i64*
  store i64 12288, i64* %53, align 1, !tbaa !257
  %channelpart257 = getelementptr inbounds i8, i8* %call44, i64 104
  %54 = bitcast i8* %channelpart257 to i8**
  store i8* %call18, i8** %54, align 1, !tbaa !258
  %bytes_channelpart258 = getelementptr inbounds i8, i8* %call44, i64 112
  %55 = bitcast i8* %bytes_channelpart258 to i64*
  store i64 20480, i64* %55, align 1, !tbaa !259
  %channelpart359 = getelementptr inbounds i8, i8* %call44, i64 120
  %56 = bitcast i8* %channelpart359 to i8**
  store i8* %call29, i8** %56, align 1, !tbaa !260
  %bytes_channelpart360 = getelementptr inbounds i8, i8* %call44, i64 128
  %57 = bitcast i8* %bytes_channelpart360 to i64*
  store i64 28672, i64* %57, align 1, !tbaa !261
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 4
  %58 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !235
  %decoder161 = getelementptr inbounds i8, i8* %call44, i64 136
  %60 = bitcast i8* %decoder161 to i64*
  store i64 %59, i64* %60, align 1, !tbaa !262
  %bytes_decoder162 = getelementptr inbounds i8, i8* %call44, i64 144
  %61 = bitcast i8* %bytes_decoder162 to i64*
  store i64 296, i64* %61, align 1, !tbaa !263
  %resultSample163 = getelementptr inbounds i8, i8* %call44, i64 152
  %62 = bitcast i8* %resultSample163 to i8**
  store i8* %call8, i8** %62, align 1, !tbaa !264
  %bytes_resultSample164 = getelementptr inbounds i8, i8* %call44, i64 160
  %63 = bitcast i8* %bytes_resultSample164 to i64*
  store i64 4096, i64* %63, align 1, !tbaa !265
  %64 = inttoptr i64 %46 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %64, i64 0, i32 4
  %65 = load i32, i32* %m_nChannelCount, align 8, !tbaa !53
  %conv = zext i32 %65 to i64
  %decoder0ChannelCount = getelementptr inbounds i8, i8* %call44, i64 168
  %66 = bitcast i8* %decoder0ChannelCount to i64*
  store i64 %conv, i64* %66, align 1, !tbaa !266
  %67 = inttoptr i64 %46 to %class.CAmbisonicBinauralizer*
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %67, i64 0, i32 5
  %68 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %conv67 = zext i32 %68 to i64
  %decoder0FFTBins = getelementptr inbounds i8, i8* %call44, i64 176
  %69 = bitcast i8* %decoder0FFTBins to i64*
  store i64 %conv67, i64* %69, align 1, !tbaa !267
  %70 = inttoptr i64 %59 to %class.CAmbisonicBase*
  %m_nChannelCount69 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %70, i64 0, i32 4
  %71 = load i32, i32* %m_nChannelCount69, align 8, !tbaa !53
  %conv70 = zext i32 %71 to i64
  %decoder1ChannelCount = getelementptr inbounds i8, i8* %call44, i64 184
  %72 = bitcast i8* %decoder1ChannelCount to i64*
  store i64 %conv70, i64* %72, align 1, !tbaa !268
  %73 = inttoptr i64 %59 to %class.CAmbisonicBinauralizer*
  %m_nFFTBins72 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %73, i64 0, i32 5
  %74 = load i32, i32* %m_nFFTBins72, align 4, !tbaa !182
  %conv73 = zext i32 %74 to i64
  %decoder1FFTBins = getelementptr inbounds i8, i8* %call44, i64 192
  %75 = bitcast i8* %decoder1FFTBins to i64*
  store i64 %conv73, i64* %75, align 1, !tbaa !269
  %graphaudioDecoding_cloned = call i8* @llvm_hpvm_streamLaunch(void (i8*, i8*)* @audioDecoding_cloned.LaunchFunction, i8* %call44)
  %cmp75 = icmp sgt i32 %conv.i, 1
  %76 = inttoptr i64 %42 to i8*
  %77 = inttoptr i64 %46 to i8*
  %78 = inttoptr i64 %59 to i8*
  br i1 %cmp75, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %79 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %80 = load i8*, i8** %79, align 8, !tbaa !236
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.0270 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  store i64 %36, i64* %37, align 1, !tbaa !244
  store i8* %call9, i8** %39, align 1, !tbaa !247
  store i64 %42, i64* %43, align 1, !tbaa !249
  store i64 %46, i64* %47, align 1, !tbaa !251
  store i8* %call7, i8** %49, align 1, !tbaa !253
  store i8* %call11, i8** %52, align 1, !tbaa !256
  store i8* %call18, i8** %54, align 1, !tbaa !258
  store i8* %call29, i8** %56, align 1, !tbaa !260
  store i64 %59, i64* %60, align 1, !tbaa !262
  store i8* %call8, i8** %62, align 1, !tbaa !264
  call void @llvm_hpvm_track_mem(i8* %80, i64 200) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call9, i64 64) #24
  call void @llvm_hpvm_track_mem(i8* %76, i64 104) #24
  call void @llvm_hpvm_track_mem(i8* %77, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* %78, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call7, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call8, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call11, i64 12288) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call18, i64 20480) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call29, i64 28672) #24
  call void @llvm_hpvm_streamPush(i8* %graphaudioDecoding_cloned, i8* %call44)
  %call961 = call i8* @llvm_hpvm_streamPop(i8* %graphaudioDecoding_cloned)
  call void @llvm_hpvm_request_mem(i8* %80, i64 200) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call9, i64 64) #24
  call void @llvm_hpvm_request_mem(i8* %76, i64 104) #24
  call void @llvm_hpvm_request_mem(i8* %77, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* %78, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call7, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call8, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call11, i64 12288) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call18, i64 20480) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call29, i64 28672) #24
  call void @llvm_hpvm_untrack_mem(i8* %80) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call9) #24
  call void @llvm_hpvm_untrack_mem(i8* %76) #24
  call void @llvm_hpvm_untrack_mem(i8* %77) #24
  call void @llvm_hpvm_untrack_mem(i8* %78) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call7) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call8) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call11) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call18) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call29) #24
  %inc = add nuw nsw i32 %i.0270, 1
  %exitcond = icmp eq i32 %inc, %conv.i
  br i1 %exitcond, label %if.end106, label %for.body

if.else:                                          ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  call void @llvm_hpvm_streamPush(i8* %graphaudioDecoding_cloned, i8* %call44)
  %call1052 = call i8* @llvm_hpvm_streamPop(i8* %graphaudioDecoding_cloned)
  br label %if.end106

if.end106:                                        ; preds = %if.else, %for.body
  call void @llvm_hpvm_streamWait(i8* %graphaudioDecoding_cloned)
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #24
  br label %return

return:                                           ; preds = %if.end106, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  %retval.0 = phi i32 [ 1, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit ], [ 0, %if.end106 ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #19

; Function Attrs: nounwind
declare void @llvm_hpvm_track_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_request_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_untrack_mem(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8MIT_HRTFD0Ev(%class.MIT_HRTF* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = bitcast %class.MIT_HRTF* %this to i8*
  tail call void @_ZdlPv(i8* %0) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %this) unnamed_addr #3 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD0Ev(%class.CAmbisonicBase* %this) unnamed_addr #3 comdat align 2 {
entry:
  tail call void @llvm.trap() #26
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !63
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2, align 8, !tbaa !63
  %tobool.i.i.i3 = icmp eq float* %3, null
  br i1 %tobool.i.i.i3, label %_ZNSt6vectorIfSaIfEED2Ev.exit5, label %if.then.i.i.i4

if.then.i.i.i4:                                   ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit5

_ZNSt6vectorIfSaIfEED2Ev.exit5:                   ; preds = %if.then.i.i.i4, %_ZNSt6vectorIfSaIfEED2Ev.exit
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD0Ev(%class.CAmbisonicSource* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !63
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %5 = bitcast %class.CAmbisonicSource* %this to i8*
  tail call void @_ZdlPv(i8* %5) #25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD0Ev(%class.CBFormat* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i = icmp eq float** %1, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i

_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i: ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %5 = bitcast %class.CBFormat* %this to i8*
  tail call void @_ZdlPv(i8* %5) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #3 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq float* %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i: ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #25
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i, %entry
  store float* null, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_head_impl.i.i.i.i.i.i2, align 8, !tbaa !43
  %cmp.i3 = icmp eq float* %3, null
  br i1 %cmp.i3, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #25
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  store float* null, float** %_M_head_impl.i.i.i.i.i.i2, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i6, align 8, !tbaa !43
  %cmp.i7 = icmp eq float* %5, null
  br i1 %cmp.i7, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8: ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdaPv(i8* %6) #25
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i8, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  store float* null, float** %_M_head_impl.i.i.i.i.i.i6, align 8, !tbaa !43
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %8 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %8, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  %9 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 -1, i32 0, i32 3, i32 2
  %10 = bitcast float* %9 to i8*
  %11 = bitcast float* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %arraydestroy.isempty.i = icmp eq i64 %12, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %12
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %13 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i.i = icmp eq float* %14, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %15 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i.i = icmp eq float* %16, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %17 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* nonnull %17) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %8
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %10) #25
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD0Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #3 comdat align 2 {
entry:
  tail call void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) #24
  %0 = bitcast %class.CAmbisonicZoomer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #25
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #17 comdat align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !40
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !63
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.1, align 8, !tbaa !63
  %tobool.i.i.i.1 = icmp eq float* %3, null
  br i1 %tobool.i.i.i.1, label %_ZNSt6vectorIfSaIfEED2Ev.exit.1, label %if.then.i.i.i.1

if.then.i.i.i11:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1
  %4 = bitcast float* %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit12

_ZNSt6vectorIfSaIfEED2Ev.exit12:                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1, %if.then.i.i.i11
  %_M_start.i.i13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i13, align 8, !tbaa !63
  %tobool.i.i.i14 = icmp eq float* %5, null
  br i1 %tobool.i.i.i14, label %_ZNSt6vectorIfSaIfEED2Ev.exit16, label %if.then.i.i.i15

if.then.i.i.i15:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit16

_ZNSt6vectorIfSaIfEED2Ev.exit16:                  ; preds = %if.then.i.i.i15, %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %_M_start.i.i17 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i17, align 8, !tbaa !63
  %tobool.i.i.i18 = icmp eq float* %7, null
  br i1 %tobool.i.i.i18, label %_ZNSt6vectorIfSaIfEED2Ev.exit20, label %if.then.i.i.i19

if.then.i.i.i19:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit20

_ZNSt6vectorIfSaIfEED2Ev.exit20:                  ; preds = %if.then.i.i.i19, %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i = icmp eq %struct.kiss_fft_cpx* %9, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit20
  %10 = bitcast %struct.kiss_fft_cpx* %9 to i8*
  tail call void @_ZdaPv(i8* %10) #25
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i, %_ZNSt6vectorIfSaIfEED2Ev.exit20
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i, align 8, !tbaa !185
  %_M_finish.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish.i, align 8, !tbaa !197
  %cmp3.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %11, %12
  br i1 %cmp3.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %__first.addr.04.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i ], [ %11, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %13, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %14 = bitcast %struct.kiss_fft_cpx* %13 to i8*
  tail call void @_ZdaPv(i8* %14) #25
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i, %for.body.i.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i, %12
  br i1 %cmp.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i, label %for.body.i.i.i.i

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i, align 8, !tbaa !185
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %15 = phi %"class.std::unique_ptr.33"* [ %.pre.i, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i ], [ %11, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %tobool.i.i.i21 = icmp eq %"class.std::unique_ptr.33"* %15, null
  br i1 %tobool.i.i.i21, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit, label %if.then.i.i.i22

if.then.i.i.i22:                                  ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i
  %16 = bitcast %"class.std::unique_ptr.33"* %15 to i8*
  tail call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit: ; preds = %if.then.i.i.i22, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i
  %_M_start.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i.1, align 8, !tbaa !185
  %_M_finish.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish.i.1, align 8, !tbaa !197
  %cmp3.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.33"* %17, %18
  br i1 %cmp3.i.i.i.i.1, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.1, label %for.body.i.i.i.i.1

if.then.i:                                        ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
  %19 = bitcast %struct.kiss_fftr_state* %39 to i8*
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  tail call void %20(i8* nonnull %19) #24
  br label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, %if.then.i
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i23, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i25, align 8, !tbaa !43
  %cmp.i26 = icmp eq %struct.kiss_fftr_state* %21, null
  br i1 %cmp.i26, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit29, label %if.then.i28

if.then.i28:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  %22 = bitcast %struct.kiss_fftr_state* %21 to i8*
  %_M_head_impl.i.i.i.i.i.i.i27 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i.i27, align 8, !tbaa !43
  tail call void %23(i8* nonnull %22) #24
  br label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit29

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit29: ; preds = %if.then.i28, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i25, align 8, !tbaa !43
  %24 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !40
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %25 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !143
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %25, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit29
  %26 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %25, i64 -1, i32 0, i32 3, i32 2
  %27 = bitcast float* %26 to i8*
  %28 = bitcast float* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %arraydestroy.isempty.i = icmp eq i64 %29, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %25, i64 %29
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %30 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8, !tbaa !40
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i.i.i.i = icmp eq float* %31, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %32 = bitcast float* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %32) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !63
  %tobool.i.i.i3.i.i.i = icmp eq float* %33, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %34 = bitcast float* %33 to i8*
  tail call void @_ZdlPv(i8* nonnull %34) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %25
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %27) #25
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit29
  ret void

for.body.i.i.i.i.1:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %__first.addr.04.i.i.i.i.1 = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1 ], [ %17, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %35, null
  br i1 %cmp.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i.1
  %36 = bitcast %struct.kiss_fft_cpx* %35 to i8*
  tail call void @_ZdaPv(i8* %36) #25
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.1, %for.body.i.i.i.i.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.04.i.i.i.i.1, i64 1
  %cmp.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i.1, %18
  br i1 %cmp.i.i.i.i.1, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i.1, label %for.body.i.i.i.i.1

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i.1: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
  %.pre.i.1 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i.1, align 8, !tbaa !185
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.1

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.1: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %37 = phi %"class.std::unique_ptr.33"* [ %.pre.i.1, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.loopexit.i.1 ], [ %17, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %tobool.i.i.i21.1 = icmp eq %"class.std::unique_ptr.33"* %37, null
  br i1 %tobool.i.i.i21.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, label %if.then.i.i.i22.1

if.then.i.i.i22.1:                                ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.1
  %38 = bitcast %"class.std::unique_ptr.33"* %37 to i8*
  tail call void @_ZdlPv(i8* nonnull %38) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1: ; preds = %if.then.i.i.i22.1, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit.i.1
  %_M_head_impl.i.i.i.i.i.i23 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i23, align 8, !tbaa !43
  %cmp.i24 = icmp eq %struct.kiss_fftr_state* %39, null
  br i1 %cmp.i24, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit, label %if.then.i

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %40 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %40) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.1

_ZNSt6vectorIfSaIfEED2Ev.exit.1:                  ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIfSaIfEED2Ev.exit
  %_M_start.i.i9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %41 = load float*, float** %_M_start.i.i9, align 8, !tbaa !63
  %tobool.i.i.i10 = icmp eq float* %41, null
  br i1 %tobool.i.i.i10, label %_ZNSt6vectorIfSaIfEED2Ev.exit12, label %if.then.i.i.i11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD0Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #17 comdat align 2 {
entry:
  tail call void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) #24
  %0 = bitcast %class.CAmbisonicBinauralizer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #25
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN4HRTFD2Ev(%class.HRTF* %this) unnamed_addr #3 comdat align 2 {
entry:
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #20

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

; Function Attrs: nofree nounwind readnone
declare float @atan2f(float, float) local_unnamed_addr #21

; Function Attrs: nofree nounwind readnone
declare float @acosf(float) local_unnamed_addr #21

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #9

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #19

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #22

declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #22

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) local_unnamed_addr #3 comdat align 2 {
entry:
  %0 = ptrtoint float* %__position.coerce to i64
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end88, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %1 = bitcast float** %_M_end_of_storage to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !270
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !61
  %sub.ptr.sub = sub i64 %2, %4
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp3, label %if.else45, label %if.then4

if.then4:                                         ; preds = %if.then
  %6 = bitcast float* %__x to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !47
  %sub.ptr.sub.i = sub i64 %4, %0
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp10 = icmp ugt i64 %sub.ptr.div.i, %__n
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then4
  %idx.neg = sub i64 0, %__n
  %add.ptr = getelementptr inbounds float, float* %5, i64 %idx.neg
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i164 = ptrtoint float* %add.ptr to i64
  %diff.neg = shl i64 %__n, 2
  %tobool.i.i.i.i.i.i.i.i167 = icmp eq i64 %diff.neg, 0
  br i1 %tobool.i.i.i.i.i.i.i.i167, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit170, label %if.then.i.i.i.i.i.i.i.i168

if.then.i.i.i.i.i.i.i.i168:                       ; preds = %if.then11
  %8 = inttoptr i64 %4 to i8*
  %9 = bitcast float* %add.ptr to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 %diff.neg, i1 false) #24
  %.pre187 = load float*, float** %_M_finish, align 8, !tbaa !61
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit170

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit170: ; preds = %if.then.i.i.i.i.i.i.i.i168, %if.then11
  %10 = phi float* [ %5, %if.then11 ], [ %.pre187, %if.then.i.i.i.i.i.i.i.i168 ]
  %add.ptr22 = getelementptr inbounds float, float* %10, i64 %__n
  store float* %add.ptr22, float** %_M_finish, align 8, !tbaa !61
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i164, %0
  %tobool.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %tobool.i.i.i.i, label %for.body.i.i158.preheader, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit170
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %idx.neg.i.i.i.i = sub nsw i64 0, %sub.ptr.div.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr inbounds float, float* %5, i64 %idx.neg.i.i.i.i
  %11 = bitcast float* %add.ptr.i.i.i.i to i8*
  %12 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i, i1 false) #24
  br label %for.body.i.i158.preheader

for.body.i.i158.preheader:                        ; preds = %if.then.i.i.i.i, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit170
  %add.ptr29 = getelementptr inbounds float, float* %__position.coerce, i64 %__n
  %13 = shl nsw i64 %__n, 2
  %14 = add i64 %13, -4
  %15 = lshr exact i64 %14, 2
  %16 = add nuw nsw i64 %15, 1
  %xtraiter191 = and i64 %16, 7
  %lcmp.mod192 = icmp eq i64 %xtraiter191, 0
  br i1 %lcmp.mod192, label %for.body.i.i158.prol.loopexit, label %for.body.i.i158.prol

for.body.i.i158.prol:                             ; preds = %for.body.i.i158.prol, %for.body.i.i158.preheader
  %__first.addr.05.i.i155.prol = phi float* [ %incdec.ptr.i.i156.prol, %for.body.i.i158.prol ], [ %__position.coerce, %for.body.i.i158.preheader ]
  %prol.iter193 = phi i64 [ %prol.iter193.sub, %for.body.i.i158.prol ], [ %xtraiter191, %for.body.i.i158.preheader ]
  %17 = bitcast float* %__first.addr.05.i.i155.prol to i32*
  store i32 %7, i32* %17, align 4, !tbaa !47
  %incdec.ptr.i.i156.prol = getelementptr inbounds float, float* %__first.addr.05.i.i155.prol, i64 1
  %prol.iter193.sub = add i64 %prol.iter193, -1
  %prol.iter193.cmp = icmp eq i64 %prol.iter193.sub, 0
  br i1 %prol.iter193.cmp, label %for.body.i.i158.prol.loopexit, label %for.body.i.i158.prol, !llvm.loop !271

for.body.i.i158.prol.loopexit:                    ; preds = %for.body.i.i158.prol, %for.body.i.i158.preheader
  %__first.addr.05.i.i155.unr = phi float* [ %__position.coerce, %for.body.i.i158.preheader ], [ %incdec.ptr.i.i156.prol, %for.body.i.i158.prol ]
  %18 = icmp ult i64 %14, 28
  br i1 %18, label %if.end88, label %for.body.i.i158

for.body.i.i158:                                  ; preds = %for.body.i.i158, %for.body.i.i158.prol.loopexit
  %__first.addr.05.i.i155 = phi float* [ %incdec.ptr.i.i156.7, %for.body.i.i158 ], [ %__first.addr.05.i.i155.unr, %for.body.i.i158.prol.loopexit ]
  %19 = bitcast float* %__first.addr.05.i.i155 to i32*
  store i32 %7, i32* %19, align 4, !tbaa !47
  %incdec.ptr.i.i156 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 1
  %20 = bitcast float* %incdec.ptr.i.i156 to i32*
  store i32 %7, i32* %20, align 4, !tbaa !47
  %incdec.ptr.i.i156.1 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 2
  %21 = bitcast float* %incdec.ptr.i.i156.1 to i32*
  store i32 %7, i32* %21, align 4, !tbaa !47
  %incdec.ptr.i.i156.2 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 3
  %22 = bitcast float* %incdec.ptr.i.i156.2 to i32*
  store i32 %7, i32* %22, align 4, !tbaa !47
  %incdec.ptr.i.i156.3 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 4
  %23 = bitcast float* %incdec.ptr.i.i156.3 to i32*
  store i32 %7, i32* %23, align 4, !tbaa !47
  %incdec.ptr.i.i156.4 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 5
  %24 = bitcast float* %incdec.ptr.i.i156.4 to i32*
  store i32 %7, i32* %24, align 4, !tbaa !47
  %incdec.ptr.i.i156.5 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 6
  %25 = bitcast float* %incdec.ptr.i.i156.5 to i32*
  store i32 %7, i32* %25, align 4, !tbaa !47
  %incdec.ptr.i.i156.6 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 7
  %26 = bitcast float* %incdec.ptr.i.i156.6 to i32*
  store i32 %7, i32* %26, align 4, !tbaa !47
  %incdec.ptr.i.i156.7 = getelementptr inbounds float, float* %__first.addr.05.i.i155, i64 8
  %cmp.i.i157.7 = icmp eq float* %incdec.ptr.i.i156.7, %add.ptr29
  br i1 %cmp.i.i157.7, label %if.end88, label %for.body.i.i158

if.else:                                          ; preds = %if.then4
  %sub = sub i64 %__n, %sub.ptr.div.i
  %cmp6.i.i.i.i.i145 = icmp eq i64 %sub, 0
  br i1 %cmp6.i.i.i.i.i145, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153, label %for.body.i.i.i.i.i151.preheader

for.body.i.i.i.i.i151.preheader:                  ; preds = %if.else
  %27 = xor i64 %sub.ptr.div.i, -1
  %28 = add i64 %27, %__n
  %xtraiter199 = and i64 %sub, 7
  %lcmp.mod200 = icmp eq i64 %xtraiter199, 0
  br i1 %lcmp.mod200, label %for.body.i.i.i.i.i151.prol.loopexit, label %for.body.i.i.i.i.i151.prol

for.body.i.i.i.i.i151.prol:                       ; preds = %for.body.i.i.i.i.i151.prol, %for.body.i.i.i.i.i151.preheader
  %__niter.08.i.i.i.i.i146.prol = phi i64 [ %dec.i.i.i.i.i148.prol, %for.body.i.i.i.i.i151.prol ], [ %sub, %for.body.i.i.i.i.i151.preheader ]
  %__first.addr.07.i.i.i.i.i147.prol = phi float* [ %incdec.ptr.i.i.i.i.i149.prol, %for.body.i.i.i.i.i151.prol ], [ %5, %for.body.i.i.i.i.i151.preheader ]
  %prol.iter201 = phi i64 [ %prol.iter201.sub, %for.body.i.i.i.i.i151.prol ], [ %xtraiter199, %for.body.i.i.i.i.i151.preheader ]
  %29 = bitcast float* %__first.addr.07.i.i.i.i.i147.prol to i32*
  store i32 %7, i32* %29, align 4, !tbaa !47
  %dec.i.i.i.i.i148.prol = add i64 %__niter.08.i.i.i.i.i146.prol, -1
  %incdec.ptr.i.i.i.i.i149.prol = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147.prol, i64 1
  %prol.iter201.sub = add i64 %prol.iter201, -1
  %prol.iter201.cmp = icmp eq i64 %prol.iter201.sub, 0
  br i1 %prol.iter201.cmp, label %for.body.i.i.i.i.i151.prol.loopexit, label %for.body.i.i.i.i.i151.prol, !llvm.loop !272

for.body.i.i.i.i.i151.prol.loopexit:              ; preds = %for.body.i.i.i.i.i151.prol, %for.body.i.i.i.i.i151.preheader
  %incdec.ptr.i.i.i.i.i149.lcssa.unr = phi float* [ undef, %for.body.i.i.i.i.i151.preheader ], [ %incdec.ptr.i.i.i.i.i149.prol, %for.body.i.i.i.i.i151.prol ]
  %__niter.08.i.i.i.i.i146.unr = phi i64 [ %sub, %for.body.i.i.i.i.i151.preheader ], [ %dec.i.i.i.i.i148.prol, %for.body.i.i.i.i.i151.prol ]
  %__first.addr.07.i.i.i.i.i147.unr = phi float* [ %5, %for.body.i.i.i.i.i151.preheader ], [ %incdec.ptr.i.i.i.i.i149.prol, %for.body.i.i.i.i.i151.prol ]
  %30 = icmp ult i64 %28, 7
  br i1 %30, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153, label %for.body.i.i.i.i.i151

for.body.i.i.i.i.i151:                            ; preds = %for.body.i.i.i.i.i151, %for.body.i.i.i.i.i151.prol.loopexit
  %__niter.08.i.i.i.i.i146 = phi i64 [ %dec.i.i.i.i.i148.7, %for.body.i.i.i.i.i151 ], [ %__niter.08.i.i.i.i.i146.unr, %for.body.i.i.i.i.i151.prol.loopexit ]
  %__first.addr.07.i.i.i.i.i147 = phi float* [ %incdec.ptr.i.i.i.i.i149.7, %for.body.i.i.i.i.i151 ], [ %__first.addr.07.i.i.i.i.i147.unr, %for.body.i.i.i.i.i151.prol.loopexit ]
  %31 = bitcast float* %__first.addr.07.i.i.i.i.i147 to i32*
  store i32 %7, i32* %31, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 1
  %32 = bitcast float* %incdec.ptr.i.i.i.i.i149 to i32*
  store i32 %7, i32* %32, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.1 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 2
  %33 = bitcast float* %incdec.ptr.i.i.i.i.i149.1 to i32*
  store i32 %7, i32* %33, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.2 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 3
  %34 = bitcast float* %incdec.ptr.i.i.i.i.i149.2 to i32*
  store i32 %7, i32* %34, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.3 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 4
  %35 = bitcast float* %incdec.ptr.i.i.i.i.i149.3 to i32*
  store i32 %7, i32* %35, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.4 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 5
  %36 = bitcast float* %incdec.ptr.i.i.i.i.i149.4 to i32*
  store i32 %7, i32* %36, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.5 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 6
  %37 = bitcast float* %incdec.ptr.i.i.i.i.i149.5 to i32*
  store i32 %7, i32* %37, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i149.6 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 7
  %38 = bitcast float* %incdec.ptr.i.i.i.i.i149.6 to i32*
  store i32 %7, i32* %38, align 4, !tbaa !47
  %dec.i.i.i.i.i148.7 = add i64 %__niter.08.i.i.i.i.i146, -8
  %incdec.ptr.i.i.i.i.i149.7 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i147, i64 8
  %cmp.i.i.i.i.i150.7 = icmp eq i64 %dec.i.i.i.i.i148.7, 0
  br i1 %cmp.i.i.i.i.i150.7, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153, label %for.body.i.i.i.i.i151

_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153: ; preds = %for.body.i.i.i.i.i151, %for.body.i.i.i.i.i151.prol.loopexit, %if.else
  %__first.addr.0.lcssa.i.i.i.i.i152 = phi float* [ %5, %if.else ], [ %incdec.ptr.i.i.i.i.i149.lcssa.unr, %for.body.i.i.i.i.i151.prol.loopexit ], [ %incdec.ptr.i.i.i.i.i149.7, %for.body.i.i.i.i.i151 ]
  store float* %__first.addr.0.lcssa.i.i.i.i.i152, float** %_M_finish, align 8, !tbaa !61
  %tobool.i.i.i.i.i.i.i.i141 = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i141, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit, label %if.then.i.i.i.i.i.i.i.i142

if.then.i.i.i.i.i.i.i.i142:                       ; preds = %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153
  %39 = bitcast float* %__first.addr.0.lcssa.i.i.i.i.i152 to i8*
  %40 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %sub.ptr.sub.i, i1 false) #24
  %.pre = load float*, float** %_M_finish, align 8, !tbaa !61
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit: ; preds = %if.then.i.i.i.i.i.i.i.i142, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153
  %41 = phi float* [ %__first.addr.0.lcssa.i.i.i.i.i152, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit153 ], [ %.pre, %if.then.i.i.i.i.i.i.i.i142 ]
  %add.ptr43 = getelementptr inbounds float, float* %41, i64 %sub.ptr.div.i
  store float* %add.ptr43, float** %_M_finish, align 8, !tbaa !61
  %cmp4.i.i = icmp eq float* %5, %__position.coerce
  br i1 %cmp4.i.i, label %if.end88, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %scevgep = getelementptr float, float* %5, i64 -1
  %42 = ptrtoint float* %scevgep to i64
  %43 = sub i64 %42, %0
  %44 = lshr i64 %43, 2
  %45 = add nuw nsw i64 %44, 1
  %xtraiter196 = and i64 %45, 7
  %lcmp.mod197 = icmp eq i64 %xtraiter196, 0
  br i1 %lcmp.mod197, label %for.body.i.i.prol.loopexit, label %for.body.i.i.prol

for.body.i.i.prol:                                ; preds = %for.body.i.i.prol, %for.body.i.i.preheader
  %__first.addr.05.i.i.prol = phi float* [ %incdec.ptr.i.i.prol, %for.body.i.i.prol ], [ %__position.coerce, %for.body.i.i.preheader ]
  %prol.iter198 = phi i64 [ %prol.iter198.sub, %for.body.i.i.prol ], [ %xtraiter196, %for.body.i.i.preheader ]
  %46 = bitcast float* %__first.addr.05.i.i.prol to i32*
  store i32 %7, i32* %46, align 4, !tbaa !47
  %incdec.ptr.i.i.prol = getelementptr inbounds float, float* %__first.addr.05.i.i.prol, i64 1
  %prol.iter198.sub = add i64 %prol.iter198, -1
  %prol.iter198.cmp = icmp eq i64 %prol.iter198.sub, 0
  br i1 %prol.iter198.cmp, label %for.body.i.i.prol.loopexit, label %for.body.i.i.prol, !llvm.loop !273

for.body.i.i.prol.loopexit:                       ; preds = %for.body.i.i.prol, %for.body.i.i.preheader
  %__first.addr.05.i.i.unr = phi float* [ %__position.coerce, %for.body.i.i.preheader ], [ %incdec.ptr.i.i.prol, %for.body.i.i.prol ]
  %47 = icmp ult i64 %43, 28
  br i1 %47, label %if.end88, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.i.i.prol.loopexit
  %__first.addr.05.i.i = phi float* [ %incdec.ptr.i.i.7, %for.body.i.i ], [ %__first.addr.05.i.i.unr, %for.body.i.i.prol.loopexit ]
  %48 = bitcast float* %__first.addr.05.i.i to i32*
  store i32 %7, i32* %48, align 4, !tbaa !47
  %incdec.ptr.i.i = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 1
  %49 = bitcast float* %incdec.ptr.i.i to i32*
  store i32 %7, i32* %49, align 4, !tbaa !47
  %incdec.ptr.i.i.1 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 2
  %50 = bitcast float* %incdec.ptr.i.i.1 to i32*
  store i32 %7, i32* %50, align 4, !tbaa !47
  %incdec.ptr.i.i.2 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 3
  %51 = bitcast float* %incdec.ptr.i.i.2 to i32*
  store i32 %7, i32* %51, align 4, !tbaa !47
  %incdec.ptr.i.i.3 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 4
  %52 = bitcast float* %incdec.ptr.i.i.3 to i32*
  store i32 %7, i32* %52, align 4, !tbaa !47
  %incdec.ptr.i.i.4 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 5
  %53 = bitcast float* %incdec.ptr.i.i.4 to i32*
  store i32 %7, i32* %53, align 4, !tbaa !47
  %incdec.ptr.i.i.5 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 6
  %54 = bitcast float* %incdec.ptr.i.i.5 to i32*
  store i32 %7, i32* %54, align 4, !tbaa !47
  %incdec.ptr.i.i.6 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 7
  %55 = bitcast float* %incdec.ptr.i.i.6 to i32*
  store i32 %7, i32* %55, align 4, !tbaa !47
  %incdec.ptr.i.i.7 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 8
  %cmp.i.i135.7 = icmp eq float* %incdec.ptr.i.i.7, %5
  br i1 %cmp.i.i135.7, label %if.end88, label %for.body.i.i

if.else45:                                        ; preds = %if.then
  %56 = bitcast %"class.std::vector.0"* %this to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !63
  %sub.ptr.sub.i21.i = sub i64 %4, %57
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 2305843009213693951, %sub.ptr.div.i22.i
  %cmp.i132 = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i132, label %if.then.i133, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i133:                                     ; preds = %if.else45
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else45
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i134 = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %58 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i130 = sub i64 %0, %57
  %sub.ptr.div.i131 = ashr exact i64 %sub.ptr.sub.i130, 2
  %cmp.i = icmp eq i64 %cond.i134, 0
  br i1 %cmp.i, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i134, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i) #24
  %59 = bitcast i8* %call2.i.i.i to float*
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %60 = phi float* [ %59, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %61 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr52 = getelementptr inbounds float, float* %60, i64 %sub.ptr.div.i131
  %62 = bitcast float* %__x to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !47
  %64 = add i64 %__n, -1
  %xtraiter = and i64 %__n, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol

for.body.i.i.i.i.i.prol:                          ; preds = %for.body.i.i.i.i.i.prol, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %__niter.08.i.i.i.i.i.prol = phi i64 [ %dec.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %__n, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ]
  %__first.addr.07.i.i.i.i.i.prol = phi float* [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %add.ptr52, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i.i.i.i.prol ], [ %xtraiter, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ]
  %65 = bitcast float* %__first.addr.07.i.i.i.i.i.prol to i32*
  store i32 %63, i32* %65, align 4, !tbaa !47
  %dec.i.i.i.i.i.prol = add i64 %__niter.08.i.i.i.i.i.prol, -1
  %incdec.ptr.i.i.i.i.i.prol = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol, !llvm.loop !274

for.body.i.i.i.i.i.prol.loopexit:                 ; preds = %for.body.i.i.i.i.i.prol, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %__niter.08.i.i.i.i.i.unr = phi i64 [ %__n, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %dec.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %__first.addr.07.i.i.i.i.i.unr = phi float* [ %add.ptr52, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %66 = icmp ult i64 %64, 7
  br i1 %66, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.prol.loopexit
  %__niter.08.i.i.i.i.i = phi i64 [ %dec.i.i.i.i.i.7, %for.body.i.i.i.i.i ], [ %__niter.08.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %__first.addr.07.i.i.i.i.i = phi float* [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i.i ], [ %__first.addr.07.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %67 = bitcast float* %__first.addr.07.i.i.i.i.i to i32*
  store i32 %63, i32* %67, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 1
  %68 = bitcast float* %incdec.ptr.i.i.i.i.i to i32*
  store i32 %63, i32* %68, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 2
  %69 = bitcast float* %incdec.ptr.i.i.i.i.i.1 to i32*
  store i32 %63, i32* %69, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.2 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 3
  %70 = bitcast float* %incdec.ptr.i.i.i.i.i.2 to i32*
  store i32 %63, i32* %70, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.3 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 4
  %71 = bitcast float* %incdec.ptr.i.i.i.i.i.3 to i32*
  store i32 %63, i32* %71, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.4 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 5
  %72 = bitcast float* %incdec.ptr.i.i.i.i.i.4 to i32*
  store i32 %63, i32* %72, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.5 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 6
  %73 = bitcast float* %incdec.ptr.i.i.i.i.i.5 to i32*
  store i32 %63, i32* %73, align 4, !tbaa !47
  %incdec.ptr.i.i.i.i.i.6 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 7
  %74 = bitcast float* %incdec.ptr.i.i.i.i.i.6 to i32*
  store i32 %63, i32* %74, align 4, !tbaa !47
  %dec.i.i.i.i.i.7 = add i64 %__niter.08.i.i.i.i.i, -8
  %incdec.ptr.i.i.i.i.i.7 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 8
  %cmp.i.i.i.i.i.7 = icmp eq i64 %dec.i.i.i.i.i.7, 0
  br i1 %cmp.i.i.i.i.i.7, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit, label %for.body.i.i.i.i.i

_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit: ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.prol.loopexit
  %75 = load float*, float** %58, align 8, !tbaa !63
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i122 = ptrtoint float* %75 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i123 = sub i64 %0, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i122
  %sub.ptr.div.i.i.i.i.i.i.i.i124 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i123, 2
  %tobool.i.i.i.i.i.i.i.i125 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i123, 0
  br i1 %tobool.i.i.i.i.i.i.i.i125, label %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit128, label %if.then.i.i.i.i.i.i.i.i126

if.then.i.i.i.i.i.i.i.i126:                       ; preds = %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit
  %76 = bitcast float* %75 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %76, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i123, i1 false) #24
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit128

_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit128: ; preds = %if.then.i.i.i.i.i.i.i.i126, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit
  %add.ptr.i.i.i.i.i.i.i.i127 = getelementptr inbounds float, float* %60, i64 %sub.ptr.div.i.i.i.i.i.i.i.i124
  %add.ptr59 = getelementptr inbounds float, float* %add.ptr.i.i.i.i.i.i.i.i127, i64 %__n
  %77 = load i64, i64* %3, align 8, !tbaa !61
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %77, %0
  %sub.ptr.div.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit128
  %78 = bitcast float* %add.ptr59 to i8*
  %79 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #24
  br label %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit

_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit: ; preds = %if.then.i.i.i.i.i.i.i.i, %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit128
  %add.ptr.i.i.i.i.i.i.i.i = getelementptr inbounds float, float* %add.ptr59, i64 %sub.ptr.div.i.i.i.i.i.i.i.i
  %tobool.i = icmp eq float* %75, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %80 = bitcast float* %75 to i8*
  tail call void @_ZdlPv(i8* nonnull %80) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit: ; preds = %if.then.i, %_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  store float* %60, float** %58, align 8, !tbaa !63
  store float* %add.ptr.i.i.i.i.i.i.i.i, float** %_M_finish, align 8, !tbaa !61
  %add.ptr84 = getelementptr inbounds float, float* %60, i64 %cond.i134
  store float* %add.ptr84, float** %_M_end_of_storage, align 8, !tbaa !270
  br label %if.end88

if.end88:                                         ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, %for.body.i.i, %for.body.i.i.prol.loopexit, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit, %for.body.i.i158, %for.body.i.i158.prol.loopexit, %entry
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end45, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = bitcast float** %_M_finish.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !61
  %2 = bitcast %"class.std::vector.0"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !63
  %sub.ptr.sub.i = sub i64 %1, %3
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast float** %_M_end_of_storage to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !270
  %sub.ptr.sub = sub i64 %5, %1
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp4 = icmp ult i64 %sub.ptr.div.i, 2305843009213693952
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %sub.ptr.div.i, 2305843009213693951
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8 = icmp ult i64 %sub.ptr.div, %__n
  %6 = inttoptr i64 %3 to float*
  br i1 %cmp8, label %if.else, label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit72

_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit72: ; preds = %if.then
  %7 = inttoptr i64 %1 to float*
  %__first2.i.i.i68 = inttoptr i64 %1 to i8*
  %8 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i68, i8 0, i64 %8, i1 false) #24
  %scevgep.i.i69 = getelementptr float, float* %7, i64 %__n
  br label %if.end45.sink.split

if.else:                                          ; preds = %if.then
  %cmp.i64 = icmp ult i64 %sub, %__n
  br i1 %cmp.i64, label %if.then.i65, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i65:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i66 = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %cmp.i = icmp eq i64 %cond.i66, 0
  br i1 %cmp.i, label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i66, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i) #24
  %9 = bitcast i8* %call2.i.i.i to float*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %.pre = load float*, float** %_M_start.phi.trans.insert, align 8, !tbaa !63
  %.pre73 = load i64, i64* %0, align 8, !tbaa !61
  br label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit: ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %10 = phi i64 [ %.pre73, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %1, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %11 = phi float* [ %.pre, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %6, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %12 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %cond.i = phi float* [ %9, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds float, float* %cond.i, i64 %sub.ptr.div.i
  %__first2.i.i.i = bitcast float* %add.ptr to i8*
  %13 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i, i8 0, i64 %13, i1 false) #24
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint float* %11 to i64
  %sub.ptr.sub.i.i.i.i = sub i64 %10, %sub.ptr.rhs.cast.i.i.i.i
  %cmp.i.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZNSt6vectorIfSaIfEE11_S_relocateEPfS2_S2_RS0_.exit

if.then.i.i.i.i:                                  ; preds = %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
  %14 = bitcast float* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %14, i64 %sub.ptr.sub.i.i.i.i, i1 false) #24
  br label %_ZNSt6vectorIfSaIfEE11_S_relocateEPfS2_S2_RS0_.exit

_ZNSt6vectorIfSaIfEE11_S_relocateEPfS2_S2_RS0_.exit: ; preds = %if.then.i.i.i.i, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
  %tobool.i = icmp eq float* %11, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt6vectorIfSaIfEE11_S_relocateEPfS2_S2_RS0_.exit
  %15 = bitcast float* %11 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit: ; preds = %if.then.i, %_ZNSt6vectorIfSaIfEE11_S_relocateEPfS2_S2_RS0_.exit
  %16 = bitcast %"class.std::vector.0"* %this to i8**
  store i8* %12, i8** %16, align 8, !tbaa !63
  %add.ptr38 = getelementptr inbounds float, float* %add.ptr, i64 %__n
  store float* %add.ptr38, float** %_M_finish.i, align 8, !tbaa !61
  %add.ptr41 = getelementptr inbounds float, float* %cond.i, i64 %cond.i66
  br label %if.end45.sink.split

if.end45.sink.split:                              ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit72
  %_M_finish.i.sink = phi float** [ %_M_finish.i, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit72 ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit ]
  %scevgep.i.i69.sink = phi float* [ %scevgep.i.i69, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit72 ], [ %add.ptr41, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit ]
  store float* %scevgep.i.i69.sink, float** %_M_finish.i.sink, align 8, !tbaa !43
  br label %if.end45

if.end45:                                         ; preds = %if.end45.sink.split, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_M_realloc_insertIJPfEEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_(%"class.std::vector.7"* %this, %"class.std::unique_ptr.12"* %__position.coerce, float** dereferenceable(8) %__args) local_unnamed_addr #3 comdat align 2 {
entry:
  %_M_finish.i20.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = bitcast %"class.std::unique_ptr.12"** %_M_finish.i20.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !110
  %2 = bitcast %"class.std::vector.7"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !113
  %sub.ptr.sub.i21.i = sub i64 %1, %3
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 3
  %cmp.i = icmp eq i64 %sub.ptr.sub.i21.i, 9223372036854775800
  %4 = inttoptr i64 %3 to %"class.std::unique_ptr.12"*
  %5 = inttoptr i64 %1 to %"class.std::unique_ptr.12"*
  br i1 %cmp.i, label %if.then.i, label %_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc.exit

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc.exit: ; preds = %entry
  %6 = ptrtoint %"class.std::unique_ptr.12"* %__position.coerce to i64
  %cmp.i.i = icmp eq i64 %sub.ptr.sub.i21.i, 0
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 1, i64 %sub.ptr.div.i22.i
  %add.i = add nsw i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 1152921504606846975
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 1152921504606846975, i64 %add.i
  %_M_start = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i = sub i64 %6, %3
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp.i39 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i39, label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i: ; preds = %_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 3
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i) #24
  %7 = bitcast i8* %call2.i.i.i to %"class.std::unique_ptr.12"*
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit: ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i, %_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc.exit
  %cond.i40 = phi %"class.std::unique_ptr.12"* [ %7, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i ], [ null, %_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i40, i64 %sub.ptr.div.i
  %8 = bitcast float** %__args to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !43
  %10 = bitcast %"class.std::unique_ptr.12"* %add.ptr to i64*
  store i64 %9, i64* %10, align 8, !tbaa !43
  %cmp7.i.i.i.i41 = icmp eq %"class.std::unique_ptr.12"* %4, %__position.coerce
  br i1 %cmp7.i.i.i.i41, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53, label %for.body.i.i.i.i46

for.body.i.i.i.i46:                               ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51, %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit
  %__cur.09.i.i.i.i42 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr2.i.i.i.i49, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51 ], [ %cond.i40, %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit ]
  %__first.addr.08.i.i.i.i43 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i48, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51 ], [ %4, %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i44 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i43 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i44, align 8, !tbaa !43
  %13 = bitcast %"class.std::unique_ptr.12"* %__cur.09.i.i.i.i42 to i64*
  store i64 %12, i64* %13, align 8, !tbaa !275
  %14 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i44, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i.i45 = icmp eq float* %14, null
  br i1 %cmp.i.i.i.i.i.i.i.i45, label %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i47

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i47: ; preds = %for.body.i.i.i.i46
  %15 = bitcast float* %14 to i8*
  tail call void @_ZdaPv(i8* %15) #25
  br label %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51

_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i47, %for.body.i.i.i.i46
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i44, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i48 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i43, i64 1
  %incdec.ptr2.i.i.i.i49 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.09.i.i.i.i42, i64 1
  %cmp.i.i.i.i50 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i48, %__position.coerce
  br i1 %cmp.i.i.i.i50, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53, label %for.body.i.i.i.i46

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53: ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51, %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit
  %__cur.0.lcssa.i.i.i.i52 = phi %"class.std::unique_ptr.12"* [ %cond.i40, %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm.exit ], [ %incdec.ptr2.i.i.i.i49, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i51 ]
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.0.lcssa.i.i.i.i52, i64 1
  %cmp7.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %5, %__position.coerce
  br i1 %cmp7.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53
  %__cur.09.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %incdec.ptr, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53 ]
  %__first.addr.08.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %__position.coerce, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !43
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %18 = bitcast %"class.std::unique_ptr.12"* %__cur.09.i.i.i.i to i64*
  store i64 %17, i64* %18, align 8, !tbaa !275
  %19 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i.i = icmp eq float* %19, null
  br i1 %cmp.i.i.i.i.i.i.i.i, label %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i

_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %20 = bitcast float* %19 to i8*
  tail call void @_ZdaPv(i8* %20) #25
  br label %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i

_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i.i.i.i.i.i, %for.body.i.i.i.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.08.i.i.i.i, i64 1
  %incdec.ptr2.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.09.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i, %5
  br i1 %cmp.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit, label %for.body.i.i.i.i

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit: ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit53 ], [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aISt10unique_ptrIA_fSt14default_deleteIS1_EES4_SaIS4_EEvPT_PT0_RT1_.exit.i.i.i.i ]
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %tobool.i = icmp eq i64 %3, 0
  br i1 %tobool.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit, label %if.then.i38

if.then.i38:                                      ; preds = %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit
  %21 = inttoptr i64 %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %21) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit: ; preds = %if.then.i38, %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_S_relocateEPS4_S7_S7_RS5_.exit
  store %"class.std::unique_ptr.12"* %cond.i40, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !113
  store %"class.std::unique_ptr.12"* %__cur.0.lcssa.i.i.i.i, %"class.std::unique_ptr.12"** %_M_finish.i20.i, align 8, !tbaa !110
  %add.ptr20 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i40, i64 %cond.i
  store %"class.std::unique_ptr.12"* %add.ptr20, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8, !tbaa !112
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* dereferenceable(272), i8*, i64) local_unnamed_addr #0

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"*, i32) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #23

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"*, i8 signext) local_unnamed_addr #0

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #22

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.28"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end45, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = bitcast %"class.std::unique_ptr.33"** %_M_finish.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !197
  %2 = bitcast %"class.std::vector.28"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !185
  %sub.ptr.sub.i = sub i64 %1, %3
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.std::unique_ptr.33"** %_M_end_of_storage to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !277
  %sub.ptr.sub = sub i64 %5, %1
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp4 = icmp ult i64 %sub.ptr.div.i, 1152921504606846976
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %sub.ptr.div.i, 1152921504606846975
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8 = icmp ult i64 %sub.ptr.div, %__n
  %6 = inttoptr i64 %1 to %"class.std::unique_ptr.33"*
  %7 = inttoptr i64 %3 to %"class.std::unique_ptr.33"*
  br i1 %cmp8, label %if.else, label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit69

_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit69: ; preds = %if.then
  %__first7.i.i.i65 = inttoptr i64 %1 to i8*
  %8 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first7.i.i.i65, i8 0, i64 %8, i1 false) #24
  %scevgep.i.i66 = getelementptr %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %6, i64 %__n
  br label %if.end45.sink.split

if.else:                                          ; preds = %if.then
  %cmp.i70 = icmp ult i64 %sub, %__n
  br i1 %cmp.i70, label %if.then.i71, label %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit

if.then.i71:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0)) #26
  unreachable

_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit: ; preds = %if.else
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i
  %cmp9.i = icmp ugt i64 %add.i, 1152921504606846975
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i72 = select i1 %or.cond.i, i64 1152921504606846975, i64 %add.i
  %cmp.i = icmp eq i64 %cond.i72, 0
  br i1 %cmp.i, label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i: ; preds = %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i72, 3
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i) #24
  %9 = bitcast i8* %call2.i.i.i to %"class.std::unique_ptr.33"*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %.pre = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.phi.trans.insert, align 8, !tbaa !185
  %.pre73 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_finish.i, align 8, !tbaa !197
  br label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit: ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %10 = phi %"class.std::unique_ptr.33"* [ %.pre73, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %6, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %11 = phi %"class.std::unique_ptr.33"* [ %.pre, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %7, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %cond.i = phi %"class.std::unique_ptr.33"* [ %9, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ null, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %cond.i, i64 %sub.ptr.div.i
  %__first7.i.i.i = bitcast %"class.std::unique_ptr.33"* %add.ptr to i8*
  %12 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first7.i.i.i, i8 0, i64 %12, i1 false) #24
  %_M_start = getelementptr inbounds %"class.std::vector.28", %"class.std::vector.28"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %cmp7.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %11, %10
  br i1 %cmp7.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
  %__cur.09.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %cond.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ]
  %__first.addr.08.i.i.i.i = phi %"class.std::unique_ptr.33"* [ %incdec.ptr.i.i.i.i, %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %11, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.08.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::unique_ptr.33"* %__first.addr.08.i.i.i.i to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !43
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %15 = bitcast %"class.std::unique_ptr.33"* %__cur.09.i.i.i.i to i64*
  store i64 %14, i64* %15, align 8, !tbaa !278
  %16 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %cmp.i.i.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %16, null
  br i1 %cmp.i.i.i.i.i.i.i.i, label %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %17 = bitcast %struct.kiss_fft_cpx* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #25
  br label %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i

_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclIS0_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS1_EE5valueEvE4typeEPS5_.exit.i.i.i.i.i.i.i.i, %for.body.i.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__first.addr.08.i.i.i.i, i64 1
  %incdec.ptr2.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %__cur.09.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.33"* %incdec.ptr.i.i.i.i, %10
  br i1 %cmp.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exitthread-pre-split, label %for.body.i.i.i.i

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exitthread-pre-split: ; preds = %_ZSt19__relocate_object_aISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
  %.pr = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start, align 8, !tbaa !185
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exitthread-pre-split, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
  %18 = phi %"class.std::unique_ptr.33"* [ %.pr, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exitthread-pre-split ], [ %10, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ]
  %tobool.i = icmp eq %"class.std::unique_ptr.33"* %18, null
  br i1 %tobool.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
  %19 = bitcast %"class.std::unique_ptr.33"* %18 to i8*
  tail call void @_ZdlPv(i8* nonnull %19) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit: ; preds = %if.then.i, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
  store %"class.std::unique_ptr.33"* %cond.i, %"class.std::unique_ptr.33"** %_M_start, align 8, !tbaa !185
  %add.ptr38 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %add.ptr, i64 %__n
  store %"class.std::unique_ptr.33"* %add.ptr38, %"class.std::unique_ptr.33"** %_M_finish.i, align 8, !tbaa !197
  %add.ptr41 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %cond.i, i64 %cond.i72
  br label %if.end45.sink.split

if.end45.sink.split:                              ; preds = %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit69
  %_M_finish.i.sink = phi %"class.std::unique_ptr.33"** [ %_M_finish.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit69 ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit ]
  %scevgep.i.i66.sink = phi %"class.std::unique_ptr.33"* [ %scevgep.i.i66, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit69 ], [ %add.ptr41, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit ]
  store %"class.std::unique_ptr.33"* %scevgep.i.i66.sink, %"class.std::unique_ptr.33"** %_M_finish.i.sink, align 8, !tbaa !43
  br label %if.end45

if.end45:                                         ; preds = %if.end45.sink.split, %entry
  ret void
}

declare %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #3 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit) #24
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #24
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #24

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.output(i8*, i32, i32, i1) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.push(i8*, i8*) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.pop(i8*) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #24

declare i8* @llvm_hpvm_cpu_launch(i8* (i8*)*, i8*)

declare void @llvm_hpvm_cpu_wait(i8*)

declare i8* @llvm_hpvm_cpu_argument_ptr(i8*, i64)

declare i8* @llvm_hpvm_streamLaunch(void (i8*, i8*)*, i8*)

declare void @llvm_hpvm_streamPush(i8*, i8*)

declare i8* @llvm_hpvm_streamPop(i8*)

declare void @llvm_hpvm_streamWait(i8*)

declare i8* @llvm_hpvm_createBindInBuffer(i8*, i64, i32)

declare i8* @llvm_hpvm_createBindOutBuffer(i8*, i64)

declare i8* @llvm_hpvm_createEdgeBuffer(i8*, i64)

declare i8* @llvm_hpvm_createLastInputBuffer(i8*, i64)

declare void @llvm_hpvm_createThread(i8*, i8* (i8*)*, i8*)

declare void @llvm_hpvm_bufferPush(i8*, i64)

declare i64 @llvm_hpvm_bufferPop(i8*)

declare void @llvm_hpvm_cpu_dstack_push(i32, i64, i64, i64, i64, i64, i64)

declare void @llvm_hpvm_cpu_dstack_pop()

declare i64 @llvm_hpvm_cpu_getDimLimit(i32, i32)

declare i64 @llvm_hpvm_cpu_getDimInstance(i32, i32)

declare i8* @llvm_hpvm_initializeTimerSet()

declare void @llvm_hpvm_switchToTimer(i8**, i32)

declare void @llvm_hpvm_printTimerSet(i8**, i8*)

; Function Attrs: nounwind uwtable
define %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !42
  %conv = sitofp i32 %inc to double
  %mul2 = fmul fast double %conv, 0x3F712609C699F47A
  %conv3 = fptrunc double %mul2 to float
  %2 = tail call fast float @llvm.cos.f32(float %conv3) #24
  %3 = tail call fast float @llvm.sin.f32(float %conv3) #24
  %cmp.i = fcmp fast oeq float %2, 1.000000e+00
  br i1 %cmp.i, label %_ZN11OrientationC2Efff.exit, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp5.i = fcmp fast oeq float %2, -1.000000e+00
  br i1 %cmp5.i, label %_ZN11OrientationC2Efff.exit, label %if.else11.i

if.else11.i:                                      ; preds = %if.else.i
  %add.i = fsub fast float -0.000000e+00, %3
  %call.i63.i = tail call fast float @atan2f(float %add.i, float 0.000000e+00) #27
  %call.i64.i = tail call fast float @acosf(float %2) #27
  %call.i65.i = tail call fast float @atan2f(float %3, float 0.000000e+00) #27
  br label %_ZN11OrientationC2Efff.exit

_ZN11OrientationC2Efff.exit:                      ; preds = %if.else11.i, %if.else.i, %entry
  %head.sroa.6.0 = phi float [ %call.i63.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ -0.000000e+00, %if.else.i ]
  %head.sroa.9.0 = phi float [ %call.i64.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ 0x400921FB60000000, %if.else.i ]
  %head.sroa.12.0 = phi float [ %call.i65.i, %if.else11.i ], [ 0.000000e+00, %entry ], [ 0.000000e+00, %if.else.i ]
  %agg.tmp7.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %agg.tmp7.sroa.0.0..sroa_idx, align 8
  %agg.tmp7.sroa.4.0..sroa_idx25 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %agg.tmp7.sroa.4.0..sroa_idx25, align 4
  %agg.tmp7.sroa.5.0..sroa_idx27 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 2
  store float %conv3, float* %agg.tmp7.sroa.5.0..sroa_idx27, align 8
  %agg.tmp7.sroa.6.0..sroa_idx29 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 3
  store float %head.sroa.6.0, float* %agg.tmp7.sroa.6.0..sroa_idx29, align 4
  %agg.tmp7.sroa.7.0..sroa_idx31 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 4
  store float %head.sroa.9.0, float* %agg.tmp7.sroa.7.0..sroa_idx31, align 8
  %agg.tmp7.sroa.8.0..sroa_idx33 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1, i32 5
  store float %head.sroa.12.0, float* %agg.tmp7.sroa.8.0..sroa_idx33, align 4
  %4 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %4, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  tail call void %5(%class.CAmbisonicProcessor* %rotator) #24
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  ret %struct.out.rotatorSet_fxp %returnStruct
}

define %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned.2(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotatorSet_fxp %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotatorSet_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotatorSet_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !42
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !42
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %2 = tail call fast float @llvm.sin.f32(float %conv)
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %2, float* %fZoom.addr.i, align 4, !tbaa !47
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !47
  %cmp.i.i = fcmp fast ogt float %2, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %3 = bitcast float* %__b.__a.i.i to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !47
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %5 = bitcast float* %m_fZoom.i to i32*
  store i32 %4, i32* %5, align 8, !tbaa !155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %6 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8, !tbaa !40
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicZoomer* %zoomer) #24
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}

define %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned.4(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperZoomSet_fxp undef, i64 %0, 0
  ret %struct.out.wrapperZoomSet_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, float** in out %channelpart2, i64 %bytes_channelpart2, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 4, !tbaa !54, !range !55
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp204 = icmp sgt i64 %nSample, 0
  br i1 %cmp204, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 3
  %8 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  %9 = load float*, float** %channelpart1, align 8, !tbaa !43
  %arrayidx.i203 = getelementptr inbounds float*, float** %7, i64 1
  %10 = load float*, float** %arrayidx.i203, align 8, !tbaa !43
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !43
  %arrayidx.i201 = getelementptr inbounds float*, float** %7, i64 2
  %12 = load float*, float** %arrayidx.i201, align 8, !tbaa !43
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %13 = load float*, float** %arrayidx16, align 8, !tbaa !43
  %arrayidx.i199 = getelementptr inbounds float*, float** %7, i64 6
  %14 = load float*, float** %arrayidx.i199, align 8, !tbaa !43
  %15 = load float*, float** %channelpart2, align 8, !tbaa !43
  %arrayidx.i197 = getelementptr inbounds float*, float** %7, i64 7
  %16 = load float*, float** %arrayidx.i197, align 8, !tbaa !43
  %arrayidx30 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %17 = load float*, float** %arrayidx30, align 8, !tbaa !43
  %arrayidx.i195 = getelementptr inbounds float*, float** %7, i64 5
  %18 = load float*, float** %arrayidx.i195, align 8, !tbaa !43
  %arrayidx37 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %19 = load float*, float** %arrayidx37, align 8, !tbaa !43
  %arrayidx.i193 = getelementptr inbounds float*, float** %7, i64 8
  %20 = load float*, float** %arrayidx.i193, align 8, !tbaa !43
  %arrayidx44 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %21 = load float*, float** %arrayidx44, align 8, !tbaa !43
  %arrayidx.i191 = getelementptr inbounds float*, float** %7, i64 4
  %22 = load float*, float** %arrayidx.i191, align 8, !tbaa !43
  %arrayidx51 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %23 = load float*, float** %arrayidx51, align 8, !tbaa !43
  %arrayidx.i189 = getelementptr inbounds float*, float** %7, i64 9
  %24 = load float*, float** %arrayidx.i189, align 8, !tbaa !43
  %25 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx.i187 = getelementptr inbounds float*, float** %7, i64 10
  %26 = load float*, float** %arrayidx.i187, align 8, !tbaa !43
  %arrayidx65 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %27 = load float*, float** %arrayidx65, align 8, !tbaa !43
  %arrayidx.i185 = getelementptr inbounds float*, float** %7, i64 11
  %28 = load float*, float** %arrayidx.i185, align 8, !tbaa !43
  %arrayidx72 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %29 = load float*, float** %arrayidx72, align 8, !tbaa !43
  %arrayidx.i183 = getelementptr inbounds float*, float** %7, i64 12
  %30 = load float*, float** %arrayidx.i183, align 8, !tbaa !43
  %arrayidx79 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %31 = load float*, float** %arrayidx79, align 8, !tbaa !43
  %arrayidx.i181 = getelementptr inbounds float*, float** %7, i64 13
  %32 = load float*, float** %arrayidx.i181, align 8, !tbaa !43
  %arrayidx86 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %33 = load float*, float** %arrayidx86, align 8, !tbaa !43
  %arrayidx.i179 = getelementptr inbounds float*, float** %7, i64 14
  %34 = load float*, float** %arrayidx.i179, align 8, !tbaa !43
  %arrayidx93 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %35 = load float*, float** %arrayidx93, align 8, !tbaa !43
  %arrayidx.i177 = getelementptr inbounds float*, float** %7, i64 15
  %36 = load float*, float** %arrayidx.i177, align 8, !tbaa !43
  %arrayidx100 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %37 = load float*, float** %arrayidx100, align 8, !tbaa !43
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %38 = bitcast float* %arrayidx to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !47
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %40 = bitcast float* %arrayidx4 to i32*
  store i32 %39, i32* %40, align 4, !tbaa !47
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %41 = bitcast float* %arrayidx8 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !47
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %43 = bitcast float* %arrayidx11 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !47
  %arrayidx15 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %44 = bitcast float* %arrayidx15 to i32*
  %45 = load i32, i32* %44, align 4, !tbaa !47
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %46 = bitcast float* %arrayidx18 to i32*
  store i32 %45, i32* %46, align 4, !tbaa !47
  %arrayidx22 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %47 = bitcast float* %arrayidx22 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !47
  %arrayidx25 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %49 = bitcast float* %arrayidx25 to i32*
  store i32 %48, i32* %49, align 4, !tbaa !47
  %arrayidx29 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %50 = bitcast float* %arrayidx29 to i32*
  %51 = load i32, i32* %50, align 4, !tbaa !47
  %arrayidx32 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %52 = bitcast float* %arrayidx32 to i32*
  store i32 %51, i32* %52, align 4, !tbaa !47
  %arrayidx36 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %53 = bitcast float* %arrayidx36 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !47
  %arrayidx39 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %55 = bitcast float* %arrayidx39 to i32*
  store i32 %54, i32* %55, align 4, !tbaa !47
  %arrayidx43 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %56 = bitcast float* %arrayidx43 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !47
  %arrayidx46 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %58 = bitcast float* %arrayidx46 to i32*
  store i32 %57, i32* %58, align 4, !tbaa !47
  %arrayidx50 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %59 = bitcast float* %arrayidx50 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !47
  %arrayidx53 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %61 = bitcast float* %arrayidx53 to i32*
  store i32 %60, i32* %61, align 4, !tbaa !47
  %arrayidx57 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %62 = bitcast float* %arrayidx57 to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !47
  %arrayidx60 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %64 = bitcast float* %arrayidx60 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !47
  %arrayidx64 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %65 = bitcast float* %arrayidx64 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !47
  %arrayidx67 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %67 = bitcast float* %arrayidx67 to i32*
  store i32 %66, i32* %67, align 4, !tbaa !47
  %arrayidx71 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %68 = bitcast float* %arrayidx71 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !47
  %arrayidx74 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %70 = bitcast float* %arrayidx74 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !47
  %arrayidx78 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %71 = bitcast float* %arrayidx78 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !47
  %arrayidx81 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %73 = bitcast float* %arrayidx81 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !47
  %arrayidx85 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %74 = bitcast float* %arrayidx85 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !47
  %arrayidx88 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %76 = bitcast float* %arrayidx88 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !47
  %arrayidx92 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %77 = bitcast float* %arrayidx92 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !47
  %arrayidx95 = getelementptr inbounds float, float* %35, i64 %indvars.iv
  %79 = bitcast float* %arrayidx95 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !47
  %arrayidx99 = getelementptr inbounds float, float* %36, i64 %indvars.iv
  %80 = bitcast float* %arrayidx99 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !47
  %arrayidx102 = getelementptr inbounds float, float* %37, i64 %indvars.iv
  %82 = bitcast float* %arrayidx102 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %nSample
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

define %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned.6(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = insertvalue %struct.out.wrapperPsychoFilter_fxp undef, i64 %0, 0
  %2 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %3 = insertvalue %struct.out.wrapperPsychoFilter_fxp %1, i64 %2, 1
  %4 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 2
  %5 = insertvalue %struct.out.wrapperPsychoFilter_fxp %3, i64 %4, 2
  %6 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 3
  %7 = insertvalue %struct.out.wrapperPsychoFilter_fxp %5, i64 %6, 3
  %8 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 4
  %9 = insertvalue %struct.out.wrapperPsychoFilter_fxp %7, i64 %8, 4
  %10 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 5
  %11 = insertvalue %struct.out.wrapperPsychoFilter_fxp %9, i64 %10, 5
  %12 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 6
  %output = insertvalue %struct.out.wrapperPsychoFilter_fxp %11, i64 %12, 6
  ret %struct.out.wrapperPsychoFilter_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !49
  %cmp = icmp ne i32 %3, 0
  %cmp1127 = icmp sgt i64 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1127
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %4 = load float*, float** %channelpart1, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %5 = load float*, float** %arrayidx3, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %6 = load float*, float** %arrayidx7, align 8, !tbaa !43
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv129 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %niSample.0128 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %conv129
  %7 = load float, float* %arrayidx2, align 4, !tbaa !47
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %9 = fmul fast float %8, %7
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 %conv129
  %10 = load float, float* %arrayidx5, align 4, !tbaa !47
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul6 = fmul fast float %11, %10
  %add = fsub fast float %mul6, %9
  %arrayidx9 = getelementptr inbounds float, float* %6, i64 %conv129
  %12 = load float, float* %arrayidx9, align 4, !tbaa !47
  %mul14 = fmul fast float %11, %7
  %mul19 = fmul fast float %10, %8
  %add20 = fadd fast float %mul14, %mul19
  store float %add, float* %arrayidx5, align 4, !tbaa !47
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul24 = fmul fast float %13, %12
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul25 = fmul fast float %14, %add20
  %add26 = fadd fast float %mul25, %mul24
  store float %add26, float* %arrayidx9, align 4, !tbaa !47
  %15 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul31 = fmul fast float %15, %add20
  %16 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul33 = fmul fast float %16, %12
  %add34 = fadd fast float %mul33, %mul31
  store float %add34, float* %arrayidx2, align 4, !tbaa !47
  %17 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %18 = fmul fast float %add34, %17
  %19 = load float, float* %arrayidx5, align 4, !tbaa !47
  %20 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul46 = fmul fast float %20, %19
  %add47 = fsub fast float %mul46, %18
  %21 = bitcast float* %arrayidx9 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !47
  %mul55 = fmul fast float %20, %add34
  %mul60 = fmul fast float %19, %17
  %add61 = fadd fast float %mul55, %mul60
  store float %add61, float* %arrayidx2, align 4, !tbaa !47
  store float %add47, float* %arrayidx5, align 4, !tbaa !47
  store i32 %22, i32* %21, align 4, !tbaa !47
  %inc = add i32 %niSample.0128, 1
  %conv = zext i32 %inc to i64
  %cmp1 = icmp slt i64 %conv, %nSample
  br i1 %cmp1, label %for.body, label %if.end

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned.8(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotateOrder1_fxp %rotateOrder1_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder1_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder1_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !49
  %cmp = icmp ugt i32 %3, 1
  %cmp1299 = icmp sgt i64 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1299
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %4 = load float*, float** %arrayidx, align 8, !tbaa !43
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %5 = load float*, float** %arrayidx3, align 8, !tbaa !43
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %6 = load float*, float** %arrayidx7, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx12 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %7 = load float*, float** %arrayidx12, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %8 = load float*, float** %channelpart2, align 8, !tbaa !43
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv301 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %niSample.0300 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %conv301
  %9 = load float, float* %arrayidx2, align 4, !tbaa !47
  %10 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %11 = fmul fast float %10, %9
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 %conv301
  %12 = load float, float* %arrayidx5, align 4, !tbaa !47
  %13 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul6 = fmul fast float %13, %12
  %add = fsub fast float %mul6, %11
  %arrayidx9 = getelementptr inbounds float, float* %6, i64 %conv301
  %14 = load float, float* %arrayidx9, align 4, !tbaa !47
  %15 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %16 = fmul fast float %15, %14
  %arrayidx14 = getelementptr inbounds float, float* %7, i64 %conv301
  %17 = load float, float* %arrayidx14, align 4, !tbaa !47
  %18 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul15 = fmul fast float %18, %17
  %add16 = fsub fast float %mul15, %16
  %arrayidx19 = getelementptr inbounds float, float* %8, i64 %conv301
  %19 = load float, float* %arrayidx19, align 4, !tbaa !47
  %mul24 = fmul fast float %18, %14
  %mul29 = fmul fast float %17, %15
  %add30 = fadd fast float %mul24, %mul29
  %mul35 = fmul fast float %13, %9
  %mul40 = fmul fast float %12, %10
  %add41 = fadd fast float %mul35, %mul40
  %20 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %21 = fmul fast float %20, %add16
  %22 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul44 = fmul fast float %22, %add
  %add45 = fsub fast float %mul44, %21
  store float %add45, float* %arrayidx5, align 4, !tbaa !47
  %23 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %24 = fmul fast float %23, %add16
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul53 = fmul fast float %25, %add
  %add54 = fsub fast float %mul53, %24
  store float %add54, float* %arrayidx14, align 4, !tbaa !47
  %26 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul58 = fmul fast float %26, 7.500000e-01
  %add59 = fadd fast float %mul58, 2.500000e-01
  %mul60 = fmul fast float %add59, %19
  %conv61 = fpext float %mul60 to double
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %conv.i294 = fpext float %27 to double
  %conv67 = fpext float %add41 to double
  %square = fmul fast double %conv67, 0x3FEBB67AE0000000
  %28 = fmul fast double %conv.i294, %conv.i294
  %mul68 = fmul fast double %28, %square
  %add69 = fadd fast double %mul68, %conv61
  %29 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul71 = fmul fast float %add30, 0x3FFBB67AE0000000
  %mul73 = fmul fast float %mul71, %27
  %mul74 = fmul fast float %mul73, %29
  %conv75 = fpext float %mul74 to double
  %add76 = fadd fast double %add69, %conv75
  %conv77 = fptrunc double %add76 to float
  store float %conv77, float* %arrayidx19, align 4, !tbaa !47
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul82 = fmul fast float %30, %add30
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul87.neg = fmul fast float %19, 0x3FFBB67AE0000000
  %reass.add296298 = fsub fast float %add41, %mul87.neg
  %reass.mul297 = fmul fast float %32, %31
  %reass.mul = fmul fast float %reass.mul297, %reass.add296298
  %add93 = fadd fast float %reass.mul, %mul82
  store float %add93, float* %arrayidx9, align 4, !tbaa !47
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul98 = fmul fast float %33, 2.500000e-01
  %add99 = fadd fast float %mul98, 7.500000e-01
  %mul100 = fmul fast float %add99, %add41
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul103 = fmul fast float %34, %add30
  %mul104 = fmul fast float %mul103, %35
  %sub105 = fsub fast float %mul100, %mul104
  %conv106 = fpext float %sub105 to double
  %conv.i = fpext float %35 to double
  %conv112 = fpext float %19 to double
  %square295 = fmul fast double %conv112, 0x3FEBB67AE0000000
  %36 = fmul fast double %conv.i, %conv.i
  %mul113 = fmul fast double %36, %square295
  %add114 = fadd fast double %mul113, %conv106
  %conv115 = fptrunc double %add114 to float
  store float %conv115, float* %arrayidx2, align 4, !tbaa !47
  %37 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %38 = fmul fast float %37, %conv115
  %39 = load float, float* %arrayidx5, align 4, !tbaa !47
  %40 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul127 = fmul fast float %40, %39
  %add128 = fsub fast float %mul127, %38
  %41 = load float, float* %arrayidx9, align 4, !tbaa !47
  %42 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %43 = fmul fast float %42, %41
  %44 = load float, float* %arrayidx14, align 4, !tbaa !47
  %45 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul137 = fmul fast float %45, %44
  %add138 = fsub fast float %mul137, %43
  %mul146 = fmul fast float %45, %41
  %mul151 = fmul fast float %44, %42
  %add152 = fadd fast float %mul146, %mul151
  %mul157 = fmul fast float %40, %conv115
  %mul162 = fmul fast float %39, %37
  %add163 = fadd fast float %mul157, %mul162
  store float %add152, float* %arrayidx9, align 4, !tbaa !47
  store float %add138, float* %arrayidx14, align 4, !tbaa !47
  store float %add163, float* %arrayidx2, align 4, !tbaa !47
  store float %add128, float* %arrayidx5, align 4, !tbaa !47
  %inc = add i32 %niSample.0300, 1
  %conv = zext i32 %inc to i64
  %cmp1 = icmp slt i64 %conv, %nSample
  br i1 %cmp1, label %for.body, label %if.end

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned.10(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotateOrder2_fxp %rotateOrder2_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder2_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder2_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !49
  %cmp = icmp ugt i32 %3, 2
  %cmp3573 = icmp sgt i64 %nSample, 0
  %or.cond = and i1 %cmp, %cmp3573
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %4 = load float*, float** %arrayidx, align 8, !tbaa !43
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %5 = load float*, float** %channelpart3, align 8, !tbaa !43
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %6 = load float*, float** %arrayidx9, align 8, !tbaa !43
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx14 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %7 = load float*, float** %arrayidx14, align 8, !tbaa !43
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx19 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %8 = load float*, float** %arrayidx19, align 8, !tbaa !43
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx24 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %9 = load float*, float** %arrayidx24, align 8, !tbaa !43
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx29 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %10 = load float*, float** %arrayidx29, align 8, !tbaa !43
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv575 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %niSample.0574 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 %conv575
  %11 = load float, float* %arrayidx4, align 4, !tbaa !47
  %12 = load float, float* %m_fSin3Alpha, align 4, !tbaa !130
  %13 = fmul fast float %12, %11
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 %conv575
  %14 = load float, float* %arrayidx7, align 4, !tbaa !47
  %15 = load float, float* %m_fCos3Alpha, align 8, !tbaa !129
  %mul8 = fmul fast float %15, %14
  %add = fsub fast float %mul8, %13
  %arrayidx11 = getelementptr inbounds float, float* %6, i64 %conv575
  %16 = load float, float* %arrayidx11, align 4, !tbaa !47
  %17 = load float, float* %m_fSin2Alpha, align 4, !tbaa !124
  %18 = fmul fast float %17, %16
  %arrayidx16 = getelementptr inbounds float, float* %7, i64 %conv575
  %19 = load float, float* %arrayidx16, align 4, !tbaa !47
  %20 = load float, float* %m_fCos2Alpha, align 8, !tbaa !123
  %mul17 = fmul fast float %20, %19
  %add18 = fsub fast float %mul17, %18
  %arrayidx21 = getelementptr inbounds float, float* %8, i64 %conv575
  %21 = load float, float* %arrayidx21, align 4, !tbaa !47
  %22 = load float, float* %m_fSinAlpha, align 4, !tbaa !116
  %23 = fmul fast float %22, %21
  %arrayidx26 = getelementptr inbounds float, float* %9, i64 %conv575
  %24 = load float, float* %arrayidx26, align 4, !tbaa !47
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !115
  %mul27 = fmul fast float %25, %24
  %add28 = fsub fast float %mul27, %23
  %arrayidx31 = getelementptr inbounds float, float* %10, i64 %conv575
  %26 = load float, float* %arrayidx31, align 4, !tbaa !47
  %mul36 = fmul fast float %25, %21
  %mul41 = fmul fast float %24, %22
  %add42 = fadd fast float %mul36, %mul41
  %mul47 = fmul fast float %20, %16
  %mul52 = fmul fast float %19, %17
  %add53 = fadd fast float %mul47, %mul52
  %mul58 = fmul fast float %15, %11
  %mul63 = fmul fast float %14, %12
  %add64 = fadd fast float %mul58, %mul63
  %mul65 = fmul fast float %add, 1.250000e-01
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul66 = fmul fast float %27, 3.000000e+00
  %add67 = fadd fast float %mul66, 5.000000e+00
  %mul68 = fmul fast float %mul65, %add67
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul71 = fmul fast float %add18, 0xBFF3988E20000000
  %mul71.neg = fmul fast float %mul71, %28
  %mul74 = fmul fast float %add28, 0x3FEEFBDEC0000000
  %mul77 = fmul fast float %mul74, %29
  %reass.add562 = fadd fast float %mul71.neg, %mul77
  %reass.mul563 = fmul fast float %reass.add562, %29
  %add78 = fadd fast float %reass.mul563, %mul68
  store float %add78, float* %arrayidx7, align 4, !tbaa !47
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul83 = fmul fast float %30, %add18
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul88.neg = fmul fast float %add28, 0x3FF94C5840000000
  %mul94 = fmul fast float %add, 0x3FF3988E20000000
  %reass.add570572 = fsub fast float %mul94, %mul88.neg
  %reass.mul571 = fmul fast float %32, %31
  %reass.mul565 = fmul fast float %reass.mul571, %reass.add570572
  %add95 = fadd fast float %reass.mul565, %mul83
  store float %add95, float* %arrayidx16, align 4, !tbaa !47
  %mul99 = fmul fast float %add28, 1.250000e-01
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul101 = fmul fast float %33, 5.000000e+00
  %add102 = fadd fast float %mul101, 3.000000e+00
  %mul103 = fmul fast float %mul99, %add102
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul108 = fmul fast float %add18, 0xBFF94C5840000000
  %mul108.neg = fmul fast float %mul108, %34
  %mul111 = fmul fast float %add, 0x3FEEFBDEC0000000
  %mul114 = fmul fast float %mul111, %35
  %reass.add566 = fadd fast float %mul108.neg, %mul114
  %reass.mul567 = fmul fast float %reass.add566, %35
  %add115 = fadd fast float %reass.mul567, %mul103
  store float %add115, float* %arrayidx26, align 4, !tbaa !47
  %36 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %37 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul123 = fmul fast float %37, 1.500000e+01
  %add124 = fadd fast float %mul123, -1.000000e+00
  %mul121 = fmul fast float %26, 2.500000e-01
  %mul125 = fmul fast float %mul121, %add124
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul127 = fmul fast float %38, %38
  %mul129 = fmul fast float %mul127, 0x3FFEFBDEC0000000
  %mul132 = fmul fast float %mul129, %add53
  %39 = fmul fast float %mul127, 0x3FE94C5840000000
  %mul135 = fmul fast float %39, %add64
  %mul138 = fmul fast float %mul135, %38
  %mul141 = fmul fast float %add42, 0x3FC3988E20000000
  %40 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul143 = fmul fast float %40, 5.000000e+00
  %add144 = fadd fast float %mul143, %38
  %mul145 = fmul fast float %mul141, %add144
  %reass.add = fadd fast float %mul125, %mul132
  %reass.mul = fmul fast float %reass.add, %36
  %add139 = fadd fast float %mul145, %mul138
  %add146 = fadd fast float %add139, %reass.mul
  store float %add146, float* %arrayidx31, align 4, !tbaa !47
  %mul150 = fmul fast float %add42, 6.250000e-02
  %41 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %42 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %mul152 = fmul fast float %42, 1.500000e+01
  %add153 = fadd fast float %mul152, %41
  %mul154 = fmul fast float %mul150, %add153
  %43 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %mul158 = fmul fast float %43, 3.000000e+00
  %add159 = fadd fast float %mul158, 1.000000e+00
  %44 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul160 = fmul fast float %add53, 0x3FD94C5840000000
  %mul162 = fmul fast float %mul160, %add159
  %mul165 = fmul fast float %add64, 0x3FEEFBDEC0000000
  %mul167 = fmul fast float %mul165, %41
  %mul170 = fmul fast float %mul167, %44
  %reass.add558 = fadd fast float %mul162, %mul170
  %reass.mul559 = fmul fast float %reass.add558, %44
  %add171 = fadd fast float %reass.mul559, %mul154
  %conv172 = fpext float %add171 to double
  %conv175 = fpext float %26 to double
  %mul176 = fmul fast double %conv175, 0x3FC3988E20000000
  %45 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul179 = fmul fast float %45, 5.000000e+00
  %add180 = fadd fast float %mul179, %44
  %conv181 = fpext float %add180 to double
  %mul182 = fmul fast double %mul176, %conv181
  %sub183 = fsub fast double %conv172, %mul182
  %conv184 = fptrunc double %sub183 to float
  store float %conv184, float* %arrayidx21, align 4, !tbaa !47
  %mul188 = fmul fast float %add53, 1.250000e-01
  %46 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul190 = fmul fast float %46, 5.000000e+00
  %47 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %mul192 = fmul fast float %47, 3.000000e+00
  %add193 = fadd fast float %mul192, %mul190
  %mul194 = fmul fast float %mul188, %add193
  %48 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %add198 = fadd fast float %48, 3.000000e+00
  %49 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul199 = fmul fast float %add64, 0x3FD3988E20000000
  %mul201 = fmul fast float %mul199, %add198
  %mul204 = fmul fast float %26, 0x3FFEFBDEC0000000
  %mul206 = fmul fast float %mul204, %46
  %mul209 = fmul fast float %mul206, %49
  %reass.add560 = fadd fast float %mul201, %mul209
  %reass.mul561 = fmul fast float %reass.add560, %49
  %add210 = fadd fast float %reass.mul561, %mul194
  %conv211 = fpext float %add210 to double
  %conv214 = fpext float %add42 to double
  %mul215 = fmul fast double %conv214, 0x3FC94C5840000000
  %50 = load float, float* %m_fSin3Beta, align 4, !tbaa !132
  %mul218 = fmul fast float %50, 3.000000e+00
  %sub219 = fsub fast float %49, %mul218
  %conv220 = fpext float %sub219 to double
  %mul221 = fmul fast double %mul215, %conv220
  %add222 = fadd fast double %mul221, %conv211
  %conv223 = fptrunc double %add222 to float
  store float %conv223, float* %arrayidx11, align 4, !tbaa !47
  %mul227 = fmul fast float %add64, 6.250000e-02
  %51 = load float, float* %m_fCosBeta, align 8, !tbaa !118
  %mul229 = fmul fast float %51, 1.500000e+01
  %52 = load float, float* %m_fCos3Beta, align 8, !tbaa !131
  %add231 = fadd fast float %mul229, %52
  %mul232 = fmul fast float %mul227, %add231
  %53 = load float, float* %m_fCos2Beta, align 8, !tbaa !125
  %add236 = fadd fast float %53, 3.000000e+00
  %54 = load float, float* %m_fSinBeta, align 4, !tbaa !119
  %mul239 = fmul fast float %add53, 0xBFD3988E20000000
  %mul239.neg = fmul fast float %mul239, %add236
  %mul242 = fmul fast float %add42, 0x3FEEFBDEC0000000
  %mul244 = fmul fast float %mul242, %51
  %mul247 = fmul fast float %mul244, %54
  %reass.add568 = fadd fast float %mul239.neg, %mul247
  %reass.mul569 = fmul fast float %reass.add568, %54
  %add248 = fadd fast float %reass.mul569, %mul232
  %conv249 = fpext float %add248 to double
  %mul253 = fmul fast double %conv175, 0x3FE94C5840000000
  %square557 = fmul fast float %54, %54
  %55 = fmul fast float %square557, %54
  %conv256 = fpext float %55 to double
  %mul257 = fmul fast double %mul253, %conv256
  %sub258 = fsub fast double %conv249, %mul257
  %conv259 = fptrunc double %sub258 to float
  store float %conv259, float* %arrayidx4, align 4, !tbaa !47
  %56 = load float, float* %m_fSin3Gamma, align 4, !tbaa !134
  %57 = fmul fast float %56, %conv259
  %58 = load float, float* %arrayidx7, align 4, !tbaa !47
  %59 = load float, float* %m_fCos3Gamma, align 8, !tbaa !133
  %mul271 = fmul fast float %59, %58
  %add272 = fsub fast float %mul271, %57
  %60 = load float, float* %arrayidx11, align 4, !tbaa !47
  %61 = load float, float* %m_fSin2Gamma, align 4, !tbaa !128
  %62 = fmul fast float %61, %60
  %63 = load float, float* %arrayidx16, align 4, !tbaa !47
  %64 = load float, float* %m_fCos2Gamma, align 8, !tbaa !127
  %mul281 = fmul fast float %64, %63
  %add282 = fsub fast float %mul281, %62
  %65 = load float, float* %arrayidx21, align 4, !tbaa !47
  %66 = load float, float* %m_fSinGamma, align 4, !tbaa !122
  %67 = fmul fast float %66, %65
  %68 = load float, float* %arrayidx26, align 4, !tbaa !47
  %69 = load float, float* %m_fCosGamma, align 8, !tbaa !121
  %mul291 = fmul fast float %69, %68
  %add292 = fsub fast float %mul291, %67
  %70 = bitcast float* %arrayidx31 to i32*
  %71 = load i32, i32* %70, align 4, !tbaa !47
  %mul300 = fmul fast float %69, %65
  %mul305 = fmul fast float %68, %66
  %add306 = fadd fast float %mul300, %mul305
  %mul311 = fmul fast float %64, %60
  %mul316 = fmul fast float %63, %61
  %add317 = fadd fast float %mul311, %mul316
  %mul322 = fmul fast float %59, %conv259
  %mul327 = fmul fast float %58, %56
  %add328 = fadd fast float %mul322, %mul327
  store float %add272, float* %arrayidx7, align 4, !tbaa !47
  store float %add282, float* %arrayidx16, align 4, !tbaa !47
  store float %add292, float* %arrayidx26, align 4, !tbaa !47
  store i32 %71, i32* %70, align 4, !tbaa !47
  store float %add306, float* %arrayidx21, align 4, !tbaa !47
  store float %add317, float* %arrayidx11, align 4, !tbaa !47
  store float %add328, float* %arrayidx4, align 4, !tbaa !47
  %inc = add i32 %niSample.0574, 1
  %conv = zext i32 %inc to i64
  %cmp3 = icmp slt i64 %conv, %nSample
  br i1 %cmp3, label %for.body, label %if.end

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct
}

define %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned.12(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotateOrder3_fxp %rotateOrder3_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperRotateOrder3_fxp undef, i64 %0, 0
  ret %struct.out.wrapperRotateOrder3_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %cmp199 = icmp sgt i64 %nSample, 0
  br i1 %cmp199, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %channelpart1, align 8, !tbaa !43
  %_M_head_impl.i.i.i.i.i.i.i196 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i196, align 8, !tbaa !43
  %arrayidx.i197 = getelementptr inbounds float*, float** %6, i64 3
  %7 = load float*, float** %arrayidx.i197, align 8, !tbaa !43
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx4, align 8, !tbaa !43
  %arrayidx.i195 = getelementptr inbounds float*, float** %6, i64 1
  %9 = load float*, float** %arrayidx.i195, align 8, !tbaa !43
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx11, align 8, !tbaa !43
  %arrayidx.i193 = getelementptr inbounds float*, float** %6, i64 2
  %11 = load float*, float** %arrayidx.i193, align 8, !tbaa !43
  %12 = load float*, float** %channelpart2, align 8, !tbaa !43
  %arrayidx.i191 = getelementptr inbounds float*, float** %6, i64 6
  %13 = load float*, float** %arrayidx.i191, align 8, !tbaa !43
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx25, align 8, !tbaa !43
  %arrayidx.i189 = getelementptr inbounds float*, float** %6, i64 7
  %15 = load float*, float** %arrayidx.i189, align 8, !tbaa !43
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx32, align 8, !tbaa !43
  %arrayidx.i187 = getelementptr inbounds float*, float** %6, i64 5
  %17 = load float*, float** %arrayidx.i187, align 8, !tbaa !43
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !43
  %arrayidx.i185 = getelementptr inbounds float*, float** %6, i64 8
  %19 = load float*, float** %arrayidx.i185, align 8, !tbaa !43
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx46, align 8, !tbaa !43
  %arrayidx.i183 = getelementptr inbounds float*, float** %6, i64 4
  %21 = load float*, float** %arrayidx.i183, align 8, !tbaa !43
  %22 = load float*, float** %channelpart3, align 8, !tbaa !43
  %arrayidx.i181 = getelementptr inbounds float*, float** %6, i64 9
  %23 = load float*, float** %arrayidx.i181, align 8, !tbaa !43
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx60, align 8, !tbaa !43
  %arrayidx.i179 = getelementptr inbounds float*, float** %6, i64 10
  %25 = load float*, float** %arrayidx.i179, align 8, !tbaa !43
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx67, align 8, !tbaa !43
  %arrayidx.i177 = getelementptr inbounds float*, float** %6, i64 11
  %27 = load float*, float** %arrayidx.i177, align 8, !tbaa !43
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx74, align 8, !tbaa !43
  %arrayidx.i175 = getelementptr inbounds float*, float** %6, i64 12
  %29 = load float*, float** %arrayidx.i175, align 8, !tbaa !43
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx81, align 8, !tbaa !43
  %arrayidx.i173 = getelementptr inbounds float*, float** %6, i64 13
  %31 = load float*, float** %arrayidx.i173, align 8, !tbaa !43
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx88, align 8, !tbaa !43
  %arrayidx.i171 = getelementptr inbounds float*, float** %6, i64 14
  %33 = load float*, float** %arrayidx.i171, align 8, !tbaa !43
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx95, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %6, i64 15
  %35 = load float*, float** %arrayidx.i, align 8, !tbaa !43
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %conv102 = trunc i64 %nSample to i32
  %cmp103.i = icmp eq i32 %conv102, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.cleanup
  %36 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 8, !tbaa !53
  %cmp397.i = icmp eq i32 %37, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = and i64 %nSample, 4294967295
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i, align 8, !tbaa !43
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i95.i, align 8, !tbaa !43
  %38 = zext i32 %37 to i64
  %39 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i93.i, align 8, !tbaa !43
  %40 = add nsw i64 %38, -1
  %xtraiter = and i64 %38, 3
  %41 = icmp ult i64 %40, 3
  %unroll_iter = sub nsw i64 %38, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %41, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv108.i
  %42 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !47
  %43 = tail call fast float @llvm.fabs.f32(float %42) #24
  %conv17.us.i = fpext float %43 to double
  %cmp18.us.i = fcmp fast ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %44 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !43
  %arrayidx45.us.i = getelementptr inbounds float, float* %44, i64 %indvars.iv110.i
  %45 = load float, float* %arrayidx45.us.i, align 4, !tbaa !47
  %46 = load float, float* %m_fZoomRed.i, align 4, !tbaa !149
  %mul46.us.i = fmul fast float %46, %45
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !47
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %47 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !156
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %48 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !43
  %arrayidx23.us.i = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx23.us.i, align 4, !tbaa !47
  %mul24.us.i = fmul fast float %49, %47
  %50 = load float, float* %m_fZoom.i, align 8, !tbaa !155
  %mul28.us.i = fmul fast float %42, %add.us.i.lcssa
  %mul29.us.i = fmul fast float %mul28.us.i, %50
  %add30.us.i = fadd fast float %mul29.us.i, %mul24.us.i
  %51 = tail call fast float @llvm.fabs.f32(float %50) #24
  %52 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !154
  %mul34.us.i = fmul fast float %51, %52
  %add35.us.i = fadd fast float %mul34.us.i, %47
  %div.us.i = fdiv fast float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !47
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %38
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %53 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !47
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %54 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !43
  %arrayidx.us.i = getelementptr inbounds float, float* %54, i64 %indvars.iv110.i
  %55 = load float, float* %arrayidx.us.i, align 4, !tbaa !47
  %mul.us.i = fmul fast float %55, %53
  %add.us.i = fadd fast float %mul.us.i, %fMic.098.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %56 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !47
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %57 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !43
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %57, i64 %indvars.iv110.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !47
  %mul.us.i.1 = fmul fast float %58, %56
  %add.us.i.1 = fadd fast float %mul.us.i.1, %add.us.i
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %59 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !47
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %60 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !43
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %60, i64 %indvars.iv110.i
  %61 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !47
  %mul.us.i.2 = fmul fast float %61, %59
  %add.us.i.2 = fadd fast float %mul.us.i.2, %add.us.i.1
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !47
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %63 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !43
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %63, i64 %indvars.iv110.i
  %64 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !47
  %mul.us.i.3 = fmul fast float %64, %62
  %add.us.i.3 = fadd fast float %mul.us.i.3, %add.us.i.2
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %65 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !47
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %66 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !43
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %66, i64 %indvars.iv110.i
  %67 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !47
  %mul.us.i.epil = fmul fast float %67, %65
  %add.us.i.epil = fadd fast float %mul.us.i.epil, %fMic.098.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !280

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct1 = insertvalue %struct.out.zoomProcess_fxp %returnStruct, i64 %bytes_sumBF, 1
  ret %struct.out.zoomProcess_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv201 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %i.0200 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 %conv201
  %68 = bitcast float* %arrayidx1 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !47
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 %conv201
  %70 = bitcast float* %arrayidx3 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !47
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %conv201
  %71 = bitcast float* %arrayidx6 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !47
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %conv201
  %73 = bitcast float* %arrayidx10 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !47
  %arrayidx13 = getelementptr inbounds float, float* %10, i64 %conv201
  %74 = bitcast float* %arrayidx13 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !47
  %arrayidx17 = getelementptr inbounds float, float* %11, i64 %conv201
  %76 = bitcast float* %arrayidx17 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !47
  %arrayidx20 = getelementptr inbounds float, float* %12, i64 %conv201
  %77 = bitcast float* %arrayidx20 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !47
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %conv201
  %79 = bitcast float* %arrayidx24 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !47
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 %conv201
  %80 = bitcast float* %arrayidx27 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !47
  %arrayidx31 = getelementptr inbounds float, float* %15, i64 %conv201
  %82 = bitcast float* %arrayidx31 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !47
  %arrayidx34 = getelementptr inbounds float, float* %16, i64 %conv201
  %83 = bitcast float* %arrayidx34 to i32*
  %84 = load i32, i32* %83, align 4, !tbaa !47
  %arrayidx38 = getelementptr inbounds float, float* %17, i64 %conv201
  %85 = bitcast float* %arrayidx38 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !47
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 %conv201
  %86 = bitcast float* %arrayidx41 to i32*
  %87 = load i32, i32* %86, align 4, !tbaa !47
  %arrayidx45 = getelementptr inbounds float, float* %19, i64 %conv201
  %88 = bitcast float* %arrayidx45 to i32*
  store i32 %87, i32* %88, align 4, !tbaa !47
  %arrayidx48 = getelementptr inbounds float, float* %20, i64 %conv201
  %89 = bitcast float* %arrayidx48 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !47
  %arrayidx52 = getelementptr inbounds float, float* %21, i64 %conv201
  %91 = bitcast float* %arrayidx52 to i32*
  store i32 %90, i32* %91, align 4, !tbaa !47
  %arrayidx55 = getelementptr inbounds float, float* %22, i64 %conv201
  %92 = bitcast float* %arrayidx55 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !47
  %arrayidx59 = getelementptr inbounds float, float* %23, i64 %conv201
  %94 = bitcast float* %arrayidx59 to i32*
  store i32 %93, i32* %94, align 4, !tbaa !47
  %arrayidx62 = getelementptr inbounds float, float* %24, i64 %conv201
  %95 = bitcast float* %arrayidx62 to i32*
  %96 = load i32, i32* %95, align 4, !tbaa !47
  %arrayidx66 = getelementptr inbounds float, float* %25, i64 %conv201
  %97 = bitcast float* %arrayidx66 to i32*
  store i32 %96, i32* %97, align 4, !tbaa !47
  %arrayidx69 = getelementptr inbounds float, float* %26, i64 %conv201
  %98 = bitcast float* %arrayidx69 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !47
  %arrayidx73 = getelementptr inbounds float, float* %27, i64 %conv201
  %100 = bitcast float* %arrayidx73 to i32*
  store i32 %99, i32* %100, align 4, !tbaa !47
  %arrayidx76 = getelementptr inbounds float, float* %28, i64 %conv201
  %101 = bitcast float* %arrayidx76 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !47
  %arrayidx80 = getelementptr inbounds float, float* %29, i64 %conv201
  %103 = bitcast float* %arrayidx80 to i32*
  store i32 %102, i32* %103, align 4, !tbaa !47
  %arrayidx83 = getelementptr inbounds float, float* %30, i64 %conv201
  %104 = bitcast float* %arrayidx83 to i32*
  %105 = load i32, i32* %104, align 4, !tbaa !47
  %arrayidx87 = getelementptr inbounds float, float* %31, i64 %conv201
  %106 = bitcast float* %arrayidx87 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !47
  %arrayidx90 = getelementptr inbounds float, float* %32, i64 %conv201
  %107 = bitcast float* %arrayidx90 to i32*
  %108 = load i32, i32* %107, align 4, !tbaa !47
  %arrayidx94 = getelementptr inbounds float, float* %33, i64 %conv201
  %109 = bitcast float* %arrayidx94 to i32*
  store i32 %108, i32* %109, align 4, !tbaa !47
  %arrayidx97 = getelementptr inbounds float, float* %34, i64 %conv201
  %110 = bitcast float* %arrayidx97 to i32*
  %111 = load i32, i32* %110, align 4, !tbaa !47
  %arrayidx101 = getelementptr inbounds float, float* %35, i64 %conv201
  %112 = bitcast float* %arrayidx101 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !47
  %inc = add i32 %i.0200, 1
  %conv = zext i32 %inc to i64
  %cmp = icmp slt i64 %conv, %nSample
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned.14(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = insertvalue %struct.out.wrapperZoomProcess_fxp undef, i64 %0, 0
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %output = insertvalue %struct.out.wrapperZoomProcess_fxp %1, i64 %2, 1
  ret %struct.out.wrapperZoomProcess_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.setAndFFT_left_fxp @setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !63
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !53
  %cmp39 = icmp eq i32 %6, 0
  br i1 %cmp39, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i38 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i38 to i8**
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i36 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %8 = load i8*, i8** %7, align 8, !tbaa !63
  %9 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %10 = bitcast float** %arrayidx.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !43
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv4 = zext i32 %12 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 %mul5, i1 false)
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv8 = zext i32 %13 to i64
  %14 = load float*, float** %_M_start.i38, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %conv8
  %15 = bitcast float* %add.ptr.i to i8*
  %16 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %sub = sub i32 %16, %13
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 %mul13, i1 false)
  %17 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i36, align 8, !tbaa !43
  %18 = load float*, float** %_M_start.i38, align 8, !tbaa !63
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %17, float* %18, %struct.kiss_fft_cpx* %19) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %5, align 8, !tbaa !53
  %21 = zext i32 %20 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperSetAndFFT_left_fxp @wrapperSetAndFFT_left_fxp_cloned.16(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_left_fxp @setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.setAndFFT_left_fxp %setAndFFT_left_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperSetAndFFT_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperSetAndFFT_left_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.setAndFFT_right_fxp @setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !63
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !53
  %cmp39 = icmp eq i32 %6, 0
  br i1 %cmp39, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i38 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i38 to i8**
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i.i36 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %8 = load i8*, i8** %7, align 8, !tbaa !63
  %9 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %10 = bitcast float** %arrayidx.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !43
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv4 = zext i32 %12 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 %mul5, i1 false)
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv8 = zext i32 %13 to i64
  %14 = load float*, float** %_M_start.i38, align 8, !tbaa !63
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %conv8
  %15 = bitcast float* %add.ptr.i to i8*
  %16 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %sub = sub i32 %16, %13
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 %mul13, i1 false)
  %17 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i36, align 8, !tbaa !43
  %18 = load float*, float** %_M_start.i38, align 8, !tbaa !63
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %17, float* %18, %struct.kiss_fft_cpx* %19) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %5, align 8, !tbaa !53
  %21 = zext i32 %20 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

define %struct.out.wrapperSetAndFFT_right_fxp @wrapperSetAndFFT_right_fxp_cloned.18(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_right_fxp @setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.setAndFFT_right_fxp %setAndFFT_right_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperSetAndFFT_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperSetAndFFT_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %1 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %2 = zext i32 %1 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %2, align 16
  %cmp116 = icmp sgt i64 %decoder0ChannelCount, 0
  br i1 %cmp116, label %for.cond1.preheader.lr.ph, label %for.cond.cleanup

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp3113 = icmp sgt i64 %decoder0FFTBins, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i111 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %cmp3113, label %for.cond1.preheader.us, label %for.cond1.preheader

for.cond1.preheader.us:                           ; preds = %for.cond1.for.cond.cleanup4_crit_edge.us, %for.cond1.preheader.lr.ph
  %conv118.us = phi i64 [ %conv.us, %for.cond1.for.cond.cleanup4_crit_edge.us ], [ 0, %for.cond1.preheader.lr.ph ]
  %niChannel.0117.us = phi i32 [ %inc58.us, %for.cond1.for.cond.cleanup4_crit_edge.us ], [ 0, %for.cond1.preheader.lr.ph ]
  br label %for.body5.us

for.body5.us:                                     ; preds = %for.body5.us, %for.cond1.preheader.us
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next, %for.body5.us ]
  %3 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %3, i64 %indvars.iv
  %r.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i.us, i64 0, i32 0
  %4 = load float, float* %r.us, align 4, !tbaa !136
  %5 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i111, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i.i109.us = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %5, i64 %conv118.us, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i109.us, align 8, !tbaa !43
  %r11.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 0
  %7 = load float, float* %r11.us, align 4, !tbaa !136
  %mul.us = fmul fast float %7, %4
  %i.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %3, i64 %indvars.iv, i32 1
  %8 = load float, float* %i.us, align 4, !tbaa !138
  %i21.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 1
  %9 = load float, float* %i21.us, align 4, !tbaa !138
  %mul22.us = fmul fast float %9, %8
  %sub.us = fsub fast float %mul.us, %mul22.us
  %arrayidx23.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r24.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx23.us, i64 0, i32 0
  store float %sub.us, float* %r24.us, align 8, !tbaa !136
  %mul36.us = fmul fast float %9, %4
  %mul48.us = fmul fast float %8, %7
  %add.us = fadd fast float %mul36.us, %mul48.us
  %i51.us = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add.us, float* %i51.us, align 4, !tbaa !138
  %10 = bitcast %struct.kiss_fft_cpx* %arrayidx23.us to i64*
  %11 = bitcast %struct.kiss_fft_cpx* %arrayidx.i.us to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %decoder0FFTBins
  br i1 %exitcond, label %for.cond1.for.cond.cleanup4_crit_edge.us, label %for.body5.us

for.cond1.for.cond.cleanup4_crit_edge.us:         ; preds = %for.body5.us
  %inc58.us = add i32 %niChannel.0117.us, 1
  %conv.us = zext i32 %inc58.us to i64
  %cmp.us = icmp slt i64 %conv.us, %decoder0ChannelCount
  br i1 %cmp.us, label %for.cond1.preheader.us, label %for.cond.cleanup

for.cond1.preheader:                              ; preds = %for.cond1.preheader, %for.cond1.preheader.lr.ph
  %niChannel.0117 = phi i32 [ %inc58, %for.cond1.preheader ], [ 0, %for.cond1.preheader.lr.ph ]
  %inc58 = add i32 %niChannel.0117, 1
  %conv = zext i32 %inc58 to i64
  %cmp = icmp slt i64 %conv, %decoder0ChannelCount
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond1.preheader, %for.cond1.for.cond.cleanup4_crit_edge.us, %entry
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct
}

define %struct.out.wrapperFIR_left_fxp @wrapperFIR_left_fxp_cloned.20(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder0ChannelCount, i64 %decoder0FFTBins, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperFIR_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperFIR_left_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %1 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %2 = zext i32 %1 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %2, align 16
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !53
  %cmp116 = icmp eq i32 %4, 0
  br i1 %cmp116, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i112 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0, i32 0
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup4, %for.cond1.preheader.lr.ph
  %5 = phi i32 [ %4, %for.cond1.preheader.lr.ph ], [ %7, %for.cond.cleanup4 ]
  %6 = phi i32 [ %1, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup4 ]
  %indvars.iv119 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next120, %for.cond.cleanup4 ]
  %cmp3114 = icmp eq i32 %6, 0
  br i1 %cmp3114, label %for.cond.cleanup4, label %for.body5

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4, %entry
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct

for.cond.cleanup4.loopexit:                       ; preds = %for.body5
  %.pre = load i32, i32* %3, align 8, !tbaa !53
  br label %for.cond.cleanup4

for.cond.cleanup4:                                ; preds = %for.cond.cleanup4.loopexit, %for.cond1.preheader
  %7 = phi i32 [ %.pre, %for.cond.cleanup4.loopexit ], [ %5, %for.cond1.preheader ]
  %8 = phi i32 [ %20, %for.cond.cleanup4.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %9 = zext i32 %7 to i64
  %cmp = icmp ult i64 %indvars.iv.next120, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body5:                                        ; preds = %for.body5, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ 0, %for.cond1.preheader ]
  %10 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i, i64 0, i32 0
  %11 = load float, float* %r, align 4, !tbaa !136
  %12 = load %"class.std::unique_ptr.33"*, %"class.std::unique_ptr.33"** %_M_start.i112, align 8, !tbaa !185
  %_M_head_impl.i.i.i.i.i.i.i110 = getelementptr inbounds %"class.std::unique_ptr.33", %"class.std::unique_ptr.33"* %12, i64 %indvars.iv119, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i110, align 8, !tbaa !43
  %r10 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 0
  %14 = load float, float* %r10, align 4, !tbaa !136
  %mul = fmul fast float %14, %11
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %10, i64 %indvars.iv, i32 1
  %15 = load float, float* %i, align 4, !tbaa !138
  %i20 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %13, i64 %indvars.iv, i32 1
  %16 = load float, float* %i20, align 4, !tbaa !138
  %mul21 = fmul fast float %16, %15
  %sub = fsub fast float %mul, %mul21
  %arrayidx22 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r23 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx22, i64 0, i32 0
  store float %sub, float* %r23, align 8, !tbaa !136
  %mul35 = fmul fast float %16, %11
  %mul47 = fmul fast float %15, %14
  %add = fadd fast float %mul35, %mul47
  %i50 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i50, align 4, !tbaa !138
  %17 = bitcast %struct.kiss_fft_cpx* %arrayidx22 to i64*
  %18 = bitcast %struct.kiss_fft_cpx* %arrayidx.i to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !182
  %21 = zext i32 %20 to i64
  %cmp3 = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp3, label %for.body5, label %for.cond.cleanup4.loopexit
}

define %struct.out.wrapperFIR_right_fxp @wrapperFIR_right_fxp_cloned.22(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %decoder1ChannelCount, i64 %decoder1FFTBins, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperFIR_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperFIR_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !53
  %cmp34 = icmp eq i32 %2, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i31, align 8, !tbaa !43
  %5 = load float*, float** %_M_start.i30, align 8, !tbaa !63
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %5) #24
  %6 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %cmp432 = icmp eq i32 %6, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %7 = load float*, float** %_M_start.i30, align 8, !tbaa !63
  %8 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %9 = zext i32 %6 to i64
  %10 = add nsw i64 %9, -1
  %xtraiter = and i64 %9, 3
  %11 = icmp ult i64 %10, 3
  br i1 %11, label %for.cond.cleanup5.loopexit.unr-lcssa, label %for.body6.lr.ph.new

for.body6.lr.ph.new:                              ; preds = %for.body6.lr.ph
  %unroll_iter = sub nsw i64 %9, %xtraiter
  br label %for.body6

for.cond.cleanup5.loopexit.unr-lcssa:             ; preds = %for.body6, %for.body6.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next.3, %for.body6 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup5, label %for.body6.epil

for.body6.epil:                                   ; preds = %for.body6.epil, %for.cond.cleanup5.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body6.epil ], [ %indvars.iv.unr, %for.cond.cleanup5.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body6.epil ], [ %xtraiter, %for.cond.cleanup5.loopexit.unr-lcssa ]
  %add.ptr.i29.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %12 = load float, float* %add.ptr.i29.epil, align 4, !tbaa !47
  %add.ptr.i.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %13 = load float, float* %add.ptr.i.epil, align 4, !tbaa !47
  %add.epil = fadd fast float %13, %12
  store float %add.epil, float* %add.ptr.i.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup5, label %for.body6.epil, !llvm.loop !281

for.cond.cleanup5:                                ; preds = %for.body6.epil, %for.cond.cleanup5.loopexit.unr-lcssa, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %14 = load i32, i32* %1, align 8, !tbaa !53
  %cmp = icmp ult i32 %inc12, %14
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body6:                                        ; preds = %for.body6, %for.body6.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph.new ], [ %indvars.iv.next.3, %for.body6 ]
  %niter = phi i64 [ %unroll_iter, %for.body6.lr.ph.new ], [ %niter.nsub.3, %for.body6 ]
  %add.ptr.i29 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %15 = load float, float* %add.ptr.i29, align 4, !tbaa !47
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %16 = load float, float* %add.ptr.i, align 4, !tbaa !47
  %add = fadd fast float %16, %15
  store float %add, float* %add.ptr.i, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.i29.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %17 = load float, float* %add.ptr.i29.1, align 4, !tbaa !47
  %add.ptr.i.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %18 = load float, float* %add.ptr.i.1, align 4, !tbaa !47
  %add.1 = fadd fast float %18, %17
  store float %add.1, float* %add.ptr.i.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %add.ptr.i29.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %19 = load float, float* %add.ptr.i29.2, align 4, !tbaa !47
  %add.ptr.i.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %20 = load float, float* %add.ptr.i.2, align 4, !tbaa !47
  %add.2 = fadd fast float %20, %19
  store float %add.2, float* %add.ptr.i.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %add.ptr.i29.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %21 = load float, float* %add.ptr.i29.3, align 4, !tbaa !47
  %add.ptr.i.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %22 = load float, float* %add.ptr.i.3, align 4, !tbaa !47
  %add.3 = fadd fast float %22, %21
  store float %add.3, float* %add.ptr.i.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup5.loopexit.unr-lcssa, label %for.body6
}

define %struct.out.wrapperIFFT_left_fxp @wrapperIFFT_left_fxp_cloned.24(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.IFFT_left_fxp %IFFT_left_fxp_cloned.23_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperIFFT_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperIFFT_left_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !53
  %cmp34 = icmp eq i32 %2, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !43
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i31, align 8, !tbaa !43
  %5 = load float*, float** %_M_start.i30, align 8, !tbaa !63
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %5) #24
  %6 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %cmp432 = icmp eq i32 %6, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %7 = load float*, float** %_M_start.i30, align 8, !tbaa !63
  %8 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %9 = zext i32 %6 to i64
  %10 = add nsw i64 %9, -1
  %xtraiter = and i64 %9, 3
  %11 = icmp ult i64 %10, 3
  br i1 %11, label %for.cond.cleanup5.loopexit.unr-lcssa, label %for.body6.lr.ph.new

for.body6.lr.ph.new:                              ; preds = %for.body6.lr.ph
  %unroll_iter = sub nsw i64 %9, %xtraiter
  br label %for.body6

for.cond.cleanup5.loopexit.unr-lcssa:             ; preds = %for.body6, %for.body6.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next.3, %for.body6 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup5, label %for.body6.epil

for.body6.epil:                                   ; preds = %for.body6.epil, %for.cond.cleanup5.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body6.epil ], [ %indvars.iv.unr, %for.cond.cleanup5.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body6.epil ], [ %xtraiter, %for.cond.cleanup5.loopexit.unr-lcssa ]
  %add.ptr.i29.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %12 = load float, float* %add.ptr.i29.epil, align 4, !tbaa !47
  %add.ptr.i.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %13 = load float, float* %add.ptr.i.epil, align 4, !tbaa !47
  %add.epil = fadd fast float %13, %12
  store float %add.epil, float* %add.ptr.i.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup5, label %for.body6.epil, !llvm.loop !282

for.cond.cleanup5:                                ; preds = %for.body6.epil, %for.cond.cleanup5.loopexit.unr-lcssa, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %14 = load i32, i32* %1, align 8, !tbaa !53
  %cmp = icmp ult i32 %inc12, %14
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body6:                                        ; preds = %for.body6, %for.body6.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph.new ], [ %indvars.iv.next.3, %for.body6 ]
  %niter = phi i64 [ %unroll_iter, %for.body6.lr.ph.new ], [ %niter.nsub.3, %for.body6 ]
  %add.ptr.i29 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %15 = load float, float* %add.ptr.i29, align 4, !tbaa !47
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %16 = load float, float* %add.ptr.i, align 4, !tbaa !47
  %add = fadd fast float %16, %15
  store float %add, float* %add.ptr.i, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.i29.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %17 = load float, float* %add.ptr.i29.1, align 4, !tbaa !47
  %add.ptr.i.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %18 = load float, float* %add.ptr.i.1, align 4, !tbaa !47
  %add.1 = fadd fast float %18, %17
  store float %add.1, float* %add.ptr.i.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %add.ptr.i29.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %19 = load float, float* %add.ptr.i29.2, align 4, !tbaa !47
  %add.ptr.i.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %20 = load float, float* %add.ptr.i.2, align 4, !tbaa !47
  %add.2 = fadd fast float %20, %19
  store float %add.2, float* %add.ptr.i.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %add.ptr.i29.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %21 = load float, float* %add.ptr.i29.3, align 4, !tbaa !47
  %add.ptr.i.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %22 = load float, float* %add.ptr.i.3, align 4, !tbaa !47
  %add.3 = fadd fast float %22, %21
  store float %add.3, float* %add.ptr.i.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup5.loopexit.unr-lcssa, label %for.body6
}

define %struct.out.wrapperIFFT_right_fxp @wrapperIFFT_right_fxp_cloned.26(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.IFFT_right_fxp %IFFT_right_fxp_cloned.25_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperIFFT_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperIFFT_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_right_fxp @overlap_right_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample1, i64 %bytes_resultSample1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample1.i8ptr = bitcast float* %resultSample1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample1.i8ptr, i64 %bytes_resultSample1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %cmp55 = icmp eq i32 %2, 0
  br i1 %cmp55, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !63
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i51, align 8, !tbaa !63
  %4 = zext i32 %2 to i64
  %5 = bitcast float* %3 to i8*
  %6 = add nsw i64 %4, -1
  %xtraiter61 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  br i1 %7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter64 = sub nsw i64 %4, %xtraiter61
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %indvars.iv57.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next58.3, %for.body ]
  %lcmp.mod63 = icmp eq i64 %xtraiter61, 0
  br i1 %lcmp.mod63, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %indvars.iv57.epil = phi i64 [ %indvars.iv.next58.epil, %for.body.epil ], [ %indvars.iv57.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter62 = phi i64 [ %epil.iter62.sub, %for.body.epil ], [ %xtraiter61, %for.cond.cleanup.loopexit.unr-lcssa ]
  %8 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.epil = getelementptr inbounds float, float* %3, i64 %indvars.iv57.epil
  %9 = load float, float* %add.ptr.i52.epil, align 4, !tbaa !47
  %mul.epil = fmul fast float %9, %8
  store float %mul.epil, float* %add.ptr.i52.epil, align 4, !tbaa !47
  %indvars.iv.next58.epil = add nuw nsw i64 %indvars.iv57.epil, 1
  %epil.iter62.sub = add i64 %epil.iter62, -1
  %epil.iter62.cmp = icmp eq i64 %epil.iter62.sub, 0
  br i1 %epil.iter62.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !283

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry.for.cond.cleanup_crit_edge
  %10 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %5, %for.body.epil ], [ %5, %for.cond.cleanup.loopexit.unr-lcssa ]
  %11 = bitcast float* %resultSample1 to i8*
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv3 = zext i32 %12 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %10, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %13 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %cmp753 = icmp eq i32 %13, 0
  br i1 %cmp753, label %for.cond.cleanup8, label %for.body9.lr.ph

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load float*, float** %_M_start.i47, align 8, !tbaa !63
  %15 = zext i32 %13 to i64
  %16 = add nsw i64 %15, -1
  %xtraiter = and i64 %15, 3
  %17 = icmp ult i64 %16, 3
  br i1 %17, label %for.cond.cleanup8.loopexit.unr-lcssa, label %for.body9.lr.ph.new

for.body9.lr.ph.new:                              ; preds = %for.body9.lr.ph
  %unroll_iter = sub nsw i64 %15, %xtraiter
  br label %for.body9

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv57 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next58.3, %for.body ]
  %niter65 = phi i64 [ %unroll_iter64, %for.body.lr.ph.new ], [ %niter65.nsub.3, %for.body ]
  %18 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52 = getelementptr inbounds float, float* %3, i64 %indvars.iv57
  %19 = load float, float* %add.ptr.i52, align 4, !tbaa !47
  %mul = fmul fast float %19, %18
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !47
  %indvars.iv.next58 = or i64 %indvars.iv57, 1
  %20 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.1 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next58
  %21 = load float, float* %add.ptr.i52.1, align 4, !tbaa !47
  %mul.1 = fmul fast float %21, %20
  store float %mul.1, float* %add.ptr.i52.1, align 4, !tbaa !47
  %indvars.iv.next58.1 = or i64 %indvars.iv57, 2
  %22 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.2 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next58.1
  %23 = load float, float* %add.ptr.i52.2, align 4, !tbaa !47
  %mul.2 = fmul fast float %23, %22
  store float %mul.2, float* %add.ptr.i52.2, align 4, !tbaa !47
  %indvars.iv.next58.2 = or i64 %indvars.iv57, 3
  %24 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.3 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next58.2
  %25 = load float, float* %add.ptr.i52.3, align 4, !tbaa !47
  %mul.3 = fmul fast float %25, %24
  store float %mul.3, float* %add.ptr.i52.3, align 4, !tbaa !47
  %indvars.iv.next58.3 = add nuw nsw i64 %indvars.iv57, 4
  %niter65.nsub.3 = add i64 %niter65, -4
  %niter65.ncmp.3 = icmp eq i64 %niter65.nsub.3, 0
  br i1 %niter65.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body

for.cond.cleanup8.loopexit.unr-lcssa:             ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next.3, %for.body9 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup8.loopexit, label %for.body9.epil

for.body9.epil:                                   ; preds = %for.body9.epil, %for.cond.cleanup8.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body9.epil ], [ %indvars.iv.unr, %for.cond.cleanup8.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body9.epil ], [ %xtraiter, %for.cond.cleanup8.loopexit.unr-lcssa ]
  %add.ptr.i.epil = getelementptr inbounds float, float* %14, i64 %indvars.iv.epil
  %26 = load float, float* %add.ptr.i.epil, align 4, !tbaa !47
  %arrayidx12.epil = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.epil
  %27 = load float, float* %arrayidx12.epil, align 4, !tbaa !47
  %add.epil = fadd fast float %27, %26
  store float %add.epil, float* %arrayidx12.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup8.loopexit, label %for.body9.epil, !llvm.loop !284

for.cond.cleanup8.loopexit:                       ; preds = %for.body9.epil, %for.cond.cleanup8.loopexit.unr-lcssa
  %phitmp = zext i32 %13 to i64
  %phitmp60 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup
  %.lcssa = phi i64 [ %phitmp60, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i50 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast float** %_M_start.i50 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !63
  %30 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv21 = zext i32 %30 to i64
  %31 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i49 = getelementptr inbounds float, float* %31, i64 %conv21
  %32 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %32, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_right_fxp undef, i64 %bytes_resultSample1, 0
  ret %struct.out.overlap_right_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body9.lr.ph.new ], [ %indvars.iv.next.3, %for.body9 ]
  %niter = phi i64 [ %unroll_iter, %for.body9.lr.ph.new ], [ %niter.nsub.3, %for.body9 ]
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %33 = load float, float* %add.ptr.i, align 4, !tbaa !47
  %arrayidx12 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv
  %34 = load float, float* %arrayidx12, align 4, !tbaa !47
  %add = fadd fast float %34, %33
  store float %add, float* %arrayidx12, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next
  %35 = load float, float* %add.ptr.i.1, align 4, !tbaa !47
  %arrayidx12.1 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next
  %36 = load float, float* %arrayidx12.1, align 4, !tbaa !47
  %add.1 = fadd fast float %36, %35
  store float %add.1, float* %arrayidx12.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %add.ptr.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.1
  %37 = load float, float* %add.ptr.i.2, align 4, !tbaa !47
  %arrayidx12.2 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next.1
  %38 = load float, float* %arrayidx12.2, align 4, !tbaa !47
  %add.2 = fadd fast float %38, %37
  store float %add.2, float* %arrayidx12.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %add.ptr.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.2
  %39 = load float, float* %add.ptr.i.3, align 4, !tbaa !47
  %arrayidx12.3 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next.2
  %40 = load float, float* %arrayidx12.3, align 4, !tbaa !47
  %add.3 = fadd fast float %40, %39
  store float %add.3, float* %arrayidx12.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup8.loopexit.unr-lcssa, label %for.body9
}

define %struct.out.wrapperOverlap_right_fxp @wrapperOverlap_right_fxp_cloned.28(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_right_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.overlap_right_fxp @overlap_right_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.overlap_right_fxp %overlap_right_fxp_cloned.27_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperOverlap_right_fxp undef, i64 %0, 0
  ret %struct.out.wrapperOverlap_right_fxp %output
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_left_fxp @overlap_left_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample0, i64 %bytes_resultSample0, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample0.i8ptr = bitcast float* %resultSample0 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample0.i8ptr, i64 %bytes_resultSample0)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !181
  %cmp56 = icmp eq i32 %2, 0
  br i1 %cmp56, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !63
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i51, align 8, !tbaa !63
  %4 = zext i32 %2 to i64
  %5 = bitcast float* %3 to i8*
  %6 = add nsw i64 %4, -1
  %xtraiter66 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  br i1 %7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter69 = sub nsw i64 %4, %xtraiter66
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %indvars.iv58.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next59.3, %for.body ]
  %lcmp.mod68 = icmp eq i64 %xtraiter66, 0
  br i1 %lcmp.mod68, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %indvars.iv58.epil = phi i64 [ %indvars.iv.next59.epil, %for.body.epil ], [ %indvars.iv58.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter67 = phi i64 [ %epil.iter67.sub, %for.body.epil ], [ %xtraiter66, %for.cond.cleanup.loopexit.unr-lcssa ]
  %8 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.epil = getelementptr inbounds float, float* %3, i64 %indvars.iv58.epil
  %9 = load float, float* %add.ptr.i52.epil, align 4, !tbaa !47
  %mul.epil = fmul fast float %9, %8
  store float %mul.epil, float* %add.ptr.i52.epil, align 4, !tbaa !47
  %indvars.iv.next59.epil = add nuw nsw i64 %indvars.iv58.epil, 1
  %epil.iter67.sub = add i64 %epil.iter67, -1
  %epil.iter67.cmp = icmp eq i64 %epil.iter67.sub, 0
  br i1 %epil.iter67.cmp, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !285

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry.for.cond.cleanup_crit_edge
  %10 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %5, %for.body.epil ], [ %5, %for.cond.cleanup.loopexit.unr-lcssa ]
  %11 = bitcast float* %resultSample0 to i8*
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv3 = zext i32 %12 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %10, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %13 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !180
  %cmp753 = icmp eq i32 %13, 0
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp753, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph

for.cond.cleanup.for.cond.cleanup8_crit_edge:     ; preds = %for.cond.cleanup
  %.phi.trans.insert60 = bitcast %"class.std::vector.0"* %arrayidx to i8**
  %.pre61 = load i8*, i8** %.phi.trans.insert60, align 8, !tbaa !63
  br label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load float*, float** %_M_start.i47, align 8, !tbaa !63
  %15 = zext i32 %13 to i64
  %16 = bitcast float* %14 to i8*
  %17 = add nsw i64 %15, -1
  %xtraiter = and i64 %15, 3
  %18 = icmp ult i64 %17, 3
  br i1 %18, label %for.cond.cleanup8.loopexit.unr-lcssa, label %for.body9.lr.ph.new

for.body9.lr.ph.new:                              ; preds = %for.body9.lr.ph
  %unroll_iter = sub nsw i64 %15, %xtraiter
  br label %for.body9

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv58 = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next59.3, %for.body ]
  %niter70 = phi i64 [ %unroll_iter69, %for.body.lr.ph.new ], [ %niter70.nsub.3, %for.body ]
  %19 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52 = getelementptr inbounds float, float* %3, i64 %indvars.iv58
  %20 = load float, float* %add.ptr.i52, align 4, !tbaa !47
  %mul = fmul fast float %20, %19
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !47
  %indvars.iv.next59 = or i64 %indvars.iv58, 1
  %21 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.1 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next59
  %22 = load float, float* %add.ptr.i52.1, align 4, !tbaa !47
  %mul.1 = fmul fast float %22, %21
  store float %mul.1, float* %add.ptr.i52.1, align 4, !tbaa !47
  %indvars.iv.next59.1 = or i64 %indvars.iv58, 2
  %23 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.2 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next59.1
  %24 = load float, float* %add.ptr.i52.2, align 4, !tbaa !47
  %mul.2 = fmul fast float %24, %23
  store float %mul.2, float* %add.ptr.i52.2, align 4, !tbaa !47
  %indvars.iv.next59.2 = or i64 %indvars.iv58, 3
  %25 = load float, float* %m_fFFTScaler, align 8, !tbaa !183
  %add.ptr.i52.3 = getelementptr inbounds float, float* %3, i64 %indvars.iv.next59.2
  %26 = load float, float* %add.ptr.i52.3, align 4, !tbaa !47
  %mul.3 = fmul fast float %26, %25
  store float %mul.3, float* %add.ptr.i52.3, align 4, !tbaa !47
  %indvars.iv.next59.3 = add nuw nsw i64 %indvars.iv58, 4
  %niter70.nsub.3 = add i64 %niter70, -4
  %niter70.ncmp.3 = icmp eq i64 %niter70.nsub.3, 0
  br i1 %niter70.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body

for.cond.cleanup8.loopexit.unr-lcssa:             ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next.3, %for.body9 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup8.loopexit, label %for.body9.epil

for.body9.epil:                                   ; preds = %for.body9.epil, %for.cond.cleanup8.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body9.epil ], [ %indvars.iv.unr, %for.cond.cleanup8.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body9.epil ], [ %xtraiter, %for.cond.cleanup8.loopexit.unr-lcssa ]
  %add.ptr.i.epil = getelementptr inbounds float, float* %14, i64 %indvars.iv.epil
  %27 = load float, float* %add.ptr.i.epil, align 4, !tbaa !47
  %arrayidx12.epil = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.epil
  %28 = load float, float* %arrayidx12.epil, align 4, !tbaa !47
  %add.epil = fadd fast float %28, %27
  store float %add.epil, float* %arrayidx12.epil, align 4, !tbaa !47
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup8.loopexit, label %for.body9.epil, !llvm.loop !286

for.cond.cleanup8.loopexit:                       ; preds = %for.body9.epil, %for.cond.cleanup8.loopexit.unr-lcssa
  %phitmp = zext i32 %13 to i64
  %phitmp65 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup.for.cond.cleanup8_crit_edge
  %29 = phi i8* [ %.pre61, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %16, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp65, %for.cond.cleanup8.loopexit ]
  %30 = load i32, i32* %m_nBlockSize, align 8, !tbaa !179
  %conv21 = zext i32 %30 to i64
  %31 = load float*, float** %_M_start.i, align 8, !tbaa !63
  %add.ptr.i49 = getelementptr inbounds float, float* %31, i64 %conv21
  %32 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %32, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_left_fxp undef, i64 %bytes_resultSample0, 0
  ret %struct.out.overlap_left_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body9.lr.ph.new ], [ %indvars.iv.next.3, %for.body9 ]
  %niter = phi i64 [ %unroll_iter, %for.body9.lr.ph.new ], [ %niter.nsub.3, %for.body9 ]
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %33 = load float, float* %add.ptr.i, align 4, !tbaa !47
  %arrayidx12 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv
  %34 = load float, float* %arrayidx12, align 4, !tbaa !47
  %add = fadd fast float %34, %33
  store float %add, float* %arrayidx12, align 4, !tbaa !47
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next
  %35 = load float, float* %add.ptr.i.1, align 4, !tbaa !47
  %arrayidx12.1 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next
  %36 = load float, float* %arrayidx12.1, align 4, !tbaa !47
  %add.1 = fadd fast float %36, %35
  store float %add.1, float* %arrayidx12.1, align 4, !tbaa !47
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %add.ptr.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.1
  %37 = load float, float* %add.ptr.i.2, align 4, !tbaa !47
  %arrayidx12.2 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next.1
  %38 = load float, float* %arrayidx12.2, align 4, !tbaa !47
  %add.2 = fadd fast float %38, %37
  store float %add.2, float* %arrayidx12.2, align 4, !tbaa !47
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %add.ptr.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.2
  %39 = load float, float* %add.ptr.i.3, align 4, !tbaa !47
  %arrayidx12.3 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next.2
  %40 = load float, float* %arrayidx12.3, align 4, !tbaa !47
  %add.3 = fadd fast float %40, %39
  store float %add.3, float* %arrayidx12.3, align 4, !tbaa !47
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond.cleanup8.loopexit.unr-lcssa, label %for.body9
}

define %struct.out.wrapperOverlap_left_fxp @wrapperOverlap_left_fxp_cloned.30(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_left_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.overlap_left_fxp @overlap_left_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.overlap_left_fxp %overlap_left_fxp_cloned.29_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %output = insertvalue %struct.out.wrapperOverlap_left_fxp undef, i64 %0, 0
  ret %struct.out.wrapperOverlap_left_fxp %output
}

define void @audioDecoding_cloned.LaunchFunction(i8* %data.addr, i8* %graphID) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %sumBF_buffer.addr = bitcast i8** %nextArg1 to i8**
  %sumBF_buffer = load i8*, i8** %sumBF_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %sumBF_buffer.addr, i64 1
  %bytes_sumBF_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_sumBF_buffer = load i8*, i8** %bytes_sumBF_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_sumBF_buffer.addr, i64 1
  %zoomer_buffer.addr = bitcast i8** %nextArg3 to i8**
  %zoomer_buffer = load i8*, i8** %zoomer_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %zoomer_buffer.addr, i64 1
  %bytes_zoomer_buffer.addr = bitcast i8** %nextArg4 to i8**
  %bytes_zoomer_buffer = load i8*, i8** %bytes_zoomer_buffer.addr
  %nextArg5 = getelementptr i8*, i8** %bytes_zoomer_buffer.addr, i64 1
  %decoder0_buffer.addr = bitcast i8** %nextArg5 to i8**
  %decoder0_buffer = load i8*, i8** %decoder0_buffer.addr
  %nextArg6 = getelementptr i8*, i8** %decoder0_buffer.addr, i64 1
  %bytes_decoder0_buffer.addr = bitcast i8** %nextArg6 to i8**
  %bytes_decoder0_buffer = load i8*, i8** %bytes_decoder0_buffer.addr
  %nextArg7 = getelementptr i8*, i8** %bytes_decoder0_buffer.addr, i64 1
  %resultSample0_buffer.addr = bitcast i8** %nextArg7 to i8**
  %resultSample0_buffer = load i8*, i8** %resultSample0_buffer.addr
  %nextArg8 = getelementptr i8*, i8** %resultSample0_buffer.addr, i64 1
  %bytes_resultSample0_buffer.addr = bitcast i8** %nextArg8 to i8**
  %bytes_resultSample0_buffer = load i8*, i8** %bytes_resultSample0_buffer.addr
  %nextArg9 = getelementptr i8*, i8** %bytes_resultSample0_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg9 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg10 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart1_buffer.addr = bitcast i8** %nextArg10 to i8**
  %channelpart1_buffer = load i8*, i8** %channelpart1_buffer.addr
  %nextArg11 = getelementptr i8*, i8** %channelpart1_buffer.addr, i64 1
  %bytes_channelpart1_buffer.addr = bitcast i8** %nextArg11 to i8**
  %bytes_channelpart1_buffer = load i8*, i8** %bytes_channelpart1_buffer.addr
  %nextArg12 = getelementptr i8*, i8** %bytes_channelpart1_buffer.addr, i64 1
  %channelpart2_buffer.addr = bitcast i8** %nextArg12 to i8**
  %channelpart2_buffer = load i8*, i8** %channelpart2_buffer.addr
  %nextArg13 = getelementptr i8*, i8** %channelpart2_buffer.addr, i64 1
  %bytes_channelpart2_buffer.addr = bitcast i8** %nextArg13 to i8**
  %bytes_channelpart2_buffer = load i8*, i8** %bytes_channelpart2_buffer.addr
  %nextArg14 = getelementptr i8*, i8** %bytes_channelpart2_buffer.addr, i64 1
  %channelpart3_buffer.addr = bitcast i8** %nextArg14 to i8**
  %channelpart3_buffer = load i8*, i8** %channelpart3_buffer.addr
  %nextArg15 = getelementptr i8*, i8** %channelpart3_buffer.addr, i64 1
  %bytes_channelpart3_buffer.addr = bitcast i8** %nextArg15 to i8**
  %bytes_channelpart3_buffer = load i8*, i8** %bytes_channelpart3_buffer.addr
  %nextArg16 = getelementptr i8*, i8** %bytes_channelpart3_buffer.addr, i64 1
  %decoder1_buffer.addr = bitcast i8** %nextArg16 to i8**
  %decoder1_buffer = load i8*, i8** %decoder1_buffer.addr
  %nextArg17 = getelementptr i8*, i8** %decoder1_buffer.addr, i64 1
  %bytes_decoder1_buffer.addr = bitcast i8** %nextArg17 to i8**
  %bytes_decoder1_buffer = load i8*, i8** %bytes_decoder1_buffer.addr
  %nextArg18 = getelementptr i8*, i8** %bytes_decoder1_buffer.addr, i64 1
  %resultSample1_buffer.addr = bitcast i8** %nextArg18 to i8**
  %resultSample1_buffer = load i8*, i8** %resultSample1_buffer.addr
  %nextArg19 = getelementptr i8*, i8** %resultSample1_buffer.addr, i64 1
  %bytes_resultSample1_buffer.addr = bitcast i8** %nextArg19 to i8**
  %bytes_resultSample1_buffer = load i8*, i8** %bytes_resultSample1_buffer.addr
  %nextArg20 = getelementptr i8*, i8** %bytes_resultSample1_buffer.addr, i64 1
  %decoder0ChannelCount_buffer.addr = bitcast i8** %nextArg20 to i8**
  %decoder0ChannelCount_buffer = load i8*, i8** %decoder0ChannelCount_buffer.addr
  %nextArg21 = getelementptr i8*, i8** %decoder0ChannelCount_buffer.addr, i64 1
  %decoder0FFTBins_buffer.addr = bitcast i8** %nextArg21 to i8**
  %decoder0FFTBins_buffer = load i8*, i8** %decoder0FFTBins_buffer.addr
  %nextArg22 = getelementptr i8*, i8** %decoder0FFTBins_buffer.addr, i64 1
  %decoder1ChannelCount_buffer.addr = bitcast i8** %nextArg22 to i8**
  %decoder1ChannelCount_buffer = load i8*, i8** %decoder1ChannelCount_buffer.addr
  %nextArg23 = getelementptr i8*, i8** %decoder1ChannelCount_buffer.addr, i64 1
  %decoder1FFTBins_buffer.addr = bitcast i8** %nextArg23 to i8**
  %decoder1FFTBins_buffer = load i8*, i8** %decoder1FFTBins_buffer.addr
  %BindIn.wrapperRotatorSet_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 0)
  %BindIn.wrapperRotatorSet_fxp_cloned24 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 1)
  %BindIn.wrapperPsychoFilter_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 0)
  %wrapperRotatorSet_fxp_cloned.wrapperPsychoFilter_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperPsychoFilter_fxp_cloned25 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 2)
  %BindIn.wrapperPsychoFilter_fxp_cloned26 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 3)
  %BindIn.wrapperPsychoFilter_fxp_cloned27 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 10)
  %BindIn.wrapperPsychoFilter_fxp_cloned28 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 11)
  %BindIn.wrapperPsychoFilter_fxp_cloned29 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 12)
  %BindIn.wrapperPsychoFilter_fxp_cloned30 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 13)
  %BindIn.wrapperPsychoFilter_fxp_cloned31 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 14)
  %BindIn.wrapperPsychoFilter_fxp_cloned32 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 15)
  %BindIn.wrapperPsychoFilter_fxp_cloned33 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 16)
  %BindIn.wrapperRotateOrder1_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 0)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperRotateOrder1_fxp_cloned34 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 10)
  %BindIn.wrapperRotateOrder1_fxp_cloned35 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 11)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned36 = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperRotateOrder2_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 0)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperRotateOrder2_fxp_cloned37 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 10)
  %BindIn.wrapperRotateOrder2_fxp_cloned38 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 13)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned39 = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperRotateOrder3_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 0)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperRotateOrder3_fxp_cloned40 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 10)
  %BindIn.wrapperRotateOrder3_fxp_cloned41 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 15)
  %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned42 = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperZoomSet_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 4)
  %BindIn.wrapperZoomSet_fxp_cloned43 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 5)
  %BindIn.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 4)
  %wrapperZoomSet_fxp_cloned.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperZoomProcess_fxp_cloned44 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 2)
  %wrapperPsychoFilter_fxp_cloned.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperZoomProcess_fxp_cloned45 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 10)
  %BindIn.wrapperZoomProcess_fxp_cloned46 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 11)
  %wrapperRotateOrder1_fxp_cloned.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperZoomProcess_fxp_cloned47 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 13)
  %wrapperRotateOrder2_fxp_cloned.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperZoomProcess_fxp_cloned48 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 15)
  %wrapperRotateOrder3_fxp_cloned.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperSetAndFFT_left_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 6)
  %BindIn.wrapperSetAndFFT_left_fxp_cloned49 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 7)
  %BindIn.wrapperSetAndFFT_left_fxp_cloned50 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 2)
  %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_left_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperSetAndFFT_right_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 17)
  %BindIn.wrapperSetAndFFT_right_fxp_cloned51 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 18)
  %BindIn.wrapperSetAndFFT_right_fxp_cloned52 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 2)
  %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_right_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperFIR_left_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 6)
  %wrapperSetAndFFT_left_fxp_cloned.wrapperFIR_left_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperFIR_left_fxp_cloned53 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 21)
  %BindIn.wrapperFIR_left_fxp_cloned54 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 22)
  %BindIn.wrapperFIR_right_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 17)
  %wrapperSetAndFFT_right_fxp_cloned.wrapperFIR_right_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperFIR_right_fxp_cloned55 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 23)
  %BindIn.wrapperFIR_right_fxp_cloned56 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 24)
  %BindIn.wrapperIFFT_left_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 6)
  %wrapperFIR_left_fxp_cloned.wrapperIFFT_left_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperIFFT_right_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 17)
  %wrapperFIR_right_fxp_cloned.wrapperIFFT_right_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperOverlap_left_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 6)
  %wrapperIFFT_left_fxp_cloned.wrapperOverlap_left_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperOverlap_left_fxp_cloned57 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 8)
  %BindIn.wrapperOverlap_left_fxp_cloned58 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 9)
  %BindIn.wrapperOverlap_right_fxp_cloned = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 17)
  %wrapperIFFT_right_fxp_cloned.wrapperOverlap_right_fxp_cloned = call i8* @llvm_hpvm_createEdgeBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.wrapperOverlap_right_fxp_cloned59 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i32 19)
  %BindIn.wrapperOverlap_right_fxp_cloned60 = call i8* @llvm_hpvm_createBindInBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i32 20)
  %BindOut.wrapperOverlap_left_fxp_cloned = call i8* @llvm_hpvm_createBindOutBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindOut.wrapperOverlap_right_fxp_cloned = call i8* @llvm_hpvm_createBindOutBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperRotatorSet_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperZoomSet_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperPsychoFilter_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperRotateOrder1_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperRotateOrder2_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperRotateOrder3_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperZoomProcess_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperSetAndFFT_left_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperSetAndFFT_right_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperFIR_left_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperFIR_right_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperIFFT_left_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperIFFT_right_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperOverlap_right_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %BindIn.isLastInput.wrapperOverlap_left_fxp_cloned = call i8* @llvm_hpvm_createLastInputBuffer(i8* %graphID, i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64))
  %wrapperRotatorSet_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperRotatorSet_fxp_cloned* getelementptr (%struct.thread.wrapperRotatorSet_fxp_cloned, %struct.thread.wrapperRotatorSet_fxp_cloned* null, i32 1) to i64))
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperRotatorSet_fxp_cloned.inputs to %struct.thread.wrapperRotatorSet_fxp_cloned*
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperRotatorSet_fxp_cloned, %struct.thread.wrapperRotatorSet_fxp_cloned* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperRotatorSet_fxp_cloned, i8** %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperRotatorSet_fxp_cloned, %struct.thread.wrapperRotatorSet_fxp_cloned* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %BindIn.wrapperRotatorSet_fxp_cloned24, i8** %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperRotatorSet_fxp_cloned, %struct.thread.wrapperRotatorSet_fxp_cloned* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %wrapperRotatorSet_fxp_cloned.wrapperPsychoFilter_fxp_cloned, i8** %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.out_0
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperRotatorSet_fxp_cloned, %struct.thread.wrapperRotatorSet_fxp_cloned* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.isLastInput.wrapperRotatorSet_fxp_cloned, i8** %wrapperRotatorSet_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperRotatorSet_fxp_cloned.inputs.i8ptr61 = bitcast %struct.thread.wrapperRotatorSet_fxp_cloned* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperRotatorSet_fxp_cloned_Pipeline, i8* %wrapperRotatorSet_fxp_cloned.inputs.i8ptr61)
  %wrapperZoomSet_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperZoomSet_fxp_cloned* getelementptr (%struct.thread.wrapperZoomSet_fxp_cloned, %struct.thread.wrapperZoomSet_fxp_cloned* null, i32 1) to i64))
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperZoomSet_fxp_cloned.inputs to %struct.thread.wrapperZoomSet_fxp_cloned*
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperZoomSet_fxp_cloned, %struct.thread.wrapperZoomSet_fxp_cloned* %wrapperZoomSet_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperZoomSet_fxp_cloned, i8** %wrapperZoomSet_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperZoomSet_fxp_cloned, %struct.thread.wrapperZoomSet_fxp_cloned* %wrapperZoomSet_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %BindIn.wrapperZoomSet_fxp_cloned43, i8** %wrapperZoomSet_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperZoomSet_fxp_cloned, %struct.thread.wrapperZoomSet_fxp_cloned* %wrapperZoomSet_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %wrapperZoomSet_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomSet_fxp_cloned.inputs.i8ptr.out_0
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperZoomSet_fxp_cloned, %struct.thread.wrapperZoomSet_fxp_cloned* %wrapperZoomSet_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.isLastInput.wrapperZoomSet_fxp_cloned, i8** %wrapperZoomSet_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperZoomSet_fxp_cloned.inputs.i8ptr62 = bitcast %struct.thread.wrapperZoomSet_fxp_cloned* %wrapperZoomSet_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperZoomSet_fxp_cloned_Pipeline, i8* %wrapperZoomSet_fxp_cloned.inputs.i8ptr62)
  %wrapperPsychoFilter_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperPsychoFilter_fxp_cloned* getelementptr (%struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* null, i32 1) to i64))
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperPsychoFilter_fxp_cloned.inputs to %struct.thread.wrapperPsychoFilter_fxp_cloned*
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperRotatorSet_fxp_cloned.wrapperPsychoFilter_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned25, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned26, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_4 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned27, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_4
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_5 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned28, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_5
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_6 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 6
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned29, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_6
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_7 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 7
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned30, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_7
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_8 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 8
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned31, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_8
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_9 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 9
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned32, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_9
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_10 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 10
  store i8* %BindIn.wrapperPsychoFilter_fxp_cloned33, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.arg_10
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 11
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_0
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_1 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 12
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_1
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_2 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 13
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_2
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_3 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 14
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_3
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_4 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 15
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned36, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_4
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_5 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 16
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned39, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_5
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_6 = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 17
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned42, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.out_6
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperPsychoFilter_fxp_cloned, %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr, i32 0, i32 18
  store i8* %BindIn.isLastInput.wrapperPsychoFilter_fxp_cloned, i8** %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr63 = bitcast %struct.thread.wrapperPsychoFilter_fxp_cloned* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperPsychoFilter_fxp_cloned_Pipeline, i8* %wrapperPsychoFilter_fxp_cloned.inputs.i8ptr63)
  %wrapperRotateOrder1_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperRotateOrder1_fxp_cloned* getelementptr (%struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* null, i32 1) to i64))
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperRotateOrder1_fxp_cloned.inputs to %struct.thread.wrapperRotateOrder1_fxp_cloned*
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperRotateOrder1_fxp_cloned, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperRotateOrder1_fxp_cloned34, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperRotateOrder1_fxp_cloned35, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_4 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder1_fxp_cloned36, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.arg_4
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %wrapperRotateOrder1_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.out_0
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperRotateOrder1_fxp_cloned, %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr, i32 0, i32 6
  store i8* %BindIn.isLastInput.wrapperRotateOrder1_fxp_cloned, i8** %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr64 = bitcast %struct.thread.wrapperRotateOrder1_fxp_cloned* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperRotateOrder1_fxp_cloned_Pipeline, i8* %wrapperRotateOrder1_fxp_cloned.inputs.i8ptr64)
  %wrapperRotateOrder2_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperRotateOrder2_fxp_cloned* getelementptr (%struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* null, i32 1) to i64))
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperRotateOrder2_fxp_cloned.inputs to %struct.thread.wrapperRotateOrder2_fxp_cloned*
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperRotateOrder2_fxp_cloned, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperRotateOrder2_fxp_cloned37, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperRotateOrder2_fxp_cloned38, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_4 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder2_fxp_cloned39, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.arg_4
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %wrapperRotateOrder2_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.out_0
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperRotateOrder2_fxp_cloned, %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr, i32 0, i32 6
  store i8* %BindIn.isLastInput.wrapperRotateOrder2_fxp_cloned, i8** %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr65 = bitcast %struct.thread.wrapperRotateOrder2_fxp_cloned* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperRotateOrder2_fxp_cloned_Pipeline, i8* %wrapperRotateOrder2_fxp_cloned.inputs.i8ptr65)
  %wrapperRotateOrder3_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperRotateOrder3_fxp_cloned* getelementptr (%struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* null, i32 1) to i64))
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperRotateOrder3_fxp_cloned.inputs to %struct.thread.wrapperRotateOrder3_fxp_cloned*
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperRotateOrder3_fxp_cloned, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperRotateOrder3_fxp_cloned40, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperRotateOrder3_fxp_cloned41, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_4 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperRotateOrder3_fxp_cloned42, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.arg_4
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %wrapperRotateOrder3_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.out_0
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperRotateOrder3_fxp_cloned, %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr, i32 0, i32 6
  store i8* %BindIn.isLastInput.wrapperRotateOrder3_fxp_cloned, i8** %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr66 = bitcast %struct.thread.wrapperRotateOrder3_fxp_cloned* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperRotateOrder3_fxp_cloned_Pipeline, i8* %wrapperRotateOrder3_fxp_cloned.inputs.i8ptr66)
  %wrapperZoomProcess_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperZoomProcess_fxp_cloned* getelementptr (%struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* null, i32 1) to i64))
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperZoomProcess_fxp_cloned.inputs to %struct.thread.wrapperZoomProcess_fxp_cloned*
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperZoomSet_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned44, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %wrapperPsychoFilter_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_4 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned45, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_4
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_5 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned46, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_5
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_6 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 6
  store i8* %wrapperRotateOrder1_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_6
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_7 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 7
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned47, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_7
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_8 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 8
  store i8* %wrapperRotateOrder2_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_8
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_9 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 9
  store i8* %BindIn.wrapperZoomProcess_fxp_cloned48, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_9
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_10 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 10
  store i8* %wrapperRotateOrder3_fxp_cloned.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.arg_10
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 11
  store i8* %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_left_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.out_0
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.out_1 = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 12
  store i8* %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_right_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.out_1
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperZoomProcess_fxp_cloned, %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr, i32 0, i32 13
  store i8* %BindIn.isLastInput.wrapperZoomProcess_fxp_cloned, i8** %wrapperZoomProcess_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperZoomProcess_fxp_cloned.inputs.i8ptr67 = bitcast %struct.thread.wrapperZoomProcess_fxp_cloned* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperZoomProcess_fxp_cloned_Pipeline, i8* %wrapperZoomProcess_fxp_cloned.inputs.i8ptr67)
  %wrapperSetAndFFT_left_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperSetAndFFT_left_fxp_cloned* getelementptr (%struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* null, i32 1) to i64))
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperSetAndFFT_left_fxp_cloned.inputs to %struct.thread.wrapperSetAndFFT_left_fxp_cloned*
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperSetAndFFT_left_fxp_cloned, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %BindIn.wrapperSetAndFFT_left_fxp_cloned49, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperSetAndFFT_left_fxp_cloned50, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_left_fxp_cloned, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperSetAndFFT_left_fxp_cloned.wrapperFIR_left_fxp_cloned, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.out_0
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperSetAndFFT_left_fxp_cloned, %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperSetAndFFT_left_fxp_cloned, i8** %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr68 = bitcast %struct.thread.wrapperSetAndFFT_left_fxp_cloned* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperSetAndFFT_left_fxp_cloned_Pipeline, i8* %wrapperSetAndFFT_left_fxp_cloned.inputs.i8ptr68)
  %wrapperSetAndFFT_right_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperSetAndFFT_right_fxp_cloned* getelementptr (%struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* null, i32 1) to i64))
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperSetAndFFT_right_fxp_cloned.inputs to %struct.thread.wrapperSetAndFFT_right_fxp_cloned*
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperSetAndFFT_right_fxp_cloned, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %BindIn.wrapperSetAndFFT_right_fxp_cloned51, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperSetAndFFT_right_fxp_cloned52, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %wrapperZoomProcess_fxp_cloned.wrapperSetAndFFT_right_fxp_cloned, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperSetAndFFT_right_fxp_cloned.wrapperFIR_right_fxp_cloned, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.out_0
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperSetAndFFT_right_fxp_cloned, %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperSetAndFFT_right_fxp_cloned, i8** %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr69 = bitcast %struct.thread.wrapperSetAndFFT_right_fxp_cloned* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperSetAndFFT_right_fxp_cloned_Pipeline, i8* %wrapperSetAndFFT_right_fxp_cloned.inputs.i8ptr69)
  %wrapperFIR_left_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperFIR_left_fxp_cloned* getelementptr (%struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* null, i32 1) to i64))
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperFIR_left_fxp_cloned.inputs to %struct.thread.wrapperFIR_left_fxp_cloned*
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperFIR_left_fxp_cloned, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperSetAndFFT_left_fxp_cloned.wrapperFIR_left_fxp_cloned, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperFIR_left_fxp_cloned53, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperFIR_left_fxp_cloned54, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperFIR_left_fxp_cloned.wrapperIFFT_left_fxp_cloned, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.out_0
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperFIR_left_fxp_cloned, %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperFIR_left_fxp_cloned, i8** %wrapperFIR_left_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperFIR_left_fxp_cloned.inputs.i8ptr70 = bitcast %struct.thread.wrapperFIR_left_fxp_cloned* %wrapperFIR_left_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperFIR_left_fxp_cloned_Pipeline, i8* %wrapperFIR_left_fxp_cloned.inputs.i8ptr70)
  %wrapperFIR_right_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperFIR_right_fxp_cloned* getelementptr (%struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* null, i32 1) to i64))
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperFIR_right_fxp_cloned.inputs to %struct.thread.wrapperFIR_right_fxp_cloned*
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperFIR_right_fxp_cloned, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperSetAndFFT_right_fxp_cloned.wrapperFIR_right_fxp_cloned, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperFIR_right_fxp_cloned55, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperFIR_right_fxp_cloned56, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %wrapperFIR_right_fxp_cloned.wrapperIFFT_right_fxp_cloned, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.out_0
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperFIR_right_fxp_cloned, %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperFIR_right_fxp_cloned, i8** %wrapperFIR_right_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperFIR_right_fxp_cloned.inputs.i8ptr71 = bitcast %struct.thread.wrapperFIR_right_fxp_cloned* %wrapperFIR_right_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperFIR_right_fxp_cloned_Pipeline, i8* %wrapperFIR_right_fxp_cloned.inputs.i8ptr71)
  %wrapperIFFT_left_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperIFFT_left_fxp_cloned* getelementptr (%struct.thread.wrapperIFFT_left_fxp_cloned, %struct.thread.wrapperIFFT_left_fxp_cloned* null, i32 1) to i64))
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperIFFT_left_fxp_cloned.inputs to %struct.thread.wrapperIFFT_left_fxp_cloned*
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperIFFT_left_fxp_cloned, %struct.thread.wrapperIFFT_left_fxp_cloned* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperIFFT_left_fxp_cloned, i8** %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperIFFT_left_fxp_cloned, %struct.thread.wrapperIFFT_left_fxp_cloned* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperFIR_left_fxp_cloned.wrapperIFFT_left_fxp_cloned, i8** %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperIFFT_left_fxp_cloned, %struct.thread.wrapperIFFT_left_fxp_cloned* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %wrapperIFFT_left_fxp_cloned.wrapperOverlap_left_fxp_cloned, i8** %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.out_0
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperIFFT_left_fxp_cloned, %struct.thread.wrapperIFFT_left_fxp_cloned* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.isLastInput.wrapperIFFT_left_fxp_cloned, i8** %wrapperIFFT_left_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperIFFT_left_fxp_cloned.inputs.i8ptr72 = bitcast %struct.thread.wrapperIFFT_left_fxp_cloned* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperIFFT_left_fxp_cloned_Pipeline, i8* %wrapperIFFT_left_fxp_cloned.inputs.i8ptr72)
  %wrapperIFFT_right_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperIFFT_right_fxp_cloned* getelementptr (%struct.thread.wrapperIFFT_right_fxp_cloned, %struct.thread.wrapperIFFT_right_fxp_cloned* null, i32 1) to i64))
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperIFFT_right_fxp_cloned.inputs to %struct.thread.wrapperIFFT_right_fxp_cloned*
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperIFFT_right_fxp_cloned, %struct.thread.wrapperIFFT_right_fxp_cloned* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperIFFT_right_fxp_cloned, i8** %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperIFFT_right_fxp_cloned, %struct.thread.wrapperIFFT_right_fxp_cloned* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperFIR_right_fxp_cloned.wrapperIFFT_right_fxp_cloned, i8** %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperIFFT_right_fxp_cloned, %struct.thread.wrapperIFFT_right_fxp_cloned* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %wrapperIFFT_right_fxp_cloned.wrapperOverlap_right_fxp_cloned, i8** %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.out_0
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperIFFT_right_fxp_cloned, %struct.thread.wrapperIFFT_right_fxp_cloned* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.isLastInput.wrapperIFFT_right_fxp_cloned, i8** %wrapperIFFT_right_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperIFFT_right_fxp_cloned.inputs.i8ptr73 = bitcast %struct.thread.wrapperIFFT_right_fxp_cloned* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperIFFT_right_fxp_cloned_Pipeline, i8* %wrapperIFFT_right_fxp_cloned.inputs.i8ptr73)
  %wrapperOverlap_right_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperOverlap_right_fxp_cloned* getelementptr (%struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* null, i32 1) to i64))
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperOverlap_right_fxp_cloned.inputs to %struct.thread.wrapperOverlap_right_fxp_cloned*
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperOverlap_right_fxp_cloned, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperIFFT_right_fxp_cloned.wrapperOverlap_right_fxp_cloned, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperOverlap_right_fxp_cloned59, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperOverlap_right_fxp_cloned60, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %BindOut.wrapperOverlap_right_fxp_cloned, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.out_0
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperOverlap_right_fxp_cloned, %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperOverlap_right_fxp_cloned, i8** %wrapperOverlap_right_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperOverlap_right_fxp_cloned.inputs.i8ptr74 = bitcast %struct.thread.wrapperOverlap_right_fxp_cloned* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperOverlap_right_fxp_cloned_Pipeline, i8* %wrapperOverlap_right_fxp_cloned.inputs.i8ptr74)
  %wrapperOverlap_left_fxp_cloned.inputs = call i8* @malloc(i64 ptrtoint (%struct.thread.wrapperOverlap_left_fxp_cloned* getelementptr (%struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* null, i32 1) to i64))
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr = bitcast i8* %wrapperOverlap_left_fxp_cloned.inputs to %struct.thread.wrapperOverlap_left_fxp_cloned*
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_0 = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 0
  store i8* %BindIn.wrapperOverlap_left_fxp_cloned, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_0
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_1 = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 1
  store i8* %wrapperIFFT_left_fxp_cloned.wrapperOverlap_left_fxp_cloned, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_1
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_2 = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 2
  store i8* %BindIn.wrapperOverlap_left_fxp_cloned57, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_2
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_3 = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 3
  store i8* %BindIn.wrapperOverlap_left_fxp_cloned58, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.arg_3
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.out_0 = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 4
  store i8* %BindOut.wrapperOverlap_left_fxp_cloned, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.out_0
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.isLastInput = getelementptr %struct.thread.wrapperOverlap_left_fxp_cloned, %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr, i32 0, i32 5
  store i8* %BindIn.isLastInput.wrapperOverlap_left_fxp_cloned, i8** %wrapperOverlap_left_fxp_cloned.inputs.i8ptr.isLastInput
  %wrapperOverlap_left_fxp_cloned.inputs.i8ptr75 = bitcast %struct.thread.wrapperOverlap_left_fxp_cloned* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr to i8*
  call void @llvm_hpvm_createThread(i8* %graphID, i8* (i8*)* @wrapperOverlap_left_fxp_cloned_Pipeline, i8* %wrapperOverlap_left_fxp_cloned.inputs.i8ptr75)
  ret void
}

define i8* @wrapperRotatorSet_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg1 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg2 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg2 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %rotator_buffer)
  %rotator.addr = inttoptr i64 %1 to %class.CAmbisonicProcessor*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_rotator_buffer)
  %bytes_rotator.addr = bitcast i64 %2 to i64
  %wrapperRotatorSet_fxp_cloned.2.output = call %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned.2(%class.CAmbisonicProcessor* %rotator.addr, i64 %bytes_rotator.addr)
  %3 = extractvalue %struct.out.wrapperRotatorSet_fxp %wrapperRotatorSet_fxp_cloned.2.output, 0
  %4 = bitcast i64 %3 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %4)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperZoomSet_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %zoomer_buffer.addr = bitcast i8* %data.addr to i8**
  %zoomer_buffer = load i8*, i8** %zoomer_buffer.addr
  %nextArg = getelementptr i8*, i8** %zoomer_buffer.addr, i64 1
  %bytes_zoomer_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_zoomer_buffer = load i8*, i8** %bytes_zoomer_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_zoomer_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg1 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg2 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg2 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %zoomer_buffer)
  %zoomer.addr = inttoptr i64 %1 to %class.CAmbisonicZoomer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_zoomer_buffer)
  %bytes_zoomer.addr = bitcast i64 %2 to i64
  %wrapperZoomSet_fxp_cloned.4.output = call %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned.4(%class.CAmbisonicZoomer* %zoomer.addr, i64 %bytes_zoomer.addr)
  %3 = extractvalue %struct.out.wrapperZoomSet_fxp %wrapperZoomSet_fxp_cloned.4.output, 0
  %4 = bitcast i64 %3 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %4)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperPsychoFilter_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %sumBF_buffer.addr = bitcast i8** %nextArg1 to i8**
  %sumBF_buffer = load i8*, i8** %sumBF_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %sumBF_buffer.addr, i64 1
  %bytes_sumBF_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_sumBF_buffer = load i8*, i8** %bytes_sumBF_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_sumBF_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg3 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart1_buffer.addr = bitcast i8** %nextArg4 to i8**
  %channelpart1_buffer = load i8*, i8** %channelpart1_buffer.addr
  %nextArg5 = getelementptr i8*, i8** %channelpart1_buffer.addr, i64 1
  %bytes_channelpart1_buffer.addr = bitcast i8** %nextArg5 to i8**
  %bytes_channelpart1_buffer = load i8*, i8** %bytes_channelpart1_buffer.addr
  %nextArg6 = getelementptr i8*, i8** %bytes_channelpart1_buffer.addr, i64 1
  %channelpart2_buffer.addr = bitcast i8** %nextArg6 to i8**
  %channelpart2_buffer = load i8*, i8** %channelpart2_buffer.addr
  %nextArg7 = getelementptr i8*, i8** %channelpart2_buffer.addr, i64 1
  %bytes_channelpart2_buffer.addr = bitcast i8** %nextArg7 to i8**
  %bytes_channelpart2_buffer = load i8*, i8** %bytes_channelpart2_buffer.addr
  %nextArg8 = getelementptr i8*, i8** %bytes_channelpart2_buffer.addr, i64 1
  %channelpart3_buffer.addr = bitcast i8** %nextArg8 to i8**
  %channelpart3_buffer = load i8*, i8** %channelpart3_buffer.addr
  %nextArg9 = getelementptr i8*, i8** %channelpart3_buffer.addr, i64 1
  %bytes_channelpart3_buffer.addr = bitcast i8** %nextArg9 to i8**
  %bytes_channelpart3_buffer = load i8*, i8** %bytes_channelpart3_buffer.addr
  %nextArg10 = getelementptr i8*, i8** %bytes_channelpart3_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg10 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg11 = getelementptr i8*, i8** %out.addr, i64 1
  %out.addr12 = bitcast i8** %nextArg11 to i8**
  %out13 = load i8*, i8** %out.addr12
  %nextArg14 = getelementptr i8*, i8** %out.addr12, i64 1
  %out.addr15 = bitcast i8** %nextArg14 to i8**
  %out16 = load i8*, i8** %out.addr15
  %nextArg17 = getelementptr i8*, i8** %out.addr15, i64 1
  %out.addr18 = bitcast i8** %nextArg17 to i8**
  %out19 = load i8*, i8** %out.addr18
  %nextArg20 = getelementptr i8*, i8** %out.addr18, i64 1
  %out.addr21 = bitcast i8** %nextArg20 to i8**
  %out22 = load i8*, i8** %out.addr21
  %nextArg23 = getelementptr i8*, i8** %out.addr21, i64 1
  %out.addr24 = bitcast i8** %nextArg23 to i8**
  %out25 = load i8*, i8** %out.addr24
  %nextArg26 = getelementptr i8*, i8** %out.addr24, i64 1
  %out.addr27 = bitcast i8** %nextArg26 to i8**
  %out28 = load i8*, i8** %out.addr27
  %nextArg29 = getelementptr i8*, i8** %out.addr27, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg29 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %rotator_buffer)
  %rotator.addr = inttoptr i64 %1 to %class.CAmbisonicProcessor*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_rotator_buffer)
  %bytes_rotator.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %sumBF_buffer)
  %sumBF.addr = inttoptr i64 %3 to %class.CBFormat*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_sumBF_buffer)
  %bytes_sumBF.addr = bitcast i64 %4 to i64
  %5 = call i64 @llvm_hpvm_bufferPop(i8* %nSample_buffer)
  %nSample.addr = bitcast i64 %5 to i64
  %6 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart1_buffer)
  %channelpart1.addr = inttoptr i64 %6 to float**
  %7 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart1_buffer)
  %bytes_channelpart1.addr = bitcast i64 %7 to i64
  %8 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart2_buffer)
  %channelpart2.addr = inttoptr i64 %8 to float**
  %9 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart2_buffer)
  %bytes_channelpart2.addr = bitcast i64 %9 to i64
  %10 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart3_buffer)
  %channelpart3.addr = inttoptr i64 %10 to float**
  %11 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart3_buffer)
  %bytes_channelpart3.addr = bitcast i64 %11 to i64
  %wrapperPsychoFilter_fxp_cloned.6.output = call %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned.6(%class.CAmbisonicProcessor* %rotator.addr, i64 %bytes_rotator.addr, %class.CBFormat* %sumBF.addr, i64 %bytes_sumBF.addr, i64 %nSample.addr, float** %channelpart1.addr, i64 %bytes_channelpart1.addr, float** %channelpart2.addr, i64 %bytes_channelpart2.addr, float** %channelpart3.addr, i64 %bytes_channelpart3.addr)
  %12 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 0
  %13 = bitcast i64 %12 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %13)
  %14 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 1
  %15 = bitcast i64 %14 to i64
  call void @llvm_hpvm_bufferPush(i8* %out13, i64 %15)
  %16 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 2
  %17 = bitcast i64 %16 to i64
  call void @llvm_hpvm_bufferPush(i8* %out16, i64 %17)
  %18 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 3
  %19 = bitcast i64 %18 to i64
  call void @llvm_hpvm_bufferPush(i8* %out19, i64 %19)
  %20 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 4
  %21 = bitcast i64 %20 to i64
  call void @llvm_hpvm_bufferPush(i8* %out22, i64 %21)
  %22 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 5
  %23 = bitcast i64 %22 to i64
  call void @llvm_hpvm_bufferPush(i8* %out25, i64 %23)
  %24 = extractvalue %struct.out.wrapperPsychoFilter_fxp %wrapperPsychoFilter_fxp_cloned.6.output, 6
  %25 = bitcast i64 %24 to i64
  call void @llvm_hpvm_bufferPush(i8* %out28, i64 %25)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperRotateOrder1_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg1 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart1_buffer.addr = bitcast i8** %nextArg2 to i8**
  %channelpart1_buffer = load i8*, i8** %channelpart1_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %channelpart1_buffer.addr, i64 1
  %bytes_channelpart1_buffer.addr = bitcast i8** %nextArg3 to i8**
  %bytes_channelpart1_buffer = load i8*, i8** %bytes_channelpart1_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %bytes_channelpart1_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg4 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg5 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg5 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %rotator_buffer)
  %rotator.addr = inttoptr i64 %1 to %class.CAmbisonicProcessor*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_rotator_buffer)
  %bytes_rotator.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %nSample_buffer)
  %nSample.addr = bitcast i64 %3 to i64
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart1_buffer)
  %channelpart1.addr = inttoptr i64 %4 to float**
  %5 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart1_buffer)
  %bytes_channelpart1.addr = bitcast i64 %5 to i64
  %wrapperRotateOrder1_fxp_cloned.8.output = call %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned.8(%class.CAmbisonicProcessor* %rotator.addr, i64 %bytes_rotator.addr, i64 %nSample.addr, float** %channelpart1.addr, i64 %bytes_channelpart1.addr)
  %6 = extractvalue %struct.out.wrapperRotateOrder1_fxp %wrapperRotateOrder1_fxp_cloned.8.output, 0
  %7 = bitcast i64 %6 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %7)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperRotateOrder2_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg1 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart2_buffer.addr = bitcast i8** %nextArg2 to i8**
  %channelpart2_buffer = load i8*, i8** %channelpart2_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %channelpart2_buffer.addr, i64 1
  %bytes_channelpart2_buffer.addr = bitcast i8** %nextArg3 to i8**
  %bytes_channelpart2_buffer = load i8*, i8** %bytes_channelpart2_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %bytes_channelpart2_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg4 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg5 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg5 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %rotator_buffer)
  %rotator.addr = inttoptr i64 %1 to %class.CAmbisonicProcessor*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_rotator_buffer)
  %bytes_rotator.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %nSample_buffer)
  %nSample.addr = bitcast i64 %3 to i64
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart2_buffer)
  %channelpart2.addr = inttoptr i64 %4 to float**
  %5 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart2_buffer)
  %bytes_channelpart2.addr = bitcast i64 %5 to i64
  %wrapperRotateOrder2_fxp_cloned.10.output = call %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned.10(%class.CAmbisonicProcessor* %rotator.addr, i64 %bytes_rotator.addr, i64 %nSample.addr, float** %channelpart2.addr, i64 %bytes_channelpart2.addr)
  %6 = extractvalue %struct.out.wrapperRotateOrder2_fxp %wrapperRotateOrder2_fxp_cloned.10.output, 0
  %7 = bitcast i64 %6 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %7)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperRotateOrder3_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %rotator_buffer.addr = bitcast i8* %data.addr to i8**
  %rotator_buffer = load i8*, i8** %rotator_buffer.addr
  %nextArg = getelementptr i8*, i8** %rotator_buffer.addr, i64 1
  %bytes_rotator_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_rotator_buffer = load i8*, i8** %bytes_rotator_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_rotator_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg1 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart3_buffer.addr = bitcast i8** %nextArg2 to i8**
  %channelpart3_buffer = load i8*, i8** %channelpart3_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %channelpart3_buffer.addr, i64 1
  %bytes_channelpart3_buffer.addr = bitcast i8** %nextArg3 to i8**
  %bytes_channelpart3_buffer = load i8*, i8** %bytes_channelpart3_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %bytes_channelpart3_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg4 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg5 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg5 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %rotator_buffer)
  %rotator.addr = inttoptr i64 %1 to %class.CAmbisonicProcessor*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_rotator_buffer)
  %bytes_rotator.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %nSample_buffer)
  %nSample.addr = bitcast i64 %3 to i64
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart3_buffer)
  %channelpart3.addr = inttoptr i64 %4 to float**
  %5 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart3_buffer)
  %bytes_channelpart3.addr = bitcast i64 %5 to i64
  %wrapperRotateOrder3_fxp_cloned.12.output = call %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned.12(%class.CAmbisonicProcessor* %rotator.addr, i64 %bytes_rotator.addr, i64 %nSample.addr, float** %channelpart3.addr, i64 %bytes_channelpart3.addr)
  %6 = extractvalue %struct.out.wrapperRotateOrder3_fxp %wrapperRotateOrder3_fxp_cloned.12.output, 0
  %7 = bitcast i64 %6 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %7)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperZoomProcess_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %zoomer_buffer.addr = bitcast i8* %data.addr to i8**
  %zoomer_buffer = load i8*, i8** %zoomer_buffer.addr
  %nextArg = getelementptr i8*, i8** %zoomer_buffer.addr, i64 1
  %bytes_zoomer_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_zoomer_buffer = load i8*, i8** %bytes_zoomer_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_zoomer_buffer.addr, i64 1
  %sumBF_buffer.addr = bitcast i8** %nextArg1 to i8**
  %sumBF_buffer = load i8*, i8** %sumBF_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %sumBF_buffer.addr, i64 1
  %bytes_sumBF_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_sumBF_buffer = load i8*, i8** %bytes_sumBF_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_sumBF_buffer.addr, i64 1
  %nSample_buffer.addr = bitcast i8** %nextArg3 to i8**
  %nSample_buffer = load i8*, i8** %nSample_buffer.addr
  %nextArg4 = getelementptr i8*, i8** %nSample_buffer.addr, i64 1
  %channelpart1_buffer.addr = bitcast i8** %nextArg4 to i8**
  %channelpart1_buffer = load i8*, i8** %channelpart1_buffer.addr
  %nextArg5 = getelementptr i8*, i8** %channelpart1_buffer.addr, i64 1
  %bytes_channelpart1_buffer.addr = bitcast i8** %nextArg5 to i8**
  %bytes_channelpart1_buffer = load i8*, i8** %bytes_channelpart1_buffer.addr
  %nextArg6 = getelementptr i8*, i8** %bytes_channelpart1_buffer.addr, i64 1
  %channelpart2_buffer.addr = bitcast i8** %nextArg6 to i8**
  %channelpart2_buffer = load i8*, i8** %channelpart2_buffer.addr
  %nextArg7 = getelementptr i8*, i8** %channelpart2_buffer.addr, i64 1
  %bytes_channelpart2_buffer.addr = bitcast i8** %nextArg7 to i8**
  %bytes_channelpart2_buffer = load i8*, i8** %bytes_channelpart2_buffer.addr
  %nextArg8 = getelementptr i8*, i8** %bytes_channelpart2_buffer.addr, i64 1
  %channelpart3_buffer.addr = bitcast i8** %nextArg8 to i8**
  %channelpart3_buffer = load i8*, i8** %channelpart3_buffer.addr
  %nextArg9 = getelementptr i8*, i8** %channelpart3_buffer.addr, i64 1
  %bytes_channelpart3_buffer.addr = bitcast i8** %nextArg9 to i8**
  %bytes_channelpart3_buffer = load i8*, i8** %bytes_channelpart3_buffer.addr
  %nextArg10 = getelementptr i8*, i8** %bytes_channelpart3_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg10 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg11 = getelementptr i8*, i8** %out.addr, i64 1
  %out.addr12 = bitcast i8** %nextArg11 to i8**
  %out13 = load i8*, i8** %out.addr12
  %nextArg14 = getelementptr i8*, i8** %out.addr12, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg14 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %zoomer_buffer)
  %zoomer.addr = inttoptr i64 %1 to %class.CAmbisonicZoomer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_zoomer_buffer)
  %bytes_zoomer.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %sumBF_buffer)
  %sumBF.addr = inttoptr i64 %3 to %class.CBFormat*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_sumBF_buffer)
  %bytes_sumBF.addr = bitcast i64 %4 to i64
  %5 = call i64 @llvm_hpvm_bufferPop(i8* %nSample_buffer)
  %nSample.addr = bitcast i64 %5 to i64
  %6 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart1_buffer)
  %channelpart1.addr = inttoptr i64 %6 to float**
  %7 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart1_buffer)
  %bytes_channelpart1.addr = bitcast i64 %7 to i64
  %8 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart2_buffer)
  %channelpart2.addr = inttoptr i64 %8 to float**
  %9 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart2_buffer)
  %bytes_channelpart2.addr = bitcast i64 %9 to i64
  %10 = call i64 @llvm_hpvm_bufferPop(i8* %channelpart3_buffer)
  %channelpart3.addr = inttoptr i64 %10 to float**
  %11 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_channelpart3_buffer)
  %bytes_channelpart3.addr = bitcast i64 %11 to i64
  %wrapperZoomProcess_fxp_cloned.14.output = call %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned.14(%class.CAmbisonicZoomer* %zoomer.addr, i64 %bytes_zoomer.addr, %class.CBFormat* %sumBF.addr, i64 %bytes_sumBF.addr, i64 %nSample.addr, float** %channelpart1.addr, i64 %bytes_channelpart1.addr, float** %channelpart2.addr, i64 %bytes_channelpart2.addr, float** %channelpart3.addr, i64 %bytes_channelpart3.addr)
  %12 = extractvalue %struct.out.wrapperZoomProcess_fxp %wrapperZoomProcess_fxp_cloned.14.output, 0
  %13 = bitcast i64 %12 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %13)
  %14 = extractvalue %struct.out.wrapperZoomProcess_fxp %wrapperZoomProcess_fxp_cloned.14.output, 1
  %15 = bitcast i64 %14 to i64
  call void @llvm_hpvm_bufferPush(i8* %out13, i64 %15)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperSetAndFFT_left_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %sumBF_buffer.addr = bitcast i8** %nextArg1 to i8**
  %sumBF_buffer = load i8*, i8** %sumBF_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %sumBF_buffer.addr, i64 1
  %bytes_sumBF_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_sumBF_buffer = load i8*, i8** %bytes_sumBF_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_sumBF_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %sumBF_buffer)
  %sumBF.addr = inttoptr i64 %3 to %class.CBFormat*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_sumBF_buffer)
  %bytes_sumBF.addr = bitcast i64 %4 to i64
  %wrapperSetAndFFT_left_fxp_cloned.16.output = call %struct.out.wrapperSetAndFFT_left_fxp @wrapperSetAndFFT_left_fxp_cloned.16(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, %class.CBFormat* %sumBF.addr, i64 %bytes_sumBF.addr)
  %5 = extractvalue %struct.out.wrapperSetAndFFT_left_fxp %wrapperSetAndFFT_left_fxp_cloned.16.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperSetAndFFT_right_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %sumBF_buffer.addr = bitcast i8** %nextArg1 to i8**
  %sumBF_buffer = load i8*, i8** %sumBF_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %sumBF_buffer.addr, i64 1
  %bytes_sumBF_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_sumBF_buffer = load i8*, i8** %bytes_sumBF_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_sumBF_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %sumBF_buffer)
  %sumBF.addr = inttoptr i64 %3 to %class.CBFormat*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_sumBF_buffer)
  %bytes_sumBF.addr = bitcast i64 %4 to i64
  %wrapperSetAndFFT_right_fxp_cloned.18.output = call %struct.out.wrapperSetAndFFT_right_fxp @wrapperSetAndFFT_right_fxp_cloned.18(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, %class.CBFormat* %sumBF.addr, i64 %bytes_sumBF.addr)
  %5 = extractvalue %struct.out.wrapperSetAndFFT_right_fxp %wrapperSetAndFFT_right_fxp_cloned.18.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperFIR_left_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %decoder0ChannelCount_buffer.addr = bitcast i8** %nextArg1 to i8**
  %decoder0ChannelCount_buffer = load i8*, i8** %decoder0ChannelCount_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %decoder0ChannelCount_buffer.addr, i64 1
  %decoder0FFTBins_buffer.addr = bitcast i8** %nextArg2 to i8**
  %decoder0FFTBins_buffer = load i8*, i8** %decoder0FFTBins_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %decoder0FFTBins_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %decoder0ChannelCount_buffer)
  %decoder0ChannelCount.addr = bitcast i64 %3 to i64
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %decoder0FFTBins_buffer)
  %decoder0FFTBins.addr = bitcast i64 %4 to i64
  %wrapperFIR_left_fxp_cloned.20.output = call %struct.out.wrapperFIR_left_fxp @wrapperFIR_left_fxp_cloned.20(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, i64 %decoder0ChannelCount.addr, i64 %decoder0FFTBins.addr)
  %5 = extractvalue %struct.out.wrapperFIR_left_fxp %wrapperFIR_left_fxp_cloned.20.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperFIR_right_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %decoder1ChannelCount_buffer.addr = bitcast i8** %nextArg1 to i8**
  %decoder1ChannelCount_buffer = load i8*, i8** %decoder1ChannelCount_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %decoder1ChannelCount_buffer.addr, i64 1
  %decoder1FFTBins_buffer.addr = bitcast i8** %nextArg2 to i8**
  %decoder1FFTBins_buffer = load i8*, i8** %decoder1FFTBins_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %decoder1FFTBins_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %decoder1ChannelCount_buffer)
  %decoder1ChannelCount.addr = bitcast i64 %3 to i64
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %decoder1FFTBins_buffer)
  %decoder1FFTBins.addr = bitcast i64 %4 to i64
  %wrapperFIR_right_fxp_cloned.22.output = call %struct.out.wrapperFIR_right_fxp @wrapperFIR_right_fxp_cloned.22(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, i64 %decoder1ChannelCount.addr, i64 %decoder1FFTBins.addr)
  %5 = extractvalue %struct.out.wrapperFIR_right_fxp %wrapperFIR_right_fxp_cloned.22.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperIFFT_left_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg1 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg2 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg2 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %wrapperIFFT_left_fxp_cloned.24.output = call %struct.out.wrapperIFFT_left_fxp @wrapperIFFT_left_fxp_cloned.24(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr)
  %3 = extractvalue %struct.out.wrapperIFFT_left_fxp %wrapperIFFT_left_fxp_cloned.24.output, 0
  %4 = bitcast i64 %3 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %4)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperIFFT_right_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg1 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg2 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg2 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %wrapperIFFT_right_fxp_cloned.26.output = call %struct.out.wrapperIFFT_right_fxp @wrapperIFFT_right_fxp_cloned.26(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr)
  %3 = extractvalue %struct.out.wrapperIFFT_right_fxp %wrapperIFFT_right_fxp_cloned.26.output, 0
  %4 = bitcast i64 %3 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %4)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperOverlap_right_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %resultSample1_buffer.addr = bitcast i8** %nextArg1 to i8**
  %resultSample1_buffer = load i8*, i8** %resultSample1_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %resultSample1_buffer.addr, i64 1
  %bytes_resultSample1_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_resultSample1_buffer = load i8*, i8** %bytes_resultSample1_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_resultSample1_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %resultSample1_buffer)
  %resultSample1.addr = inttoptr i64 %3 to float*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_resultSample1_buffer)
  %bytes_resultSample1.addr = bitcast i64 %4 to i64
  %wrapperOverlap_right_fxp_cloned.28.output = call %struct.out.wrapperOverlap_right_fxp @wrapperOverlap_right_fxp_cloned.28(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, float* %resultSample1.addr, i64 %bytes_resultSample1.addr)
  %5 = extractvalue %struct.out.wrapperOverlap_right_fxp %wrapperOverlap_right_fxp_cloned.28.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

define i8* @wrapperOverlap_left_fxp_cloned_Pipeline(i8* %data.addr) {
entry:
  %decoder_buffer.addr = bitcast i8* %data.addr to i8**
  %decoder_buffer = load i8*, i8** %decoder_buffer.addr
  %nextArg = getelementptr i8*, i8** %decoder_buffer.addr, i64 1
  %bytes_decoder_buffer.addr = bitcast i8** %nextArg to i8**
  %bytes_decoder_buffer = load i8*, i8** %bytes_decoder_buffer.addr
  %nextArg1 = getelementptr i8*, i8** %bytes_decoder_buffer.addr, i64 1
  %resultSample0_buffer.addr = bitcast i8** %nextArg1 to i8**
  %resultSample0_buffer = load i8*, i8** %resultSample0_buffer.addr
  %nextArg2 = getelementptr i8*, i8** %resultSample0_buffer.addr, i64 1
  %bytes_resultSample0_buffer.addr = bitcast i8** %nextArg2 to i8**
  %bytes_resultSample0_buffer = load i8*, i8** %bytes_resultSample0_buffer.addr
  %nextArg3 = getelementptr i8*, i8** %bytes_resultSample0_buffer.addr, i64 1
  %out.addr = bitcast i8** %nextArg3 to i8**
  %out = load i8*, i8** %out.addr
  %nextArg4 = getelementptr i8*, i8** %out.addr, i64 1
  %isLastInput_buffer.addr = bitcast i8** %nextArg4 to i8**
  %isLastInput_buffer = load i8*, i8** %isLastInput_buffer.addr
  br label %condition

condition:                                        ; preds = %while.body, %entry
  %0 = call i64 @llvm_hpvm_bufferPop(i8* %isLastInput_buffer)
  %isLastInput = bitcast i64 %0 to i64
  %isLastInputNotZero = icmp ne i64 %isLastInput, 0
  br i1 %isLastInputNotZero, label %while.end, label %while.body

while.body:                                       ; preds = %condition
  %1 = call i64 @llvm_hpvm_bufferPop(i8* %decoder_buffer)
  %decoder.addr = inttoptr i64 %1 to %class.CAmbisonicBinauralizer*
  %2 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_decoder_buffer)
  %bytes_decoder.addr = bitcast i64 %2 to i64
  %3 = call i64 @llvm_hpvm_bufferPop(i8* %resultSample0_buffer)
  %resultSample0.addr = inttoptr i64 %3 to float*
  %4 = call i64 @llvm_hpvm_bufferPop(i8* %bytes_resultSample0_buffer)
  %bytes_resultSample0.addr = bitcast i64 %4 to i64
  %wrapperOverlap_left_fxp_cloned.30.output = call %struct.out.wrapperOverlap_left_fxp @wrapperOverlap_left_fxp_cloned.30(%class.CAmbisonicBinauralizer* %decoder.addr, i64 %bytes_decoder.addr, float* %resultSample0.addr, i64 %bytes_resultSample0.addr)
  %5 = extractvalue %struct.out.wrapperOverlap_left_fxp %wrapperOverlap_left_fxp_cloned.30.output, 0
  %6 = bitcast i64 %5 to i64
  call void @llvm_hpvm_bufferPush(i8* %out, i64 %6)
  br label %condition

while.end:                                        ; preds = %condition
  ret i8* undef
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #14 = { nofree nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #15 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #16 = { nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #17 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #18 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #19 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #20 = { cold noreturn nounwind }
attributes #21 = { nofree nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #22 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #23 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #24 = { nounwind }
attributes #25 = { builtin nounwind }
attributes #26 = { noreturn nounwind }
attributes #27 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}
!hpvm_hint_cpu = !{!3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!hpvm_hint_gpu = !{}
!hpvm_hint_cpu_gpu = !{}
!hpvm_hint_cpu_spir = !{}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 9.0.0 (https://gitlab.engr.illinois.edu/llvm/hpvm-release.git f83c355d11be7d011508763fedc67e76d592a636)"}
!3 = !{%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* undef}
!4 = !{%struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* undef}
!5 = !{%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!6 = !{%struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!7 = !{%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!8 = !{%struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!9 = !{%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!10 = !{%struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!11 = !{%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!12 = !{%struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* undef}
!13 = !{%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* undef}
!14 = !{%struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)* undef}
!15 = !{%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!16 = !{%struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* undef}
!17 = !{%struct.out.setAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!18 = !{%struct.out.wrapperSetAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!19 = !{%struct.out.setAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!20 = !{%struct.out.wrapperSetAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!21 = !{%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!22 = !{%struct.out.wrapperFIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!23 = !{%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!24 = !{%struct.out.wrapperFIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)* undef}
!25 = !{%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!26 = !{%struct.out.wrapperIFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!27 = !{%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!28 = !{%struct.out.wrapperIFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!29 = !{%struct.out.overlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!30 = !{%struct.out.wrapperOverlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!31 = !{%struct.out.overlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!32 = !{%struct.out.wrapperOverlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* undef}
!33 = !{%struct.out.audioDecoding (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i64, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i64, i64, i64, i64)* undef}
!34 = !{!35, !36, i64 8}
!35 = !{!"_ZTS4HRTF", !36, i64 8, !36, i64 12}
!36 = !{!"int", !37, i64 0}
!37 = !{!"omnipotent char", !38, i64 0}
!38 = !{!"Simple C++ TBAA"}
!39 = !{!35, !36, i64 12}
!40 = !{!41, !41, i64 0}
!41 = !{!"vtable pointer", !38, i64 0}
!42 = !{!36, !36, i64 0}
!43 = !{!44, !44, i64 0}
!44 = !{!"any pointer", !37, i64 0}
!45 = !{!46, !46, i64 0}
!46 = !{!"short", !37, i64 0}
!47 = !{!48, !48, i64 0}
!48 = !{!"float", !37, i64 0}
!49 = !{!50, !36, i64 8}
!50 = !{!"_ZTS14CAmbisonicBase", !36, i64 8, !51, i64 12, !36, i64 16, !51, i64 20}
!51 = !{!"bool", !37, i64 0}
!52 = !{!50, !51, i64 12}
!53 = !{!50, !36, i64 16}
!54 = !{!50, !51, i64 20}
!55 = !{i8 0, i8 2}
!56 = !{!57, !48, i64 80}
!57 = !{!"_ZTS16CAmbisonicSource", !58, i64 24, !58, i64 48, !59, i64 72, !48, i64 84}
!58 = !{!"_ZTSSt6vectorIfSaIfEE"}
!59 = !{!"_ZTS10PolarPoint", !48, i64 0, !48, i64 4, !48, i64 8}
!60 = !{!57, !48, i64 84}
!61 = !{!62, !44, i64 8}
!62 = !{!"_ZTSNSt12_Vector_baseIfSaIfEE17_Vector_impl_dataE", !44, i64 0, !44, i64 8, !44, i64 16}
!63 = !{!62, !44, i64 0}
!64 = !{!57, !48, i64 72}
!65 = !{!57, !48, i64 76}
!66 = distinct !{!66, !67}
!67 = !{!"llvm.loop.unroll.disable"}
!68 = !{!69, !36, i64 24}
!69 = !{!"_ZTS8CBFormat", !36, i64 24, !36, i64 28, !58, i64 32, !70, i64 56}
!70 = !{!"_ZTSSt10unique_ptrIA_PfSt14default_deleteIS1_EE", !71, i64 0}
!71 = !{!"_ZTSSt15__uniq_ptr_implIPfSt14default_deleteIA_S0_EE", !72, i64 0}
!72 = !{!"_ZTSSt5tupleIJPPfSt14default_deleteIA_S0_EEE"}
!73 = !{!69, !36, i64 28}
!74 = distinct !{!74, !67}
!75 = distinct !{!75, !67}
!76 = distinct !{!76, !67}
!77 = distinct !{!77, !67}
!78 = distinct !{!78, !67}
!79 = distinct !{!79, !67}
!80 = distinct !{!80, !67}
!81 = distinct !{!81, !67}
!82 = !{!83, !48, i64 124}
!83 = !{!"_ZTS21CAmbisonicEncoderDist", !36, i64 88, !48, i64 92, !36, i64 96, !36, i64 100, !44, i64 104, !36, i64 112, !36, i64 116, !36, i64 120, !48, i64 124, !48, i64 128, !48, i64 132}
!84 = !{!83, !48, i64 128}
!85 = !{!83, !48, i64 132}
!86 = !{!83, !36, i64 88}
!87 = !{!83, !36, i64 100}
!88 = !{!83, !44, i64 104}
!89 = !{!83, !36, i64 96}
!90 = !{!83, !48, i64 92}
!91 = !{!83, !36, i64 112}
!92 = !{!83, !36, i64 116}
!93 = !{!83, !36, i64 120}
!94 = distinct !{!94, !67}
!95 = !{!96, !44, i64 48}
!96 = !{!"_ZTS19CAmbisonicProcessor", !97, i64 24, !44, i64 48, !44, i64 56, !44, i64 64, !44, i64 72, !44, i64 80, !36, i64 88, !36, i64 92, !36, i64 96, !36, i64 100, !36, i64 104, !48, i64 108, !44, i64 112, !44, i64 120, !48, i64 128, !48, i64 132, !48, i64 136, !48, i64 140, !48, i64 144, !48, i64 148, !48, i64 152, !48, i64 156, !48, i64 160, !48, i64 164, !48, i64 168, !48, i64 172, !48, i64 176, !48, i64 180, !48, i64 184, !48, i64 188, !48, i64 192, !48, i64 196}
!97 = !{!"_ZTS11Orientation", !48, i64 0, !48, i64 4, !48, i64 8, !48, i64 12, !48, i64 16, !48, i64 20}
!98 = !{!96, !44, i64 72}
!99 = !{!96, !44, i64 56}
!100 = !{!96, !44, i64 64}
!101 = !{!96, !44, i64 112}
!102 = !{!96, !44, i64 120}
!103 = !{!96, !44, i64 80}
!104 = !{!96, !36, i64 92}
!105 = !{!96, !36, i64 96}
!106 = !{!96, !36, i64 100}
!107 = !{!96, !36, i64 88}
!108 = !{!96, !36, i64 104}
!109 = !{!96, !48, i64 108}
!110 = !{!111, !44, i64 8}
!111 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE17_Vector_impl_dataE", !44, i64 0, !44, i64 8, !44, i64 16}
!112 = !{!111, !44, i64 16}
!113 = !{!111, !44, i64 0}
!114 = !{!96, !48, i64 36}
!115 = !{!96, !48, i64 128}
!116 = !{!96, !48, i64 132}
!117 = !{!96, !48, i64 40}
!118 = !{!96, !48, i64 136}
!119 = !{!96, !48, i64 140}
!120 = !{!96, !48, i64 44}
!121 = !{!96, !48, i64 144}
!122 = !{!96, !48, i64 148}
!123 = !{!96, !48, i64 152}
!124 = !{!96, !48, i64 156}
!125 = !{!96, !48, i64 160}
!126 = !{!96, !48, i64 164}
!127 = !{!96, !48, i64 168}
!128 = !{!96, !48, i64 172}
!129 = !{!96, !48, i64 176}
!130 = !{!96, !48, i64 180}
!131 = !{!96, !48, i64 184}
!132 = !{!96, !48, i64 188}
!133 = !{!96, !48, i64 192}
!134 = !{!96, !48, i64 196}
!135 = !{i64 0, i64 4, !47, i64 4, i64 4, !47, i64 8, i64 4, !47, i64 12, i64 4, !47, i64 16, i64 4, !47, i64 20, i64 4, !47}
!136 = !{!137, !48, i64 0}
!137 = !{!"_ZTS12kiss_fft_cpx", !48, i64 0, !48, i64 4}
!138 = !{!137, !48, i64 4}
!139 = distinct !{!139, !67}
!140 = distinct !{!140, !67}
!141 = distinct !{!141, !67}
!142 = distinct !{!142, !67}
!143 = !{!144, !44, i64 32}
!144 = !{!"_ZTS17CAmbisonicDecoder", !36, i64 24, !36, i64 28, !44, i64 32}
!145 = !{!144, !36, i64 24}
!146 = !{!144, !36, i64 28}
!147 = distinct !{!147, !67}
!148 = distinct !{!148, !67}
!149 = !{!150, !48, i64 92}
!150 = !{!"_ZTS16CAmbisonicZoomer", !144, i64 24, !151, i64 64, !151, i64 72, !151, i64 80, !48, i64 88, !48, i64 92, !48, i64 96, !48, i64 100}
!151 = !{!"_ZTSSt10unique_ptrIA_fSt14default_deleteIS0_EE", !152, i64 0}
!152 = !{!"_ZTSSt15__uniq_ptr_implIfSt14default_deleteIA_fEE", !153, i64 0}
!153 = !{!"_ZTSSt5tupleIJPfSt14default_deleteIA_fEEE"}
!154 = !{!150, !48, i64 96}
!155 = !{!150, !48, i64 88}
!156 = !{!150, !48, i64 100}
!157 = distinct !{!157, !67}
!158 = distinct !{!158, !67}
!159 = !{!160, !44, i64 0}
!160 = !{!"_ZTSSt10_Head_baseILm1EPFvPvELb0EE", !44, i64 0}
!161 = !{!162, !44, i64 0}
!162 = !{!"_ZTSSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE", !44, i64 0}
!163 = !{!164, !44, i64 0}
!164 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !44, i64 0}
!165 = !{!166, !44, i64 0}
!166 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !164, i64 0, !167, i64 8, !37, i64 16}
!167 = !{!"long", !37, i64 0}
!168 = !{!166, !167, i64 8}
!169 = !{!167, !167, i64 0}
!170 = !{!37, !37, i64 0}
!171 = !{!172, !36, i64 68}
!172 = !{!"_ZTS22CAmbisonicBinauralizer", !144, i64 24, !36, i64 64, !36, i64 68, !36, i64 72, !36, i64 76, !48, i64 80, !36, i64 84, !173, i64 88, !173, i64 104, !37, i64 120, !176, i64 168, !58, i64 176, !58, i64 200, !58, i64 224, !37, i64 248}
!173 = !{!"_ZTSSt10unique_ptrI15kiss_fftr_statePFvPvEE", !174, i64 0}
!174 = !{!"_ZTSSt15__uniq_ptr_implI15kiss_fftr_statePFvPvEE", !175, i64 0}
!175 = !{!"_ZTSSt5tupleIJP15kiss_fftr_statePFvPvEEE"}
!176 = !{!"_ZTSSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE", !177, i64 0}
!177 = !{!"_ZTSSt15__uniq_ptr_implI12kiss_fft_cpxSt14default_deleteIA_S0_EE", !178, i64 0}
!178 = !{!"_ZTSSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE"}
!179 = !{!172, !36, i64 64}
!180 = !{!172, !36, i64 84}
!181 = !{!172, !36, i64 72}
!182 = !{!172, !36, i64 76}
!183 = !{!172, !48, i64 80}
!184 = distinct !{!184, !67}
!185 = !{!186, !44, i64 0}
!186 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_Vector_impl_dataE", !44, i64 0, !44, i64 8, !44, i64 16}
!187 = distinct !{!187, !67}
!188 = distinct !{!188, !67}
!189 = distinct !{!189, !67}
!190 = distinct !{!190, !67}
!191 = distinct !{!191, !67}
!192 = distinct !{!192, !67}
!193 = !{!194, !44, i64 240}
!194 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !44, i64 216, !37, i64 224, !51, i64 225, !44, i64 232, !44, i64 240, !44, i64 248, !44, i64 256}
!195 = !{!196, !37, i64 56}
!196 = !{!"_ZTSSt5ctypeIcE", !44, i64 16, !51, i64 24, !44, i64 32, !44, i64 40, !44, i64 48, !37, i64 56, !37, i64 57, !37, i64 313, !37, i64 569}
!197 = !{!186, !44, i64 8}
!198 = !{!199, !48, i64 4132}
!199 = !{!"_ZTSN12ILLIXR_AUDIO5SoundE", !44, i64 0, !37, i64 8, !44, i64 4104, !44, i64 4112, !59, i64 4120, !48, i64 4132}
!200 = !{!199, !44, i64 0}
!201 = !{!199, !44, i64 4104}
!202 = !{!199, !44, i64 4112}
!203 = !{!199, !48, i64 4120}
!204 = !{!199, !48, i64 4124}
!205 = !{!199, !48, i64 4128}
!206 = !{!59, !48, i64 0}
!207 = !{!59, !48, i64 4}
!208 = !{!59, !48, i64 8}
!209 = !{!210, !212, i64 32}
!210 = !{!"_ZTSSt8ios_base", !167, i64 8, !167, i64 16, !211, i64 24, !212, i64 28, !212, i64 32, !44, i64 40, !213, i64 48, !37, i64 64, !36, i64 192, !44, i64 200, !214, i64 208}
!211 = !{!"_ZTSSt13_Ios_Fmtflags", !37, i64 0}
!212 = !{!"_ZTSSt12_Ios_Iostate", !37, i64 0}
!213 = !{!"_ZTSNSt8ios_base6_WordsE", !44, i64 0, !167, i64 8}
!214 = !{!"_ZTSSt6locale", !44, i64 0}
!215 = !{!216, !217, i64 0}
!216 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudioE", !217, i64 0, !44, i64 8, !44, i64 16, !44, i64 24, !44, i64 32, !44, i64 40, !44, i64 48}
!217 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudio11ProcessTypeE", !37, i64 0}
!218 = !{!216, !44, i64 16}
!219 = !{!220, !36, i64 0}
!220 = !{!"_ZTSN12ILLIXR_AUDIO11WAVHeader_tE", !36, i64 0, !36, i64 4, !36, i64 8, !36, i64 12, !36, i64 16, !46, i64 20, !46, i64 22, !36, i64 24, !36, i64 28, !46, i64 32, !46, i64 34, !36, i64 36, !36, i64 40}
!221 = !{!220, !36, i64 4}
!222 = !{!220, !36, i64 8}
!223 = !{!220, !36, i64 12}
!224 = !{!220, !36, i64 16}
!225 = !{!220, !46, i64 20}
!226 = !{!220, !46, i64 22}
!227 = !{!220, !36, i64 24}
!228 = !{!220, !36, i64 28}
!229 = !{!220, !46, i64 32}
!230 = !{!220, !46, i64 34}
!231 = !{!220, !36, i64 36}
!232 = !{!220, !36, i64 40}
!233 = !{!216, !44, i64 8}
!234 = !{!216, !44, i64 24}
!235 = !{!216, !44, i64 32}
!236 = !{!216, !44, i64 40}
!237 = !{!216, !44, i64 48}
!238 = !{!239, !44, i64 8}
!239 = !{!"_ZTSNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE17_Vector_impl_dataE", !44, i64 0, !44, i64 8, !44, i64 16}
!240 = !{!239, !44, i64 0}
!241 = !{!239, !44, i64 16}
!242 = distinct !{!242, !67}
!243 = distinct !{!243, !67}
!244 = !{!245, !44, i64 0}
!245 = !{!"_ZTS7RootArg", !44, i64 0, !167, i64 8, !44, i64 16, !167, i64 24, !44, i64 32, !167, i64 40, !44, i64 48, !167, i64 56, !44, i64 64, !167, i64 72, !167, i64 80, !44, i64 88, !167, i64 96, !44, i64 104, !167, i64 112, !44, i64 120, !167, i64 128, !44, i64 136, !167, i64 144, !44, i64 152, !167, i64 160, !167, i64 168, !167, i64 176, !167, i64 184, !167, i64 192}
!246 = !{!245, !167, i64 8}
!247 = !{!245, !44, i64 16}
!248 = !{!245, !167, i64 24}
!249 = !{!245, !44, i64 32}
!250 = !{!245, !167, i64 40}
!251 = !{!245, !44, i64 48}
!252 = !{!245, !167, i64 56}
!253 = !{!245, !44, i64 64}
!254 = !{!245, !167, i64 72}
!255 = !{!245, !167, i64 80}
!256 = !{!245, !44, i64 88}
!257 = !{!245, !167, i64 96}
!258 = !{!245, !44, i64 104}
!259 = !{!245, !167, i64 112}
!260 = !{!245, !44, i64 120}
!261 = !{!245, !167, i64 128}
!262 = !{!245, !44, i64 136}
!263 = !{!245, !167, i64 144}
!264 = !{!245, !44, i64 152}
!265 = !{!245, !167, i64 160}
!266 = !{!245, !167, i64 168}
!267 = !{!245, !167, i64 176}
!268 = !{!245, !167, i64 184}
!269 = !{!245, !167, i64 192}
!270 = !{!62, !44, i64 16}
!271 = distinct !{!271, !67}
!272 = distinct !{!272, !67}
!273 = distinct !{!273, !67}
!274 = distinct !{!274, !67}
!275 = !{!276, !44, i64 0}
!276 = !{!"_ZTSSt10_Head_baseILm0EPfLb0EE", !44, i64 0}
!277 = !{!186, !44, i64 16}
!278 = !{!279, !44, i64 0}
!279 = !{!"_ZTSSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE", !44, i64 0}
!280 = distinct !{!280, !67}
!281 = distinct !{!281, !67}
!282 = distinct !{!282, !67}
!283 = distinct !{!283, !67}
!284 = distinct !{!284, !67}
!285 = distinct !{!285, !67}
!286 = distinct !{!286, !67}
