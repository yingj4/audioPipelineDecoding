; ModuleID = 'build/seq/main.hpvm.ll'
source_filename = "src//main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.MIT_HRTF = type { %class.HRTF }
%class.HRTF = type { i32 (...)**, i32, i32 }
%class.CAmbisonicSource = type { %class.CAmbisonicBase.base, %"class.std::vector.0", %"class.std::vector.0", %struct.PolarPoint, float }
%class.CAmbisonicBase.base = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8 }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" = type { float*, float*, float* }
%struct.PolarPoint = type { float, float, float }
%class.CBFormat = type { %class.CAmbisonicBase.base, i32, i32, %"class.std::vector.0", %"class.std::unique_ptr" }
%"class.std::unique_ptr" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.6" }
%"struct.std::_Head_base.6" = type { float** }
%class.CAmbisonicEncoder = type { %class.CAmbisonicSource }
%class.CAmbisonicEncoderDist = type { %class.CAmbisonicEncoder, i32, float, i32, i32, float*, i32, i32, i32, float, float, float }
%class.CAmbisonicProcessor = type { %class.CAmbisonicBase.base, %class.Orientation, float*, %struct.kiss_fftr_state*, %struct.kiss_fftr_state*, float*, float**, i32, i32, i32, i32, i32, float, %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.Orientation = type { float, float, float, float, float, float }
%struct.kiss_fftr_state = type opaque
%struct.kiss_fft_cpx = type { float, float }
%class.CAmbisonicSpeaker = type { %class.CAmbisonicSource }
%class.CAmbisonicDecoder = type { %class.CAmbisonicBase.base, i32, i32, %class.CAmbisonicSpeaker* }
%class.CAmbisonicZoomer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", float, float, float, float }
%"class.std::unique_ptr.12" = type { %"class.std::tuple.13" }
%"class.std::tuple.13" = type { %"struct.std::_Tuple_impl.14" }
%"struct.std::_Tuple_impl.14" = type { %"struct.std::_Head_base.19" }
%"struct.std::_Head_base.19" = type { float* }
%class.CAmbisonicBinauralizer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, i32, i32, i32, i32, float, i32, %"class.std::unique_ptr.20", %"class.std::unique_ptr.20", [2 x %"class.std::vector.26"], %"class.std::unique_ptr.31", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", [2 x %"class.std::vector.0"] }
%"class.std::unique_ptr.20" = type { %"class.std::tuple.21" }
%"class.std::tuple.21" = type { %"struct.std::_Tuple_impl.22" }
%"struct.std::_Tuple_impl.22" = type { %"struct.std::_Tuple_impl.23", %"struct.std::_Head_base.25" }
%"struct.std::_Tuple_impl.23" = type { %"struct.std::_Head_base.24" }
%"struct.std::_Head_base.24" = type { void (i8*)* }
%"struct.std::_Head_base.25" = type { %struct.kiss_fftr_state* }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"* }
%"class.std::unique_ptr.31" = type { %"class.std::tuple.32" }
%"class.std::tuple.32" = type { %"struct.std::_Tuple_impl.33" }
%"struct.std::_Tuple_impl.33" = type { %"struct.std::_Head_base.38" }
%"struct.std::_Head_base.38" = type { %struct.kiss_fft_cpx* }
%"class.ILLIXR_AUDIO::Sound" = type { %"class.std::basic_fstream"*, [1024 x float], %class.CBFormat*, %class.CAmbisonicEncoderDist*, %struct.PolarPoint, float }
%"class.std::basic_fstream" = type { %"class.std::basic_iostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon.42 }
%union.anon.42 = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.ILLIXR_AUDIO::ABAudio" = type { i32, %"class.std::vector.43"*, %"class.std::basic_ofstream"*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicProcessor*, %class.CAmbisonicZoomer* }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" = type { %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%class.CAmbisonicBase = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"struct.ILLIXR_AUDIO::WAVHeader_t" = type { i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, i32 }
%struct.out.rotatorSet_fxp = type <{ i64 }>
%struct.out.zoomSet_fxp = type <{ i64 }>
%struct.out.psychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.rotateOrder1_fxp = type <{ i64 }>
%struct.out.rotateOrder2_fxp = type <{ i64 }>
%struct.out.rotateOrder3_fxp = type <{ i64 }>
%struct.out.zoomProcess_fxp = type <{ i64 }>
%struct.out.setAndFFT_fxp = type <{ i64, i64 }>
%struct.out.FIR_left_fxp = type <{ i64 }>
%struct.out.FIR_right_fxp = type <{ i64 }>
%struct.out.IFFT_left_fxp = type <{ i64 }>
%struct.out.IFFT_right_fxp = type <{ i64 }>
%emptyStruct = type <{}>
%emptyStruct.26 = type <{}>
%emptyStruct.27 = type <{}>

$_ZN11OrientationC2Efff = comdat any

$__clang_call_terminate = comdat any

$_ZN8CBFormatD2Ev = comdat any

$_ZN8MIT_HRTFD0Ev = comdat any

$_ZN14CAmbisonicBaseD2Ev = comdat any

$_ZN14CAmbisonicBaseD0Ev = comdat any

$_ZN16CAmbisonicSourceD2Ev = comdat any

$_ZN16CAmbisonicSourceD0Ev = comdat any

$_ZN8CBFormatD0Ev = comdat any

$_ZN16CAmbisonicZoomerD2Ev = comdat any

$_ZN16CAmbisonicZoomerD0Ev = comdat any

$_ZN22CAmbisonicBinauralizerD2Ev = comdat any

$_ZN22CAmbisonicBinauralizerD0Ev = comdat any

$_ZN4HRTFD2Ev = comdat any

$_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf = comdat any

$_ZNSt6vectorIfSaIfEE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm = comdat any

$_ZTS4HRTF = comdat any

$_ZTI4HRTF = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV8MIT_HRTF = unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MIT_HRTF to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD2Ev to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD0Ev to i8*), i8* bitcast (i1 (%class.MIT_HRTF*, float, float, float**)* @_ZN8MIT_HRTF3getEffPPf to i8*)] }, align 8
@_ZTV14CAmbisonicBase = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV16CAmbisonicSource = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSource*, i32, i1, i32)* @_ZN16CAmbisonicSource9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV8CBFormat = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8CBFormat to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD2Ev to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD0Ev to i8*), i8* bitcast (i1 (%class.CBFormat*, i32, i1, i32)* @_ZN8CBFormat9ConfigureEjbj to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat5ResetEv to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat7RefreshEv to i8*)] }, align 8
@_ZTV17CAmbisonicEncoder = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoder*, i32, i1, i32)* @_ZN17CAmbisonicEncoder9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoder7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV21CAmbisonicEncoderDist = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI21CAmbisonicEncoderDist to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)* @_ZN21CAmbisonicEncoderDist9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV19CAmbisonicProcessor = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19CAmbisonicProcessor to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor7RefreshEv to i8*)] }, align 8
@_ZL14first_order_3D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -10, i16 -13, i16 -17, i16 -21, i16 -25, i16 -30, i16 -35, i16 -41, i16 -47, i16 -54, i16 -60, i16 -67, i16 -75, i16 -82, i16 -90, i16 -97, i16 -105, i16 -113, i16 -120, i16 -127, i16 -134, i16 -141, i16 -147, i16 -153, i16 -158, i16 -163, i16 -167, i16 -170, i16 -173, i16 -175, i16 -176, i16 23040, i16 -176, i16 -175, i16 -173, i16 -170, i16 -167, i16 -163, i16 -158, i16 -153, i16 -147, i16 -141, i16 -134, i16 -127, i16 -120, i16 -113, i16 -105, i16 -97, i16 -90, i16 -82, i16 -75, i16 -67, i16 -60, i16 -54, i16 -47, i16 -41, i16 -35, i16 -30, i16 -25, i16 -21, i16 -17, i16 -13, i16 -10, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 5, i16 7, i16 9, i16 11, i16 14, i16 16, i16 19, i16 23, i16 26, i16 30, i16 34, i16 38, i16 42, i16 46, i16 51, i16 55, i16 60, i16 64, i16 68, i16 73, i16 77, i16 80, i16 84, i16 87, i16 90, i16 93, i16 95, i16 97, i16 99, i16 100, i16 101, i16 13438, i16 101, i16 100, i16 99, i16 97, i16 95, i16 93, i16 90, i16 87, i16 84, i16 80, i16 77, i16 73, i16 68, i16 64, i16 60, i16 55, i16 51, i16 46, i16 42, i16 38, i16 34, i16 30, i16 26, i16 23, i16 19, i16 16, i16 14, i16 11, i16 9, i16 7, i16 5, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_3D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -5, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -5, i16 -3, i16 -1, i16 2, i16 6, i16 10, i16 15, i16 21, i16 26, i16 32, i16 38, i16 44, i16 49, i16 53, i16 55, i16 56, i16 54, i16 50, i16 42, i16 32, i16 19, i16 2, i16 -19, i16 -43, i16 -70, i16 -100, i16 -133, i16 -167, i16 -203, i16 -241, i16 -278, i16 -315, i16 -350, i16 -384, i16 -414, i16 -442, i16 -465, i16 -484, i16 -497, i16 -506, i16 25438, i16 -506, i16 -497, i16 -484, i16 -465, i16 -442, i16 -414, i16 -384, i16 -350, i16 -315, i16 -278, i16 -241, i16 -203, i16 -167, i16 -133, i16 -100, i16 -70, i16 -43, i16 -19, i16 2, i16 19, i16 32, i16 42, i16 50, i16 54, i16 56, i16 55, i16 53, i16 49, i16 44, i16 38, i16 32, i16 26, i16 21, i16 15, i16 10, i16 6, i16 2, i16 -1, i16 -3, i16 -5, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -5], [101 x i16] [i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2, i16 -1, i16 0, i16 2, i16 4, i16 6, i16 8, i16 10, i16 12, i16 15, i16 17, i16 19, i16 20, i16 21, i16 21, i16 21, i16 19, i16 16, i16 12, i16 7, i16 0, i16 -8, i16 -17, i16 -27, i16 -39, i16 -52, i16 -65, i16 -79, i16 -94, i16 -108, i16 -123, i16 -136, i16 -149, i16 -161, i16 -172, i16 -181, i16 -188, i16 -194, i16 -197, i16 19884, i16 -197, i16 -194, i16 -188, i16 -181, i16 -172, i16 -161, i16 -149, i16 -136, i16 -123, i16 -108, i16 -94, i16 -79, i16 -65, i16 -52, i16 -39, i16 -27, i16 -17, i16 -8, i16 0, i16 7, i16 12, i16 16, i16 19, i16 21, i16 21, i16 21, i16 20, i16 19, i16 17, i16 15, i16 12, i16 10, i16 8, i16 6, i16 4, i16 2, i16 0, i16 -1, i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2], [101 x i16] [i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -14, i16 -17, i16 -21, i16 -25, i16 -28, i16 -31, i16 -34, i16 -35, i16 -36, i16 -35, i16 -32, i16 -27, i16 -21, i16 -12, i16 -2, i16 11, i16 26, i16 43, i16 62, i16 82, i16 104, i16 127, i16 150, i16 173, i16 196, i16 219, i16 240, i16 259, i16 276, i16 290, i16 302, i16 311, i16 316, i16 10659, i16 316, i16 311, i16 302, i16 290, i16 276, i16 259, i16 240, i16 219, i16 196, i16 173, i16 150, i16 127, i16 104, i16 82, i16 62, i16 43, i16 26, i16 11, i16 -2, i16 -12, i16 -21, i16 -27, i16 -32, i16 -35, i16 -36, i16 -35, i16 -34, i16 -31, i16 -28, i16 -25, i16 -21, i16 -17, i16 -14, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2]], align 16
@_ZL14first_order_2D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -7, i16 -9, i16 -10, i16 -13, i16 -15, i16 -18, i16 -21, i16 -24, i16 -27, i16 -30, i16 -34, i16 -37, i16 -41, i16 -45, i16 -49, i16 -52, i16 -56, i16 -60, i16 -63, i16 -67, i16 -70, i16 -73, i16 -76, i16 -79, i16 -81, i16 -83, i16 -85, i16 -86, i16 -87, i16 -88, i16 19968, i16 -88, i16 -87, i16 -86, i16 -85, i16 -83, i16 -81, i16 -79, i16 -76, i16 -73, i16 -70, i16 -67, i16 -63, i16 -60, i16 -56, i16 -52, i16 -49, i16 -45, i16 -41, i16 -37, i16 -34, i16 -30, i16 -27, i16 -24, i16 -21, i16 -18, i16 -15, i16 -13, i16 -10, i16 -9, i16 -7, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 4, i16 5, i16 7, i16 8, i16 10, i16 12, i16 15, i16 17, i16 20, i16 23, i16 26, i16 29, i16 32, i16 35, i16 39, i16 42, i16 46, i16 49, i16 52, i16 55, i16 58, i16 61, i16 64, i16 67, i16 69, i16 71, i16 73, i16 74, i16 76, i16 76, i16 77, i16 14259, i16 77, i16 76, i16 76, i16 74, i16 73, i16 71, i16 69, i16 67, i16 64, i16 61, i16 58, i16 55, i16 52, i16 49, i16 46, i16 42, i16 39, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 17, i16 15, i16 12, i16 10, i16 8, i16 7, i16 5, i16 4, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_2D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -3, i16 -3, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -2, i16 -1, i16 1, i16 3, i16 5, i16 7, i16 10, i16 13, i16 16, i16 19, i16 22, i16 24, i16 26, i16 27, i16 28, i16 27, i16 25, i16 21, i16 16, i16 9, i16 1, i16 -10, i16 -22, i16 -35, i16 -50, i16 -67, i16 -84, i16 -102, i16 -121, i16 -139, i16 -158, i16 -176, i16 -192, i16 -208, i16 -222, i16 -233, i16 -243, i16 -249, i16 -254, i16 20905, i16 -254, i16 -249, i16 -243, i16 -233, i16 -222, i16 -208, i16 -192, i16 -176, i16 -158, i16 -139, i16 -121, i16 -102, i16 -84, i16 -67, i16 -50, i16 -35, i16 -22, i16 -10, i16 1, i16 9, i16 16, i16 21, i16 25, i16 27, i16 28, i16 27, i16 26, i16 24, i16 22, i16 19, i16 16, i16 13, i16 10, i16 7, i16 5, i16 3, i16 1, i16 -1, i16 -2, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -3, i16 -3], [101 x i16] [i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 10, i16 10, i16 11, i16 11, i16 11, i16 10, i16 8, i16 6, i16 3, i16 0, i16 -4, i16 -9, i16 -15, i16 -21, i16 -28, i16 -35, i16 -42, i16 -50, i16 -58, i16 -65, i16 -72, i16 -79, i16 -86, i16 -91, i16 -96, i16 -100, i16 -103, i16 -104, i16 18220, i16 -104, i16 -103, i16 -100, i16 -96, i16 -91, i16 -86, i16 -79, i16 -72, i16 -65, i16 -58, i16 -50, i16 -42, i16 -35, i16 -28, i16 -21, i16 -15, i16 -9, i16 -4, i16 0, i16 3, i16 6, i16 8, i16 10, i16 11, i16 11, i16 11, i16 10, i16 10, i16 9, i16 8, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1], [101 x i16] [i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -17, i16 -20, i16 -24, i16 -27, i16 -30, i16 -33, i16 -34, i16 -34, i16 -33, i16 -31, i16 -26, i16 -20, i16 -12, i16 -2, i16 11, i16 25, i16 41, i16 59, i16 79, i16 100, i16 122, i16 144, i16 166, i16 189, i16 210, i16 230, i16 249, i16 265, i16 279, i16 290, i16 298, i16 303, i16 10885, i16 303, i16 298, i16 290, i16 279, i16 265, i16 249, i16 230, i16 210, i16 189, i16 166, i16 144, i16 122, i16 100, i16 79, i16 59, i16 41, i16 25, i16 11, i16 -2, i16 -12, i16 -20, i16 -26, i16 -31, i16 -33, i16 -34, i16 -34, i16 -33, i16 -30, i16 -27, i16 -24, i16 -20, i16 -17, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2]], align 16
@_ZL14third_order_2D = internal unnamed_addr constant [4 x [101 x i16]] [[101 x i16] [i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 4, i16 3, i16 2, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -16, i16 -18, i16 -20, i16 -20, i16 -18, i16 -15, i16 -10, i16 -3, i16 6, i16 16, i16 26, i16 37, i16 47, i16 56, i16 62, i16 64, i16 63, i16 57, i16 45, i16 27, i16 3, i16 -26, i16 -60, i16 -98, i16 -140, i16 -183, i16 -226, i16 -268, i16 -307, i16 -342, i16 -370, i16 -391, i16 -404, i16 21262, i16 -404, i16 -391, i16 -370, i16 -342, i16 -307, i16 -268, i16 -226, i16 -183, i16 -140, i16 -98, i16 -60, i16 -26, i16 3, i16 27, i16 45, i16 57, i16 63, i16 64, i16 62, i16 56, i16 47, i16 37, i16 26, i16 16, i16 6, i16 -3, i16 -10, i16 -15, i16 -18, i16 -20, i16 -20, i16 -18, i16 -16, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 2, i16 3, i16 4, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0], [101 x i16] [i16 0, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -9, i16 -11, i16 -13, i16 -14, i16 -14, i16 -13, i16 -10, i16 -7, i16 -2, i16 4, i16 10, i16 18, i16 25, i16 32, i16 38, i16 42, i16 44, i16 43, i16 39, i16 30, i16 18, i16 2, i16 -18, i16 -41, i16 -68, i16 -96, i16 -126, i16 -155, i16 -184, i16 -211, i16 -234, i16 -254, i16 -268, i16 -277, i16 19741, i16 -277, i16 -268, i16 -254, i16 -234, i16 -211, i16 -184, i16 -155, i16 -126, i16 -96, i16 -68, i16 -41, i16 -18, i16 2, i16 18, i16 30, i16 39, i16 43, i16 44, i16 42, i16 38, i16 32, i16 25, i16 18, i16 10, i16 4, i16 -2, i16 -7, i16 -10, i16 -13, i16 -14, i16 -14, i16 -13, i16 -11, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 0], [101 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 1, i16 0, i16 -2, i16 -4, i16 -6, i16 -8, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -6, i16 -1, i16 5, i16 12, i16 20, i16 29, i16 38, i16 47, i16 56, i16 64, i16 71, i16 77, i16 82, i16 84, i16 15409, i16 84, i16 82, i16 77, i16 71, i16 64, i16 56, i16 47, i16 38, i16 29, i16 20, i16 12, i16 5, i16 -1, i16 -6, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -8, i16 -6, i16 -4, i16 -2, i16 0, i16 1, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 20, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -97, i16 -101, i16 -99, i16 -89, i16 -71, i16 -43, i16 -7, i16 39, i16 92, i16 151, i16 215, i16 282, i16 350, i16 415, i16 475, i16 528, i16 572, i16 605, i16 625, i16 8926, i16 625, i16 605, i16 572, i16 528, i16 475, i16 415, i16 350, i16 282, i16 215, i16 151, i16 92, i16 39, i16 -7, i16 -43, i16 -71, i16 -89, i16 -99, i16 -101, i16 -97, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 20, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2]], align 16
@_ZTV17CAmbisonicSpeaker = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicSpeaker to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)* @_ZN17CAmbisonicSpeaker9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeaker7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV17CAmbisonicDecoder = unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicDecoder to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder7RefreshEv to i8*), i8* bitcast (float (%class.CAmbisonicDecoder*, i32, i32)* @_ZN17CAmbisonicDecoder14GetCoefficientEjj to i8*)] }, align 8
@_ZTV16CAmbisonicZoomer = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicZoomer to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicZoomer*, i32, i1, i32)* @_ZN16CAmbisonicZoomer9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer7RefreshEv to i8*)] }, align 8
@_ZTV22CAmbisonicBinauralizer = unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22CAmbisonicBinauralizer to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer7RefreshEv to i8*), i8* bitcast (i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)* @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv to i8*)] }, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"Getting first order cube\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Getting second/third order dodecahedron\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"samples/lectureSample.wav\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"samples/radioMusicSample.wav\00", align 1
@_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ14rotatorSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ11zoomSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c" <number of size 1024 blocks to process> \00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"<optional: encode/decode>\0A\00", align 1
@.str.9 = private unnamed_addr constant [122 x i8] c"Note: If you want to hear the output sound, limit the process sample blocks so that the output is not longer than input!\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"output.wav\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS8MIT_HRTF = constant [10 x i8] c"8MIT_HRTF\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS4HRTF = linkonce_odr constant [6 x i8] c"4HRTF\00", comdat, align 1
@_ZTI4HRTF = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZTS4HRTF, i32 0, i32 0) }, comdat, align 8
@_ZTI8MIT_HRTF = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8MIT_HRTF, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*) }, align 8
@_ZTS14CAmbisonicBase = constant [17 x i8] c"14CAmbisonicBase\00", align 1
@_ZTI14CAmbisonicBase = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14CAmbisonicBase, i32 0, i32 0) }, align 8
@_ZTS16CAmbisonicSource = constant [19 x i8] c"16CAmbisonicSource\00", align 1
@_ZTI16CAmbisonicSource = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicSource, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS8CBFormat = constant [10 x i8] c"8CBFormat\00", align 1
@_ZTI8CBFormat = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8CBFormat, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicEncoder = constant [20 x i8] c"17CAmbisonicEncoder\00", align 1
@_ZTI17CAmbisonicEncoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicEncoder, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS21CAmbisonicEncoderDist = constant [24 x i8] c"21CAmbisonicEncoderDist\00", align 1
@_ZTI21CAmbisonicEncoderDist = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS21CAmbisonicEncoderDist, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*) }, align 8
@_ZTS19CAmbisonicProcessor = constant [22 x i8] c"19CAmbisonicProcessor\00", align 1
@_ZTI19CAmbisonicProcessor = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS19CAmbisonicProcessor, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicSpeaker = constant [20 x i8] c"17CAmbisonicSpeaker\00", align 1
@_ZTI17CAmbisonicSpeaker = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicSpeaker, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS17CAmbisonicDecoder = constant [20 x i8] c"17CAmbisonicDecoder\00", align 1
@_ZTI17CAmbisonicDecoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicDecoder, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS16CAmbisonicZoomer = constant [19 x i8] c"16CAmbisonicZoomer\00", align 1
@_ZTI16CAmbisonicZoomer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicZoomer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS22CAmbisonicBinauralizer = constant [25 x i8] c"22CAmbisonicBinauralizer\00", align 1
@_ZTI22CAmbisonicBinauralizer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22CAmbisonicBinauralizer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZL14third_order_3D = internal unnamed_addr constant <{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }> <{ [101 x i16] [i16 1, i16 3, i16 4, i16 5, i16 6, i16 8, i16 8, i16 8, i16 8, i16 7, i16 5, i16 1, i16 -3, i16 -8, i16 -15, i16 -21, i16 -28, i16 -34, i16 -38, i16 -41, i16 -41, i16 -38, i16 -31, i16 -20, i16 -5, i16 13, i16 33, i16 56, i16 78, i16 99, i16 117, i16 130, i16 136, i16 133, i16 120, i16 95, i16 57, i16 8, i16 -54, i16 -126, i16 -206, i16 -294, i16 -384, i16 -476, i16 -564, i16 -646, i16 -718, i16 -778, i16 -823, i16 -850, i16 26604, i16 -850, i16 -823, i16 -778, i16 -718, i16 -646, i16 -564, i16 -476, i16 -384, i16 -294, i16 -206, i16 -126, i16 -54, i16 8, i16 57, i16 95, i16 120, i16 133, i16 136, i16 130, i16 117, i16 99, i16 78, i16 56, i16 33, i16 13, i16 -5, i16 -20, i16 -31, i16 -38, i16 -41, i16 -41, i16 -38, i16 -34, i16 -28, i16 -21, i16 -15, i16 -8, i16 -3, i16 1, i16 5, i16 7, i16 8, i16 8, i16 8, i16 8, i16 6, i16 5, i16 4, i16 3, i16 1], [101 x i16] [i16 1, i16 2, i16 2, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 1, i16 -2, i16 -6, i16 -10, i16 -14, i16 -18, i16 -22, i16 -25, i16 -27, i16 -27, i16 -25, i16 -20, i16 -13, i16 -4, i16 8, i16 22, i16 36, i16 51, i16 65, i16 77, i16 85, i16 89, i16 87, i16 78, i16 62, i16 37, i16 5, i16 -35, i16 -82, i16 -135, i16 -192, i16 -252, i16 -311, i16 -369, i16 -423, i16 -470, i16 -509, i16 -538, i16 -556, i16 23082, i16 -556, i16 -538, i16 -509, i16 -470, i16 -423, i16 -369, i16 -311, i16 -252, i16 -192, i16 -135, i16 -82, i16 -35, i16 5, i16 37, i16 62, i16 78, i16 87, i16 89, i16 85, i16 77, i16 65, i16 51, i16 36, i16 22, i16 8, i16 -4, i16 -13, i16 -20, i16 -25, i16 -27, i16 -27, i16 -25, i16 -22, i16 -18, i16 -14, i16 -10, i16 -6, i16 -2, i16 1, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 2, i16 2, i16 1], <{ [89 x i16], [12 x i16] }> <{ [89 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 1, i16 0, i16 -2, i16 -5, i16 -8, i16 -11, i16 -14, i16 -17, i16 -20, i16 -23, i16 -25, i16 -27, i16 -29, i16 -30, i16 16773, i16 -30, i16 -29, i16 -27, i16 -25, i16 -23, i16 -20, i16 -17, i16 -14, i16 -11, i16 -8, i16 -5, i16 -2, i16 0, i16 1, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [12 x i16] zeroinitializer }>, [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 19, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -96, i16 -101, i16 -98, i16 -88, i16 -70, i16 -43, i16 -7, i16 38, i16 91, i16 150, i16 214, i16 280, i16 347, i16 412, i16 472, i16 525, i16 568, i16 601, i16 621, i16 8977, i16 621, i16 601, i16 568, i16 525, i16 472, i16 412, i16 347, i16 280, i16 214, i16 150, i16 91, i16 38, i16 -7, i16 -43, i16 -70, i16 -88, i16 -98, i16 -101, i16 -96, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 19, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2] }>, align 16
@.str.12 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]
@str = private unnamed_addr constant [35 x i8] c"Binauralizer Configuration failed!\00", align 1

@_ZN8MIT_HRTFC1Ej = unnamed_addr alias void (%class.MIT_HRTF*, i32), void (%class.MIT_HRTF*, i32)* @_ZN8MIT_HRTFC2Ej
@_ZN16CAmbisonicSourceC1Ev = unnamed_addr alias void (%class.CAmbisonicSource*), void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceC2Ev
@_ZN8CBFormatC1Ev = unnamed_addr alias void (%class.CBFormat*), void (%class.CBFormat*)* @_ZN8CBFormatC2Ev
@_ZN17CAmbisonicEncoderC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderC2Ev
@_ZN17CAmbisonicEncoderD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev
@_ZN21CAmbisonicEncoderDistC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistC2Ev
@_ZN21CAmbisonicEncoderDistD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev
@_ZN19CAmbisonicProcessorC1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorC2Ev
@_ZN19CAmbisonicProcessorD1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev
@_ZN17CAmbisonicSpeakerC1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerC2Ev
@_ZN17CAmbisonicSpeakerD1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev
@_ZN17CAmbisonicDecoderC1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderC2Ev
@_ZN17CAmbisonicDecoderD1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev
@_ZN16CAmbisonicZoomerC1Ev = unnamed_addr alias void (%class.CAmbisonicZoomer*), void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerC2Ev
@_ZN22CAmbisonicBinauralizerC1Ev = unnamed_addr alias void (%class.CAmbisonicBinauralizer*), void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerC2Ev
@_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1), void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1)* @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
@_ZN12ILLIXR_AUDIO5SoundD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*), void (%"class.ILLIXR_AUDIO::Sound"*)* @_ZN12ILLIXR_AUDIO5SoundD2Ev
@_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32), void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32)* @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
@_ZN12ILLIXR_AUDIO7ABAudioD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*), void (%"class.ILLIXR_AUDIO::ABAudio"*)* @_ZN12ILLIXR_AUDIO7ABAudioD2Ev

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: uwtable
define void @_ZN8MIT_HRTFC2Ej(%class.MIT_HRTF* nocapture %this, i32 %i_sampleRate) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 0
  %i_sampleRate2.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  store i32 %i_sampleRate, i32* %i_sampleRate2.i, align 8, !tbaa !18
  %i_len.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  store i32 0, i32* %i_len.i, align 4, !tbaa !23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %call = tail call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %i_sampleRate)
  store i32 %call, i32* %i_len.i, align 4, !tbaa !23
  ret void
}

declare i32 @mit_hrtf_availability(i32, i32, i32) local_unnamed_addr #0

declare i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define zeroext i1 @_ZN8MIT_HRTF3getEffPPf(%class.MIT_HRTF* nocapture readonly %this, float %f_azimuth, float %f_elevation, float** nocapture readonly %pfHRTF) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %nAzimuth = alloca i32, align 4
  %nElevation = alloca i32, align 4
  %0 = bitcast i32* %nAzimuth to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24
  %sub = fsub float -0.000000e+00, %f_azimuth
  %call = tail call float @_Z16RadiansToDegreesf(float %sub)
  %conv = fptosi float %call to i32
  %cmp = icmp sgt i32 %conv, 180
  %sub2 = add nsw i32 %conv, -360
  %spec.select = select i1 %cmp, i32 %sub2, i32 %conv
  store i32 %spec.select, i32* %nAzimuth, align 4, !tbaa !26
  %1 = bitcast i32* %nElevation to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #24
  %call3 = tail call float @_Z16RadiansToDegreesf(float %f_elevation)
  %conv4 = fptosi float %call3 to i32
  store i32 %conv4, i32* %nElevation, align 4, !tbaa !26
  %i_len = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  %2 = load i32, i32* %i_len, align 4, !tbaa !23
  %conv5 = zext i32 %2 to i64
  %cmp.i.i.i.i = icmp eq i32 %2, 0
  br i1 %cmp.i.i.i.i, label %invoke.cont10, label %cond.true.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %entry
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv5, 1
  %call2.i.i.i.i3.i.i71 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i)
          to label %invoke.cont unwind label %ehcleanup.thread

invoke.cont:                                      ; preds = %cond.true.i.i.i.i
  %3 = bitcast i8* %call2.i.i.i.i3.i.i71 to i16*
  %4 = shl nuw nsw i64 %conv5, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i71, i8 0, i64 %4, i1 false)
  %.pr = load i32, i32* %i_len, align 4, !tbaa !23
  %conv7 = zext i32 %.pr to i64
  %cmp.i.i.i.i76 = icmp eq i32 %.pr, 0
  br i1 %cmp.i.i.i.i76, label %invoke.cont10, label %cond.true.i.i.i.i77

cond.true.i.i.i.i77:                              ; preds = %invoke.cont
  %mul.i.i.i.i.i.i78 = shl nuw nsw i64 %conv7, 1
  %call2.i.i.i.i3.i.i88 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i78)
          to label %for.body.i.i.preheader.i.i.i.i.i85 unwind label %_ZNSt6vectorIsSaIsEED2Ev.exit95

for.body.i.i.preheader.i.i.i.i.i85:               ; preds = %cond.true.i.i.i.i77
  %5 = bitcast i8* %call2.i.i.i.i3.i.i88 to i16*
  %6 = shl nuw nsw i64 %conv7, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i88, i8 0, i64 %6, i1 false)
  br label %invoke.cont10

invoke.cont10:                                    ; preds = %for.body.i.i.preheader.i.i.i.i.i85, %invoke.cont, %entry
  %7 = phi i16* [ %5, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %8 = phi i8* [ %call2.i.i.i.i3.i.i88, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %9 = phi i16* [ %3, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %3, %invoke.cont ], [ null, %entry ]
  %10 = phi i8* [ %call2.i.i.i.i3.i.i71, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %call2.i.i.i.i3.i.i71, %invoke.cont ], [ null, %entry ]
  %i_sampleRate = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  %11 = load i32, i32* %i_sampleRate, align 8, !tbaa !18
  %call19 = invoke i32 @mit_hrtf_get(i32* nonnull %nAzimuth, i32* nonnull %nElevation, i32 %11, i16* %9, i16* %7)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont10
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %invoke.cont18
  %12 = load i32, i32* %i_len, align 4, !tbaa !23
  %cmp24104 = icmp eq i32 %12, 0
  br i1 %cmp24104, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = load float*, float** %pfHRTF, align 8, !tbaa !27
  %arrayidx38 = getelementptr inbounds float*, float** %pfHRTF, i64 1
  %14 = load float*, float** %arrayidx38, align 8, !tbaa !27
  %15 = zext i32 %12 to i64
  %min.iters.check = icmp ult i32 %12, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %13, i64 %15
  %scevgep122 = getelementptr float, float* %14, i64 %15
  %bound0 = icmp ult float* %13, %scevgep122
  %bound1 = icmp ult float* %14, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %15, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %16 = getelementptr inbounds i16, i16* %9, i64 %index
  %17 = bitcast i16* %16 to <4 x i16>*
  %wide.load = load <4 x i16>, <4 x i16>* %17, align 2, !tbaa !29, !alias.scope !31
  %18 = sitofp <4 x i16> %wide.load to <4 x float>
  %19 = fdiv <4 x float> %18, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %20 = getelementptr inbounds float, float* %13, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !36, !noalias !38
  %22 = getelementptr inbounds i16, i16* %7, i64 %index
  %23 = bitcast i16* %22 to <4 x i16>*
  %wide.load124 = load <4 x i16>, <4 x i16>* %23, align 2, !tbaa !29, !alias.scope !40
  %24 = sitofp <4 x i16> %wide.load124 to <4 x float>
  %25 = fdiv <4 x float> %24, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %26 = getelementptr inbounds float, float* %14, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !38
  %index.next = add i64 %index, 4
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !42

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %15
  br i1 %cmp.n, label %if.then.i.i.i74, label %for.body.preheader

ehcleanup.thread:                                 ; preds = %cond.true.i.i.i.i
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  br label %ehcleanup56

_ZNSt6vectorIsSaIsEED2Ev.exit95:                  ; preds = %cond.true.i.i.i.i77
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i3.i.i71) #24
  br label %ehcleanup56

lpad17:                                           ; preds = %invoke.cont10
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %tobool.i.i.i = icmp eq i16* %7, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIsSaIsEED2Ev.exit, label %if.then.i.i.i

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i91 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv
  %35 = load i16, i16* %add.ptr.i91, align 2, !tbaa !29
  %conv29 = sitofp i16 %35 to float
  %div = fdiv float %conv29, 3.276700e+04
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  store float %div, float* %arrayidx31, align 4, !tbaa !34
  %add.ptr.i = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %36 = load i16, i16* %add.ptr.i, align 2, !tbaa !29
  %conv36 = sitofp i16 %36 to float
  %div37 = fdiv float %conv36, 3.276700e+04
  %arrayidx40 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  store float %div37, float* %arrayidx40, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp24 = icmp ult i64 %indvars.iv.next, %15
  br i1 %cmp24, label %for.body, label %if.then.i.i.i74, !llvm.loop !44

cleanup:                                          ; preds = %for.cond.preheader, %invoke.cont18
  %retval.0 = phi i1 [ false, %invoke.cont18 ], [ true, %for.cond.preheader ]
  %tobool.i.i.i73 = icmp eq i16* %7, null
  br i1 %tobool.i.i.i73, label %_ZNSt6vectorIsSaIsEED2Ev.exit75, label %if.then.i.i.i74

if.then.i.i.i74:                                  ; preds = %cleanup, %for.body, %middle.block
  %retval.0119 = phi i1 [ %retval.0, %cleanup ], [ true, %middle.block ], [ true, %for.body ]
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75

_ZNSt6vectorIsSaIsEED2Ev.exit75:                  ; preds = %if.then.i.i.i74, %cleanup
  %retval.0120 = phi i1 [ %retval.0, %cleanup ], [ %retval.0119, %if.then.i.i.i74 ]
  %tobool.i.i.i73.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i73.1, label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1, label %if.then.i.i.i74.1

if.then.i.i.i:                                    ; preds = %lpad17
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit

_ZNSt6vectorIsSaIsEED2Ev.exit:                    ; preds = %if.then.i.i.i, %lpad17
  %tobool.i.i.i.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i.1, label %ehcleanup56, label %if.then.i.i.i.1

ehcleanup56:                                      ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIsSaIsEED2Ev.exit, %_ZNSt6vectorIsSaIsEED2Ev.exit95, %ehcleanup.thread
  %.sink = phi { i8*, i32 } [ %31, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %29, %ehcleanup.thread ], [ %33, %if.then.i.i.i.1 ], [ %33, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %exn.slot.1 = phi i8* [ %32, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %30, %ehcleanup.thread ], [ %34, %if.then.i.i.i.1 ], [ %34, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %37 = extractvalue { i8*, i32 } %.sink, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val61 = insertvalue { i8*, i32 } %lpad.val, i32 %37, 1
  resume { i8*, i32 } %lpad.val61

if.then.i.i.i74.1:                                ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1

_ZNSt6vectorIsSaIsEED2Ev.exit75.1:                ; preds = %if.then.i.i.i74.1, %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  ret i1 %retval.0120

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %ehcleanup56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare float @_Z16RadiansToDegreesf(float) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @mit_hrtf_get(i32*, i32*, i32, i16*, i16*) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14CAmbisonicBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 0, i32* %m_nOrder, align 8, !tbaa !45
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 0, i8* %m_b3D, align 4, !tbaa !48
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 0, i32* %m_nChannelCount, align 8, !tbaa !49
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 5
  store i8 0, i8* %m_bOpt, align 4, !tbaa !50
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase8GetOrderEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nOrder, align 8, !tbaa !45
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN14CAmbisonicBase9GetHeightEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  %0 = load i8, i8* %m_b3D, align 4, !tbaa !48, !range !51
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase15GetChannelCountEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nChannelCount, align 8, !tbaa !49
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* nocapture %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 {
entry:
  %frombool = zext i1 %b3D to i8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 %nOrder, i32* %m_nOrder, align 8, !tbaa !45
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 %frombool, i8* %m_b3D, align 4, !tbaa !48
  %call = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 %call, i32* %m_nChannelCount, align 8, !tbaa !49
  ret i1 true
}

declare i32 @_Z17OrderToComponentsjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %fDistance = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false)
  store float 1.000000e+00, float* %fDistance, align 8, !tbaa !52
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float 1.000000e+00, float* %m_fGain, align 4, !tbaa !56
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp5 = alloca float, align 4
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !48
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !49
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %conv = zext i32 %call.i to i64
  %3 = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp, align 4, !tbaa !34
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !57
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !60
  %sub.ptr.sub.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff, float* %9, i64 %sub.i, float* nonnull dereferenceable(4) %ref.tmp)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.else.i:                                        ; preds = %entry
  %cmp8.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp8.i, label %if.then9.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.then9.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit:            ; preds = %if.then9.i, %if.else.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !45
  %add = add i32 %10, 1
  %conv4 = zext i32 %add to i64
  %11 = bitcast float* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5, align 4, !tbaa !34
  %_M_finish.i.i6 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !57
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !60
  %sub.ptr.sub.i.i7 = sub i64 %13, %15
  %sub.ptr.div.i.i8 = ashr exact i64 %sub.ptr.sub.i.i7, 2
  %cmp.i9 = icmp ult i64 %sub.ptr.div.i.i8, %conv4
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9, label %if.then.i11, label %if.else.i13

if.then.i11:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %17 = inttoptr i64 %13 to float*
  %sub.i10 = sub nsw i64 %conv4, %sub.ptr.div.i.i8
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights, float* %17, i64 %sub.i10, float* nonnull dereferenceable(4) %ref.tmp5)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.else.i13:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %cmp8.i12 = icmp ugt i64 %sub.ptr.div.i.i8, %conv4
  br i1 %cmp8.i12, label %if.then9.i15, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.then9.i15:                                     ; preds = %if.else.i13
  %add.ptr.i14 = getelementptr inbounds float, float* %16, i64 %conv4
  store float* %add.ptr.i14, float** %_M_finish.i.i6, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16:          ; preds = %if.then9.i15, %if.else.i13, %if.then.i11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicSource5ResetEv(%class.CAmbisonicSource* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* readonly %this) unnamed_addr #9 align 2 {
entry:
  %fAzimuth = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 0
  %0 = load float, float* %fAzimuth, align 8, !tbaa !61
  %call = tail call float @cosf(float %0) #24
  %1 = load float, float* %fAzimuth, align 8, !tbaa !61
  %call4 = tail call float @sinf(float %1) #24
  %fElevation = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 1
  %2 = load float, float* %fElevation, align 4, !tbaa !62
  %call6 = tail call float @cosf(float %2) #24
  %3 = load float, float* %fElevation, align 4, !tbaa !62
  %call9 = tail call float @sinf(float %3) #24
  %4 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul = fmul float %4, 2.000000e+00
  %call12 = tail call float @cosf(float %mul) #24
  %5 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul15 = fmul float %5, 2.000000e+00
  %call16 = tail call float @sinf(float %mul15) #24
  %6 = load float, float* %fElevation, align 4, !tbaa !62
  %mul19 = fmul float %6, 2.000000e+00
  %call20 = tail call float @sinf(float %mul19) #24
  %7 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 4, !tbaa !48, !range !51
  %tobool = icmp eq i8 %8, 0
  %9 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !34
  %_M_start.i420 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i420, align 8, !tbaa !60
  %14 = bitcast float* %13 to i32*
  store i32 %12, i32* %14, align 4, !tbaa !34
  %15 = load i32, i32* %9, align 8, !tbaa !45
  %cmp218 = icmp eq i32 %15, 0
  br i1 %tobool, label %if.then211, label %if.then21

if.then21:                                        ; preds = %entry
  br i1 %cmp218, label %if.end277, label %if.end45

if.end45:                                         ; preds = %if.then21
  %mul28 = fmul float %call4, %call6
  %add.ptr.i419 = getelementptr inbounds float, float* %10, i64 1
  %16 = load float, float* %add.ptr.i419, align 4, !tbaa !34
  %mul31 = fmul float %mul28, %16
  %add.ptr.i417 = getelementptr inbounds float, float* %13, i64 1
  store float %mul31, float* %add.ptr.i417, align 4, !tbaa !34
  %17 = load float, float* %add.ptr.i419, align 4, !tbaa !34
  %mul36 = fmul float %call9, %17
  %add.ptr.i413 = getelementptr inbounds float, float* %13, i64 2
  store float %mul36, float* %add.ptr.i413, align 4, !tbaa !34
  %mul39 = fmul float %call, %call6
  %18 = load float, float* %add.ptr.i419, align 4, !tbaa !34
  %mul42 = fmul float %mul39, %18
  %add.ptr.i409 = getelementptr inbounds float, float* %13, i64 3
  store float %mul42, float* %add.ptr.i409, align 4, !tbaa !34
  %cmp47 = icmp eq i32 %15, 1
  br i1 %cmp47, label %if.end277, label %if.end104

if.end104:                                        ; preds = %if.end45
  %square332 = fmul float %call6, %call6
  %mul51 = fmul float %square332, %call16
  %conv = fpext float %mul51 to double
  %mul52 = fmul double %conv, 0x3FEBB67AE8584CAA
  %add.ptr.i407 = getelementptr inbounds float, float* %10, i64 2
  %19 = load float, float* %add.ptr.i407, align 4, !tbaa !34
  %conv55 = fpext float %19 to double
  %mul56 = fmul double %mul52, %conv55
  %conv57 = fptrunc double %mul56 to float
  %add.ptr.i405 = getelementptr inbounds float, float* %13, i64 4
  store float %conv57, float* %add.ptr.i405, align 4, !tbaa !34
  %mul62 = fmul float %call4, %call20
  %conv63 = fpext float %mul62 to double
  %mul64 = fmul double %conv63, 0x3FEBB67AE8584CAA
  %20 = load float, float* %add.ptr.i407, align 4, !tbaa !34
  %conv67 = fpext float %20 to double
  %mul68 = fmul double %mul64, %conv67
  %conv69 = fptrunc double %mul68 to float
  %add.ptr.i401 = getelementptr inbounds float, float* %13, i64 5
  store float %conv69, float* %add.ptr.i401, align 4, !tbaa !34
  %square333 = fmul float %call9, %call9
  %mul73 = fmul float %square333, 1.500000e+00
  %sub = fadd float %mul73, -5.000000e-01
  %21 = load float, float* %add.ptr.i407, align 4, !tbaa !34
  %mul76 = fmul float %sub, %21
  %add.ptr.i397 = getelementptr inbounds float, float* %13, i64 6
  store float %mul76, float* %add.ptr.i397, align 4, !tbaa !34
  %mul81 = fmul float %call, %call20
  %conv82 = fpext float %mul81 to double
  %mul83 = fmul double %conv82, 0x3FEBB67AE8584CAA
  %22 = load float, float* %add.ptr.i407, align 4, !tbaa !34
  %conv86 = fpext float %22 to double
  %mul87 = fmul double %mul83, %conv86
  %conv88 = fptrunc double %mul87 to float
  %add.ptr.i393 = getelementptr inbounds float, float* %13, i64 7
  store float %conv88, float* %add.ptr.i393, align 4, !tbaa !34
  %mul94 = fmul float %square332, %call12
  %conv95 = fpext float %mul94 to double
  %mul96 = fmul double %conv95, 0x3FEBB67AE8584CAA
  %23 = load float, float* %add.ptr.i407, align 4, !tbaa !34
  %conv99 = fpext float %23 to double
  %mul100 = fmul double %mul96, %conv99
  %conv101 = fptrunc double %mul100 to float
  %add.ptr.i389 = getelementptr inbounds float, float* %13, i64 8
  store float %conv101, float* %add.ptr.i389, align 4, !tbaa !34
  %cmp106 = icmp ugt i32 %15, 2
  br i1 %cmp106, label %if.then107, label %if.end277

if.then107:                                       ; preds = %if.end104
  %24 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul111 = fmul float %24, 3.000000e+00
  %call112 = tail call float @sinf(float %mul111) #24
  %call113 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul114 = fmul float %call112, %call113
  %conv115 = fpext float %mul114 to double
  %mul116 = fmul double %conv115, 0x3FE94C583ADA5B53
  %25 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i387 = getelementptr inbounds float, float* %25, i64 3
  %26 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %conv119 = fpext float %26 to double
  %mul120 = fmul double %mul116, %conv119
  %conv121 = fptrunc double %mul120 to float
  %27 = load float*, float** %_M_start.i420, align 8, !tbaa !60
  %add.ptr.i385 = getelementptr inbounds float, float* %27, i64 9
  store float %conv121, float* %add.ptr.i385, align 4, !tbaa !34
  %mul126 = fmul float %call9, %call16
  %mul128 = fmul float %square332, %mul126
  %conv129 = fpext float %mul128 to double
  %mul130 = fmul double %conv129, 0x3FFEFBDEB14F4EDA
  %28 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %conv133 = fpext float %28 to double
  %mul134 = fmul double %mul130, %conv133
  %conv135 = fptrunc double %mul134 to float
  %add.ptr.i381 = getelementptr inbounds float, float* %27, i64 10
  store float %conv135, float* %add.ptr.i381, align 4, !tbaa !34
  %mul141 = fmul float %square333, 5.000000e+00
  %sub142 = fadd float %mul141, -1.000000e+00
  %mul143 = fmul float %mul28, %sub142
  %conv144 = fpext float %mul143 to double
  %mul145 = fmul double %conv144, 0x3FE3988E1409212E
  %29 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %conv148 = fpext float %29 to double
  %mul149 = fmul double %mul145, %conv148
  %conv150 = fptrunc double %mul149 to float
  %add.ptr.i377 = getelementptr inbounds float, float* %27, i64 11
  store float %conv150, float* %add.ptr.i377, align 4, !tbaa !34
  %sub155 = fadd float %mul141, -3.000000e+00
  %mul156 = fmul float %call9, %sub155
  %mul157 = fmul float %mul156, 5.000000e-01
  %30 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %mul160 = fmul float %mul157, %30
  %add.ptr.i373 = getelementptr inbounds float, float* %27, i64 12
  store float %mul160, float* %add.ptr.i373, align 4, !tbaa !34
  %mul168 = fmul float %mul39, %sub142
  %conv169 = fpext float %mul168 to double
  %mul170 = fmul double %conv169, 0x3FE3988E1409212E
  %31 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %conv173 = fpext float %31 to double
  %mul174 = fmul double %mul170, %conv173
  %conv175 = fptrunc double %mul174 to float
  %add.ptr.i369 = getelementptr inbounds float, float* %27, i64 13
  store float %conv175, float* %add.ptr.i369, align 4, !tbaa !34
  %mul180 = fmul float %call9, %call12
  %mul182 = fmul float %square332, %mul180
  %conv183 = fpext float %mul182 to double
  %mul184 = fmul double %conv183, 0x3FFEFBDEB14F4EDA
  %32 = load float, float* %add.ptr.i387, align 4, !tbaa !34
  %conv187 = fpext float %32 to double
  %mul188 = fmul double %mul184, %conv187
  %conv189 = fptrunc double %mul188 to float
  %add.ptr.i365 = getelementptr inbounds float, float* %27, i64 14
  store float %conv189, float* %add.ptr.i365, align 4, !tbaa !34
  %33 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul195 = fmul float %33, 3.000000e+00
  %call196 = tail call float @cosf(float %mul195) #24
  %call197 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul198 = fmul float %call196, %call197
  %conv199 = fpext float %mul198 to double
  %mul200 = fmul double %conv199, 0x3FE94C583ADA5B53
  %34 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i363 = getelementptr inbounds float, float* %34, i64 3
  %35 = load float, float* %add.ptr.i363, align 4, !tbaa !34
  %conv203 = fpext float %35 to double
  %mul204 = fmul double %mul200, %conv203
  %conv205 = fptrunc double %mul204 to float
  %36 = load float*, float** %_M_start.i420, align 8, !tbaa !60
  %add.ptr.i361 = getelementptr inbounds float, float* %36, i64 15
  store float %conv205, float* %add.ptr.i361, align 4, !tbaa !34
  br label %if.end277

if.then211:                                       ; preds = %entry
  br i1 %cmp218, label %if.end277, label %if.end232

if.end232:                                        ; preds = %if.then211
  %mul220 = fmul float %call, %call6
  %add.ptr.i359 = getelementptr inbounds float, float* %10, i64 1
  %37 = load float, float* %add.ptr.i359, align 4, !tbaa !34
  %mul223 = fmul float %mul220, %37
  %add.ptr.i357 = getelementptr inbounds float, float* %13, i64 1
  store float %mul223, float* %add.ptr.i357, align 4, !tbaa !34
  %mul226 = fmul float %call4, %call6
  %38 = load float, float* %add.ptr.i359, align 4, !tbaa !34
  %mul229 = fmul float %mul226, %38
  %add.ptr.i353 = getelementptr inbounds float, float* %13, i64 2
  store float %mul229, float* %add.ptr.i353, align 4, !tbaa !34
  %cmp234 = icmp eq i32 %15, 1
  br i1 %cmp234, label %if.end277, label %if.end250

if.end250:                                        ; preds = %if.end232
  %square = fmul float %call6, %call6
  %mul237 = fmul float %square, %call12
  %add.ptr.i351 = getelementptr inbounds float, float* %10, i64 2
  %39 = load float, float* %add.ptr.i351, align 4, !tbaa !34
  %mul240 = fmul float %mul237, %39
  %add.ptr.i349 = getelementptr inbounds float, float* %13, i64 3
  store float %mul240, float* %add.ptr.i349, align 4, !tbaa !34
  %mul244 = fmul float %square, %call16
  %40 = load float, float* %add.ptr.i351, align 4, !tbaa !34
  %mul247 = fmul float %mul244, %40
  %add.ptr.i345 = getelementptr inbounds float, float* %13, i64 4
  store float %mul247, float* %add.ptr.i345, align 4, !tbaa !34
  %cmp252 = icmp ugt i32 %15, 2
  br i1 %cmp252, label %if.then253, label %if.end277

if.then253:                                       ; preds = %if.end250
  %41 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul256 = fmul float %41, 3.000000e+00
  %call257 = tail call float @cosf(float %mul256) #24
  %call258 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul259 = fmul float %call257, %call258
  %42 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i343 = getelementptr inbounds float, float* %42, i64 3
  %43 = load float, float* %add.ptr.i343, align 4, !tbaa !34
  %mul262 = fmul float %mul259, %43
  %44 = load float*, float** %_M_start.i420, align 8, !tbaa !60
  %add.ptr.i341 = getelementptr inbounds float, float* %44, i64 5
  store float %mul262, float* %add.ptr.i341, align 4, !tbaa !34
  %45 = load float, float* %fAzimuth, align 8, !tbaa !61
  %mul267 = fmul float %45, 3.000000e+00
  %call268 = tail call float @sinf(float %mul267) #24
  %call269 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul270 = fmul float %call268, %call269
  %46 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i339 = getelementptr inbounds float, float* %46, i64 3
  %47 = load float, float* %add.ptr.i339, align 4, !tbaa !34
  %mul273 = fmul float %mul270, %47
  %48 = load float*, float** %_M_start.i420, align 8, !tbaa !60
  %add.ptr.i337 = getelementptr inbounds float, float* %48, i64 6
  store float %mul273, float* %add.ptr.i337, align 4, !tbaa !34
  br label %if.end277

if.end277:                                        ; preds = %if.then253, %if.end250, %if.end232, %if.then211, %if.then107, %if.end104, %if.end45, %if.then21
  %49 = phi float* [ %13, %if.end232 ], [ %13, %if.end45 ], [ %13, %if.then211 ], [ %13, %if.then21 ], [ %13, %if.end250 ], [ %48, %if.then253 ], [ %13, %if.end104 ], [ %36, %if.then107 ]
  %50 = bitcast float* %49 to i8*
  %51 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  %52 = load i32, i32* %51, align 8, !tbaa !49
  %cmp278425 = icmp eq i32 %52, 0
  br i1 %cmp278425, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end277
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %53 = zext i32 %52 to i64
  %min.iters.check = icmp ult i32 %52, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %49, i64 %53
  %scevgep428 = getelementptr %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %scevgep428429 = bitcast float* %scevgep428 to i8*
  %uglygep = getelementptr i8, i8* %scevgep428429, i64 1
  %bound0 = icmp ugt i8* %uglygep, %50
  %bound1 = icmp ult float* %m_fGain, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %53, 4294967288
  %54 = add nsw i64 %n.vec, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %xtraiter = and i64 %56, 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %56, %xtraiter
  %58 = load float, float* %m_fGain, align 4, !tbaa !56, !alias.scope !63
  %59 = insertelement <4 x float> undef, float %58, i32 0
  %60 = shufflevector <4 x float> %59, <4 x float> undef, <4 x i32> zeroinitializer
  %61 = insertelement <4 x float> undef, float %58, i32 0
  %62 = shufflevector <4 x float> %61, <4 x float> undef, <4 x i32> zeroinitializer
  %63 = load float, float* %m_fGain, align 4, !tbaa !56, !alias.scope !63
  %64 = insertelement <4 x float> undef, float %63, i32 0
  %65 = shufflevector <4 x float> %64, <4 x float> undef, <4 x i32> zeroinitializer
  %66 = insertelement <4 x float> undef, float %63, i32 0
  %67 = shufflevector <4 x float> %66, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %68 = getelementptr inbounds float, float* %49, i64 %index
  %69 = bitcast float* %68 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %69, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  %wide.load431 = load <4 x float>, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %72 = fmul <4 x float> %60, %wide.load
  %73 = fmul <4 x float> %62, %wide.load431
  %74 = bitcast float* %68 to <4 x float>*
  store <4 x float> %72, <4 x float>* %74, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %75 = bitcast float* %70 to <4 x float>*
  store <4 x float> %73, <4 x float>* %75, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %index.next = or i64 %index, 8
  %76 = getelementptr inbounds float, float* %49, i64 %index.next
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load431.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %80 = fmul <4 x float> %65, %wide.load.1
  %81 = fmul <4 x float> %67, %wide.load431.1
  %82 = bitcast float* %76 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %83 = bitcast float* %78 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !68

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %84 = load float, float* %m_fGain, align 4, !tbaa !56, !alias.scope !63
  %85 = insertelement <4 x float> undef, float %84, i32 0
  %86 = shufflevector <4 x float> %85, <4 x float> undef, <4 x i32> zeroinitializer
  %87 = insertelement <4 x float> undef, float %84, i32 0
  %88 = shufflevector <4 x float> %87, <4 x float> undef, <4 x i32> zeroinitializer
  %89 = getelementptr inbounds float, float* %49, i64 %index.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load431.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %93 = fmul <4 x float> %86, %wide.load.epil
  %94 = fmul <4 x float> %88, %wide.load431.epil
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !66, !noalias !63
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %53
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %if.end277
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %97 = load float, float* %m_fGain, align 4, !tbaa !56
  %add.ptr.i = getelementptr inbounds float, float* %49, i64 %indvars.iv
  %98 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %mul282 = fmul float %97, %98
  store float %mul282, float* %add.ptr.i, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp278 = icmp ult i64 %indvars.iv.next, %53
  br i1 %cmp278, label %for.body, label %for.cond.cleanup, !llvm.loop !69
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* nocapture %this, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) unnamed_addr #11 align 2 {
entry:
  %polPosition.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %polPosition.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx to <2 x float>*
  store <2 x float> %polPosition.coerce0, <2 x float>* %polPosition.sroa.0.0..sroa_cast, align 8
  %polPosition.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  store float %polPosition.coerce1, float* %polPosition.sroa.2.0..sroa_idx3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly uwtable
define { <2 x float>, float } @_ZN16CAmbisonicSource11GetPositionEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %retval.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %retval.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %retval.sroa.0.0..sroa_idx to <2 x float>*
  %retval.sroa.0.0.copyload = load <2 x float>, <2 x float>* %retval.sroa.0.0..sroa_cast, align 8
  %retval.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %retval.sroa.2.0.copyload = load float, float* %retval.sroa.2.0..sroa_idx3, align 8
  %.fca.0.insert = insertvalue { <2 x float>, float } undef, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, float } %.fca.0.insert, float %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, float } %.fca.1.insert
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetOrderWeightEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder, float %fWeight) unnamed_addr #12 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !34
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource17SetOrderWeightAllEf(%class.CAmbisonicSource* nocapture readonly %this, float %fWeight) unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !45
  %cmp6 = icmp eq i32 %1, -1
  br i1 %cmp6, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add = add nuw i32 %1, 1
  %3 = zext i32 %add to i64
  %4 = icmp ugt i64 %3, 1
  %umax = select i1 %4, i64 %3, i64 1
  %min.iters.check = icmp ult i64 %umax, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %umax, 4294967288
  %broadcast.splatinsert9 = insertelement <4 x float> undef, float %fWeight, i32 0
  %broadcast.splat10 = shufflevector <4 x float> %broadcast.splatinsert9, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert11 = insertelement <4 x float> undef, float %fWeight, i32 0
  %broadcast.splat12 = shufflevector <4 x float> %broadcast.splatinsert11, <4 x float> undef, <4 x i32> zeroinitializer
  %5 = add nsw i64 %n.vec, -8
  %6 = lshr exact i64 %5, 3
  %7 = add nuw nsw i64 %6, 1
  %xtraiter = and i64 %7, 7
  %8 = icmp ult i64 %5, 56
  br i1 %8, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %7, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.7, %vector.body ]
  %9 = getelementptr inbounds float, float* %2, i64 %index
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %10, align 4, !tbaa !34
  %11 = getelementptr inbounds float, float* %9, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %12, align 4, !tbaa !34
  %index.next = or i64 %index, 8
  %13 = getelementptr inbounds float, float* %2, i64 %index.next
  %14 = bitcast float* %13 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %14, align 4, !tbaa !34
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %16, align 4, !tbaa !34
  %index.next.1 = or i64 %index, 16
  %17 = getelementptr inbounds float, float* %2, i64 %index.next.1
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %18, align 4, !tbaa !34
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %20, align 4, !tbaa !34
  %index.next.2 = or i64 %index, 24
  %21 = getelementptr inbounds float, float* %2, i64 %index.next.2
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %22, align 4, !tbaa !34
  %23 = getelementptr inbounds float, float* %21, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %24, align 4, !tbaa !34
  %index.next.3 = or i64 %index, 32
  %25 = getelementptr inbounds float, float* %2, i64 %index.next.3
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %26, align 4, !tbaa !34
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %28, align 4, !tbaa !34
  %index.next.4 = or i64 %index, 40
  %29 = getelementptr inbounds float, float* %2, i64 %index.next.4
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %30, align 4, !tbaa !34
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %32, align 4, !tbaa !34
  %index.next.5 = or i64 %index, 48
  %33 = getelementptr inbounds float, float* %2, i64 %index.next.5
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %34, align 4, !tbaa !34
  %35 = getelementptr inbounds float, float* %33, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %36, align 4, !tbaa !34
  %index.next.6 = or i64 %index, 56
  %37 = getelementptr inbounds float, float* %2, i64 %index.next.6
  %38 = bitcast float* %37 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %38, align 4, !tbaa !34
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %40, align 4, !tbaa !34
  %index.next.7 = add i64 %index, 64
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !70

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body.epil ], [ %xtraiter, %middle.block.unr-lcssa ]
  %41 = getelementptr inbounds float, float* %2, i64 %index.epil
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %broadcast.splat10, <4 x float>* %42, align 4, !tbaa !34
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %broadcast.splat12, <4 x float>* %44, align 4, !tbaa !34
  %index.next.epil = add i64 %index.epil, 8
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !71

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %umax, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %2, i64 %indvars.iv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !73
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetCoefficientEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel, float %fCoeff) unnamed_addr #12 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fCoeff, float* %add.ptr.i, align 4, !tbaa !34
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetOrderWeightEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !34
  ret float %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel) unnamed_addr #6 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !34
  ret float %1
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource7SetGainEf(%class.CAmbisonicSource* nocapture %this, float %fGain) unnamed_addr #5 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float %fGain, float* %m_fGain, align 4, !tbaa !56
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource7GetGainEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %0 = load float, float* %m_fGain, align 4, !tbaa !56
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormatC2Ev(%class.CBFormat* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSamples to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN8CBFormat14GetSampleCountEv(%class.CBFormat* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleCount) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !48
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !49
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  store i32 %nSampleCount, i32* %m_nSamples, align 8, !tbaa !75
  %mul = mul i32 %call.i, %nSampleCount
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  store i32 %mul, i32* %m_nDataLength, align 4, !tbaa !79
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3
  %conv = zext i32 %mul to i64
  %_M_finish.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish.i.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !57
  %5 = bitcast %"class.std::vector.0"* %m_pfData to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !60
  %sub.ptr.sub.i.i = sub i64 %4, %6
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %7 = inttoptr i64 %6 to float*
  %8 = inttoptr i64 %6 to i8*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfData, i64 %sub.i)
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %m_pfData to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !60
  %.pre33 = load i32, i32* %m_nDataLength, align 4, !tbaa !79
  %.pre35 = zext i32 %.pre33 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %conv9.pre-phi = phi i64 [ %.pre35, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ]
  %9 = phi i8* [ %.pre, %if.then.i ], [ %8, %if.else.i ], [ %8, %if.then5.i ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %m_pfData, i64 0, i32 0, i32 0, i32 0
  %mul10 = shl nuw nsw i64 %conv9.pre-phi, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %mul10, i1 false)
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4
  %10 = load i32, i32* %2, align 8, !tbaa !49
  %conv12 = zext i32 %10 to i64
  %11 = shl nuw nsw i64 %conv12, 3
  %call13 = tail call i8* @_Znam(i64 %11) #25
  %12 = ptrtoint i8* %call13 to i64
  %13 = bitcast %"class.std::unique_ptr"* %m_ppfChannels to i64*
  %14 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %m_ppfChannels, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load float**, float*** %14, align 8, !tbaa !27
  store i64 %12, i64* %13, align 8, !tbaa !27
  %cmp.i30 = icmp eq float** %15, null
  br i1 %cmp.i30, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i:       ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %16 = bitcast float** %15 to i8*
  tail call void @_ZdaPv(i8* %16) #26
  %.pre34 = load i32, i32* %2, align 8, !tbaa !49
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i, %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %17 = phi i32 [ %10, %_ZNSt6vectorIfSaIfEE6resizeEm.exit ], [ %.pre34, %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i ]
  %cmp31 = icmp eq i32 %17, 0
  br i1 %cmp31, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
  %18 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %19 = zext i32 %17 to i64
  %20 = add nsw i64 %19, -1
  %xtraiter = and i64 %19, 3
  %21 = icmp ult i64 %20, 3
  br i1 %21, label %cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub nsw i64 %19, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %for.body ]
  %22 = trunc i64 %indvars.iv to i32
  %mul17 = mul i32 %18, %22
  %conv18 = zext i32 %mul17 to i64
  %23 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i29 = getelementptr inbounds float, float* %23, i64 %conv18
  %24 = load float**, float*** %14, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %24, i64 %indvars.iv
  store float* %add.ptr.i29, float** %arrayidx.i, align 8, !tbaa !27
  %indvars.iv.next = or i64 %indvars.iv, 1
  %25 = trunc i64 %indvars.iv.next to i32
  %mul17.1 = mul i32 %18, %25
  %conv18.1 = zext i32 %mul17.1 to i64
  %26 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i29.1 = getelementptr inbounds float, float* %26, i64 %conv18.1
  %27 = load float**, float*** %14, align 8, !tbaa !27
  %arrayidx.i.1 = getelementptr inbounds float*, float** %27, i64 %indvars.iv.next
  store float* %add.ptr.i29.1, float** %arrayidx.i.1, align 8, !tbaa !27
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %28 = trunc i64 %indvars.iv.next.1 to i32
  %mul17.2 = mul i32 %18, %28
  %conv18.2 = zext i32 %mul17.2 to i64
  %29 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i29.2 = getelementptr inbounds float, float* %29, i64 %conv18.2
  %30 = load float**, float*** %14, align 8, !tbaa !27
  %arrayidx.i.2 = getelementptr inbounds float*, float** %30, i64 %indvars.iv.next.1
  store float* %add.ptr.i29.2, float** %arrayidx.i.2, align 8, !tbaa !27
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %31 = trunc i64 %indvars.iv.next.2 to i32
  %mul17.3 = mul i32 %18, %31
  %conv18.3 = zext i32 %mul17.3 to i64
  %32 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i29.3 = getelementptr inbounds float, float* %32, i64 %conv18.3
  %33 = load float**, float*** %14, align 8, !tbaa !27
  %arrayidx.i.3 = getelementptr inbounds float*, float** %33, i64 %indvars.iv.next.2
  store float* %add.ptr.i29.3, float** %arrayidx.i.3, align 8, !tbaa !27
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %cleanup.loopexit.unr-lcssa ]
  %34 = trunc i64 %indvars.iv.epil to i32
  %mul17.epil = mul i32 %18, %34
  %conv18.epil = zext i32 %mul17.epil to i64
  %35 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i29.epil = getelementptr inbounds float, float* %35, i64 %conv18.epil
  %36 = load float**, float*** %14, align 8, !tbaa !27
  %arrayidx.i.epil = getelementptr inbounds float*, float** %36, i64 %indvars.iv.epil
  store float* %add.ptr.i29.epil, float** %arrayidx.i.epil, align 8, !tbaa !27
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.epil, !llvm.loop !80

cleanup:                                          ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat5ResetEv(%class.CBFormat* nocapture readonly %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !60
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %2 = load i32, i32* %m_nDataLength, align 4, !tbaa !79
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN8CBFormat7RefreshEv(%class.CBFormat* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat12InsertStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture readonly %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 %conv
  %1 = bitcast float** %arrayidx.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !27
  %3 = bitcast float* %pfData to i8*
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat13ExtractStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 {
entry:
  %0 = bitcast float* %pfData to i8*
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 %conv
  %2 = bitcast float** %arrayidx.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !27
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormataSERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !60
  %_M_start.i4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 3, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i4 to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !60
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %4 = load i32, i32* %m_nDataLength, align 4, !tbaa !79
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormateqERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !48, !range !51
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !48, !range !51
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !45
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !45
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !79
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !79
  %cmp9 = icmp eq i32 %8, %9
  br i1 %cmp9, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %if.else, %land.lhs.true7
  %retval.0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true7 ]
  ret i1 %retval.0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormatneERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !48, !range !51
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !48, !range !51
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !45
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !45
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %lor.lhs.false7, label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !79
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !79
  %cmp9 = icmp ne i32 %8, %9
  ret i1 %cmp9

return:                                           ; preds = %lor.lhs.false, %entry
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !27
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !34, !alias.scope !81
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !34, !alias.scope !81
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %21 = fadd <4 x float> %wide.load, %wide.load36
  %22 = fadd <4 x float> %wide.load35, %wide.load37
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !81
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !81
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %33 = fadd <4 x float> %wide.load.1, %wide.load36.1
  %34 = fadd <4 x float> %wide.load35.1, %wide.load37.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !86

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !34, !alias.scope !81
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !34, !alias.scope !81
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %45 = fadd <4 x float> %wide.load.epil, %wide.load36.epil
  %46 = fadd <4 x float> %wide.load35.epil, %wide.load37.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !84, !noalias !81
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !34
  %add.us = fadd float %49, %50
  store float %add.us, float* %arrayidx9.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !87

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !27
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !34, !alias.scope !88
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !34, !alias.scope !88
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %21 = fsub <4 x float> %wide.load36, %wide.load
  %22 = fsub <4 x float> %wide.load37, %wide.load35
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !88
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !88
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %33 = fsub <4 x float> %wide.load36.1, %wide.load.1
  %34 = fsub <4 x float> %wide.load37.1, %wide.load35.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !93

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !34, !alias.scope !88
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !34, !alias.scope !88
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %45 = fsub <4 x float> %wide.load36.epil, %wide.load.epil
  %46 = fsub <4 x float> %wide.load37.epil, %wide.load35.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !91, !noalias !88
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !34
  %sub.us = fsub float %50, %49
  store float %sub.us, float* %arrayidx9.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !94

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !27
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !34, !alias.scope !95
  %15 = getelementptr inbounds float, float* %13, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load35 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !34, !alias.scope !95
  %17 = getelementptr inbounds float, float* %12, i64 %index
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load36 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %19 = getelementptr inbounds float, float* %17, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load37 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %21 = fmul <4 x float> %wide.load, %wide.load36
  %22 = fmul <4 x float> %wide.load35, %wide.load37
  %23 = bitcast float* %17 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %24 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %index.next = or i64 %index, 8
  %25 = getelementptr inbounds float, float* %11, i64 %index.next
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !95
  %27 = getelementptr inbounds float, float* %25, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load35.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !95
  %29 = getelementptr inbounds float, float* %12, i64 %index.next
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load36.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %31 = getelementptr inbounds float, float* %29, i64 4
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load37.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %33 = fmul <4 x float> %wide.load.1, %wide.load36.1
  %34 = fmul <4 x float> %wide.load35.1, %wide.load37.1
  %35 = bitcast float* %29 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %36 = bitcast float* %31 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !100

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds float, float* %11, i64 %index.unr
  %38 = bitcast float* %37 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %38, align 4, !tbaa !34, !alias.scope !95
  %39 = getelementptr inbounds float, float* %37, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load35.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !34, !alias.scope !95
  %41 = getelementptr inbounds float, float* %12, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load36.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load37.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %45 = fmul <4 x float> %wide.load.epil, %wide.load36.epil
  %46 = fmul <4 x float> %wide.load35.epil, %wide.load37.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !98, !noalias !95
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %49 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %50 = load float, float* %arrayidx9.us, align 4, !tbaa !34
  %mul.us = fmul float %49, %50
  store float %mul.us, float* %arrayidx9.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !101

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !27
  %5 = zext i32 %2 to i64
  %6 = and i64 %5, 4294967292
  %7 = add nsw i64 %6, -4
  %8 = lshr exact i64 %7, 2
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %2, 4
  %n.vec = and i64 %5, 4294967292
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %11 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %12 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %scevgep = getelementptr float, float* %12, i64 %5
  %scevgep32 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %12, %scevgep32
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %13 = getelementptr inbounds float, float* %11, i64 %index
  %14 = bitcast float* %13 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %14, align 4, !tbaa !34, !alias.scope !102
  %15 = getelementptr inbounds float, float* %12, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load34 = load <4 x float>, <4 x float>* %16, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  %17 = fdiv <4 x float> %wide.load34, %wide.load
  %18 = bitcast float* %15 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  %index.next = or i64 %index, 4
  %19 = getelementptr inbounds float, float* %11, i64 %index.next
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !34, !alias.scope !102
  %21 = getelementptr inbounds float, float* %12, i64 %index.next
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load34.1 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  %23 = fdiv <4 x float> %wide.load34.1, %wide.load.1
  %24 = bitcast float* %21 to <4 x float>*
  store <4 x float> %23, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  %index.next.1 = add i64 %index, 8
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !107

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %25 = getelementptr inbounds float, float* %11, i64 %index.unr
  %26 = bitcast float* %25 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !102
  %27 = getelementptr inbounds float, float* %12, i64 %index.unr
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load34.epil = load <4 x float>, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  %29 = fdiv <4 x float> %wide.load34.epil, %wide.load.epil
  %30 = bitcast float* %27 to <4 x float>*
  store <4 x float> %29, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !105, !noalias !102
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %arrayidx.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %31 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %arrayidx9.us = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %32 = load float, float* %arrayidx9.us, align 4, !tbaa !34
  %div.us = fdiv float %32, %31
  store float %div.us, float* %arrayidx9.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc10_crit_edge.us, !llvm.loop !108

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us, %middle.block
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !109
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !109
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %26 = fadd <4 x float> %14, %wide.load
  %27 = fadd <4 x float> %16, %wide.load25
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %34 = fadd <4 x float> %19, %wide.load.1
  %35 = fadd <4 x float> %21, %wide.load25.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !114

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !109
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %47 = fadd <4 x float> %40, %wide.load.epil
  %48 = fadd <4 x float> %42, %wide.load25.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !34, !alias.scope !112, !noalias !109
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !34
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %add.us = fadd float %51, %52
  store float %add.us, float* %arrayidx.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !115

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !116
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !116
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %26 = fsub <4 x float> %wide.load, %14
  %27 = fsub <4 x float> %wide.load25, %16
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %34 = fsub <4 x float> %wide.load.1, %19
  %35 = fsub <4 x float> %wide.load25.1, %21
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !121

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !116
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %47 = fsub <4 x float> %wide.load.epil, %40
  %48 = fsub <4 x float> %wide.load25.epil, %42
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !34, !alias.scope !119, !noalias !116
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !34
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %sub.us = fsub float %52, %51
  store float %sub.us, float* %arrayidx.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !122

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967288
  %6 = add nsw i64 %5, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 8
  %n.vec = and i64 %4, 4294967288
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !123
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = insertelement <4 x float> undef, float %12, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !123
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = insertelement <4 x float> undef, float %17, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %22 = getelementptr inbounds float, float* %10, i64 %index
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %24 = getelementptr inbounds float, float* %22, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load25 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %26 = fmul <4 x float> %14, %wide.load
  %27 = fmul <4 x float> %16, %wide.load25
  %28 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %27, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %10, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load25.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %34 = fmul <4 x float> %19, %wide.load.1
  %35 = fmul <4 x float> %21, %wide.load25.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !128

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !123
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %10, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load25.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %47 = fmul <4 x float> %40, %wide.load.epil
  %48 = fmul <4 x float> %42, %wide.load25.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !34, !alias.scope !126, !noalias !123
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %51 = load float, float* %fValue, align 4, !tbaa !34
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %52 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %mul.us = fmul float %51, %52
  store float %mul.us, float* %arrayidx.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !129

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 {
entry:
  %fValue23 = bitcast float* %fValue to i8*
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !75
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %4 = zext i32 %2 to i64
  %uglygep = getelementptr i8, i8* %fValue23, i64 1
  %5 = and i64 %4, 4294967292
  %6 = add nsw i64 %5, -4
  %7 = lshr exact i64 %6, 2
  %8 = add nuw nsw i64 %7, 1
  %min.iters.check = icmp ult i32 %2, 4
  %n.vec = and i64 %4, 4294967292
  %xtraiter = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  %unroll_iter = sub nuw nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %4
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %10 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %11 = bitcast float* %10 to i8*
  %scevgep = getelementptr float, float* %10, i64 %4
  %bound0 = icmp ugt i8* %uglygep, %11
  %bound1 = icmp ugt float* %scevgep, %fValue
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %12 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !130
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !130
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %18 = getelementptr inbounds float, float* %10, i64 %index
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %19, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  %20 = fdiv <4 x float> %wide.load, %14
  %21 = bitcast float* %18 to <4 x float>*
  store <4 x float> %20, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  %index.next = or i64 %index, 4
  %22 = getelementptr inbounds float, float* %10, i64 %index.next
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  %24 = fdiv <4 x float> %wide.load.1, %17
  %25 = bitcast float* %22 to <4 x float>*
  store <4 x float> %24, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  %index.next.1 = add i64 %index, 8
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !135

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %26 = load float, float* %fValue, align 4, !tbaa !34, !alias.scope !130
  %27 = insertelement <4 x float> undef, float %26, i32 0
  %28 = shufflevector <4 x float> %27, <4 x float> undef, <4 x i32> zeroinitializer
  %29 = getelementptr inbounds float, float* %10, i64 %index.unr
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  %31 = fdiv <4 x float> %wide.load.epil, %28
  %32 = bitcast float* %29 to <4 x float>*
  store <4 x float> %31, <4 x float>* %32, align 4, !tbaa !34, !alias.scope !133, !noalias !130
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %33 = load float, float* %fValue, align 4, !tbaa !34
  %arrayidx.us = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %34 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %div.us = fdiv float %34, %33
  store float %div.us, float* %arrayidx.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp3.us = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp3.us, label %for.body4.us, label %for.cond2.for.inc5_crit_edge.us, !llvm.loop !136

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us, %middle.block
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !52
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !60
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD0Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicEncoder* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !48
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !49
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !34
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !57
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp8.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp8.i.i, label %if.then9.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then9.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then9.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !45
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !34
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !57
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp8.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp8.i12.i, label %if.then9.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then9.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !57
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then9.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* readonly %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoder* nocapture readonly %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp22 = icmp eq i32 %1, 0
  %cmp320 = icmp eq i32 %nSamples, 0
  %or.cond = or i1 %cmp22, %cmp320
  br i1 %or.cond, label %for.end11, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %2 = zext i32 %1 to i64
  %.pre = load float*, float** %_M_start.i, align 8, !tbaa !60
  %.pre28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %wide.trip.count = zext i32 %nSamples to i64
  %scevgep31 = getelementptr float, float* %pfSrc, i64 %wide.trip.count
  %3 = and i64 %wide.trip.count, 4294967288
  %4 = add nsw i64 %3, -8
  %5 = lshr exact i64 %4, 3
  %6 = add nuw nsw i64 %5, 1
  %min.iters.check = icmp ult i32 %nSamples, 8
  %n.vec = and i64 %wide.trip.count, 4294967288
  %xtraiter = and i64 %6, 1
  %7 = icmp eq i64 %4, 0
  %unroll_iter = sub nuw nsw i64 %6, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  %xtraiter40 = and i64 %wide.trip.count, 3
  %lcmp.mod41 = icmp eq i64 %xtraiter40, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc9_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv26 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next27, %for.cond2.for.inc9_crit_edge.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv26
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre28, i64 %indvars.iv26
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us
  %9 = bitcast float* %8 to i8*
  %scevgep33 = getelementptr float, float* %.pre, i64 %indvars.iv26
  %scevgep3334 = bitcast float* %scevgep33 to i8*
  %uglygep = getelementptr i8, i8* %scevgep3334, i64 1
  %scevgep = getelementptr float, float* %8, i64 %wide.trip.count
  %bound0 = icmp ult float* %8, %scevgep31
  %bound1 = icmp ugt float* %scevgep, %pfSrc
  %found.conflict = and i1 %bound0, %bound1
  %bound035 = icmp ugt i8* %uglygep, %9
  %bound136 = icmp ult float* %add.ptr.i.us, %scevgep
  %found.conflict37 = and i1 %bound035, %bound136
  %conflict.rdx = or i1 %found.conflict, %found.conflict37
  br i1 %conflict.rdx, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %7, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %10 = load float, float* %add.ptr.i.us, align 4, !tbaa !34, !alias.scope !137
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %add.ptr.i.us, align 4, !tbaa !34, !alias.scope !137
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %pfSrc, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !140
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load39 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !140
  %24 = fmul <4 x float> %wide.load, %12
  %25 = fmul <4 x float> %wide.load39, %14
  %26 = getelementptr inbounds float, float* %8, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %24, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  store <4 x float> %25, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  %index.next = or i64 %index, 8
  %30 = getelementptr inbounds float, float* %pfSrc, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !140
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load39.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !140
  %34 = fmul <4 x float> %wide.load.1, %17
  %35 = fmul <4 x float> %wide.load39.1, %19
  %36 = getelementptr inbounds float, float* %8, i64 %index.next
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %34, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %35, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !145

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %40 = getelementptr inbounds float, float* %pfSrc, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !34, !alias.scope !140
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load39.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !34, !alias.scope !140
  %44 = load float, float* %add.ptr.i.us, align 4, !tbaa !34, !alias.scope !137
  %45 = insertelement <4 x float> undef, float %44, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = insertelement <4 x float> undef, float %44, i32 0
  %48 = shufflevector <4 x float> %47, <4 x float> undef, <4 x i32> zeroinitializer
  %49 = fmul <4 x float> %wide.load.epil, %46
  %50 = fmul <4 x float> %wide.load39.epil, %48
  %51 = getelementptr inbounds float, float* %8, i64 %index.unr
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %49, <4 x float>* %52, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %50, <4 x float>* %54, align 4, !tbaa !34, !alias.scope !142, !noalias !144
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  %55 = xor i64 %indvars.iv.ph, -1
  %56 = add nsw i64 %55, %wide.trip.count
  br i1 %lcmp.mod41, label %for.body4.us.prol.loopexit, label %for.body4.us.prol

for.body4.us.prol:                                ; preds = %for.body4.us.prol, %for.body4.us.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body4.us.prol ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.prol ], [ %xtraiter40, %for.body4.us.preheader ]
  %arrayidx.us.prol = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.prol
  %57 = load float, float* %arrayidx.us.prol, align 4, !tbaa !34
  %58 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul.us.prol = fmul float %57, %58
  %arrayidx8.us.prol = getelementptr inbounds float, float* %8, i64 %indvars.iv.prol
  store float %mul.us.prol, float* %arrayidx8.us.prol, align 4, !tbaa !34
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.prol.loopexit, label %for.body4.us.prol, !llvm.loop !146

for.body4.us.prol.loopexit:                       ; preds = %for.body4.us.prol, %for.body4.us.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body4.us.preheader ], [ %indvars.iv.next.prol, %for.body4.us.prol ]
  %59 = icmp ult i64 %56, 3
  br i1 %59, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ %indvars.iv.unr, %for.body4.us.prol.loopexit ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv
  %60 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %61 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul.us = fmul float %60, %61
  %arrayidx8.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  store float %mul.us, float* %arrayidx8.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next
  %62 = load float, float* %arrayidx.us.1, align 4, !tbaa !34
  %63 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul.us.1 = fmul float %62, %63
  %arrayidx8.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  store float %mul.us.1, float* %arrayidx8.us.1, align 4, !tbaa !34
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.1
  %64 = load float, float* %arrayidx.us.2, align 4, !tbaa !34
  %65 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul.us.2 = fmul float %64, %65
  %arrayidx8.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  store float %mul.us.2, float* %arrayidx8.us.2, align 4, !tbaa !34
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.2
  %66 = load float, float* %arrayidx.us.3, align 4, !tbaa !34
  %67 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul.us.3 = fmul float %66, %67
  %arrayidx8.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  store float %mul.us.3, float* %arrayidx8.us.3, align 4, !tbaa !34
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.3, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us, !llvm.loop !147

for.cond2.for.inc9_crit_edge.us:                  ; preds = %for.body4.us, %for.body4.us.prol.loopexit, %middle.block
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %cmp.us = icmp ult i64 %indvars.iv.next27, %2
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end11

for.end11:                                        ; preds = %for.cond2.for.inc9_crit_edge.us, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %2, align 8, !tbaa !49
  %3 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 5
  store i8 0, i8* %3, align 4, !tbaa !50
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %4 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !52
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !56
  %5 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = bitcast i32* %m_nSampleRate to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 36, i1 false)
  store float 5.000000e+00, float* %m_fRoomRadius, align 4, !tbaa !148
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float 0.000000e+00, float* %m_fInteriorGain, align 8, !tbaa !150
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float 0.000000e+00, float* %m_fExteriorGain, align 4, !tbaa !151
  store i32 1, i32* %0, align 8, !tbaa !45
  store i8 1, i8* %1, align 4, !tbaa !48
  %call.i.i.i6 = invoke i32 @_Z17OrderToComponentsjb(i32 1, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad

call.i.i.i.noexc:                                 ; preds = %entry
  store i32 %call.i.i.i6, i32* %2, align 8, !tbaa !49
  %conv.i.i = zext i32 %call.i.i.i6 to i64
  %7 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !34
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast float** %_M_finish.i.i.i.i to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !57
  %10 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i.i = sub i64 %9, %11
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %12 = inttoptr i64 %11 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %13 = inttoptr i64 %9 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %13, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %12, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %0, align 8, !tbaa !45
  %add.i.i = add i32 %14, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %15 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !34
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %16 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !57
  %18 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i.i = sub i64 %17, %19
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %20 = inttoptr i64 %19 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %21 = inttoptr i64 %17 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %21, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %call.i.noexc unwind label %lpad

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %call.i.noexc

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %20, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !57
  br label %call.i.noexc

call.i.noexc:                                     ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #24
  store i32 44100, i32* %m_nSampleRate, align 8, !tbaa !152
  %m_nDelayBufferLength.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 19230, i32* %m_nDelayBufferLength.i, align 4, !tbaa !153
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %22 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !154
  %tobool6.i = icmp eq float* %22, null
  br i1 %tobool6.i, label %if.end9.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %call.i.noexc
  %23 = bitcast float* %22 to i8*
  call void @_ZdaPv(i8* %23) #26
  %.pre = load i32, i32* %m_nDelayBufferLength.i, align 4, !tbaa !153
  %phitmp = zext i32 %.pre to i64
  %phitmp8 = shl nuw nsw i64 %phitmp, 2
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull.i, %call.i.noexc
  %24 = phi i64 [ %phitmp8, %delete.notnull.i ], [ 76920, %call.i.noexc ]
  %call12.i4 = invoke i8* @_Znam(i64 %24) #25
          to label %call12.i.noexc unwind label %lpad

call12.i.noexc:                                   ; preds = %if.end9.i
  %25 = bitcast float** %m_pfDelayBuffer.i to i8**
  store i8* %call12.i4, i8** %25, align 8, !tbaa !154
  %26 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %26, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable.i, i64 3
  %27 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn.i, align 8
  invoke void %27(%class.CAmbisonicEncoderDist* nonnull %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %call12.i.noexc
  ret void

lpad:                                             ; preds = %call12.i.noexc, %if.end9.i, %if.then.i11.i.i, %if.then.i.i.i, %entry
  %28 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %29 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %29, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %lpad
  %30 = bitcast float* %29 to i8*
  tail call void @_ZdlPv(i8* nonnull %30) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %lpad
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %31, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %32 = bitcast float* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %32) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  resume { i8*, i32 } %28
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !154
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %if.end
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD0Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !154
  %tobool.i = icmp eq float* %1, null
  br i1 %tobool.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %entry
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %if.end.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %if.end.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i.i = icmp eq float* %5, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN21CAmbisonicEncoderDistD2Ev.exit, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZN21CAmbisonicEncoderDistD2Ev.exit

_ZN21CAmbisonicEncoderDistD2Ev.exit:              ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %7 = bitcast %class.CAmbisonicEncoderDist* %this to i8*
  tail call void @_ZdlPv(i8* %7) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN21CAmbisonicEncoderDist9ConfigureEjbj(%class.CAmbisonicEncoderDist* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %frombool.i.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i.i, i8* %1, align 4, !tbaa !48
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 %call.i.i.i, i32* %2, align 8, !tbaa !49
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %conv.i.i = zext i32 %call.i.i.i to i64
  %3 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !34
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !57
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %9, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %entry
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %8, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !45
  %add.i.i = add i32 %10, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %11 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !34
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !57
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %17, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %16, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !57
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

_ZN17CAmbisonicEncoder9ConfigureEjbj.exit:        ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  store i32 %nSampleRate, i32* %m_nSampleRate, align 8, !tbaa !152
  %conv = uitofp i32 %nSampleRate to float
  %mul = fmul float %conv, 0x3FDBE82FA0000000
  %add = fadd float %mul, 5.000000e-01
  %conv5 = fptoui float %add to i32
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 %conv5, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %18 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !154
  %tobool6 = icmp eq float* %18, null
  br i1 %tobool6, label %if.end9, label %delete.notnull

delete.notnull:                                   ; preds = %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %19 = bitcast float* %18 to i8*
  call void @_ZdaPv(i8* %19) #26
  %.pre = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %20 = phi i32 [ %conv5, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit ], [ %.pre, %delete.notnull ]
  %conv11 = zext i32 %20 to i64
  %21 = shl nuw nsw i64 %conv11, 2
  %call12 = call i8* @_Znam(i64 %21) #25
  %22 = bitcast float** %m_pfDelayBuffer to i8**
  store i8* %call12, i8** %22, align 8, !tbaa !154
  %23 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable, i64 3
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn, align 8
  call void %24(%class.CAmbisonicEncoderDist* nonnull %this)
  ret i1 true
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist5ResetEv(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 {
entry:
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfDelayBuffer to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !154
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %2 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %3 = load float, float* %fDistance, align 8, !tbaa !52
  %div = fdiv float %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !152
  %conv2 = uitofp i32 %4 to float
  %mul3 = fmul float %div, %conv2
  %add = fadd float %mul3, 5.000000e-01
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %add to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !155
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub float %add, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !156
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  store i32 0, i32* %m_nIn, align 8, !tbaa !157
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  %add13 = sub i32 %5, %conv5
  %rem = urem i32 %add13, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !158
  %add16 = add nuw nsw i32 %rem, 1
  %rem18 = urem i32 %add16, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem18, i32* %m_nOutB, align 8, !tbaa !159
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7RefreshEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0) #24
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %1 = load float, float* %fDistance, align 8, !tbaa !52
  %2 = tail call float @llvm.fabs.f32(float %1)
  %3 = fpext float %2 to double
  %div = fdiv double %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !152
  %conv2 = uitofp i32 %4 to double
  %mul = fmul double %div, %conv2
  %conv3 = fptrunc double %mul to float
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %conv3 to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !155
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub float %conv3, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !156
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %5 = load i32, i32* %m_nIn, align 8, !tbaa !157
  %sub10 = sub i32 %5, %conv5
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  %add = add i32 %sub10, %6
  %rem = urem i32 %add, %6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !158
  %add13 = add nuw nsw i32 %rem, 1
  %rem15 = urem i32 %add13, %6
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem15, i32* %m_nOutB, align 8, !tbaa !159
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %7 = load float, float* %m_fRoomRadius, align 4, !tbaa !148
  %conv19 = fpext float %7 to double
  %cmp = fcmp ult float %2, %7
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %div25 = fdiv double %conv19, %3
  %div26 = fmul double %div25, 5.000000e-01
  %conv27 = fptrunc double %div26 to float
  br label %if.end

if.else:                                          ; preds = %entry
  %div34 = fdiv double %3, %conv19
  %sub35 = fsub double 2.000000e+00, %div34
  %div36 = fmul double %sub35, 5.000000e-01
  %conv37 = fptrunc double %div36 to float
  %div45 = fmul double %div34, 5.000000e-01
  %conv46 = fptrunc double %div45 to float
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %conv27.sink48 = phi float [ %conv37, %if.else ], [ %conv27, %if.then ]
  %conv27.sink = phi float [ %conv46, %if.else ], [ %conv27, %if.then ]
  %8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float %conv27.sink48, float* %8, align 8
  %9 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float %conv27.sink, float* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* nocapture %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 {
entry:
  %cmp62 = icmp eq i32 %nSamples, 0
  br i1 %cmp62, label %for.end44, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !154
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %_M_head_impl.i.i.i.i.i.i59 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %2 = load float**, float*** %_M_head_impl.i.i.i.i.i.i59, align 8, !tbaa !27
  %3 = load float*, float** %2, align 8, !tbaa !27
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  %4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !49
  %cmp1960 = icmp ugt i32 %5, 1
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !153
  %m_nIn.promoted = load i32, i32* %m_nIn, align 8, !tbaa !157
  %m_nOutA.promoted = load i32, i32* %m_nOutA, align 4, !tbaa !158
  %m_nOutB.promoted = load i32, i32* %m_nOutB, align 8, !tbaa !159
  %wide.trip.count = zext i32 %nSamples to i64
  br i1 %cmp1960, label %for.body.us.preheader, label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %7 = zext i32 %5 to i64
  %8 = add nsw i64 %7, -1
  %9 = add nsw i64 %7, -2
  %xtraiter = and i64 %8, 3
  %10 = icmp ult i64 %9, 3
  %unroll_iter = sub nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond18.for.end_crit_edge.us, %for.body.us.preheader
  %indvars.iv71 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next72, %for.cond18.for.end_crit_edge.us ]
  %rem4066.us = phi i32 [ %m_nOutB.promoted, %for.body.us.preheader ], [ %rem40.us, %for.cond18.for.end_crit_edge.us ]
  %rem3565.us = phi i32 [ %m_nOutA.promoted, %for.body.us.preheader ], [ %rem35.us, %for.cond18.for.end_crit_edge.us ]
  %rem64.us = phi i32 [ %m_nIn.promoted, %for.body.us.preheader ], [ %rem.us, %for.cond18.for.end_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv71
  %11 = bitcast float* %arrayidx.us to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !34
  %idxprom2.us = sext i32 %rem64.us to i64
  %arrayidx3.us = getelementptr inbounds float, float* %0, i64 %idxprom2.us
  %13 = bitcast float* %arrayidx3.us to i32*
  store i32 %12, i32* %13, align 4, !tbaa !34
  %idxprom5.us = sext i32 %rem3565.us to i64
  %arrayidx6.us = getelementptr inbounds float, float* %0, i64 %idxprom5.us
  %14 = load float, float* %arrayidx6.us, align 4, !tbaa !34
  %15 = load float, float* %m_fDelay, align 4, !tbaa !156
  %sub.us = fsub float 1.000000e+00, %15
  %mul.us = fmul float %14, %sub.us
  %idxprom8.us = sext i32 %rem4066.us to i64
  %arrayidx9.us = getelementptr inbounds float, float* %0, i64 %idxprom8.us
  %16 = load float, float* %arrayidx9.us, align 4, !tbaa !34
  %mul11.us = fmul float %15, %16
  %add.us = fadd float %mul.us, %mul11.us
  %17 = load float, float* %m_fInteriorGain, align 8, !tbaa !150
  %mul12.us = fmul float %17, %add.us
  %18 = load float, float* %1, align 4, !tbaa !34
  %mul13.us = fmul float %mul12.us, %18
  %arrayidx16.us = getelementptr inbounds float, float* %3, i64 %indvars.iv71
  store float %mul13.us, float* %arrayidx16.us, align 4, !tbaa !34
  %19 = load float, float* %m_fExteriorGain, align 4, !tbaa !151
  %mul17.us = fmul float %add.us, %19
  br i1 %10, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.body20.us:                                    ; preds = %for.body20.us, %for.body.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body20.us ], [ 1, %for.body.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body20.us ], [ %unroll_iter, %for.body.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %20 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  %mul23.us = fmul float %mul17.us, %20
  %arrayidx.i.us = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %21 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %arrayidx28.us = getelementptr inbounds float, float* %21, i64 %indvars.iv71
  store float %mul23.us, float* %arrayidx28.us, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.us.1 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next
  %22 = load float, float* %add.ptr.i.us.1, align 4, !tbaa !34
  %mul23.us.1 = fmul float %mul17.us, %22
  %arrayidx.i.us.1 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i.us.1, align 8, !tbaa !27
  %arrayidx28.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv71
  store float %mul23.us.1, float* %arrayidx28.us.1, align 4, !tbaa !34
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.us.2 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.1
  %24 = load float, float* %add.ptr.i.us.2, align 4, !tbaa !34
  %mul23.us.2 = fmul float %mul17.us, %24
  %arrayidx.i.us.2 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.1
  %25 = load float*, float** %arrayidx.i.us.2, align 8, !tbaa !27
  %arrayidx28.us.2 = getelementptr inbounds float, float* %25, i64 %indvars.iv71
  store float %mul23.us.2, float* %arrayidx28.us.2, align 4, !tbaa !34
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.us.3 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.2
  %26 = load float, float* %add.ptr.i.us.3, align 4, !tbaa !34
  %mul23.us.3 = fmul float %mul17.us, %26
  %arrayidx.i.us.3 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.2
  %27 = load float*, float** %arrayidx.i.us.3, align 8, !tbaa !27
  %arrayidx28.us.3 = getelementptr inbounds float, float* %27, i64 %indvars.iv71
  store float %mul23.us.3, float* %arrayidx28.us.3, align 4, !tbaa !34
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.cond18.for.end_crit_edge.us.unr-lcssa:        ; preds = %for.body20.us, %for.body.us
  %indvars.iv.unr = phi i64 [ 1, %for.body.us ], [ %indvars.iv.next.3, %for.body20.us ]
  br i1 %lcmp.mod, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil

for.body20.us.epil:                               ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body20.us.epil ], [ %indvars.iv.unr, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body20.us.epil ], [ %xtraiter, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %add.ptr.i.us.epil = getelementptr inbounds float, float* %1, i64 %indvars.iv.epil
  %28 = load float, float* %add.ptr.i.us.epil, align 4, !tbaa !34
  %mul23.us.epil = fmul float %mul17.us, %28
  %arrayidx.i.us.epil = getelementptr inbounds float*, float** %2, i64 %indvars.iv.epil
  %29 = load float*, float** %arrayidx.i.us.epil, align 8, !tbaa !27
  %arrayidx28.us.epil = getelementptr inbounds float, float* %29, i64 %indvars.iv71
  store float %mul23.us.epil, float* %arrayidx28.us.epil, align 4, !tbaa !34
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil, !llvm.loop !160

for.cond18.for.end_crit_edge.us:                  ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %add30.us = add nsw i32 %rem64.us, 1
  %rem.us = urem i32 %add30.us, %6
  %add33.us = add nsw i32 %rem3565.us, 1
  %rem35.us = urem i32 %add33.us, %6
  %add38.us = add nsw i32 %rem4066.us, 1
  %rem40.us = urem i32 %add38.us, %6
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %exitcond = icmp eq i64 %indvars.iv.next72, %wide.trip.count
  br i1 %exitcond, label %for.cond.for.end44_crit_edge, label %for.body.us

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body ], [ 0, %for.body.lr.ph ]
  %rem4066 = phi i32 [ %rem40, %for.body ], [ %m_nOutB.promoted, %for.body.lr.ph ]
  %rem3565 = phi i32 [ %rem35, %for.body ], [ %m_nOutA.promoted, %for.body.lr.ph ]
  %rem64 = phi i32 [ %rem, %for.body ], [ %m_nIn.promoted, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv73
  %30 = bitcast float* %arrayidx to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !34
  %idxprom2 = sext i32 %rem64 to i64
  %arrayidx3 = getelementptr inbounds float, float* %0, i64 %idxprom2
  %32 = bitcast float* %arrayidx3 to i32*
  store i32 %31, i32* %32, align 4, !tbaa !34
  %idxprom5 = sext i32 %rem3565 to i64
  %arrayidx6 = getelementptr inbounds float, float* %0, i64 %idxprom5
  %33 = load float, float* %arrayidx6, align 4, !tbaa !34
  %34 = load float, float* %m_fDelay, align 4, !tbaa !156
  %sub = fsub float 1.000000e+00, %34
  %mul = fmul float %33, %sub
  %idxprom8 = sext i32 %rem4066 to i64
  %arrayidx9 = getelementptr inbounds float, float* %0, i64 %idxprom8
  %35 = load float, float* %arrayidx9, align 4, !tbaa !34
  %mul11 = fmul float %34, %35
  %add = fadd float %mul, %mul11
  %36 = load float, float* %m_fInteriorGain, align 8, !tbaa !150
  %mul12 = fmul float %36, %add
  %37 = load float, float* %1, align 4, !tbaa !34
  %mul13 = fmul float %mul12, %37
  %arrayidx16 = getelementptr inbounds float, float* %3, i64 %indvars.iv73
  store float %mul13, float* %arrayidx16, align 4, !tbaa !34
  %add30 = add nsw i32 %rem64, 1
  %rem = urem i32 %add30, %6
  %add33 = add nsw i32 %rem3565, 1
  %rem35 = urem i32 %add33, %6
  %add38 = add nsw i32 %rem4066, 1
  %rem40 = urem i32 %add38, %6
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond76 = icmp eq i64 %indvars.iv.next74, %wide.trip.count
  br i1 %exitcond76, label %for.cond.for.end44_crit_edge, label %for.body

for.cond.for.end44_crit_edge:                     ; preds = %for.body, %for.cond18.for.end_crit_edge.us
  %rem40.lcssa = phi i32 [ %rem40.us, %for.cond18.for.end_crit_edge.us ], [ %rem40, %for.body ]
  %rem35.lcssa = phi i32 [ %rem35.us, %for.cond18.for.end_crit_edge.us ], [ %rem35, %for.body ]
  %rem.lcssa = phi i32 [ %rem.us, %for.cond18.for.end_crit_edge.us ], [ %rem, %for.body ]
  store i32 %rem.lcssa, i32* %m_nIn, align 8, !tbaa !157
  store i32 %rem35.lcssa, i32* %m_nOutA, align 4, !tbaa !158
  store i32 %rem40.lcssa, i32* %m_nOutB, align 8, !tbaa !159
  br label %for.end44

for.end44:                                        ; preds = %for.cond.for.end44_crit_edge, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN21CAmbisonicEncoderDist13SetRoomRadiusEf(%class.CAmbisonicEncoderDist* nocapture %this, float %fRoomRadius) local_unnamed_addr #5 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  store float %fRoomRadius, float* %m_fRoomRadius, align 4, !tbaa !148
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN21CAmbisonicEncoderDist13GetRoomRadiusEv(%class.CAmbisonicEncoderDist* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %0 = load float, float* %m_fRoomRadius, align 4, !tbaa !148
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  tail call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %m_orientation, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %5 = bitcast float** %m_pfTempSample to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  %6 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN11OrientationC2Efff(%class.Orientation* %this, float %fYaw, float %fPitch, float %fRoll) unnamed_addr #7 comdat align 2 {
entry:
  %fYaw2 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 0
  store float %fYaw, float* %fYaw2, align 4, !tbaa !161
  %fPitch3 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 1
  store float %fPitch, float* %fPitch3, align 4, !tbaa !163
  %fRoll4 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 2
  store float %fRoll, float* %fRoll4, align 4, !tbaa !164
  %call = tail call float @cosf(float %fYaw) #24
  %call5 = tail call float @sinf(float %fYaw) #24
  %call6 = tail call float @cosf(float %fRoll) #24
  %call7 = tail call float @sinf(float %fRoll) #24
  %call8 = tail call float @cosf(float %fPitch) #24
  %call9 = tail call float @sinf(float %fPitch) #24
  %mul = fmul float %call6, %call8
  %cmp = fcmp oeq float %mul, 1.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %fBeta = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0.000000e+00, float* %fBeta, align 4, !tbaa !165
  %fGamma = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma, align 4, !tbaa !166
  %conv = fpext float %call5 to double
  %conv10 = fpext float %call to double
  %call11 = tail call double @atan2(double %conv, double %conv10) #24
  %conv12 = fptrunc double %call11 to float
  %fAlpha = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv12, float* %fAlpha, align 4, !tbaa !167
  br label %if.end48

if.else:                                          ; preds = %entry
  %cmp13 = fcmp oeq float %mul, -1.000000e+00
  br i1 %cmp13, label %if.then14, label %if.else22

if.then14:                                        ; preds = %if.else
  %fBeta15 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0x400921FB60000000, float* %fBeta15, align 4, !tbaa !165
  %fGamma16 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma16, align 4, !tbaa !166
  %sub = fsub float -0.000000e+00, %call5
  %conv17 = fpext float %sub to double
  %conv18 = fpext float %call to double
  %call19 = tail call double @atan2(double %conv17, double %conv18) #24
  %conv20 = fptrunc double %call19 to float
  %fAlpha21 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv20, float* %fAlpha21, align 4, !tbaa !167
  br label %if.end48

if.else22:                                        ; preds = %if.else
  %0 = fmul float %call, %call7
  %mul25 = fmul float %call6, %call9
  %mul26 = fmul float %call5, %mul25
  %add = fsub float %mul26, %0
  %mul27 = fmul float %call, %call6
  %mul28 = fmul float %mul27, %call9
  %mul29 = fmul float %call5, %call7
  %add30 = fadd float %mul29, %mul28
  %conv31 = fpext float %add to double
  %conv32 = fpext float %add30 to double
  %call33 = tail call double @atan2(double %conv31, double %conv32) #24
  %conv34 = fptrunc double %call33 to float
  %fAlpha35 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv34, float* %fAlpha35, align 4, !tbaa !167
  %conv36 = fpext float %mul to double
  %call37 = tail call double @acos(double %conv36) #24
  %conv38 = fptrunc double %call37 to float
  %fBeta39 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float %conv38, float* %fBeta39, align 4, !tbaa !165
  %mul40 = fmul float %call7, %call8
  %conv42 = fpext float %mul40 to double
  %conv44 = fpext float %call9 to double
  %call45 = tail call double @atan2(double %conv42, double %conv44) #24
  %conv46 = fptrunc double %call45 to float
  %fGamma47 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float %conv46, float* %fGamma47, align 4, !tbaa !166
  br label %if.end48

if.end48:                                         ; preds = %if.else22, %if.then14, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* nocapture %this) unnamed_addr #7 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %1 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %3 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %tobool3 = icmp eq float* %3, null
  br i1 %tobool3, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %5 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !171
  %tobool10 = icmp eq %struct.kiss_fftr_state* %5, null
  br i1 %tobool10, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end9
  %6 = bitcast %struct.kiss_fftr_state* %5 to i8*
  tail call void @free(i8* %6) #24
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %7 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !172
  %tobool14 = icmp eq %struct.kiss_fftr_state* %7, null
  br i1 %tobool14, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end13
  %8 = bitcast %struct.kiss_fftr_state* %7 to i8*
  tail call void @free(i8* %8) #24
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %9 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !173
  %tobool18 = icmp eq %struct.kiss_fft_cpx** %9, null
  br i1 %tobool18, label %if.end34, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end17
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc
  %isnull31 = icmp eq %struct.kiss_fft_cpx** %.pr, null
  br i1 %isnull31, label %if.end34, label %delete.notnull32

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %.pr90 = phi %struct.kiss_fft_cpx** [ %9, %for.cond.preheader ], [ %.pr, %for.inc ]
  %i.089 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc ]
  %idxprom = zext i32 %i.089 to i64
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pr90, i64 %idxprom
  %11 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx, align 8, !tbaa !27
  %tobool21 = icmp eq %struct.kiss_fft_cpx* %11, null
  br i1 %tobool21, label %for.inc, label %delete.notnull27

delete.notnull27:                                 ; preds = %for.body
  %12 = bitcast %struct.kiss_fft_cpx* %11 to i8*
  tail call void @_ZdaPv(i8* %12) #26
  %.pr.pre = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !173
  br label %for.inc

for.inc:                                          ; preds = %delete.notnull27, %for.body
  %.pr = phi %struct.kiss_fft_cpx** [ %.pr90, %for.body ], [ %.pr.pre, %delete.notnull27 ]
  %inc = add i32 %i.089, 1
  %13 = load i32, i32* %10, align 8, !tbaa !45
  %cmp = icmp ugt i32 %inc, %13
  br i1 %cmp, label %for.cond.cleanup, label %for.body

delete.notnull32:                                 ; preds = %for.cond.cleanup
  %14 = bitcast %struct.kiss_fft_cpx** %.pr to i8*
  tail call void @_ZdaPv(i8* %14) #26
  br label %if.end34

if.end34:                                         ; preds = %delete.notnull32, %for.cond.cleanup, %if.end17
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %15 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !174
  %tobool35 = icmp eq %struct.kiss_fft_cpx* %15, null
  br i1 %tobool35, label %if.end41, label %delete.notnull39

delete.notnull39:                                 ; preds = %if.end34
  %16 = bitcast %struct.kiss_fft_cpx* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #26
  br label %if.end41

if.end41:                                         ; preds = %delete.notnull39, %if.end34
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %17 = load float**, float*** %m_pfOverlap, align 8, !tbaa !175
  %tobool42 = icmp eq float** %17, null
  br i1 %tobool42, label %if.end68, label %for.cond45.preheader

for.cond45.preheader:                             ; preds = %if.end41
  %18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %19 = load i32, i32* %18, align 8, !tbaa !49
  %cmp4687 = icmp eq i32 %19, 0
  br i1 %cmp4687, label %delete.notnull66, label %for.body48

for.cond.cleanup47:                               ; preds = %for.inc61
  %isnull65 = icmp eq float** %.pr85, null
  br i1 %isnull65, label %if.end68, label %delete.notnull66

for.body48:                                       ; preds = %for.inc61, %for.cond45.preheader
  %20 = phi i32 [ %23, %for.inc61 ], [ %19, %for.cond45.preheader ]
  %.pr8592 = phi float** [ %.pr85, %for.inc61 ], [ %17, %for.cond45.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc61 ], [ 0, %for.cond45.preheader ]
  %arrayidx51 = getelementptr inbounds float*, float** %.pr8592, i64 %indvars.iv
  %21 = load float*, float** %arrayidx51, align 8, !tbaa !27
  %tobool52 = icmp eq float* %21, null
  br i1 %tobool52, label %for.inc61, label %delete.notnull58

delete.notnull58:                                 ; preds = %for.body48
  %22 = bitcast float* %21 to i8*
  tail call void @_ZdaPv(i8* %22) #26
  %.pr85.pre = load float**, float*** %m_pfOverlap, align 8, !tbaa !175
  %.pre = load i32, i32* %18, align 8, !tbaa !49
  br label %for.inc61

for.inc61:                                        ; preds = %delete.notnull58, %for.body48
  %23 = phi i32 [ %20, %for.body48 ], [ %.pre, %delete.notnull58 ]
  %.pr85 = phi float** [ %.pr8592, %for.body48 ], [ %.pr85.pre, %delete.notnull58 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = zext i32 %23 to i64
  %cmp46 = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47

delete.notnull66:                                 ; preds = %for.cond.cleanup47, %for.cond45.preheader
  %.lcssa96 = phi float** [ %.pr85, %for.cond.cleanup47 ], [ %17, %for.cond45.preheader ]
  %25 = bitcast float** %.lcssa96 to i8*
  tail call void @_ZdaPv(i8* %25) #26
  br label %if.end68

if.end68:                                         ; preds = %delete.notnull66, %for.cond.cleanup47, %if.end41
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD0Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* %this) #24
  %0 = bitcast %class.CAmbisonicProcessor* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nBlockSize, i32 %nMisc) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !48
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !49
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %tobool4 = icmp eq float* %3, null
  br i1 %tobool4, label %if.end7, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  %.pre = load i32, i32* %2, align 8, !tbaa !49
  br label %if.end7

if.end7:                                          ; preds = %delete.notnull, %entry
  %5 = phi i32 [ %call.i, %entry ], [ %.pre, %delete.notnull ]
  %conv = zext i32 %5 to i64
  %6 = shl nuw nsw i64 %conv, 2
  %call8 = tail call i8* @_Znam(i64 %6) #25
  %7 = bitcast float** %m_pfTempSample to i8**
  store i8* %call8, i8** %7, align 8, !tbaa !168
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call8, i8 0, i64 %6, i1 false)
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 1, i8* %8, align 4, !tbaa !50
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  store i32 %nBlockSize, i32* %m_nBlockSize, align 4, !tbaa !176
  %m_nTaps = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 9
  store i32 101, i32* %m_nTaps, align 8, !tbaa !177
  %cmp = icmp ult i32 %nBlockSize, 101
  %sub = add i32 %nBlockSize, -1
  %cond = select i1 %cmp, i32 %sub, i32 100
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !178
  %add = add i32 %nBlockSize, 101
  %add22 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end7
  %storemerge = phi i32 [ 1, %if.end7 ], [ %shl, %while.cond ]
  %cmp23 = icmp ult i32 %storemerge, %add22
  %shl = shl i32 %storemerge, 1
  br i1 %cmp23, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !179
  %div = lshr i32 %storemerge, 1
  %add26 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  store i32 %add26, i32* %m_nFFTBins, align 8, !tbaa !180
  %conv28 = uitofp i32 %storemerge to float
  %div29 = fdiv float 1.000000e+00, %conv28
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  store float %div29, float* %m_fFFTScaler, align 4, !tbaa !181
  %9 = shl nuw nsw i64 %conv, 3
  %call32 = tail call i8* @_Znam(i64 %9) #25
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %10 = bitcast float*** %m_pfOverlap to i8**
  store i8* %call32, i8** %10, align 8, !tbaa !175
  %cmp34377 = icmp eq i32 %5, 0
  br i1 %cmp34377, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %while.end
  %conv36 = zext i32 %cond to i64
  %11 = shl nuw nsw i64 %conv36, 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %while.end
  %conv40 = zext i32 %storemerge to i64
  %12 = shl nuw nsw i64 %conv40, 2
  %call41 = tail call i8* @_Znam(i64 %12) #25
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %13 = bitcast float** %m_pfScratchBufferA to i8**
  store i8* %call41, i8** %13, align 8, !tbaa !170
  %14 = load i32, i32* %0, align 8, !tbaa !45
  %add42 = add i32 %14, 1
  %conv43 = zext i32 %add42 to i64
  %15 = shl nuw nsw i64 %conv43, 3
  %call44 = tail call i8* @_Znam(i64 %15) #25
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %16 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8**
  store i8* %call44, i8** %16, align 8, !tbaa !173
  %conv61 = zext i32 %add26 to i64
  %17 = shl nuw nsw i64 %conv61, 3
  %call62374 = tail call i8* @_Znam(i64 %17) #25
  %18 = bitcast i8* %call44 to i8**
  store i8* %call62374, i8** %18, align 8, !tbaa !27
  %cmp48401 = icmp eq i32 %14, 0
  %call62402 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48401, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv386 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next387, %for.body ]
  %call37 = tail call i8* @_Znam(i64 %11) #25
  %19 = load float**, float*** %m_pfOverlap, align 8, !tbaa !175
  %arrayidx = getelementptr inbounds float*, float** %19, i64 %indvars.iv386
  %20 = bitcast float** %arrayidx to i8**
  store i8* %call37, i8** %20, align 8, !tbaa !27
  %indvars.iv.next387 = add nuw nsw i64 %indvars.iv386, 1
  %exitcond = icmp eq i64 %indvars.iv.next387, %conv
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

for.cond.cleanup49:                               ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62.lcssa = phi i8* [ %call62402, %for.cond.cleanup ], [ %call62, %for.body50.for.body50_crit_edge ]
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %21 = bitcast %struct.kiss_fft_cpx** %m_pcpScratch to i8**
  store i8* %call62.lcssa, i8** %21, align 8, !tbaa !174
  br label %for.body68

for.body50.for.body50_crit_edge:                  ; preds = %for.body50.for.body50_crit_edge, %for.cond.cleanup
  %call62404 = phi i8* [ %call62, %for.body50.for.body50_crit_edge ], [ %call62402, %for.cond.cleanup ]
  %inc58403 = phi i32 [ %inc58, %for.body50.for.body50_crit_edge ], [ 1, %for.cond.cleanup ]
  %.pre388 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !173
  %idxprom55 = zext i32 %inc58403 to i64
  %arrayidx56 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre388, i64 %idxprom55
  %22 = bitcast %struct.kiss_fft_cpx** %arrayidx56 to i8**
  store i8* %call62404, i8** %22, align 8, !tbaa !27
  %inc58 = add i32 %inc58403, 1
  %cmp48 = icmp ugt i32 %inc58, %14
  %call62 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge

for.cond.cleanup67:                               ; preds = %invoke.cont72
  %pfPsychIR.sroa.20.1.le.le = ptrtoint %"class.std::unique_ptr.12"* %pfPsychIR.sroa.20.1.in to i64
  %23 = bitcast %class.CAmbisonicProcessor* %this to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %23, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 3
  %24 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  invoke void %24(%class.CAmbisonicProcessor* nonnull %this)
          to label %invoke.cont77 unwind label %lpad76

for.body68:                                       ; preds = %invoke.cont72.for.body68_crit_edge, %for.cond.cleanup49
  %25 = phi i32 [ %14, %for.cond.cleanup49 ], [ %70, %invoke.cont72.for.body68_crit_edge ]
  %26 = phi i32 [ 101, %for.cond.cleanup49 ], [ %.pre389, %invoke.cont72.for.body68_crit_edge ]
  %i63.0373 = phi i32 [ 0, %for.cond.cleanup49 ], [ %inc74, %invoke.cont72.for.body68_crit_edge ]
  %pfPsychIR.sroa.0.0371 = phi i64 [ 0, %for.cond.cleanup49 ], [ %pfPsychIR.sroa.0.1, %invoke.cont72.for.body68_crit_edge ]
  %pfPsychIR.sroa.28.0370 = phi %"class.std::unique_ptr.12"* [ null, %for.cond.cleanup49 ], [ %pfPsychIR.sroa.28.1, %invoke.cont72.for.body68_crit_edge ]
  %pfPsychIR.sroa.20.0369 = phi i64 [ 0, %for.cond.cleanup49 ], [ %pfPsychIR.sroa.20.1.le, %invoke.cont72.for.body68_crit_edge ]
  %conv70 = zext i32 %26 to i64
  %27 = shl nuw nsw i64 %conv70, 2
  %call71 = invoke i8* @_Znam(i64 %27) #25
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body68
  %28 = ptrtoint i8* %call71 to i64
  %29 = inttoptr i64 %pfPsychIR.sroa.20.0369 to %"class.std::unique_ptr.12"*
  %cmp.i = icmp eq %"class.std::unique_ptr.12"* %pfPsychIR.sroa.28.0370, %29
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %invoke.cont
  %30 = inttoptr i64 %pfPsychIR.sroa.20.0369 to i64*
  store i64 %28, i64* %30, align 8, !tbaa !182
  br label %invoke.cont72

if.else.i:                                        ; preds = %invoke.cont
  %sub.ptr.sub.i21.i.i = sub i64 %pfPsychIR.sroa.20.0369, %pfPsychIR.sroa.0.0371
  %sub.ptr.div.i22.i.i = ashr exact i64 %sub.ptr.sub.i21.i.i, 3
  %cmp.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i, 0
  %.sroa.speculated.i.i = select i1 %cmp.i.i.i, i64 1, i64 %sub.ptr.div.i22.i.i
  %add.i.i = add nsw i64 %.sroa.speculated.i.i, %sub.ptr.div.i22.i.i
  %cmp7.i.i = icmp ult i64 %add.i.i, %sub.ptr.div.i22.i.i
  %cmp9.i.i = icmp ugt i64 %add.i.i, 2305843009213693951
  %or.cond.i.i = or i1 %cmp7.i.i, %cmp9.i.i
  %cond.i.i = select i1 %or.cond.i.i, i64 2305843009213693951, i64 %add.i.i
  %cmp.i56.i = icmp eq i64 %cond.i.i, 0
  br i1 %cmp.i56.i, label %invoke.cont.i266, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i: ; preds = %if.else.i
  %mul.i.i.i.i = shl i64 %cond.i.i, 3
  %call2.i.i.i.i269 = invoke i8* @_Znwm(i64 %mul.i.i.i.i)
          to label %call2.i.i.i.i.noexc unwind label %lpad

call2.i.i.i.i.noexc:                              ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i
  %31 = bitcast i8* %call2.i.i.i.i269 to %"class.std::unique_ptr.12"*
  br label %invoke.cont.i266

invoke.cont.i266:                                 ; preds = %call2.i.i.i.i.noexc, %if.else.i
  %cond.i57.i = phi %"class.std::unique_ptr.12"* [ %31, %call2.i.i.i.i.noexc ], [ null, %if.else.i ]
  %32 = inttoptr i64 %pfPsychIR.sroa.0.0371 to %"class.std::unique_ptr.12"*
  %add.ptr.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i57.i, i64 %sub.ptr.div.i22.i.i
  %33 = bitcast %"class.std::unique_ptr.12"* %add.ptr.i to i64*
  store i64 %28, i64* %33, align 8, !tbaa !182
  %cmp.i.i23.i.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %pfPsychIR.sroa.28.0370, %32
  br i1 %cmp.i.i23.i.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %invoke.cont.i266
  %scevgep = getelementptr %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %pfPsychIR.sroa.28.0370, i64 -1
  %scevgep410 = bitcast %"class.std::unique_ptr.12"* %scevgep to i8*
  %34 = sub i64 0, %pfPsychIR.sroa.0.0371
  %uglygep = getelementptr i8, i8* %scevgep410, i64 %34
  %uglygep411 = ptrtoint i8* %uglygep to i64
  %35 = lshr i64 %uglygep411, 3
  %36 = add nuw nsw i64 %35, 1
  %xtraiter = and i64 %36, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol

for.body.i.i.i.i.i.prol:                          ; preds = %for.body.i.i.i.i.i.prol, %for.body.i.i.i.i.i.preheader
  %__cur.025.i.i.i.i.i.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %cond.i57.i, %for.body.i.i.i.i.i.preheader ]
  %__first.sroa.0.024.i.i.i.i.i.prol = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %32, %for.body.i.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i.i.i.i.prol ], [ %xtraiter, %for.body.i.i.i.i.i.preheader ]
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i.prol, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i.prol to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.prol, align 8, !tbaa !27
  %39 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i.prol to i64*
  store i64 %38, i64* %39, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i.prol, i64 1
  %incdec.ptr.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol, !llvm.loop !184

for.body.i.i.i.i.i.prol.loopexit:                 ; preds = %for.body.i.i.i.i.i.prol, %for.body.i.i.i.i.i.preheader
  %incdec.ptr.i.i.i.i.i.lcssa.unr = phi %"class.std::unique_ptr.12"* [ undef, %for.body.i.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %__cur.025.i.i.i.i.i.unr = phi %"class.std::unique_ptr.12"* [ %cond.i57.i, %for.body.i.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %__first.sroa.0.024.i.i.i.i.i.unr = phi %"class.std::unique_ptr.12"* [ %32, %for.body.i.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %40 = icmp ult i8* %uglygep, inttoptr (i64 56 to i8*)
  br i1 %40, label %invoke.cont8.i, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.prol.loopexit
  %__cur.025.i.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i.i ], [ %__cur.025.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %__first.sroa.0.024.i.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.i.7, %for.body.i.i.i.i.i ], [ %__first.sroa.0.024.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i, align 8, !tbaa !27
  %43 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i to i64*
  store i64 %42, i64* %43, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.1, align 8, !tbaa !27
  %46 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i to i64*
  store i64 %45, i64* %46, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 2
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 2
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.1 to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.2, align 8, !tbaa !27
  %49 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.1 to i64*
  store i64 %48, i64* %49, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 3
  %incdec.ptr.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 3
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.2, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.2 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.3, align 8, !tbaa !27
  %52 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.2 to i64*
  store i64 %51, i64* %52, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 4
  %incdec.ptr.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 4
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.3, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.3 to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.4, align 8, !tbaa !27
  %55 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.3 to i64*
  store i64 %54, i64* %55, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 5
  %incdec.ptr.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 5
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.4, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.4 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.5, align 8, !tbaa !27
  %58 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.4 to i64*
  store i64 %57, i64* %58, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 6
  %incdec.ptr.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 6
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.5, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.5 to i64*
  %60 = load i64, i64* %59, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.6, align 8, !tbaa !27
  %61 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.5 to i64*
  store i64 %60, i64* %61, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 7
  %incdec.ptr.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 7
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.6, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.6 to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !27
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.i.7, align 8, !tbaa !27
  %64 = bitcast %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.6 to i64*
  store i64 %63, i64* %64, align 8, !tbaa !182
  %incdec.ptr.i.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i.i, i64 8
  %incdec.ptr.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.i, i64 8
  %cmp.i.i.i.i.i.i.i.7 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.i.7, %pfPsychIR.sroa.28.0370
  br i1 %cmp.i.i.i.i.i.i.i.7, label %invoke.cont8.i, label %for.body.i.i.i.i.i

invoke.cont8.i:                                   ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.prol.loopexit
  %incdec.ptr.i.i.i.i.i.lcssa = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.lcssa.unr, %for.body.i.i.i.i.i.prol.loopexit ], [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i.i ]
  br i1 %cmp.i.i23.i.i.i.i.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i, label %for.body.i.i.i70.i

for.body.i.i.i70.i:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i, %invoke.cont8.i
  %__first.addr.04.i.i.i67.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i72.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i ], [ %32, %invoke.cont8.i ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i68.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i67.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i68.i, align 8, !tbaa !27
  %cmp.i.i.i.i.i69.i = icmp eq float* %65, null
  br i1 %cmp.i.i.i.i.i69.i, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i: ; preds = %for.body.i.i.i70.i
  %66 = bitcast float* %65 to i8*
  tail call void @_ZdaPv(i8* %66) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i, %for.body.i.i.i70.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i68.i, align 8, !tbaa !27
  %incdec.ptr.i.i.i72.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i67.i, i64 1
  %cmp.i.i.i73.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i72.i, %pfPsychIR.sroa.28.0370
  br i1 %cmp.i.i.i73.i, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i, label %for.body.i.i.i70.i

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i, %invoke.cont8.i, %invoke.cont.i266
  %__cur.0.lcssa.i.i.i.i.i393 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i.lcssa, %invoke.cont8.i ], [ %cond.i57.i, %invoke.cont.i266 ], [ %incdec.ptr.i.i.i.i.i.lcssa, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i ]
  %67 = phi %"class.std::unique_ptr.12"* [ %pfPsychIR.sroa.28.0370, %invoke.cont8.i ], [ %pfPsychIR.sroa.28.0370, %invoke.cont.i266 ], [ %32, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i ]
  %tobool.i63.i = icmp eq %"class.std::unique_ptr.12"* %67, null
  br i1 %tobool.i63.i, label %.noexc, label %if.then.i64.i

if.then.i64.i:                                    ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i
  %68 = bitcast %"class.std::unique_ptr.12"* %67 to i8*
  tail call void @_ZdlPv(i8* nonnull %68) #24
  br label %.noexc

.noexc:                                           ; preds = %if.then.i64.i, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i
  %69 = ptrtoint %"class.std::unique_ptr.12"* %cond.i57.i to i64
  %add.ptr33.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i57.i, i64 %cond.i.i
  %.pre390 = load i32, i32* %0, align 8, !tbaa !45
  br label %invoke.cont72

invoke.cont72:                                    ; preds = %.noexc, %if.then.i
  %70 = phi i32 [ %.pre390, %.noexc ], [ %25, %if.then.i ]
  %__cur.0.lcssa.i.i.i.i.i.pn = phi %"class.std::unique_ptr.12"* [ %__cur.0.lcssa.i.i.i.i.i393, %.noexc ], [ %29, %if.then.i ]
  %pfPsychIR.sroa.28.1 = phi %"class.std::unique_ptr.12"* [ %add.ptr33.i, %.noexc ], [ %pfPsychIR.sroa.28.0370, %if.then.i ]
  %pfPsychIR.sroa.0.1 = phi i64 [ %69, %.noexc ], [ %pfPsychIR.sroa.0.0371, %if.then.i ]
  %pfPsychIR.sroa.20.1.in = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.0.lcssa.i.i.i.i.i.pn, i64 1
  %inc74 = add i32 %i63.0373, 1
  %cmp66 = icmp ugt i32 %inc74, %70
  %pfPsychIR.sroa.20.1.le = ptrtoint %"class.std::unique_ptr.12"* %pfPsychIR.sroa.20.1.in to i64
  br i1 %cmp66, label %for.cond.cleanup67, label %invoke.cont72.for.body68_crit_edge

invoke.cont72.for.body68_crit_edge:               ; preds = %invoke.cont72
  %.pre389 = load i32, i32* %m_nTaps, align 8, !tbaa !177
  br label %for.body68

lpad:                                             ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i, %for.body68
  %71 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup214

invoke.cont77:                                    ; preds = %for.cond.cleanup67
  %72 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %call80 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %72, i32 0, i8* null, i64* null)
          to label %invoke.cont79 unwind label %lpad76

invoke.cont79:                                    ; preds = %invoke.cont77
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  store %struct.kiss_fftr_state* %call80, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !171
  %73 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %call83 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %73, i32 1, i8* null, i64* null)
          to label %invoke.cont82 unwind label %lpad76

invoke.cont82:                                    ; preds = %invoke.cont79
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  store %struct.kiss_fftr_state* %call83, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !172
  %74 = load i32, i32* %0, align 8, !tbaa !45
  %75 = inttoptr i64 %pfPsychIR.sroa.0.1 to %"class.std::unique_ptr.12"*
  br label %for.cond90.preheader

for.cond90.preheader:                             ; preds = %for.inc211, %invoke.cont82
  %76 = phi i32 [ %74, %invoke.cont82 ], [ %99, %for.inc211 ]
  %i_m.0367 = phi i32 [ 0, %invoke.cont82 ], [ %inc212, %for.inc211 ]
  %77 = load i32, i32* %m_nTaps, align 8, !tbaa !177
  %cmp92364 = icmp eq i32 %77, 0
  br i1 %cmp92364, label %for.cond90.preheader.for.cond.cleanup93_crit_edge, label %for.body94.lr.ph

for.cond90.preheader.for.cond.cleanup93_crit_edge: ; preds = %for.cond90.preheader
  %.pre391 = zext i32 %i_m.0367 to i64
  br label %for.cond.cleanup93

for.body94.lr.ph:                                 ; preds = %for.cond90.preheader
  %78 = load i8, i8* %1, align 4, !tbaa !48, !range !51
  %tobool95 = icmp eq i8 %78, 0
  %idxprom127 = zext i32 %i_m.0367 to i64
  %_M_head_impl.i.i.i.i.i.i305 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %75, i64 %idxprom127, i32 0, i32 0, i32 0, i32 0
  %79 = zext i32 %77 to i64
  br i1 %tobool95, label %for.body94.us, label %for.body94

for.body94.us:                                    ; preds = %for.inc185.us, %for.body94.lr.ph
  %indvars.iv383 = phi i64 [ %indvars.iv.next384, %for.inc185.us ], [ 0, %for.body94.lr.ph ]
  switch i32 %76, label %for.inc185.us [
    i32 1, label %sw.bb141.us
    i32 2, label %sw.bb155.us
    i32 3, label %sw.bb169.us
  ]

sw.bb169.us:                                      ; preds = %for.body94.us
  %arrayidx173.us = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* @_ZL14third_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv383
  br label %for.inc185.us.sink.split

sw.bb155.us:                                      ; preds = %for.body94.us
  %arrayidx159.us = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv383
  br label %for.inc185.us.sink.split

sw.bb141.us:                                      ; preds = %for.body94.us
  %arrayidx145.us = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv383
  br label %for.inc185.us.sink.split

for.inc185.us.sink.split:                         ; preds = %sw.bb141.us, %sw.bb155.us, %sw.bb169.us
  %arrayidx145.us.sink = phi i16* [ %arrayidx145.us, %sw.bb141.us ], [ %arrayidx159.us, %sw.bb155.us ], [ %arrayidx173.us, %sw.bb169.us ]
  %80 = load i16, i16* %arrayidx145.us.sink, align 2, !tbaa !29
  %conv147.us = sitofp i16 %80 to float
  %mul148.us = fmul float %conv147.us, 2.000000e+00
  %div149.us = fdiv float %mul148.us, 3.276700e+04
  %81 = load float*, float** %_M_head_impl.i.i.i.i.i.i305, align 8, !tbaa !27
  %arrayidx.i302.us = getelementptr inbounds float, float* %81, i64 %indvars.iv383
  store float %div149.us, float* %arrayidx.i302.us, align 4, !tbaa !34
  br label %for.inc185.us

for.inc185.us:                                    ; preds = %for.inc185.us.sink.split, %for.body94.us
  %indvars.iv.next384 = add nuw nsw i64 %indvars.iv383, 1
  %cmp92.us = icmp ult i64 %indvars.iv.next384, %79
  br i1 %cmp92.us, label %for.body94.us, label %for.cond.cleanup93

for.cond.cleanup87:                               ; preds = %for.inc211
  %cmp3.i.i.i.i272 = icmp eq %"class.std::unique_ptr.12"* %pfPsychIR.sroa.20.1.in, %75
  br i1 %cmp3.i.i.i.i272, label %invoke.cont.i284, label %for.body.i.i.i.i276

for.body.i.i.i.i276:                              ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280, %for.cond.cleanup87
  %__first.addr.04.i.i.i.i273 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i278, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280 ], [ %75, %for.cond.cleanup87 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i274 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i273, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i274, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i275 = icmp eq float* %82, null
  br i1 %cmp.i.i.i.i.i.i275, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277: ; preds = %for.body.i.i.i.i276
  %83 = bitcast float* %82 to i8*
  tail call void @_ZdaPv(i8* %83) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277, %for.body.i.i.i.i276
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i274, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i278 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i273, i64 1
  %cmp.i.i.i.i279 = icmp eq %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i273, %__cur.0.lcssa.i.i.i.i.i.pn
  br i1 %cmp.i.i.i.i279, label %invoke.cont.i284, label %for.body.i.i.i.i276

invoke.cont.i284:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280, %for.cond.cleanup87
  %tobool.i.i.i283 = icmp eq i64 %pfPsychIR.sroa.0.1, 0
  br i1 %tobool.i.i.i283, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286, label %if.then.i.i.i285

if.then.i.i.i285:                                 ; preds = %invoke.cont.i284
  %84 = inttoptr i64 %pfPsychIR.sroa.0.1 to i8*
  tail call void @_ZdlPv(i8* nonnull %84) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286: ; preds = %if.then.i.i.i285, %invoke.cont.i284
  ret i1 true

lpad76:                                           ; preds = %invoke.cont79, %invoke.cont77, %for.cond.cleanup67
  %85 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup214

for.cond.cleanup93:                               ; preds = %for.inc185, %for.inc185.us, %for.cond90.preheader.for.cond.cleanup93_crit_edge
  %conv189.pre-phi = phi i64 [ %.pre391, %for.cond90.preheader.for.cond.cleanup93_crit_edge ], [ %idxprom127, %for.inc185.us ], [ %idxprom127, %for.inc185 ]
  %86 = load i8*, i8** %13, align 8, !tbaa !170
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %75, i64 %conv189.pre-phi, i32 0, i32 0, i32 0, i32 0
  %87 = bitcast float** %_M_head_impl.i.i.i.i.i to i8**
  %88 = load i8*, i8** %87, align 8, !tbaa !27
  %conv193 = zext i32 %77 to i64
  %mul194 = shl nuw nsw i64 %conv193, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %88, i64 %mul194, i1 false)
  %89 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %90 = load i32, i32* %m_nTaps, align 8, !tbaa !177
  %idxprom197 = zext i32 %90 to i64
  %arrayidx198 = getelementptr inbounds float, float* %89, i64 %idxprom197
  %91 = bitcast float* %arrayidx198 to i8*
  %92 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %sub201 = sub i32 %92, %90
  %conv202 = zext i32 %sub201 to i64
  %mul203 = shl nuw nsw i64 %conv202, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 %mul203, i1 false)
  %93 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !171
  %94 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %95 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !173
  %arrayidx208 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %95, i64 %conv189.pre-phi
  %96 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx208, align 8, !tbaa !27
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %93, float* %94, %struct.kiss_fft_cpx* %96)
          to label %for.inc211 unwind label %lpad209

for.body94:                                       ; preds = %for.inc185, %for.body94.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc185 ], [ 0, %for.body94.lr.ph ]
  switch i32 %76, label %for.inc185 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb112
    i32 3, label %sw.bb126
  ]

sw.bb:                                            ; preds = %for.body94
  %arrayidx101 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb112:                                         ; preds = %for.body94
  %arrayidx116 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb126:                                         ; preds = %for.body94
  %arrayidx130 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* bitcast (<{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }>* @_ZL14third_order_3D to [4 x [101 x i16]]*), i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

for.inc185.sink.split:                            ; preds = %sw.bb126, %sw.bb112, %sw.bb
  %arrayidx130.sink = phi i16* [ %arrayidx130, %sw.bb126 ], [ %arrayidx116, %sw.bb112 ], [ %arrayidx101, %sw.bb ]
  %97 = load i16, i16* %arrayidx130.sink, align 2, !tbaa !29
  %conv132 = sitofp i16 %97 to float
  %mul133 = fmul float %conv132, 2.000000e+00
  %div134 = fdiv float %mul133, 3.276700e+04
  %98 = load float*, float** %_M_head_impl.i.i.i.i.i.i305, align 8, !tbaa !27
  %arrayidx.i306 = getelementptr inbounds float, float* %98, i64 %indvars.iv
  store float %div134, float* %arrayidx.i306, align 4, !tbaa !34
  br label %for.inc185

for.inc185:                                       ; preds = %for.inc185.sink.split, %for.body94
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp92 = icmp ult i64 %indvars.iv.next, %79
  br i1 %cmp92, label %for.body94, label %for.cond.cleanup93

for.inc211:                                       ; preds = %for.cond.cleanup93
  %inc212 = add i32 %i_m.0367, 1
  %99 = load i32, i32* %0, align 8, !tbaa !45
  %cmp86 = icmp ugt i32 %inc212, %99
  br i1 %cmp86, label %for.cond.cleanup87, label %for.cond90.preheader

lpad209:                                          ; preds = %for.cond.cleanup93
  %100 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup214

ehcleanup214:                                     ; preds = %lpad209, %lpad76, %lpad
  %.sink405 = phi { i8*, i32 } [ %100, %lpad209 ], [ %85, %lpad76 ], [ %71, %lpad ]
  %pfPsychIR.sroa.20.0363 = phi i64 [ %pfPsychIR.sroa.20.1.le.le, %lpad209 ], [ %pfPsychIR.sroa.20.1.le.le, %lpad76 ], [ %pfPsychIR.sroa.20.0369, %lpad ]
  %pfPsychIR.sroa.0.0360 = phi i64 [ %pfPsychIR.sroa.0.1, %lpad209 ], [ %pfPsychIR.sroa.0.1, %lpad76 ], [ %pfPsychIR.sroa.0.0371, %lpad ]
  %101 = inttoptr i64 %pfPsychIR.sroa.0.0360 to %"class.std::unique_ptr.12"*
  %102 = inttoptr i64 %pfPsychIR.sroa.20.0363 to %"class.std::unique_ptr.12"*
  %cmp3.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %101, %102
  br i1 %cmp3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, %ehcleanup214
  %__first.addr.04.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i ], [ %101, %ehcleanup214 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i = icmp eq float* %103, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %104 = bitcast float* %103 to i8*
  tail call void @_ZdaPv(i8* %104) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i, %for.body.i.i.i.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i, %102
  br i1 %cmp.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

invoke.cont.i:                                    ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i, %ehcleanup214
  %tobool.i.i.i = icmp eq i64 %pfPsychIR.sroa.0.0360, 0
  br i1 %tobool.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont.i
  %105 = inttoptr i64 %pfPsychIR.sroa.0.0360 to i8*
  tail call void @_ZdlPv(i8* nonnull %105) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit: ; preds = %if.then.i.i.i, %invoke.cont.i
  resume { i8*, i32 } %.sink405
}

declare %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) local_unnamed_addr #0

declare void @kiss_fftr(%struct.kiss_fftr_state*, float*, %struct.kiss_fft_cpx*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor5ResetEv(%class.CAmbisonicProcessor* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load float**, float*** %m_pfOverlap, align 8, !tbaa !175
  %arrayidx = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %3 = bitcast float** %arrayidx to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !27
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !178
  %conv = zext i32 %5 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %0, align 8, !tbaa !49
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor7RefreshEv(%class.CAmbisonicProcessor* %this) unnamed_addr #9 align 2 {
entry:
  %fAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 3
  %0 = load float, float* %fAlpha, align 4, !tbaa !185
  %call = tail call float @cosf(float %0) #24
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  store float %call, float* %m_fCosAlpha, align 8, !tbaa !186
  %1 = load float, float* %fAlpha, align 4, !tbaa !185
  %call4 = tail call float @sinf(float %1) #24
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  store float %call4, float* %m_fSinAlpha, align 4, !tbaa !187
  %fBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 4
  %2 = load float, float* %fBeta, align 8, !tbaa !188
  %call6 = tail call float @cosf(float %2) #24
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  store float %call6, float* %m_fCosBeta, align 8, !tbaa !189
  %3 = load float, float* %fBeta, align 8, !tbaa !188
  %call9 = tail call float @sinf(float %3) #24
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  store float %call9, float* %m_fSinBeta, align 4, !tbaa !190
  %fGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 5
  %4 = load float, float* %fGamma, align 4, !tbaa !191
  %call11 = tail call float @cosf(float %4) #24
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  store float %call11, float* %m_fCosGamma, align 8, !tbaa !192
  %5 = load float, float* %fGamma, align 4, !tbaa !191
  %call14 = tail call float @sinf(float %5) #24
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  store float %call14, float* %m_fSinGamma, align 4, !tbaa !193
  %6 = load float, float* %fAlpha, align 4, !tbaa !185
  %mul = fmul float %6, 2.000000e+00
  %call17 = tail call float @cosf(float %mul) #24
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  store float %call17, float* %m_fCos2Alpha, align 8, !tbaa !194
  %7 = load float, float* %fAlpha, align 4, !tbaa !185
  %mul20 = fmul float %7, 2.000000e+00
  %call21 = tail call float @sinf(float %mul20) #24
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  store float %call21, float* %m_fSin2Alpha, align 4, !tbaa !195
  %8 = load float, float* %fBeta, align 8, !tbaa !188
  %mul24 = fmul float %8, 2.000000e+00
  %call25 = tail call float @cosf(float %mul24) #24
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  store float %call25, float* %m_fCos2Beta, align 8, !tbaa !196
  %9 = load float, float* %fBeta, align 8, !tbaa !188
  %mul28 = fmul float %9, 2.000000e+00
  %call29 = tail call float @sinf(float %mul28) #24
  %m_fSin2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 24
  store float %call29, float* %m_fSin2Beta, align 4, !tbaa !197
  %10 = load float, float* %fGamma, align 4, !tbaa !191
  %mul32 = fmul float %10, 2.000000e+00
  %call33 = tail call float @cosf(float %mul32) #24
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  store float %call33, float* %m_fCos2Gamma, align 8, !tbaa !198
  %11 = load float, float* %fGamma, align 4, !tbaa !191
  %mul36 = fmul float %11, 2.000000e+00
  %call37 = tail call float @sinf(float %mul36) #24
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  store float %call37, float* %m_fSin2Gamma, align 4, !tbaa !199
  %12 = load float, float* %fAlpha, align 4, !tbaa !185
  %mul40 = fmul float %12, 3.000000e+00
  %call41 = tail call float @cosf(float %mul40) #24
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  store float %call41, float* %m_fCos3Alpha, align 8, !tbaa !200
  %13 = load float, float* %fAlpha, align 4, !tbaa !185
  %mul44 = fmul float %13, 3.000000e+00
  %call45 = tail call float @sinf(float %mul44) #24
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  store float %call45, float* %m_fSin3Alpha, align 4, !tbaa !201
  %14 = load float, float* %fBeta, align 8, !tbaa !188
  %mul48 = fmul float %14, 3.000000e+00
  %call49 = tail call float @cosf(float %mul48) #24
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  store float %call49, float* %m_fCos3Beta, align 8, !tbaa !202
  %15 = load float, float* %fBeta, align 8, !tbaa !188
  %mul52 = fmul float %15, 3.000000e+00
  %call53 = tail call float @sinf(float %mul52) #24
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  store float %call53, float* %m_fSin3Beta, align 4, !tbaa !203
  %16 = load float, float* %fGamma, align 4, !tbaa !191
  %mul56 = fmul float %16, 3.000000e+00
  %call57 = tail call float @cosf(float %mul56) #24
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  store float %call57, float* %m_fCos3Gamma, align 8, !tbaa !204
  %17 = load float, float* %fGamma, align 4, !tbaa !191
  %mul60 = fmul float %17, 3.000000e+00
  %call61 = tail call float @sinf(float %mul60) #24
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  store float %call61, float* %m_fSin3Gamma, align 4, !tbaa !205
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* nocapture %this, %class.Orientation* nocapture readonly byval(%class.Orientation) align 8 %orientation) local_unnamed_addr #7 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %m_orientation to i8*
  %1 = bitcast %class.Orientation* %orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !206
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14GetOrientationEv(%class.Orientation* noalias nocapture sret %agg.result, %class.CAmbisonicProcessor* nocapture readonly %this) local_unnamed_addr #7 align 2 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %agg.result to i8*
  %1 = bitcast %class.Orientation* %m_orientation to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !206
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  %1 = load i8, i8* %0, align 4, !tbaa !50, !range !51
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !45
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end11, label %if.end3

if.end3:                                          ; preds = %if.end
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr = load i32, i32* %2, align 8, !tbaa !45
  %cmp5 = icmp ugt i32 %.pr, 1
  br i1 %cmp5, label %if.end7, label %if.end11

if.end7:                                          ; preds = %if.end3
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr19 = load i32, i32* %2, align 8, !tbaa !45
  %cmp9 = icmp ugt i32 %.pr19, 2
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7, %if.end3, %if.end
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfScratchBufferA to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !170
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !49
  %cmp168 = icmp eq i32 %4, 0
  br i1 %cmp168, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %scevgep193 = getelementptr %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %scevgep193194 = bitcast float* %scevgep193 to i8*
  %uglygep = getelementptr i8, i8* %scevgep193194, i64 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup92, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup92, %for.body.lr.ph
  %indvars.iv174 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next175, %for.cond.cleanup92 ]
  %5 = trunc i64 %indvars.iv174 to i32
  %conv2 = uitofp i32 %5 to double
  %call = tail call double @sqrt(double %conv2) #24
  %6 = load i8*, i8** %0, align 8, !tbaa !170
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 %indvars.iv174
  %8 = bitcast float** %arrayidx.i to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !27
  %10 = load i32, i32* %m_nBlockSize, align 4, !tbaa !176
  %conv7 = zext i32 %10 to i64
  %mul8 = shl nuw nsw i64 %conv7, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul8, i1 false)
  %11 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %12 = load i32, i32* %m_nBlockSize, align 4, !tbaa !176
  %idxprom = zext i32 %12 to i64
  %arrayidx = getelementptr inbounds float, float* %11, i64 %idxprom
  %13 = bitcast float* %arrayidx to i8*
  %14 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %sub = sub i32 %14, %12
  %conv13 = zext i32 %sub to i64
  %mul14 = shl nuw nsw i64 %conv13, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 %mul14, i1 false)
  %15 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !171
  %16 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !174
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %15, float* %16, %struct.kiss_fft_cpx* %17)
  %18 = load i32, i32* %m_nFFTBins, align 8, !tbaa !180
  %cmp17159 = icmp eq i32 %18, 0
  br i1 %cmp17159, label %for.cond.cleanup18, label %for.body19.lr.ph

for.body19.lr.ph:                                 ; preds = %for.body
  %conv3 = fptosi double %call to i32
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !174
  %20 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !173
  %idxprom23 = zext i32 %conv3 to i64
  %arrayidx24 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %20, i64 %idxprom23
  %21 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx24, align 8, !tbaa !27
  br label %for.body19

for.cond.cleanup18:                               ; preds = %for.body19, %for.body
  %22 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !172
  %23 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !174
  %24 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %22, %struct.kiss_fft_cpx* %23, float* %24)
  %25 = load i32, i32* %m_nFFTSize, align 8, !tbaa !179
  %cmp72161 = icmp eq i32 %25, 0
  br i1 %cmp72161, label %for.cond.cleanup18.for.cond.cleanup73_crit_edge, label %for.body74.lr.ph

for.cond.cleanup18.for.cond.cleanup73_crit_edge:  ; preds = %for.cond.cleanup18
  %.pre = load i8*, i8** %0, align 8, !tbaa !170
  br label %for.cond.cleanup73

for.body74.lr.ph:                                 ; preds = %for.cond.cleanup18
  %26 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %27 = bitcast float* %26 to i8*
  %28 = zext i32 %25 to i64
  %min.iters.check189 = icmp ult i32 %25, 8
  br i1 %min.iters.check189, label %for.body74.preheader, label %vector.memcheck199

for.body74.preheader:                             ; preds = %middle.block187, %vector.memcheck199, %for.body74.lr.ph
  %indvars.iv170.ph = phi i64 [ 0, %vector.memcheck199 ], [ 0, %for.body74.lr.ph ], [ %n.vec202, %middle.block187 ]
  br label %for.body74

vector.memcheck199:                               ; preds = %for.body74.lr.ph
  %scevgep191 = getelementptr float, float* %26, i64 %28
  %bound0195 = icmp ugt i8* %uglygep, %27
  %bound1196 = icmp ult float* %m_fFFTScaler, %scevgep191
  %found.conflict197 = and i1 %bound0195, %bound1196
  br i1 %found.conflict197, label %for.body74.preheader, label %vector.ph200

vector.ph200:                                     ; preds = %vector.memcheck199
  %n.vec202 = and i64 %28, 4294967288
  %29 = add nsw i64 %n.vec202, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %xtraiter = and i64 %31, 1
  %32 = icmp eq i64 %29, 0
  br i1 %32, label %middle.block187.unr-lcssa, label %vector.ph200.new

vector.ph200.new:                                 ; preds = %vector.ph200
  %unroll_iter = sub nuw nsw i64 %31, %xtraiter
  %33 = load float, float* %m_fFFTScaler, align 4, !tbaa !181, !alias.scope !207
  %34 = insertelement <4 x float> undef, float %33, i32 0
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <4 x i32> zeroinitializer
  %36 = insertelement <4 x float> undef, float %33, i32 0
  %37 = shufflevector <4 x float> %36, <4 x float> undef, <4 x i32> zeroinitializer
  %38 = load float, float* %m_fFFTScaler, align 4, !tbaa !181, !alias.scope !207
  %39 = insertelement <4 x float> undef, float %38, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = insertelement <4 x float> undef, float %38, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body186

vector.body186:                                   ; preds = %vector.body186, %vector.ph200.new
  %index203 = phi i64 [ 0, %vector.ph200.new ], [ %index.next204.1, %vector.body186 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph200.new ], [ %niter.nsub.1, %vector.body186 ]
  %43 = getelementptr inbounds float, float* %26, i64 %index203
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load211 = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load212 = load <4 x float>, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %47 = fmul <4 x float> %35, %wide.load211
  %48 = fmul <4 x float> %37, %wide.load212
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %index.next204 = or i64 %index203, 8
  %51 = getelementptr inbounds float, float* %26, i64 %index.next204
  %52 = bitcast float* %51 to <4 x float>*
  %wide.load211.1 = load <4 x float>, <4 x float>* %52, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %53 = getelementptr inbounds float, float* %51, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load212.1 = load <4 x float>, <4 x float>* %54, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %55 = fmul <4 x float> %40, %wide.load211.1
  %56 = fmul <4 x float> %42, %wide.load212.1
  %57 = bitcast float* %51 to <4 x float>*
  store <4 x float> %55, <4 x float>* %57, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %58 = bitcast float* %53 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %index.next204.1 = add i64 %index203, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block187.unr-lcssa, label %vector.body186, !llvm.loop !212

middle.block187.unr-lcssa:                        ; preds = %vector.body186, %vector.ph200
  %index203.unr = phi i64 [ 0, %vector.ph200 ], [ %index.next204.1, %vector.body186 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block187, label %vector.body186.epil

vector.body186.epil:                              ; preds = %middle.block187.unr-lcssa
  %59 = load float, float* %m_fFFTScaler, align 4, !tbaa !181, !alias.scope !207
  %60 = insertelement <4 x float> undef, float %59, i32 0
  %61 = shufflevector <4 x float> %60, <4 x float> undef, <4 x i32> zeroinitializer
  %62 = insertelement <4 x float> undef, float %59, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = getelementptr inbounds float, float* %26, i64 %index203.unr
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load211.epil = load <4 x float>, <4 x float>* %65, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load212.epil = load <4 x float>, <4 x float>* %67, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %68 = fmul <4 x float> %61, %wide.load211.epil
  %69 = fmul <4 x float> %63, %wide.load212.epil
  %70 = bitcast float* %64 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !210, !noalias !207
  br label %middle.block187

middle.block187:                                  ; preds = %vector.body186.epil, %middle.block187.unr-lcssa
  %cmp.n206 = icmp eq i64 %n.vec202, %28
  br i1 %cmp.n206, label %for.cond.cleanup73, label %for.body74.preheader

for.body19:                                       ; preds = %for.body19, %for.body19.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next, %for.body19 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 0
  %72 = load float, float* %r, align 4, !tbaa !213
  %r27 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 0
  %73 = load float, float* %r27, align 4, !tbaa !213
  %mul28 = fmul float %72, %73
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 1
  %74 = load float, float* %i, align 4, !tbaa !215
  %i37 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 1
  %75 = load float, float* %i37, align 4, !tbaa !215
  %mul38 = fmul float %74, %75
  %sub39 = fsub float %mul28, %mul38
  %mul51 = fmul float %72, %75
  %mul62 = fmul float %73, %74
  %add = fadd float %mul62, %mul51
  store float %sub39, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %76 = load i32, i32* %m_nFFTBins, align 8, !tbaa !180
  %77 = zext i32 %76 to i64
  %cmp17 = icmp ult i64 %indvars.iv.next, %77
  br i1 %cmp17, label %for.body19, label %for.cond.cleanup18

for.cond.cleanup73:                               ; preds = %for.body74, %middle.block187, %for.cond.cleanup18.for.cond.cleanup73_crit_edge
  %78 = phi i8* [ %.pre, %for.cond.cleanup18.for.cond.cleanup73_crit_edge ], [ %27, %middle.block187 ], [ %27, %for.body74 ]
  %79 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i158 = getelementptr inbounds float*, float** %79, i64 %indvars.iv174
  %80 = bitcast float** %arrayidx.i158 to i8**
  %81 = load i8*, i8** %80, align 8, !tbaa !27
  %82 = load i32, i32* %m_nBlockSize, align 4, !tbaa !176
  %conv87 = zext i32 %82 to i64
  %mul88 = shl nuw nsw i64 %conv87, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %78, i64 %mul88, i1 false)
  %83 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !178
  %cmp91163 = icmp eq i32 %83, 0
  %84 = load float**, float*** %m_pfOverlap, align 8, !tbaa !175
  %arrayidx95164 = getelementptr inbounds float*, float** %84, i64 %indvars.iv174
  br i1 %cmp91163, label %for.cond.cleanup73.for.cond.cleanup92_crit_edge, label %for.body93.lr.ph

for.cond.cleanup73.for.cond.cleanup92_crit_edge:  ; preds = %for.cond.cleanup73
  %.phi.trans.insert = bitcast float** %arrayidx95164 to i8**
  %.pre177 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !27
  br label %for.cond.cleanup92

for.body93.lr.ph:                                 ; preds = %for.cond.cleanup73
  %85 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i156 = getelementptr inbounds float*, float** %85, i64 %indvars.iv174
  %86 = load float*, float** %arrayidx.i156, align 8, !tbaa !27
  %87 = zext i32 %83 to i64
  %.pre176 = load float*, float** %arrayidx95164, align 8, !tbaa !27
  %88 = bitcast float* %.pre176 to i8*
  %min.iters.check = icmp ult i32 %83, 8
  br i1 %min.iters.check, label %for.body93.preheader, label %vector.memcheck

for.body93.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body93.lr.ph
  %indvars.iv172.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body93.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body93

vector.memcheck:                                  ; preds = %for.body93.lr.ph
  %scevgep = getelementptr float, float* %86, i64 %87
  %scevgep180 = getelementptr float, float* %.pre176, i64 %87
  %bound0 = icmp ult float* %86, %scevgep180
  %bound1 = icmp ult float* %.pre176, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body93.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %87, 4294967288
  %89 = add nsw i64 %n.vec, -8
  %90 = lshr exact i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %xtraiter213 = and i64 %91, 1
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter215 = sub nuw nsw i64 %91, %xtraiter213
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter216 = phi i64 [ %unroll_iter215, %vector.ph.new ], [ %niter216.nsub.1, %vector.body ]
  %93 = getelementptr inbounds float, float* %.pre176, i64 %index
  %94 = bitcast float* %93 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %94, align 4, !tbaa !34, !alias.scope !216
  %95 = getelementptr inbounds float, float* %93, i64 4
  %96 = bitcast float* %95 to <4 x float>*
  %wide.load183 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !216
  %97 = getelementptr inbounds float, float* %86, i64 %index
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load184 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load185 = load <4 x float>, <4 x float>* %100, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %101 = fadd <4 x float> %wide.load, %wide.load184
  %102 = fadd <4 x float> %wide.load183, %wide.load185
  %103 = bitcast float* %97 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %104 = bitcast float* %99 to <4 x float>*
  store <4 x float> %102, <4 x float>* %104, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %index.next = or i64 %index, 8
  %105 = getelementptr inbounds float, float* %.pre176, i64 %index.next
  %106 = bitcast float* %105 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %106, align 4, !tbaa !34, !alias.scope !216
  %107 = getelementptr inbounds float, float* %105, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load183.1 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !34, !alias.scope !216
  %109 = getelementptr inbounds float, float* %86, i64 %index.next
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load184.1 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %111 = getelementptr inbounds float, float* %109, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  %wide.load185.1 = load <4 x float>, <4 x float>* %112, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %113 = fadd <4 x float> %wide.load.1, %wide.load184.1
  %114 = fadd <4 x float> %wide.load183.1, %wide.load185.1
  %115 = bitcast float* %109 to <4 x float>*
  store <4 x float> %113, <4 x float>* %115, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %116 = bitcast float* %111 to <4 x float>*
  store <4 x float> %114, <4 x float>* %116, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %index.next.1 = add i64 %index, 16
  %niter216.nsub.1 = add i64 %niter216, -2
  %niter216.ncmp.1 = icmp eq i64 %niter216.nsub.1, 0
  br i1 %niter216.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !221

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod214 = icmp eq i64 %xtraiter213, 0
  br i1 %lcmp.mod214, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %117 = getelementptr inbounds float, float* %.pre176, i64 %index.unr
  %118 = bitcast float* %117 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %118, align 4, !tbaa !34, !alias.scope !216
  %119 = getelementptr inbounds float, float* %117, i64 4
  %120 = bitcast float* %119 to <4 x float>*
  %wide.load183.epil = load <4 x float>, <4 x float>* %120, align 4, !tbaa !34, !alias.scope !216
  %121 = getelementptr inbounds float, float* %86, i64 %index.unr
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load184.epil = load <4 x float>, <4 x float>* %122, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %123 = getelementptr inbounds float, float* %121, i64 4
  %124 = bitcast float* %123 to <4 x float>*
  %wide.load185.epil = load <4 x float>, <4 x float>* %124, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %125 = fadd <4 x float> %wide.load.epil, %wide.load184.epil
  %126 = fadd <4 x float> %wide.load183.epil, %wide.load185.epil
  %127 = bitcast float* %121 to <4 x float>*
  store <4 x float> %125, <4 x float>* %127, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  %128 = bitcast float* %123 to <4 x float>*
  store <4 x float> %126, <4 x float>* %128, align 4, !tbaa !34, !alias.scope !219, !noalias !216
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %87
  br i1 %cmp.n, label %for.cond.cleanup92, label %for.body93.preheader

for.body74:                                       ; preds = %for.body74, %for.body74.preheader
  %indvars.iv170 = phi i64 [ %indvars.iv.next171, %for.body74 ], [ %indvars.iv170.ph, %for.body74.preheader ]
  %129 = load float, float* %m_fFFTScaler, align 4, !tbaa !181
  %arrayidx77 = getelementptr inbounds float, float* %26, i64 %indvars.iv170
  %130 = load float, float* %arrayidx77, align 4, !tbaa !34
  %mul78 = fmul float %129, %130
  store float %mul78, float* %arrayidx77, align 4, !tbaa !34
  %indvars.iv.next171 = add nuw nsw i64 %indvars.iv170, 1
  %cmp72 = icmp ult i64 %indvars.iv.next171, %28
  br i1 %cmp72, label %for.body74, label %for.cond.cleanup73, !llvm.loop !222

for.cond.cleanup92:                               ; preds = %for.body93, %middle.block, %for.cond.cleanup73.for.cond.cleanup92_crit_edge
  %131 = phi i8* [ %.pre177, %for.cond.cleanup73.for.cond.cleanup92_crit_edge ], [ %88, %middle.block ], [ %88, %for.body93 ]
  %132 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !170
  %133 = load i32, i32* %m_nBlockSize, align 4, !tbaa !176
  %idxprom112 = zext i32 %133 to i64
  %arrayidx113 = getelementptr inbounds float, float* %132, i64 %idxprom112
  %134 = bitcast float* %arrayidx113 to i8*
  %conv115 = zext i32 %83 to i64
  %mul116 = shl nuw nsw i64 %conv115, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %134, i64 %mul116, i1 false)
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %135 = load i32, i32* %3, align 8, !tbaa !49
  %136 = zext i32 %135 to i64
  %cmp = icmp ult i64 %indvars.iv.next175, %136
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body93:                                       ; preds = %for.body93, %for.body93.preheader
  %indvars.iv172 = phi i64 [ %indvars.iv.next173, %for.body93 ], [ %indvars.iv172.ph, %for.body93.preheader ]
  %arrayidx97 = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv172
  %137 = load float, float* %arrayidx97, align 4, !tbaa !34
  %arrayidx102 = getelementptr inbounds float, float* %86, i64 %indvars.iv172
  %138 = load float, float* %arrayidx102, align 4, !tbaa !34
  %add103 = fadd float %137, %138
  store float %add103, float* %arrayidx102, align 4, !tbaa !34
  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 1
  %cmp91 = icmp ult i64 %indvars.iv.next173, %87
  br i1 %cmp91, label %for.body93, label %for.cond.cleanup92, !llvm.loop !223
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #12 align 2 {
entry:
  %cmp175 = icmp eq i32 %nSamples, 0
  br i1 %cmp175, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 3
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !27
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i174 = getelementptr inbounds float*, float** %0, i64 1
  %2 = load float*, float** %arrayidx.i174, align 8, !tbaa !27
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %arrayidx7 = getelementptr inbounds float, float* %3, i64 1
  %arrayidx.i172 = getelementptr inbounds float*, float** %0, i64 2
  %4 = load float*, float** %arrayidx.i172, align 8, !tbaa !27
  %arrayidx13 = getelementptr inbounds float, float* %3, i64 2
  %5 = bitcast float* %arrayidx13 to i32*
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 3
  %6 = bitcast float* %arrayidx7 to i32*
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %7 = load float, float* %arrayidx, align 4, !tbaa !34
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %9 = fmul float %7, %8
  %arrayidx5 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !34
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul6 = fmul float %10, %11
  %add = fsub float %mul6, %9
  store float %add, float* %arrayidx7, align 4, !tbaa !34
  %arrayidx11 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %12 = bitcast float* %arrayidx11 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !34
  store i32 %13, i32* %5, align 4, !tbaa !34
  %14 = load float, float* %arrayidx, align 4, !tbaa !34
  %15 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul19 = fmul float %14, %15
  %16 = load float, float* %arrayidx5, align 4, !tbaa !34
  %17 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %mul25 = fmul float %16, %17
  %add26 = fadd float %mul19, %mul25
  store float %add26, float* %arrayidx28, align 4, !tbaa !34
  %18 = bitcast float* %arrayidx5 to i32*
  store float %add, float* %arrayidx5, align 4, !tbaa !34
  %19 = load float, float* %arrayidx13, align 4, !tbaa !34
  %20 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul37 = fmul float %19, %20
  %21 = load float, float* %arrayidx28, align 4, !tbaa !34
  %22 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul40 = fmul float %21, %22
  %add41 = fadd float %mul37, %mul40
  store float %add41, float* %arrayidx11, align 4, !tbaa !34
  %23 = load float, float* %arrayidx28, align 4, !tbaa !34
  %24 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul49 = fmul float %23, %24
  %25 = load float, float* %arrayidx13, align 4, !tbaa !34
  %26 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul53 = fmul float %25, %26
  %sub54 = fsub float %mul49, %mul53
  store float %sub54, float* %arrayidx, align 4, !tbaa !34
  %27 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %28 = fmul float %sub54, %27
  %29 = load float, float* %arrayidx5, align 4, !tbaa !34
  %30 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul69 = fmul float %29, %30
  %add70 = fsub float %mul69, %28
  store float %add70, float* %arrayidx7, align 4, !tbaa !34
  %31 = load i32, i32* %12, align 4, !tbaa !34
  store i32 %31, i32* %5, align 4, !tbaa !34
  %32 = load float, float* %arrayidx, align 4, !tbaa !34
  %33 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul84 = fmul float %32, %33
  %34 = load float, float* %arrayidx5, align 4, !tbaa !34
  %35 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %mul90 = fmul float %34, %35
  %add91 = fadd float %mul84, %mul90
  store float %add91, float* %arrayidx28, align 4, !tbaa !34
  store float %add91, float* %arrayidx, align 4, !tbaa !34
  %36 = load i32, i32* %6, align 4, !tbaa !34
  store i32 %36, i32* %18, align 4, !tbaa !34
  %37 = load i32, i32* %5, align 4, !tbaa !34
  store i32 %37, i32* %12, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #12 align 2 {
entry:
  %cmp379 = icmp eq i32 %nSamples, 0
  br i1 %cmp379, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 8
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !27
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %arrayidx.i378 = getelementptr inbounds float*, float** %0, i64 4
  %2 = load float*, float** %arrayidx.i378, align 8, !tbaa !27
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %arrayidx8 = getelementptr inbounds float, float* %3, i64 4
  %arrayidx.i376 = getelementptr inbounds float*, float** %0, i64 7
  %4 = load float*, float** %arrayidx.i376, align 8, !tbaa !27
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i374 = getelementptr inbounds float*, float** %0, i64 5
  %5 = load float*, float** %arrayidx.i374, align 8, !tbaa !27
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %arrayidx22 = getelementptr inbounds float, float* %3, i64 5
  %arrayidx.i372 = getelementptr inbounds float*, float** %0, i64 6
  %6 = load float*, float** %arrayidx.i372, align 8, !tbaa !27
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 6
  %7 = bitcast float* %arrayidx28 to i32*
  %arrayidx43 = getelementptr inbounds float, float* %3, i64 7
  %arrayidx58 = getelementptr inbounds float, float* %3, i64 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %8 = bitcast float* %arrayidx43 to i32*
  %9 = bitcast float* %arrayidx22 to i32*
  %10 = bitcast float* %arrayidx58 to i32*
  %11 = bitcast float* %arrayidx8 to i32*
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %12 = load float, float* %arrayidx, align 4, !tbaa !34
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %14 = fmul float %12, %13
  %arrayidx6 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %15 = load float, float* %arrayidx6, align 4, !tbaa !34
  %16 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul7 = fmul float %15, %16
  %add = fsub float %mul7, %14
  store float %add, float* %arrayidx8, align 4, !tbaa !34
  %arrayidx12 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %17 = load float, float* %arrayidx12, align 4, !tbaa !34
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %19 = fmul float %17, %18
  %arrayidx18 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %20 = load float, float* %arrayidx18, align 4, !tbaa !34
  %21 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul19 = fmul float %20, %21
  %add20 = fsub float %mul19, %19
  store float %add20, float* %arrayidx22, align 4, !tbaa !34
  %arrayidx26 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %22 = bitcast float* %arrayidx26 to i32*
  %23 = load i32, i32* %22, align 4, !tbaa !34
  store i32 %23, i32* %7, align 4, !tbaa !34
  %24 = load float, float* %arrayidx12, align 4, !tbaa !34
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul34 = fmul float %24, %25
  %26 = load float, float* %arrayidx18, align 4, !tbaa !34
  %27 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %mul40 = fmul float %26, %27
  %add41 = fadd float %mul34, %mul40
  store float %add41, float* %arrayidx43, align 4, !tbaa !34
  %28 = load float, float* %arrayidx, align 4, !tbaa !34
  %29 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul49 = fmul float %28, %29
  %30 = load float, float* %arrayidx6, align 4, !tbaa !34
  %31 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %mul55 = fmul float %30, %31
  %add56 = fadd float %mul49, %mul55
  store float %add56, float* %arrayidx58, align 4, !tbaa !34
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %33 = fmul float %32, %add20
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul65 = fmul float %34, %add
  %add66 = fsub float %mul65, %33
  store float %add66, float* %arrayidx6, align 4, !tbaa !34
  %35 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %36 = load float, float* %arrayidx22, align 4, !tbaa !34
  %37 = fmul float %35, %36
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %39 = load float, float* %arrayidx8, align 4, !tbaa !34
  %mul79 = fmul float %38, %39
  %add80 = fsub float %mul79, %37
  store float %add80, float* %arrayidx18, align 4, !tbaa !34
  %40 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul85 = fmul float %40, 7.500000e-01
  %add86 = fadd float %mul85, 2.500000e-01
  %41 = load float, float* %arrayidx28, align 4, !tbaa !34
  %mul89 = fmul float %41, %add86
  %conv90 = fpext float %mul89 to double
  %42 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %conv94 = fpext float %42 to double
  %square = fmul double %conv94, %conv94
  %mul96 = fmul double %square, 0x3FEBB67AE0000000
  %43 = load float, float* %arrayidx58, align 4, !tbaa !34
  %conv99 = fpext float %43 to double
  %mul100 = fmul double %mul96, %conv99
  %add101 = fadd double %mul100, %conv90
  %mul103 = fmul float %42, 0x3FFBB67AE0000000
  %44 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul105 = fmul float %mul103, %44
  %45 = load float, float* %arrayidx43, align 4, !tbaa !34
  %mul108 = fmul float %mul105, %45
  %conv109 = fpext float %mul108 to double
  %add110 = fadd double %add101, %conv109
  %conv111 = fptrunc double %add110 to float
  store float %conv111, float* %arrayidx26, align 4, !tbaa !34
  %46 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %47 = load float, float* %arrayidx43, align 4, !tbaa !34
  %mul119 = fmul float %46, %47
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul121 = fmul float %48, 0x3FFBB67AE0000000
  %49 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul123 = fmul float %mul121, %49
  %50 = load float, float* %arrayidx28, align 4, !tbaa !34
  %mul126 = fmul float %mul123, %50
  %sub127 = fsub float %mul119, %mul126
  %mul130 = fmul float %48, %49
  %51 = load float, float* %arrayidx58, align 4, !tbaa !34
  %mul133 = fmul float %mul130, %51
  %add134 = fadd float %sub127, %mul133
  store float %add134, float* %arrayidx12, align 4, !tbaa !34
  %52 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul140 = fmul float %52, 2.500000e-01
  %add141 = fadd float %mul140, 7.500000e-01
  %53 = load float, float* %arrayidx58, align 4, !tbaa !34
  %mul144 = fmul float %53, %add141
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %55 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul147 = fmul float %54, %55
  %56 = load float, float* %arrayidx43, align 4, !tbaa !34
  %mul150 = fmul float %mul147, %56
  %sub151 = fsub float %mul144, %mul150
  %conv152 = fpext float %sub151 to double
  %conv156 = fpext float %55 to double
  %square324 = fmul double %conv156, %conv156
  %mul158 = fmul double %square324, 0x3FEBB67AE0000000
  %57 = load float, float* %arrayidx28, align 4, !tbaa !34
  %conv161 = fpext float %57 to double
  %mul162 = fmul double %mul158, %conv161
  %add163 = fadd double %mul162, %conv152
  %conv164 = fptrunc double %add163 to float
  store float %conv164, float* %arrayidx, align 4, !tbaa !34
  %58 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %59 = fmul float %58, %conv164
  %60 = load float, float* %arrayidx6, align 4, !tbaa !34
  %61 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul179 = fmul float %60, %61
  %add180 = fsub float %mul179, %59
  store float %add180, float* %arrayidx8, align 4, !tbaa !34
  %62 = load float, float* %arrayidx12, align 4, !tbaa !34
  %63 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %64 = fmul float %62, %63
  %65 = load float, float* %arrayidx18, align 4, !tbaa !34
  %66 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul193 = fmul float %65, %66
  %add194 = fsub float %mul193, %64
  store float %add194, float* %arrayidx22, align 4, !tbaa !34
  %67 = load i32, i32* %22, align 4, !tbaa !34
  store i32 %67, i32* %7, align 4, !tbaa !34
  %68 = load float, float* %arrayidx12, align 4, !tbaa !34
  %69 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul208 = fmul float %68, %69
  %70 = load float, float* %arrayidx18, align 4, !tbaa !34
  %71 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %mul214 = fmul float %70, %71
  %add215 = fadd float %mul208, %mul214
  store float %add215, float* %arrayidx43, align 4, !tbaa !34
  %72 = load float, float* %arrayidx, align 4, !tbaa !34
  %73 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul223 = fmul float %72, %73
  %74 = load float, float* %arrayidx6, align 4, !tbaa !34
  %75 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %mul229 = fmul float %74, %75
  %add230 = fadd float %mul223, %mul229
  store float %add230, float* %arrayidx58, align 4, !tbaa !34
  store i32 %67, i32* %22, align 4, !tbaa !34
  %76 = load i32, i32* %8, align 4, !tbaa !34
  %77 = bitcast float* %arrayidx12 to i32*
  store i32 %76, i32* %77, align 4, !tbaa !34
  %78 = load i32, i32* %9, align 4, !tbaa !34
  %79 = bitcast float* %arrayidx18 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !34
  %80 = load i32, i32* %10, align 4, !tbaa !34
  %81 = bitcast float* %arrayidx to i32*
  store i32 %80, i32* %81, align 4, !tbaa !34
  %82 = load i32, i32* %11, align 4, !tbaa !34
  %83 = bitcast float* %arrayidx6 to i32*
  store i32 %82, i32* %83, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 {
entry:
  %cmp685 = icmp eq i32 %nSamples, 0
  br i1 %cmp685, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  %.pre = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %0 = phi float* [ %.pre, %for.body.lr.ph ], [ %101, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 15
  %2 = load float*, float** %arrayidx.i, align 8, !tbaa !27
  %arrayidx = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %3 = load float, float* %arrayidx, align 4, !tbaa !34
  %4 = load float, float* %m_fSin3Alpha, align 4, !tbaa !201
  %5 = fmul float %3, %4
  %arrayidx.i684 = getelementptr inbounds float*, float** %1, i64 9
  %6 = load float*, float** %arrayidx.i684, align 8, !tbaa !27
  %arrayidx10 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %7 = load float, float* %arrayidx10, align 4, !tbaa !34
  %8 = load float, float* %m_fCos3Alpha, align 8, !tbaa !200
  %mul11 = fmul float %7, %8
  %add = fsub float %mul11, %5
  %arrayidx12 = getelementptr inbounds float, float* %0, i64 9
  store float %add, float* %arrayidx12, align 4, !tbaa !34
  %arrayidx.i682 = getelementptr inbounds float*, float** %1, i64 14
  %9 = load float*, float** %arrayidx.i682, align 8, !tbaa !27
  %arrayidx16 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %10 = load float, float* %arrayidx16, align 4, !tbaa !34
  %11 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %12 = fmul float %10, %11
  %arrayidx.i680 = getelementptr inbounds float*, float** %1, i64 10
  %13 = load float*, float** %arrayidx.i680, align 8, !tbaa !27
  %arrayidx22 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %14 = load float, float* %arrayidx22, align 4, !tbaa !34
  %15 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul23 = fmul float %14, %15
  %add24 = fsub float %mul23, %12
  %arrayidx26 = getelementptr inbounds float, float* %0, i64 10
  store float %add24, float* %arrayidx26, align 4, !tbaa !34
  %arrayidx.i678 = getelementptr inbounds float*, float** %1, i64 13
  %16 = load float*, float** %arrayidx.i678, align 8, !tbaa !27
  %arrayidx30 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %17 = load float, float* %arrayidx30, align 4, !tbaa !34
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %19 = fmul float %17, %18
  %arrayidx.i676 = getelementptr inbounds float*, float** %1, i64 11
  %20 = load float*, float** %arrayidx.i676, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %21 = load float, float* %arrayidx36, align 4, !tbaa !34
  %22 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul37 = fmul float %21, %22
  %add38 = fsub float %mul37, %19
  %arrayidx40 = getelementptr inbounds float, float* %0, i64 11
  store float %add38, float* %arrayidx40, align 4, !tbaa !34
  %arrayidx.i674 = getelementptr inbounds float*, float** %1, i64 12
  %23 = load float*, float** %arrayidx.i674, align 8, !tbaa !27
  %arrayidx44 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %24 = bitcast float* %arrayidx44 to i32*
  %25 = load i32, i32* %24, align 4, !tbaa !34
  %arrayidx46 = getelementptr inbounds float, float* %0, i64 12
  %26 = bitcast float* %arrayidx46 to i32*
  store i32 %25, i32* %26, align 4, !tbaa !34
  %27 = load float, float* %arrayidx30, align 4, !tbaa !34
  %28 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul52 = fmul float %27, %28
  %29 = load float, float* %arrayidx36, align 4, !tbaa !34
  %30 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %mul58 = fmul float %29, %30
  %add59 = fadd float %mul52, %mul58
  %arrayidx61 = getelementptr inbounds float, float* %0, i64 13
  store float %add59, float* %arrayidx61, align 4, !tbaa !34
  %31 = load float, float* %arrayidx16, align 4, !tbaa !34
  %32 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul67 = fmul float %31, %32
  %33 = load float, float* %arrayidx22, align 4, !tbaa !34
  %34 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %mul73 = fmul float %33, %34
  %add74 = fadd float %mul67, %mul73
  %arrayidx76 = getelementptr inbounds float, float* %0, i64 14
  store float %add74, float* %arrayidx76, align 4, !tbaa !34
  %35 = load float, float* %arrayidx, align 4, !tbaa !34
  %36 = load float, float* %m_fCos3Alpha, align 8, !tbaa !200
  %mul82 = fmul float %35, %36
  %37 = load float, float* %arrayidx10, align 4, !tbaa !34
  %38 = load float, float* %m_fSin3Alpha, align 4, !tbaa !201
  %mul88 = fmul float %37, %38
  %add89 = fadd float %mul82, %mul88
  %arrayidx91 = getelementptr inbounds float, float* %0, i64 15
  store float %add89, float* %arrayidx91, align 4, !tbaa !34
  %mul94 = fmul float %add, 1.250000e-01
  %39 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul95 = fmul float %39, 3.000000e+00
  %add96 = fadd float %mul95, 5.000000e+00
  %mul97 = fmul float %mul94, %add96
  %mul100 = fmul float %add24, 0x3FF3988E20000000
  %40 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul101 = fmul float %mul100, %40
  %41 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul102 = fmul float %mul101, %41
  %sub103 = fsub float %mul97, %mul102
  %conv104 = fpext float %sub103 to double
  %mul108 = fmul float %add38, 0x3FEEFBDEC0000000
  %conv109 = fpext float %mul108 to double
  %conv111 = fpext float %41 to double
  %square = fmul double %conv111, %conv111
  %mul113 = fmul double %square, %conv109
  %add114 = fadd double %mul113, %conv104
  %conv115 = fptrunc double %add114 to float
  store float %conv115, float* %arrayidx10, align 4, !tbaa !34
  %42 = load float, float* %arrayidx26, align 4, !tbaa !34
  %43 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul123 = fmul float %42, %43
  %44 = load float, float* %arrayidx40, align 4, !tbaa !34
  %mul126 = fmul float %44, 0x3FF94C5840000000
  %45 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul128 = fmul float %mul126, %45
  %46 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul130 = fmul float %mul128, %46
  %sub131 = fsub float %mul123, %mul130
  %47 = load float, float* %arrayidx12, align 4, !tbaa !34
  %mul134 = fmul float %47, 0x3FF3988E20000000
  %mul136 = fmul float %45, %mul134
  %mul138 = fmul float %46, %mul136
  %add139 = fadd float %sub131, %mul138
  store float %add139, float* %arrayidx22, align 4, !tbaa !34
  %48 = load float, float* %arrayidx40, align 4, !tbaa !34
  %mul146 = fmul float %48, 1.250000e-01
  %49 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul148 = fmul float %49, 5.000000e+00
  %add149 = fadd float %mul148, 3.000000e+00
  %mul150 = fmul float %mul146, %add149
  %50 = load float, float* %arrayidx26, align 4, !tbaa !34
  %mul153 = fmul float %50, 0x3FF94C5840000000
  %51 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul155 = fmul float %mul153, %51
  %52 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul157 = fmul float %mul155, %52
  %sub158 = fsub float %mul150, %mul157
  %conv159 = fpext float %sub158 to double
  %53 = load float, float* %arrayidx12, align 4, !tbaa !34
  %mul163 = fmul float %53, 0x3FEEFBDEC0000000
  %conv164 = fpext float %mul163 to double
  %conv166 = fpext float %52 to double
  %square602 = fmul double %conv166, %conv166
  %mul168 = fmul double %square602, %conv164
  %add169 = fadd double %mul168, %conv159
  %conv170 = fptrunc double %add169 to float
  store float %conv170, float* %arrayidx36, align 4, !tbaa !34
  %54 = load float, float* %arrayidx46, align 4, !tbaa !34
  %mul177 = fmul float %54, 2.500000e-01
  %55 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul179 = fmul float %mul177, %55
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul181 = fmul float %56, 1.500000e+01
  %add182 = fadd float %mul181, -1.000000e+00
  %mul183 = fmul float %mul179, %add182
  %conv184 = fpext float %mul183 to double
  %57 = load float, float* %arrayidx76, align 4, !tbaa !34
  %mul188 = fmul float %57, 0x3FFEFBDEC0000000
  %mul190 = fmul float %55, %mul188
  %conv191 = fpext float %mul190 to double
  %58 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %conv193 = fpext float %58 to double
  %square603 = fmul double %conv193, %conv193
  %mul195 = fmul double %square603, %conv191
  %add196 = fadd double %mul195, %conv184
  %59 = load float, float* %arrayidx91, align 4, !tbaa !34
  %mul200 = fmul float %59, 0x3FE94C5840000000
  %conv201 = fpext float %mul200 to double
  %call204 = tail call double @pow(double %conv193, double 3.000000e+00) #24
  %mul205 = fmul double %call204, %conv201
  %add206 = fadd double %add196, %mul205
  %60 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %arrayidx209 = getelementptr inbounds float, float* %60, i64 13
  %61 = load float, float* %arrayidx209, align 4, !tbaa !34
  %mul210 = fmul float %61, 0x3FC3988E20000000
  %62 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %63 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul212 = fmul float %63, 5.000000e+00
  %add213 = fadd float %62, %mul212
  %mul214 = fmul float %mul210, %add213
  %conv215 = fpext float %mul214 to double
  %add216 = fadd double %add206, %conv215
  %conv217 = fptrunc double %add216 to float
  %64 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i654 = getelementptr inbounds float*, float** %64, i64 12
  %65 = load float*, float** %arrayidx.i654, align 8, !tbaa !27
  %arrayidx221 = getelementptr inbounds float, float* %65, i64 %indvars.iv
  store float %conv217, float* %arrayidx221, align 4, !tbaa !34
  %66 = load float, float* %arrayidx209, align 4, !tbaa !34
  %mul224 = fmul float %66, 6.250000e-02
  %67 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %68 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %mul226 = fmul float %68, 1.500000e+01
  %add227 = fadd float %67, %mul226
  %mul228 = fmul float %mul224, %add227
  %arrayidx231 = getelementptr inbounds float, float* %60, i64 14
  %69 = load float, float* %arrayidx231, align 4, !tbaa !34
  %mul232 = fmul float %69, 0x3FD94C5840000000
  %70 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul234 = fmul float %70, 3.000000e+00
  %add235 = fadd float %mul234, 1.000000e+00
  %mul236 = fmul float %mul232, %add235
  %71 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul238 = fmul float %71, %mul236
  %add239 = fadd float %mul228, %mul238
  %conv240 = fpext float %add239 to double
  %arrayidx243 = getelementptr inbounds float, float* %60, i64 15
  %72 = load float, float* %arrayidx243, align 4, !tbaa !34
  %mul244 = fmul float %72, 0x3FEEFBDEC0000000
  %mul246 = fmul float %67, %mul244
  %conv247 = fpext float %mul246 to double
  %conv249 = fpext float %71 to double
  %square604 = fmul double %conv249, %conv249
  %mul251 = fmul double %square604, %conv247
  %add252 = fadd double %mul251, %conv240
  %arrayidx256 = getelementptr inbounds float, float* %60, i64 12
  %73 = load float, float* %arrayidx256, align 4, !tbaa !34
  %conv257 = fpext float %73 to double
  %mul258 = fmul double %conv257, 0x3FC3988E20000000
  %74 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul261 = fmul float %74, 5.000000e+00
  %add262 = fadd float %71, %mul261
  %conv263 = fpext float %add262 to double
  %mul264 = fmul double %mul258, %conv263
  %sub265 = fsub double %add252, %mul264
  %conv266 = fptrunc double %sub265 to float
  %arrayidx.i652 = getelementptr inbounds float*, float** %64, i64 13
  %75 = load float*, float** %arrayidx.i652, align 8, !tbaa !27
  %arrayidx270 = getelementptr inbounds float, float* %75, i64 %indvars.iv
  store float %conv266, float* %arrayidx270, align 4, !tbaa !34
  %76 = load float, float* %arrayidx231, align 4, !tbaa !34
  %mul273 = fmul float %76, 1.250000e-01
  %77 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul275 = fmul float %77, 5.000000e+00
  %78 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %mul277 = fmul float %78, 3.000000e+00
  %add278 = fadd float %mul275, %mul277
  %mul279 = fmul float %mul273, %add278
  %79 = load float, float* %arrayidx243, align 4, !tbaa !34
  %mul283 = fmul float %79, 0x3FD3988E20000000
  %80 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %add285 = fadd float %80, 3.000000e+00
  %mul286 = fmul float %mul283, %add285
  %81 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul288 = fmul float %81, %mul286
  %add289 = fadd float %mul279, %mul288
  %conv290 = fpext float %add289 to double
  %82 = load float, float* %arrayidx256, align 4, !tbaa !34
  %mul294 = fmul float %82, 0x3FFEFBDEC0000000
  %mul296 = fmul float %77, %mul294
  %conv297 = fpext float %mul296 to double
  %conv299 = fpext float %81 to double
  %square605 = fmul double %conv299, %conv299
  %mul301 = fmul double %square605, %conv297
  %add302 = fadd double %mul301, %conv290
  %83 = load float, float* %arrayidx209, align 4, !tbaa !34
  %conv307 = fpext float %83 to double
  %mul308 = fmul double %conv307, 0x3FC94C5840000000
  %84 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul311 = fmul float %84, 3.000000e+00
  %sub312 = fsub float %81, %mul311
  %conv313 = fpext float %sub312 to double
  %mul314 = fmul double %mul308, %conv313
  %add315 = fadd double %add302, %mul314
  %conv316 = fptrunc double %add315 to float
  %arrayidx.i650 = getelementptr inbounds float*, float** %64, i64 14
  %85 = load float*, float** %arrayidx.i650, align 8, !tbaa !27
  %arrayidx320 = getelementptr inbounds float, float* %85, i64 %indvars.iv
  store float %conv316, float* %arrayidx320, align 4, !tbaa !34
  %86 = load float, float* %arrayidx243, align 4, !tbaa !34
  %mul323 = fmul float %86, 6.250000e-02
  %87 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul325 = fmul float %87, 1.500000e+01
  %88 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %add327 = fadd float %mul325, %88
  %mul328 = fmul float %mul323, %add327
  %89 = load float, float* %arrayidx231, align 4, !tbaa !34
  %mul332 = fmul float %89, 0x3FD3988E20000000
  %90 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %add334 = fadd float %90, 3.000000e+00
  %mul335 = fmul float %mul332, %add334
  %91 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul337 = fmul float %91, %mul335
  %sub338 = fsub float %mul328, %mul337
  %conv339 = fpext float %sub338 to double
  %92 = load float, float* %arrayidx209, align 4, !tbaa !34
  %mul343 = fmul float %92, 0x3FEEFBDEC0000000
  %mul345 = fmul float %87, %mul343
  %conv346 = fpext float %mul345 to double
  %conv348 = fpext float %91 to double
  %square606 = fmul double %conv348, %conv348
  %mul350 = fmul double %square606, %conv346
  %add351 = fadd double %mul350, %conv339
  %93 = load float, float* %arrayidx256, align 4, !tbaa !34
  %conv356 = fpext float %93 to double
  %mul357 = fmul double %conv356, 0x3FE94C5840000000
  %call360 = tail call double @pow(double %conv348, double 3.000000e+00) #24
  %mul361 = fmul double %call360, %mul357
  %sub362 = fsub double %add351, %mul361
  %conv363 = fptrunc double %sub362 to float
  %94 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i648 = getelementptr inbounds float*, float** %94, i64 15
  %95 = load float*, float** %arrayidx.i648, align 8, !tbaa !27
  %arrayidx367 = getelementptr inbounds float, float* %95, i64 %indvars.iv
  store float %conv363, float* %arrayidx367, align 4, !tbaa !34
  %96 = load float, float* %m_fSin3Gamma, align 4, !tbaa !205
  %97 = fmul float %96, %conv363
  %arrayidx.i644 = getelementptr inbounds float*, float** %94, i64 9
  %98 = load float*, float** %arrayidx.i644, align 8, !tbaa !27
  %arrayidx377 = getelementptr inbounds float, float* %98, i64 %indvars.iv
  %99 = load float, float* %arrayidx377, align 4, !tbaa !34
  %100 = load float, float* %m_fCos3Gamma, align 8, !tbaa !204
  %mul378 = fmul float %99, %100
  %add379 = fsub float %mul378, %97
  %101 = load float*, float** %m_pfTempSample, align 8, !tbaa !168
  %arrayidx381 = getelementptr inbounds float, float* %101, i64 9
  store float %add379, float* %arrayidx381, align 4, !tbaa !34
  %arrayidx.i642 = getelementptr inbounds float*, float** %94, i64 14
  %102 = load float*, float** %arrayidx.i642, align 8, !tbaa !27
  %arrayidx385 = getelementptr inbounds float, float* %102, i64 %indvars.iv
  %103 = load float, float* %arrayidx385, align 4, !tbaa !34
  %104 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %105 = fmul float %103, %104
  %arrayidx.i640 = getelementptr inbounds float*, float** %94, i64 10
  %106 = load float*, float** %arrayidx.i640, align 8, !tbaa !27
  %arrayidx391 = getelementptr inbounds float, float* %106, i64 %indvars.iv
  %107 = load float, float* %arrayidx391, align 4, !tbaa !34
  %108 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul392 = fmul float %107, %108
  %add393 = fsub float %mul392, %105
  %arrayidx395 = getelementptr inbounds float, float* %101, i64 10
  store float %add393, float* %arrayidx395, align 4, !tbaa !34
  %arrayidx.i638 = getelementptr inbounds float*, float** %94, i64 13
  %109 = load float*, float** %arrayidx.i638, align 8, !tbaa !27
  %arrayidx399 = getelementptr inbounds float, float* %109, i64 %indvars.iv
  %110 = load float, float* %arrayidx399, align 4, !tbaa !34
  %111 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %112 = fmul float %110, %111
  %arrayidx.i636 = getelementptr inbounds float*, float** %94, i64 11
  %113 = load float*, float** %arrayidx.i636, align 8, !tbaa !27
  %arrayidx405 = getelementptr inbounds float, float* %113, i64 %indvars.iv
  %114 = load float, float* %arrayidx405, align 4, !tbaa !34
  %115 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul406 = fmul float %114, %115
  %add407 = fsub float %mul406, %112
  %arrayidx409 = getelementptr inbounds float, float* %101, i64 11
  store float %add407, float* %arrayidx409, align 4, !tbaa !34
  %arrayidx.i634 = getelementptr inbounds float*, float** %94, i64 12
  %116 = load float*, float** %arrayidx.i634, align 8, !tbaa !27
  %arrayidx413 = getelementptr inbounds float, float* %116, i64 %indvars.iv
  %117 = bitcast float* %arrayidx413 to i32*
  %118 = load i32, i32* %117, align 4, !tbaa !34
  %arrayidx415 = getelementptr inbounds float, float* %101, i64 12
  %119 = bitcast float* %arrayidx415 to i32*
  store i32 %118, i32* %119, align 4, !tbaa !34
  %120 = load float, float* %arrayidx399, align 4, !tbaa !34
  %121 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul421 = fmul float %120, %121
  %122 = load float, float* %arrayidx405, align 4, !tbaa !34
  %123 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %mul427 = fmul float %122, %123
  %add428 = fadd float %mul421, %mul427
  %arrayidx430 = getelementptr inbounds float, float* %101, i64 13
  store float %add428, float* %arrayidx430, align 4, !tbaa !34
  %124 = load float, float* %arrayidx385, align 4, !tbaa !34
  %125 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul436 = fmul float %124, %125
  %126 = load float, float* %arrayidx391, align 4, !tbaa !34
  %127 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %mul442 = fmul float %126, %127
  %add443 = fadd float %mul436, %mul442
  %arrayidx445 = getelementptr inbounds float, float* %101, i64 14
  store float %add443, float* %arrayidx445, align 4, !tbaa !34
  %128 = load float, float* %arrayidx367, align 4, !tbaa !34
  %129 = load float, float* %m_fCos3Gamma, align 8, !tbaa !204
  %mul451 = fmul float %128, %129
  %130 = load float, float* %arrayidx377, align 4, !tbaa !34
  %131 = load float, float* %m_fSin3Gamma, align 4, !tbaa !205
  %mul457 = fmul float %130, %131
  %add458 = fadd float %mul451, %mul457
  %arrayidx460 = getelementptr inbounds float, float* %101, i64 15
  store float %add458, float* %arrayidx460, align 4, !tbaa !34
  store float %add379, float* %arrayidx377, align 4, !tbaa !34
  %132 = bitcast float* %arrayidx395 to i32*
  %133 = load i32, i32* %132, align 4, !tbaa !34
  %134 = bitcast float* %arrayidx391 to i32*
  store i32 %133, i32* %134, align 4, !tbaa !34
  %135 = bitcast float* %arrayidx409 to i32*
  %136 = load i32, i32* %135, align 4, !tbaa !34
  %137 = bitcast float* %arrayidx405 to i32*
  store i32 %136, i32* %137, align 4, !tbaa !34
  %138 = load i32, i32* %119, align 4, !tbaa !34
  store i32 %138, i32* %117, align 4, !tbaa !34
  %139 = bitcast float* %arrayidx430 to i32*
  %140 = load i32, i32* %139, align 4, !tbaa !34
  %141 = bitcast float* %arrayidx399 to i32*
  store i32 %140, i32* %141, align 4, !tbaa !34
  %142 = bitcast float* %arrayidx445 to i32*
  %143 = load i32, i32* %142, align 4, !tbaa !34
  %144 = bitcast float* %arrayidx385 to i32*
  store i32 %143, i32* %144, align 4, !tbaa !34
  %145 = bitcast float* %arrayidx460 to i32*
  %146 = load i32, i32* %145, align 4, !tbaa !34
  %147 = bitcast float* %arrayidx367 to i32*
  store i32 %146, i32* %147, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #10

declare void @kiss_fftri(%struct.kiss_fftr_state*, %struct.kiss_fft_cpx*, float*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerC2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !52
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !60
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD0Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %entry
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %5 = bitcast %class.CAmbisonicSpeaker* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicSpeaker9ConfigureEjbj(%class.CAmbisonicSpeaker* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !48
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !49
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !34
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !57
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp8.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp8.i.i, label %if.then9.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then9.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then9.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !45
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !34
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !57
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp8.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp8.i12.i, label %if.then9.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then9.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !57
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then9.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7RefreshEv(%class.CAmbisonicSpeaker* readonly %this) unnamed_addr #9 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float* nocapture %pfDst) local_unnamed_addr #7 align 2 {
entry:
  %0 = bitcast float* %pfDst to i8*
  %conv = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !49
  %cmp63 = icmp eq i32 %2, 0
  br i1 %cmp63, label %for.end34, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %cmp1255 = icmp eq i32 %nSamples, 0
  br i1 %cmp1255, label %for.body, label %for.body.us.preheader

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %4 = add i32 %nSamples, -1
  %5 = zext i32 %4 to i64
  %6 = add nuw nsw i64 %5, 1
  %7 = zext i32 %4 to i64
  %8 = add nuw nsw i64 %7, 1
  %scevgep = getelementptr float, float* %pfDst, i64 %8
  %9 = add i32 %nSamples, -1
  %10 = zext i32 %9 to i64
  %11 = add nuw nsw i64 %10, 1
  %12 = zext i32 %9 to i64
  %13 = add nuw nsw i64 %12, 1
  %scevgep141 = getelementptr float, float* %pfDst, i64 %13
  %14 = and i64 %11, 8589934584
  %15 = add nsw i64 %14, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %min.iters.check139 = icmp ult i64 %11, 8
  %n.vec152 = and i64 %11, 8589934584
  %ind.end156 = trunc i64 %n.vec152 to i32
  %ind.end158 = getelementptr float, float* %pfDst, i64 %n.vec152
  %xtraiter = and i64 %17, 1
  %18 = icmp eq i64 %15, 0
  %unroll_iter = sub nuw nsw i64 %17, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n161 = icmp eq i64 %11, %n.vec152
  %min.iters.check = icmp ult i64 %6, 8
  %n.vec = and i64 %6, 8589934584
  %ind.end = trunc i64 %n.vec to i32
  %ind.end122 = getelementptr float, float* %pfDst, i64 %n.vec
  %xtraiter183 = and i64 %17, 1
  %19 = icmp eq i64 %15, 0
  %unroll_iter185 = sub nuw nsw i64 %17, %xtraiter183
  %lcmp.mod184 = icmp eq i64 %xtraiter183, 0
  %cmp.n = icmp eq i64 %6, %n.vec
  br label %for.body.us

for.body.us:                                      ; preds = %if.end.us, %for.body.us.preheader
  %20 = phi i32 [ %120, %if.end.us ], [ %2, %for.body.us.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end.us ], [ 0, %for.body.us.preheader ]
  %21 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i.us = getelementptr inbounds float*, float** %21, i64 %indvars.iv
  %22 = load float*, float** %arrayidx.i.us, align 8, !tbaa !27
  %23 = load i8, i8* %3, align 4, !tbaa !48, !range !51
  %tobool.us = icmp eq i8 %23, 0
  %24 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i.us = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %25 = load float, float* %add.ptr.i.us, align 4, !tbaa !34
  br i1 %tobool.us, label %for.body24.us.preheader, label %if.then.us

if.then.us:                                       ; preds = %for.body.us
  %conv5.us = fpext float %25 to double
  %26 = trunc i64 %indvars.iv to i32
  %conv6.us = uitofp i32 %26 to double
  %call7.us = tail call double @sqrt(double %conv6.us) #24
  %27 = tail call double @llvm.floor.f64(double %call7.us)
  %mul8.us = fmul double %27, 2.000000e+00
  %add.us = fadd double %mul8.us, 1.000000e+00
  %mul9.us = fmul double %add.us, %conv5.us
  %conv10.us = fptrunc double %mul9.us to float
  br i1 %min.iters.check139, label %for.body13.us.preheader, label %vector.memcheck149

vector.memcheck149:                               ; preds = %if.then.us
  %scevgep143 = getelementptr float, float* %22, i64 %13
  %bound0145 = icmp ugt float* %scevgep143, %pfDst
  %bound1146 = icmp ult float* %22, %scevgep141
  %found.conflict147 = and i1 %bound0145, %bound1146
  br i1 %found.conflict147, label %for.body13.us.preheader, label %vector.ph150

vector.ph150:                                     ; preds = %vector.memcheck149
  %ind.end160 = getelementptr float, float* %22, i64 %n.vec152
  %broadcast.splatinsert173 = insertelement <4 x float> undef, float %conv10.us, i32 0
  %broadcast.splat174 = shufflevector <4 x float> %broadcast.splatinsert173, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert175 = insertelement <4 x float> undef, float %conv10.us, i32 0
  %broadcast.splat176 = shufflevector <4 x float> %broadcast.splatinsert175, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %18, label %middle.block137.unr-lcssa, label %vector.body136

vector.body136:                                   ; preds = %vector.body136, %vector.ph150
  %index153 = phi i64 [ %index.next154.1, %vector.body136 ], [ 0, %vector.ph150 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body136 ], [ %unroll_iter, %vector.ph150 ]
  %next.gep167 = getelementptr float, float* %pfDst, i64 %index153
  %next.gep169 = getelementptr float, float* %22, i64 %index153
  %28 = bitcast float* %next.gep169 to <4 x float>*
  %wide.load171 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !34, !alias.scope !224
  %29 = getelementptr float, float* %next.gep169, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load172 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !224
  %31 = fmul <4 x float> %wide.load171, %broadcast.splat174
  %32 = fmul <4 x float> %wide.load172, %broadcast.splat176
  %33 = bitcast float* %next.gep167 to <4 x float>*
  %wide.load177 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %34 = getelementptr float, float* %next.gep167, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load178 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %36 = fadd <4 x float> %wide.load177, %31
  %37 = fadd <4 x float> %wide.load178, %32
  %38 = bitcast float* %next.gep167 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %39 = bitcast float* %34 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %index.next154 = or i64 %index153, 8
  %next.gep167.1 = getelementptr float, float* %pfDst, i64 %index.next154
  %next.gep169.1 = getelementptr float, float* %22, i64 %index.next154
  %40 = bitcast float* %next.gep169.1 to <4 x float>*
  %wide.load171.1 = load <4 x float>, <4 x float>* %40, align 4, !tbaa !34, !alias.scope !224
  %41 = getelementptr float, float* %next.gep169.1, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load172.1 = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !224
  %43 = fmul <4 x float> %wide.load171.1, %broadcast.splat174
  %44 = fmul <4 x float> %wide.load172.1, %broadcast.splat176
  %45 = bitcast float* %next.gep167.1 to <4 x float>*
  %wide.load177.1 = load <4 x float>, <4 x float>* %45, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %46 = getelementptr float, float* %next.gep167.1, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load178.1 = load <4 x float>, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %48 = fadd <4 x float> %wide.load177.1, %43
  %49 = fadd <4 x float> %wide.load178.1, %44
  %50 = bitcast float* %next.gep167.1 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %51 = bitcast float* %46 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %index.next154.1 = add i64 %index153, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block137.unr-lcssa, label %vector.body136, !llvm.loop !229

middle.block137.unr-lcssa:                        ; preds = %vector.body136, %vector.ph150
  %index153.unr = phi i64 [ 0, %vector.ph150 ], [ %index.next154.1, %vector.body136 ]
  br i1 %lcmp.mod, label %middle.block137, label %vector.body136.epil

vector.body136.epil:                              ; preds = %middle.block137.unr-lcssa
  %next.gep167.epil = getelementptr float, float* %pfDst, i64 %index153.unr
  %next.gep169.epil = getelementptr float, float* %22, i64 %index153.unr
  %52 = bitcast float* %next.gep169.epil to <4 x float>*
  %wide.load171.epil = load <4 x float>, <4 x float>* %52, align 4, !tbaa !34, !alias.scope !224
  %53 = getelementptr float, float* %next.gep169.epil, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load172.epil = load <4 x float>, <4 x float>* %54, align 4, !tbaa !34, !alias.scope !224
  %55 = fmul <4 x float> %wide.load171.epil, %broadcast.splat174
  %56 = fmul <4 x float> %wide.load172.epil, %broadcast.splat176
  %57 = bitcast float* %next.gep167.epil to <4 x float>*
  %wide.load177.epil = load <4 x float>, <4 x float>* %57, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %58 = getelementptr float, float* %next.gep167.epil, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  %wide.load178.epil = load <4 x float>, <4 x float>* %59, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %60 = fadd <4 x float> %wide.load177.epil, %55
  %61 = fadd <4 x float> %wide.load178.epil, %56
  %62 = bitcast float* %next.gep167.epil to <4 x float>*
  store <4 x float> %60, <4 x float>* %62, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  %63 = bitcast float* %58 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 4, !tbaa !34, !alias.scope !227, !noalias !224
  br label %middle.block137

middle.block137:                                  ; preds = %vector.body136.epil, %middle.block137.unr-lcssa
  br i1 %cmp.n161, label %if.end.us.loopexit112, label %for.body13.us.preheader

for.body13.us.preheader:                          ; preds = %middle.block137, %vector.memcheck149, %if.then.us
  %niSample.058.us.ph = phi i32 [ 0, %vector.memcheck149 ], [ 0, %if.then.us ], [ %ind.end156, %middle.block137 ]
  %out.057.us.ph = phi float* [ %pfDst, %vector.memcheck149 ], [ %pfDst, %if.then.us ], [ %ind.end158, %middle.block137 ]
  %in.056.us.ph = phi float* [ %22, %vector.memcheck149 ], [ %22, %if.then.us ], [ %ind.end160, %middle.block137 ]
  %64 = sub i32 %nSamples, %niSample.058.us.ph
  %65 = xor i32 %niSample.058.us.ph, -1
  %66 = add i32 %65, %nSamples
  %xtraiter181 = and i32 %64, 3
  %lcmp.mod182 = icmp eq i32 %xtraiter181, 0
  br i1 %lcmp.mod182, label %for.body13.us.prol.loopexit, label %for.body13.us.prol

for.body13.us.prol:                               ; preds = %for.body13.us.prol, %for.body13.us.preheader
  %niSample.058.us.prol = phi i32 [ %inc.us.prol, %for.body13.us.prol ], [ %niSample.058.us.ph, %for.body13.us.preheader ]
  %out.057.us.prol = phi float* [ %incdec.ptr15.us.prol, %for.body13.us.prol ], [ %out.057.us.ph, %for.body13.us.preheader ]
  %in.056.us.prol = phi float* [ %incdec.ptr.us.prol, %for.body13.us.prol ], [ %in.056.us.ph, %for.body13.us.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body13.us.prol ], [ %xtraiter181, %for.body13.us.preheader ]
  %incdec.ptr.us.prol = getelementptr inbounds float, float* %in.056.us.prol, i64 1
  %67 = load float, float* %in.056.us.prol, align 4, !tbaa !34
  %mul14.us.prol = fmul float %67, %conv10.us
  %incdec.ptr15.us.prol = getelementptr inbounds float, float* %out.057.us.prol, i64 1
  %68 = load float, float* %out.057.us.prol, align 4, !tbaa !34
  %add16.us.prol = fadd float %68, %mul14.us.prol
  store float %add16.us.prol, float* %out.057.us.prol, align 4, !tbaa !34
  %inc.us.prol = add nuw i32 %niSample.058.us.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body13.us.prol.loopexit, label %for.body13.us.prol, !llvm.loop !230

for.body13.us.prol.loopexit:                      ; preds = %for.body13.us.prol, %for.body13.us.preheader
  %niSample.058.us.unr = phi i32 [ %niSample.058.us.ph, %for.body13.us.preheader ], [ %inc.us.prol, %for.body13.us.prol ]
  %out.057.us.unr = phi float* [ %out.057.us.ph, %for.body13.us.preheader ], [ %incdec.ptr15.us.prol, %for.body13.us.prol ]
  %in.056.us.unr = phi float* [ %in.056.us.ph, %for.body13.us.preheader ], [ %incdec.ptr.us.prol, %for.body13.us.prol ]
  %69 = icmp ult i32 %66, 3
  br i1 %69, label %if.end.us.loopexit112, label %for.body13.us

for.body13.us:                                    ; preds = %for.body13.us, %for.body13.us.prol.loopexit
  %niSample.058.us = phi i32 [ %inc.us.3, %for.body13.us ], [ %niSample.058.us.unr, %for.body13.us.prol.loopexit ]
  %out.057.us = phi float* [ %incdec.ptr15.us.3, %for.body13.us ], [ %out.057.us.unr, %for.body13.us.prol.loopexit ]
  %in.056.us = phi float* [ %incdec.ptr.us.3, %for.body13.us ], [ %in.056.us.unr, %for.body13.us.prol.loopexit ]
  %incdec.ptr.us = getelementptr inbounds float, float* %in.056.us, i64 1
  %70 = load float, float* %in.056.us, align 4, !tbaa !34
  %mul14.us = fmul float %70, %conv10.us
  %incdec.ptr15.us = getelementptr inbounds float, float* %out.057.us, i64 1
  %71 = load float, float* %out.057.us, align 4, !tbaa !34
  %add16.us = fadd float %71, %mul14.us
  store float %add16.us, float* %out.057.us, align 4, !tbaa !34
  %incdec.ptr.us.1 = getelementptr inbounds float, float* %in.056.us, i64 2
  %72 = load float, float* %incdec.ptr.us, align 4, !tbaa !34
  %mul14.us.1 = fmul float %72, %conv10.us
  %incdec.ptr15.us.1 = getelementptr inbounds float, float* %out.057.us, i64 2
  %73 = load float, float* %incdec.ptr15.us, align 4, !tbaa !34
  %add16.us.1 = fadd float %73, %mul14.us.1
  store float %add16.us.1, float* %incdec.ptr15.us, align 4, !tbaa !34
  %incdec.ptr.us.2 = getelementptr inbounds float, float* %in.056.us, i64 3
  %74 = load float, float* %incdec.ptr.us.1, align 4, !tbaa !34
  %mul14.us.2 = fmul float %74, %conv10.us
  %incdec.ptr15.us.2 = getelementptr inbounds float, float* %out.057.us, i64 3
  %75 = load float, float* %incdec.ptr15.us.1, align 4, !tbaa !34
  %add16.us.2 = fadd float %75, %mul14.us.2
  store float %add16.us.2, float* %incdec.ptr15.us.1, align 4, !tbaa !34
  %incdec.ptr.us.3 = getelementptr inbounds float, float* %in.056.us, i64 4
  %76 = load float, float* %incdec.ptr.us.2, align 4, !tbaa !34
  %mul14.us.3 = fmul float %76, %conv10.us
  %incdec.ptr15.us.3 = getelementptr inbounds float, float* %out.057.us, i64 4
  %77 = load float, float* %incdec.ptr15.us.2, align 4, !tbaa !34
  %add16.us.3 = fadd float %77, %mul14.us.3
  store float %add16.us.3, float* %incdec.ptr15.us.2, align 4, !tbaa !34
  %inc.us.3 = add nuw i32 %niSample.058.us, 4
  %exitcond.3 = icmp eq i32 %inc.us.3, %nSamples
  br i1 %exitcond.3, label %if.end.us.loopexit112, label %for.body13.us, !llvm.loop !231

for.body24.us.preheader:                          ; preds = %for.body.us
  %mul21.us = fmul float %25, 2.000000e+00
  br i1 %min.iters.check, label %for.body24.us.preheader179, label %vector.memcheck

for.body24.us.preheader179:                       ; preds = %middle.block, %vector.memcheck, %for.body24.us.preheader
  %niSample.162.us.ph = phi i32 [ 0, %vector.memcheck ], [ 0, %for.body24.us.preheader ], [ %ind.end, %middle.block ]
  %out.161.us.ph = phi float* [ %pfDst, %vector.memcheck ], [ %pfDst, %for.body24.us.preheader ], [ %ind.end122, %middle.block ]
  %in.160.us.ph = phi float* [ %22, %vector.memcheck ], [ %22, %for.body24.us.preheader ], [ %ind.end124, %middle.block ]
  %78 = sub i32 %nSamples, %niSample.162.us.ph
  %79 = xor i32 %niSample.162.us.ph, -1
  %80 = add i32 %79, %nSamples
  %xtraiter187 = and i32 %78, 3
  %lcmp.mod188 = icmp eq i32 %xtraiter187, 0
  br i1 %lcmp.mod188, label %for.body24.us.prol.loopexit, label %for.body24.us.prol

for.body24.us.prol:                               ; preds = %for.body24.us.prol, %for.body24.us.preheader179
  %niSample.162.us.prol = phi i32 [ %inc30.us.prol, %for.body24.us.prol ], [ %niSample.162.us.ph, %for.body24.us.preheader179 ]
  %out.161.us.prol = phi float* [ %incdec.ptr27.us.prol, %for.body24.us.prol ], [ %out.161.us.ph, %for.body24.us.preheader179 ]
  %in.160.us.prol = phi float* [ %incdec.ptr25.us.prol, %for.body24.us.prol ], [ %in.160.us.ph, %for.body24.us.preheader179 ]
  %prol.iter189 = phi i32 [ %prol.iter189.sub, %for.body24.us.prol ], [ %xtraiter187, %for.body24.us.preheader179 ]
  %incdec.ptr25.us.prol = getelementptr inbounds float, float* %in.160.us.prol, i64 1
  %81 = load float, float* %in.160.us.prol, align 4, !tbaa !34
  %mul26.us.prol = fmul float %mul21.us, %81
  %incdec.ptr27.us.prol = getelementptr inbounds float, float* %out.161.us.prol, i64 1
  %82 = load float, float* %out.161.us.prol, align 4, !tbaa !34
  %add28.us.prol = fadd float %82, %mul26.us.prol
  store float %add28.us.prol, float* %out.161.us.prol, align 4, !tbaa !34
  %inc30.us.prol = add nuw i32 %niSample.162.us.prol, 1
  %prol.iter189.sub = add i32 %prol.iter189, -1
  %prol.iter189.cmp = icmp eq i32 %prol.iter189.sub, 0
  br i1 %prol.iter189.cmp, label %for.body24.us.prol.loopexit, label %for.body24.us.prol, !llvm.loop !232

for.body24.us.prol.loopexit:                      ; preds = %for.body24.us.prol, %for.body24.us.preheader179
  %niSample.162.us.unr = phi i32 [ %niSample.162.us.ph, %for.body24.us.preheader179 ], [ %inc30.us.prol, %for.body24.us.prol ]
  %out.161.us.unr = phi float* [ %out.161.us.ph, %for.body24.us.preheader179 ], [ %incdec.ptr27.us.prol, %for.body24.us.prol ]
  %in.160.us.unr = phi float* [ %in.160.us.ph, %for.body24.us.preheader179 ], [ %incdec.ptr25.us.prol, %for.body24.us.prol ]
  %83 = icmp ult i32 %80, 3
  br i1 %83, label %if.end.us, label %for.body24.us

vector.memcheck:                                  ; preds = %for.body24.us.preheader
  %scevgep119 = getelementptr float, float* %22, i64 %8
  %bound0 = icmp ugt float* %scevgep119, %pfDst
  %bound1 = icmp ult float* %22, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body24.us.preheader179, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %ind.end124 = getelementptr float, float* %22, i64 %n.vec
  %broadcast.splatinsert130 = insertelement <4 x float> undef, float %mul21.us, i32 0
  %broadcast.splat131 = shufflevector <4 x float> %broadcast.splatinsert130, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert132 = insertelement <4 x float> undef, float %mul21.us, i32 0
  %broadcast.splat133 = shufflevector <4 x float> %broadcast.splatinsert132, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %19, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter186 = phi i64 [ %niter186.nsub.1, %vector.body ], [ %unroll_iter185, %vector.ph ]
  %next.gep = getelementptr float, float* %pfDst, i64 %index
  %next.gep127 = getelementptr float, float* %22, i64 %index
  %84 = bitcast float* %next.gep127 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !233
  %85 = getelementptr float, float* %next.gep127, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load129 = load <4 x float>, <4 x float>* %86, align 4, !tbaa !34, !alias.scope !233
  %87 = fmul <4 x float> %broadcast.splat131, %wide.load
  %88 = fmul <4 x float> %broadcast.splat133, %wide.load129
  %89 = bitcast float* %next.gep to <4 x float>*
  %wide.load134 = load <4 x float>, <4 x float>* %89, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %90 = getelementptr float, float* %next.gep, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load135 = load <4 x float>, <4 x float>* %91, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %92 = fadd <4 x float> %wide.load134, %87
  %93 = fadd <4 x float> %wide.load135, %88
  %94 = bitcast float* %next.gep to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %95 = bitcast float* %90 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %pfDst, i64 %index.next
  %next.gep127.1 = getelementptr float, float* %22, i64 %index.next
  %96 = bitcast float* %next.gep127.1 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !233
  %97 = getelementptr float, float* %next.gep127.1, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load129.1 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !34, !alias.scope !233
  %99 = fmul <4 x float> %broadcast.splat131, %wide.load.1
  %100 = fmul <4 x float> %broadcast.splat133, %wide.load129.1
  %101 = bitcast float* %next.gep.1 to <4 x float>*
  %wide.load134.1 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %102 = getelementptr float, float* %next.gep.1, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  %wide.load135.1 = load <4 x float>, <4 x float>* %103, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %104 = fadd <4 x float> %wide.load134.1, %99
  %105 = fadd <4 x float> %wide.load135.1, %100
  %106 = bitcast float* %next.gep.1 to <4 x float>*
  store <4 x float> %104, <4 x float>* %106, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %107 = bitcast float* %102 to <4 x float>*
  store <4 x float> %105, <4 x float>* %107, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %index.next.1 = add i64 %index, 16
  %niter186.nsub.1 = add i64 %niter186, -2
  %niter186.ncmp.1 = icmp eq i64 %niter186.nsub.1, 0
  br i1 %niter186.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !238

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod184, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %next.gep.epil = getelementptr float, float* %pfDst, i64 %index.unr
  %next.gep127.epil = getelementptr float, float* %22, i64 %index.unr
  %108 = bitcast float* %next.gep127.epil to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %108, align 4, !tbaa !34, !alias.scope !233
  %109 = getelementptr float, float* %next.gep127.epil, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load129.epil = load <4 x float>, <4 x float>* %110, align 4, !tbaa !34, !alias.scope !233
  %111 = fmul <4 x float> %broadcast.splat131, %wide.load.epil
  %112 = fmul <4 x float> %broadcast.splat133, %wide.load129.epil
  %113 = bitcast float* %next.gep.epil to <4 x float>*
  %wide.load134.epil = load <4 x float>, <4 x float>* %113, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %114 = getelementptr float, float* %next.gep.epil, i64 4
  %115 = bitcast float* %114 to <4 x float>*
  %wide.load135.epil = load <4 x float>, <4 x float>* %115, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %116 = fadd <4 x float> %wide.load134.epil, %111
  %117 = fadd <4 x float> %wide.load135.epil, %112
  %118 = bitcast float* %next.gep.epil to <4 x float>*
  store <4 x float> %116, <4 x float>* %118, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  %119 = bitcast float* %114 to <4 x float>*
  store <4 x float> %117, <4 x float>* %119, align 4, !tbaa !34, !alias.scope !236, !noalias !233
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %if.end.us, label %for.body24.us.preheader179

if.end.us.loopexit112:                            ; preds = %for.body13.us, %for.body13.us.prol.loopexit, %middle.block137
  %.pre = load i32, i32* %1, align 8, !tbaa !49
  br label %if.end.us

if.end.us:                                        ; preds = %for.body24.us, %if.end.us.loopexit112, %middle.block, %for.body24.us.prol.loopexit
  %120 = phi i32 [ %.pre, %if.end.us.loopexit112 ], [ %20, %middle.block ], [ %20, %for.body24.us ], [ %20, %for.body24.us.prol.loopexit ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %121 = zext i32 %120 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %121
  br i1 %cmp.us, label %for.body.us, label %for.end34

for.body24.us:                                    ; preds = %for.body24.us, %for.body24.us.prol.loopexit
  %niSample.162.us = phi i32 [ %inc30.us.3, %for.body24.us ], [ %niSample.162.us.unr, %for.body24.us.prol.loopexit ]
  %out.161.us = phi float* [ %incdec.ptr27.us.3, %for.body24.us ], [ %out.161.us.unr, %for.body24.us.prol.loopexit ]
  %in.160.us = phi float* [ %incdec.ptr25.us.3, %for.body24.us ], [ %in.160.us.unr, %for.body24.us.prol.loopexit ]
  %incdec.ptr25.us = getelementptr inbounds float, float* %in.160.us, i64 1
  %122 = load float, float* %in.160.us, align 4, !tbaa !34
  %mul26.us = fmul float %mul21.us, %122
  %incdec.ptr27.us = getelementptr inbounds float, float* %out.161.us, i64 1
  %123 = load float, float* %out.161.us, align 4, !tbaa !34
  %add28.us = fadd float %123, %mul26.us
  store float %add28.us, float* %out.161.us, align 4, !tbaa !34
  %incdec.ptr25.us.1 = getelementptr inbounds float, float* %in.160.us, i64 2
  %124 = load float, float* %incdec.ptr25.us, align 4, !tbaa !34
  %mul26.us.1 = fmul float %mul21.us, %124
  %incdec.ptr27.us.1 = getelementptr inbounds float, float* %out.161.us, i64 2
  %125 = load float, float* %incdec.ptr27.us, align 4, !tbaa !34
  %add28.us.1 = fadd float %125, %mul26.us.1
  store float %add28.us.1, float* %incdec.ptr27.us, align 4, !tbaa !34
  %incdec.ptr25.us.2 = getelementptr inbounds float, float* %in.160.us, i64 3
  %126 = load float, float* %incdec.ptr25.us.1, align 4, !tbaa !34
  %mul26.us.2 = fmul float %mul21.us, %126
  %incdec.ptr27.us.2 = getelementptr inbounds float, float* %out.161.us, i64 3
  %127 = load float, float* %incdec.ptr27.us.1, align 4, !tbaa !34
  %add28.us.2 = fadd float %127, %mul26.us.2
  store float %add28.us.2, float* %incdec.ptr27.us.1, align 4, !tbaa !34
  %incdec.ptr25.us.3 = getelementptr inbounds float, float* %in.160.us, i64 4
  %128 = load float, float* %incdec.ptr25.us.2, align 4, !tbaa !34
  %mul26.us.3 = fmul float %mul21.us, %128
  %incdec.ptr27.us.3 = getelementptr inbounds float, float* %out.161.us, i64 4
  %129 = load float, float* %incdec.ptr27.us.2, align 4, !tbaa !34
  %add28.us.3 = fadd float %129, %mul26.us.3
  store float %add28.us.3, float* %incdec.ptr27.us.2, align 4, !tbaa !34
  %inc30.us.3 = add nuw i32 %niSample.162.us, 4
  %exitcond114.3 = icmp eq i32 %inc30.us.3, %nSamples
  br i1 %exitcond114.3, label %if.end.us, label %for.body24.us, !llvm.loop !239

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %130 = phi i32 [ %132, %if.end ], [ %2, %for.body.lr.ph ]
  %niChannel.064 = phi i32 [ %inc33, %if.end ], [ 0, %for.body.lr.ph ]
  %131 = load i8, i8* %3, align 4, !tbaa !48, !range !51
  %tobool = icmp eq i8 %131, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %conv6 = uitofp i32 %niChannel.064 to double
  %call7 = tail call double @sqrt(double %conv6) #24
  %.pre115 = load i32, i32* %1, align 8, !tbaa !49
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %132 = phi i32 [ %.pre115, %if.then ], [ %130, %for.body ]
  %inc33 = add nuw i32 %niChannel.064, 1
  %cmp = icmp ult i32 %inc33, %132
  br i1 %cmp, label %for.body, label %for.end34

for.end34:                                        ; preds = %if.end, %if.end.us, %entry
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #15

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN17CAmbisonicDecoderC2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSpeakerSetUp to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %tobool = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %1
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %3) #26
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD0Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty.i = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %6 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !24
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i.i = icmp eq float* %7, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i.i = icmp eq float* %9, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %10 = bitcast float* %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %1
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %3) #26
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %entry
  %11 = bitcast %class.CAmbisonicDecoder* %this to i8*
  tail call void @_ZdlPv(i8* %11) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #3 align 2 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !48
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !49
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers)
  %3 = bitcast %class.CAmbisonicDecoder* %this to void (%class.CAmbisonicDecoder*)***
  %vtable = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %3, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable, i64 4
  %4 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicDecoder* %this)
  ret i1 true
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i1753 = alloca float, align 4
  %ref.tmp5.i.i1754 = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  store i32 %nSpeakerSetUp, i32* %m_nSpeakerSetUp, align 8, !tbaa !242
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %tobool = icmp eq %class.CAmbisonicSpeaker* %0, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 -1, i32 0, i32 3, i32 2
  %2 = bitcast float* %1 to i8*
  %3 = bitcast float* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %arraydestroy.isempty = icmp eq i64 %4, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %4
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %_ZN17CAmbisonicSpeakerD2Ev.exit ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  %5 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %6, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %arraydestroy.body
  %7 = bitcast float* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %7) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %arraydestroy.body
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %8, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %9 = bitcast float* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit

_ZN17CAmbisonicSpeakerD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %0
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %2) #26
  %.pr = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !242
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  %10 = phi i32 [ %nSpeakerSetUp, %entry ], [ %.pr, %arraydestroy.done3 ]
  switch i32 %10, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
    i32 1, label %sw.bb52
    i32 2, label %sw.bb103
    i32 3, label %sw.bb170
    i32 4, label %sw.bb252
    i32 5, label %for.body374.lr.ph
    i32 6, label %for.body423.lr.ph
    i32 7, label %for.body475.lr.ph
    i32 8, label %for.body527.lr.ph
    i32 9, label %for.body579.lr.ph
    i32 10, label %for.body631.lr.ph
    i32 11, label %sw.bb658
    i32 12, label %sw.bb751
    i32 13, label %sw.bb1087
    i32 14, label %sw.bb1181
  ]

sw.bb:                                            ; preds = %if.end
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 %nSpeakers, i32* %m_nSpeakers, align 4, !tbaa !243
  %conv = zext i32 %nSpeakers to i64
  %11 = mul nuw nsw i64 %conv, 88
  %12 = add nuw nsw i64 %11, 8
  %call = tail call i8* @_Znam(i64 %12) #25
  %13 = bitcast i8* %call to i64*
  store i64 %conv, i64* %13, align 16
  %14 = getelementptr inbounds i8, i8* %call, i64 8
  %15 = bitcast i8* %14 to %class.CAmbisonicSpeaker*
  %isempty = icmp eq i32 %nSpeakers, 0
  br i1 %isempty, label %arrayctor.cont.thread, label %new.ctorloop

arrayctor.cont.thread:                            ; preds = %sw.bb
  %16 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %16, align 8, !tbaa !240
  br label %sw.epilog

new.ctorloop:                                     ; preds = %sw.bb
  %arrayctor.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %15, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %arrayctor.loop, %new.ctorloop
  %arrayctor.cur = phi %class.CAmbisonicSpeaker* [ %15, %new.ctorloop ], [ %arrayctor.next, %arrayctor.loop ]
  %17 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %18, align 8, !tbaa !45
  %19 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %19, align 4, !tbaa !48
  %20 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %20, align 8, !tbaa !49
  %21 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %21, align 4, !tbaa !50
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 3, i32 2
  %22 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !52
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !tbaa !24
  %arrayctor.next = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %arrayctor.loop
  %.pre = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %phitmp = icmp eq i32 %.pre, 0
  %23 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %14, i8** %23, align 8, !tbaa !240
  br i1 %phitmp, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %24 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %26 = load i32, i32* %24, align 8, !tbaa !45
  %27 = load i8, i8* %25, align 4, !tbaa !48, !range !51
  %tobool161793 = icmp ne i8 %27, 0
  %28 = bitcast i8* %14 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1794 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %28, align 8, !tbaa !24
  %vfn1795 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1794, i64 2
  %29 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1795, align 8
  %call171796 = tail call zeroext i1 %29(%class.CAmbisonicSpeaker* nonnull %15, i32 %26, i1 zeroext %tobool161793, i32 0)
  %30 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %cmp1797 = icmp ugt i32 %30, 1
  br i1 %cmp1797, label %for.body.for.body_crit_edge, label %sw.epilog

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv.next17191798 = phi i64 [ %indvars.iv.next1719, %for.body.for.body_crit_edge ], [ 1, %for.body.lr.ph ]
  %.pre1742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %.pre1742, i64 %indvars.iv.next17191798
  %31 = load i32, i32* %24, align 8, !tbaa !45
  %32 = load i8, i8* %25, align 4, !tbaa !48, !range !51
  %tobool16 = icmp ne i8 %32, 0
  %33 = bitcast %class.CAmbisonicSpeaker* %arrayidx to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %33, align 8, !tbaa !24
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable, i64 2
  %34 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn, align 8
  %call17 = tail call zeroext i1 %34(%class.CAmbisonicSpeaker* nonnull %arrayidx, i32 %31, i1 zeroext %tobool16, i32 0)
  %indvars.iv.next1719 = add nuw nsw i64 %indvars.iv.next17191798, 1
  %35 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %36 = zext i32 %35 to i64
  %cmp = icmp ult i64 %indvars.iv.next1719, %36
  br i1 %cmp, label %for.body.for.body_crit_edge, label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %m_nSpeakers19 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers19, align 4, !tbaa !243
  %call22 = tail call i8* @_Znam(i64 96) #25
  %37 = bitcast i8* %call22 to i64*
  store i64 1, i64* %37, align 16
  %38 = getelementptr inbounds i8, i8* %call22, i64 8
  %39 = bitcast i8* %38 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %call22, i64 16
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds i8, i8* %call22, i64 20
  %43 = getelementptr inbounds i8, i8* %call22, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8, !tbaa !49
  %45 = getelementptr inbounds i8, i8* %call22, i64 28
  store i8 0, i8* %45, align 4, !tbaa !50
  %m_pfCoeff.i.i1610 = getelementptr inbounds i8, i8* %call22, i64 32
  %fDistance.i.i1611 = getelementptr inbounds i8, i8* %call22, i64 88
  %46 = bitcast i8* %fDistance.i.i1611 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1610, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %46, align 8, !tbaa !52
  %m_fGain.i.i1612 = getelementptr inbounds i8, i8* %call22, i64 92
  %47 = bitcast i8* %m_fGain.i.i1612 to float*
  store float 1.000000e+00, float* %47, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !24
  %48 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %38, i8** %48, align 8, !tbaa !240
  %49 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8, !tbaa !45
  %51 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %52 = load i8, i8* %51, align 4, !tbaa !48, !range !51
  %tobool44 = icmp ne i8 %52, 0
  store i32 %50, i32* %41, align 8, !tbaa !45
  store i8 %52, i8* %42, align 4, !tbaa !48
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %50, i1 zeroext %tobool44)
  store i32 %call.i.i.i, i32* %44, align 8, !tbaa !49
  %conv.i.i = zext i32 %call.i.i.i to i64
  %53 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !34
  %_M_finish.i.i.i.i = getelementptr inbounds i8, i8* %call22, i64 40
  %54 = bitcast i8* %_M_finish.i.i.i.i to float**
  %55 = bitcast i8* %_M_finish.i.i.i.i to i64*
  %56 = load i64, i64* %55, align 8, !tbaa !57
  %57 = bitcast i8* %m_pfCoeff.i.i1610 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i.i = sub i64 %56, %58
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %59 = inttoptr i64 %58 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %sw.bb18
  %60 = bitcast i8* %m_pfCoeff.i.i1610 to %"class.std::vector.0"*
  %61 = inttoptr i64 %56 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %60, float* %61, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %sw.bb18
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %59, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %54, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds i8, i8* %call22, i64 56
  %62 = load i32, i32* %41, align 8, !tbaa !45
  %add.i.i = add i32 %62, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %63 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !34
  %_M_finish.i.i6.i.i = getelementptr inbounds i8, i8* %call22, i64 64
  %64 = bitcast i8* %_M_finish.i.i6.i.i to float**
  %65 = bitcast i8* %_M_finish.i.i6.i.i to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !57
  %67 = bitcast i8* %m_pfOrderWeights.i.i to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i.i = sub i64 %66, %68
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %69 = inttoptr i64 %68 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %70 = bitcast i8* %m_pfOrderWeights.i.i to %"class.std::vector.0"*
  %71 = inttoptr i64 %66 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %70, float* %71, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %69, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %64, align 8, !tbaa !57
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit:        ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #24
  %72 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %73 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %72, align 8, !tbaa !240
  %74 = bitcast %class.CAmbisonicSource* %73 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable50 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %74, align 8, !tbaa !24
  %vfn51 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable50, i64 5
  %75 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn51, align 8
  tail call void %75(%class.CAmbisonicSource* %73, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.bb52:                                          ; preds = %if.end
  %m_nSpeakers53 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 2, i32* %m_nSpeakers53, align 4, !tbaa !243
  %call56 = tail call i8* @_Znam(i64 184) #25
  %76 = bitcast i8* %call56 to i64*
  store i64 2, i64* %76, align 16
  %77 = getelementptr inbounds i8, i8* %call56, i64 8
  %78 = bitcast i8* %77 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %call56, i64 16
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 8, !tbaa !45
  %81 = getelementptr inbounds i8, i8* %call56, i64 20
  store i8 0, i8* %81, align 4, !tbaa !48
  %82 = getelementptr inbounds i8, i8* %call56, i64 24
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8, !tbaa !49
  %84 = getelementptr inbounds i8, i8* %call56, i64 28
  store i8 0, i8* %84, align 4, !tbaa !50
  %m_pfCoeff.i.i1613 = getelementptr inbounds i8, i8* %call56, i64 32
  %fDistance.i.i1614 = getelementptr inbounds i8, i8* %call56, i64 88
  %85 = bitcast i8* %fDistance.i.i1614 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %85, align 8, !tbaa !52
  %m_fGain.i.i1615 = getelementptr inbounds i8, i8* %call56, i64 92
  %86 = bitcast i8* %m_fGain.i.i1615 to float*
  store float 1.000000e+00, float* %86, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8, !tbaa !24
  %arrayctor.next70 = getelementptr inbounds i8, i8* %call56, i64 96
  %87 = bitcast i8* %arrayctor.next70 to i32 (...)***
  %88 = getelementptr inbounds i8, i8* %call56, i64 104
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 8, !tbaa !45
  %90 = getelementptr inbounds i8, i8* %call56, i64 108
  store i8 0, i8* %90, align 4, !tbaa !48
  %91 = getelementptr inbounds i8, i8* %call56, i64 112
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 8, !tbaa !49
  %93 = getelementptr inbounds i8, i8* %call56, i64 116
  store i8 0, i8* %93, align 4, !tbaa !50
  %m_pfCoeff.i.i1613.1 = getelementptr inbounds i8, i8* %call56, i64 120
  %fDistance.i.i1614.1 = getelementptr inbounds i8, i8* %call56, i64 176
  %94 = bitcast i8* %fDistance.i.i1614.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %94, align 8, !tbaa !52
  %m_fGain.i.i1615.1 = getelementptr inbounds i8, i8* %call56, i64 180
  %95 = bitcast i8* %m_fGain.i.i1615.1 to float*
  store float 1.000000e+00, float* %95, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8, !tbaa !24
  %96 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %77, i8** %96, align 8, !tbaa !240
  %call74 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1527 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call74, i32 0
  %97 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %98 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8, !tbaa !45
  %100 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %101 = load i8, i8* %100, align 4, !tbaa !48, !range !51
  %tobool79 = icmp ne i8 %101, 0
  %102 = bitcast %class.CAmbisonicSpeaker* %97 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable80 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %102, align 8, !tbaa !24
  %vfn81 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable80, i64 2
  %103 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn81, align 8
  %call82 = tail call zeroext i1 %103(%class.CAmbisonicSpeaker* %97, i32 %99, i1 zeroext %tobool79, i32 0)
  %104 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %105 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %104, align 8, !tbaa !240
  %106 = bitcast %class.CAmbisonicSource* %105 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable86 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %106, align 8, !tbaa !24
  %vfn87 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable86, i64 5
  %107 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn87, align 8
  tail call void %107(%class.CAmbisonicSource* %105, <2 x float> %polPosition.sroa.0.0.vec.insert1527, float 1.000000e+00)
  %call88 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1525 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1527, float %call88, i32 0
  %108 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx91 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %108, i64 1
  %109 = load i32, i32* %98, align 8, !tbaa !45
  %110 = load i8, i8* %100, align 4, !tbaa !48, !range !51
  %tobool94 = icmp ne i8 %110, 0
  %111 = bitcast %class.CAmbisonicSpeaker* %arrayidx91 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable95 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %111, align 8, !tbaa !24
  %vfn96 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable95, i64 2
  %112 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn96, align 8
  %call97 = tail call zeroext i1 %112(%class.CAmbisonicSpeaker* nonnull %arrayidx91, i32 %109, i1 zeroext %tobool94, i32 0)
  %113 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %114 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %113, i64 1, i32 0
  %115 = bitcast %class.CAmbisonicSource* %114 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable101 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %115, align 8, !tbaa !24
  %vfn102 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable101, i64 5
  %116 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn102, align 8
  tail call void %116(%class.CAmbisonicSource* nonnull %114, <2 x float> %polPosition.sroa.0.0.vec.insert1525, float 1.000000e+00)
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.end
  %m_nSpeakers104 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 3, i32* %m_nSpeakers104, align 4, !tbaa !243
  %call107 = tail call i8* @_Znam(i64 272) #25
  %117 = bitcast i8* %call107 to i64*
  store i64 3, i64* %117, align 16
  %118 = getelementptr inbounds i8, i8* %call107, i64 8
  %119 = bitcast i8* %118 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %call107, i64 16
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !tbaa !45
  %122 = getelementptr inbounds i8, i8* %call107, i64 20
  store i8 0, i8* %122, align 4, !tbaa !48
  %123 = getelementptr inbounds i8, i8* %call107, i64 24
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 8, !tbaa !49
  %125 = getelementptr inbounds i8, i8* %call107, i64 28
  store i8 0, i8* %125, align 4, !tbaa !50
  %m_pfCoeff.i.i1616 = getelementptr inbounds i8, i8* %call107, i64 32
  %fDistance.i.i1617 = getelementptr inbounds i8, i8* %call107, i64 88
  %126 = bitcast i8* %fDistance.i.i1617 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %126, align 8, !tbaa !52
  %m_fGain.i.i1618 = getelementptr inbounds i8, i8* %call107, i64 92
  %127 = bitcast i8* %m_fGain.i.i1618 to float*
  store float 1.000000e+00, float* %127, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8, !tbaa !24
  %arrayctor.next121 = getelementptr inbounds i8, i8* %call107, i64 96
  %128 = bitcast i8* %arrayctor.next121 to i32 (...)***
  %129 = getelementptr inbounds i8, i8* %call107, i64 104
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130, align 8, !tbaa !45
  %131 = getelementptr inbounds i8, i8* %call107, i64 108
  store i8 0, i8* %131, align 4, !tbaa !48
  %132 = getelementptr inbounds i8, i8* %call107, i64 112
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 8, !tbaa !49
  %134 = getelementptr inbounds i8, i8* %call107, i64 116
  store i8 0, i8* %134, align 4, !tbaa !50
  %m_pfCoeff.i.i1616.1 = getelementptr inbounds i8, i8* %call107, i64 120
  %fDistance.i.i1617.1 = getelementptr inbounds i8, i8* %call107, i64 176
  %135 = bitcast i8* %fDistance.i.i1617.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %135, align 8, !tbaa !52
  %m_fGain.i.i1618.1 = getelementptr inbounds i8, i8* %call107, i64 180
  %136 = bitcast i8* %m_fGain.i.i1618.1 to float*
  store float 1.000000e+00, float* %136, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8, !tbaa !24
  %arrayctor.next121.1 = getelementptr inbounds i8, i8* %call107, i64 184
  %137 = bitcast i8* %arrayctor.next121.1 to i32 (...)***
  %138 = getelementptr inbounds i8, i8* %call107, i64 192
  %139 = bitcast i8* %138 to i32*
  store i32 0, i32* %139, align 8, !tbaa !45
  %140 = getelementptr inbounds i8, i8* %call107, i64 196
  store i8 0, i8* %140, align 4, !tbaa !48
  %141 = getelementptr inbounds i8, i8* %call107, i64 200
  %142 = bitcast i8* %141 to i32*
  store i32 0, i32* %142, align 8, !tbaa !49
  %143 = getelementptr inbounds i8, i8* %call107, i64 204
  store i8 0, i8* %143, align 4, !tbaa !50
  %m_pfCoeff.i.i1616.2 = getelementptr inbounds i8, i8* %call107, i64 208
  %fDistance.i.i1617.2 = getelementptr inbounds i8, i8* %call107, i64 264
  %144 = bitcast i8* %fDistance.i.i1617.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %144, align 8, !tbaa !52
  %m_fGain.i.i1618.2 = getelementptr inbounds i8, i8* %call107, i64 268
  %145 = bitcast i8* %m_fGain.i.i1618.2 to float*
  store float 1.000000e+00, float* %145, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8, !tbaa !24
  %146 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %118, i8** %146, align 8, !tbaa !240
  %call125 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1523 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call125, i32 0
  %147 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %148 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %149 = load i32, i32* %148, align 8, !tbaa !45
  %150 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %151 = load i8, i8* %150, align 4, !tbaa !48, !range !51
  %tobool131 = icmp ne i8 %151, 0
  %152 = bitcast %class.CAmbisonicSpeaker* %147 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %152, align 8, !tbaa !24
  %vfn133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable132, i64 2
  %153 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn133, align 8
  %call134 = tail call zeroext i1 %153(%class.CAmbisonicSpeaker* %147, i32 %149, i1 zeroext %tobool131, i32 0)
  %154 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %155 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %154, align 8, !tbaa !240
  %156 = bitcast %class.CAmbisonicSource* %155 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable138 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %156, align 8, !tbaa !24
  %vfn139 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable138, i64 5
  %157 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn139, align 8
  tail call void %157(%class.CAmbisonicSource* %155, <2 x float> %polPosition.sroa.0.0.vec.insert1523, float 1.000000e+00)
  %call140 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1521 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1523, float %call140, i32 0
  %158 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx143 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %158, i64 1
  %159 = load i32, i32* %148, align 8, !tbaa !45
  %160 = load i8, i8* %150, align 4, !tbaa !48, !range !51
  %tobool146 = icmp ne i8 %160, 0
  %161 = bitcast %class.CAmbisonicSpeaker* %arrayidx143 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable147 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %161, align 8, !tbaa !24
  %vfn148 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable147, i64 2
  %162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn148, align 8
  %call149 = tail call zeroext i1 %162(%class.CAmbisonicSpeaker* nonnull %arrayidx143, i32 %159, i1 zeroext %tobool146, i32 0)
  %163 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %164 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %163, i64 1, i32 0
  %165 = bitcast %class.CAmbisonicSource* %164 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable153 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %165, align 8, !tbaa !24
  %vfn154 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable153, i64 5
  %166 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn154, align 8
  tail call void %166(%class.CAmbisonicSource* nonnull %164, <2 x float> %polPosition.sroa.0.0.vec.insert1521, float 1.000000e+00)
  %call155 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1519 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1521, float %call155, i32 0
  %167 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx158 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %167, i64 2
  %168 = load i32, i32* %148, align 8, !tbaa !45
  %169 = load i8, i8* %150, align 4, !tbaa !48, !range !51
  %tobool161 = icmp ne i8 %169, 0
  %170 = bitcast %class.CAmbisonicSpeaker* %arrayidx158 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %170, align 8, !tbaa !24
  %vfn163 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable162, i64 2
  %171 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn163, align 8
  %call164 = tail call zeroext i1 %171(%class.CAmbisonicSpeaker* nonnull %arrayidx158, i32 %168, i1 zeroext %tobool161, i32 0)
  %172 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %173 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %172, i64 2, i32 0
  %174 = bitcast %class.CAmbisonicSource* %173 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable168 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %174, align 8, !tbaa !24
  %vfn169 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable168, i64 5
  %175 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn169, align 8
  tail call void %175(%class.CAmbisonicSource* nonnull %173, <2 x float> %polPosition.sroa.0.0.vec.insert1519, float 1.000000e+00)
  br label %sw.epilog

sw.bb170:                                         ; preds = %if.end
  %m_nSpeakers171 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 4, i32* %m_nSpeakers171, align 4, !tbaa !243
  %call174 = tail call i8* @_Znam(i64 360) #25
  %176 = bitcast i8* %call174 to i64*
  store i64 4, i64* %176, align 16
  %177 = getelementptr inbounds i8, i8* %call174, i64 8
  %178 = bitcast i8* %177 to i32 (...)***
  %179 = getelementptr inbounds i8, i8* %call174, i64 16
  %180 = bitcast i8* %179 to i32*
  store i32 0, i32* %180, align 8, !tbaa !45
  %181 = getelementptr inbounds i8, i8* %call174, i64 20
  store i8 0, i8* %181, align 4, !tbaa !48
  %182 = getelementptr inbounds i8, i8* %call174, i64 24
  %183 = bitcast i8* %182 to i32*
  store i32 0, i32* %183, align 8, !tbaa !49
  %184 = getelementptr inbounds i8, i8* %call174, i64 28
  store i8 0, i8* %184, align 4, !tbaa !50
  %m_pfCoeff.i.i1619 = getelementptr inbounds i8, i8* %call174, i64 32
  %fDistance.i.i1620 = getelementptr inbounds i8, i8* %call174, i64 88
  %185 = bitcast i8* %fDistance.i.i1620 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %185, align 8, !tbaa !52
  %m_fGain.i.i1621 = getelementptr inbounds i8, i8* %call174, i64 92
  %186 = bitcast i8* %m_fGain.i.i1621 to float*
  store float 1.000000e+00, float* %186, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8, !tbaa !24
  %arrayctor.next188 = getelementptr inbounds i8, i8* %call174, i64 96
  %187 = bitcast i8* %arrayctor.next188 to i32 (...)***
  %188 = getelementptr inbounds i8, i8* %call174, i64 104
  %189 = bitcast i8* %188 to i32*
  store i32 0, i32* %189, align 8, !tbaa !45
  %190 = getelementptr inbounds i8, i8* %call174, i64 108
  store i8 0, i8* %190, align 4, !tbaa !48
  %191 = getelementptr inbounds i8, i8* %call174, i64 112
  %192 = bitcast i8* %191 to i32*
  store i32 0, i32* %192, align 8, !tbaa !49
  %193 = getelementptr inbounds i8, i8* %call174, i64 116
  store i8 0, i8* %193, align 4, !tbaa !50
  %m_pfCoeff.i.i1619.1 = getelementptr inbounds i8, i8* %call174, i64 120
  %fDistance.i.i1620.1 = getelementptr inbounds i8, i8* %call174, i64 176
  %194 = bitcast i8* %fDistance.i.i1620.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %194, align 8, !tbaa !52
  %m_fGain.i.i1621.1 = getelementptr inbounds i8, i8* %call174, i64 180
  %195 = bitcast i8* %m_fGain.i.i1621.1 to float*
  store float 1.000000e+00, float* %195, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8, !tbaa !24
  %arrayctor.next188.1 = getelementptr inbounds i8, i8* %call174, i64 184
  %196 = bitcast i8* %arrayctor.next188.1 to i32 (...)***
  %197 = getelementptr inbounds i8, i8* %call174, i64 192
  %198 = bitcast i8* %197 to i32*
  store i32 0, i32* %198, align 8, !tbaa !45
  %199 = getelementptr inbounds i8, i8* %call174, i64 196
  store i8 0, i8* %199, align 4, !tbaa !48
  %200 = getelementptr inbounds i8, i8* %call174, i64 200
  %201 = bitcast i8* %200 to i32*
  store i32 0, i32* %201, align 8, !tbaa !49
  %202 = getelementptr inbounds i8, i8* %call174, i64 204
  store i8 0, i8* %202, align 4, !tbaa !50
  %m_pfCoeff.i.i1619.2 = getelementptr inbounds i8, i8* %call174, i64 208
  %fDistance.i.i1620.2 = getelementptr inbounds i8, i8* %call174, i64 264
  %203 = bitcast i8* %fDistance.i.i1620.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %203, align 8, !tbaa !52
  %m_fGain.i.i1621.2 = getelementptr inbounds i8, i8* %call174, i64 268
  %204 = bitcast i8* %m_fGain.i.i1621.2 to float*
  store float 1.000000e+00, float* %204, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8, !tbaa !24
  %arrayctor.next188.2 = getelementptr inbounds i8, i8* %call174, i64 272
  %205 = bitcast i8* %arrayctor.next188.2 to i32 (...)***
  %206 = getelementptr inbounds i8, i8* %call174, i64 280
  %207 = bitcast i8* %206 to i32*
  store i32 0, i32* %207, align 8, !tbaa !45
  %208 = getelementptr inbounds i8, i8* %call174, i64 284
  store i8 0, i8* %208, align 4, !tbaa !48
  %209 = getelementptr inbounds i8, i8* %call174, i64 288
  %210 = bitcast i8* %209 to i32*
  store i32 0, i32* %210, align 8, !tbaa !49
  %211 = getelementptr inbounds i8, i8* %call174, i64 292
  store i8 0, i8* %211, align 4, !tbaa !50
  %m_pfCoeff.i.i1619.3 = getelementptr inbounds i8, i8* %call174, i64 296
  %fDistance.i.i1620.3 = getelementptr inbounds i8, i8* %call174, i64 352
  %212 = bitcast i8* %fDistance.i.i1620.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %212, align 8, !tbaa !52
  %m_fGain.i.i1621.3 = getelementptr inbounds i8, i8* %call174, i64 356
  %213 = bitcast i8* %m_fGain.i.i1621.3 to float*
  store float 1.000000e+00, float* %213, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8, !tbaa !24
  %214 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %177, i8** %214, align 8, !tbaa !240
  %call192 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1517 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call192, i32 0
  %215 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %216 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %217 = load i32, i32* %216, align 8, !tbaa !45
  %218 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %219 = load i8, i8* %218, align 4, !tbaa !48, !range !51
  %tobool198 = icmp ne i8 %219, 0
  %220 = bitcast %class.CAmbisonicSpeaker* %215 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable199 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %220, align 8, !tbaa !24
  %vfn200 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable199, i64 2
  %221 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn200, align 8
  %call201 = tail call zeroext i1 %221(%class.CAmbisonicSpeaker* %215, i32 %217, i1 zeroext %tobool198, i32 0)
  %222 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %223 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %222, align 8, !tbaa !240
  %224 = bitcast %class.CAmbisonicSource* %223 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable205 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %224, align 8, !tbaa !24
  %vfn206 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable205, i64 5
  %225 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn206, align 8
  tail call void %225(%class.CAmbisonicSource* %223, <2 x float> %polPosition.sroa.0.0.vec.insert1517, float 1.000000e+00)
  %call207 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1515 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1517, float %call207, i32 0
  %226 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx210 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %226, i64 1
  %227 = load i32, i32* %216, align 8, !tbaa !45
  %228 = load i8, i8* %218, align 4, !tbaa !48, !range !51
  %tobool213 = icmp ne i8 %228, 0
  %229 = bitcast %class.CAmbisonicSpeaker* %arrayidx210 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable214 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %229, align 8, !tbaa !24
  %vfn215 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable214, i64 2
  %230 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn215, align 8
  %call216 = tail call zeroext i1 %230(%class.CAmbisonicSpeaker* nonnull %arrayidx210, i32 %227, i1 zeroext %tobool213, i32 0)
  %231 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %232 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %231, i64 1, i32 0
  %233 = bitcast %class.CAmbisonicSource* %232 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable220 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %233, align 8, !tbaa !24
  %vfn221 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable220, i64 5
  %234 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn221, align 8
  tail call void %234(%class.CAmbisonicSource* nonnull %232, <2 x float> %polPosition.sroa.0.0.vec.insert1515, float 1.000000e+00)
  %call222 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1513 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1515, float %call222, i32 0
  %235 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx225 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %235, i64 2
  %236 = load i32, i32* %216, align 8, !tbaa !45
  %237 = load i8, i8* %218, align 4, !tbaa !48, !range !51
  %tobool228 = icmp ne i8 %237, 0
  %238 = bitcast %class.CAmbisonicSpeaker* %arrayidx225 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %238, align 8, !tbaa !24
  %vfn230 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable229, i64 2
  %239 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn230, align 8
  %call231 = tail call zeroext i1 %239(%class.CAmbisonicSpeaker* nonnull %arrayidx225, i32 %236, i1 zeroext %tobool228, i32 0)
  %240 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %241 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %240, i64 2, i32 0
  %242 = bitcast %class.CAmbisonicSource* %241 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable235 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %242, align 8, !tbaa !24
  %vfn236 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable235, i64 5
  %243 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn236, align 8
  tail call void %243(%class.CAmbisonicSource* nonnull %241, <2 x float> %polPosition.sroa.0.0.vec.insert1513, float 1.000000e+00)
  %call237 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1511 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1513, float %call237, i32 0
  %244 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %244, i64 3
  %245 = load i32, i32* %216, align 8, !tbaa !45
  %246 = load i8, i8* %218, align 4, !tbaa !48, !range !51
  %tobool243 = icmp ne i8 %246, 0
  %247 = bitcast %class.CAmbisonicSpeaker* %arrayidx240 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable244 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %247, align 8, !tbaa !24
  %vfn245 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable244, i64 2
  %248 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn245, align 8
  %call246 = tail call zeroext i1 %248(%class.CAmbisonicSpeaker* nonnull %arrayidx240, i32 %245, i1 zeroext %tobool243, i32 0)
  %249 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %250 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %249, i64 3, i32 0
  %251 = bitcast %class.CAmbisonicSource* %250 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable250 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %251, align 8, !tbaa !24
  %vfn251 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable250, i64 5
  %252 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn251, align 8
  tail call void %252(%class.CAmbisonicSource* nonnull %250, <2 x float> %polPosition.sroa.0.0.vec.insert1511, float 1.000000e+00)
  br label %sw.epilog

sw.bb252:                                         ; preds = %if.end
  %m_nSpeakers253 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers253, align 4, !tbaa !243
  %call256 = tail call i8* @_Znam(i64 448) #25
  %253 = bitcast i8* %call256 to i64*
  store i64 5, i64* %253, align 16
  %254 = getelementptr inbounds i8, i8* %call256, i64 8
  %255 = bitcast i8* %254 to i32 (...)***
  %256 = getelementptr inbounds i8, i8* %call256, i64 16
  %257 = bitcast i8* %256 to i32*
  store i32 0, i32* %257, align 8, !tbaa !45
  %258 = getelementptr inbounds i8, i8* %call256, i64 20
  store i8 0, i8* %258, align 4, !tbaa !48
  %259 = getelementptr inbounds i8, i8* %call256, i64 24
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 8, !tbaa !49
  %261 = getelementptr inbounds i8, i8* %call256, i64 28
  store i8 0, i8* %261, align 4, !tbaa !50
  %m_pfCoeff.i.i1625 = getelementptr inbounds i8, i8* %call256, i64 32
  %fDistance.i.i1626 = getelementptr inbounds i8, i8* %call256, i64 88
  %262 = bitcast i8* %fDistance.i.i1626 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %262, align 8, !tbaa !52
  %m_fGain.i.i1627 = getelementptr inbounds i8, i8* %call256, i64 92
  %263 = bitcast i8* %m_fGain.i.i1627 to float*
  store float 1.000000e+00, float* %263, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %255, align 8, !tbaa !24
  %arrayctor.next270 = getelementptr inbounds i8, i8* %call256, i64 96
  %264 = bitcast i8* %arrayctor.next270 to i32 (...)***
  %265 = getelementptr inbounds i8, i8* %call256, i64 104
  %266 = bitcast i8* %265 to i32*
  store i32 0, i32* %266, align 8, !tbaa !45
  %267 = getelementptr inbounds i8, i8* %call256, i64 108
  store i8 0, i8* %267, align 4, !tbaa !48
  %268 = getelementptr inbounds i8, i8* %call256, i64 112
  %269 = bitcast i8* %268 to i32*
  store i32 0, i32* %269, align 8, !tbaa !49
  %270 = getelementptr inbounds i8, i8* %call256, i64 116
  store i8 0, i8* %270, align 4, !tbaa !50
  %m_pfCoeff.i.i1625.1 = getelementptr inbounds i8, i8* %call256, i64 120
  %fDistance.i.i1626.1 = getelementptr inbounds i8, i8* %call256, i64 176
  %271 = bitcast i8* %fDistance.i.i1626.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %271, align 8, !tbaa !52
  %m_fGain.i.i1627.1 = getelementptr inbounds i8, i8* %call256, i64 180
  %272 = bitcast i8* %m_fGain.i.i1627.1 to float*
  store float 1.000000e+00, float* %272, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %264, align 8, !tbaa !24
  %arrayctor.next270.1 = getelementptr inbounds i8, i8* %call256, i64 184
  %273 = bitcast i8* %arrayctor.next270.1 to i32 (...)***
  %274 = getelementptr inbounds i8, i8* %call256, i64 192
  %275 = bitcast i8* %274 to i32*
  store i32 0, i32* %275, align 8, !tbaa !45
  %276 = getelementptr inbounds i8, i8* %call256, i64 196
  store i8 0, i8* %276, align 4, !tbaa !48
  %277 = getelementptr inbounds i8, i8* %call256, i64 200
  %278 = bitcast i8* %277 to i32*
  store i32 0, i32* %278, align 8, !tbaa !49
  %279 = getelementptr inbounds i8, i8* %call256, i64 204
  store i8 0, i8* %279, align 4, !tbaa !50
  %m_pfCoeff.i.i1625.2 = getelementptr inbounds i8, i8* %call256, i64 208
  %fDistance.i.i1626.2 = getelementptr inbounds i8, i8* %call256, i64 264
  %280 = bitcast i8* %fDistance.i.i1626.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %280, align 8, !tbaa !52
  %m_fGain.i.i1627.2 = getelementptr inbounds i8, i8* %call256, i64 268
  %281 = bitcast i8* %m_fGain.i.i1627.2 to float*
  store float 1.000000e+00, float* %281, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8, !tbaa !24
  %arrayctor.next270.2 = getelementptr inbounds i8, i8* %call256, i64 272
  %282 = bitcast i8* %arrayctor.next270.2 to i32 (...)***
  %283 = getelementptr inbounds i8, i8* %call256, i64 280
  %284 = bitcast i8* %283 to i32*
  store i32 0, i32* %284, align 8, !tbaa !45
  %285 = getelementptr inbounds i8, i8* %call256, i64 284
  store i8 0, i8* %285, align 4, !tbaa !48
  %286 = getelementptr inbounds i8, i8* %call256, i64 288
  %287 = bitcast i8* %286 to i32*
  store i32 0, i32* %287, align 8, !tbaa !49
  %288 = getelementptr inbounds i8, i8* %call256, i64 292
  store i8 0, i8* %288, align 4, !tbaa !50
  %m_pfCoeff.i.i1625.3 = getelementptr inbounds i8, i8* %call256, i64 296
  %fDistance.i.i1626.3 = getelementptr inbounds i8, i8* %call256, i64 352
  %289 = bitcast i8* %fDistance.i.i1626.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %289, align 8, !tbaa !52
  %m_fGain.i.i1627.3 = getelementptr inbounds i8, i8* %call256, i64 356
  %290 = bitcast i8* %m_fGain.i.i1627.3 to float*
  store float 1.000000e+00, float* %290, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8, !tbaa !24
  %arrayctor.next270.3 = getelementptr inbounds i8, i8* %call256, i64 360
  %291 = bitcast i8* %arrayctor.next270.3 to i32 (...)***
  %292 = getelementptr inbounds i8, i8* %call256, i64 368
  %293 = bitcast i8* %292 to i32*
  store i32 0, i32* %293, align 8, !tbaa !45
  %294 = getelementptr inbounds i8, i8* %call256, i64 372
  store i8 0, i8* %294, align 4, !tbaa !48
  %295 = getelementptr inbounds i8, i8* %call256, i64 376
  %296 = bitcast i8* %295 to i32*
  store i32 0, i32* %296, align 8, !tbaa !49
  %297 = getelementptr inbounds i8, i8* %call256, i64 380
  store i8 0, i8* %297, align 4, !tbaa !50
  %m_pfCoeff.i.i1625.4 = getelementptr inbounds i8, i8* %call256, i64 384
  %fDistance.i.i1626.4 = getelementptr inbounds i8, i8* %call256, i64 440
  %298 = bitcast i8* %fDistance.i.i1626.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %298, align 8, !tbaa !52
  %m_fGain.i.i1627.4 = getelementptr inbounds i8, i8* %call256, i64 444
  %299 = bitcast i8* %m_fGain.i.i1627.4 to float*
  store float 1.000000e+00, float* %299, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8, !tbaa !24
  %300 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %254, i8** %300, align 8, !tbaa !240
  %call274 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1509 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call274, i32 0
  %301 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %302 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %303 = load i32, i32* %302, align 8, !tbaa !45
  %304 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %305 = load i8, i8* %304, align 4, !tbaa !48, !range !51
  %tobool280 = icmp ne i8 %305, 0
  %306 = bitcast %class.CAmbisonicSpeaker* %301 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable281 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %306, align 8, !tbaa !24
  %vfn282 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable281, i64 2
  %307 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn282, align 8
  %call283 = tail call zeroext i1 %307(%class.CAmbisonicSpeaker* %301, i32 %303, i1 zeroext %tobool280, i32 0)
  %308 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %309 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %308, align 8, !tbaa !240
  %310 = bitcast %class.CAmbisonicSource* %309 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable287 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %310, align 8, !tbaa !24
  %vfn288 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable287, i64 5
  %311 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn288, align 8
  tail call void %311(%class.CAmbisonicSource* %309, <2 x float> %polPosition.sroa.0.0.vec.insert1509, float 1.000000e+00)
  %call289 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1507 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1509, float %call289, i32 0
  %312 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx292 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %312, i64 1
  %313 = load i32, i32* %302, align 8, !tbaa !45
  %314 = load i8, i8* %304, align 4, !tbaa !48, !range !51
  %tobool295 = icmp ne i8 %314, 0
  %315 = bitcast %class.CAmbisonicSpeaker* %arrayidx292 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable296 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %315, align 8, !tbaa !24
  %vfn297 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable296, i64 2
  %316 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn297, align 8
  %call298 = tail call zeroext i1 %316(%class.CAmbisonicSpeaker* nonnull %arrayidx292, i32 %313, i1 zeroext %tobool295, i32 0)
  %317 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %318 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %317, i64 1, i32 0
  %319 = bitcast %class.CAmbisonicSource* %318 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable302 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %319, align 8, !tbaa !24
  %vfn303 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable302, i64 5
  %320 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn303, align 8
  tail call void %320(%class.CAmbisonicSource* nonnull %318, <2 x float> %polPosition.sroa.0.0.vec.insert1507, float 1.000000e+00)
  %call304 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1505 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1507, float %call304, i32 0
  %321 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx307 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %321, i64 2
  %322 = load i32, i32* %302, align 8, !tbaa !45
  %323 = load i8, i8* %304, align 4, !tbaa !48, !range !51
  %tobool310 = icmp ne i8 %323, 0
  %324 = bitcast %class.CAmbisonicSpeaker* %arrayidx307 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable311 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %324, align 8, !tbaa !24
  %vfn312 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable311, i64 2
  %325 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn312, align 8
  %call313 = tail call zeroext i1 %325(%class.CAmbisonicSpeaker* nonnull %arrayidx307, i32 %322, i1 zeroext %tobool310, i32 0)
  %326 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %327 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %326, i64 2, i32 0
  %328 = bitcast %class.CAmbisonicSource* %327 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable317 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %328, align 8, !tbaa !24
  %vfn318 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable317, i64 5
  %329 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn318, align 8
  tail call void %329(%class.CAmbisonicSource* nonnull %327, <2 x float> %polPosition.sroa.0.0.vec.insert1505, float 1.000000e+00)
  %call319 = tail call float @_Z16DegreesToRadiansf(float 1.100000e+02)
  %polPosition.sroa.0.0.vec.insert = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1505, float %call319, i32 0
  %330 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx322 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %330, i64 3
  %331 = load i32, i32* %302, align 8, !tbaa !45
  %332 = load i8, i8* %304, align 4, !tbaa !48, !range !51
  %tobool325 = icmp ne i8 %332, 0
  %333 = bitcast %class.CAmbisonicSpeaker* %arrayidx322 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable326 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %333, align 8, !tbaa !24
  %vfn327 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable326, i64 2
  %334 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn327, align 8
  %call328 = tail call zeroext i1 %334(%class.CAmbisonicSpeaker* nonnull %arrayidx322, i32 %331, i1 zeroext %tobool325, i32 0)
  %335 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %336 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %335, i64 3, i32 0
  %337 = bitcast %class.CAmbisonicSource* %336 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable332 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %337, align 8, !tbaa !24
  %vfn333 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable332, i64 5
  %338 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn333, align 8
  tail call void %338(%class.CAmbisonicSource* nonnull %336, <2 x float> %polPosition.sroa.0.0.vec.insert, float 1.000000e+00)
  %call334 = tail call float @_Z16DegreesToRadiansf(float -1.100000e+02)
  %polPosition.sroa.0.0.vec.insert1501 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert, float %call334, i32 0
  %339 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx337 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %339, i64 4
  %340 = load i32, i32* %302, align 8, !tbaa !45
  %341 = load i8, i8* %304, align 4, !tbaa !48, !range !51
  %tobool340 = icmp ne i8 %341, 0
  %342 = bitcast %class.CAmbisonicSpeaker* %arrayidx337 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable341 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %342, align 8, !tbaa !24
  %vfn342 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable341, i64 2
  %343 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn342, align 8
  %call343 = tail call zeroext i1 %343(%class.CAmbisonicSpeaker* nonnull %arrayidx337, i32 %340, i1 zeroext %tobool340, i32 0)
  %344 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %345 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %344, i64 4, i32 0
  %346 = bitcast %class.CAmbisonicSource* %345 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable347 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %346, align 8, !tbaa !24
  %vfn348 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable347, i64 5
  %347 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn348, align 8
  tail call void %347(%class.CAmbisonicSource* nonnull %345, <2 x float> %polPosition.sroa.0.0.vec.insert1501, float 1.000000e+00)
  br label %sw.epilog

for.body374.lr.ph:                                ; preds = %if.end
  %m_nSpeakers350 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers350, align 4, !tbaa !243
  %call353 = tail call i8* @_Znam(i64 448) #25
  %348 = bitcast i8* %call353 to i64*
  store i64 5, i64* %348, align 16
  %349 = getelementptr inbounds i8, i8* %call353, i64 8
  %350 = bitcast i8* %349 to i32 (...)***
  %351 = getelementptr inbounds i8, i8* %call353, i64 16
  %352 = bitcast i8* %351 to i32*
  store i32 0, i32* %352, align 8, !tbaa !45
  %353 = getelementptr inbounds i8, i8* %call353, i64 20
  store i8 0, i8* %353, align 4, !tbaa !48
  %354 = getelementptr inbounds i8, i8* %call353, i64 24
  %355 = bitcast i8* %354 to i32*
  store i32 0, i32* %355, align 8, !tbaa !49
  %356 = getelementptr inbounds i8, i8* %call353, i64 28
  store i8 0, i8* %356, align 4, !tbaa !50
  %m_pfCoeff.i.i1628 = getelementptr inbounds i8, i8* %call353, i64 32
  %fDistance.i.i1629 = getelementptr inbounds i8, i8* %call353, i64 88
  %357 = bitcast i8* %fDistance.i.i1629 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %357, align 8, !tbaa !52
  %m_fGain.i.i1630 = getelementptr inbounds i8, i8* %call353, i64 92
  %358 = bitcast i8* %m_fGain.i.i1630 to float*
  store float 1.000000e+00, float* %358, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %350, align 8, !tbaa !24
  %arrayctor.next367 = getelementptr inbounds i8, i8* %call353, i64 96
  %359 = bitcast i8* %arrayctor.next367 to i32 (...)***
  %360 = getelementptr inbounds i8, i8* %call353, i64 104
  %361 = bitcast i8* %360 to i32*
  store i32 0, i32* %361, align 8, !tbaa !45
  %362 = getelementptr inbounds i8, i8* %call353, i64 108
  store i8 0, i8* %362, align 4, !tbaa !48
  %363 = getelementptr inbounds i8, i8* %call353, i64 112
  %364 = bitcast i8* %363 to i32*
  store i32 0, i32* %364, align 8, !tbaa !49
  %365 = getelementptr inbounds i8, i8* %call353, i64 116
  store i8 0, i8* %365, align 4, !tbaa !50
  %m_pfCoeff.i.i1628.1 = getelementptr inbounds i8, i8* %call353, i64 120
  %fDistance.i.i1629.1 = getelementptr inbounds i8, i8* %call353, i64 176
  %366 = bitcast i8* %fDistance.i.i1629.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %366, align 8, !tbaa !52
  %m_fGain.i.i1630.1 = getelementptr inbounds i8, i8* %call353, i64 180
  %367 = bitcast i8* %m_fGain.i.i1630.1 to float*
  store float 1.000000e+00, float* %367, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8, !tbaa !24
  %arrayctor.next367.1 = getelementptr inbounds i8, i8* %call353, i64 184
  %368 = bitcast i8* %arrayctor.next367.1 to i32 (...)***
  %369 = getelementptr inbounds i8, i8* %call353, i64 192
  %370 = bitcast i8* %369 to i32*
  store i32 0, i32* %370, align 8, !tbaa !45
  %371 = getelementptr inbounds i8, i8* %call353, i64 196
  store i8 0, i8* %371, align 4, !tbaa !48
  %372 = getelementptr inbounds i8, i8* %call353, i64 200
  %373 = bitcast i8* %372 to i32*
  store i32 0, i32* %373, align 8, !tbaa !49
  %374 = getelementptr inbounds i8, i8* %call353, i64 204
  store i8 0, i8* %374, align 4, !tbaa !50
  %m_pfCoeff.i.i1628.2 = getelementptr inbounds i8, i8* %call353, i64 208
  %fDistance.i.i1629.2 = getelementptr inbounds i8, i8* %call353, i64 264
  %375 = bitcast i8* %fDistance.i.i1629.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %375, align 8, !tbaa !52
  %m_fGain.i.i1630.2 = getelementptr inbounds i8, i8* %call353, i64 268
  %376 = bitcast i8* %m_fGain.i.i1630.2 to float*
  store float 1.000000e+00, float* %376, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8, !tbaa !24
  %arrayctor.next367.2 = getelementptr inbounds i8, i8* %call353, i64 272
  %377 = bitcast i8* %arrayctor.next367.2 to i32 (...)***
  %378 = getelementptr inbounds i8, i8* %call353, i64 280
  %379 = bitcast i8* %378 to i32*
  store i32 0, i32* %379, align 8, !tbaa !45
  %380 = getelementptr inbounds i8, i8* %call353, i64 284
  store i8 0, i8* %380, align 4, !tbaa !48
  %381 = getelementptr inbounds i8, i8* %call353, i64 288
  %382 = bitcast i8* %381 to i32*
  store i32 0, i32* %382, align 8, !tbaa !49
  %383 = getelementptr inbounds i8, i8* %call353, i64 292
  store i8 0, i8* %383, align 4, !tbaa !50
  %m_pfCoeff.i.i1628.3 = getelementptr inbounds i8, i8* %call353, i64 296
  %fDistance.i.i1629.3 = getelementptr inbounds i8, i8* %call353, i64 352
  %384 = bitcast i8* %fDistance.i.i1629.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %384, align 8, !tbaa !52
  %m_fGain.i.i1630.3 = getelementptr inbounds i8, i8* %call353, i64 356
  %385 = bitcast i8* %m_fGain.i.i1630.3 to float*
  store float 1.000000e+00, float* %385, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %377, align 8, !tbaa !24
  %arrayctor.next367.3 = getelementptr inbounds i8, i8* %call353, i64 360
  %386 = bitcast i8* %arrayctor.next367.3 to i32 (...)***
  %387 = getelementptr inbounds i8, i8* %call353, i64 368
  %388 = bitcast i8* %387 to i32*
  store i32 0, i32* %388, align 8, !tbaa !45
  %389 = getelementptr inbounds i8, i8* %call353, i64 372
  store i8 0, i8* %389, align 4, !tbaa !48
  %390 = getelementptr inbounds i8, i8* %call353, i64 376
  %391 = bitcast i8* %390 to i32*
  store i32 0, i32* %391, align 8, !tbaa !49
  %392 = getelementptr inbounds i8, i8* %call353, i64 380
  store i8 0, i8* %392, align 4, !tbaa !50
  %m_pfCoeff.i.i1628.4 = getelementptr inbounds i8, i8* %call353, i64 384
  %fDistance.i.i1629.4 = getelementptr inbounds i8, i8* %call353, i64 440
  %393 = bitcast i8* %fDistance.i.i1629.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %393, align 8, !tbaa !52
  %m_fGain.i.i1630.4 = getelementptr inbounds i8, i8* %call353, i64 444
  %394 = bitcast i8* %m_fGain.i.i1630.4 to float*
  store float 1.000000e+00, float* %394, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %386, align 8, !tbaa !24
  %395 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %349, i8** %395, align 8, !tbaa !240
  %396 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %397 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body374

for.body374:                                      ; preds = %for.body374, %for.body374.lr.ph
  %indvars.iv1720 = phi i64 [ 0, %for.body374.lr.ph ], [ %indvars.iv.next1721, %for.body374 ]
  %398 = phi i32 [ 5, %for.body374.lr.ph ], [ %409, %for.body374 ]
  %polPosition.sroa.0.01673 = phi <2 x float> [ zeroinitializer, %for.body374.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1499, %for.body374 ]
  %399 = trunc i64 %indvars.iv1720 to i32
  %conv375 = uitofp i32 %399 to float
  %mul = fmul float %conv375, 3.600000e+02
  %conv377 = uitofp i32 %398 to float
  %div = fdiv float %mul, %conv377
  %call378 = tail call float @_Z16DegreesToRadiansf(float %div)
  %sub = fsub float -0.000000e+00, %call378
  %polPosition.sroa.0.0.vec.insert1499 = insertelement <2 x float> %polPosition.sroa.0.01673, float %sub, i32 0
  %400 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx382 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %400, i64 %indvars.iv1720
  %401 = load i32, i32* %396, align 8, !tbaa !45
  %402 = load i8, i8* %397, align 4, !tbaa !48, !range !51
  %tobool385 = icmp ne i8 %402, 0
  %403 = bitcast %class.CAmbisonicSpeaker* %arrayidx382 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable386 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %403, align 8, !tbaa !24
  %vfn387 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable386, i64 2
  %404 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn387, align 8
  %call388 = tail call zeroext i1 %404(%class.CAmbisonicSpeaker* %arrayidx382, i32 %401, i1 zeroext %tobool385, i32 0)
  %405 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %406 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %405, i64 %indvars.iv1720, i32 0
  %407 = bitcast %class.CAmbisonicSource* %406 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable393 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %407, align 8, !tbaa !24
  %vfn394 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable393, i64 5
  %408 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn394, align 8
  tail call void %408(%class.CAmbisonicSource* %406, <2 x float> %polPosition.sroa.0.0.vec.insert1499, float 1.000000e+00)
  %indvars.iv.next1721 = add nuw nsw i64 %indvars.iv1720, 1
  %409 = load i32, i32* %m_nSpeakers350, align 4, !tbaa !243
  %410 = zext i32 %409 to i64
  %cmp373 = icmp ult i64 %indvars.iv.next1721, %410
  br i1 %cmp373, label %for.body374, label %sw.epilog

for.body423.lr.ph:                                ; preds = %if.end
  %m_nSpeakers399 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers399, align 4, !tbaa !243
  %call402 = tail call i8* @_Znam(i64 536) #25
  %411 = bitcast i8* %call402 to i64*
  store i64 6, i64* %411, align 16
  %412 = getelementptr inbounds i8, i8* %call402, i64 8
  %413 = bitcast i8* %412 to i32 (...)***
  %414 = getelementptr inbounds i8, i8* %call402, i64 16
  %415 = bitcast i8* %414 to i32*
  store i32 0, i32* %415, align 8, !tbaa !45
  %416 = getelementptr inbounds i8, i8* %call402, i64 20
  store i8 0, i8* %416, align 4, !tbaa !48
  %417 = getelementptr inbounds i8, i8* %call402, i64 24
  %418 = bitcast i8* %417 to i32*
  store i32 0, i32* %418, align 8, !tbaa !49
  %419 = getelementptr inbounds i8, i8* %call402, i64 28
  store i8 0, i8* %419, align 4, !tbaa !50
  %m_pfCoeff.i.i1634 = getelementptr inbounds i8, i8* %call402, i64 32
  %fDistance.i.i1635 = getelementptr inbounds i8, i8* %call402, i64 88
  %420 = bitcast i8* %fDistance.i.i1635 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %420, align 8, !tbaa !52
  %m_fGain.i.i1636 = getelementptr inbounds i8, i8* %call402, i64 92
  %421 = bitcast i8* %m_fGain.i.i1636 to float*
  store float 1.000000e+00, float* %421, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %413, align 8, !tbaa !24
  %arrayctor.next416 = getelementptr inbounds i8, i8* %call402, i64 96
  %422 = bitcast i8* %arrayctor.next416 to i32 (...)***
  %423 = getelementptr inbounds i8, i8* %call402, i64 104
  %424 = bitcast i8* %423 to i32*
  store i32 0, i32* %424, align 8, !tbaa !45
  %425 = getelementptr inbounds i8, i8* %call402, i64 108
  store i8 0, i8* %425, align 4, !tbaa !48
  %426 = getelementptr inbounds i8, i8* %call402, i64 112
  %427 = bitcast i8* %426 to i32*
  store i32 0, i32* %427, align 8, !tbaa !49
  %428 = getelementptr inbounds i8, i8* %call402, i64 116
  store i8 0, i8* %428, align 4, !tbaa !50
  %m_pfCoeff.i.i1634.1 = getelementptr inbounds i8, i8* %call402, i64 120
  %fDistance.i.i1635.1 = getelementptr inbounds i8, i8* %call402, i64 176
  %429 = bitcast i8* %fDistance.i.i1635.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %429, align 8, !tbaa !52
  %m_fGain.i.i1636.1 = getelementptr inbounds i8, i8* %call402, i64 180
  %430 = bitcast i8* %m_fGain.i.i1636.1 to float*
  store float 1.000000e+00, float* %430, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %422, align 8, !tbaa !24
  %arrayctor.next416.1 = getelementptr inbounds i8, i8* %call402, i64 184
  %431 = bitcast i8* %arrayctor.next416.1 to i32 (...)***
  %432 = getelementptr inbounds i8, i8* %call402, i64 192
  %433 = bitcast i8* %432 to i32*
  store i32 0, i32* %433, align 8, !tbaa !45
  %434 = getelementptr inbounds i8, i8* %call402, i64 196
  store i8 0, i8* %434, align 4, !tbaa !48
  %435 = getelementptr inbounds i8, i8* %call402, i64 200
  %436 = bitcast i8* %435 to i32*
  store i32 0, i32* %436, align 8, !tbaa !49
  %437 = getelementptr inbounds i8, i8* %call402, i64 204
  store i8 0, i8* %437, align 4, !tbaa !50
  %m_pfCoeff.i.i1634.2 = getelementptr inbounds i8, i8* %call402, i64 208
  %fDistance.i.i1635.2 = getelementptr inbounds i8, i8* %call402, i64 264
  %438 = bitcast i8* %fDistance.i.i1635.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %438, align 8, !tbaa !52
  %m_fGain.i.i1636.2 = getelementptr inbounds i8, i8* %call402, i64 268
  %439 = bitcast i8* %m_fGain.i.i1636.2 to float*
  store float 1.000000e+00, float* %439, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8, !tbaa !24
  %arrayctor.next416.2 = getelementptr inbounds i8, i8* %call402, i64 272
  %440 = bitcast i8* %arrayctor.next416.2 to i32 (...)***
  %441 = getelementptr inbounds i8, i8* %call402, i64 280
  %442 = bitcast i8* %441 to i32*
  store i32 0, i32* %442, align 8, !tbaa !45
  %443 = getelementptr inbounds i8, i8* %call402, i64 284
  store i8 0, i8* %443, align 4, !tbaa !48
  %444 = getelementptr inbounds i8, i8* %call402, i64 288
  %445 = bitcast i8* %444 to i32*
  store i32 0, i32* %445, align 8, !tbaa !49
  %446 = getelementptr inbounds i8, i8* %call402, i64 292
  store i8 0, i8* %446, align 4, !tbaa !50
  %m_pfCoeff.i.i1634.3 = getelementptr inbounds i8, i8* %call402, i64 296
  %fDistance.i.i1635.3 = getelementptr inbounds i8, i8* %call402, i64 352
  %447 = bitcast i8* %fDistance.i.i1635.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %447, align 8, !tbaa !52
  %m_fGain.i.i1636.3 = getelementptr inbounds i8, i8* %call402, i64 356
  %448 = bitcast i8* %m_fGain.i.i1636.3 to float*
  store float 1.000000e+00, float* %448, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %440, align 8, !tbaa !24
  %arrayctor.next416.3 = getelementptr inbounds i8, i8* %call402, i64 360
  %449 = bitcast i8* %arrayctor.next416.3 to i32 (...)***
  %450 = getelementptr inbounds i8, i8* %call402, i64 368
  %451 = bitcast i8* %450 to i32*
  store i32 0, i32* %451, align 8, !tbaa !45
  %452 = getelementptr inbounds i8, i8* %call402, i64 372
  store i8 0, i8* %452, align 4, !tbaa !48
  %453 = getelementptr inbounds i8, i8* %call402, i64 376
  %454 = bitcast i8* %453 to i32*
  store i32 0, i32* %454, align 8, !tbaa !49
  %455 = getelementptr inbounds i8, i8* %call402, i64 380
  store i8 0, i8* %455, align 4, !tbaa !50
  %m_pfCoeff.i.i1634.4 = getelementptr inbounds i8, i8* %call402, i64 384
  %fDistance.i.i1635.4 = getelementptr inbounds i8, i8* %call402, i64 440
  %456 = bitcast i8* %fDistance.i.i1635.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %456, align 8, !tbaa !52
  %m_fGain.i.i1636.4 = getelementptr inbounds i8, i8* %call402, i64 444
  %457 = bitcast i8* %m_fGain.i.i1636.4 to float*
  store float 1.000000e+00, float* %457, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %449, align 8, !tbaa !24
  %arrayctor.next416.4 = getelementptr inbounds i8, i8* %call402, i64 448
  %458 = bitcast i8* %arrayctor.next416.4 to i32 (...)***
  %459 = getelementptr inbounds i8, i8* %call402, i64 456
  %460 = bitcast i8* %459 to i32*
  store i32 0, i32* %460, align 8, !tbaa !45
  %461 = getelementptr inbounds i8, i8* %call402, i64 460
  store i8 0, i8* %461, align 4, !tbaa !48
  %462 = getelementptr inbounds i8, i8* %call402, i64 464
  %463 = bitcast i8* %462 to i32*
  store i32 0, i32* %463, align 8, !tbaa !49
  %464 = getelementptr inbounds i8, i8* %call402, i64 468
  store i8 0, i8* %464, align 4, !tbaa !50
  %m_pfCoeff.i.i1634.5 = getelementptr inbounds i8, i8* %call402, i64 472
  %fDistance.i.i1635.5 = getelementptr inbounds i8, i8* %call402, i64 528
  %465 = bitcast i8* %fDistance.i.i1635.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %465, align 8, !tbaa !52
  %m_fGain.i.i1636.5 = getelementptr inbounds i8, i8* %call402, i64 532
  %466 = bitcast i8* %m_fGain.i.i1636.5 to float*
  store float 1.000000e+00, float* %466, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %458, align 8, !tbaa !24
  %467 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %412, i8** %467, align 8, !tbaa !240
  %468 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %469 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body423

for.body423:                                      ; preds = %for.body423, %for.body423.lr.ph
  %indvars.iv1722 = phi i64 [ 0, %for.body423.lr.ph ], [ %indvars.iv.next1723, %for.body423 ]
  %470 = phi i32 [ 6, %for.body423.lr.ph ], [ %481, %for.body423 ]
  %polPosition.sroa.0.11676 = phi <2 x float> [ zeroinitializer, %for.body423.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1497, %for.body423 ]
  %471 = trunc i64 %indvars.iv1722 to i32
  %conv424 = uitofp i32 %471 to float
  %mul425 = fmul float %conv424, 3.600000e+02
  %conv427 = uitofp i32 %470 to float
  %div428 = fdiv float %mul425, %conv427
  %add = fadd float %div428, 3.000000e+01
  %call429 = tail call float @_Z16DegreesToRadiansf(float %add)
  %sub430 = fsub float -0.000000e+00, %call429
  %polPosition.sroa.0.0.vec.insert1497 = insertelement <2 x float> %polPosition.sroa.0.11676, float %sub430, i32 0
  %472 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx434 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %472, i64 %indvars.iv1722
  %473 = load i32, i32* %468, align 8, !tbaa !45
  %474 = load i8, i8* %469, align 4, !tbaa !48, !range !51
  %tobool437 = icmp ne i8 %474, 0
  %475 = bitcast %class.CAmbisonicSpeaker* %arrayidx434 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable438 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %475, align 8, !tbaa !24
  %vfn439 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable438, i64 2
  %476 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn439, align 8
  %call440 = tail call zeroext i1 %476(%class.CAmbisonicSpeaker* %arrayidx434, i32 %473, i1 zeroext %tobool437, i32 0)
  %477 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %478 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %477, i64 %indvars.iv1722, i32 0
  %479 = bitcast %class.CAmbisonicSource* %478 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable445 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %479, align 8, !tbaa !24
  %vfn446 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable445, i64 5
  %480 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn446, align 8
  tail call void %480(%class.CAmbisonicSource* %478, <2 x float> %polPosition.sroa.0.0.vec.insert1497, float 1.000000e+00)
  %indvars.iv.next1723 = add nuw nsw i64 %indvars.iv1722, 1
  %481 = load i32, i32* %m_nSpeakers399, align 4, !tbaa !243
  %482 = zext i32 %481 to i64
  %cmp422 = icmp ult i64 %indvars.iv.next1723, %482
  br i1 %cmp422, label %for.body423, label %sw.epilog

for.body475.lr.ph:                                ; preds = %if.end
  %m_nSpeakers451 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers451, align 4, !tbaa !243
  %call454 = tail call i8* @_Znam(i64 536) #25
  %483 = bitcast i8* %call454 to i64*
  store i64 6, i64* %483, align 16
  %484 = getelementptr inbounds i8, i8* %call454, i64 8
  %485 = bitcast i8* %484 to i32 (...)***
  %486 = getelementptr inbounds i8, i8* %call454, i64 16
  %487 = bitcast i8* %486 to i32*
  store i32 0, i32* %487, align 8, !tbaa !45
  %488 = getelementptr inbounds i8, i8* %call454, i64 20
  store i8 0, i8* %488, align 4, !tbaa !48
  %489 = getelementptr inbounds i8, i8* %call454, i64 24
  %490 = bitcast i8* %489 to i32*
  store i32 0, i32* %490, align 8, !tbaa !49
  %491 = getelementptr inbounds i8, i8* %call454, i64 28
  store i8 0, i8* %491, align 4, !tbaa !50
  %m_pfCoeff.i.i1637 = getelementptr inbounds i8, i8* %call454, i64 32
  %fDistance.i.i1638 = getelementptr inbounds i8, i8* %call454, i64 88
  %492 = bitcast i8* %fDistance.i.i1638 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %492, align 8, !tbaa !52
  %m_fGain.i.i1639 = getelementptr inbounds i8, i8* %call454, i64 92
  %493 = bitcast i8* %m_fGain.i.i1639 to float*
  store float 1.000000e+00, float* %493, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %485, align 8, !tbaa !24
  %arrayctor.next468 = getelementptr inbounds i8, i8* %call454, i64 96
  %494 = bitcast i8* %arrayctor.next468 to i32 (...)***
  %495 = getelementptr inbounds i8, i8* %call454, i64 104
  %496 = bitcast i8* %495 to i32*
  store i32 0, i32* %496, align 8, !tbaa !45
  %497 = getelementptr inbounds i8, i8* %call454, i64 108
  store i8 0, i8* %497, align 4, !tbaa !48
  %498 = getelementptr inbounds i8, i8* %call454, i64 112
  %499 = bitcast i8* %498 to i32*
  store i32 0, i32* %499, align 8, !tbaa !49
  %500 = getelementptr inbounds i8, i8* %call454, i64 116
  store i8 0, i8* %500, align 4, !tbaa !50
  %m_pfCoeff.i.i1637.1 = getelementptr inbounds i8, i8* %call454, i64 120
  %fDistance.i.i1638.1 = getelementptr inbounds i8, i8* %call454, i64 176
  %501 = bitcast i8* %fDistance.i.i1638.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %501, align 8, !tbaa !52
  %m_fGain.i.i1639.1 = getelementptr inbounds i8, i8* %call454, i64 180
  %502 = bitcast i8* %m_fGain.i.i1639.1 to float*
  store float 1.000000e+00, float* %502, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %494, align 8, !tbaa !24
  %arrayctor.next468.1 = getelementptr inbounds i8, i8* %call454, i64 184
  %503 = bitcast i8* %arrayctor.next468.1 to i32 (...)***
  %504 = getelementptr inbounds i8, i8* %call454, i64 192
  %505 = bitcast i8* %504 to i32*
  store i32 0, i32* %505, align 8, !tbaa !45
  %506 = getelementptr inbounds i8, i8* %call454, i64 196
  store i8 0, i8* %506, align 4, !tbaa !48
  %507 = getelementptr inbounds i8, i8* %call454, i64 200
  %508 = bitcast i8* %507 to i32*
  store i32 0, i32* %508, align 8, !tbaa !49
  %509 = getelementptr inbounds i8, i8* %call454, i64 204
  store i8 0, i8* %509, align 4, !tbaa !50
  %m_pfCoeff.i.i1637.2 = getelementptr inbounds i8, i8* %call454, i64 208
  %fDistance.i.i1638.2 = getelementptr inbounds i8, i8* %call454, i64 264
  %510 = bitcast i8* %fDistance.i.i1638.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %510, align 8, !tbaa !52
  %m_fGain.i.i1639.2 = getelementptr inbounds i8, i8* %call454, i64 268
  %511 = bitcast i8* %m_fGain.i.i1639.2 to float*
  store float 1.000000e+00, float* %511, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %503, align 8, !tbaa !24
  %arrayctor.next468.2 = getelementptr inbounds i8, i8* %call454, i64 272
  %512 = bitcast i8* %arrayctor.next468.2 to i32 (...)***
  %513 = getelementptr inbounds i8, i8* %call454, i64 280
  %514 = bitcast i8* %513 to i32*
  store i32 0, i32* %514, align 8, !tbaa !45
  %515 = getelementptr inbounds i8, i8* %call454, i64 284
  store i8 0, i8* %515, align 4, !tbaa !48
  %516 = getelementptr inbounds i8, i8* %call454, i64 288
  %517 = bitcast i8* %516 to i32*
  store i32 0, i32* %517, align 8, !tbaa !49
  %518 = getelementptr inbounds i8, i8* %call454, i64 292
  store i8 0, i8* %518, align 4, !tbaa !50
  %m_pfCoeff.i.i1637.3 = getelementptr inbounds i8, i8* %call454, i64 296
  %fDistance.i.i1638.3 = getelementptr inbounds i8, i8* %call454, i64 352
  %519 = bitcast i8* %fDistance.i.i1638.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %519, align 8, !tbaa !52
  %m_fGain.i.i1639.3 = getelementptr inbounds i8, i8* %call454, i64 356
  %520 = bitcast i8* %m_fGain.i.i1639.3 to float*
  store float 1.000000e+00, float* %520, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %512, align 8, !tbaa !24
  %arrayctor.next468.3 = getelementptr inbounds i8, i8* %call454, i64 360
  %521 = bitcast i8* %arrayctor.next468.3 to i32 (...)***
  %522 = getelementptr inbounds i8, i8* %call454, i64 368
  %523 = bitcast i8* %522 to i32*
  store i32 0, i32* %523, align 8, !tbaa !45
  %524 = getelementptr inbounds i8, i8* %call454, i64 372
  store i8 0, i8* %524, align 4, !tbaa !48
  %525 = getelementptr inbounds i8, i8* %call454, i64 376
  %526 = bitcast i8* %525 to i32*
  store i32 0, i32* %526, align 8, !tbaa !49
  %527 = getelementptr inbounds i8, i8* %call454, i64 380
  store i8 0, i8* %527, align 4, !tbaa !50
  %m_pfCoeff.i.i1637.4 = getelementptr inbounds i8, i8* %call454, i64 384
  %fDistance.i.i1638.4 = getelementptr inbounds i8, i8* %call454, i64 440
  %528 = bitcast i8* %fDistance.i.i1638.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %528, align 8, !tbaa !52
  %m_fGain.i.i1639.4 = getelementptr inbounds i8, i8* %call454, i64 444
  %529 = bitcast i8* %m_fGain.i.i1639.4 to float*
  store float 1.000000e+00, float* %529, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %521, align 8, !tbaa !24
  %arrayctor.next468.4 = getelementptr inbounds i8, i8* %call454, i64 448
  %530 = bitcast i8* %arrayctor.next468.4 to i32 (...)***
  %531 = getelementptr inbounds i8, i8* %call454, i64 456
  %532 = bitcast i8* %531 to i32*
  store i32 0, i32* %532, align 8, !tbaa !45
  %533 = getelementptr inbounds i8, i8* %call454, i64 460
  store i8 0, i8* %533, align 4, !tbaa !48
  %534 = getelementptr inbounds i8, i8* %call454, i64 464
  %535 = bitcast i8* %534 to i32*
  store i32 0, i32* %535, align 8, !tbaa !49
  %536 = getelementptr inbounds i8, i8* %call454, i64 468
  store i8 0, i8* %536, align 4, !tbaa !50
  %m_pfCoeff.i.i1637.5 = getelementptr inbounds i8, i8* %call454, i64 472
  %fDistance.i.i1638.5 = getelementptr inbounds i8, i8* %call454, i64 528
  %537 = bitcast i8* %fDistance.i.i1638.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %537, align 8, !tbaa !52
  %m_fGain.i.i1639.5 = getelementptr inbounds i8, i8* %call454, i64 532
  %538 = bitcast i8* %m_fGain.i.i1639.5 to float*
  store float 1.000000e+00, float* %538, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %530, align 8, !tbaa !24
  %539 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %484, i8** %539, align 8, !tbaa !240
  %540 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %541 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body475

for.body475:                                      ; preds = %for.body475, %for.body475.lr.ph
  %indvars.iv1724 = phi i64 [ 0, %for.body475.lr.ph ], [ %indvars.iv.next1725, %for.body475 ]
  %542 = phi i32 [ 6, %for.body475.lr.ph ], [ %553, %for.body475 ]
  %polPosition.sroa.0.21679 = phi <2 x float> [ zeroinitializer, %for.body475.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1495, %for.body475 ]
  %543 = trunc i64 %indvars.iv1724 to i32
  %conv476 = uitofp i32 %543 to float
  %mul477 = fmul float %conv476, 3.600000e+02
  %conv479 = uitofp i32 %542 to float
  %div480 = fdiv float %mul477, %conv479
  %call481 = tail call float @_Z16DegreesToRadiansf(float %div480)
  %sub482 = fsub float -0.000000e+00, %call481
  %polPosition.sroa.0.0.vec.insert1495 = insertelement <2 x float> %polPosition.sroa.0.21679, float %sub482, i32 0
  %544 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx486 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %544, i64 %indvars.iv1724
  %545 = load i32, i32* %540, align 8, !tbaa !45
  %546 = load i8, i8* %541, align 4, !tbaa !48, !range !51
  %tobool489 = icmp ne i8 %546, 0
  %547 = bitcast %class.CAmbisonicSpeaker* %arrayidx486 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable490 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %547, align 8, !tbaa !24
  %vfn491 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable490, i64 2
  %548 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn491, align 8
  %call492 = tail call zeroext i1 %548(%class.CAmbisonicSpeaker* %arrayidx486, i32 %545, i1 zeroext %tobool489, i32 0)
  %549 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %550 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %549, i64 %indvars.iv1724, i32 0
  %551 = bitcast %class.CAmbisonicSource* %550 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable497 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %551, align 8, !tbaa !24
  %vfn498 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable497, i64 5
  %552 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn498, align 8
  tail call void %552(%class.CAmbisonicSource* %550, <2 x float> %polPosition.sroa.0.0.vec.insert1495, float 1.000000e+00)
  %indvars.iv.next1725 = add nuw nsw i64 %indvars.iv1724, 1
  %553 = load i32, i32* %m_nSpeakers451, align 4, !tbaa !243
  %554 = zext i32 %553 to i64
  %cmp474 = icmp ult i64 %indvars.iv.next1725, %554
  br i1 %cmp474, label %for.body475, label %sw.epilog

for.body527.lr.ph:                                ; preds = %if.end
  %m_nSpeakers503 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers503, align 4, !tbaa !243
  %call506 = tail call i8* @_Znam(i64 712) #25
  %555 = bitcast i8* %call506 to i64*
  store i64 8, i64* %555, align 16
  %556 = getelementptr inbounds i8, i8* %call506, i64 8
  %557 = bitcast i8* %556 to i32 (...)***
  %558 = getelementptr inbounds i8, i8* %call506, i64 16
  %559 = bitcast i8* %558 to i32*
  store i32 0, i32* %559, align 8, !tbaa !45
  %560 = getelementptr inbounds i8, i8* %call506, i64 20
  store i8 0, i8* %560, align 4, !tbaa !48
  %561 = getelementptr inbounds i8, i8* %call506, i64 24
  %562 = bitcast i8* %561 to i32*
  store i32 0, i32* %562, align 8, !tbaa !49
  %563 = getelementptr inbounds i8, i8* %call506, i64 28
  store i8 0, i8* %563, align 4, !tbaa !50
  %m_pfCoeff.i.i1640 = getelementptr inbounds i8, i8* %call506, i64 32
  %fDistance.i.i1641 = getelementptr inbounds i8, i8* %call506, i64 88
  %564 = bitcast i8* %fDistance.i.i1641 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %564, align 8, !tbaa !52
  %m_fGain.i.i1642 = getelementptr inbounds i8, i8* %call506, i64 92
  %565 = bitcast i8* %m_fGain.i.i1642 to float*
  store float 1.000000e+00, float* %565, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %557, align 8, !tbaa !24
  %arrayctor.next520 = getelementptr inbounds i8, i8* %call506, i64 96
  %566 = bitcast i8* %arrayctor.next520 to i32 (...)***
  %567 = getelementptr inbounds i8, i8* %call506, i64 104
  %568 = bitcast i8* %567 to i32*
  store i32 0, i32* %568, align 8, !tbaa !45
  %569 = getelementptr inbounds i8, i8* %call506, i64 108
  store i8 0, i8* %569, align 4, !tbaa !48
  %570 = getelementptr inbounds i8, i8* %call506, i64 112
  %571 = bitcast i8* %570 to i32*
  store i32 0, i32* %571, align 8, !tbaa !49
  %572 = getelementptr inbounds i8, i8* %call506, i64 116
  store i8 0, i8* %572, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.1 = getelementptr inbounds i8, i8* %call506, i64 120
  %fDistance.i.i1641.1 = getelementptr inbounds i8, i8* %call506, i64 176
  %573 = bitcast i8* %fDistance.i.i1641.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %573, align 8, !tbaa !52
  %m_fGain.i.i1642.1 = getelementptr inbounds i8, i8* %call506, i64 180
  %574 = bitcast i8* %m_fGain.i.i1642.1 to float*
  store float 1.000000e+00, float* %574, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8, !tbaa !24
  %arrayctor.next520.1 = getelementptr inbounds i8, i8* %call506, i64 184
  %575 = bitcast i8* %arrayctor.next520.1 to i32 (...)***
  %576 = getelementptr inbounds i8, i8* %call506, i64 192
  %577 = bitcast i8* %576 to i32*
  store i32 0, i32* %577, align 8, !tbaa !45
  %578 = getelementptr inbounds i8, i8* %call506, i64 196
  store i8 0, i8* %578, align 4, !tbaa !48
  %579 = getelementptr inbounds i8, i8* %call506, i64 200
  %580 = bitcast i8* %579 to i32*
  store i32 0, i32* %580, align 8, !tbaa !49
  %581 = getelementptr inbounds i8, i8* %call506, i64 204
  store i8 0, i8* %581, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.2 = getelementptr inbounds i8, i8* %call506, i64 208
  %fDistance.i.i1641.2 = getelementptr inbounds i8, i8* %call506, i64 264
  %582 = bitcast i8* %fDistance.i.i1641.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %582, align 8, !tbaa !52
  %m_fGain.i.i1642.2 = getelementptr inbounds i8, i8* %call506, i64 268
  %583 = bitcast i8* %m_fGain.i.i1642.2 to float*
  store float 1.000000e+00, float* %583, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %575, align 8, !tbaa !24
  %arrayctor.next520.2 = getelementptr inbounds i8, i8* %call506, i64 272
  %584 = bitcast i8* %arrayctor.next520.2 to i32 (...)***
  %585 = getelementptr inbounds i8, i8* %call506, i64 280
  %586 = bitcast i8* %585 to i32*
  store i32 0, i32* %586, align 8, !tbaa !45
  %587 = getelementptr inbounds i8, i8* %call506, i64 284
  store i8 0, i8* %587, align 4, !tbaa !48
  %588 = getelementptr inbounds i8, i8* %call506, i64 288
  %589 = bitcast i8* %588 to i32*
  store i32 0, i32* %589, align 8, !tbaa !49
  %590 = getelementptr inbounds i8, i8* %call506, i64 292
  store i8 0, i8* %590, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.3 = getelementptr inbounds i8, i8* %call506, i64 296
  %fDistance.i.i1641.3 = getelementptr inbounds i8, i8* %call506, i64 352
  %591 = bitcast i8* %fDistance.i.i1641.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %591, align 8, !tbaa !52
  %m_fGain.i.i1642.3 = getelementptr inbounds i8, i8* %call506, i64 356
  %592 = bitcast i8* %m_fGain.i.i1642.3 to float*
  store float 1.000000e+00, float* %592, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %584, align 8, !tbaa !24
  %arrayctor.next520.3 = getelementptr inbounds i8, i8* %call506, i64 360
  %593 = bitcast i8* %arrayctor.next520.3 to i32 (...)***
  %594 = getelementptr inbounds i8, i8* %call506, i64 368
  %595 = bitcast i8* %594 to i32*
  store i32 0, i32* %595, align 8, !tbaa !45
  %596 = getelementptr inbounds i8, i8* %call506, i64 372
  store i8 0, i8* %596, align 4, !tbaa !48
  %597 = getelementptr inbounds i8, i8* %call506, i64 376
  %598 = bitcast i8* %597 to i32*
  store i32 0, i32* %598, align 8, !tbaa !49
  %599 = getelementptr inbounds i8, i8* %call506, i64 380
  store i8 0, i8* %599, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.4 = getelementptr inbounds i8, i8* %call506, i64 384
  %fDistance.i.i1641.4 = getelementptr inbounds i8, i8* %call506, i64 440
  %600 = bitcast i8* %fDistance.i.i1641.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %600, align 8, !tbaa !52
  %m_fGain.i.i1642.4 = getelementptr inbounds i8, i8* %call506, i64 444
  %601 = bitcast i8* %m_fGain.i.i1642.4 to float*
  store float 1.000000e+00, float* %601, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %593, align 8, !tbaa !24
  %arrayctor.next520.4 = getelementptr inbounds i8, i8* %call506, i64 448
  %602 = bitcast i8* %arrayctor.next520.4 to i32 (...)***
  %603 = getelementptr inbounds i8, i8* %call506, i64 456
  %604 = bitcast i8* %603 to i32*
  store i32 0, i32* %604, align 8, !tbaa !45
  %605 = getelementptr inbounds i8, i8* %call506, i64 460
  store i8 0, i8* %605, align 4, !tbaa !48
  %606 = getelementptr inbounds i8, i8* %call506, i64 464
  %607 = bitcast i8* %606 to i32*
  store i32 0, i32* %607, align 8, !tbaa !49
  %608 = getelementptr inbounds i8, i8* %call506, i64 468
  store i8 0, i8* %608, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.5 = getelementptr inbounds i8, i8* %call506, i64 472
  %fDistance.i.i1641.5 = getelementptr inbounds i8, i8* %call506, i64 528
  %609 = bitcast i8* %fDistance.i.i1641.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %609, align 8, !tbaa !52
  %m_fGain.i.i1642.5 = getelementptr inbounds i8, i8* %call506, i64 532
  %610 = bitcast i8* %m_fGain.i.i1642.5 to float*
  store float 1.000000e+00, float* %610, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %602, align 8, !tbaa !24
  %arrayctor.next520.5 = getelementptr inbounds i8, i8* %call506, i64 536
  %611 = bitcast i8* %arrayctor.next520.5 to i32 (...)***
  %612 = getelementptr inbounds i8, i8* %call506, i64 544
  %613 = bitcast i8* %612 to i32*
  store i32 0, i32* %613, align 8, !tbaa !45
  %614 = getelementptr inbounds i8, i8* %call506, i64 548
  store i8 0, i8* %614, align 4, !tbaa !48
  %615 = getelementptr inbounds i8, i8* %call506, i64 552
  %616 = bitcast i8* %615 to i32*
  store i32 0, i32* %616, align 8, !tbaa !49
  %617 = getelementptr inbounds i8, i8* %call506, i64 556
  store i8 0, i8* %617, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.6 = getelementptr inbounds i8, i8* %call506, i64 560
  %fDistance.i.i1641.6 = getelementptr inbounds i8, i8* %call506, i64 616
  %618 = bitcast i8* %fDistance.i.i1641.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %618, align 8, !tbaa !52
  %m_fGain.i.i1642.6 = getelementptr inbounds i8, i8* %call506, i64 620
  %619 = bitcast i8* %m_fGain.i.i1642.6 to float*
  store float 1.000000e+00, float* %619, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %611, align 8, !tbaa !24
  %arrayctor.next520.6 = getelementptr inbounds i8, i8* %call506, i64 624
  %620 = bitcast i8* %arrayctor.next520.6 to i32 (...)***
  %621 = getelementptr inbounds i8, i8* %call506, i64 632
  %622 = bitcast i8* %621 to i32*
  store i32 0, i32* %622, align 8, !tbaa !45
  %623 = getelementptr inbounds i8, i8* %call506, i64 636
  store i8 0, i8* %623, align 4, !tbaa !48
  %624 = getelementptr inbounds i8, i8* %call506, i64 640
  %625 = bitcast i8* %624 to i32*
  store i32 0, i32* %625, align 8, !tbaa !49
  %626 = getelementptr inbounds i8, i8* %call506, i64 644
  store i8 0, i8* %626, align 4, !tbaa !50
  %m_pfCoeff.i.i1640.7 = getelementptr inbounds i8, i8* %call506, i64 648
  %fDistance.i.i1641.7 = getelementptr inbounds i8, i8* %call506, i64 704
  %627 = bitcast i8* %fDistance.i.i1641.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %627, align 8, !tbaa !52
  %m_fGain.i.i1642.7 = getelementptr inbounds i8, i8* %call506, i64 708
  %628 = bitcast i8* %m_fGain.i.i1642.7 to float*
  store float 1.000000e+00, float* %628, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %620, align 8, !tbaa !24
  %629 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %556, i8** %629, align 8, !tbaa !240
  %630 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %631 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body527

for.body527:                                      ; preds = %for.body527, %for.body527.lr.ph
  %indvars.iv1726 = phi i64 [ 0, %for.body527.lr.ph ], [ %indvars.iv.next1727, %for.body527 ]
  %632 = phi i32 [ 8, %for.body527.lr.ph ], [ %643, %for.body527 ]
  %polPosition.sroa.0.31682 = phi <2 x float> [ zeroinitializer, %for.body527.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1493, %for.body527 ]
  %633 = trunc i64 %indvars.iv1726 to i32
  %conv528 = uitofp i32 %633 to float
  %mul529 = fmul float %conv528, 3.600000e+02
  %conv531 = uitofp i32 %632 to float
  %div532 = fdiv float %mul529, %conv531
  %call533 = tail call float @_Z16DegreesToRadiansf(float %div532)
  %sub534 = fsub float -0.000000e+00, %call533
  %polPosition.sroa.0.0.vec.insert1493 = insertelement <2 x float> %polPosition.sroa.0.31682, float %sub534, i32 0
  %634 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx538 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %634, i64 %indvars.iv1726
  %635 = load i32, i32* %630, align 8, !tbaa !45
  %636 = load i8, i8* %631, align 4, !tbaa !48, !range !51
  %tobool541 = icmp ne i8 %636, 0
  %637 = bitcast %class.CAmbisonicSpeaker* %arrayidx538 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable542 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %637, align 8, !tbaa !24
  %vfn543 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable542, i64 2
  %638 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn543, align 8
  %call544 = tail call zeroext i1 %638(%class.CAmbisonicSpeaker* %arrayidx538, i32 %635, i1 zeroext %tobool541, i32 0)
  %639 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %640 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %639, i64 %indvars.iv1726, i32 0
  %641 = bitcast %class.CAmbisonicSource* %640 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable549 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %641, align 8, !tbaa !24
  %vfn550 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable549, i64 5
  %642 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn550, align 8
  tail call void %642(%class.CAmbisonicSource* %640, <2 x float> %polPosition.sroa.0.0.vec.insert1493, float 1.000000e+00)
  %indvars.iv.next1727 = add nuw nsw i64 %indvars.iv1726, 1
  %643 = load i32, i32* %m_nSpeakers503, align 4, !tbaa !243
  %644 = zext i32 %643 to i64
  %cmp526 = icmp ult i64 %indvars.iv.next1727, %644
  br i1 %cmp526, label %for.body527, label %sw.epilog

for.body579.lr.ph:                                ; preds = %if.end
  %m_nSpeakers555 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 10, i32* %m_nSpeakers555, align 4, !tbaa !243
  %call558 = tail call i8* @_Znam(i64 888) #25
  %645 = bitcast i8* %call558 to i64*
  store i64 10, i64* %645, align 16
  %646 = getelementptr inbounds i8, i8* %call558, i64 8
  %647 = bitcast i8* %646 to i32 (...)***
  %648 = getelementptr inbounds i8, i8* %call558, i64 16
  %649 = bitcast i8* %648 to i32*
  store i32 0, i32* %649, align 8, !tbaa !45
  %650 = getelementptr inbounds i8, i8* %call558, i64 20
  store i8 0, i8* %650, align 4, !tbaa !48
  %651 = getelementptr inbounds i8, i8* %call558, i64 24
  %652 = bitcast i8* %651 to i32*
  store i32 0, i32* %652, align 8, !tbaa !49
  %653 = getelementptr inbounds i8, i8* %call558, i64 28
  store i8 0, i8* %653, align 4, !tbaa !50
  %m_pfCoeff.i.i1643 = getelementptr inbounds i8, i8* %call558, i64 32
  %fDistance.i.i1644 = getelementptr inbounds i8, i8* %call558, i64 88
  %654 = bitcast i8* %fDistance.i.i1644 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %654, align 8, !tbaa !52
  %m_fGain.i.i1645 = getelementptr inbounds i8, i8* %call558, i64 92
  %655 = bitcast i8* %m_fGain.i.i1645 to float*
  store float 1.000000e+00, float* %655, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %647, align 8, !tbaa !24
  %arrayctor.next572 = getelementptr inbounds i8, i8* %call558, i64 96
  %656 = bitcast i8* %arrayctor.next572 to i32 (...)***
  %657 = getelementptr inbounds i8, i8* %call558, i64 104
  %658 = bitcast i8* %657 to i32*
  store i32 0, i32* %658, align 8, !tbaa !45
  %659 = getelementptr inbounds i8, i8* %call558, i64 108
  store i8 0, i8* %659, align 4, !tbaa !48
  %660 = getelementptr inbounds i8, i8* %call558, i64 112
  %661 = bitcast i8* %660 to i32*
  store i32 0, i32* %661, align 8, !tbaa !49
  %662 = getelementptr inbounds i8, i8* %call558, i64 116
  store i8 0, i8* %662, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.1 = getelementptr inbounds i8, i8* %call558, i64 120
  %fDistance.i.i1644.1 = getelementptr inbounds i8, i8* %call558, i64 176
  %663 = bitcast i8* %fDistance.i.i1644.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %663, align 8, !tbaa !52
  %m_fGain.i.i1645.1 = getelementptr inbounds i8, i8* %call558, i64 180
  %664 = bitcast i8* %m_fGain.i.i1645.1 to float*
  store float 1.000000e+00, float* %664, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %656, align 8, !tbaa !24
  %arrayctor.next572.1 = getelementptr inbounds i8, i8* %call558, i64 184
  %665 = bitcast i8* %arrayctor.next572.1 to i32 (...)***
  %666 = getelementptr inbounds i8, i8* %call558, i64 192
  %667 = bitcast i8* %666 to i32*
  store i32 0, i32* %667, align 8, !tbaa !45
  %668 = getelementptr inbounds i8, i8* %call558, i64 196
  store i8 0, i8* %668, align 4, !tbaa !48
  %669 = getelementptr inbounds i8, i8* %call558, i64 200
  %670 = bitcast i8* %669 to i32*
  store i32 0, i32* %670, align 8, !tbaa !49
  %671 = getelementptr inbounds i8, i8* %call558, i64 204
  store i8 0, i8* %671, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.2 = getelementptr inbounds i8, i8* %call558, i64 208
  %fDistance.i.i1644.2 = getelementptr inbounds i8, i8* %call558, i64 264
  %672 = bitcast i8* %fDistance.i.i1644.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %672, align 8, !tbaa !52
  %m_fGain.i.i1645.2 = getelementptr inbounds i8, i8* %call558, i64 268
  %673 = bitcast i8* %m_fGain.i.i1645.2 to float*
  store float 1.000000e+00, float* %673, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %665, align 8, !tbaa !24
  %arrayctor.next572.2 = getelementptr inbounds i8, i8* %call558, i64 272
  %674 = bitcast i8* %arrayctor.next572.2 to i32 (...)***
  %675 = getelementptr inbounds i8, i8* %call558, i64 280
  %676 = bitcast i8* %675 to i32*
  store i32 0, i32* %676, align 8, !tbaa !45
  %677 = getelementptr inbounds i8, i8* %call558, i64 284
  store i8 0, i8* %677, align 4, !tbaa !48
  %678 = getelementptr inbounds i8, i8* %call558, i64 288
  %679 = bitcast i8* %678 to i32*
  store i32 0, i32* %679, align 8, !tbaa !49
  %680 = getelementptr inbounds i8, i8* %call558, i64 292
  store i8 0, i8* %680, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.3 = getelementptr inbounds i8, i8* %call558, i64 296
  %fDistance.i.i1644.3 = getelementptr inbounds i8, i8* %call558, i64 352
  %681 = bitcast i8* %fDistance.i.i1644.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %681, align 8, !tbaa !52
  %m_fGain.i.i1645.3 = getelementptr inbounds i8, i8* %call558, i64 356
  %682 = bitcast i8* %m_fGain.i.i1645.3 to float*
  store float 1.000000e+00, float* %682, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %674, align 8, !tbaa !24
  %arrayctor.next572.3 = getelementptr inbounds i8, i8* %call558, i64 360
  %683 = bitcast i8* %arrayctor.next572.3 to i32 (...)***
  %684 = getelementptr inbounds i8, i8* %call558, i64 368
  %685 = bitcast i8* %684 to i32*
  store i32 0, i32* %685, align 8, !tbaa !45
  %686 = getelementptr inbounds i8, i8* %call558, i64 372
  store i8 0, i8* %686, align 4, !tbaa !48
  %687 = getelementptr inbounds i8, i8* %call558, i64 376
  %688 = bitcast i8* %687 to i32*
  store i32 0, i32* %688, align 8, !tbaa !49
  %689 = getelementptr inbounds i8, i8* %call558, i64 380
  store i8 0, i8* %689, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.4 = getelementptr inbounds i8, i8* %call558, i64 384
  %fDistance.i.i1644.4 = getelementptr inbounds i8, i8* %call558, i64 440
  %690 = bitcast i8* %fDistance.i.i1644.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %690, align 8, !tbaa !52
  %m_fGain.i.i1645.4 = getelementptr inbounds i8, i8* %call558, i64 444
  %691 = bitcast i8* %m_fGain.i.i1645.4 to float*
  store float 1.000000e+00, float* %691, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %683, align 8, !tbaa !24
  %arrayctor.next572.4 = getelementptr inbounds i8, i8* %call558, i64 448
  %692 = bitcast i8* %arrayctor.next572.4 to i32 (...)***
  %693 = getelementptr inbounds i8, i8* %call558, i64 456
  %694 = bitcast i8* %693 to i32*
  store i32 0, i32* %694, align 8, !tbaa !45
  %695 = getelementptr inbounds i8, i8* %call558, i64 460
  store i8 0, i8* %695, align 4, !tbaa !48
  %696 = getelementptr inbounds i8, i8* %call558, i64 464
  %697 = bitcast i8* %696 to i32*
  store i32 0, i32* %697, align 8, !tbaa !49
  %698 = getelementptr inbounds i8, i8* %call558, i64 468
  store i8 0, i8* %698, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.5 = getelementptr inbounds i8, i8* %call558, i64 472
  %fDistance.i.i1644.5 = getelementptr inbounds i8, i8* %call558, i64 528
  %699 = bitcast i8* %fDistance.i.i1644.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %699, align 8, !tbaa !52
  %m_fGain.i.i1645.5 = getelementptr inbounds i8, i8* %call558, i64 532
  %700 = bitcast i8* %m_fGain.i.i1645.5 to float*
  store float 1.000000e+00, float* %700, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %692, align 8, !tbaa !24
  %arrayctor.next572.5 = getelementptr inbounds i8, i8* %call558, i64 536
  %701 = bitcast i8* %arrayctor.next572.5 to i32 (...)***
  %702 = getelementptr inbounds i8, i8* %call558, i64 544
  %703 = bitcast i8* %702 to i32*
  store i32 0, i32* %703, align 8, !tbaa !45
  %704 = getelementptr inbounds i8, i8* %call558, i64 548
  store i8 0, i8* %704, align 4, !tbaa !48
  %705 = getelementptr inbounds i8, i8* %call558, i64 552
  %706 = bitcast i8* %705 to i32*
  store i32 0, i32* %706, align 8, !tbaa !49
  %707 = getelementptr inbounds i8, i8* %call558, i64 556
  store i8 0, i8* %707, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.6 = getelementptr inbounds i8, i8* %call558, i64 560
  %fDistance.i.i1644.6 = getelementptr inbounds i8, i8* %call558, i64 616
  %708 = bitcast i8* %fDistance.i.i1644.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %708, align 8, !tbaa !52
  %m_fGain.i.i1645.6 = getelementptr inbounds i8, i8* %call558, i64 620
  %709 = bitcast i8* %m_fGain.i.i1645.6 to float*
  store float 1.000000e+00, float* %709, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %701, align 8, !tbaa !24
  %arrayctor.next572.6 = getelementptr inbounds i8, i8* %call558, i64 624
  %710 = bitcast i8* %arrayctor.next572.6 to i32 (...)***
  %711 = getelementptr inbounds i8, i8* %call558, i64 632
  %712 = bitcast i8* %711 to i32*
  store i32 0, i32* %712, align 8, !tbaa !45
  %713 = getelementptr inbounds i8, i8* %call558, i64 636
  store i8 0, i8* %713, align 4, !tbaa !48
  %714 = getelementptr inbounds i8, i8* %call558, i64 640
  %715 = bitcast i8* %714 to i32*
  store i32 0, i32* %715, align 8, !tbaa !49
  %716 = getelementptr inbounds i8, i8* %call558, i64 644
  store i8 0, i8* %716, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.7 = getelementptr inbounds i8, i8* %call558, i64 648
  %fDistance.i.i1644.7 = getelementptr inbounds i8, i8* %call558, i64 704
  %717 = bitcast i8* %fDistance.i.i1644.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %717, align 8, !tbaa !52
  %m_fGain.i.i1645.7 = getelementptr inbounds i8, i8* %call558, i64 708
  %718 = bitcast i8* %m_fGain.i.i1645.7 to float*
  store float 1.000000e+00, float* %718, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %710, align 8, !tbaa !24
  %arrayctor.next572.7 = getelementptr inbounds i8, i8* %call558, i64 712
  %719 = bitcast i8* %arrayctor.next572.7 to i32 (...)***
  %720 = getelementptr inbounds i8, i8* %call558, i64 720
  %721 = bitcast i8* %720 to i32*
  store i32 0, i32* %721, align 8, !tbaa !45
  %722 = getelementptr inbounds i8, i8* %call558, i64 724
  store i8 0, i8* %722, align 4, !tbaa !48
  %723 = getelementptr inbounds i8, i8* %call558, i64 728
  %724 = bitcast i8* %723 to i32*
  store i32 0, i32* %724, align 8, !tbaa !49
  %725 = getelementptr inbounds i8, i8* %call558, i64 732
  store i8 0, i8* %725, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.8 = getelementptr inbounds i8, i8* %call558, i64 736
  %fDistance.i.i1644.8 = getelementptr inbounds i8, i8* %call558, i64 792
  %726 = bitcast i8* %fDistance.i.i1644.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %726, align 8, !tbaa !52
  %m_fGain.i.i1645.8 = getelementptr inbounds i8, i8* %call558, i64 796
  %727 = bitcast i8* %m_fGain.i.i1645.8 to float*
  store float 1.000000e+00, float* %727, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8, !tbaa !24
  %arrayctor.next572.8 = getelementptr inbounds i8, i8* %call558, i64 800
  %728 = bitcast i8* %arrayctor.next572.8 to i32 (...)***
  %729 = getelementptr inbounds i8, i8* %call558, i64 808
  %730 = bitcast i8* %729 to i32*
  store i32 0, i32* %730, align 8, !tbaa !45
  %731 = getelementptr inbounds i8, i8* %call558, i64 812
  store i8 0, i8* %731, align 4, !tbaa !48
  %732 = getelementptr inbounds i8, i8* %call558, i64 816
  %733 = bitcast i8* %732 to i32*
  store i32 0, i32* %733, align 8, !tbaa !49
  %734 = getelementptr inbounds i8, i8* %call558, i64 820
  store i8 0, i8* %734, align 4, !tbaa !50
  %m_pfCoeff.i.i1643.9 = getelementptr inbounds i8, i8* %call558, i64 824
  %fDistance.i.i1644.9 = getelementptr inbounds i8, i8* %call558, i64 880
  %735 = bitcast i8* %fDistance.i.i1644.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %735, align 8, !tbaa !52
  %m_fGain.i.i1645.9 = getelementptr inbounds i8, i8* %call558, i64 884
  %736 = bitcast i8* %m_fGain.i.i1645.9 to float*
  store float 1.000000e+00, float* %736, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %728, align 8, !tbaa !24
  %737 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %646, i8** %737, align 8, !tbaa !240
  %738 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %739 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body579

for.body579:                                      ; preds = %for.body579, %for.body579.lr.ph
  %indvars.iv1728 = phi i64 [ 0, %for.body579.lr.ph ], [ %indvars.iv.next1729, %for.body579 ]
  %740 = phi i32 [ 10, %for.body579.lr.ph ], [ %751, %for.body579 ]
  %polPosition.sroa.0.41685 = phi <2 x float> [ zeroinitializer, %for.body579.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1491, %for.body579 ]
  %741 = trunc i64 %indvars.iv1728 to i32
  %conv580 = uitofp i32 %741 to float
  %mul581 = fmul float %conv580, 3.600000e+02
  %conv583 = uitofp i32 %740 to float
  %div584 = fdiv float %mul581, %conv583
  %call585 = tail call float @_Z16DegreesToRadiansf(float %div584)
  %sub586 = fsub float -0.000000e+00, %call585
  %polPosition.sroa.0.0.vec.insert1491 = insertelement <2 x float> %polPosition.sroa.0.41685, float %sub586, i32 0
  %742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx590 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %742, i64 %indvars.iv1728
  %743 = load i32, i32* %738, align 8, !tbaa !45
  %744 = load i8, i8* %739, align 4, !tbaa !48, !range !51
  %tobool593 = icmp ne i8 %744, 0
  %745 = bitcast %class.CAmbisonicSpeaker* %arrayidx590 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable594 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %745, align 8, !tbaa !24
  %vfn595 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable594, i64 2
  %746 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn595, align 8
  %call596 = tail call zeroext i1 %746(%class.CAmbisonicSpeaker* %arrayidx590, i32 %743, i1 zeroext %tobool593, i32 0)
  %747 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %748 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %747, i64 %indvars.iv1728, i32 0
  %749 = bitcast %class.CAmbisonicSource* %748 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable601 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %749, align 8, !tbaa !24
  %vfn602 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable601, i64 5
  %750 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn602, align 8
  tail call void %750(%class.CAmbisonicSource* %748, <2 x float> %polPosition.sroa.0.0.vec.insert1491, float 1.000000e+00)
  %indvars.iv.next1729 = add nuw nsw i64 %indvars.iv1728, 1
  %751 = load i32, i32* %m_nSpeakers555, align 4, !tbaa !243
  %752 = zext i32 %751 to i64
  %cmp578 = icmp ult i64 %indvars.iv.next1729, %752
  br i1 %cmp578, label %for.body579, label %sw.epilog

for.body631.lr.ph:                                ; preds = %if.end
  %m_nSpeakers607 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 12, i32* %m_nSpeakers607, align 4, !tbaa !243
  %call610 = tail call i8* @_Znam(i64 1064) #25
  %753 = bitcast i8* %call610 to i64*
  store i64 12, i64* %753, align 16
  %754 = getelementptr inbounds i8, i8* %call610, i64 8
  %755 = bitcast i8* %754 to i32 (...)***
  %756 = getelementptr inbounds i8, i8* %call610, i64 16
  %757 = bitcast i8* %756 to i32*
  store i32 0, i32* %757, align 8, !tbaa !45
  %758 = getelementptr inbounds i8, i8* %call610, i64 20
  store i8 0, i8* %758, align 4, !tbaa !48
  %759 = getelementptr inbounds i8, i8* %call610, i64 24
  %760 = bitcast i8* %759 to i32*
  store i32 0, i32* %760, align 8, !tbaa !49
  %761 = getelementptr inbounds i8, i8* %call610, i64 28
  store i8 0, i8* %761, align 4, !tbaa !50
  %m_pfCoeff.i.i1649 = getelementptr inbounds i8, i8* %call610, i64 32
  %fDistance.i.i1650 = getelementptr inbounds i8, i8* %call610, i64 88
  %762 = bitcast i8* %fDistance.i.i1650 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %762, align 8, !tbaa !52
  %m_fGain.i.i1651 = getelementptr inbounds i8, i8* %call610, i64 92
  %763 = bitcast i8* %m_fGain.i.i1651 to float*
  store float 1.000000e+00, float* %763, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %755, align 8, !tbaa !24
  %arrayctor.next624 = getelementptr inbounds i8, i8* %call610, i64 96
  %764 = bitcast i8* %arrayctor.next624 to i32 (...)***
  %765 = getelementptr inbounds i8, i8* %call610, i64 104
  %766 = bitcast i8* %765 to i32*
  store i32 0, i32* %766, align 8, !tbaa !45
  %767 = getelementptr inbounds i8, i8* %call610, i64 108
  store i8 0, i8* %767, align 4, !tbaa !48
  %768 = getelementptr inbounds i8, i8* %call610, i64 112
  %769 = bitcast i8* %768 to i32*
  store i32 0, i32* %769, align 8, !tbaa !49
  %770 = getelementptr inbounds i8, i8* %call610, i64 116
  store i8 0, i8* %770, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.1 = getelementptr inbounds i8, i8* %call610, i64 120
  %fDistance.i.i1650.1 = getelementptr inbounds i8, i8* %call610, i64 176
  %771 = bitcast i8* %fDistance.i.i1650.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %771, align 8, !tbaa !52
  %m_fGain.i.i1651.1 = getelementptr inbounds i8, i8* %call610, i64 180
  %772 = bitcast i8* %m_fGain.i.i1651.1 to float*
  store float 1.000000e+00, float* %772, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %764, align 8, !tbaa !24
  %arrayctor.next624.1 = getelementptr inbounds i8, i8* %call610, i64 184
  %773 = bitcast i8* %arrayctor.next624.1 to i32 (...)***
  %774 = getelementptr inbounds i8, i8* %call610, i64 192
  %775 = bitcast i8* %774 to i32*
  store i32 0, i32* %775, align 8, !tbaa !45
  %776 = getelementptr inbounds i8, i8* %call610, i64 196
  store i8 0, i8* %776, align 4, !tbaa !48
  %777 = getelementptr inbounds i8, i8* %call610, i64 200
  %778 = bitcast i8* %777 to i32*
  store i32 0, i32* %778, align 8, !tbaa !49
  %779 = getelementptr inbounds i8, i8* %call610, i64 204
  store i8 0, i8* %779, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.2 = getelementptr inbounds i8, i8* %call610, i64 208
  %fDistance.i.i1650.2 = getelementptr inbounds i8, i8* %call610, i64 264
  %780 = bitcast i8* %fDistance.i.i1650.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %780, align 8, !tbaa !52
  %m_fGain.i.i1651.2 = getelementptr inbounds i8, i8* %call610, i64 268
  %781 = bitcast i8* %m_fGain.i.i1651.2 to float*
  store float 1.000000e+00, float* %781, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %773, align 8, !tbaa !24
  %arrayctor.next624.2 = getelementptr inbounds i8, i8* %call610, i64 272
  %782 = bitcast i8* %arrayctor.next624.2 to i32 (...)***
  %783 = getelementptr inbounds i8, i8* %call610, i64 280
  %784 = bitcast i8* %783 to i32*
  store i32 0, i32* %784, align 8, !tbaa !45
  %785 = getelementptr inbounds i8, i8* %call610, i64 284
  store i8 0, i8* %785, align 4, !tbaa !48
  %786 = getelementptr inbounds i8, i8* %call610, i64 288
  %787 = bitcast i8* %786 to i32*
  store i32 0, i32* %787, align 8, !tbaa !49
  %788 = getelementptr inbounds i8, i8* %call610, i64 292
  store i8 0, i8* %788, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.3 = getelementptr inbounds i8, i8* %call610, i64 296
  %fDistance.i.i1650.3 = getelementptr inbounds i8, i8* %call610, i64 352
  %789 = bitcast i8* %fDistance.i.i1650.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %789, align 8, !tbaa !52
  %m_fGain.i.i1651.3 = getelementptr inbounds i8, i8* %call610, i64 356
  %790 = bitcast i8* %m_fGain.i.i1651.3 to float*
  store float 1.000000e+00, float* %790, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %782, align 8, !tbaa !24
  %arrayctor.next624.3 = getelementptr inbounds i8, i8* %call610, i64 360
  %791 = bitcast i8* %arrayctor.next624.3 to i32 (...)***
  %792 = getelementptr inbounds i8, i8* %call610, i64 368
  %793 = bitcast i8* %792 to i32*
  store i32 0, i32* %793, align 8, !tbaa !45
  %794 = getelementptr inbounds i8, i8* %call610, i64 372
  store i8 0, i8* %794, align 4, !tbaa !48
  %795 = getelementptr inbounds i8, i8* %call610, i64 376
  %796 = bitcast i8* %795 to i32*
  store i32 0, i32* %796, align 8, !tbaa !49
  %797 = getelementptr inbounds i8, i8* %call610, i64 380
  store i8 0, i8* %797, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.4 = getelementptr inbounds i8, i8* %call610, i64 384
  %fDistance.i.i1650.4 = getelementptr inbounds i8, i8* %call610, i64 440
  %798 = bitcast i8* %fDistance.i.i1650.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %798, align 8, !tbaa !52
  %m_fGain.i.i1651.4 = getelementptr inbounds i8, i8* %call610, i64 444
  %799 = bitcast i8* %m_fGain.i.i1651.4 to float*
  store float 1.000000e+00, float* %799, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %791, align 8, !tbaa !24
  %arrayctor.next624.4 = getelementptr inbounds i8, i8* %call610, i64 448
  %800 = bitcast i8* %arrayctor.next624.4 to i32 (...)***
  %801 = getelementptr inbounds i8, i8* %call610, i64 456
  %802 = bitcast i8* %801 to i32*
  store i32 0, i32* %802, align 8, !tbaa !45
  %803 = getelementptr inbounds i8, i8* %call610, i64 460
  store i8 0, i8* %803, align 4, !tbaa !48
  %804 = getelementptr inbounds i8, i8* %call610, i64 464
  %805 = bitcast i8* %804 to i32*
  store i32 0, i32* %805, align 8, !tbaa !49
  %806 = getelementptr inbounds i8, i8* %call610, i64 468
  store i8 0, i8* %806, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.5 = getelementptr inbounds i8, i8* %call610, i64 472
  %fDistance.i.i1650.5 = getelementptr inbounds i8, i8* %call610, i64 528
  %807 = bitcast i8* %fDistance.i.i1650.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %807, align 8, !tbaa !52
  %m_fGain.i.i1651.5 = getelementptr inbounds i8, i8* %call610, i64 532
  %808 = bitcast i8* %m_fGain.i.i1651.5 to float*
  store float 1.000000e+00, float* %808, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %800, align 8, !tbaa !24
  %arrayctor.next624.5 = getelementptr inbounds i8, i8* %call610, i64 536
  %809 = bitcast i8* %arrayctor.next624.5 to i32 (...)***
  %810 = getelementptr inbounds i8, i8* %call610, i64 544
  %811 = bitcast i8* %810 to i32*
  store i32 0, i32* %811, align 8, !tbaa !45
  %812 = getelementptr inbounds i8, i8* %call610, i64 548
  store i8 0, i8* %812, align 4, !tbaa !48
  %813 = getelementptr inbounds i8, i8* %call610, i64 552
  %814 = bitcast i8* %813 to i32*
  store i32 0, i32* %814, align 8, !tbaa !49
  %815 = getelementptr inbounds i8, i8* %call610, i64 556
  store i8 0, i8* %815, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.6 = getelementptr inbounds i8, i8* %call610, i64 560
  %fDistance.i.i1650.6 = getelementptr inbounds i8, i8* %call610, i64 616
  %816 = bitcast i8* %fDistance.i.i1650.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %816, align 8, !tbaa !52
  %m_fGain.i.i1651.6 = getelementptr inbounds i8, i8* %call610, i64 620
  %817 = bitcast i8* %m_fGain.i.i1651.6 to float*
  store float 1.000000e+00, float* %817, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %809, align 8, !tbaa !24
  %arrayctor.next624.6 = getelementptr inbounds i8, i8* %call610, i64 624
  %818 = bitcast i8* %arrayctor.next624.6 to i32 (...)***
  %819 = getelementptr inbounds i8, i8* %call610, i64 632
  %820 = bitcast i8* %819 to i32*
  store i32 0, i32* %820, align 8, !tbaa !45
  %821 = getelementptr inbounds i8, i8* %call610, i64 636
  store i8 0, i8* %821, align 4, !tbaa !48
  %822 = getelementptr inbounds i8, i8* %call610, i64 640
  %823 = bitcast i8* %822 to i32*
  store i32 0, i32* %823, align 8, !tbaa !49
  %824 = getelementptr inbounds i8, i8* %call610, i64 644
  store i8 0, i8* %824, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.7 = getelementptr inbounds i8, i8* %call610, i64 648
  %fDistance.i.i1650.7 = getelementptr inbounds i8, i8* %call610, i64 704
  %825 = bitcast i8* %fDistance.i.i1650.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %825, align 8, !tbaa !52
  %m_fGain.i.i1651.7 = getelementptr inbounds i8, i8* %call610, i64 708
  %826 = bitcast i8* %m_fGain.i.i1651.7 to float*
  store float 1.000000e+00, float* %826, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %818, align 8, !tbaa !24
  %arrayctor.next624.7 = getelementptr inbounds i8, i8* %call610, i64 712
  %827 = bitcast i8* %arrayctor.next624.7 to i32 (...)***
  %828 = getelementptr inbounds i8, i8* %call610, i64 720
  %829 = bitcast i8* %828 to i32*
  store i32 0, i32* %829, align 8, !tbaa !45
  %830 = getelementptr inbounds i8, i8* %call610, i64 724
  store i8 0, i8* %830, align 4, !tbaa !48
  %831 = getelementptr inbounds i8, i8* %call610, i64 728
  %832 = bitcast i8* %831 to i32*
  store i32 0, i32* %832, align 8, !tbaa !49
  %833 = getelementptr inbounds i8, i8* %call610, i64 732
  store i8 0, i8* %833, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.8 = getelementptr inbounds i8, i8* %call610, i64 736
  %fDistance.i.i1650.8 = getelementptr inbounds i8, i8* %call610, i64 792
  %834 = bitcast i8* %fDistance.i.i1650.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %834, align 8, !tbaa !52
  %m_fGain.i.i1651.8 = getelementptr inbounds i8, i8* %call610, i64 796
  %835 = bitcast i8* %m_fGain.i.i1651.8 to float*
  store float 1.000000e+00, float* %835, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %827, align 8, !tbaa !24
  %arrayctor.next624.8 = getelementptr inbounds i8, i8* %call610, i64 800
  %836 = bitcast i8* %arrayctor.next624.8 to i32 (...)***
  %837 = getelementptr inbounds i8, i8* %call610, i64 808
  %838 = bitcast i8* %837 to i32*
  store i32 0, i32* %838, align 8, !tbaa !45
  %839 = getelementptr inbounds i8, i8* %call610, i64 812
  store i8 0, i8* %839, align 4, !tbaa !48
  %840 = getelementptr inbounds i8, i8* %call610, i64 816
  %841 = bitcast i8* %840 to i32*
  store i32 0, i32* %841, align 8, !tbaa !49
  %842 = getelementptr inbounds i8, i8* %call610, i64 820
  store i8 0, i8* %842, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.9 = getelementptr inbounds i8, i8* %call610, i64 824
  %fDistance.i.i1650.9 = getelementptr inbounds i8, i8* %call610, i64 880
  %843 = bitcast i8* %fDistance.i.i1650.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %843, align 8, !tbaa !52
  %m_fGain.i.i1651.9 = getelementptr inbounds i8, i8* %call610, i64 884
  %844 = bitcast i8* %m_fGain.i.i1651.9 to float*
  store float 1.000000e+00, float* %844, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %836, align 8, !tbaa !24
  %arrayctor.next624.9 = getelementptr inbounds i8, i8* %call610, i64 888
  %845 = bitcast i8* %arrayctor.next624.9 to i32 (...)***
  %846 = getelementptr inbounds i8, i8* %call610, i64 896
  %847 = bitcast i8* %846 to i32*
  store i32 0, i32* %847, align 8, !tbaa !45
  %848 = getelementptr inbounds i8, i8* %call610, i64 900
  store i8 0, i8* %848, align 4, !tbaa !48
  %849 = getelementptr inbounds i8, i8* %call610, i64 904
  %850 = bitcast i8* %849 to i32*
  store i32 0, i32* %850, align 8, !tbaa !49
  %851 = getelementptr inbounds i8, i8* %call610, i64 908
  store i8 0, i8* %851, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.10 = getelementptr inbounds i8, i8* %call610, i64 912
  %fDistance.i.i1650.10 = getelementptr inbounds i8, i8* %call610, i64 968
  %852 = bitcast i8* %fDistance.i.i1650.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %852, align 8, !tbaa !52
  %m_fGain.i.i1651.10 = getelementptr inbounds i8, i8* %call610, i64 972
  %853 = bitcast i8* %m_fGain.i.i1651.10 to float*
  store float 1.000000e+00, float* %853, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %845, align 8, !tbaa !24
  %arrayctor.next624.10 = getelementptr inbounds i8, i8* %call610, i64 976
  %854 = bitcast i8* %arrayctor.next624.10 to i32 (...)***
  %855 = getelementptr inbounds i8, i8* %call610, i64 984
  %856 = bitcast i8* %855 to i32*
  store i32 0, i32* %856, align 8, !tbaa !45
  %857 = getelementptr inbounds i8, i8* %call610, i64 988
  store i8 0, i8* %857, align 4, !tbaa !48
  %858 = getelementptr inbounds i8, i8* %call610, i64 992
  %859 = bitcast i8* %858 to i32*
  store i32 0, i32* %859, align 8, !tbaa !49
  %860 = getelementptr inbounds i8, i8* %call610, i64 996
  store i8 0, i8* %860, align 4, !tbaa !50
  %m_pfCoeff.i.i1649.11 = getelementptr inbounds i8, i8* %call610, i64 1000
  %fDistance.i.i1650.11 = getelementptr inbounds i8, i8* %call610, i64 1056
  %861 = bitcast i8* %fDistance.i.i1650.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %861, align 8, !tbaa !52
  %m_fGain.i.i1651.11 = getelementptr inbounds i8, i8* %call610, i64 1060
  %862 = bitcast i8* %m_fGain.i.i1651.11 to float*
  store float 1.000000e+00, float* %862, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %854, align 8, !tbaa !24
  %863 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %754, i8** %863, align 8, !tbaa !240
  %864 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %865 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body631

for.body631:                                      ; preds = %for.body631, %for.body631.lr.ph
  %indvars.iv1730 = phi i64 [ 0, %for.body631.lr.ph ], [ %indvars.iv.next1731, %for.body631 ]
  %866 = phi i32 [ 12, %for.body631.lr.ph ], [ %877, %for.body631 ]
  %polPosition.sroa.0.51688 = phi <2 x float> [ zeroinitializer, %for.body631.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1489, %for.body631 ]
  %867 = trunc i64 %indvars.iv1730 to i32
  %conv632 = uitofp i32 %867 to float
  %mul633 = fmul float %conv632, 3.600000e+02
  %conv635 = uitofp i32 %866 to float
  %div636 = fdiv float %mul633, %conv635
  %call637 = tail call float @_Z16DegreesToRadiansf(float %div636)
  %sub638 = fsub float -0.000000e+00, %call637
  %polPosition.sroa.0.0.vec.insert1489 = insertelement <2 x float> %polPosition.sroa.0.51688, float %sub638, i32 0
  %868 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx642 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %868, i64 %indvars.iv1730
  %869 = load i32, i32* %864, align 8, !tbaa !45
  %870 = load i8, i8* %865, align 4, !tbaa !48, !range !51
  %tobool645 = icmp ne i8 %870, 0
  %871 = bitcast %class.CAmbisonicSpeaker* %arrayidx642 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable646 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %871, align 8, !tbaa !24
  %vfn647 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable646, i64 2
  %872 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn647, align 8
  %call648 = tail call zeroext i1 %872(%class.CAmbisonicSpeaker* %arrayidx642, i32 %869, i1 zeroext %tobool645, i32 0)
  %873 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %874 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %873, i64 %indvars.iv1730, i32 0
  %875 = bitcast %class.CAmbisonicSource* %874 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable653 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %875, align 8, !tbaa !24
  %vfn654 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable653, i64 5
  %876 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn654, align 8
  tail call void %876(%class.CAmbisonicSource* %874, <2 x float> %polPosition.sroa.0.0.vec.insert1489, float 1.000000e+00)
  %indvars.iv.next1731 = add nuw nsw i64 %indvars.iv1730, 1
  %877 = load i32, i32* %m_nSpeakers607, align 4, !tbaa !243
  %878 = zext i32 %877 to i64
  %cmp630 = icmp ult i64 %indvars.iv.next1731, %878
  br i1 %cmp630, label %for.body631, label %sw.epilog

sw.bb658:                                         ; preds = %if.end
  %m_nSpeakers659 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers659, align 4, !tbaa !243
  %call662 = tail call i8* @_Znam(i64 712) #25
  %879 = bitcast i8* %call662 to i64*
  store i64 8, i64* %879, align 16
  %880 = getelementptr inbounds i8, i8* %call662, i64 8
  %881 = bitcast i8* %880 to i32 (...)***
  %882 = getelementptr inbounds i8, i8* %call662, i64 16
  %883 = bitcast i8* %882 to i32*
  store i32 0, i32* %883, align 8, !tbaa !45
  %884 = getelementptr inbounds i8, i8* %call662, i64 20
  store i8 0, i8* %884, align 4, !tbaa !48
  %885 = getelementptr inbounds i8, i8* %call662, i64 24
  %886 = bitcast i8* %885 to i32*
  store i32 0, i32* %886, align 8, !tbaa !49
  %887 = getelementptr inbounds i8, i8* %call662, i64 28
  store i8 0, i8* %887, align 4, !tbaa !50
  %m_pfCoeff.i.i1652 = getelementptr inbounds i8, i8* %call662, i64 32
  %fDistance.i.i1653 = getelementptr inbounds i8, i8* %call662, i64 88
  %888 = bitcast i8* %fDistance.i.i1653 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %888, align 8, !tbaa !52
  %m_fGain.i.i1654 = getelementptr inbounds i8, i8* %call662, i64 92
  %889 = bitcast i8* %m_fGain.i.i1654 to float*
  store float 1.000000e+00, float* %889, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %881, align 8, !tbaa !24
  %arrayctor.next676 = getelementptr inbounds i8, i8* %call662, i64 96
  %890 = bitcast i8* %arrayctor.next676 to i32 (...)***
  %891 = getelementptr inbounds i8, i8* %call662, i64 104
  %892 = bitcast i8* %891 to i32*
  store i32 0, i32* %892, align 8, !tbaa !45
  %893 = getelementptr inbounds i8, i8* %call662, i64 108
  store i8 0, i8* %893, align 4, !tbaa !48
  %894 = getelementptr inbounds i8, i8* %call662, i64 112
  %895 = bitcast i8* %894 to i32*
  store i32 0, i32* %895, align 8, !tbaa !49
  %896 = getelementptr inbounds i8, i8* %call662, i64 116
  store i8 0, i8* %896, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.1 = getelementptr inbounds i8, i8* %call662, i64 120
  %fDistance.i.i1653.1 = getelementptr inbounds i8, i8* %call662, i64 176
  %897 = bitcast i8* %fDistance.i.i1653.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %897, align 8, !tbaa !52
  %m_fGain.i.i1654.1 = getelementptr inbounds i8, i8* %call662, i64 180
  %898 = bitcast i8* %m_fGain.i.i1654.1 to float*
  store float 1.000000e+00, float* %898, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %890, align 8, !tbaa !24
  %arrayctor.next676.1 = getelementptr inbounds i8, i8* %call662, i64 184
  %899 = bitcast i8* %arrayctor.next676.1 to i32 (...)***
  %900 = getelementptr inbounds i8, i8* %call662, i64 192
  %901 = bitcast i8* %900 to i32*
  store i32 0, i32* %901, align 8, !tbaa !45
  %902 = getelementptr inbounds i8, i8* %call662, i64 196
  store i8 0, i8* %902, align 4, !tbaa !48
  %903 = getelementptr inbounds i8, i8* %call662, i64 200
  %904 = bitcast i8* %903 to i32*
  store i32 0, i32* %904, align 8, !tbaa !49
  %905 = getelementptr inbounds i8, i8* %call662, i64 204
  store i8 0, i8* %905, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.2 = getelementptr inbounds i8, i8* %call662, i64 208
  %fDistance.i.i1653.2 = getelementptr inbounds i8, i8* %call662, i64 264
  %906 = bitcast i8* %fDistance.i.i1653.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %906, align 8, !tbaa !52
  %m_fGain.i.i1654.2 = getelementptr inbounds i8, i8* %call662, i64 268
  %907 = bitcast i8* %m_fGain.i.i1654.2 to float*
  store float 1.000000e+00, float* %907, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %899, align 8, !tbaa !24
  %arrayctor.next676.2 = getelementptr inbounds i8, i8* %call662, i64 272
  %908 = bitcast i8* %arrayctor.next676.2 to i32 (...)***
  %909 = getelementptr inbounds i8, i8* %call662, i64 280
  %910 = bitcast i8* %909 to i32*
  store i32 0, i32* %910, align 8, !tbaa !45
  %911 = getelementptr inbounds i8, i8* %call662, i64 284
  store i8 0, i8* %911, align 4, !tbaa !48
  %912 = getelementptr inbounds i8, i8* %call662, i64 288
  %913 = bitcast i8* %912 to i32*
  store i32 0, i32* %913, align 8, !tbaa !49
  %914 = getelementptr inbounds i8, i8* %call662, i64 292
  store i8 0, i8* %914, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.3 = getelementptr inbounds i8, i8* %call662, i64 296
  %fDistance.i.i1653.3 = getelementptr inbounds i8, i8* %call662, i64 352
  %915 = bitcast i8* %fDistance.i.i1653.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %915, align 8, !tbaa !52
  %m_fGain.i.i1654.3 = getelementptr inbounds i8, i8* %call662, i64 356
  %916 = bitcast i8* %m_fGain.i.i1654.3 to float*
  store float 1.000000e+00, float* %916, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %908, align 8, !tbaa !24
  %arrayctor.next676.3 = getelementptr inbounds i8, i8* %call662, i64 360
  %917 = bitcast i8* %arrayctor.next676.3 to i32 (...)***
  %918 = getelementptr inbounds i8, i8* %call662, i64 368
  %919 = bitcast i8* %918 to i32*
  store i32 0, i32* %919, align 8, !tbaa !45
  %920 = getelementptr inbounds i8, i8* %call662, i64 372
  store i8 0, i8* %920, align 4, !tbaa !48
  %921 = getelementptr inbounds i8, i8* %call662, i64 376
  %922 = bitcast i8* %921 to i32*
  store i32 0, i32* %922, align 8, !tbaa !49
  %923 = getelementptr inbounds i8, i8* %call662, i64 380
  store i8 0, i8* %923, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.4 = getelementptr inbounds i8, i8* %call662, i64 384
  %fDistance.i.i1653.4 = getelementptr inbounds i8, i8* %call662, i64 440
  %924 = bitcast i8* %fDistance.i.i1653.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %924, align 8, !tbaa !52
  %m_fGain.i.i1654.4 = getelementptr inbounds i8, i8* %call662, i64 444
  %925 = bitcast i8* %m_fGain.i.i1654.4 to float*
  store float 1.000000e+00, float* %925, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %917, align 8, !tbaa !24
  %arrayctor.next676.4 = getelementptr inbounds i8, i8* %call662, i64 448
  %926 = bitcast i8* %arrayctor.next676.4 to i32 (...)***
  %927 = getelementptr inbounds i8, i8* %call662, i64 456
  %928 = bitcast i8* %927 to i32*
  store i32 0, i32* %928, align 8, !tbaa !45
  %929 = getelementptr inbounds i8, i8* %call662, i64 460
  store i8 0, i8* %929, align 4, !tbaa !48
  %930 = getelementptr inbounds i8, i8* %call662, i64 464
  %931 = bitcast i8* %930 to i32*
  store i32 0, i32* %931, align 8, !tbaa !49
  %932 = getelementptr inbounds i8, i8* %call662, i64 468
  store i8 0, i8* %932, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.5 = getelementptr inbounds i8, i8* %call662, i64 472
  %fDistance.i.i1653.5 = getelementptr inbounds i8, i8* %call662, i64 528
  %933 = bitcast i8* %fDistance.i.i1653.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %933, align 8, !tbaa !52
  %m_fGain.i.i1654.5 = getelementptr inbounds i8, i8* %call662, i64 532
  %934 = bitcast i8* %m_fGain.i.i1654.5 to float*
  store float 1.000000e+00, float* %934, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %926, align 8, !tbaa !24
  %arrayctor.next676.5 = getelementptr inbounds i8, i8* %call662, i64 536
  %935 = bitcast i8* %arrayctor.next676.5 to i32 (...)***
  %936 = getelementptr inbounds i8, i8* %call662, i64 544
  %937 = bitcast i8* %936 to i32*
  store i32 0, i32* %937, align 8, !tbaa !45
  %938 = getelementptr inbounds i8, i8* %call662, i64 548
  store i8 0, i8* %938, align 4, !tbaa !48
  %939 = getelementptr inbounds i8, i8* %call662, i64 552
  %940 = bitcast i8* %939 to i32*
  store i32 0, i32* %940, align 8, !tbaa !49
  %941 = getelementptr inbounds i8, i8* %call662, i64 556
  store i8 0, i8* %941, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.6 = getelementptr inbounds i8, i8* %call662, i64 560
  %fDistance.i.i1653.6 = getelementptr inbounds i8, i8* %call662, i64 616
  %942 = bitcast i8* %fDistance.i.i1653.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %942, align 8, !tbaa !52
  %m_fGain.i.i1654.6 = getelementptr inbounds i8, i8* %call662, i64 620
  %943 = bitcast i8* %m_fGain.i.i1654.6 to float*
  store float 1.000000e+00, float* %943, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %935, align 8, !tbaa !24
  %arrayctor.next676.6 = getelementptr inbounds i8, i8* %call662, i64 624
  %944 = bitcast i8* %arrayctor.next676.6 to i32 (...)***
  %945 = getelementptr inbounds i8, i8* %call662, i64 632
  %946 = bitcast i8* %945 to i32*
  store i32 0, i32* %946, align 8, !tbaa !45
  %947 = getelementptr inbounds i8, i8* %call662, i64 636
  store i8 0, i8* %947, align 4, !tbaa !48
  %948 = getelementptr inbounds i8, i8* %call662, i64 640
  %949 = bitcast i8* %948 to i32*
  store i32 0, i32* %949, align 8, !tbaa !49
  %950 = getelementptr inbounds i8, i8* %call662, i64 644
  store i8 0, i8* %950, align 4, !tbaa !50
  %m_pfCoeff.i.i1652.7 = getelementptr inbounds i8, i8* %call662, i64 648
  %fDistance.i.i1653.7 = getelementptr inbounds i8, i8* %call662, i64 704
  %951 = bitcast i8* %fDistance.i.i1653.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %951, align 8, !tbaa !52
  %m_fGain.i.i1654.7 = getelementptr inbounds i8, i8* %call662, i64 708
  %952 = bitcast i8* %m_fGain.i.i1654.7 to float*
  store float 1.000000e+00, float* %952, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %944, align 8, !tbaa !24
  %953 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %880, i8** %953, align 8, !tbaa !240
  %call680 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.4.vec.insert1579 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call680, i32 1
  %954 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !243
  %div6831692 = lshr i32 %954, 1
  %cmp6841693 = icmp eq i32 %div6831692, 0
  br i1 %cmp6841693, label %for.end713, label %for.body685.lr.ph

for.body685.lr.ph:                                ; preds = %sw.bb658
  %955 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %956 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body685

for.body685:                                      ; preds = %for.body685, %for.body685.lr.ph
  %indvars.iv1734 = phi i64 [ 0, %for.body685.lr.ph ], [ %indvars.iv.next1735, %for.body685 ]
  %div6831696 = phi i32 [ %div6831692, %for.body685.lr.ph ], [ %div683, %for.body685 ]
  %polPosition.sroa.0.61695 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %for.body685.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %957 = trunc i64 %indvars.iv1734 to i32
  %conv686 = uitofp i32 %957 to float
  %mul687 = fmul float %conv686, 3.600000e+02
  %conv690 = uitofp i32 %div6831696 to float
  %div691 = fdiv float %mul687, %conv690
  %add692 = fadd float %div691, 4.500000e+01
  %call693 = tail call float @_Z16DegreesToRadiansf(float %add692)
  %sub694 = fsub float -0.000000e+00, %call693
  %polPosition.sroa.0.0.vec.insert1487 = insertelement <2 x float> %polPosition.sroa.0.61695, float %sub694, i32 0
  %958 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx698 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %958, i64 %indvars.iv1734
  %959 = load i32, i32* %955, align 8, !tbaa !45
  %960 = load i8, i8* %956, align 4, !tbaa !48, !range !51
  %tobool701 = icmp ne i8 %960, 0
  %961 = bitcast %class.CAmbisonicSpeaker* %arrayidx698 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable702 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %961, align 8, !tbaa !24
  %vfn703 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable702, i64 2
  %962 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn703, align 8
  %call704 = tail call zeroext i1 %962(%class.CAmbisonicSpeaker* %arrayidx698, i32 %959, i1 zeroext %tobool701, i32 0)
  %963 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %964 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %963, i64 %indvars.iv1734, i32 0
  %965 = bitcast %class.CAmbisonicSource* %964 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable709 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %965, align 8, !tbaa !24
  %vfn710 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable709, i64 5
  %966 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn710, align 8
  tail call void %966(%class.CAmbisonicSource* %964, <2 x float> %polPosition.sroa.0.0.vec.insert1487, float 1.000000e+00)
  %indvars.iv.next1735 = add nuw nsw i64 %indvars.iv1734, 1
  %967 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !243
  %div683 = lshr i32 %967, 1
  %968 = zext i32 %div683 to i64
  %cmp684 = icmp ult i64 %indvars.iv.next1735, %968
  br i1 %cmp684, label %for.body685, label %for.end713

for.end713:                                       ; preds = %for.body685, %sw.bb658
  %polPosition.sroa.0.6.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %sw.bb658 ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %call714 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %969 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !243
  %div717 = lshr i32 %969, 1
  %cmp7201689 = icmp ult i32 %div717, %969
  br i1 %cmp7201689, label %for.body721.lr.ph, label %sw.epilog

for.body721.lr.ph:                                ; preds = %for.end713
  %polPosition.sroa.0.4.vec.insert1581 = insertelement <2 x float> %polPosition.sroa.0.6.lcssa, float %call714, i32 1
  %970 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %971 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %972 = zext i32 %div717 to i64
  br label %for.body721

for.body721:                                      ; preds = %for.body721, %for.body721.lr.ph
  %indvars.iv1732 = phi i64 [ %972, %for.body721.lr.ph ], [ %indvars.iv.next1733, %for.body721 ]
  %973 = phi i32 [ %969, %for.body721.lr.ph ], [ %984, %for.body721 ]
  %polPosition.sroa.0.71691 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1581, %for.body721.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1575, %for.body721 ]
  %974 = trunc i64 %indvars.iv1732 to i32
  %sub722 = add i32 %974, -4
  %conv723 = uitofp i32 %sub722 to float
  %mul724 = fmul float %conv723, 3.600000e+02
  %div726 = lshr i32 %973, 1
  %conv727 = uitofp i32 %div726 to float
  %div728 = fdiv float %mul724, %conv727
  %add729 = fadd float %div728, 4.500000e+01
  %call730 = tail call float @_Z16DegreesToRadiansf(float %add729)
  %sub731 = fsub float -0.000000e+00, %call730
  %polPosition.sroa.0.0.vec.insert1575 = insertelement <2 x float> %polPosition.sroa.0.71691, float %sub731, i32 0
  %975 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx735 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %975, i64 %indvars.iv1732
  %976 = load i32, i32* %970, align 8, !tbaa !45
  %977 = load i8, i8* %971, align 4, !tbaa !48, !range !51
  %tobool738 = icmp ne i8 %977, 0
  %978 = bitcast %class.CAmbisonicSpeaker* %arrayidx735 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable739 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %978, align 8, !tbaa !24
  %vfn740 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable739, i64 2
  %979 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn740, align 8
  %call741 = tail call zeroext i1 %979(%class.CAmbisonicSpeaker* %arrayidx735, i32 %976, i1 zeroext %tobool738, i32 0)
  %980 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %980, i64 %indvars.iv1732, i32 0
  %982 = bitcast %class.CAmbisonicSource* %981 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable746 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %982, align 8, !tbaa !24
  %vfn747 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable746, i64 5
  %983 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn747, align 8
  tail call void %983(%class.CAmbisonicSource* %981, <2 x float> %polPosition.sroa.0.0.vec.insert1575, float 1.000000e+00)
  %indvars.iv.next1733 = add nuw nsw i64 %indvars.iv1732, 1
  %984 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !243
  %985 = zext i32 %984 to i64
  %cmp720 = icmp ult i64 %indvars.iv.next1733, %985
  br i1 %cmp720, label %for.body721, label %sw.epilog

sw.bb751:                                         ; preds = %if.end
  %m_nSpeakers752 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 20, i32* %m_nSpeakers752, align 4, !tbaa !243
  %call755 = tail call i8* @_Znam(i64 1768) #25
  %986 = bitcast i8* %call755 to i64*
  store i64 20, i64* %986, align 16
  %987 = getelementptr inbounds i8, i8* %call755, i64 8
  %988 = bitcast i8* %987 to i32 (...)***
  %989 = getelementptr inbounds i8, i8* %call755, i64 16
  %990 = bitcast i8* %989 to i32*
  store i32 0, i32* %990, align 8, !tbaa !45
  %991 = getelementptr inbounds i8, i8* %call755, i64 20
  store i8 0, i8* %991, align 4, !tbaa !48
  %992 = getelementptr inbounds i8, i8* %call755, i64 24
  %993 = bitcast i8* %992 to i32*
  store i32 0, i32* %993, align 8, !tbaa !49
  %994 = getelementptr inbounds i8, i8* %call755, i64 28
  store i8 0, i8* %994, align 4, !tbaa !50
  %m_pfCoeff.i.i1655 = getelementptr inbounds i8, i8* %call755, i64 32
  %fDistance.i.i1656 = getelementptr inbounds i8, i8* %call755, i64 88
  %995 = bitcast i8* %fDistance.i.i1656 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %995, align 8, !tbaa !52
  %m_fGain.i.i1657 = getelementptr inbounds i8, i8* %call755, i64 92
  %996 = bitcast i8* %m_fGain.i.i1657 to float*
  store float 1.000000e+00, float* %996, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %988, align 8, !tbaa !24
  %arrayctor.next769 = getelementptr inbounds i8, i8* %call755, i64 96
  %997 = bitcast i8* %arrayctor.next769 to i32 (...)***
  %998 = getelementptr inbounds i8, i8* %call755, i64 104
  %999 = bitcast i8* %998 to i32*
  store i32 0, i32* %999, align 8, !tbaa !45
  %1000 = getelementptr inbounds i8, i8* %call755, i64 108
  store i8 0, i8* %1000, align 4, !tbaa !48
  %1001 = getelementptr inbounds i8, i8* %call755, i64 112
  %1002 = bitcast i8* %1001 to i32*
  store i32 0, i32* %1002, align 8, !tbaa !49
  %1003 = getelementptr inbounds i8, i8* %call755, i64 116
  store i8 0, i8* %1003, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.1 = getelementptr inbounds i8, i8* %call755, i64 120
  %fDistance.i.i1656.1 = getelementptr inbounds i8, i8* %call755, i64 176
  %1004 = bitcast i8* %fDistance.i.i1656.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1004, align 8, !tbaa !52
  %m_fGain.i.i1657.1 = getelementptr inbounds i8, i8* %call755, i64 180
  %1005 = bitcast i8* %m_fGain.i.i1657.1 to float*
  store float 1.000000e+00, float* %1005, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %997, align 8, !tbaa !24
  %arrayctor.next769.1 = getelementptr inbounds i8, i8* %call755, i64 184
  %1006 = bitcast i8* %arrayctor.next769.1 to i32 (...)***
  %1007 = getelementptr inbounds i8, i8* %call755, i64 192
  %1008 = bitcast i8* %1007 to i32*
  store i32 0, i32* %1008, align 8, !tbaa !45
  %1009 = getelementptr inbounds i8, i8* %call755, i64 196
  store i8 0, i8* %1009, align 4, !tbaa !48
  %1010 = getelementptr inbounds i8, i8* %call755, i64 200
  %1011 = bitcast i8* %1010 to i32*
  store i32 0, i32* %1011, align 8, !tbaa !49
  %1012 = getelementptr inbounds i8, i8* %call755, i64 204
  store i8 0, i8* %1012, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.2 = getelementptr inbounds i8, i8* %call755, i64 208
  %fDistance.i.i1656.2 = getelementptr inbounds i8, i8* %call755, i64 264
  %1013 = bitcast i8* %fDistance.i.i1656.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1013, align 8, !tbaa !52
  %m_fGain.i.i1657.2 = getelementptr inbounds i8, i8* %call755, i64 268
  %1014 = bitcast i8* %m_fGain.i.i1657.2 to float*
  store float 1.000000e+00, float* %1014, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1006, align 8, !tbaa !24
  %arrayctor.next769.2 = getelementptr inbounds i8, i8* %call755, i64 272
  %1015 = bitcast i8* %arrayctor.next769.2 to i32 (...)***
  %1016 = getelementptr inbounds i8, i8* %call755, i64 280
  %1017 = bitcast i8* %1016 to i32*
  store i32 0, i32* %1017, align 8, !tbaa !45
  %1018 = getelementptr inbounds i8, i8* %call755, i64 284
  store i8 0, i8* %1018, align 4, !tbaa !48
  %1019 = getelementptr inbounds i8, i8* %call755, i64 288
  %1020 = bitcast i8* %1019 to i32*
  store i32 0, i32* %1020, align 8, !tbaa !49
  %1021 = getelementptr inbounds i8, i8* %call755, i64 292
  store i8 0, i8* %1021, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.3 = getelementptr inbounds i8, i8* %call755, i64 296
  %fDistance.i.i1656.3 = getelementptr inbounds i8, i8* %call755, i64 352
  %1022 = bitcast i8* %fDistance.i.i1656.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1022, align 8, !tbaa !52
  %m_fGain.i.i1657.3 = getelementptr inbounds i8, i8* %call755, i64 356
  %1023 = bitcast i8* %m_fGain.i.i1657.3 to float*
  store float 1.000000e+00, float* %1023, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1015, align 8, !tbaa !24
  %arrayctor.next769.3 = getelementptr inbounds i8, i8* %call755, i64 360
  %1024 = bitcast i8* %arrayctor.next769.3 to i32 (...)***
  %1025 = getelementptr inbounds i8, i8* %call755, i64 368
  %1026 = bitcast i8* %1025 to i32*
  store i32 0, i32* %1026, align 8, !tbaa !45
  %1027 = getelementptr inbounds i8, i8* %call755, i64 372
  store i8 0, i8* %1027, align 4, !tbaa !48
  %1028 = getelementptr inbounds i8, i8* %call755, i64 376
  %1029 = bitcast i8* %1028 to i32*
  store i32 0, i32* %1029, align 8, !tbaa !49
  %1030 = getelementptr inbounds i8, i8* %call755, i64 380
  store i8 0, i8* %1030, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.4 = getelementptr inbounds i8, i8* %call755, i64 384
  %fDistance.i.i1656.4 = getelementptr inbounds i8, i8* %call755, i64 440
  %1031 = bitcast i8* %fDistance.i.i1656.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1031, align 8, !tbaa !52
  %m_fGain.i.i1657.4 = getelementptr inbounds i8, i8* %call755, i64 444
  %1032 = bitcast i8* %m_fGain.i.i1657.4 to float*
  store float 1.000000e+00, float* %1032, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1024, align 8, !tbaa !24
  %arrayctor.next769.4 = getelementptr inbounds i8, i8* %call755, i64 448
  %1033 = bitcast i8* %arrayctor.next769.4 to i32 (...)***
  %1034 = getelementptr inbounds i8, i8* %call755, i64 456
  %1035 = bitcast i8* %1034 to i32*
  store i32 0, i32* %1035, align 8, !tbaa !45
  %1036 = getelementptr inbounds i8, i8* %call755, i64 460
  store i8 0, i8* %1036, align 4, !tbaa !48
  %1037 = getelementptr inbounds i8, i8* %call755, i64 464
  %1038 = bitcast i8* %1037 to i32*
  store i32 0, i32* %1038, align 8, !tbaa !49
  %1039 = getelementptr inbounds i8, i8* %call755, i64 468
  store i8 0, i8* %1039, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.5 = getelementptr inbounds i8, i8* %call755, i64 472
  %fDistance.i.i1656.5 = getelementptr inbounds i8, i8* %call755, i64 528
  %1040 = bitcast i8* %fDistance.i.i1656.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1040, align 8, !tbaa !52
  %m_fGain.i.i1657.5 = getelementptr inbounds i8, i8* %call755, i64 532
  %1041 = bitcast i8* %m_fGain.i.i1657.5 to float*
  store float 1.000000e+00, float* %1041, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1033, align 8, !tbaa !24
  %arrayctor.next769.5 = getelementptr inbounds i8, i8* %call755, i64 536
  %1042 = bitcast i8* %arrayctor.next769.5 to i32 (...)***
  %1043 = getelementptr inbounds i8, i8* %call755, i64 544
  %1044 = bitcast i8* %1043 to i32*
  store i32 0, i32* %1044, align 8, !tbaa !45
  %1045 = getelementptr inbounds i8, i8* %call755, i64 548
  store i8 0, i8* %1045, align 4, !tbaa !48
  %1046 = getelementptr inbounds i8, i8* %call755, i64 552
  %1047 = bitcast i8* %1046 to i32*
  store i32 0, i32* %1047, align 8, !tbaa !49
  %1048 = getelementptr inbounds i8, i8* %call755, i64 556
  store i8 0, i8* %1048, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.6 = getelementptr inbounds i8, i8* %call755, i64 560
  %fDistance.i.i1656.6 = getelementptr inbounds i8, i8* %call755, i64 616
  %1049 = bitcast i8* %fDistance.i.i1656.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1049, align 8, !tbaa !52
  %m_fGain.i.i1657.6 = getelementptr inbounds i8, i8* %call755, i64 620
  %1050 = bitcast i8* %m_fGain.i.i1657.6 to float*
  store float 1.000000e+00, float* %1050, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1042, align 8, !tbaa !24
  %arrayctor.next769.6 = getelementptr inbounds i8, i8* %call755, i64 624
  %1051 = bitcast i8* %arrayctor.next769.6 to i32 (...)***
  %1052 = getelementptr inbounds i8, i8* %call755, i64 632
  %1053 = bitcast i8* %1052 to i32*
  store i32 0, i32* %1053, align 8, !tbaa !45
  %1054 = getelementptr inbounds i8, i8* %call755, i64 636
  store i8 0, i8* %1054, align 4, !tbaa !48
  %1055 = getelementptr inbounds i8, i8* %call755, i64 640
  %1056 = bitcast i8* %1055 to i32*
  store i32 0, i32* %1056, align 8, !tbaa !49
  %1057 = getelementptr inbounds i8, i8* %call755, i64 644
  store i8 0, i8* %1057, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.7 = getelementptr inbounds i8, i8* %call755, i64 648
  %fDistance.i.i1656.7 = getelementptr inbounds i8, i8* %call755, i64 704
  %1058 = bitcast i8* %fDistance.i.i1656.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1058, align 8, !tbaa !52
  %m_fGain.i.i1657.7 = getelementptr inbounds i8, i8* %call755, i64 708
  %1059 = bitcast i8* %m_fGain.i.i1657.7 to float*
  store float 1.000000e+00, float* %1059, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1051, align 8, !tbaa !24
  %arrayctor.next769.7 = getelementptr inbounds i8, i8* %call755, i64 712
  %1060 = bitcast i8* %arrayctor.next769.7 to i32 (...)***
  %1061 = getelementptr inbounds i8, i8* %call755, i64 720
  %1062 = bitcast i8* %1061 to i32*
  store i32 0, i32* %1062, align 8, !tbaa !45
  %1063 = getelementptr inbounds i8, i8* %call755, i64 724
  store i8 0, i8* %1063, align 4, !tbaa !48
  %1064 = getelementptr inbounds i8, i8* %call755, i64 728
  %1065 = bitcast i8* %1064 to i32*
  store i32 0, i32* %1065, align 8, !tbaa !49
  %1066 = getelementptr inbounds i8, i8* %call755, i64 732
  store i8 0, i8* %1066, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.8 = getelementptr inbounds i8, i8* %call755, i64 736
  %fDistance.i.i1656.8 = getelementptr inbounds i8, i8* %call755, i64 792
  %1067 = bitcast i8* %fDistance.i.i1656.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1067, align 8, !tbaa !52
  %m_fGain.i.i1657.8 = getelementptr inbounds i8, i8* %call755, i64 796
  %1068 = bitcast i8* %m_fGain.i.i1657.8 to float*
  store float 1.000000e+00, float* %1068, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1060, align 8, !tbaa !24
  %arrayctor.next769.8 = getelementptr inbounds i8, i8* %call755, i64 800
  %1069 = bitcast i8* %arrayctor.next769.8 to i32 (...)***
  %1070 = getelementptr inbounds i8, i8* %call755, i64 808
  %1071 = bitcast i8* %1070 to i32*
  store i32 0, i32* %1071, align 8, !tbaa !45
  %1072 = getelementptr inbounds i8, i8* %call755, i64 812
  store i8 0, i8* %1072, align 4, !tbaa !48
  %1073 = getelementptr inbounds i8, i8* %call755, i64 816
  %1074 = bitcast i8* %1073 to i32*
  store i32 0, i32* %1074, align 8, !tbaa !49
  %1075 = getelementptr inbounds i8, i8* %call755, i64 820
  store i8 0, i8* %1075, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.9 = getelementptr inbounds i8, i8* %call755, i64 824
  %fDistance.i.i1656.9 = getelementptr inbounds i8, i8* %call755, i64 880
  %1076 = bitcast i8* %fDistance.i.i1656.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1076, align 8, !tbaa !52
  %m_fGain.i.i1657.9 = getelementptr inbounds i8, i8* %call755, i64 884
  %1077 = bitcast i8* %m_fGain.i.i1657.9 to float*
  store float 1.000000e+00, float* %1077, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1069, align 8, !tbaa !24
  %arrayctor.next769.9 = getelementptr inbounds i8, i8* %call755, i64 888
  %1078 = bitcast i8* %arrayctor.next769.9 to i32 (...)***
  %1079 = getelementptr inbounds i8, i8* %call755, i64 896
  %1080 = bitcast i8* %1079 to i32*
  store i32 0, i32* %1080, align 8, !tbaa !45
  %1081 = getelementptr inbounds i8, i8* %call755, i64 900
  store i8 0, i8* %1081, align 4, !tbaa !48
  %1082 = getelementptr inbounds i8, i8* %call755, i64 904
  %1083 = bitcast i8* %1082 to i32*
  store i32 0, i32* %1083, align 8, !tbaa !49
  %1084 = getelementptr inbounds i8, i8* %call755, i64 908
  store i8 0, i8* %1084, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.10 = getelementptr inbounds i8, i8* %call755, i64 912
  %fDistance.i.i1656.10 = getelementptr inbounds i8, i8* %call755, i64 968
  %1085 = bitcast i8* %fDistance.i.i1656.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1085, align 8, !tbaa !52
  %m_fGain.i.i1657.10 = getelementptr inbounds i8, i8* %call755, i64 972
  %1086 = bitcast i8* %m_fGain.i.i1657.10 to float*
  store float 1.000000e+00, float* %1086, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1078, align 8, !tbaa !24
  %arrayctor.next769.10 = getelementptr inbounds i8, i8* %call755, i64 976
  %1087 = bitcast i8* %arrayctor.next769.10 to i32 (...)***
  %1088 = getelementptr inbounds i8, i8* %call755, i64 984
  %1089 = bitcast i8* %1088 to i32*
  store i32 0, i32* %1089, align 8, !tbaa !45
  %1090 = getelementptr inbounds i8, i8* %call755, i64 988
  store i8 0, i8* %1090, align 4, !tbaa !48
  %1091 = getelementptr inbounds i8, i8* %call755, i64 992
  %1092 = bitcast i8* %1091 to i32*
  store i32 0, i32* %1092, align 8, !tbaa !49
  %1093 = getelementptr inbounds i8, i8* %call755, i64 996
  store i8 0, i8* %1093, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.11 = getelementptr inbounds i8, i8* %call755, i64 1000
  %fDistance.i.i1656.11 = getelementptr inbounds i8, i8* %call755, i64 1056
  %1094 = bitcast i8* %fDistance.i.i1656.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1094, align 8, !tbaa !52
  %m_fGain.i.i1657.11 = getelementptr inbounds i8, i8* %call755, i64 1060
  %1095 = bitcast i8* %m_fGain.i.i1657.11 to float*
  store float 1.000000e+00, float* %1095, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1087, align 8, !tbaa !24
  %arrayctor.next769.11 = getelementptr inbounds i8, i8* %call755, i64 1064
  %1096 = bitcast i8* %arrayctor.next769.11 to i32 (...)***
  %1097 = getelementptr inbounds i8, i8* %call755, i64 1072
  %1098 = bitcast i8* %1097 to i32*
  store i32 0, i32* %1098, align 8, !tbaa !45
  %1099 = getelementptr inbounds i8, i8* %call755, i64 1076
  store i8 0, i8* %1099, align 4, !tbaa !48
  %1100 = getelementptr inbounds i8, i8* %call755, i64 1080
  %1101 = bitcast i8* %1100 to i32*
  store i32 0, i32* %1101, align 8, !tbaa !49
  %1102 = getelementptr inbounds i8, i8* %call755, i64 1084
  store i8 0, i8* %1102, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.12 = getelementptr inbounds i8, i8* %call755, i64 1088
  %fDistance.i.i1656.12 = getelementptr inbounds i8, i8* %call755, i64 1144
  %1103 = bitcast i8* %fDistance.i.i1656.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1103, align 8, !tbaa !52
  %m_fGain.i.i1657.12 = getelementptr inbounds i8, i8* %call755, i64 1148
  %1104 = bitcast i8* %m_fGain.i.i1657.12 to float*
  store float 1.000000e+00, float* %1104, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1096, align 8, !tbaa !24
  %arrayctor.next769.12 = getelementptr inbounds i8, i8* %call755, i64 1152
  %1105 = bitcast i8* %arrayctor.next769.12 to i32 (...)***
  %1106 = getelementptr inbounds i8, i8* %call755, i64 1160
  %1107 = bitcast i8* %1106 to i32*
  store i32 0, i32* %1107, align 8, !tbaa !45
  %1108 = getelementptr inbounds i8, i8* %call755, i64 1164
  store i8 0, i8* %1108, align 4, !tbaa !48
  %1109 = getelementptr inbounds i8, i8* %call755, i64 1168
  %1110 = bitcast i8* %1109 to i32*
  store i32 0, i32* %1110, align 8, !tbaa !49
  %1111 = getelementptr inbounds i8, i8* %call755, i64 1172
  store i8 0, i8* %1111, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.13 = getelementptr inbounds i8, i8* %call755, i64 1176
  %fDistance.i.i1656.13 = getelementptr inbounds i8, i8* %call755, i64 1232
  %1112 = bitcast i8* %fDistance.i.i1656.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1112, align 8, !tbaa !52
  %m_fGain.i.i1657.13 = getelementptr inbounds i8, i8* %call755, i64 1236
  %1113 = bitcast i8* %m_fGain.i.i1657.13 to float*
  store float 1.000000e+00, float* %1113, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1105, align 8, !tbaa !24
  %arrayctor.next769.13 = getelementptr inbounds i8, i8* %call755, i64 1240
  %1114 = bitcast i8* %arrayctor.next769.13 to i32 (...)***
  %1115 = getelementptr inbounds i8, i8* %call755, i64 1248
  %1116 = bitcast i8* %1115 to i32*
  store i32 0, i32* %1116, align 8, !tbaa !45
  %1117 = getelementptr inbounds i8, i8* %call755, i64 1252
  store i8 0, i8* %1117, align 4, !tbaa !48
  %1118 = getelementptr inbounds i8, i8* %call755, i64 1256
  %1119 = bitcast i8* %1118 to i32*
  store i32 0, i32* %1119, align 8, !tbaa !49
  %1120 = getelementptr inbounds i8, i8* %call755, i64 1260
  store i8 0, i8* %1120, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.14 = getelementptr inbounds i8, i8* %call755, i64 1264
  %fDistance.i.i1656.14 = getelementptr inbounds i8, i8* %call755, i64 1320
  %1121 = bitcast i8* %fDistance.i.i1656.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1121, align 8, !tbaa !52
  %m_fGain.i.i1657.14 = getelementptr inbounds i8, i8* %call755, i64 1324
  %1122 = bitcast i8* %m_fGain.i.i1657.14 to float*
  store float 1.000000e+00, float* %1122, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1114, align 8, !tbaa !24
  %arrayctor.next769.14 = getelementptr inbounds i8, i8* %call755, i64 1328
  %1123 = bitcast i8* %arrayctor.next769.14 to i32 (...)***
  %1124 = getelementptr inbounds i8, i8* %call755, i64 1336
  %1125 = bitcast i8* %1124 to i32*
  store i32 0, i32* %1125, align 8, !tbaa !45
  %1126 = getelementptr inbounds i8, i8* %call755, i64 1340
  store i8 0, i8* %1126, align 4, !tbaa !48
  %1127 = getelementptr inbounds i8, i8* %call755, i64 1344
  %1128 = bitcast i8* %1127 to i32*
  store i32 0, i32* %1128, align 8, !tbaa !49
  %1129 = getelementptr inbounds i8, i8* %call755, i64 1348
  store i8 0, i8* %1129, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.15 = getelementptr inbounds i8, i8* %call755, i64 1352
  %fDistance.i.i1656.15 = getelementptr inbounds i8, i8* %call755, i64 1408
  %1130 = bitcast i8* %fDistance.i.i1656.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1130, align 8, !tbaa !52
  %m_fGain.i.i1657.15 = getelementptr inbounds i8, i8* %call755, i64 1412
  %1131 = bitcast i8* %m_fGain.i.i1657.15 to float*
  store float 1.000000e+00, float* %1131, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1123, align 8, !tbaa !24
  %arrayctor.next769.15 = getelementptr inbounds i8, i8* %call755, i64 1416
  %1132 = bitcast i8* %arrayctor.next769.15 to i32 (...)***
  %1133 = getelementptr inbounds i8, i8* %call755, i64 1424
  %1134 = bitcast i8* %1133 to i32*
  store i32 0, i32* %1134, align 8, !tbaa !45
  %1135 = getelementptr inbounds i8, i8* %call755, i64 1428
  store i8 0, i8* %1135, align 4, !tbaa !48
  %1136 = getelementptr inbounds i8, i8* %call755, i64 1432
  %1137 = bitcast i8* %1136 to i32*
  store i32 0, i32* %1137, align 8, !tbaa !49
  %1138 = getelementptr inbounds i8, i8* %call755, i64 1436
  store i8 0, i8* %1138, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.16 = getelementptr inbounds i8, i8* %call755, i64 1440
  %fDistance.i.i1656.16 = getelementptr inbounds i8, i8* %call755, i64 1496
  %1139 = bitcast i8* %fDistance.i.i1656.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1139, align 8, !tbaa !52
  %m_fGain.i.i1657.16 = getelementptr inbounds i8, i8* %call755, i64 1500
  %1140 = bitcast i8* %m_fGain.i.i1657.16 to float*
  store float 1.000000e+00, float* %1140, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1132, align 8, !tbaa !24
  %arrayctor.next769.16 = getelementptr inbounds i8, i8* %call755, i64 1504
  %1141 = bitcast i8* %arrayctor.next769.16 to i32 (...)***
  %1142 = getelementptr inbounds i8, i8* %call755, i64 1512
  %1143 = bitcast i8* %1142 to i32*
  store i32 0, i32* %1143, align 8, !tbaa !45
  %1144 = getelementptr inbounds i8, i8* %call755, i64 1516
  store i8 0, i8* %1144, align 4, !tbaa !48
  %1145 = getelementptr inbounds i8, i8* %call755, i64 1520
  %1146 = bitcast i8* %1145 to i32*
  store i32 0, i32* %1146, align 8, !tbaa !49
  %1147 = getelementptr inbounds i8, i8* %call755, i64 1524
  store i8 0, i8* %1147, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.17 = getelementptr inbounds i8, i8* %call755, i64 1528
  %fDistance.i.i1656.17 = getelementptr inbounds i8, i8* %call755, i64 1584
  %1148 = bitcast i8* %fDistance.i.i1656.17 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.17, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1148, align 8, !tbaa !52
  %m_fGain.i.i1657.17 = getelementptr inbounds i8, i8* %call755, i64 1588
  %1149 = bitcast i8* %m_fGain.i.i1657.17 to float*
  store float 1.000000e+00, float* %1149, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1141, align 8, !tbaa !24
  %arrayctor.next769.17 = getelementptr inbounds i8, i8* %call755, i64 1592
  %1150 = bitcast i8* %arrayctor.next769.17 to i32 (...)***
  %1151 = getelementptr inbounds i8, i8* %call755, i64 1600
  %1152 = bitcast i8* %1151 to i32*
  store i32 0, i32* %1152, align 8, !tbaa !45
  %1153 = getelementptr inbounds i8, i8* %call755, i64 1604
  store i8 0, i8* %1153, align 4, !tbaa !48
  %1154 = getelementptr inbounds i8, i8* %call755, i64 1608
  %1155 = bitcast i8* %1154 to i32*
  store i32 0, i32* %1155, align 8, !tbaa !49
  %1156 = getelementptr inbounds i8, i8* %call755, i64 1612
  store i8 0, i8* %1156, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.18 = getelementptr inbounds i8, i8* %call755, i64 1616
  %fDistance.i.i1656.18 = getelementptr inbounds i8, i8* %call755, i64 1672
  %1157 = bitcast i8* %fDistance.i.i1656.18 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.18, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1157, align 8, !tbaa !52
  %m_fGain.i.i1657.18 = getelementptr inbounds i8, i8* %call755, i64 1676
  %1158 = bitcast i8* %m_fGain.i.i1657.18 to float*
  store float 1.000000e+00, float* %1158, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1150, align 8, !tbaa !24
  %arrayctor.next769.18 = getelementptr inbounds i8, i8* %call755, i64 1680
  %1159 = bitcast i8* %arrayctor.next769.18 to i32 (...)***
  %1160 = getelementptr inbounds i8, i8* %call755, i64 1688
  %1161 = bitcast i8* %1160 to i32*
  store i32 0, i32* %1161, align 8, !tbaa !45
  %1162 = getelementptr inbounds i8, i8* %call755, i64 1692
  store i8 0, i8* %1162, align 4, !tbaa !48
  %1163 = getelementptr inbounds i8, i8* %call755, i64 1696
  %1164 = bitcast i8* %1163 to i32*
  store i32 0, i32* %1164, align 8, !tbaa !49
  %1165 = getelementptr inbounds i8, i8* %call755, i64 1700
  store i8 0, i8* %1165, align 4, !tbaa !50
  %m_pfCoeff.i.i1655.19 = getelementptr inbounds i8, i8* %call755, i64 1704
  %fDistance.i.i1656.19 = getelementptr inbounds i8, i8* %call755, i64 1760
  %1166 = bitcast i8* %fDistance.i.i1656.19 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.19, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1166, align 8, !tbaa !52
  %m_fGain.i.i1657.19 = getelementptr inbounds i8, i8* %call755, i64 1764
  %1167 = bitcast i8* %m_fGain.i.i1657.19 to float*
  store float 1.000000e+00, float* %1167, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1159, align 8, !tbaa !24
  %1168 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %987, i8** %1168, align 8, !tbaa !240
  %call773 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.4.vec.insert1583 = insertelement <2 x float> undef, float %call773, i32 1
  %call775 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1529 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1583, float %call775, i32 0
  %1169 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1170 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1171 = load i32, i32* %1170, align 8, !tbaa !45
  %1172 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1173 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool781 = icmp ne i8 %1173, 0
  %1174 = bitcast %class.CAmbisonicSpeaker* %1169 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable782 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1174, align 8, !tbaa !24
  %vfn783 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable782, i64 2
  %1175 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn783, align 8
  %call784 = tail call zeroext i1 %1175(%class.CAmbisonicSpeaker* %1169, i32 %1171, i1 zeroext %tobool781, i32 0)
  %1176 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1177 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1176, align 8, !tbaa !240
  %1178 = bitcast %class.CAmbisonicSource* %1177 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable788 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1178, align 8, !tbaa !24
  %vfn789 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable788, i64 5
  %1179 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn789, align 8
  tail call void %1179(%class.CAmbisonicSource* %1177, <2 x float> %polPosition.sroa.0.0.vec.insert1529, float 1.000000e+00)
  %call790 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1573 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1529, float %call790, i32 0
  %1180 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx793 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1180, i64 1
  %1181 = load i32, i32* %1170, align 8, !tbaa !45
  %1182 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool796 = icmp ne i8 %1182, 0
  %1183 = bitcast %class.CAmbisonicSpeaker* %arrayidx793 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable797 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1183, align 8, !tbaa !24
  %vfn798 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable797, i64 2
  %1184 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn798, align 8
  %call799 = tail call zeroext i1 %1184(%class.CAmbisonicSpeaker* nonnull %arrayidx793, i32 %1181, i1 zeroext %tobool796, i32 0)
  %1185 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1186 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1185, i64 1, i32 0
  %1187 = bitcast %class.CAmbisonicSource* %1186 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable803 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1187, align 8, !tbaa !24
  %vfn804 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable803, i64 5
  %1188 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn804, align 8
  tail call void %1188(%class.CAmbisonicSource* nonnull %1186, <2 x float> %polPosition.sroa.0.0.vec.insert1573, float 1.000000e+00)
  %call805 = tail call float @_Z16DegreesToRadiansf(float 0xC041A66660000000)
  %polPosition.sroa.0.4.vec.insert1585 = insertelement <2 x float> undef, float %call805, i32 1
  %call807 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1571 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1585, float %call807, i32 0
  %1189 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx810 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1189, i64 2
  %1190 = load i32, i32* %1170, align 8, !tbaa !45
  %1191 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool813 = icmp ne i8 %1191, 0
  %1192 = bitcast %class.CAmbisonicSpeaker* %arrayidx810 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable814 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1192, align 8, !tbaa !24
  %vfn815 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable814, i64 2
  %1193 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn815, align 8
  %call816 = tail call zeroext i1 %1193(%class.CAmbisonicSpeaker* nonnull %arrayidx810, i32 %1190, i1 zeroext %tobool813, i32 0)
  %1194 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1195 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1194, i64 2, i32 0
  %1196 = bitcast %class.CAmbisonicSource* %1195 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable820 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1196, align 8, !tbaa !24
  %vfn821 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable820, i64 5
  %1197 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn821, align 8
  tail call void %1197(%class.CAmbisonicSource* nonnull %1195, <2 x float> %polPosition.sroa.0.0.vec.insert1571, float 1.000000e+00)
  %call822 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1569 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1571, float %call822, i32 0
  %1198 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx825 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1198, i64 3
  %1199 = load i32, i32* %1170, align 8, !tbaa !45
  %1200 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool828 = icmp ne i8 %1200, 0
  %1201 = bitcast %class.CAmbisonicSpeaker* %arrayidx825 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable829 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1201, align 8, !tbaa !24
  %vfn830 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable829, i64 2
  %1202 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn830, align 8
  %call831 = tail call zeroext i1 %1202(%class.CAmbisonicSpeaker* nonnull %arrayidx825, i32 %1199, i1 zeroext %tobool828, i32 0)
  %1203 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1204 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1203, i64 3, i32 0
  %1205 = bitcast %class.CAmbisonicSource* %1204 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable835 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1205, align 8, !tbaa !24
  %vfn836 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable835, i64 5
  %1206 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn836, align 8
  tail call void %1206(%class.CAmbisonicSource* nonnull %1204, <2 x float> %polPosition.sroa.0.0.vec.insert1569, float 1.000000e+00)
  %call837 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1567 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1569, float %call837, i32 0
  %1207 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx840 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1207, i64 4
  %1208 = load i32, i32* %1170, align 8, !tbaa !45
  %1209 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool843 = icmp ne i8 %1209, 0
  %1210 = bitcast %class.CAmbisonicSpeaker* %arrayidx840 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable844 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1210, align 8, !tbaa !24
  %vfn845 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable844, i64 2
  %1211 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn845, align 8
  %call846 = tail call zeroext i1 %1211(%class.CAmbisonicSpeaker* nonnull %arrayidx840, i32 %1208, i1 zeroext %tobool843, i32 0)
  %1212 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1212, i64 4, i32 0
  %1214 = bitcast %class.CAmbisonicSource* %1213 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable850 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1214, align 8, !tbaa !24
  %vfn851 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable850, i64 5
  %1215 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn851, align 8
  tail call void %1215(%class.CAmbisonicSource* nonnull %1213, <2 x float> %polPosition.sroa.0.0.vec.insert1567, float 1.000000e+00)
  %call852 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1565 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1567, float %call852, i32 0
  %1216 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx855 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1216, i64 5
  %1217 = load i32, i32* %1170, align 8, !tbaa !45
  %1218 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool858 = icmp ne i8 %1218, 0
  %1219 = bitcast %class.CAmbisonicSpeaker* %arrayidx855 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable859 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1219, align 8, !tbaa !24
  %vfn860 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable859, i64 2
  %1220 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn860, align 8
  %call861 = tail call zeroext i1 %1220(%class.CAmbisonicSpeaker* nonnull %arrayidx855, i32 %1217, i1 zeroext %tobool858, i32 0)
  %1221 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1222 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1221, i64 5, i32 0
  %1223 = bitcast %class.CAmbisonicSource* %1222 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable865 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1223, align 8, !tbaa !24
  %vfn866 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable865, i64 5
  %1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn866, align 8
  tail call void %1224(%class.CAmbisonicSource* nonnull %1222, <2 x float> %polPosition.sroa.0.0.vec.insert1565, float 1.000000e+00)
  %call867 = tail call float @_Z16DegreesToRadiansf(float 0xC034E66660000000)
  %polPosition.sroa.0.4.vec.insert1587 = insertelement <2 x float> undef, float %call867, i32 1
  %call869 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1561 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1587, float %call869, i32 0
  %1225 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx872 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1225, i64 6
  %1226 = load i32, i32* %1170, align 8, !tbaa !45
  %1227 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool875 = icmp ne i8 %1227, 0
  %1228 = bitcast %class.CAmbisonicSpeaker* %arrayidx872 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable876 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1228, align 8, !tbaa !24
  %vfn877 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable876, i64 2
  %1229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn877, align 8
  %call878 = tail call zeroext i1 %1229(%class.CAmbisonicSpeaker* nonnull %arrayidx872, i32 %1226, i1 zeroext %tobool875, i32 0)
  %1230 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1231 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1230, i64 6, i32 0
  %1232 = bitcast %class.CAmbisonicSource* %1231 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable882 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1232, align 8, !tbaa !24
  %vfn883 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable882, i64 5
  %1233 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn883, align 8
  tail call void %1233(%class.CAmbisonicSource* nonnull %1231, <2 x float> %polPosition.sroa.0.0.vec.insert1561, float 1.000000e+00)
  %call884 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1555 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1561, float %call884, i32 0
  %1234 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx887 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1234, i64 7
  %1235 = load i32, i32* %1170, align 8, !tbaa !45
  %1236 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool890 = icmp ne i8 %1236, 0
  %1237 = bitcast %class.CAmbisonicSpeaker* %arrayidx887 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable891 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1237, align 8, !tbaa !24
  %vfn892 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable891, i64 2
  %1238 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn892, align 8
  %call893 = tail call zeroext i1 %1238(%class.CAmbisonicSpeaker* nonnull %arrayidx887, i32 %1235, i1 zeroext %tobool890, i32 0)
  %1239 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1239, i64 7, i32 0
  %1241 = bitcast %class.CAmbisonicSource* %1240 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable897 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1241, align 8, !tbaa !24
  %vfn898 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable897, i64 5
  %1242 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn898, align 8
  tail call void %1242(%class.CAmbisonicSource* nonnull %1240, <2 x float> %polPosition.sroa.0.0.vec.insert1555, float 1.000000e+00)
  %call899 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.4.vec.insert1589 = insertelement <2 x float> undef, float %call899, i32 1
  %call901 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.0.vec.insert1547 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1589, float %call901, i32 0
  %1243 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx904 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1243, i64 8
  %1244 = load i32, i32* %1170, align 8, !tbaa !45
  %1245 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool907 = icmp ne i8 %1245, 0
  %1246 = bitcast %class.CAmbisonicSpeaker* %arrayidx904 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable908 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1246, align 8, !tbaa !24
  %vfn909 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable908, i64 2
  %1247 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn909, align 8
  %call910 = tail call zeroext i1 %1247(%class.CAmbisonicSpeaker* nonnull %arrayidx904, i32 %1244, i1 zeroext %tobool907, i32 0)
  %1248 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1249 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1248, i64 8, i32 0
  %1250 = bitcast %class.CAmbisonicSource* %1249 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable914 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1250, align 8, !tbaa !24
  %vfn915 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable914, i64 5
  %1251 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn915, align 8
  tail call void %1251(%class.CAmbisonicSource* nonnull %1249, <2 x float> %polPosition.sroa.0.0.vec.insert1547, float 1.000000e+00)
  %call916 = tail call float @_Z16DegreesToRadiansf(float 0x405BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1537 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1547, float %call916, i32 0
  %1252 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx919 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1252, i64 9
  %1253 = load i32, i32* %1170, align 8, !tbaa !45
  %1254 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool922 = icmp ne i8 %1254, 0
  %1255 = bitcast %class.CAmbisonicSpeaker* %arrayidx919 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable923 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1255, align 8, !tbaa !24
  %vfn924 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable923, i64 2
  %1256 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn924, align 8
  %call925 = tail call zeroext i1 %1256(%class.CAmbisonicSpeaker* nonnull %arrayidx919, i32 %1253, i1 zeroext %tobool922, i32 0)
  %1257 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1258 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1257, i64 9, i32 0
  %1259 = bitcast %class.CAmbisonicSource* %1258 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable929 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1259, align 8, !tbaa !24
  %vfn930 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable929, i64 5
  %1260 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn930, align 8
  tail call void %1260(%class.CAmbisonicSource* nonnull %1258, <2 x float> %polPosition.sroa.0.0.vec.insert1537, float 1.000000e+00)
  %call931 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.0.vec.insert1503 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1537, float %call931, i32 0
  %1261 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx934 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1261, i64 10
  %1262 = load i32, i32* %1170, align 8, !tbaa !45
  %1263 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool937 = icmp ne i8 %1263, 0
  %1264 = bitcast %class.CAmbisonicSpeaker* %arrayidx934 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable938 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1264, align 8, !tbaa !24
  %vfn939 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable938, i64 2
  %1265 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn939, align 8
  %call940 = tail call zeroext i1 %1265(%class.CAmbisonicSpeaker* nonnull %arrayidx934, i32 %1262, i1 zeroext %tobool937, i32 0)
  %1266 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1267 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1266, i64 10, i32 0
  %1268 = bitcast %class.CAmbisonicSource* %1267 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable944 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1268, align 8, !tbaa !24
  %vfn945 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable944, i64 5
  %1269 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn945, align 8
  tail call void %1269(%class.CAmbisonicSource* nonnull %1267, <2 x float> %polPosition.sroa.0.0.vec.insert1503, float 1.000000e+00)
  %call946 = tail call float @_Z16DegreesToRadiansf(float 0xC05BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1531 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1503, float %call946, i32 0
  %1270 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx949 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1270, i64 11
  %1271 = load i32, i32* %1170, align 8, !tbaa !45
  %1272 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool952 = icmp ne i8 %1272, 0
  %1273 = bitcast %class.CAmbisonicSpeaker* %arrayidx949 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable953 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1273, align 8, !tbaa !24
  %vfn954 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable953, i64 2
  %1274 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn954, align 8
  %call955 = tail call zeroext i1 %1274(%class.CAmbisonicSpeaker* nonnull %arrayidx949, i32 %1271, i1 zeroext %tobool952, i32 0)
  %1275 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1276 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1275, i64 11, i32 0
  %1277 = bitcast %class.CAmbisonicSource* %1276 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable959 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1277, align 8, !tbaa !24
  %vfn960 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable959, i64 5
  %1278 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn960, align 8
  tail call void %1278(%class.CAmbisonicSource* nonnull %1276, <2 x float> %polPosition.sroa.0.0.vec.insert1531, float 1.000000e+00)
  %call961 = tail call float @_Z16DegreesToRadiansf(float 0x4034E66660000000)
  %polPosition.sroa.0.4.vec.insert1591 = insertelement <2 x float> undef, float %call961, i32 1
  %call963 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1533 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1591, float %call963, i32 0
  %1279 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx966 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1279, i64 12
  %1280 = load i32, i32* %1170, align 8, !tbaa !45
  %1281 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool969 = icmp ne i8 %1281, 0
  %1282 = bitcast %class.CAmbisonicSpeaker* %arrayidx966 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable970 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1282, align 8, !tbaa !24
  %vfn971 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable970, i64 2
  %1283 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn971, align 8
  %call972 = tail call zeroext i1 %1283(%class.CAmbisonicSpeaker* nonnull %arrayidx966, i32 %1280, i1 zeroext %tobool969, i32 0)
  %1284 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1285 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1284, i64 12, i32 0
  %1286 = bitcast %class.CAmbisonicSource* %1285 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable976 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1286, align 8, !tbaa !24
  %vfn977 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable976, i64 5
  %1287 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn977, align 8
  tail call void %1287(%class.CAmbisonicSource* nonnull %1285, <2 x float> %polPosition.sroa.0.0.vec.insert1533, float 1.000000e+00)
  %call978 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1535 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1533, float %call978, i32 0
  %1288 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1288, i64 13
  %1289 = load i32, i32* %1170, align 8, !tbaa !45
  %1290 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool984 = icmp ne i8 %1290, 0
  %1291 = bitcast %class.CAmbisonicSpeaker* %arrayidx981 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable985 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1291, align 8, !tbaa !24
  %vfn986 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable985, i64 2
  %1292 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn986, align 8
  %call987 = tail call zeroext i1 %1292(%class.CAmbisonicSpeaker* nonnull %arrayidx981, i32 %1289, i1 zeroext %tobool984, i32 0)
  %1293 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1294 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1293, i64 13, i32 0
  %1295 = bitcast %class.CAmbisonicSource* %1294 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable991 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1295, align 8, !tbaa !24
  %vfn992 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable991, i64 5
  %1296 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn992, align 8
  tail call void %1296(%class.CAmbisonicSource* nonnull %1294, <2 x float> %polPosition.sroa.0.0.vec.insert1535, float 1.000000e+00)
  %call993 = tail call float @_Z16DegreesToRadiansf(float 0x4041A66660000000)
  %polPosition.sroa.0.4.vec.insert1593 = insertelement <2 x float> undef, float %call993, i32 1
  %call995 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1539 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1593, float %call995, i32 0
  %1297 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx998 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1297, i64 14
  %1298 = load i32, i32* %1170, align 8, !tbaa !45
  %1299 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1001 = icmp ne i8 %1299, 0
  %1300 = bitcast %class.CAmbisonicSpeaker* %arrayidx998 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1002 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1300, align 8, !tbaa !24
  %vfn1003 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1002, i64 2
  %1301 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1003, align 8
  %call1004 = tail call zeroext i1 %1301(%class.CAmbisonicSpeaker* nonnull %arrayidx998, i32 %1298, i1 zeroext %tobool1001, i32 0)
  %1302 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1303 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1302, i64 14, i32 0
  %1304 = bitcast %class.CAmbisonicSource* %1303 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1008 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1304, align 8, !tbaa !24
  %vfn1009 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1008, i64 5
  %1305 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1009, align 8
  tail call void %1305(%class.CAmbisonicSource* nonnull %1303, <2 x float> %polPosition.sroa.0.0.vec.insert1539, float 1.000000e+00)
  %call1010 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1541 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1539, float %call1010, i32 0
  %1306 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1013 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1306, i64 15
  %1307 = load i32, i32* %1170, align 8, !tbaa !45
  %1308 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1016 = icmp ne i8 %1308, 0
  %1309 = bitcast %class.CAmbisonicSpeaker* %arrayidx1013 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1017 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1309, align 8, !tbaa !24
  %vfn1018 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1017, i64 2
  %1310 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1018, align 8
  %call1019 = tail call zeroext i1 %1310(%class.CAmbisonicSpeaker* nonnull %arrayidx1013, i32 %1307, i1 zeroext %tobool1016, i32 0)
  %1311 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1312 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1311, i64 15, i32 0
  %1313 = bitcast %class.CAmbisonicSource* %1312 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1023 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1313, align 8, !tbaa !24
  %vfn1024 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1023, i64 5
  %1314 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1024, align 8
  tail call void %1314(%class.CAmbisonicSource* nonnull %1312, <2 x float> %polPosition.sroa.0.0.vec.insert1541, float 1.000000e+00)
  %call1025 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1543 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1541, float %call1025, i32 0
  %1315 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1028 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1315, i64 16
  %1316 = load i32, i32* %1170, align 8, !tbaa !45
  %1317 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1031 = icmp ne i8 %1317, 0
  %1318 = bitcast %class.CAmbisonicSpeaker* %arrayidx1028 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1032 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1318, align 8, !tbaa !24
  %vfn1033 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1032, i64 2
  %1319 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1033, align 8
  %call1034 = tail call zeroext i1 %1319(%class.CAmbisonicSpeaker* nonnull %arrayidx1028, i32 %1316, i1 zeroext %tobool1031, i32 0)
  %1320 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1321 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1320, i64 16, i32 0
  %1322 = bitcast %class.CAmbisonicSource* %1321 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1038 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1322, align 8, !tbaa !24
  %vfn1039 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1038, i64 5
  %1323 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1039, align 8
  tail call void %1323(%class.CAmbisonicSource* nonnull %1321, <2 x float> %polPosition.sroa.0.0.vec.insert1543, float 1.000000e+00)
  %call1040 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1545 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1543, float %call1040, i32 0
  %1324 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1043 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1324, i64 17
  %1325 = load i32, i32* %1170, align 8, !tbaa !45
  %1326 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1046 = icmp ne i8 %1326, 0
  %1327 = bitcast %class.CAmbisonicSpeaker* %arrayidx1043 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1047 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1327, align 8, !tbaa !24
  %vfn1048 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1047, i64 2
  %1328 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1048, align 8
  %call1049 = tail call zeroext i1 %1328(%class.CAmbisonicSpeaker* nonnull %arrayidx1043, i32 %1325, i1 zeroext %tobool1046, i32 0)
  %1329 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1330 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1329, i64 17, i32 0
  %1331 = bitcast %class.CAmbisonicSource* %1330 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1053 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1331, align 8, !tbaa !24
  %vfn1054 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1053, i64 5
  %1332 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1054, align 8
  tail call void %1332(%class.CAmbisonicSource* nonnull %1330, <2 x float> %polPosition.sroa.0.0.vec.insert1545, float 1.000000e+00)
  %call1055 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.4.vec.insert1595 = insertelement <2 x float> undef, float %call1055, i32 1
  %call1057 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1549 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1595, float %call1057, i32 0
  %1333 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1060 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1333, i64 18
  %1334 = load i32, i32* %1170, align 8, !tbaa !45
  %1335 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1063 = icmp ne i8 %1335, 0
  %1336 = bitcast %class.CAmbisonicSpeaker* %arrayidx1060 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1064 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1336, align 8, !tbaa !24
  %vfn1065 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1064, i64 2
  %1337 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1065, align 8
  %call1066 = tail call zeroext i1 %1337(%class.CAmbisonicSpeaker* nonnull %arrayidx1060, i32 %1334, i1 zeroext %tobool1063, i32 0)
  %1338 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1339 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1338, i64 18, i32 0
  %1340 = bitcast %class.CAmbisonicSource* %1339 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1070 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1340, align 8, !tbaa !24
  %vfn1071 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1070, i64 5
  %1341 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1071, align 8
  tail call void %1341(%class.CAmbisonicSource* nonnull %1339, <2 x float> %polPosition.sroa.0.0.vec.insert1549, float 1.000000e+00)
  %call1072 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1551 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1549, float %call1072, i32 0
  %1342 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1075 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1342, i64 19
  %1343 = load i32, i32* %1170, align 8, !tbaa !45
  %1344 = load i8, i8* %1172, align 4, !tbaa !48, !range !51
  %tobool1078 = icmp ne i8 %1344, 0
  %1345 = bitcast %class.CAmbisonicSpeaker* %arrayidx1075 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1079 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1345, align 8, !tbaa !24
  %vfn1080 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1079, i64 2
  %1346 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1080, align 8
  %call1081 = tail call zeroext i1 %1346(%class.CAmbisonicSpeaker* nonnull %arrayidx1075, i32 %1343, i1 zeroext %tobool1078, i32 0)
  %1347 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1348 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1347, i64 19, i32 0
  %1349 = bitcast %class.CAmbisonicSource* %1348 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1085 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1349, align 8, !tbaa !24
  %vfn1086 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1085, i64 5
  %1350 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1086, align 8
  tail call void %1350(%class.CAmbisonicSource* nonnull %1348, <2 x float> %polPosition.sroa.0.0.vec.insert1551, float 1.000000e+00)
  br label %sw.epilog

sw.bb1087:                                        ; preds = %if.end
  %m_nSpeakers1088 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers1088, align 4, !tbaa !243
  %call1091 = tail call i8* @_Znam(i64 712) #25
  %1351 = bitcast i8* %call1091 to i64*
  store i64 8, i64* %1351, align 16
  %1352 = getelementptr inbounds i8, i8* %call1091, i64 8
  %1353 = bitcast i8* %1352 to i32 (...)***
  %1354 = getelementptr inbounds i8, i8* %call1091, i64 16
  %1355 = bitcast i8* %1354 to i32*
  store i32 0, i32* %1355, align 8, !tbaa !45
  %1356 = getelementptr inbounds i8, i8* %call1091, i64 20
  store i8 0, i8* %1356, align 4, !tbaa !48
  %1357 = getelementptr inbounds i8, i8* %call1091, i64 24
  %1358 = bitcast i8* %1357 to i32*
  store i32 0, i32* %1358, align 8, !tbaa !49
  %1359 = getelementptr inbounds i8, i8* %call1091, i64 28
  store i8 0, i8* %1359, align 4, !tbaa !50
  %m_pfCoeff.i.i1646 = getelementptr inbounds i8, i8* %call1091, i64 32
  %fDistance.i.i1647 = getelementptr inbounds i8, i8* %call1091, i64 88
  %1360 = bitcast i8* %fDistance.i.i1647 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1360, align 8, !tbaa !52
  %m_fGain.i.i1648 = getelementptr inbounds i8, i8* %call1091, i64 92
  %1361 = bitcast i8* %m_fGain.i.i1648 to float*
  store float 1.000000e+00, float* %1361, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1353, align 8, !tbaa !24
  %arrayctor.next1105 = getelementptr inbounds i8, i8* %call1091, i64 96
  %1362 = bitcast i8* %arrayctor.next1105 to i32 (...)***
  %1363 = getelementptr inbounds i8, i8* %call1091, i64 104
  %1364 = bitcast i8* %1363 to i32*
  store i32 0, i32* %1364, align 8, !tbaa !45
  %1365 = getelementptr inbounds i8, i8* %call1091, i64 108
  store i8 0, i8* %1365, align 4, !tbaa !48
  %1366 = getelementptr inbounds i8, i8* %call1091, i64 112
  %1367 = bitcast i8* %1366 to i32*
  store i32 0, i32* %1367, align 8, !tbaa !49
  %1368 = getelementptr inbounds i8, i8* %call1091, i64 116
  store i8 0, i8* %1368, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.1 = getelementptr inbounds i8, i8* %call1091, i64 120
  %fDistance.i.i1647.1 = getelementptr inbounds i8, i8* %call1091, i64 176
  %1369 = bitcast i8* %fDistance.i.i1647.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1369, align 8, !tbaa !52
  %m_fGain.i.i1648.1 = getelementptr inbounds i8, i8* %call1091, i64 180
  %1370 = bitcast i8* %m_fGain.i.i1648.1 to float*
  store float 1.000000e+00, float* %1370, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1362, align 8, !tbaa !24
  %arrayctor.next1105.1 = getelementptr inbounds i8, i8* %call1091, i64 184
  %1371 = bitcast i8* %arrayctor.next1105.1 to i32 (...)***
  %1372 = getelementptr inbounds i8, i8* %call1091, i64 192
  %1373 = bitcast i8* %1372 to i32*
  store i32 0, i32* %1373, align 8, !tbaa !45
  %1374 = getelementptr inbounds i8, i8* %call1091, i64 196
  store i8 0, i8* %1374, align 4, !tbaa !48
  %1375 = getelementptr inbounds i8, i8* %call1091, i64 200
  %1376 = bitcast i8* %1375 to i32*
  store i32 0, i32* %1376, align 8, !tbaa !49
  %1377 = getelementptr inbounds i8, i8* %call1091, i64 204
  store i8 0, i8* %1377, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.2 = getelementptr inbounds i8, i8* %call1091, i64 208
  %fDistance.i.i1647.2 = getelementptr inbounds i8, i8* %call1091, i64 264
  %1378 = bitcast i8* %fDistance.i.i1647.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1378, align 8, !tbaa !52
  %m_fGain.i.i1648.2 = getelementptr inbounds i8, i8* %call1091, i64 268
  %1379 = bitcast i8* %m_fGain.i.i1648.2 to float*
  store float 1.000000e+00, float* %1379, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1371, align 8, !tbaa !24
  %arrayctor.next1105.2 = getelementptr inbounds i8, i8* %call1091, i64 272
  %1380 = bitcast i8* %arrayctor.next1105.2 to i32 (...)***
  %1381 = getelementptr inbounds i8, i8* %call1091, i64 280
  %1382 = bitcast i8* %1381 to i32*
  store i32 0, i32* %1382, align 8, !tbaa !45
  %1383 = getelementptr inbounds i8, i8* %call1091, i64 284
  store i8 0, i8* %1383, align 4, !tbaa !48
  %1384 = getelementptr inbounds i8, i8* %call1091, i64 288
  %1385 = bitcast i8* %1384 to i32*
  store i32 0, i32* %1385, align 8, !tbaa !49
  %1386 = getelementptr inbounds i8, i8* %call1091, i64 292
  store i8 0, i8* %1386, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.3 = getelementptr inbounds i8, i8* %call1091, i64 296
  %fDistance.i.i1647.3 = getelementptr inbounds i8, i8* %call1091, i64 352
  %1387 = bitcast i8* %fDistance.i.i1647.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1387, align 8, !tbaa !52
  %m_fGain.i.i1648.3 = getelementptr inbounds i8, i8* %call1091, i64 356
  %1388 = bitcast i8* %m_fGain.i.i1648.3 to float*
  store float 1.000000e+00, float* %1388, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1380, align 8, !tbaa !24
  %arrayctor.next1105.3 = getelementptr inbounds i8, i8* %call1091, i64 360
  %1389 = bitcast i8* %arrayctor.next1105.3 to i32 (...)***
  %1390 = getelementptr inbounds i8, i8* %call1091, i64 368
  %1391 = bitcast i8* %1390 to i32*
  store i32 0, i32* %1391, align 8, !tbaa !45
  %1392 = getelementptr inbounds i8, i8* %call1091, i64 372
  store i8 0, i8* %1392, align 4, !tbaa !48
  %1393 = getelementptr inbounds i8, i8* %call1091, i64 376
  %1394 = bitcast i8* %1393 to i32*
  store i32 0, i32* %1394, align 8, !tbaa !49
  %1395 = getelementptr inbounds i8, i8* %call1091, i64 380
  store i8 0, i8* %1395, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.4 = getelementptr inbounds i8, i8* %call1091, i64 384
  %fDistance.i.i1647.4 = getelementptr inbounds i8, i8* %call1091, i64 440
  %1396 = bitcast i8* %fDistance.i.i1647.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1396, align 8, !tbaa !52
  %m_fGain.i.i1648.4 = getelementptr inbounds i8, i8* %call1091, i64 444
  %1397 = bitcast i8* %m_fGain.i.i1648.4 to float*
  store float 1.000000e+00, float* %1397, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1389, align 8, !tbaa !24
  %arrayctor.next1105.4 = getelementptr inbounds i8, i8* %call1091, i64 448
  %1398 = bitcast i8* %arrayctor.next1105.4 to i32 (...)***
  %1399 = getelementptr inbounds i8, i8* %call1091, i64 456
  %1400 = bitcast i8* %1399 to i32*
  store i32 0, i32* %1400, align 8, !tbaa !45
  %1401 = getelementptr inbounds i8, i8* %call1091, i64 460
  store i8 0, i8* %1401, align 4, !tbaa !48
  %1402 = getelementptr inbounds i8, i8* %call1091, i64 464
  %1403 = bitcast i8* %1402 to i32*
  store i32 0, i32* %1403, align 8, !tbaa !49
  %1404 = getelementptr inbounds i8, i8* %call1091, i64 468
  store i8 0, i8* %1404, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.5 = getelementptr inbounds i8, i8* %call1091, i64 472
  %fDistance.i.i1647.5 = getelementptr inbounds i8, i8* %call1091, i64 528
  %1405 = bitcast i8* %fDistance.i.i1647.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1405, align 8, !tbaa !52
  %m_fGain.i.i1648.5 = getelementptr inbounds i8, i8* %call1091, i64 532
  %1406 = bitcast i8* %m_fGain.i.i1648.5 to float*
  store float 1.000000e+00, float* %1406, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1398, align 8, !tbaa !24
  %arrayctor.next1105.5 = getelementptr inbounds i8, i8* %call1091, i64 536
  %1407 = bitcast i8* %arrayctor.next1105.5 to i32 (...)***
  %1408 = getelementptr inbounds i8, i8* %call1091, i64 544
  %1409 = bitcast i8* %1408 to i32*
  store i32 0, i32* %1409, align 8, !tbaa !45
  %1410 = getelementptr inbounds i8, i8* %call1091, i64 548
  store i8 0, i8* %1410, align 4, !tbaa !48
  %1411 = getelementptr inbounds i8, i8* %call1091, i64 552
  %1412 = bitcast i8* %1411 to i32*
  store i32 0, i32* %1412, align 8, !tbaa !49
  %1413 = getelementptr inbounds i8, i8* %call1091, i64 556
  store i8 0, i8* %1413, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.6 = getelementptr inbounds i8, i8* %call1091, i64 560
  %fDistance.i.i1647.6 = getelementptr inbounds i8, i8* %call1091, i64 616
  %1414 = bitcast i8* %fDistance.i.i1647.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1414, align 8, !tbaa !52
  %m_fGain.i.i1648.6 = getelementptr inbounds i8, i8* %call1091, i64 620
  %1415 = bitcast i8* %m_fGain.i.i1648.6 to float*
  store float 1.000000e+00, float* %1415, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1407, align 8, !tbaa !24
  %arrayctor.next1105.6 = getelementptr inbounds i8, i8* %call1091, i64 624
  %1416 = bitcast i8* %arrayctor.next1105.6 to i32 (...)***
  %1417 = getelementptr inbounds i8, i8* %call1091, i64 632
  %1418 = bitcast i8* %1417 to i32*
  store i32 0, i32* %1418, align 8, !tbaa !45
  %1419 = getelementptr inbounds i8, i8* %call1091, i64 636
  store i8 0, i8* %1419, align 4, !tbaa !48
  %1420 = getelementptr inbounds i8, i8* %call1091, i64 640
  %1421 = bitcast i8* %1420 to i32*
  store i32 0, i32* %1421, align 8, !tbaa !49
  %1422 = getelementptr inbounds i8, i8* %call1091, i64 644
  store i8 0, i8* %1422, align 4, !tbaa !50
  %m_pfCoeff.i.i1646.7 = getelementptr inbounds i8, i8* %call1091, i64 648
  %fDistance.i.i1647.7 = getelementptr inbounds i8, i8* %call1091, i64 704
  %1423 = bitcast i8* %fDistance.i.i1647.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1423, align 8, !tbaa !52
  %m_fGain.i.i1648.7 = getelementptr inbounds i8, i8* %call1091, i64 708
  %1424 = bitcast i8* %m_fGain.i.i1648.7 to float*
  store float 1.000000e+00, float* %1424, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1416, align 8, !tbaa !24
  %1425 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1352, i8** %1425, align 8, !tbaa !240
  %call1109 = tail call float @_Z16DegreesToRadiansf(float 0x40419999A0000000)
  %polPosition.sroa.0.4.vec.insert1597 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call1109, i32 1
  %1426 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !243
  %div11131700 = lshr i32 %1426, 1
  %cmp11141701 = icmp eq i32 %div11131700, 0
  br i1 %cmp11141701, label %for.end1143, label %for.body1115.lr.ph

for.body1115.lr.ph:                               ; preds = %sw.bb1087
  %1427 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1428 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1115

for.body1115:                                     ; preds = %for.body1115, %for.body1115.lr.ph
  %indvars.iv1738 = phi i64 [ 0, %for.body1115.lr.ph ], [ %indvars.iv.next1739, %for.body1115 ]
  %div11131704 = phi i32 [ %div11131700, %for.body1115.lr.ph ], [ %div1113, %for.body1115 ]
  %polPosition.sroa.0.81703 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %for.body1115.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %1429 = trunc i64 %indvars.iv1738 to i32
  %conv1116 = uitofp i32 %1429 to float
  %mul1117 = fmul float %conv1116, 3.600000e+02
  %conv1120 = uitofp i32 %div11131704 to float
  %div1121 = fdiv float %mul1117, %conv1120
  %add1122 = fadd float %div1121, 4.500000e+01
  %call1123 = tail call float @_Z16DegreesToRadiansf(float %add1122)
  %sub1124 = fsub float -0.000000e+00, %call1123
  %polPosition.sroa.0.0.vec.insert1553 = insertelement <2 x float> %polPosition.sroa.0.81703, float %sub1124, i32 0
  %1430 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1430, i64 %indvars.iv1738
  %1431 = load i32, i32* %1427, align 8, !tbaa !45
  %1432 = load i8, i8* %1428, align 4, !tbaa !48, !range !51
  %tobool1131 = icmp ne i8 %1432, 0
  %1433 = bitcast %class.CAmbisonicSpeaker* %arrayidx1128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1433, align 8, !tbaa !24
  %vfn1133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1132, i64 2
  %1434 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1133, align 8
  %call1134 = tail call zeroext i1 %1434(%class.CAmbisonicSpeaker* %arrayidx1128, i32 %1431, i1 zeroext %tobool1131, i32 0)
  %1435 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1436 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1435, i64 %indvars.iv1738, i32 0
  %1437 = bitcast %class.CAmbisonicSource* %1436 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1139 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1437, align 8, !tbaa !24
  %vfn1140 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1139, i64 5
  %1438 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1140, align 8
  tail call void %1438(%class.CAmbisonicSource* %1436, <2 x float> %polPosition.sroa.0.0.vec.insert1553, float 1.000000e+00)
  %indvars.iv.next1739 = add nuw nsw i64 %indvars.iv1738, 1
  %1439 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !243
  %div1113 = lshr i32 %1439, 1
  %1440 = zext i32 %div1113 to i64
  %cmp1114 = icmp ult i64 %indvars.iv.next1739, %1440
  br i1 %cmp1114, label %for.body1115, label %for.end1143

for.end1143:                                      ; preds = %for.body1115, %sw.bb1087
  %polPosition.sroa.0.8.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %sw.bb1087 ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %call1144 = tail call float @_Z16DegreesToRadiansf(float 0xC0419999A0000000)
  %1441 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !243
  %div1147 = lshr i32 %1441, 1
  %cmp11501697 = icmp ult i32 %div1147, %1441
  br i1 %cmp11501697, label %for.body1151.lr.ph, label %sw.epilog

for.body1151.lr.ph:                               ; preds = %for.end1143
  %polPosition.sroa.0.4.vec.insert = insertelement <2 x float> %polPosition.sroa.0.8.lcssa, float %call1144, i32 1
  %1442 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1443 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1444 = zext i32 %div1147 to i64
  br label %for.body1151

for.body1151:                                     ; preds = %for.body1151, %for.body1151.lr.ph
  %indvars.iv1736 = phi i64 [ %1444, %for.body1151.lr.ph ], [ %indvars.iv.next1737, %for.body1151 ]
  %1445 = phi i32 [ %1441, %for.body1151.lr.ph ], [ %1456, %for.body1151 ]
  %polPosition.sroa.0.91699 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert, %for.body1151.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1557, %for.body1151 ]
  %1446 = trunc i64 %indvars.iv1736 to i32
  %sub1152 = add i32 %1446, -4
  %conv1153 = uitofp i32 %sub1152 to float
  %mul1154 = fmul float %conv1153, 3.600000e+02
  %div1156 = lshr i32 %1445, 1
  %conv1157 = uitofp i32 %div1156 to float
  %div1158 = fdiv float %mul1154, %conv1157
  %add1159 = fadd float %div1158, 4.500000e+01
  %call1160 = tail call float @_Z16DegreesToRadiansf(float %add1159)
  %sub1161 = fsub float -0.000000e+00, %call1160
  %polPosition.sroa.0.0.vec.insert1557 = insertelement <2 x float> %polPosition.sroa.0.91699, float %sub1161, i32 0
  %1447 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1165 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1447, i64 %indvars.iv1736
  %1448 = load i32, i32* %1442, align 8, !tbaa !45
  %1449 = load i8, i8* %1443, align 4, !tbaa !48, !range !51
  %tobool1168 = icmp ne i8 %1449, 0
  %1450 = bitcast %class.CAmbisonicSpeaker* %arrayidx1165 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1169 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1450, align 8, !tbaa !24
  %vfn1170 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1169, i64 2
  %1451 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1170, align 8
  %call1171 = tail call zeroext i1 %1451(%class.CAmbisonicSpeaker* %arrayidx1165, i32 %1448, i1 zeroext %tobool1168, i32 0)
  %1452 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1453 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1452, i64 %indvars.iv1736, i32 0
  %1454 = bitcast %class.CAmbisonicSource* %1453 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1176 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1454, align 8, !tbaa !24
  %vfn1177 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1176, i64 5
  %1455 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1177, align 8
  tail call void %1455(%class.CAmbisonicSource* %1453, <2 x float> %polPosition.sroa.0.0.vec.insert1557, float 1.000000e+00)
  %indvars.iv.next1737 = add nuw nsw i64 %indvars.iv1736, 1
  %1456 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !243
  %1457 = zext i32 %1456 to i64
  %cmp1150 = icmp ult i64 %indvars.iv.next1737, %1457
  br i1 %cmp1150, label %for.body1151, label %sw.epilog

sw.bb1181:                                        ; preds = %if.end
  %m_nSpeakers1182 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 17, i32* %m_nSpeakers1182, align 4, !tbaa !243
  %call1185 = tail call i8* @_Znam(i64 1504) #25
  %1458 = bitcast i8* %call1185 to i64*
  store i64 17, i64* %1458, align 16
  %1459 = getelementptr inbounds i8, i8* %call1185, i64 8
  %1460 = bitcast i8* %1459 to i32 (...)***
  %1461 = getelementptr inbounds i8, i8* %call1185, i64 16
  %1462 = bitcast i8* %1461 to i32*
  store i32 0, i32* %1462, align 8, !tbaa !45
  %1463 = getelementptr inbounds i8, i8* %call1185, i64 20
  store i8 0, i8* %1463, align 4, !tbaa !48
  %1464 = getelementptr inbounds i8, i8* %call1185, i64 24
  %1465 = bitcast i8* %1464 to i32*
  store i32 0, i32* %1465, align 8, !tbaa !49
  %1466 = getelementptr inbounds i8, i8* %call1185, i64 28
  store i8 0, i8* %1466, align 4, !tbaa !50
  %m_pfCoeff.i.i1631 = getelementptr inbounds i8, i8* %call1185, i64 32
  %fDistance.i.i1632 = getelementptr inbounds i8, i8* %call1185, i64 88
  %1467 = bitcast i8* %fDistance.i.i1632 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1467, align 8, !tbaa !52
  %m_fGain.i.i1633 = getelementptr inbounds i8, i8* %call1185, i64 92
  %1468 = bitcast i8* %m_fGain.i.i1633 to float*
  store float 1.000000e+00, float* %1468, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1460, align 8, !tbaa !24
  %arrayctor.next1199 = getelementptr inbounds i8, i8* %call1185, i64 96
  %1469 = bitcast i8* %arrayctor.next1199 to i32 (...)***
  %1470 = getelementptr inbounds i8, i8* %call1185, i64 104
  %1471 = bitcast i8* %1470 to i32*
  store i32 0, i32* %1471, align 8, !tbaa !45
  %1472 = getelementptr inbounds i8, i8* %call1185, i64 108
  store i8 0, i8* %1472, align 4, !tbaa !48
  %1473 = getelementptr inbounds i8, i8* %call1185, i64 112
  %1474 = bitcast i8* %1473 to i32*
  store i32 0, i32* %1474, align 8, !tbaa !49
  %1475 = getelementptr inbounds i8, i8* %call1185, i64 116
  store i8 0, i8* %1475, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.1 = getelementptr inbounds i8, i8* %call1185, i64 120
  %fDistance.i.i1632.1 = getelementptr inbounds i8, i8* %call1185, i64 176
  %1476 = bitcast i8* %fDistance.i.i1632.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1476, align 8, !tbaa !52
  %m_fGain.i.i1633.1 = getelementptr inbounds i8, i8* %call1185, i64 180
  %1477 = bitcast i8* %m_fGain.i.i1633.1 to float*
  store float 1.000000e+00, float* %1477, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1469, align 8, !tbaa !24
  %arrayctor.next1199.1 = getelementptr inbounds i8, i8* %call1185, i64 184
  %1478 = bitcast i8* %arrayctor.next1199.1 to i32 (...)***
  %1479 = getelementptr inbounds i8, i8* %call1185, i64 192
  %1480 = bitcast i8* %1479 to i32*
  store i32 0, i32* %1480, align 8, !tbaa !45
  %1481 = getelementptr inbounds i8, i8* %call1185, i64 196
  store i8 0, i8* %1481, align 4, !tbaa !48
  %1482 = getelementptr inbounds i8, i8* %call1185, i64 200
  %1483 = bitcast i8* %1482 to i32*
  store i32 0, i32* %1483, align 8, !tbaa !49
  %1484 = getelementptr inbounds i8, i8* %call1185, i64 204
  store i8 0, i8* %1484, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.2 = getelementptr inbounds i8, i8* %call1185, i64 208
  %fDistance.i.i1632.2 = getelementptr inbounds i8, i8* %call1185, i64 264
  %1485 = bitcast i8* %fDistance.i.i1632.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1485, align 8, !tbaa !52
  %m_fGain.i.i1633.2 = getelementptr inbounds i8, i8* %call1185, i64 268
  %1486 = bitcast i8* %m_fGain.i.i1633.2 to float*
  store float 1.000000e+00, float* %1486, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1478, align 8, !tbaa !24
  %arrayctor.next1199.2 = getelementptr inbounds i8, i8* %call1185, i64 272
  %1487 = bitcast i8* %arrayctor.next1199.2 to i32 (...)***
  %1488 = getelementptr inbounds i8, i8* %call1185, i64 280
  %1489 = bitcast i8* %1488 to i32*
  store i32 0, i32* %1489, align 8, !tbaa !45
  %1490 = getelementptr inbounds i8, i8* %call1185, i64 284
  store i8 0, i8* %1490, align 4, !tbaa !48
  %1491 = getelementptr inbounds i8, i8* %call1185, i64 288
  %1492 = bitcast i8* %1491 to i32*
  store i32 0, i32* %1492, align 8, !tbaa !49
  %1493 = getelementptr inbounds i8, i8* %call1185, i64 292
  store i8 0, i8* %1493, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.3 = getelementptr inbounds i8, i8* %call1185, i64 296
  %fDistance.i.i1632.3 = getelementptr inbounds i8, i8* %call1185, i64 352
  %1494 = bitcast i8* %fDistance.i.i1632.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1494, align 8, !tbaa !52
  %m_fGain.i.i1633.3 = getelementptr inbounds i8, i8* %call1185, i64 356
  %1495 = bitcast i8* %m_fGain.i.i1633.3 to float*
  store float 1.000000e+00, float* %1495, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1487, align 8, !tbaa !24
  %arrayctor.next1199.3 = getelementptr inbounds i8, i8* %call1185, i64 360
  %1496 = bitcast i8* %arrayctor.next1199.3 to i32 (...)***
  %1497 = getelementptr inbounds i8, i8* %call1185, i64 368
  %1498 = bitcast i8* %1497 to i32*
  store i32 0, i32* %1498, align 8, !tbaa !45
  %1499 = getelementptr inbounds i8, i8* %call1185, i64 372
  store i8 0, i8* %1499, align 4, !tbaa !48
  %1500 = getelementptr inbounds i8, i8* %call1185, i64 376
  %1501 = bitcast i8* %1500 to i32*
  store i32 0, i32* %1501, align 8, !tbaa !49
  %1502 = getelementptr inbounds i8, i8* %call1185, i64 380
  store i8 0, i8* %1502, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.4 = getelementptr inbounds i8, i8* %call1185, i64 384
  %fDistance.i.i1632.4 = getelementptr inbounds i8, i8* %call1185, i64 440
  %1503 = bitcast i8* %fDistance.i.i1632.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1503, align 8, !tbaa !52
  %m_fGain.i.i1633.4 = getelementptr inbounds i8, i8* %call1185, i64 444
  %1504 = bitcast i8* %m_fGain.i.i1633.4 to float*
  store float 1.000000e+00, float* %1504, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1496, align 8, !tbaa !24
  %arrayctor.next1199.4 = getelementptr inbounds i8, i8* %call1185, i64 448
  %1505 = bitcast i8* %arrayctor.next1199.4 to i32 (...)***
  %1506 = getelementptr inbounds i8, i8* %call1185, i64 456
  %1507 = bitcast i8* %1506 to i32*
  store i32 0, i32* %1507, align 8, !tbaa !45
  %1508 = getelementptr inbounds i8, i8* %call1185, i64 460
  store i8 0, i8* %1508, align 4, !tbaa !48
  %1509 = getelementptr inbounds i8, i8* %call1185, i64 464
  %1510 = bitcast i8* %1509 to i32*
  store i32 0, i32* %1510, align 8, !tbaa !49
  %1511 = getelementptr inbounds i8, i8* %call1185, i64 468
  store i8 0, i8* %1511, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.5 = getelementptr inbounds i8, i8* %call1185, i64 472
  %fDistance.i.i1632.5 = getelementptr inbounds i8, i8* %call1185, i64 528
  %1512 = bitcast i8* %fDistance.i.i1632.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1512, align 8, !tbaa !52
  %m_fGain.i.i1633.5 = getelementptr inbounds i8, i8* %call1185, i64 532
  %1513 = bitcast i8* %m_fGain.i.i1633.5 to float*
  store float 1.000000e+00, float* %1513, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1505, align 8, !tbaa !24
  %arrayctor.next1199.5 = getelementptr inbounds i8, i8* %call1185, i64 536
  %1514 = bitcast i8* %arrayctor.next1199.5 to i32 (...)***
  %1515 = getelementptr inbounds i8, i8* %call1185, i64 544
  %1516 = bitcast i8* %1515 to i32*
  store i32 0, i32* %1516, align 8, !tbaa !45
  %1517 = getelementptr inbounds i8, i8* %call1185, i64 548
  store i8 0, i8* %1517, align 4, !tbaa !48
  %1518 = getelementptr inbounds i8, i8* %call1185, i64 552
  %1519 = bitcast i8* %1518 to i32*
  store i32 0, i32* %1519, align 8, !tbaa !49
  %1520 = getelementptr inbounds i8, i8* %call1185, i64 556
  store i8 0, i8* %1520, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.6 = getelementptr inbounds i8, i8* %call1185, i64 560
  %fDistance.i.i1632.6 = getelementptr inbounds i8, i8* %call1185, i64 616
  %1521 = bitcast i8* %fDistance.i.i1632.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1521, align 8, !tbaa !52
  %m_fGain.i.i1633.6 = getelementptr inbounds i8, i8* %call1185, i64 620
  %1522 = bitcast i8* %m_fGain.i.i1633.6 to float*
  store float 1.000000e+00, float* %1522, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1514, align 8, !tbaa !24
  %arrayctor.next1199.6 = getelementptr inbounds i8, i8* %call1185, i64 624
  %1523 = bitcast i8* %arrayctor.next1199.6 to i32 (...)***
  %1524 = getelementptr inbounds i8, i8* %call1185, i64 632
  %1525 = bitcast i8* %1524 to i32*
  store i32 0, i32* %1525, align 8, !tbaa !45
  %1526 = getelementptr inbounds i8, i8* %call1185, i64 636
  store i8 0, i8* %1526, align 4, !tbaa !48
  %1527 = getelementptr inbounds i8, i8* %call1185, i64 640
  %1528 = bitcast i8* %1527 to i32*
  store i32 0, i32* %1528, align 8, !tbaa !49
  %1529 = getelementptr inbounds i8, i8* %call1185, i64 644
  store i8 0, i8* %1529, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.7 = getelementptr inbounds i8, i8* %call1185, i64 648
  %fDistance.i.i1632.7 = getelementptr inbounds i8, i8* %call1185, i64 704
  %1530 = bitcast i8* %fDistance.i.i1632.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1530, align 8, !tbaa !52
  %m_fGain.i.i1633.7 = getelementptr inbounds i8, i8* %call1185, i64 708
  %1531 = bitcast i8* %m_fGain.i.i1633.7 to float*
  store float 1.000000e+00, float* %1531, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1523, align 8, !tbaa !24
  %arrayctor.next1199.7 = getelementptr inbounds i8, i8* %call1185, i64 712
  %1532 = bitcast i8* %arrayctor.next1199.7 to i32 (...)***
  %1533 = getelementptr inbounds i8, i8* %call1185, i64 720
  %1534 = bitcast i8* %1533 to i32*
  store i32 0, i32* %1534, align 8, !tbaa !45
  %1535 = getelementptr inbounds i8, i8* %call1185, i64 724
  store i8 0, i8* %1535, align 4, !tbaa !48
  %1536 = getelementptr inbounds i8, i8* %call1185, i64 728
  %1537 = bitcast i8* %1536 to i32*
  store i32 0, i32* %1537, align 8, !tbaa !49
  %1538 = getelementptr inbounds i8, i8* %call1185, i64 732
  store i8 0, i8* %1538, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.8 = getelementptr inbounds i8, i8* %call1185, i64 736
  %fDistance.i.i1632.8 = getelementptr inbounds i8, i8* %call1185, i64 792
  %1539 = bitcast i8* %fDistance.i.i1632.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1539, align 8, !tbaa !52
  %m_fGain.i.i1633.8 = getelementptr inbounds i8, i8* %call1185, i64 796
  %1540 = bitcast i8* %m_fGain.i.i1633.8 to float*
  store float 1.000000e+00, float* %1540, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1532, align 8, !tbaa !24
  %arrayctor.next1199.8 = getelementptr inbounds i8, i8* %call1185, i64 800
  %1541 = bitcast i8* %arrayctor.next1199.8 to i32 (...)***
  %1542 = getelementptr inbounds i8, i8* %call1185, i64 808
  %1543 = bitcast i8* %1542 to i32*
  store i32 0, i32* %1543, align 8, !tbaa !45
  %1544 = getelementptr inbounds i8, i8* %call1185, i64 812
  store i8 0, i8* %1544, align 4, !tbaa !48
  %1545 = getelementptr inbounds i8, i8* %call1185, i64 816
  %1546 = bitcast i8* %1545 to i32*
  store i32 0, i32* %1546, align 8, !tbaa !49
  %1547 = getelementptr inbounds i8, i8* %call1185, i64 820
  store i8 0, i8* %1547, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.9 = getelementptr inbounds i8, i8* %call1185, i64 824
  %fDistance.i.i1632.9 = getelementptr inbounds i8, i8* %call1185, i64 880
  %1548 = bitcast i8* %fDistance.i.i1632.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1548, align 8, !tbaa !52
  %m_fGain.i.i1633.9 = getelementptr inbounds i8, i8* %call1185, i64 884
  %1549 = bitcast i8* %m_fGain.i.i1633.9 to float*
  store float 1.000000e+00, float* %1549, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1541, align 8, !tbaa !24
  %arrayctor.next1199.9 = getelementptr inbounds i8, i8* %call1185, i64 888
  %1550 = bitcast i8* %arrayctor.next1199.9 to i32 (...)***
  %1551 = getelementptr inbounds i8, i8* %call1185, i64 896
  %1552 = bitcast i8* %1551 to i32*
  store i32 0, i32* %1552, align 8, !tbaa !45
  %1553 = getelementptr inbounds i8, i8* %call1185, i64 900
  store i8 0, i8* %1553, align 4, !tbaa !48
  %1554 = getelementptr inbounds i8, i8* %call1185, i64 904
  %1555 = bitcast i8* %1554 to i32*
  store i32 0, i32* %1555, align 8, !tbaa !49
  %1556 = getelementptr inbounds i8, i8* %call1185, i64 908
  store i8 0, i8* %1556, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.10 = getelementptr inbounds i8, i8* %call1185, i64 912
  %fDistance.i.i1632.10 = getelementptr inbounds i8, i8* %call1185, i64 968
  %1557 = bitcast i8* %fDistance.i.i1632.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1557, align 8, !tbaa !52
  %m_fGain.i.i1633.10 = getelementptr inbounds i8, i8* %call1185, i64 972
  %1558 = bitcast i8* %m_fGain.i.i1633.10 to float*
  store float 1.000000e+00, float* %1558, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1550, align 8, !tbaa !24
  %arrayctor.next1199.10 = getelementptr inbounds i8, i8* %call1185, i64 976
  %1559 = bitcast i8* %arrayctor.next1199.10 to i32 (...)***
  %1560 = getelementptr inbounds i8, i8* %call1185, i64 984
  %1561 = bitcast i8* %1560 to i32*
  store i32 0, i32* %1561, align 8, !tbaa !45
  %1562 = getelementptr inbounds i8, i8* %call1185, i64 988
  store i8 0, i8* %1562, align 4, !tbaa !48
  %1563 = getelementptr inbounds i8, i8* %call1185, i64 992
  %1564 = bitcast i8* %1563 to i32*
  store i32 0, i32* %1564, align 8, !tbaa !49
  %1565 = getelementptr inbounds i8, i8* %call1185, i64 996
  store i8 0, i8* %1565, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.11 = getelementptr inbounds i8, i8* %call1185, i64 1000
  %fDistance.i.i1632.11 = getelementptr inbounds i8, i8* %call1185, i64 1056
  %1566 = bitcast i8* %fDistance.i.i1632.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1566, align 8, !tbaa !52
  %m_fGain.i.i1633.11 = getelementptr inbounds i8, i8* %call1185, i64 1060
  %1567 = bitcast i8* %m_fGain.i.i1633.11 to float*
  store float 1.000000e+00, float* %1567, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1559, align 8, !tbaa !24
  %arrayctor.next1199.11 = getelementptr inbounds i8, i8* %call1185, i64 1064
  %1568 = bitcast i8* %arrayctor.next1199.11 to i32 (...)***
  %1569 = getelementptr inbounds i8, i8* %call1185, i64 1072
  %1570 = bitcast i8* %1569 to i32*
  store i32 0, i32* %1570, align 8, !tbaa !45
  %1571 = getelementptr inbounds i8, i8* %call1185, i64 1076
  store i8 0, i8* %1571, align 4, !tbaa !48
  %1572 = getelementptr inbounds i8, i8* %call1185, i64 1080
  %1573 = bitcast i8* %1572 to i32*
  store i32 0, i32* %1573, align 8, !tbaa !49
  %1574 = getelementptr inbounds i8, i8* %call1185, i64 1084
  store i8 0, i8* %1574, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.12 = getelementptr inbounds i8, i8* %call1185, i64 1088
  %fDistance.i.i1632.12 = getelementptr inbounds i8, i8* %call1185, i64 1144
  %1575 = bitcast i8* %fDistance.i.i1632.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1575, align 8, !tbaa !52
  %m_fGain.i.i1633.12 = getelementptr inbounds i8, i8* %call1185, i64 1148
  %1576 = bitcast i8* %m_fGain.i.i1633.12 to float*
  store float 1.000000e+00, float* %1576, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1568, align 8, !tbaa !24
  %arrayctor.next1199.12 = getelementptr inbounds i8, i8* %call1185, i64 1152
  %1577 = bitcast i8* %arrayctor.next1199.12 to i32 (...)***
  %1578 = getelementptr inbounds i8, i8* %call1185, i64 1160
  %1579 = bitcast i8* %1578 to i32*
  store i32 0, i32* %1579, align 8, !tbaa !45
  %1580 = getelementptr inbounds i8, i8* %call1185, i64 1164
  store i8 0, i8* %1580, align 4, !tbaa !48
  %1581 = getelementptr inbounds i8, i8* %call1185, i64 1168
  %1582 = bitcast i8* %1581 to i32*
  store i32 0, i32* %1582, align 8, !tbaa !49
  %1583 = getelementptr inbounds i8, i8* %call1185, i64 1172
  store i8 0, i8* %1583, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.13 = getelementptr inbounds i8, i8* %call1185, i64 1176
  %fDistance.i.i1632.13 = getelementptr inbounds i8, i8* %call1185, i64 1232
  %1584 = bitcast i8* %fDistance.i.i1632.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1584, align 8, !tbaa !52
  %m_fGain.i.i1633.13 = getelementptr inbounds i8, i8* %call1185, i64 1236
  %1585 = bitcast i8* %m_fGain.i.i1633.13 to float*
  store float 1.000000e+00, float* %1585, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1577, align 8, !tbaa !24
  %arrayctor.next1199.13 = getelementptr inbounds i8, i8* %call1185, i64 1240
  %1586 = bitcast i8* %arrayctor.next1199.13 to i32 (...)***
  %1587 = getelementptr inbounds i8, i8* %call1185, i64 1248
  %1588 = bitcast i8* %1587 to i32*
  store i32 0, i32* %1588, align 8, !tbaa !45
  %1589 = getelementptr inbounds i8, i8* %call1185, i64 1252
  store i8 0, i8* %1589, align 4, !tbaa !48
  %1590 = getelementptr inbounds i8, i8* %call1185, i64 1256
  %1591 = bitcast i8* %1590 to i32*
  store i32 0, i32* %1591, align 8, !tbaa !49
  %1592 = getelementptr inbounds i8, i8* %call1185, i64 1260
  store i8 0, i8* %1592, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.14 = getelementptr inbounds i8, i8* %call1185, i64 1264
  %fDistance.i.i1632.14 = getelementptr inbounds i8, i8* %call1185, i64 1320
  %1593 = bitcast i8* %fDistance.i.i1632.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1593, align 8, !tbaa !52
  %m_fGain.i.i1633.14 = getelementptr inbounds i8, i8* %call1185, i64 1324
  %1594 = bitcast i8* %m_fGain.i.i1633.14 to float*
  store float 1.000000e+00, float* %1594, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1586, align 8, !tbaa !24
  %arrayctor.next1199.14 = getelementptr inbounds i8, i8* %call1185, i64 1328
  %1595 = bitcast i8* %arrayctor.next1199.14 to i32 (...)***
  %1596 = getelementptr inbounds i8, i8* %call1185, i64 1336
  %1597 = bitcast i8* %1596 to i32*
  store i32 0, i32* %1597, align 8, !tbaa !45
  %1598 = getelementptr inbounds i8, i8* %call1185, i64 1340
  store i8 0, i8* %1598, align 4, !tbaa !48
  %1599 = getelementptr inbounds i8, i8* %call1185, i64 1344
  %1600 = bitcast i8* %1599 to i32*
  store i32 0, i32* %1600, align 8, !tbaa !49
  %1601 = getelementptr inbounds i8, i8* %call1185, i64 1348
  store i8 0, i8* %1601, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.15 = getelementptr inbounds i8, i8* %call1185, i64 1352
  %fDistance.i.i1632.15 = getelementptr inbounds i8, i8* %call1185, i64 1408
  %1602 = bitcast i8* %fDistance.i.i1632.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1602, align 8, !tbaa !52
  %m_fGain.i.i1633.15 = getelementptr inbounds i8, i8* %call1185, i64 1412
  %1603 = bitcast i8* %m_fGain.i.i1633.15 to float*
  store float 1.000000e+00, float* %1603, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1595, align 8, !tbaa !24
  %arrayctor.next1199.15 = getelementptr inbounds i8, i8* %call1185, i64 1416
  %1604 = bitcast i8* %arrayctor.next1199.15 to i32 (...)***
  %1605 = getelementptr inbounds i8, i8* %call1185, i64 1424
  %1606 = bitcast i8* %1605 to i32*
  store i32 0, i32* %1606, align 8, !tbaa !45
  %1607 = getelementptr inbounds i8, i8* %call1185, i64 1428
  store i8 0, i8* %1607, align 4, !tbaa !48
  %1608 = getelementptr inbounds i8, i8* %call1185, i64 1432
  %1609 = bitcast i8* %1608 to i32*
  store i32 0, i32* %1609, align 8, !tbaa !49
  %1610 = getelementptr inbounds i8, i8* %call1185, i64 1436
  store i8 0, i8* %1610, align 4, !tbaa !50
  %m_pfCoeff.i.i1631.16 = getelementptr inbounds i8, i8* %call1185, i64 1440
  %fDistance.i.i1632.16 = getelementptr inbounds i8, i8* %call1185, i64 1496
  %1611 = bitcast i8* %fDistance.i.i1632.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1611, align 8, !tbaa !52
  %m_fGain.i.i1633.16 = getelementptr inbounds i8, i8* %call1185, i64 1500
  %1612 = bitcast i8* %m_fGain.i.i1633.16 to float*
  store float 1.000000e+00, float* %1612, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1604, align 8, !tbaa !24
  %1613 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1459, i8** %1613, align 8, !tbaa !240
  %1614 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !243
  %cmp12071706 = icmp eq i32 %1614, 0
  br i1 %cmp12071706, label %sw.epilog, label %for.body1208.lr.ph

for.body1208.lr.ph:                               ; preds = %sw.bb1181
  %1615 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1616 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1208

for.body1208:                                     ; preds = %for.body1208, %for.body1208.lr.ph
  %indvars.iv1740 = phi i64 [ 0, %for.body1208.lr.ph ], [ %indvars.iv.next1741, %for.body1208 ]
  %polPosition.sroa.0.101708 = phi <2 x float> [ zeroinitializer, %for.body1208.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1563, %for.body1208 ]
  %call1209 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1563 = insertelement <2 x float> %polPosition.sroa.0.101708, float %call1209, i32 0
  %1617 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1617, i64 %indvars.iv1740
  %1618 = load i32, i32* %1615, align 8, !tbaa !45
  %1619 = load i8, i8* %1616, align 4, !tbaa !48, !range !51
  %tobool1216 = icmp ne i8 %1619, 0
  %1620 = bitcast %class.CAmbisonicSpeaker* %arrayidx1213 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1217 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1620, align 8, !tbaa !24
  %vfn1218 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1217, i64 2
  %1621 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1218, align 8
  %call1219 = tail call zeroext i1 %1621(%class.CAmbisonicSpeaker* %arrayidx1213, i32 %1618, i1 zeroext %tobool1216, i32 0)
  %1622 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1623 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1622, i64 %indvars.iv1740, i32 0
  %1624 = bitcast %class.CAmbisonicSource* %1623 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1624, align 8, !tbaa !24
  %vfn1225 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1224, i64 5
  %1625 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1225, align 8
  tail call void %1625(%class.CAmbisonicSource* %1623, <2 x float> %polPosition.sroa.0.0.vec.insert1563, float 1.000000e+00)
  %indvars.iv.next1741 = add nuw nsw i64 %indvars.iv1740, 1
  %1626 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !243
  %1627 = zext i32 %1626 to i64
  %cmp1207 = icmp ult i64 %indvars.iv.next1741, %1627
  br i1 %cmp1207, label %for.body1208, label %sw.epilog

sw.default:                                       ; preds = %if.end
  %m_nSpeakers1229 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers1229, align 4, !tbaa !243
  %call1232 = tail call i8* @_Znam(i64 96) #25
  %1628 = bitcast i8* %call1232 to i64*
  store i64 1, i64* %1628, align 16
  %1629 = getelementptr inbounds i8, i8* %call1232, i64 8
  %1630 = bitcast i8* %1629 to i32 (...)***
  %1631 = getelementptr inbounds i8, i8* %call1232, i64 16
  %1632 = bitcast i8* %1631 to i32*
  %1633 = getelementptr inbounds i8, i8* %call1232, i64 20
  %1634 = getelementptr inbounds i8, i8* %call1232, i64 24
  %1635 = bitcast i8* %1634 to i32*
  store i32 0, i32* %1635, align 8, !tbaa !49
  %1636 = getelementptr inbounds i8, i8* %call1232, i64 28
  store i8 0, i8* %1636, align 4, !tbaa !50
  %m_pfCoeff.i.i1622 = getelementptr inbounds i8, i8* %call1232, i64 32
  %fDistance.i.i1623 = getelementptr inbounds i8, i8* %call1232, i64 88
  %1637 = bitcast i8* %fDistance.i.i1623 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1637, align 8, !tbaa !52
  %m_fGain.i.i1624 = getelementptr inbounds i8, i8* %call1232, i64 92
  %1638 = bitcast i8* %m_fGain.i.i1624 to float*
  store float 1.000000e+00, float* %1638, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1630, align 8, !tbaa !24
  %1639 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1629, i8** %1639, align 8, !tbaa !240
  %1640 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1641 = load i32, i32* %1640, align 8, !tbaa !45
  %1642 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1643 = load i8, i8* %1642, align 4, !tbaa !48, !range !51
  %tobool1254 = icmp ne i8 %1643, 0
  store i32 %1641, i32* %1632, align 8, !tbaa !45
  store i8 %1643, i8* %1633, align 4, !tbaa !48
  %call.i.i.i1756 = tail call i32 @_Z17OrderToComponentsjb(i32 %1641, i1 zeroext %tobool1254)
  store i32 %call.i.i.i1756, i32* %1635, align 8, !tbaa !49
  %conv.i.i1758 = zext i32 %call.i.i.i1756 to i64
  %1644 = bitcast float* %ref.tmp.i.i1753 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1644) #24
  store float 0.000000e+00, float* %ref.tmp.i.i1753, align 4, !tbaa !34
  %_M_finish.i.i.i.i1759 = getelementptr inbounds i8, i8* %call1232, i64 40
  %1645 = bitcast i8* %_M_finish.i.i.i.i1759 to float**
  %1646 = bitcast i8* %_M_finish.i.i.i.i1759 to i64*
  %1647 = load i64, i64* %1646, align 8, !tbaa !57
  %1648 = bitcast i8* %m_pfCoeff.i.i1622 to i64*
  %1649 = load i64, i64* %1648, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i.i1760 = sub i64 %1647, %1649
  %sub.ptr.div.i.i.i.i1761 = ashr exact i64 %sub.ptr.sub.i.i.i.i1760, 2
  %cmp.i.i.i1762 = icmp ult i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  %1650 = inttoptr i64 %1649 to float*
  br i1 %cmp.i.i.i1762, label %if.then.i.i.i1764, label %if.else.i.i.i1766

if.then.i.i.i1764:                                ; preds = %sw.default
  %1651 = bitcast i8* %m_pfCoeff.i.i1622 to %"class.std::vector.0"*
  %1652 = inttoptr i64 %1647 to float*
  %sub.i.i.i1763 = sub nsw i64 %conv.i.i1758, %sub.ptr.div.i.i.i.i1761
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1651, float* %1652, i64 %sub.i.i.i1763, float* nonnull dereferenceable(4) %ref.tmp.i.i1753)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.else.i.i.i1766:                                ; preds = %sw.default
  %cmp8.i.i.i1765 = icmp ugt i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  br i1 %cmp8.i.i.i1765, label %if.then9.i.i.i1768, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.then9.i.i.i1768:                               ; preds = %if.else.i.i.i1766
  %add.ptr.i.i.i1767 = getelementptr inbounds float, float* %1650, i64 %conv.i.i1758
  store float* %add.ptr.i.i.i1767, float** %1645, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776:    ; preds = %if.then9.i.i.i1768, %if.else.i.i.i1766, %if.then.i.i.i1764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1644) #24
  %m_pfOrderWeights.i.i1769 = getelementptr inbounds i8, i8* %call1232, i64 56
  %1653 = load i32, i32* %1632, align 8, !tbaa !45
  %add.i.i1770 = add i32 %1653, 1
  %conv4.i.i1771 = zext i32 %add.i.i1770 to i64
  %1654 = bitcast float* %ref.tmp5.i.i1754 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1654) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i1754, align 4, !tbaa !34
  %_M_finish.i.i6.i.i1772 = getelementptr inbounds i8, i8* %call1232, i64 64
  %1655 = bitcast i8* %_M_finish.i.i6.i.i1772 to float**
  %1656 = bitcast i8* %_M_finish.i.i6.i.i1772 to i64*
  %1657 = load i64, i64* %1656, align 8, !tbaa !57
  %1658 = bitcast i8* %m_pfOrderWeights.i.i1769 to i64*
  %1659 = load i64, i64* %1658, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i.i1773 = sub i64 %1657, %1659
  %sub.ptr.div.i.i8.i.i1774 = ashr exact i64 %sub.ptr.sub.i.i7.i.i1773, 2
  %cmp.i9.i.i1775 = icmp ult i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  %1660 = inttoptr i64 %1659 to float*
  br i1 %cmp.i9.i.i1775, label %if.then.i11.i.i1778, label %if.else.i13.i.i1780

if.then.i11.i.i1778:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %1661 = bitcast i8* %m_pfOrderWeights.i.i1769 to %"class.std::vector.0"*
  %1662 = inttoptr i64 %1657 to float*
  %sub.i10.i.i1777 = sub nsw i64 %conv4.i.i1771, %sub.ptr.div.i.i8.i.i1774
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1661, float* %1662, i64 %sub.i10.i.i1777, float* nonnull dereferenceable(4) %ref.tmp5.i.i1754)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.else.i13.i.i1780:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %cmp8.i12.i.i1779 = icmp ugt i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  br i1 %cmp8.i12.i.i1779, label %if.then9.i15.i.i1782, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.then9.i15.i.i1782:                             ; preds = %if.else.i13.i.i1780
  %add.ptr.i14.i.i1781 = getelementptr inbounds float, float* %1660, i64 %conv4.i.i1771
  store float* %add.ptr.i14.i.i1781, float** %1655, align 8, !tbaa !57
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783:    ; preds = %if.then9.i15.i.i1782, %if.else.i13.i.i1780, %if.then.i11.i.i1778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1654) #24
  %1663 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1664 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1663, align 8, !tbaa !240
  %1665 = bitcast %class.CAmbisonicSource* %1664 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1261 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1665, align 8, !tbaa !24
  %vfn1262 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1261, i64 5
  %1666 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1262, align 8
  tail call void %1666(%class.CAmbisonicSource* %1664, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.epilog:                                        ; preds = %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783, %for.body1208, %sw.bb1181, %for.body1151, %for.end1143, %sw.bb751, %for.body721, %for.end713, %for.body631, %for.body579, %for.body527, %for.body475, %for.body423, %for.body374, %sw.bb252, %sw.bb170, %sw.bb103, %sw.bb52, %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit, %for.body.for.body_crit_edge, %for.body.lr.ph, %arrayctor.cont, %arrayctor.cont.thread
  %m_nSpeakers1263 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %1667 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !243
  %conv1264 = uitofp i32 %1667 to float
  %call1265 = tail call float @sqrtf(float %conv1264) #24
  %div1266 = fdiv float 1.000000e+00, %call1265
  %1668 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !243
  %cmp12691667 = icmp eq i32 %1668, 0
  br i1 %cmp12691667, label %for.end1278, label %for.body1270

for.body1270:                                     ; preds = %for.body1270, %sw.epilog
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1270 ], [ 0, %sw.epilog ]
  %1669 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %1670 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1669, i64 %indvars.iv, i32 0
  %1671 = bitcast %class.CAmbisonicSource* %1670 to void (%class.CAmbisonicSource*, float)***
  %vtable1274 = load void (%class.CAmbisonicSource*, float)**, void (%class.CAmbisonicSource*, float)*** %1671, align 8, !tbaa !24
  %vfn1275 = getelementptr inbounds void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vtable1274, i64 12
  %1672 = load void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vfn1275, align 8
  tail call void %1672(%class.CAmbisonicSource* %1670, float %div1266)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1673 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !243
  %1674 = zext i32 %1673 to i64
  %cmp1269 = icmp ult i64 %indvars.iv.next, %1674
  br i1 %cmp1269, label %for.body1270, label %for.end1278

for.end1278:                                      ; preds = %for.body1270, %sw.epilog
  ret void
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder5ResetEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv, i32 0
  %3 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*)***
  %vtable = load void (%class.CAmbisonicSource*)**, void (%class.CAmbisonicSource*)*** %3, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vtable, i64 3
  %4 = load void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicSource* %2)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %6 = zext i32 %5 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to void (%class.CAmbisonicSpeaker*)***
  %vtable = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable, i64 4
  %3 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSpeaker* %arrayidx)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %5 = zext i32 %4 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf(%class.CAmbisonicDecoder* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float** nocapture readonly %ppfDst) local_unnamed_addr #7 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %cmp9 = icmp eq i32 %0, 0
  br i1 %cmp9, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %conv.i = zext i32 %nSamples to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %cmp1255.i = icmp eq i32 %nSamples, 0
  br i1 %cmp1255.i, label %for.body.us, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %1 = add i32 %nSamples, -1
  %2 = zext i32 %1 to i64
  %3 = add nuw nsw i64 %2, 1
  %4 = zext i32 %1 to i64
  %5 = add nuw nsw i64 %4, 1
  %6 = zext i32 %1 to i64
  %7 = add nuw nsw i64 %6, 1
  %8 = add i32 %nSamples, -1
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %7, 8589934584
  %12 = add nsw i64 %11, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %min.iters.check37 = icmp ult i64 %7, 8
  %n.vec50 = and i64 %7, 8589934584
  %ind.end54 = trunc i64 %n.vec50 to i32
  %xtraiter = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  %unroll_iter = sub nuw nsw i64 %14, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n59 = icmp eq i64 %7, %n.vec50
  %min.iters.check = icmp ult i64 %3, 8
  %n.vec = and i64 %3, 8589934584
  %ind.end = trunc i64 %n.vec to i32
  %xtraiter80 = and i64 %14, 1
  %16 = icmp eq i64 %12, 0
  %unroll_iter82 = sub nuw nsw i64 %14, %xtraiter80
  %lcmp.mod81 = icmp eq i64 %xtraiter80, 0
  %cmp.n = icmp eq i64 %3, %n.vec
  br label %for.body

for.body.us:                                      ; preds = %for.body.us, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.us ], [ 0, %for.body.lr.ph ]
  %arrayidx3.us = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv
  %17 = bitcast float** %arrayidx3.us to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !27
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 %mul.i, i1 false) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %19 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %20 = zext i32 %19 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %20
  br i1 %cmp.us, label %for.body.us, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.us, %entry
  ret void

for.body:                                         ; preds = %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, %for.body.preheader
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit ], [ 0, %for.body.preheader ]
  %21 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %arrayidx3 = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv12
  %22 = load float*, float** %arrayidx3, align 8, !tbaa !27
  %23 = bitcast float* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %mul.i, i1 false) #24
  %24 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 0, i32 4
  %25 = load i32, i32* %24, align 8, !tbaa !49
  %cmp63.i = icmp eq i32 %25, 0
  br i1 %cmp63.i, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.body
  %26 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 0, i32 2
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %indvars.iv12, i32 0, i32 1, i32 0, i32 0, i32 0
  %scevgep = getelementptr float, float* %22, i64 %5
  %scevgep39 = getelementptr float, float* %22, i64 %10
  %ind.end56 = getelementptr float, float* %22, i64 %n.vec50
  %ind.end20 = getelementptr float, float* %22, i64 %n.vec
  br label %for.body.us.i

for.body.us.i:                                    ; preds = %if.end.us.i, %for.body.lr.ph.i
  %27 = phi i32 [ %127, %if.end.us.i ], [ %25, %for.body.lr.ph.i ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end.us.i ], [ 0, %for.body.lr.ph.i ]
  %28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %28, i64 %indvars.iv.i
  %29 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !27
  %30 = load i8, i8* %26, align 4, !tbaa !48, !range !51
  %tobool.us.i = icmp eq i8 %30, 0
  %31 = load float*, float** %_M_start.i.i, align 8, !tbaa !60
  %add.ptr.i.us.i = getelementptr inbounds float, float* %31, i64 %indvars.iv.i
  %32 = load float, float* %add.ptr.i.us.i, align 4, !tbaa !34
  br i1 %tobool.us.i, label %for.body24.us.preheader.i, label %if.then.us.i

if.then.us.i:                                     ; preds = %for.body.us.i
  %conv5.us.i = fpext float %32 to double
  %33 = trunc i64 %indvars.iv.i to i32
  %conv6.us.i = uitofp i32 %33 to double
  %call7.us.i = tail call double @sqrt(double %conv6.us.i) #24
  %34 = tail call double @llvm.floor.f64(double %call7.us.i) #24
  %mul8.us.i = fmul double %34, 2.000000e+00
  %add.us.i = fadd double %mul8.us.i, 1.000000e+00
  %mul9.us.i = fmul double %add.us.i, %conv5.us.i
  %conv10.us.i = fptrunc double %mul9.us.i to float
  br i1 %min.iters.check37, label %for.body13.us.i.preheader, label %vector.memcheck47

vector.memcheck47:                                ; preds = %if.then.us.i
  %scevgep41 = getelementptr float, float* %29, i64 %10
  %bound043 = icmp ult float* %22, %scevgep41
  %bound144 = icmp ult float* %29, %scevgep39
  %found.conflict45 = and i1 %bound043, %bound144
  br i1 %found.conflict45, label %for.body13.us.i.preheader, label %vector.ph48

vector.ph48:                                      ; preds = %vector.memcheck47
  %ind.end58 = getelementptr float, float* %29, i64 %n.vec50
  %broadcast.splatinsert71 = insertelement <4 x float> undef, float %conv10.us.i, i32 0
  %broadcast.splat72 = shufflevector <4 x float> %broadcast.splatinsert71, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert73 = insertelement <4 x float> undef, float %conv10.us.i, i32 0
  %broadcast.splat74 = shufflevector <4 x float> %broadcast.splatinsert73, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %15, label %middle.block35.unr-lcssa, label %vector.body34

vector.body34:                                    ; preds = %vector.body34, %vector.ph48
  %index51 = phi i64 [ %index.next52.1, %vector.body34 ], [ 0, %vector.ph48 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body34 ], [ %unroll_iter, %vector.ph48 ]
  %next.gep65 = getelementptr float, float* %22, i64 %index51
  %next.gep67 = getelementptr float, float* %29, i64 %index51
  %35 = bitcast float* %next.gep67 to <4 x float>*
  %wide.load69 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !244
  %36 = getelementptr float, float* %next.gep67, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load70 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !244
  %38 = fmul <4 x float> %wide.load69, %broadcast.splat72
  %39 = fmul <4 x float> %wide.load70, %broadcast.splat74
  %40 = bitcast float* %next.gep65 to <4 x float>*
  %wide.load75 = load <4 x float>, <4 x float>* %40, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %41 = getelementptr float, float* %next.gep65, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load76 = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %43 = fadd <4 x float> %wide.load75, %38
  %44 = fadd <4 x float> %wide.load76, %39
  %45 = bitcast float* %next.gep65 to <4 x float>*
  store <4 x float> %43, <4 x float>* %45, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %46 = bitcast float* %41 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %index.next52 = or i64 %index51, 8
  %next.gep65.1 = getelementptr float, float* %22, i64 %index.next52
  %next.gep67.1 = getelementptr float, float* %29, i64 %index.next52
  %47 = bitcast float* %next.gep67.1 to <4 x float>*
  %wide.load69.1 = load <4 x float>, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !244
  %48 = getelementptr float, float* %next.gep67.1, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load70.1 = load <4 x float>, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !244
  %50 = fmul <4 x float> %wide.load69.1, %broadcast.splat72
  %51 = fmul <4 x float> %wide.load70.1, %broadcast.splat74
  %52 = bitcast float* %next.gep65.1 to <4 x float>*
  %wide.load75.1 = load <4 x float>, <4 x float>* %52, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %53 = getelementptr float, float* %next.gep65.1, i64 4
  %54 = bitcast float* %53 to <4 x float>*
  %wide.load76.1 = load <4 x float>, <4 x float>* %54, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %55 = fadd <4 x float> %wide.load75.1, %50
  %56 = fadd <4 x float> %wide.load76.1, %51
  %57 = bitcast float* %next.gep65.1 to <4 x float>*
  store <4 x float> %55, <4 x float>* %57, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %58 = bitcast float* %53 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %index.next52.1 = add i64 %index51, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block35.unr-lcssa, label %vector.body34, !llvm.loop !249

middle.block35.unr-lcssa:                         ; preds = %vector.body34, %vector.ph48
  %index51.unr = phi i64 [ 0, %vector.ph48 ], [ %index.next52.1, %vector.body34 ]
  br i1 %lcmp.mod, label %middle.block35, label %vector.body34.epil

vector.body34.epil:                               ; preds = %middle.block35.unr-lcssa
  %next.gep65.epil = getelementptr float, float* %22, i64 %index51.unr
  %next.gep67.epil = getelementptr float, float* %29, i64 %index51.unr
  %59 = bitcast float* %next.gep67.epil to <4 x float>*
  %wide.load69.epil = load <4 x float>, <4 x float>* %59, align 4, !tbaa !34, !alias.scope !244
  %60 = getelementptr float, float* %next.gep67.epil, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load70.epil = load <4 x float>, <4 x float>* %61, align 4, !tbaa !34, !alias.scope !244
  %62 = fmul <4 x float> %wide.load69.epil, %broadcast.splat72
  %63 = fmul <4 x float> %wide.load70.epil, %broadcast.splat74
  %64 = bitcast float* %next.gep65.epil to <4 x float>*
  %wide.load75.epil = load <4 x float>, <4 x float>* %64, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %65 = getelementptr float, float* %next.gep65.epil, i64 4
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load76.epil = load <4 x float>, <4 x float>* %66, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %67 = fadd <4 x float> %wide.load75.epil, %62
  %68 = fadd <4 x float> %wide.load76.epil, %63
  %69 = bitcast float* %next.gep65.epil to <4 x float>*
  store <4 x float> %67, <4 x float>* %69, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  %70 = bitcast float* %65 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !34, !alias.scope !247, !noalias !244
  br label %middle.block35

middle.block35:                                   ; preds = %vector.body34.epil, %middle.block35.unr-lcssa
  br i1 %cmp.n59, label %if.end.us.loopexit112.i, label %for.body13.us.i.preheader

for.body13.us.i.preheader:                        ; preds = %middle.block35, %vector.memcheck47, %if.then.us.i
  %niSample.058.us.i.ph = phi i32 [ 0, %vector.memcheck47 ], [ 0, %if.then.us.i ], [ %ind.end54, %middle.block35 ]
  %out.057.us.i.ph = phi float* [ %22, %vector.memcheck47 ], [ %22, %if.then.us.i ], [ %ind.end56, %middle.block35 ]
  %in.056.us.i.ph = phi float* [ %29, %vector.memcheck47 ], [ %29, %if.then.us.i ], [ %ind.end58, %middle.block35 ]
  %71 = sub i32 %nSamples, %niSample.058.us.i.ph
  %72 = xor i32 %niSample.058.us.i.ph, -1
  %73 = add i32 %72, %nSamples
  %xtraiter78 = and i32 %71, 3
  %lcmp.mod79 = icmp eq i32 %xtraiter78, 0
  br i1 %lcmp.mod79, label %for.body13.us.i.prol.loopexit, label %for.body13.us.i.prol

for.body13.us.i.prol:                             ; preds = %for.body13.us.i.prol, %for.body13.us.i.preheader
  %niSample.058.us.i.prol = phi i32 [ %inc.us.i.prol, %for.body13.us.i.prol ], [ %niSample.058.us.i.ph, %for.body13.us.i.preheader ]
  %out.057.us.i.prol = phi float* [ %incdec.ptr15.us.i.prol, %for.body13.us.i.prol ], [ %out.057.us.i.ph, %for.body13.us.i.preheader ]
  %in.056.us.i.prol = phi float* [ %incdec.ptr.us.i.prol, %for.body13.us.i.prol ], [ %in.056.us.i.ph, %for.body13.us.i.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.body13.us.i.prol ], [ %xtraiter78, %for.body13.us.i.preheader ]
  %incdec.ptr.us.i.prol = getelementptr inbounds float, float* %in.056.us.i.prol, i64 1
  %74 = load float, float* %in.056.us.i.prol, align 4, !tbaa !34
  %mul14.us.i.prol = fmul float %74, %conv10.us.i
  %incdec.ptr15.us.i.prol = getelementptr inbounds float, float* %out.057.us.i.prol, i64 1
  %75 = load float, float* %out.057.us.i.prol, align 4, !tbaa !34
  %add16.us.i.prol = fadd float %75, %mul14.us.i.prol
  store float %add16.us.i.prol, float* %out.057.us.i.prol, align 4, !tbaa !34
  %inc.us.i.prol = add nuw i32 %niSample.058.us.i.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body13.us.i.prol.loopexit, label %for.body13.us.i.prol, !llvm.loop !250

for.body13.us.i.prol.loopexit:                    ; preds = %for.body13.us.i.prol, %for.body13.us.i.preheader
  %niSample.058.us.i.unr = phi i32 [ %niSample.058.us.i.ph, %for.body13.us.i.preheader ], [ %inc.us.i.prol, %for.body13.us.i.prol ]
  %out.057.us.i.unr = phi float* [ %out.057.us.i.ph, %for.body13.us.i.preheader ], [ %incdec.ptr15.us.i.prol, %for.body13.us.i.prol ]
  %in.056.us.i.unr = phi float* [ %in.056.us.i.ph, %for.body13.us.i.preheader ], [ %incdec.ptr.us.i.prol, %for.body13.us.i.prol ]
  %76 = icmp ult i32 %73, 3
  br i1 %76, label %if.end.us.loopexit112.i, label %for.body13.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i, %for.body13.us.i.prol.loopexit
  %niSample.058.us.i = phi i32 [ %inc.us.i.3, %for.body13.us.i ], [ %niSample.058.us.i.unr, %for.body13.us.i.prol.loopexit ]
  %out.057.us.i = phi float* [ %incdec.ptr15.us.i.3, %for.body13.us.i ], [ %out.057.us.i.unr, %for.body13.us.i.prol.loopexit ]
  %in.056.us.i = phi float* [ %incdec.ptr.us.i.3, %for.body13.us.i ], [ %in.056.us.i.unr, %for.body13.us.i.prol.loopexit ]
  %incdec.ptr.us.i = getelementptr inbounds float, float* %in.056.us.i, i64 1
  %77 = load float, float* %in.056.us.i, align 4, !tbaa !34
  %mul14.us.i = fmul float %77, %conv10.us.i
  %incdec.ptr15.us.i = getelementptr inbounds float, float* %out.057.us.i, i64 1
  %78 = load float, float* %out.057.us.i, align 4, !tbaa !34
  %add16.us.i = fadd float %78, %mul14.us.i
  store float %add16.us.i, float* %out.057.us.i, align 4, !tbaa !34
  %incdec.ptr.us.i.1 = getelementptr inbounds float, float* %in.056.us.i, i64 2
  %79 = load float, float* %incdec.ptr.us.i, align 4, !tbaa !34
  %mul14.us.i.1 = fmul float %79, %conv10.us.i
  %incdec.ptr15.us.i.1 = getelementptr inbounds float, float* %out.057.us.i, i64 2
  %80 = load float, float* %incdec.ptr15.us.i, align 4, !tbaa !34
  %add16.us.i.1 = fadd float %80, %mul14.us.i.1
  store float %add16.us.i.1, float* %incdec.ptr15.us.i, align 4, !tbaa !34
  %incdec.ptr.us.i.2 = getelementptr inbounds float, float* %in.056.us.i, i64 3
  %81 = load float, float* %incdec.ptr.us.i.1, align 4, !tbaa !34
  %mul14.us.i.2 = fmul float %81, %conv10.us.i
  %incdec.ptr15.us.i.2 = getelementptr inbounds float, float* %out.057.us.i, i64 3
  %82 = load float, float* %incdec.ptr15.us.i.1, align 4, !tbaa !34
  %add16.us.i.2 = fadd float %82, %mul14.us.i.2
  store float %add16.us.i.2, float* %incdec.ptr15.us.i.1, align 4, !tbaa !34
  %incdec.ptr.us.i.3 = getelementptr inbounds float, float* %in.056.us.i, i64 4
  %83 = load float, float* %incdec.ptr.us.i.2, align 4, !tbaa !34
  %mul14.us.i.3 = fmul float %83, %conv10.us.i
  %incdec.ptr15.us.i.3 = getelementptr inbounds float, float* %out.057.us.i, i64 4
  %84 = load float, float* %incdec.ptr15.us.i.2, align 4, !tbaa !34
  %add16.us.i.3 = fadd float %84, %mul14.us.i.3
  store float %add16.us.i.3, float* %incdec.ptr15.us.i.2, align 4, !tbaa !34
  %inc.us.i.3 = add nuw i32 %niSample.058.us.i, 4
  %exitcond.i.3 = icmp eq i32 %inc.us.i.3, %nSamples
  br i1 %exitcond.i.3, label %if.end.us.loopexit112.i, label %for.body13.us.i, !llvm.loop !251

for.body24.us.preheader.i:                        ; preds = %for.body.us.i
  %mul21.us.i = fmul float %32, 2.000000e+00
  br i1 %min.iters.check, label %for.body24.us.i.preheader, label %vector.memcheck

for.body24.us.i.preheader:                        ; preds = %middle.block, %vector.memcheck, %for.body24.us.preheader.i
  %niSample.162.us.i.ph = phi i32 [ 0, %vector.memcheck ], [ 0, %for.body24.us.preheader.i ], [ %ind.end, %middle.block ]
  %out.161.us.i.ph = phi float* [ %22, %vector.memcheck ], [ %22, %for.body24.us.preheader.i ], [ %ind.end20, %middle.block ]
  %in.160.us.i.ph = phi float* [ %29, %vector.memcheck ], [ %29, %for.body24.us.preheader.i ], [ %ind.end22, %middle.block ]
  %85 = sub i32 %nSamples, %niSample.162.us.i.ph
  %86 = xor i32 %niSample.162.us.i.ph, -1
  %87 = add i32 %86, %nSamples
  %xtraiter84 = and i32 %85, 3
  %lcmp.mod85 = icmp eq i32 %xtraiter84, 0
  br i1 %lcmp.mod85, label %for.body24.us.i.prol.loopexit, label %for.body24.us.i.prol

for.body24.us.i.prol:                             ; preds = %for.body24.us.i.prol, %for.body24.us.i.preheader
  %niSample.162.us.i.prol = phi i32 [ %inc30.us.i.prol, %for.body24.us.i.prol ], [ %niSample.162.us.i.ph, %for.body24.us.i.preheader ]
  %out.161.us.i.prol = phi float* [ %incdec.ptr27.us.i.prol, %for.body24.us.i.prol ], [ %out.161.us.i.ph, %for.body24.us.i.preheader ]
  %in.160.us.i.prol = phi float* [ %incdec.ptr25.us.i.prol, %for.body24.us.i.prol ], [ %in.160.us.i.ph, %for.body24.us.i.preheader ]
  %prol.iter86 = phi i32 [ %prol.iter86.sub, %for.body24.us.i.prol ], [ %xtraiter84, %for.body24.us.i.preheader ]
  %incdec.ptr25.us.i.prol = getelementptr inbounds float, float* %in.160.us.i.prol, i64 1
  %88 = load float, float* %in.160.us.i.prol, align 4, !tbaa !34
  %mul26.us.i.prol = fmul float %mul21.us.i, %88
  %incdec.ptr27.us.i.prol = getelementptr inbounds float, float* %out.161.us.i.prol, i64 1
  %89 = load float, float* %out.161.us.i.prol, align 4, !tbaa !34
  %add28.us.i.prol = fadd float %89, %mul26.us.i.prol
  store float %add28.us.i.prol, float* %out.161.us.i.prol, align 4, !tbaa !34
  %inc30.us.i.prol = add nuw i32 %niSample.162.us.i.prol, 1
  %prol.iter86.sub = add i32 %prol.iter86, -1
  %prol.iter86.cmp = icmp eq i32 %prol.iter86.sub, 0
  br i1 %prol.iter86.cmp, label %for.body24.us.i.prol.loopexit, label %for.body24.us.i.prol, !llvm.loop !252

for.body24.us.i.prol.loopexit:                    ; preds = %for.body24.us.i.prol, %for.body24.us.i.preheader
  %niSample.162.us.i.unr = phi i32 [ %niSample.162.us.i.ph, %for.body24.us.i.preheader ], [ %inc30.us.i.prol, %for.body24.us.i.prol ]
  %out.161.us.i.unr = phi float* [ %out.161.us.i.ph, %for.body24.us.i.preheader ], [ %incdec.ptr27.us.i.prol, %for.body24.us.i.prol ]
  %in.160.us.i.unr = phi float* [ %in.160.us.i.ph, %for.body24.us.i.preheader ], [ %incdec.ptr25.us.i.prol, %for.body24.us.i.prol ]
  %90 = icmp ult i32 %87, 3
  br i1 %90, label %if.end.us.i, label %for.body24.us.i

vector.memcheck:                                  ; preds = %for.body24.us.preheader.i
  %scevgep17 = getelementptr float, float* %29, i64 %5
  %bound0 = icmp ult float* %22, %scevgep17
  %bound1 = icmp ult float* %29, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body24.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %ind.end22 = getelementptr float, float* %29, i64 %n.vec
  %broadcast.splatinsert28 = insertelement <4 x float> undef, float %mul21.us.i, i32 0
  %broadcast.splat29 = shufflevector <4 x float> %broadcast.splatinsert28, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <4 x float> undef, float %mul21.us.i, i32 0
  %broadcast.splat31 = shufflevector <4 x float> %broadcast.splatinsert30, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %16, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter83 = phi i64 [ %niter83.nsub.1, %vector.body ], [ %unroll_iter82, %vector.ph ]
  %next.gep = getelementptr float, float* %22, i64 %index
  %next.gep25 = getelementptr float, float* %29, i64 %index
  %91 = bitcast float* %next.gep25 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %91, align 4, !tbaa !34, !alias.scope !253
  %92 = getelementptr float, float* %next.gep25, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load27 = load <4 x float>, <4 x float>* %93, align 4, !tbaa !34, !alias.scope !253
  %94 = fmul <4 x float> %broadcast.splat29, %wide.load
  %95 = fmul <4 x float> %broadcast.splat31, %wide.load27
  %96 = bitcast float* %next.gep to <4 x float>*
  %wide.load32 = load <4 x float>, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %97 = getelementptr float, float* %next.gep, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load33 = load <4 x float>, <4 x float>* %98, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %99 = fadd <4 x float> %wide.load32, %94
  %100 = fadd <4 x float> %wide.load33, %95
  %101 = bitcast float* %next.gep to <4 x float>*
  store <4 x float> %99, <4 x float>* %101, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %102 = bitcast float* %97 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %22, i64 %index.next
  %next.gep25.1 = getelementptr float, float* %29, i64 %index.next
  %103 = bitcast float* %next.gep25.1 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %103, align 4, !tbaa !34, !alias.scope !253
  %104 = getelementptr float, float* %next.gep25.1, i64 4
  %105 = bitcast float* %104 to <4 x float>*
  %wide.load27.1 = load <4 x float>, <4 x float>* %105, align 4, !tbaa !34, !alias.scope !253
  %106 = fmul <4 x float> %broadcast.splat29, %wide.load.1
  %107 = fmul <4 x float> %broadcast.splat31, %wide.load27.1
  %108 = bitcast float* %next.gep.1 to <4 x float>*
  %wide.load32.1 = load <4 x float>, <4 x float>* %108, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %109 = getelementptr float, float* %next.gep.1, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load33.1 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %111 = fadd <4 x float> %wide.load32.1, %106
  %112 = fadd <4 x float> %wide.load33.1, %107
  %113 = bitcast float* %next.gep.1 to <4 x float>*
  store <4 x float> %111, <4 x float>* %113, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %114 = bitcast float* %109 to <4 x float>*
  store <4 x float> %112, <4 x float>* %114, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %index.next.1 = add i64 %index, 16
  %niter83.nsub.1 = add i64 %niter83, -2
  %niter83.ncmp.1 = icmp eq i64 %niter83.nsub.1, 0
  br i1 %niter83.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !258

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod81, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %next.gep.epil = getelementptr float, float* %22, i64 %index.unr
  %next.gep25.epil = getelementptr float, float* %29, i64 %index.unr
  %115 = bitcast float* %next.gep25.epil to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %115, align 4, !tbaa !34, !alias.scope !253
  %116 = getelementptr float, float* %next.gep25.epil, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  %wide.load27.epil = load <4 x float>, <4 x float>* %117, align 4, !tbaa !34, !alias.scope !253
  %118 = fmul <4 x float> %broadcast.splat29, %wide.load.epil
  %119 = fmul <4 x float> %broadcast.splat31, %wide.load27.epil
  %120 = bitcast float* %next.gep.epil to <4 x float>*
  %wide.load32.epil = load <4 x float>, <4 x float>* %120, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %121 = getelementptr float, float* %next.gep.epil, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load33.epil = load <4 x float>, <4 x float>* %122, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %123 = fadd <4 x float> %wide.load32.epil, %118
  %124 = fadd <4 x float> %wide.load33.epil, %119
  %125 = bitcast float* %next.gep.epil to <4 x float>*
  store <4 x float> %123, <4 x float>* %125, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  %126 = bitcast float* %121 to <4 x float>*
  store <4 x float> %124, <4 x float>* %126, align 4, !tbaa !34, !alias.scope !256, !noalias !253
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %if.end.us.i, label %for.body24.us.i.preheader

if.end.us.loopexit112.i:                          ; preds = %for.body13.us.i, %for.body13.us.i.prol.loopexit, %middle.block35
  %.pre.i = load i32, i32* %24, align 8, !tbaa !49
  br label %if.end.us.i

if.end.us.i:                                      ; preds = %for.body24.us.i, %if.end.us.loopexit112.i, %middle.block, %for.body24.us.i.prol.loopexit
  %127 = phi i32 [ %.pre.i, %if.end.us.loopexit112.i ], [ %27, %middle.block ], [ %27, %for.body24.us.i ], [ %27, %for.body24.us.i.prol.loopexit ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %128 = zext i32 %127 to i64
  %cmp.us.i = icmp ult i64 %indvars.iv.next.i, %128
  br i1 %cmp.us.i, label %for.body.us.i, label %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit

for.body24.us.i:                                  ; preds = %for.body24.us.i, %for.body24.us.i.prol.loopexit
  %niSample.162.us.i = phi i32 [ %inc30.us.i.3, %for.body24.us.i ], [ %niSample.162.us.i.unr, %for.body24.us.i.prol.loopexit ]
  %out.161.us.i = phi float* [ %incdec.ptr27.us.i.3, %for.body24.us.i ], [ %out.161.us.i.unr, %for.body24.us.i.prol.loopexit ]
  %in.160.us.i = phi float* [ %incdec.ptr25.us.i.3, %for.body24.us.i ], [ %in.160.us.i.unr, %for.body24.us.i.prol.loopexit ]
  %incdec.ptr25.us.i = getelementptr inbounds float, float* %in.160.us.i, i64 1
  %129 = load float, float* %in.160.us.i, align 4, !tbaa !34
  %mul26.us.i = fmul float %mul21.us.i, %129
  %incdec.ptr27.us.i = getelementptr inbounds float, float* %out.161.us.i, i64 1
  %130 = load float, float* %out.161.us.i, align 4, !tbaa !34
  %add28.us.i = fadd float %130, %mul26.us.i
  store float %add28.us.i, float* %out.161.us.i, align 4, !tbaa !34
  %incdec.ptr25.us.i.1 = getelementptr inbounds float, float* %in.160.us.i, i64 2
  %131 = load float, float* %incdec.ptr25.us.i, align 4, !tbaa !34
  %mul26.us.i.1 = fmul float %mul21.us.i, %131
  %incdec.ptr27.us.i.1 = getelementptr inbounds float, float* %out.161.us.i, i64 2
  %132 = load float, float* %incdec.ptr27.us.i, align 4, !tbaa !34
  %add28.us.i.1 = fadd float %132, %mul26.us.i.1
  store float %add28.us.i.1, float* %incdec.ptr27.us.i, align 4, !tbaa !34
  %incdec.ptr25.us.i.2 = getelementptr inbounds float, float* %in.160.us.i, i64 3
  %133 = load float, float* %incdec.ptr25.us.i.1, align 4, !tbaa !34
  %mul26.us.i.2 = fmul float %mul21.us.i, %133
  %incdec.ptr27.us.i.2 = getelementptr inbounds float, float* %out.161.us.i, i64 3
  %134 = load float, float* %incdec.ptr27.us.i.1, align 4, !tbaa !34
  %add28.us.i.2 = fadd float %134, %mul26.us.i.2
  store float %add28.us.i.2, float* %incdec.ptr27.us.i.1, align 4, !tbaa !34
  %incdec.ptr25.us.i.3 = getelementptr inbounds float, float* %in.160.us.i, i64 4
  %135 = load float, float* %incdec.ptr25.us.i.2, align 4, !tbaa !34
  %mul26.us.i.3 = fmul float %mul21.us.i, %135
  %incdec.ptr27.us.i.3 = getelementptr inbounds float, float* %out.161.us.i, i64 4
  %136 = load float, float* %incdec.ptr27.us.i.2, align 4, !tbaa !34
  %add28.us.i.3 = fadd float %136, %mul26.us.i.3
  store float %add28.us.i.3, float* %incdec.ptr27.us.i.2, align 4, !tbaa !34
  %inc30.us.i.3 = add nuw i32 %niSample.162.us.i, 4
  %exitcond114.i.3 = icmp eq i32 %inc30.us.i.3, %nSamples
  br i1 %exitcond114.i.3, label %if.end.us.i, label %for.body24.us.i, !llvm.loop !259

_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit: ; preds = %if.end.us.i, %for.body
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %137 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  %138 = zext i32 %137 to i64
  %cmp = icmp ult i64 %indvars.iv.next13, %138
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerSetUpEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !242
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !243
  ret i32 %0
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) local_unnamed_addr #16 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %3 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, <2 x float> %polPosition.coerce0, float %polPosition.coerce1)
  ret void
}

; Function Attrs: uwtable
define { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable, i64 6
  %3 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn, align 8
  %call = tail call { <2 x float>, float } %3(%class.CAmbisonicSource* %1)
  ret { <2 x float>, float } %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetOrderWeightEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder, float %fWeight) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 7
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nOrder, float %fWeight)
  ret void
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetOrderWeightEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 10
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nOrder)
  ret float %call
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel) unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 11
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nChannel)
  ret float %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetCoefficientEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel, float %fCoeff) local_unnamed_addr #3 align 2 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !240
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 9
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nChannel, float %fCoeff)
  ret void
}

declare float @_Z16DegreesToRadiansf(float) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicZoomerC2Ev(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !45
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !48
  %8 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !49
  %9 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !45
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !48
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !49
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1
  %3 = load i32, i32* %0, align 8, !tbaa !45
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %3, i32* %4, align 8, !tbaa !45
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 1, i8* %5, align 4, !tbaa !48
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %3, i1 zeroext true)
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i, i32* %6, align 8, !tbaa !49
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront, i32 0, i32 1)
  %7 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoderFront to void (%class.CAmbisonicDecoder*)***
  %vtable.i = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %7, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i, i64 4
  %8 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %8(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 2
  %9 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !243
  %cmp5.i = icmp eq i32 %9, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %10 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %10, i64 %indvars.iv.i
  %11 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i84 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %11, align 8, !tbaa !24
  %vfn.i85 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i84, i64 4
  %12 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i85, align 8
  tail call void %12(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %13 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !243
  %14 = zext i32 %13 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %14
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %entry
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float 0.000000e+00, float* %m_fZoomRed, align 4, !tbaa !260
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2
  %15 = load i32, i32* %2, align 8, !tbaa !49
  %conv = zext i32 %15 to i64
  %16 = shl nuw nsw i64 %conv, 2
  %call6 = tail call i8* @_Znam(i64 %16) #25
  %17 = ptrtoint i8* %call6 to i64
  %18 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront to i64*
  %19 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8, !tbaa !27
  store i64 %17, i64* %18, align 8, !tbaa !27
  %cmp.i86 = icmp eq float* %20, null
  br i1 %cmp.i86, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i

_ZNKSt14default_deleteIA_fEclEPf.exit.i:          ; preds = %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %21 = bitcast float* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #26
  %.pre = load i32, i32* %2, align 8, !tbaa !49
  %.pre154 = zext i32 %.pre to i64
  %.pre155 = shl nuw nsw i64 %.pre154, 2
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i, %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %.pre-phi = phi i64 [ %16, %_ZN17CAmbisonicDecoder7RefreshEv.exit ], [ %.pre155, %_ZNKSt14default_deleteIA_fEclEPf.exit.i ]
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3
  %call9 = tail call i8* @_Znam(i64 %.pre-phi) #25
  %22 = ptrtoint i8* %call9 to i64
  %23 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted to i64*
  %24 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load float*, float** %24, align 8, !tbaa !27
  store i64 %22, i64* %23, align 8, !tbaa !27
  %cmp.i87 = icmp eq float* %25, null
  br i1 %cmp.i87, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i88

_ZNKSt14default_deleteIA_fEclEPf.exit.i88:        ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
  %26 = bitcast float* %25 to i8*
  tail call void @_ZdaPv(i8* %26) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i88, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4
  %27 = load i32, i32* %0, align 8, !tbaa !45
  %add = add i32 %27, 1
  %conv11 = zext i32 %add to i64
  %28 = shl nuw nsw i64 %conv11, 2
  %call12 = tail call i8* @_Znam(i64 %28) #25
  %29 = ptrtoint i8* %call12 to i64
  %30 = bitcast %"class.std::unique_ptr.12"* %a_m to i64*
  %31 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %a_m, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8, !tbaa !27
  store i64 %29, i64* %30, align 8, !tbaa !27
  %cmp.i90 = icmp eq float* %32, null
  br i1 %cmp.i90, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i91

_ZNKSt14default_deleteIA_fEclEPf.exit.i91:        ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89
  %33 = bitcast float* %32 to i8*
  tail call void @_ZdaPv(i8* %33) #26
  %.pre153 = load i32, i32* %0, align 8, !tbaa !45
  %.pre156 = add i32 %.pre153, 1
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i91, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89
  %add14147.pre-phi = phi i32 [ %add, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89 ], [ %.pre156, %_ZNKSt14default_deleteIA_fEclEPf.exit.i91 ]
  %34 = phi i32 [ %27, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89 ], [ %.pre153, %_ZNKSt14default_deleteIA_fEclEPf.exit.i91 ]
  %cmp148 = icmp eq i32 %add14147.pre-phi, 0
  br i1 %cmp148, label %for.cond34.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92
  %35 = load float*, float** %31, align 8, !tbaa !27
  %36 = zext i32 %add14147.pre-phi to i64
  %cmp7.i = icmp eq i32 %34, 0
  br label %for.body

for.cond34.preheader:                             ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit142, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92
  %37 = load i32, i32* %2, align 8, !tbaa !49
  %cmp36145 = icmp eq i32 %37, 0
  br i1 %cmp36145, label %cleanup, label %for.body38.lr.ph

for.body38.lr.ph:                                 ; preds = %for.cond34.preheader
  %m_pAmbSpeakers.i128 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br label %for.body38

for.body:                                         ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit142, %for.body.lr.ph
  %indvars.iv151 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next152, %_ZN16CAmbisonicZoomer9factorialEj.exit142 ]
  %38 = trunc i64 %indvars.iv151 to i32
  %mul = shl i32 %38, 1
  %add15 = or i32 %mul, 1
  %conv16 = uitofp i32 %add15 to float
  br i1 %cmp7.i, label %for.body.i104.preheader, label %for.body.i94

for.cond.cleanup.loopexit.i:                      ; preds = %for.body.i94
  %phitmp.i = uitofp i32 %mul.i to float
  br label %for.body.i104.preheader

for.body.i94:                                     ; preds = %for.body.i94, %for.body
  %i.09.i = phi i32 [ %inc.i, %for.body.i94 ], [ 1, %for.body ]
  %ret.08.i = phi i32 [ %mul.i, %for.body.i94 ], [ 1, %for.body ]
  %mul.i = mul i32 %ret.08.i, %i.09.i
  %inc.i = add i32 %i.09.i, 1
  %cmp.i93 = icmp ugt i32 %inc.i, %34
  br i1 %cmp.i93, label %for.cond.cleanup.loopexit.i, label %for.body.i94

for.body.i104.preheader:                          ; preds = %for.cond.cleanup.loopexit.i, %for.body
  %ret.0.lcssa.i = phi float [ 1.000000e+00, %for.body ], [ %phitmp.i, %for.cond.cleanup.loopexit.i ]
  %mul19 = fmul float %ret.0.lcssa.i, %conv16
  br label %for.body.i104

for.body.i104:                                    ; preds = %for.body.i104, %for.body.i104.preheader
  %i.09.i99 = phi i32 [ %inc.i102, %for.body.i104 ], [ 1, %for.body.i104.preheader ]
  %ret.08.i100 = phi i32 [ %mul.i101, %for.body.i104 ], [ 1, %for.body.i104.preheader ]
  %mul.i101 = mul i32 %ret.08.i100, %i.09.i99
  %inc.i102 = add i32 %i.09.i99, 1
  %cmp.i103 = icmp ugt i32 %inc.i102, %add14147.pre-phi
  br i1 %cmp.i103, label %_ZN16CAmbisonicZoomer9factorialEj.exit105, label %for.body.i104

_ZN16CAmbisonicZoomer9factorialEj.exit105:        ; preds = %for.body.i104
  %phitmp.i96 = uitofp i32 %mul.i101 to float
  %mul23 = fmul float %mul19, %phitmp.i96
  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1
  %39 = trunc i64 %indvars.iv.next152 to i32
  %add26 = add i32 %34, %39
  %cmp7.i106 = icmp eq i32 %add26, 0
  br i1 %cmp7.i106, label %_ZN16CAmbisonicZoomer9factorialEj.exit116, label %for.body.i115

for.cond.cleanup.loopexit.i108:                   ; preds = %for.body.i115
  %phitmp.i107 = uitofp i32 %mul.i112 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit116

for.body.i115:                                    ; preds = %for.body.i115, %_ZN16CAmbisonicZoomer9factorialEj.exit105
  %i.09.i110 = phi i32 [ %inc.i113, %for.body.i115 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit105 ]
  %ret.08.i111 = phi i32 [ %mul.i112, %for.body.i115 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit105 ]
  %mul.i112 = mul i32 %ret.08.i111, %i.09.i110
  %inc.i113 = add i32 %i.09.i110, 1
  %cmp.i114 = icmp ugt i32 %inc.i113, %add26
  br i1 %cmp.i114, label %for.cond.cleanup.loopexit.i108, label %for.body.i115

_ZN16CAmbisonicZoomer9factorialEj.exit116:        ; preds = %for.cond.cleanup.loopexit.i108, %_ZN16CAmbisonicZoomer9factorialEj.exit105
  %ret.0.lcssa.i109 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit105 ], [ %phitmp.i107, %for.cond.cleanup.loopexit.i108 ]
  %sub = sub i32 %34, %38
  %cmp7.i132 = icmp eq i32 %sub, 0
  br i1 %cmp7.i132, label %_ZN16CAmbisonicZoomer9factorialEj.exit142, label %for.body.i141

for.cond.cleanup.loopexit.i134:                   ; preds = %for.body.i141
  %phitmp.i133 = uitofp i32 %mul.i138 to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit142

for.body.i141:                                    ; preds = %for.body.i141, %_ZN16CAmbisonicZoomer9factorialEj.exit116
  %i.09.i136 = phi i32 [ %inc.i139, %for.body.i141 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit116 ]
  %ret.08.i137 = phi i32 [ %mul.i138, %for.body.i141 ], [ 1, %_ZN16CAmbisonicZoomer9factorialEj.exit116 ]
  %mul.i138 = mul i32 %ret.08.i137, %i.09.i136
  %inc.i139 = add i32 %i.09.i136, 1
  %cmp.i140 = icmp ugt i32 %inc.i139, %sub
  br i1 %cmp.i140, label %for.cond.cleanup.loopexit.i134, label %for.body.i141

_ZN16CAmbisonicZoomer9factorialEj.exit142:        ; preds = %for.cond.cleanup.loopexit.i134, %_ZN16CAmbisonicZoomer9factorialEj.exit116
  %ret.0.lcssa.i135 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit116 ], [ %phitmp.i133, %for.cond.cleanup.loopexit.i134 ]
  %mul30 = fmul float %ret.0.lcssa.i109, %ret.0.lcssa.i135
  %div = fdiv float %mul23, %mul30
  %arrayidx.i144 = getelementptr inbounds float, float* %35, i64 %indvars.iv151
  store float %div, float* %arrayidx.i144, align 4, !tbaa !34
  %cmp = icmp ult i64 %indvars.iv.next152, %36
  br i1 %cmp, label %for.body, label %for.cond34.preheader

for.body38:                                       ; preds = %for.body38, %for.body38.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next, %for.body38 ]
  %40 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i128, align 8, !tbaa !240
  %41 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %40, i64 0, i32 0
  %42 = bitcast %class.CAmbisonicSpeaker* %40 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i129 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %42, align 8, !tbaa !24
  %vfn.i130 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i129, i64 11
  %43 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i130, align 8
  %44 = trunc i64 %indvars.iv to i32
  %call.i131 = tail call float %43(%class.CAmbisonicSource* %41, i32 %44)
  %45 = load float*, float** %19, align 8, !tbaa !27
  %arrayidx.i127 = getelementptr inbounds float, float* %45, i64 %indvars.iv
  store float %call.i131, float* %arrayidx.i127, align 4, !tbaa !34
  %conv44 = uitofp i32 %44 to double
  %call45 = tail call double @sqrt(double %conv44) #24
  %46 = tail call double @llvm.floor.f64(double %call45)
  %conv46 = fptosi double %46 to i32
  %47 = load float*, float** %19, align 8, !tbaa !27
  %arrayidx.i125 = getelementptr inbounds float, float* %47, i64 %indvars.iv
  %48 = load float, float* %arrayidx.i125, align 4, !tbaa !34
  %conv51 = zext i32 %conv46 to i64
  %49 = load float*, float** %31, align 8, !tbaa !27
  %arrayidx.i123 = getelementptr inbounds float, float* %49, i64 %conv51
  %50 = load float, float* %arrayidx.i123, align 4, !tbaa !34
  %mul53 = fmul float %48, %50
  %51 = load float*, float** %24, align 8, !tbaa !27
  %arrayidx.i121 = getelementptr inbounds float, float* %51, i64 %indvars.iv
  store float %mul53, float* %arrayidx.i121, align 4, !tbaa !34
  %52 = load float, float* %arrayidx.i125, align 4, !tbaa !34
  %mul63 = fmul float %mul53, %52
  %53 = load float, float* %m_AmbFrontMic, align 8, !tbaa !264
  %add64 = fadd float %53, %mul63
  store float %add64, float* %m_AmbFrontMic, align 8, !tbaa !264
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %54 = load i32, i32* %2, align 8, !tbaa !49
  %55 = zext i32 %54 to i64
  %cmp36 = icmp ult i64 %indvars.iv.next, %55
  br i1 %cmp36, label %for.body38, label %cleanup

cleanup:                                          ; preds = %for.body38, %for.cond34.preheader
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* nocapture readnone %this, i32 %M) local_unnamed_addr #8 align 2 {
entry:
  %cmp7 = icmp eq i32 %M, 0
  br i1 %cmp7, label %for.cond.cleanup, label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %phitmp = uitofp i32 %mul to float
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %ret.0.lcssa = phi float [ 1.000000e+00, %entry ], [ %phitmp, %for.cond.cleanup.loopexit ]
  ret float %ret.0.lcssa

for.body:                                         ; preds = %for.body, %entry
  %i.09 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %ret.08 = phi i32 [ %mul, %for.body ], [ 1, %entry ]
  %mul = mul i32 %i.09, %ret.08
  %inc = add i32 %i.09, 1
  %cmp = icmp ugt i32 %inc, %M
  br i1 %cmp, label %for.cond.cleanup.loopexit, label %for.body
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicZoomer5ResetEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7RefreshEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #9 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !265
  %mul = fmul float %0, %0
  %sub = fsub float 1.000000e+00, %mul
  %call = tail call float @sqrtf(float %sub) #24
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float %call, float* %m_fZoomRed, align 4, !tbaa !260
  %1 = load float, float* %m_fZoom, align 8, !tbaa !265
  %sub4 = fsub float 1.000000e+00, %1
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  store float %sub4, float* %m_fZoomBlend, align 4, !tbaa !266
  ret void
}

; Function Attrs: nounwind uwtable writeonly
define void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* nocapture %this, float %fZoom) local_unnamed_addr #17 align 2 {
entry:
  %fZoom.addr = alloca float, align 4
  %ref.tmp = alloca float, align 4
  store float %fZoom, float* %fZoom.addr, align 4, !tbaa !34
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp, align 4, !tbaa !34
  %cmp.i = fcmp ogt float %fZoom, 0x3FEFAE1480000000
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %fZoom.addr
  %0 = bitcast float* %__b.__a.i to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !34
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %2 = bitcast float* %m_fZoom to i32*
  store i32 %1, i32* %2, align 8, !tbaa !265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicZoomer7GetZoomEv(%class.CAmbisonicZoomer* nocapture readonly %this) local_unnamed_addr #6 align 2 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !265
  ret float %0
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 {
entry:
  %cmp103 = icmp eq i32 %nSamples, 0
  br i1 %cmp103, label %for.cond.cleanup, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !49
  %cmp397 = icmp eq i32 %1, 0
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br i1 %cmp397, label %for.cond2.preheader.preheader, label %for.cond2.preheader.us.preheader

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph
  %wide.trip.count120 = zext i32 %nSamples to i64
  %2 = add nsw i64 %wide.trip.count120, -1
  %xtraiter = and i64 %wide.trip.count120, 7
  %3 = icmp ult i64 %2, 7
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond2.preheader.preheader.new

for.cond2.preheader.preheader.new:                ; preds = %for.cond2.preheader.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count120, %xtraiter
  br label %for.cond.cleanup12

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i93 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112 = zext i32 %nSamples to i64
  %.pre = load float*, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %.pre122 = load float**, float*** %_M_head_impl.i.i.i.i.i.i95, align 8, !tbaa !27
  %4 = zext i32 %1 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i93, align 8, !tbaa !27
  %6 = add nsw i64 %4, -1
  %xtraiter126 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter130 = sub nsw i64 %4, %xtraiter126
  %lcmp.mod128 = icmp eq i64 %xtraiter126, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond.cleanup12.us, %for.cond2.preheader.us.preheader
  %indvars.iv110 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next111, %for.cond.cleanup12.us ]
  br i1 %7, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.cond.cleanup12.us:                            ; preds = %for.inc52.us
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond113 = icmp eq i64 %indvars.iv.next111, %wide.trip.count112
  br i1 %exitcond113, label %for.cond.cleanup, label %for.cond2.preheader.us

for.body13.us:                                    ; preds = %for.body13.us.preheader, %for.inc52.us
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc52.us ], [ 0, %for.body13.us.preheader ]
  %arrayidx.i94.us = getelementptr inbounds float, float* %5, i64 %indvars.iv108
  %8 = load float, float* %arrayidx.i94.us, align 4, !tbaa !34
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us = fpext float %9 to double
  %cmp18.us = fcmp ogt double %conv17.us, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us, label %if.then.us, label %if.else.us

if.else.us:                                       ; preds = %for.body13.us
  %arrayidx.i86.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %10 = load float*, float** %arrayidx.i86.us, align 8, !tbaa !27
  %arrayidx45.us = getelementptr inbounds float, float* %10, i64 %indvars.iv110
  %11 = load float, float* %arrayidx45.us, align 4, !tbaa !34
  %12 = load float, float* %m_fZoomRed, align 4, !tbaa !260
  %mul46.us = fmul float %11, %12
  store float %mul46.us, float* %arrayidx45.us, align 4, !tbaa !34
  br label %for.inc52.us

if.then.us:                                       ; preds = %for.body13.us
  %13 = load float, float* %m_fZoomBlend, align 4, !tbaa !266
  %arrayidx.i92.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %14 = load float*, float** %arrayidx.i92.us, align 8, !tbaa !27
  %arrayidx23.us = getelementptr inbounds float, float* %14, i64 %indvars.iv110
  %15 = load float, float* %arrayidx23.us, align 4, !tbaa !34
  %mul24.us = fmul float %13, %15
  %16 = load float, float* %m_fZoom, align 8, !tbaa !265
  %mul28.us = fmul float %8, %16
  %mul29.us = fmul float %add.us.lcssa, %mul28.us
  %add30.us = fadd float %mul24.us, %mul29.us
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic, align 8, !tbaa !264
  %mul34.us = fmul float %17, %18
  %add35.us = fadd float %13, %mul34.us
  %div.us = fdiv float %add30.us, %add35.us
  store float %div.us, float* %arrayidx23.us, align 4, !tbaa !34
  br label %for.inc52.us

for.inc52.us:                                     ; preds = %if.then.us, %if.else.us
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %4
  br i1 %exitcond, label %for.cond.cleanup12.us, label %for.body13.us

for.body5.us:                                     ; preds = %for.body5.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body5.us ], [ 0, %for.cond2.preheader.us ]
  %fMic.098.us = phi float [ %add.us.3, %for.body5.us ], [ 0.000000e+00, %for.cond2.preheader.us ]
  %niter131 = phi i64 [ %niter131.nsub.3, %for.body5.us ], [ %unroll_iter130, %for.cond2.preheader.us ]
  %arrayidx.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv
  %19 = load float, float* %arrayidx.i.us, align 4, !tbaa !34
  %arrayidx.i96.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv
  %20 = load float*, float** %arrayidx.i96.us, align 8, !tbaa !27
  %arrayidx.us = getelementptr inbounds float, float* %20, i64 %indvars.iv110
  %21 = load float, float* %arrayidx.us, align 4, !tbaa !34
  %mul.us = fmul float %19, %21
  %add.us = fadd float %fMic.098.us, %mul.us
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.us.1 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next
  %22 = load float, float* %arrayidx.i.us.1, align 4, !tbaa !34
  %arrayidx.i96.us.1 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i96.us.1, align 8, !tbaa !27
  %arrayidx.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110
  %24 = load float, float* %arrayidx.us.1, align 4, !tbaa !34
  %mul.us.1 = fmul float %22, %24
  %add.us.1 = fadd float %add.us, %mul.us.1
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.us.2 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.1
  %25 = load float, float* %arrayidx.i.us.2, align 4, !tbaa !34
  %arrayidx.i96.us.2 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.1
  %26 = load float*, float** %arrayidx.i96.us.2, align 8, !tbaa !27
  %arrayidx.us.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110
  %27 = load float, float* %arrayidx.us.2, align 4, !tbaa !34
  %mul.us.2 = fmul float %25, %27
  %add.us.2 = fadd float %add.us.1, %mul.us.2
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.us.3 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.2
  %28 = load float, float* %arrayidx.i.us.3, align 4, !tbaa !34
  %arrayidx.i96.us.3 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.2
  %29 = load float*, float** %arrayidx.i96.us.3, align 8, !tbaa !27
  %arrayidx.us.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110
  %30 = load float, float* %arrayidx.us.3, align 4, !tbaa !34
  %mul.us.3 = fmul float %28, %30
  %add.us.3 = fadd float %add.us.2, %mul.us.3
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter131.nsub.3 = add i64 %niter131, -4
  %niter131.ncmp.3 = icmp eq i64 %niter131.nsub.3, 0
  br i1 %niter131.ncmp.3, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.body13.us.preheader.unr-lcssa:                ; preds = %for.body5.us, %for.cond2.preheader.us
  %add.us.lcssa.ph = phi float [ undef, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body5.us ]
  %fMic.098.us.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  br i1 %lcmp.mod128, label %for.body13.us.preheader, label %for.body5.us.epil

for.body5.us.epil:                                ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.us.epil ], [ %indvars.iv.unr, %for.body13.us.preheader.unr-lcssa ]
  %fMic.098.us.epil = phi float [ %add.us.epil, %for.body5.us.epil ], [ %fMic.098.us.unr, %for.body13.us.preheader.unr-lcssa ]
  %epil.iter127 = phi i64 [ %epil.iter127.sub, %for.body5.us.epil ], [ %xtraiter126, %for.body13.us.preheader.unr-lcssa ]
  %arrayidx.i.us.epil = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.epil
  %31 = load float, float* %arrayidx.i.us.epil, align 4, !tbaa !34
  %arrayidx.i96.us.epil = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.epil
  %32 = load float*, float** %arrayidx.i96.us.epil, align 8, !tbaa !27
  %arrayidx.us.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110
  %33 = load float, float* %arrayidx.us.epil, align 4, !tbaa !34
  %mul.us.epil = fmul float %31, %33
  %add.us.epil = fadd float %fMic.098.us.epil, %mul.us.epil
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter127.sub = add i64 %epil.iter127, -1
  %epil.iter127.cmp = icmp eq i64 %epil.iter127.sub, 0
  br i1 %epil.iter127.cmp, label %for.body13.us.preheader, label %for.body5.us.epil, !llvm.loop !267

for.body13.us.preheader:                          ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %add.us.lcssa = phi float [ %add.us.lcssa.ph, %for.body13.us.preheader.unr-lcssa ], [ %add.us.epil, %for.body5.us.epil ]
  br label %for.body13.us

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.cond.cleanup12.epil

for.cond.cleanup12.epil:                          ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %epil.iter = phi i64 [ %epil.iter.sub, %for.cond.cleanup12.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.cond.cleanup12.epil, !llvm.loop !268

for.cond.cleanup:                                 ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond.cleanup12.us, %entry
  ret void

for.cond.cleanup12:                               ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader.new
  %niter = phi i64 [ %unroll_iter, %for.cond2.preheader.preheader.new ], [ %niter.nsub.7, %for.cond.cleanup12 ]
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond.cleanup12
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !48
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !49
  %4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !45
  %7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !48
  %8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !49
  %9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8
  %11 = bitcast %"class.std::unique_ptr.20"* %m_pFFT_cfg to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %11, align 8, !tbaa !27
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9
  %12 = bitcast %"class.std::unique_ptr.20"* %m_pIFFT_cfg to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %12, align 8, !tbaa !269
  %13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %14 = bitcast i32* %m_nBlockSize to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false)
  %15 = bitcast %"struct.std::_Head_base.25"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 184, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate, i32 %nBlockSize, i32* nocapture dereferenceable(4) %tailLength, %"class.std::__cxx11::basic_string"* nocapture readonly %HRTFPath) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %pfHRTF = alloca [2 x float*], align 16
  %myEncoder = alloca %class.CAmbisonicEncoder, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !271
  %_M_p.i14.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 0, i32 0
  %2 = load i8*, i8** %_M_p.i14.i, align 8, !tbaa !273
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !276
  %cmp.i.i.i.i.i = icmp ne i8* %2, null
  %cmp.i.i.i.i = icmp eq i64 %3, 0
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0)) #27
  unreachable

if.end.i.i.i.i:                                   ; preds = %entry
  %4 = bitcast %union.anon* %0 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #24
  store i64 %3, i64* %__dnew.i.i.i.i, align 8, !tbaa !277
  %cmp3.i.i.i.i = icmp ugt i64 %3, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i12.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  %_M_p.i18.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i12.i, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !273
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !277
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !278
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.i.i.i.i
  %7 = phi i8* [ %call5.i.i.i12.i, %if.then4.i.i.i.i ], [ %4, %if.end.i.i.i.i ]
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  switch i64 %3, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %8 = load i8, i8* %2, align 1, !tbaa !278
  store i8 %8, i8* %7, align 1, !tbaa !278
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %2, i64 %3, i1 false) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !277
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !276
  %10 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24
  %call.i428 = invoke i8* @_Znwm(i64 16) #25
          to label %call.i.noexc unwind label %lpad

call.i.noexc:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %11 = bitcast i8* %call.i428 to i32 (...)***
  %i_sampleRate2.i.i.i = getelementptr inbounds i8, i8* %call.i428, i64 8
  %12 = bitcast i8* %i_sampleRate2.i.i.i to i32*
  store i32 %nSampleRate, i32* %12, align 8, !tbaa !18
  %i_len.i.i.i = getelementptr inbounds i8, i8* %call.i428, i64 12
  %13 = bitcast i8* %i_len.i.i.i to i32*
  store i32 0, i32* %13, align 4, !tbaa !23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !24
  %call.i10.i = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate)
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %call.i.noexc
  store i32 %call.i10.i, i32* %13, align 4, !tbaa !23
  %14 = bitcast i8* %call.i428 to %class.HRTF*
  %cmp.i.i = icmp eq i32 %call.i10.i, 0
  br i1 %cmp.i.i, label %delete.notnull.i, label %invoke.cont

lpad.i:                                           ; preds = %call.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call.i428) #26
  br label %lpad.body

delete.notnull.i:                                 ; preds = %invoke.cont.i
  %16 = bitcast i8* %call.i428 to void (%class.HRTF*)***
  %vtable.i = load void (%class.HRTF*)**, void (%class.HRTF*)*** %16, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable.i, i64 1
  %17 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn.i, align 8
  call void %17(%class.HRTF* nonnull %14) #24
  br label %invoke.cont

invoke.cont:                                      ; preds = %delete.notnull.i, %invoke.cont.i
  %retval.0.i = phi %class.HRTF* [ null, %delete.notnull.i ], [ %14, %invoke.cont.i ]
  %18 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont
  call void @_ZdlPv(i8* %18) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont
  %cmp = icmp eq %class.HRTF* %retval.0.i, null
  br i1 %cmp, label %cleanup307, label %if.end

lpad:                                             ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %19 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.body

lpad.body:                                        ; preds = %lpad, %lpad.i
  %eh.lpad-body = phi { i8*, i32 } [ %19, %lpad ], [ %15, %lpad.i ]
  %20 = extractvalue { i8*, i32 } %eh.lpad-body, 0
  %21 = extractvalue { i8*, i32 } %eh.lpad-body, 1
  %22 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i432 = icmp eq i8* %22, %4
  br i1 %cmp.i.i.i432, label %ehcleanup308, label %if.then.i.i433

if.then.i.i433:                                   ; preds = %lpad.body
  call void @_ZdlPv(i8* %22) #24
  br label %ehcleanup308

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %i_len.i = getelementptr inbounds %class.HRTF, %class.HRTF* %retval.0.i, i64 0, i32 2
  %23 = load i32, i32* %i_len.i, align 4, !tbaa !23
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 3
  store i32 %23, i32* %m_nTaps, align 4, !tbaa !279
  store i32 %23, i32* %tailLength, align 4, !tbaa !26
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  store i32 %nBlockSize, i32* %m_nBlockSize, align 8, !tbaa !285
  %24 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %cmp5 = icmp ugt i32 %24, %nBlockSize
  %nBlockSize. = select i1 %cmp5, i32 %nBlockSize, i32 %24
  %cond = add i32 %nBlockSize., -1
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !286
  %add = add i32 %24, %nBlockSize
  %add13 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end
  %storemerge = phi i32 [ 1, %if.end ], [ %shl, %while.cond ]
  %cmp14 = icmp ult i32 %storemerge, %add13
  %shl = shl i32 %storemerge, 1
  br i1 %cmp14, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !287
  %div = lshr i32 %storemerge, 1
  %add17 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  store i32 %add17, i32* %m_nFFTBins, align 4, !tbaa !288
  %conv = uitofp i32 %storemerge to float
  %div19 = fdiv float 1.000000e+00, %conv
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  store float %div19, float* %m_fFFTScaler, align 8, !tbaa !289
  %frombool.i = zext i1 %b3D to i8
  %25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %25, align 8, !tbaa !45
  %26 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %26, align 4, !tbaa !48
  %call.i = call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %27 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %27, align 8, !tbaa !49
  %28 = bitcast %class.CAmbisonicBinauralizer* %this to void (%class.CAmbisonicBinauralizer*)***
  %vtable = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %28, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable, i64 6
  %29 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn, align 8
  call void %29(%class.CAmbisonicBinauralizer* nonnull %this)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %30 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !243
  %vtable22 = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %28, align 8, !tbaa !24
  %vfn23 = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable22, i64 7
  %31 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn23, align 8
  call void %31(%class.CAmbisonicBinauralizer* nonnull %this)
  %32 = bitcast [2 x float*]* %pfHRTF to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #24
  %33 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %conv26 = zext i32 %33 to i64
  %34 = shl nuw nsw i64 %conv26, 2
  %call27 = call i8* @_Znam(i64 %34) #25
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %35 = bitcast [2 x float*]* %pfHRTF to i8**
  store i8* %call27, i8** %35, align 16, !tbaa !27
  %call27.1 = call i8* @_Znam(i64 %34) #25
  %arrayidx.1 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %36 = bitcast float** %arrayidx.1 to i8**
  store i8* %call27.1, i8** %36, align 8, !tbaa !27
  %37 = load i32, i32* %27, align 8, !tbaa !49
  %conv31 = zext i32 %37 to i64
  %38 = shl nuw nsw i64 %conv31, 3
  %cmp37520 = icmp eq i32 %37, 0
  %call32 = call i8* @_Znam(i64 %38) #25
  br i1 %cmp37520, label %for.cond52.preheader.thread, label %for.body30.us.preheader

for.cond52.preheader.thread:                      ; preds = %while.end
  %call32.1 = call i8* @_Znam(i64 %38) #25
  %39 = bitcast i8* %call32 to float**
  %40 = bitcast i8* %call32.1 to float**
  br label %delete.notnull

for.body30.us.preheader:                          ; preds = %while.end
  %41 = bitcast i8* %call32 to float**
  br label %for.body38.us

for.body38.us:                                    ; preds = %for.body38.us, %for.body30.us.preheader
  %indvars.iv570 = phi i64 [ 0, %for.body30.us.preheader ], [ %indvars.iv.next571, %for.body38.us ]
  %call41.us = call i8* @_Znam(i64 %34) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us, i8 0, i64 %34, i1 false)
  %arrayidx45.us = getelementptr inbounds float*, float** %41, i64 %indvars.iv570
  %42 = bitcast float** %arrayidx45.us to i8**
  store i8* %call41.us, i8** %42, align 8, !tbaa !27
  %indvars.iv.next571 = add nuw nsw i64 %indvars.iv570, 1
  %exitcond573 = icmp eq i64 %indvars.iv.next571, %conv31
  br i1 %exitcond573, label %for.cond35.for.inc49_crit_edge.us, label %for.body38.us

for.cond35.for.inc49_crit_edge.us:                ; preds = %for.body38.us
  %call32.us.1 = call i8* @_Znam(i64 %38) #25
  %43 = bitcast i8* %call32.us.1 to float**
  br label %for.body38.us.1

for.cond52.preheader:                             ; preds = %for.body38.us.1
  br i1 %cmp37520, label %delete.notnull, label %for.cond56.preheader.lr.ph

for.cond56.preheader.lr.ph:                       ; preds = %for.cond52.preheader
  %cmp57514 = icmp eq i32 %30, 0
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %44 = bitcast %class.HRTF* %retval.0.i to i1 (%class.HRTF*, float, float, float**)***
  %wide.trip.count566 = zext i32 %30 to i64
  br label %for.cond56.preheader

for.cond56.preheader:                             ; preds = %for.inc120, %for.cond56.preheader.lr.ph
  %45 = phi i32 [ %37, %for.cond56.preheader.lr.ph ], [ %174, %for.inc120 ]
  %indvars.iv568 = phi i64 [ 0, %for.cond56.preheader.lr.ph ], [ %indvars.iv.next569, %for.inc120 ]
  br i1 %cmp57514, label %for.inc120, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.cond56.preheader
  %46 = trunc i64 %indvars.iv568 to i32
  %conv71 = uitofp i32 %46 to double
  %arrayidx100 = getelementptr inbounds float*, float** %41, i64 %indvars.iv568
  %arrayidx109 = getelementptr inbounds float*, float** %43, i64 %indvars.iv568
  br label %for.body58

for.body58:                                       ; preds = %for.inc117, %for.body58.lr.ph
  %indvars.iv564 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next565, %for.inc117 ]
  %47 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %48 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %47, i64 %indvars.iv564, i32 0
  %49 = bitcast %class.CAmbisonicSource* %48 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable.i436 = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %49, align 8, !tbaa !24
  %vfn.i437 = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable.i436, i64 6
  %50 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn.i437, align 8
  %call.i438 = call { <2 x float>, float } %50(%class.CAmbisonicSource* %48)
  %call60.fca.0.extract = extractvalue { <2 x float>, float } %call.i438, 0
  %position.sroa.0.0.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 0
  %position.sroa.0.4.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 1
  %vtable61 = load i1 (%class.HRTF*, float, float, float**)**, i1 (%class.HRTF*, float, float, float**)*** %44, align 8, !tbaa !24
  %vfn62 = getelementptr inbounds i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vtable61, i64 2
  %51 = load i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vfn62, align 8
  %call63 = call zeroext i1 %51(%class.HRTF* nonnull %retval.0.i, float %position.sroa.0.0.vec.extract, float %position.sroa.0.4.vec.extract, float** nonnull %arrayidx)
  br i1 %call63, label %if.end67, label %cleanup301

if.end67:                                         ; preds = %for.body58
  %52 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %53 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %52, i64 %indvars.iv564, i32 0
  %54 = bitcast %class.CAmbisonicSource* %53 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i441 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %54, align 8, !tbaa !24
  %vfn.i442 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i441, i64 11
  %55 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i442, align 8
  %call.i443 = call float %55(%class.CAmbisonicSource* %53, i32 %46)
  %conv70 = fpext float %call.i443 to double
  %call72 = call double @sqrt(double %conv71) #24
  %56 = call double @llvm.floor.f64(double %call72)
  %mul = fmul double %56, 2.000000e+00
  %add73 = fadd double %mul, 1.000000e+00
  %mul74 = fmul double %add73, %conv70
  %conv75 = fptrunc double %mul74 to float
  %57 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %cmp78509 = icmp eq i32 %57, 0
  br i1 %cmp78509, label %for.inc117, label %for.body79.lr.ph

for.body79.lr.ph:                                 ; preds = %if.end67
  %58 = load float*, float** %arrayidx, align 16, !tbaa !27
  %59 = load float*, float** %arrayidx.1, align 8, !tbaa !27
  %60 = zext i32 %57 to i64
  %min.iters.check648 = icmp ult i32 %57, 8
  br i1 %min.iters.check648, label %for.body79.preheader, label %vector.memcheck658

for.body79.preheader:                             ; preds = %middle.block646, %vector.memcheck658, %for.body79.lr.ph
  %indvars.iv558.ph = phi i64 [ 0, %vector.memcheck658 ], [ 0, %for.body79.lr.ph ], [ %n.vec661, %middle.block646 ]
  br label %for.body79

vector.memcheck658:                               ; preds = %for.body79.lr.ph
  %scevgep650 = getelementptr float, float* %58, i64 %60
  %scevgep652 = getelementptr float, float* %59, i64 %60
  %bound0654 = icmp ult float* %58, %scevgep652
  %bound1655 = icmp ult float* %59, %scevgep650
  %found.conflict656 = and i1 %bound0654, %bound1655
  br i1 %found.conflict656, label %for.body79.preheader, label %vector.ph659

vector.ph659:                                     ; preds = %vector.memcheck658
  %n.vec661 = and i64 %60, 4294967288
  %broadcast.splatinsert672 = insertelement <4 x float> undef, float %conv75, i32 0
  %broadcast.splat673 = shufflevector <4 x float> %broadcast.splatinsert672, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert674 = insertelement <4 x float> undef, float %conv75, i32 0
  %broadcast.splat675 = shufflevector <4 x float> %broadcast.splatinsert674, <4 x float> undef, <4 x i32> zeroinitializer
  %61 = add nsw i64 %n.vec661, -8
  %62 = lshr exact i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %xtraiter766 = and i64 %63, 1
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %middle.block646.unr-lcssa, label %vector.ph659.new

vector.ph659.new:                                 ; preds = %vector.ph659
  %unroll_iter768 = sub nuw nsw i64 %63, %xtraiter766
  br label %vector.body645

vector.body645:                                   ; preds = %vector.body645, %vector.ph659.new
  %index662 = phi i64 [ 0, %vector.ph659.new ], [ %index.next663.1, %vector.body645 ]
  %niter769 = phi i64 [ %unroll_iter768, %vector.ph659.new ], [ %niter769.nsub.1, %vector.body645 ]
  %65 = getelementptr inbounds float, float* %58, i64 %index662
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load670 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load671 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %69 = fmul <4 x float> %wide.load670, %broadcast.splat673
  %70 = fmul <4 x float> %wide.load671, %broadcast.splat675
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %73 = getelementptr inbounds float, float* %59, i64 %index662
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load676 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !34, !alias.scope !293
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load677 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !34, !alias.scope !293
  %77 = fmul <4 x float> %wide.load676, %broadcast.splat673
  %78 = fmul <4 x float> %wide.load677, %broadcast.splat675
  %79 = bitcast float* %73 to <4 x float>*
  store <4 x float> %77, <4 x float>* %79, align 4, !tbaa !34, !alias.scope !293
  %80 = bitcast float* %75 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 4, !tbaa !34, !alias.scope !293
  %index.next663 = or i64 %index662, 8
  %81 = getelementptr inbounds float, float* %58, i64 %index.next663
  %82 = bitcast float* %81 to <4 x float>*
  %wide.load670.1 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %83 = getelementptr inbounds float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load671.1 = load <4 x float>, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %85 = fmul <4 x float> %wide.load670.1, %broadcast.splat673
  %86 = fmul <4 x float> %wide.load671.1, %broadcast.splat675
  %87 = bitcast float* %81 to <4 x float>*
  store <4 x float> %85, <4 x float>* %87, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %88 = bitcast float* %83 to <4 x float>*
  store <4 x float> %86, <4 x float>* %88, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %89 = getelementptr inbounds float, float* %59, i64 %index.next663
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load676.1 = load <4 x float>, <4 x float>* %90, align 4, !tbaa !34, !alias.scope !293
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load677.1 = load <4 x float>, <4 x float>* %92, align 4, !tbaa !34, !alias.scope !293
  %93 = fmul <4 x float> %wide.load676.1, %broadcast.splat673
  %94 = fmul <4 x float> %wide.load677.1, %broadcast.splat675
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !34, !alias.scope !293
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !293
  %index.next663.1 = add i64 %index662, 16
  %niter769.nsub.1 = add i64 %niter769, -2
  %niter769.ncmp.1 = icmp eq i64 %niter769.nsub.1, 0
  br i1 %niter769.ncmp.1, label %middle.block646.unr-lcssa, label %vector.body645, !llvm.loop !295

middle.block646.unr-lcssa:                        ; preds = %vector.body645, %vector.ph659
  %index662.unr = phi i64 [ 0, %vector.ph659 ], [ %index.next663.1, %vector.body645 ]
  %lcmp.mod767 = icmp eq i64 %xtraiter766, 0
  br i1 %lcmp.mod767, label %middle.block646, label %vector.body645.epil

vector.body645.epil:                              ; preds = %middle.block646.unr-lcssa
  %97 = getelementptr inbounds float, float* %58, i64 %index662.unr
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load670.epil = load <4 x float>, <4 x float>* %98, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load671.epil = load <4 x float>, <4 x float>* %100, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %101 = fmul <4 x float> %wide.load670.epil, %broadcast.splat673
  %102 = fmul <4 x float> %wide.load671.epil, %broadcast.splat675
  %103 = bitcast float* %97 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %104 = bitcast float* %99 to <4 x float>*
  store <4 x float> %102, <4 x float>* %104, align 4, !tbaa !34, !alias.scope !290, !noalias !293
  %105 = getelementptr inbounds float, float* %59, i64 %index662.unr
  %106 = bitcast float* %105 to <4 x float>*
  %wide.load676.epil = load <4 x float>, <4 x float>* %106, align 4, !tbaa !34, !alias.scope !293
  %107 = getelementptr inbounds float, float* %105, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load677.epil = load <4 x float>, <4 x float>* %108, align 4, !tbaa !34, !alias.scope !293
  %109 = fmul <4 x float> %wide.load676.epil, %broadcast.splat673
  %110 = fmul <4 x float> %wide.load677.epil, %broadcast.splat675
  %111 = bitcast float* %105 to <4 x float>*
  store <4 x float> %109, <4 x float>* %111, align 4, !tbaa !34, !alias.scope !293
  %112 = bitcast float* %107 to <4 x float>*
  store <4 x float> %110, <4 x float>* %112, align 4, !tbaa !34, !alias.scope !293
  br label %middle.block646

middle.block646:                                  ; preds = %vector.body645.epil, %middle.block646.unr-lcssa
  %cmp.n665 = icmp eq i64 %n.vec661, %60
  br i1 %cmp.n665, label %for.cond91.preheader, label %for.body79.preheader

for.cond91.preheader:                             ; preds = %for.body79, %middle.block646
  %cmp93512 = icmp eq i32 %57, 0
  br i1 %cmp93512, label %for.inc117, label %for.body94.lr.ph

for.body94.lr.ph:                                 ; preds = %for.cond91.preheader
  %113 = load float*, float** %arrayidx, align 16, !tbaa !27
  %114 = load float*, float** %arrayidx100, align 8, !tbaa !27
  %115 = load float*, float** %arrayidx.1, align 8, !tbaa !27
  %116 = load float*, float** %arrayidx109, align 8, !tbaa !27
  %wide.trip.count562 = zext i32 %57 to i64
  %min.iters.check = icmp ult i32 %57, 4
  br i1 %min.iters.check, label %for.body94.preheader, label %vector.memcheck

for.body94.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body94.lr.ph
  %indvars.iv560.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body94.lr.ph ], [ %n.vec, %middle.block ]
  %117 = xor i64 %indvars.iv560.ph, -1
  %xtraiter774 = and i64 %60, 1
  %lcmp.mod775 = icmp eq i64 %xtraiter774, 0
  br i1 %lcmp.mod775, label %for.body94.prol.loopexit, label %for.body94.prol

for.body94.prol:                                  ; preds = %for.body94.preheader
  %arrayidx97.prol = getelementptr inbounds float, float* %113, i64 %indvars.iv560.ph
  %118 = load float, float* %arrayidx97.prol, align 4, !tbaa !34
  %arrayidx102.prol = getelementptr inbounds float, float* %114, i64 %indvars.iv560.ph
  %119 = load float, float* %arrayidx102.prol, align 4, !tbaa !34
  %add103.prol = fadd float %118, %119
  store float %add103.prol, float* %arrayidx102.prol, align 4, !tbaa !34
  %arrayidx106.prol = getelementptr inbounds float, float* %115, i64 %indvars.iv560.ph
  %120 = load float, float* %arrayidx106.prol, align 4, !tbaa !34
  %arrayidx111.prol = getelementptr inbounds float, float* %116, i64 %indvars.iv560.ph
  %121 = load float, float* %arrayidx111.prol, align 4, !tbaa !34
  %add112.prol = fadd float %120, %121
  store float %add112.prol, float* %arrayidx111.prol, align 4, !tbaa !34
  %indvars.iv.next561.prol = or i64 %indvars.iv560.ph, 1
  br label %for.body94.prol.loopexit

for.body94.prol.loopexit:                         ; preds = %for.body94.prol, %for.body94.preheader
  %indvars.iv560.unr.ph = phi i64 [ %indvars.iv.next561.prol, %for.body94.prol ], [ %indvars.iv560.ph, %for.body94.preheader ]
  %122 = sub nsw i64 0, %60
  %123 = icmp eq i64 %117, %122
  br i1 %123, label %for.inc117, label %for.body94

vector.memcheck:                                  ; preds = %for.body94.lr.ph
  %scevgep = getelementptr float, float* %114, i64 %wide.trip.count562
  %scevgep621 = getelementptr float, float* %116, i64 %wide.trip.count562
  %scevgep623 = getelementptr float, float* %113, i64 %wide.trip.count562
  %scevgep625 = getelementptr float, float* %115, i64 %wide.trip.count562
  %bound0 = icmp ult float* %114, %scevgep621
  %bound1 = icmp ult float* %116, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %bound0627 = icmp ult float* %114, %scevgep623
  %bound1628 = icmp ult float* %113, %scevgep
  %found.conflict629 = and i1 %bound0627, %bound1628
  %conflict.rdx = or i1 %found.conflict, %found.conflict629
  %bound0630 = icmp ult float* %114, %scevgep625
  %bound1631 = icmp ult float* %115, %scevgep
  %found.conflict632 = and i1 %bound0630, %bound1631
  %conflict.rdx633 = or i1 %conflict.rdx, %found.conflict632
  %bound0634 = icmp ult float* %116, %scevgep623
  %bound1635 = icmp ult float* %113, %scevgep621
  %found.conflict636 = and i1 %bound0634, %bound1635
  %conflict.rdx637 = or i1 %conflict.rdx633, %found.conflict636
  %bound0638 = icmp ult float* %116, %scevgep625
  %bound1639 = icmp ult float* %115, %scevgep621
  %found.conflict640 = and i1 %bound0638, %bound1639
  %conflict.rdx641 = or i1 %conflict.rdx637, %found.conflict640
  br i1 %conflict.rdx641, label %for.body94.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count562, 4294967292
  %124 = add nsw i64 %n.vec, -4
  %125 = lshr exact i64 %124, 2
  %126 = add nuw nsw i64 %125, 1
  %xtraiter770 = and i64 %126, 1
  %127 = icmp eq i64 %124, 0
  br i1 %127, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter772 = sub nuw nsw i64 %126, %xtraiter770
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter773 = phi i64 [ %unroll_iter772, %vector.ph.new ], [ %niter773.nsub.1, %vector.body ]
  %128 = getelementptr inbounds float, float* %113, i64 %index
  %129 = bitcast float* %128 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %129, align 4, !tbaa !34, !alias.scope !296
  %130 = getelementptr inbounds float, float* %114, i64 %index
  %131 = bitcast float* %130 to <4 x float>*
  %wide.load642 = load <4 x float>, <4 x float>* %131, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %132 = fadd <4 x float> %wide.load, %wide.load642
  %133 = bitcast float* %130 to <4 x float>*
  store <4 x float> %132, <4 x float>* %133, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %134 = getelementptr inbounds float, float* %115, i64 %index
  %135 = bitcast float* %134 to <4 x float>*
  %wide.load643 = load <4 x float>, <4 x float>* %135, align 4, !tbaa !34, !alias.scope !304
  %136 = getelementptr inbounds float, float* %116, i64 %index
  %137 = bitcast float* %136 to <4 x float>*
  %wide.load644 = load <4 x float>, <4 x float>* %137, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  %138 = fadd <4 x float> %wide.load643, %wide.load644
  %139 = bitcast float* %136 to <4 x float>*
  store <4 x float> %138, <4 x float>* %139, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  %index.next = or i64 %index, 4
  %140 = getelementptr inbounds float, float* %113, i64 %index.next
  %141 = bitcast float* %140 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %141, align 4, !tbaa !34, !alias.scope !296
  %142 = getelementptr inbounds float, float* %114, i64 %index.next
  %143 = bitcast float* %142 to <4 x float>*
  %wide.load642.1 = load <4 x float>, <4 x float>* %143, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %144 = fadd <4 x float> %wide.load.1, %wide.load642.1
  %145 = bitcast float* %142 to <4 x float>*
  store <4 x float> %144, <4 x float>* %145, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %146 = getelementptr inbounds float, float* %115, i64 %index.next
  %147 = bitcast float* %146 to <4 x float>*
  %wide.load643.1 = load <4 x float>, <4 x float>* %147, align 4, !tbaa !34, !alias.scope !304
  %148 = getelementptr inbounds float, float* %116, i64 %index.next
  %149 = bitcast float* %148 to <4 x float>*
  %wide.load644.1 = load <4 x float>, <4 x float>* %149, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  %150 = fadd <4 x float> %wide.load643.1, %wide.load644.1
  %151 = bitcast float* %148 to <4 x float>*
  store <4 x float> %150, <4 x float>* %151, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  %index.next.1 = add i64 %index, 8
  %niter773.nsub.1 = add i64 %niter773, -2
  %niter773.ncmp.1 = icmp eq i64 %niter773.nsub.1, 0
  br i1 %niter773.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !307

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod771 = icmp eq i64 %xtraiter770, 0
  br i1 %lcmp.mod771, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %152 = getelementptr inbounds float, float* %113, i64 %index.unr
  %153 = bitcast float* %152 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %153, align 4, !tbaa !34, !alias.scope !296
  %154 = getelementptr inbounds float, float* %114, i64 %index.unr
  %155 = bitcast float* %154 to <4 x float>*
  %wide.load642.epil = load <4 x float>, <4 x float>* %155, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %156 = fadd <4 x float> %wide.load.epil, %wide.load642.epil
  %157 = bitcast float* %154 to <4 x float>*
  store <4 x float> %156, <4 x float>* %157, align 4, !tbaa !34, !alias.scope !299, !noalias !301
  %158 = getelementptr inbounds float, float* %115, i64 %index.unr
  %159 = bitcast float* %158 to <4 x float>*
  %wide.load643.epil = load <4 x float>, <4 x float>* %159, align 4, !tbaa !34, !alias.scope !304
  %160 = getelementptr inbounds float, float* %116, i64 %index.unr
  %161 = bitcast float* %160 to <4 x float>*
  %wide.load644.epil = load <4 x float>, <4 x float>* %161, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  %162 = fadd <4 x float> %wide.load643.epil, %wide.load644.epil
  %163 = bitcast float* %160 to <4 x float>*
  store <4 x float> %162, <4 x float>* %163, align 4, !tbaa !34, !alias.scope !305, !noalias !306
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count562
  br i1 %cmp.n, label %for.inc117, label %for.body94.preheader

for.body79:                                       ; preds = %for.body79, %for.body79.preheader
  %indvars.iv558 = phi i64 [ %indvars.iv.next559, %for.body79 ], [ %indvars.iv558.ph, %for.body79.preheader ]
  %arrayidx82 = getelementptr inbounds float, float* %58, i64 %indvars.iv558
  %164 = load float, float* %arrayidx82, align 4, !tbaa !34
  %mul83 = fmul float %164, %conv75
  store float %mul83, float* %arrayidx82, align 4, !tbaa !34
  %arrayidx86 = getelementptr inbounds float, float* %59, i64 %indvars.iv558
  %165 = load float, float* %arrayidx86, align 4, !tbaa !34
  %mul87 = fmul float %165, %conv75
  store float %mul87, float* %arrayidx86, align 4, !tbaa !34
  %indvars.iv.next559 = add nuw nsw i64 %indvars.iv558, 1
  %cmp78 = icmp ult i64 %indvars.iv.next559, %60
  br i1 %cmp78, label %for.body79, label %for.cond91.preheader, !llvm.loop !308

for.body94:                                       ; preds = %for.body94, %for.body94.prol.loopexit
  %indvars.iv560 = phi i64 [ %indvars.iv.next561.1, %for.body94 ], [ %indvars.iv560.unr.ph, %for.body94.prol.loopexit ]
  %arrayidx97 = getelementptr inbounds float, float* %113, i64 %indvars.iv560
  %166 = load float, float* %arrayidx97, align 4, !tbaa !34
  %arrayidx102 = getelementptr inbounds float, float* %114, i64 %indvars.iv560
  %167 = load float, float* %arrayidx102, align 4, !tbaa !34
  %add103 = fadd float %166, %167
  store float %add103, float* %arrayidx102, align 4, !tbaa !34
  %arrayidx106 = getelementptr inbounds float, float* %115, i64 %indvars.iv560
  %168 = load float, float* %arrayidx106, align 4, !tbaa !34
  %arrayidx111 = getelementptr inbounds float, float* %116, i64 %indvars.iv560
  %169 = load float, float* %arrayidx111, align 4, !tbaa !34
  %add112 = fadd float %168, %169
  store float %add112, float* %arrayidx111, align 4, !tbaa !34
  %indvars.iv.next561 = add nuw nsw i64 %indvars.iv560, 1
  %arrayidx97.1 = getelementptr inbounds float, float* %113, i64 %indvars.iv.next561
  %170 = load float, float* %arrayidx97.1, align 4, !tbaa !34
  %arrayidx102.1 = getelementptr inbounds float, float* %114, i64 %indvars.iv.next561
  %171 = load float, float* %arrayidx102.1, align 4, !tbaa !34
  %add103.1 = fadd float %170, %171
  store float %add103.1, float* %arrayidx102.1, align 4, !tbaa !34
  %arrayidx106.1 = getelementptr inbounds float, float* %115, i64 %indvars.iv.next561
  %172 = load float, float* %arrayidx106.1, align 4, !tbaa !34
  %arrayidx111.1 = getelementptr inbounds float, float* %116, i64 %indvars.iv.next561
  %173 = load float, float* %arrayidx111.1, align 4, !tbaa !34
  %add112.1 = fadd float %172, %173
  store float %add112.1, float* %arrayidx111.1, align 4, !tbaa !34
  %indvars.iv.next561.1 = add nuw nsw i64 %indvars.iv560, 2
  %exitcond563.1 = icmp eq i64 %indvars.iv.next561.1, %wide.trip.count562
  br i1 %exitcond563.1, label %for.inc117, label %for.body94, !llvm.loop !309

for.inc117:                                       ; preds = %for.body94, %middle.block, %for.body94.prol.loopexit, %for.cond91.preheader, %if.end67
  %indvars.iv.next565 = add nuw nsw i64 %indvars.iv564, 1
  %exitcond567 = icmp eq i64 %indvars.iv.next565, %wide.trip.count566
  br i1 %exitcond567, label %for.inc120.loopexit, label %for.body58

for.inc120.loopexit:                              ; preds = %for.inc117
  %.pre = load i32, i32* %27, align 8, !tbaa !49
  br label %for.inc120

for.inc120:                                       ; preds = %for.inc120.loopexit, %for.cond56.preheader
  %174 = phi i32 [ %.pre, %for.inc120.loopexit ], [ %45, %for.cond56.preheader ]
  %indvars.iv.next569 = add nuw nsw i64 %indvars.iv568, 1
  %175 = zext i32 %174 to i64
  %cmp54 = icmp ult i64 %indvars.iv.next569, %175
  br i1 %cmp54, label %for.cond56.preheader, label %delete.notnull

delete.notnull:                                   ; preds = %for.inc120, %for.cond52.preheader, %for.cond52.preheader.thread
  %176 = phi float** [ %39, %for.cond52.preheader.thread ], [ %41, %for.cond52.preheader ], [ %41, %for.inc120 ]
  %177 = phi float** [ %40, %for.cond52.preheader.thread ], [ %43, %for.cond52.preheader ], [ %43, %for.inc120 ]
  %178 = phi i8* [ %call32.1, %for.cond52.preheader.thread ], [ %call32.us.1, %for.cond52.preheader ], [ %call32.us.1, %for.inc120 ]
  %179 = bitcast %class.HRTF* %retval.0.i to void (%class.HRTF*)***
  %vtable123 = load void (%class.HRTF*)**, void (%class.HRTF*)*** %179, align 8, !tbaa !24
  %vfn124 = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable123, i64 1
  %180 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn124, align 8
  call void %180(%class.HRTF* nonnull %retval.0.i) #24
  %181 = bitcast %class.CAmbisonicEncoder* %myEncoder to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %181) #24
  %182 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 1
  %184 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 2
  %185 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %185, align 8, !tbaa !49
  %186 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %186, align 4, !tbaa !50
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3, i32 2
  %187 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !52
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !24
  %188 = load i32, i32* %25, align 8, !tbaa !45
  store i32 %188, i32* %183, align 8, !tbaa !45
  store i8 1, i8* %184, align 4, !tbaa !48
  %call.i.i.i446 = invoke i32 @_Z17OrderToComponentsjb(i32 %188, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad125

call.i.i.i.noexc:                                 ; preds = %delete.notnull
  store i32 %call.i.i.i446, i32* %185, align 8, !tbaa !49
  %conv.i.i = zext i32 %call.i.i.i446 to i64
  %189 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !34
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %190 = bitcast float** %_M_finish.i.i.i.i to i64*
  %191 = load i64, i64* %190, align 8, !tbaa !57
  %192 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %193 = load i64, i64* %192, align 8, !tbaa !60
  %sub.ptr.sub.i.i.i.i = sub i64 %191, %193
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i445 = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %194 = inttoptr i64 %193 to float*
  br i1 %cmp.i.i.i445, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %195 = inttoptr i64 %191 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %195, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad125

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %194, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2
  %196 = load i32, i32* %183, align 8, !tbaa !45
  %add.i.i = add i32 %196, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %197 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !34
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %198 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %199 = load i64, i64* %198, align 8, !tbaa !57
  %200 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %201 = load i64, i64* %200, align 8, !tbaa !60
  %sub.ptr.sub.i.i7.i.i = sub i64 %199, %201
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %202 = inttoptr i64 %201 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %203 = inttoptr i64 %199 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %203, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %invoke.cont126 unwind label %lpad125

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %invoke.cont126

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %202, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !57
  br label %invoke.cont126

invoke.cont126:                                   ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #24
  %call130 = invoke float @_Z16DegreesToRadiansf(float 9.000000e+01)
          to label %invoke.cont129 unwind label %lpad128

invoke.cont129:                                   ; preds = %invoke.cont126
  %position90.sroa.0.4.vec.insert = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call130, i32 0
  %204 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0
  %polPosition.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3
  %polPosition.sroa.0.0..sroa_cast.i = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx.i to <2 x float>*
  store <2 x float> %position90.sroa.0.4.vec.insert, <2 x float>* %polPosition.sroa.0.0..sroa_cast.i, align 8
  store float 5.000000e+00, float* %fDistance.i.i, align 8
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* nonnull %204) #24
  %205 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %conv137 = zext i32 %205 to i64
  %206 = shl nuw nsw i64 %conv137, 2
  %call140 = invoke i8* @_Znam(i64 %206) #25
          to label %invoke.cont139 unwind label %lpad138

invoke.cont139:                                   ; preds = %invoke.cont129
  %207 = bitcast i8* %call140 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call140, i8 0, i64 %206, i1 false)
  %208 = load i32, i32* %27, align 8, !tbaa !49
  %cmp143505 = icmp eq i32 %208, 0
  br i1 %cmp143505, label %for.cond166.preheader, label %for.cond145.preheader.lr.ph

for.cond145.preheader.lr.ph:                      ; preds = %invoke.cont139
  %cmp147503 = icmp eq i32 %205, 0
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %209 = load float*, float** %_M_start.i.i, align 8
  br i1 %cmp147503, label %for.body217.lr.ph, label %for.cond145.preheader.us.preheader

for.cond145.preheader.us.preheader:               ; preds = %for.cond145.preheader.lr.ph
  %210 = zext i32 %208 to i64
  %211 = shl nuw nsw i64 %conv137, 2
  %scevgep683 = getelementptr i8, i8* %call140, i64 %211
  %min.iters.check681 = icmp ult i32 %205, 8
  %n.vec699 = and i64 %conv137, 4294967288
  %cmp.n703 = icmp eq i64 %n.vec699, %conv137
  %xtraiter764 = and i64 %conv137, 1
  %lcmp.mod765 = icmp eq i64 %xtraiter764, 0
  %212 = sub nsw i64 0, %conv137
  br label %for.cond145.preheader.us

for.cond145.preheader.us:                         ; preds = %for.cond145.for.inc163_crit_edge.us, %for.cond145.preheader.us.preheader
  %indvars.iv556 = phi i64 [ 0, %for.cond145.preheader.us.preheader ], [ %indvars.iv.next557, %for.cond145.for.inc163_crit_edge.us ]
  %add.ptr.i.i.us = getelementptr inbounds float, float* %209, i64 %indvars.iv556
  %arrayidx153.us = getelementptr inbounds float*, float** %176, i64 %indvars.iv556
  %213 = load float*, float** %arrayidx153.us, align 8, !tbaa !27
  br i1 %min.iters.check681, label %for.body148.us.preheader, label %vector.memcheck696

vector.memcheck696:                               ; preds = %for.cond145.preheader.us
  %214 = bitcast float* %213 to i8*
  %scevgep684 = getelementptr float, float* %209, i64 %indvars.iv556
  %scevgep684685 = bitcast float* %scevgep684 to i8*
  %uglygep = getelementptr i8, i8* %scevgep684685, i64 1
  %scevgep686 = getelementptr float, float* %213, i64 %conv137
  %scevgep686687 = bitcast float* %scevgep686 to i8*
  %bc = bitcast float* %add.ptr.i.i.us to i8*
  %bound0688 = icmp ult i8* %call140, %uglygep
  %bound1689 = icmp ugt i8* %scevgep683, %bc
  %found.conflict690 = and i1 %bound0688, %bound1689
  %bound0691 = icmp ult i8* %call140, %scevgep686687
  %bound1692 = icmp ugt i8* %scevgep683, %214
  %found.conflict693 = and i1 %bound0691, %bound1692
  %conflict.rdx694 = or i1 %found.conflict690, %found.conflict693
  br i1 %conflict.rdx694, label %for.body148.us.preheader, label %vector.ph697

vector.ph697:                                     ; preds = %vector.memcheck696
  %215 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !34, !alias.scope !310
  %216 = insertelement <4 x float> undef, float %215, i32 0
  %217 = shufflevector <4 x float> %216, <4 x float> undef, <4 x i32> zeroinitializer
  %218 = insertelement <4 x float> undef, float %215, i32 0
  %219 = shufflevector <4 x float> %218, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body678

vector.body678:                                   ; preds = %vector.body678, %vector.ph697
  %index700 = phi i64 [ 0, %vector.ph697 ], [ %index.next701, %vector.body678 ]
  %220 = getelementptr inbounds float, float* %213, i64 %index700
  %221 = bitcast float* %220 to <4 x float>*
  %wide.load708 = load <4 x float>, <4 x float>* %221, align 4, !tbaa !34, !alias.scope !313
  %222 = getelementptr inbounds float, float* %220, i64 4
  %223 = bitcast float* %222 to <4 x float>*
  %wide.load709 = load <4 x float>, <4 x float>* %223, align 4, !tbaa !34, !alias.scope !313
  %224 = fmul <4 x float> %217, %wide.load708
  %225 = fmul <4 x float> %219, %wide.load709
  %226 = getelementptr inbounds float, float* %207, i64 %index700
  %227 = bitcast float* %226 to <4 x float>*
  %wide.load710 = load <4 x float>, <4 x float>* %227, align 4, !tbaa !34, !alias.scope !315, !noalias !317
  %228 = getelementptr inbounds float, float* %226, i64 4
  %229 = bitcast float* %228 to <4 x float>*
  %wide.load711 = load <4 x float>, <4 x float>* %229, align 4, !tbaa !34, !alias.scope !315, !noalias !317
  %230 = fadd <4 x float> %wide.load710, %224
  %231 = fadd <4 x float> %wide.load711, %225
  %232 = bitcast float* %226 to <4 x float>*
  store <4 x float> %230, <4 x float>* %232, align 4, !tbaa !34, !alias.scope !315, !noalias !317
  %233 = bitcast float* %228 to <4 x float>*
  store <4 x float> %231, <4 x float>* %233, align 4, !tbaa !34, !alias.scope !315, !noalias !317
  %index.next701 = add i64 %index700, 8
  %234 = icmp eq i64 %index.next701, %n.vec699
  br i1 %234, label %middle.block679, label %vector.body678, !llvm.loop !318

middle.block679:                                  ; preds = %vector.body678
  br i1 %cmp.n703, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us.preheader

for.body148.us.preheader:                         ; preds = %middle.block679, %vector.memcheck696, %for.cond145.preheader.us
  %indvars.iv552.ph = phi i64 [ 0, %vector.memcheck696 ], [ 0, %for.cond145.preheader.us ], [ %n.vec699, %middle.block679 ]
  %235 = xor i64 %indvars.iv552.ph, -1
  br i1 %lcmp.mod765, label %for.body148.us.prol.loopexit, label %for.body148.us.prol

for.body148.us.prol:                              ; preds = %for.body148.us.preheader
  %236 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !34
  %arrayidx155.us.prol = getelementptr inbounds float, float* %213, i64 %indvars.iv552.ph
  %237 = load float, float* %arrayidx155.us.prol, align 4, !tbaa !34
  %mul156.us.prol = fmul float %236, %237
  %arrayidx158.us.prol = getelementptr inbounds float, float* %207, i64 %indvars.iv552.ph
  %238 = load float, float* %arrayidx158.us.prol, align 4, !tbaa !34
  %add159.us.prol = fadd float %238, %mul156.us.prol
  store float %add159.us.prol, float* %arrayidx158.us.prol, align 4, !tbaa !34
  %indvars.iv.next553.prol = or i64 %indvars.iv552.ph, 1
  br label %for.body148.us.prol.loopexit

for.body148.us.prol.loopexit:                     ; preds = %for.body148.us.prol, %for.body148.us.preheader
  %indvars.iv552.unr.ph = phi i64 [ %indvars.iv.next553.prol, %for.body148.us.prol ], [ %indvars.iv552.ph, %for.body148.us.preheader ]
  %239 = icmp eq i64 %235, %212
  br i1 %239, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us

for.body148.us:                                   ; preds = %for.body148.us, %for.body148.us.prol.loopexit
  %indvars.iv552 = phi i64 [ %indvars.iv.next553.1, %for.body148.us ], [ %indvars.iv552.unr.ph, %for.body148.us.prol.loopexit ]
  %240 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !34
  %arrayidx155.us = getelementptr inbounds float, float* %213, i64 %indvars.iv552
  %241 = load float, float* %arrayidx155.us, align 4, !tbaa !34
  %mul156.us = fmul float %240, %241
  %arrayidx158.us = getelementptr inbounds float, float* %207, i64 %indvars.iv552
  %242 = load float, float* %arrayidx158.us, align 4, !tbaa !34
  %add159.us = fadd float %242, %mul156.us
  store float %add159.us, float* %arrayidx158.us, align 4, !tbaa !34
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1
  %243 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !34
  %arrayidx155.us.1 = getelementptr inbounds float, float* %213, i64 %indvars.iv.next553
  %244 = load float, float* %arrayidx155.us.1, align 4, !tbaa !34
  %mul156.us.1 = fmul float %243, %244
  %arrayidx158.us.1 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next553
  %245 = load float, float* %arrayidx158.us.1, align 4, !tbaa !34
  %add159.us.1 = fadd float %245, %mul156.us.1
  store float %add159.us.1, float* %arrayidx158.us.1, align 4, !tbaa !34
  %indvars.iv.next553.1 = add nuw nsw i64 %indvars.iv552, 2
  %exitcond555.1 = icmp eq i64 %indvars.iv.next553.1, %conv137
  br i1 %exitcond555.1, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us, !llvm.loop !319

for.cond145.for.inc163_crit_edge.us:              ; preds = %for.body148.us, %for.body148.us.prol.loopexit, %middle.block679
  %indvars.iv.next557 = add nuw nsw i64 %indvars.iv556, 1
  %cmp143.us = icmp ult i64 %indvars.iv.next557, %210
  br i1 %cmp143.us, label %for.cond145.preheader.us, label %for.cond166.preheader

for.cond166.preheader:                            ; preds = %for.cond145.for.inc163_crit_edge.us, %invoke.cont139
  %cmp168499 = icmp eq i32 %205, 0
  br i1 %cmp168499, label %for.end181, label %for.body169.preheader

for.body169.preheader:                            ; preds = %for.cond166.preheader
  %246 = add nsw i64 %conv137, -1
  %xtraiter759 = and i64 %conv137, 3
  %247 = icmp ult i64 %246, 3
  br i1 %247, label %for.end181.loopexit.unr-lcssa, label %for.body169.preheader.new

for.body169.preheader.new:                        ; preds = %for.body169.preheader
  %unroll_iter762 = sub nsw i64 %conv137, %xtraiter759
  br label %for.body169

lpad125:                                          ; preds = %if.then.i11.i.i, %if.then.i.i.i, %delete.notnull
  %248 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad128:                                          ; preds = %invoke.cont126
  %249 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad138:                                          ; preds = %invoke.cont129
  %250 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.body169:                                      ; preds = %for.body169, %for.body169.preheader.new
  %indvars.iv548 = phi i64 [ 0, %for.body169.preheader.new ], [ %indvars.iv.next549.3, %for.body169 ]
  %fMax.0500 = phi float [ 0.000000e+00, %for.body169.preheader.new ], [ %cond178.3, %for.body169 ]
  %niter763 = phi i64 [ %unroll_iter762, %for.body169.preheader.new ], [ %niter763.nsub.3, %for.body169 ]
  %arrayidx171 = getelementptr inbounds float, float* %207, i64 %indvars.iv548
  %251 = load float, float* %arrayidx171, align 4, !tbaa !34
  %252 = call float @llvm.fabs.f32(float %251)
  %cmp174 = fcmp ogt float %252, %fMax.0500
  %cond178 = select i1 %cmp174, float %252, float %fMax.0500
  %indvars.iv.next549 = or i64 %indvars.iv548, 1
  %arrayidx171.1 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next549
  %253 = load float, float* %arrayidx171.1, align 4, !tbaa !34
  %254 = call float @llvm.fabs.f32(float %253)
  %cmp174.1 = fcmp ogt float %254, %cond178
  %cond178.1 = select i1 %cmp174.1, float %254, float %cond178
  %indvars.iv.next549.1 = or i64 %indvars.iv548, 2
  %arrayidx171.2 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next549.1
  %255 = load float, float* %arrayidx171.2, align 4, !tbaa !34
  %256 = call float @llvm.fabs.f32(float %255)
  %cmp174.2 = fcmp ogt float %256, %cond178.1
  %cond178.2 = select i1 %cmp174.2, float %256, float %cond178.1
  %indvars.iv.next549.2 = or i64 %indvars.iv548, 3
  %arrayidx171.3 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next549.2
  %257 = load float, float* %arrayidx171.3, align 4, !tbaa !34
  %258 = call float @llvm.fabs.f32(float %257)
  %cmp174.3 = fcmp ogt float %258, %cond178.2
  %cond178.3 = select i1 %cmp174.3, float %258, float %cond178.2
  %indvars.iv.next549.3 = add nuw nsw i64 %indvars.iv548, 4
  %niter763.nsub.3 = add i64 %niter763, -4
  %niter763.ncmp.3 = icmp eq i64 %niter763.nsub.3, 0
  br i1 %niter763.ncmp.3, label %for.end181.loopexit.unr-lcssa, label %for.body169

for.end181.loopexit.unr-lcssa:                    ; preds = %for.body169, %for.body169.preheader
  %cond178.lcssa.ph = phi float [ undef, %for.body169.preheader ], [ %cond178.3, %for.body169 ]
  %indvars.iv548.unr = phi i64 [ 0, %for.body169.preheader ], [ %indvars.iv.next549.3, %for.body169 ]
  %fMax.0500.unr = phi float [ 0.000000e+00, %for.body169.preheader ], [ %cond178.3, %for.body169 ]
  %lcmp.mod760 = icmp eq i64 %xtraiter759, 0
  br i1 %lcmp.mod760, label %for.end181, label %for.body169.epil

for.body169.epil:                                 ; preds = %for.body169.epil, %for.end181.loopexit.unr-lcssa
  %indvars.iv548.epil = phi i64 [ %indvars.iv.next549.epil, %for.body169.epil ], [ %indvars.iv548.unr, %for.end181.loopexit.unr-lcssa ]
  %fMax.0500.epil = phi float [ %cond178.epil, %for.body169.epil ], [ %fMax.0500.unr, %for.end181.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body169.epil ], [ %xtraiter759, %for.end181.loopexit.unr-lcssa ]
  %arrayidx171.epil = getelementptr inbounds float, float* %207, i64 %indvars.iv548.epil
  %259 = load float, float* %arrayidx171.epil, align 4, !tbaa !34
  %260 = call float @llvm.fabs.f32(float %259)
  %cmp174.epil = fcmp ogt float %260, %fMax.0500.epil
  %cond178.epil = select i1 %cmp174.epil, float %260, float %fMax.0500.epil
  %indvars.iv.next549.epil = add nuw nsw i64 %indvars.iv548.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end181, label %for.body169.epil, !llvm.loop !320

for.end181:                                       ; preds = %for.body169.epil, %for.end181.loopexit.unr-lcssa, %for.cond166.preheader
  %cmp168499593 = phi i1 [ true, %for.cond166.preheader ], [ %cmp168499, %for.body169.epil ], [ %cmp168499, %for.end181.loopexit.unr-lcssa ]
  %fMax.0.lcssa = phi float [ 0.000000e+00, %for.cond166.preheader ], [ %cond178.lcssa.ph, %for.end181.loopexit.unr-lcssa ], [ %cond178.epil, %for.body169.epil ]
  %div182 = fdiv float 1.000000e+00, %fMax.0.lcssa
  %mul183 = fmul float %div182, 0x3FD6666660000000
  %cmp189475 = icmp eq i32 %208, 0
  %brmerge = or i1 %cmp189475, %cmp168499593
  br i1 %brmerge, label %for.cond211.preheader, label %for.cond191.preheader.us.us.preheader

for.cond191.preheader.us.us.preheader:            ; preds = %for.end181
  %wide.trip.count542 = zext i32 %208 to i64
  %261 = and i64 %conv137, 4294967288
  %262 = add nsw i64 %261, -8
  %263 = lshr exact i64 %262, 3
  %264 = add nuw nsw i64 %263, 1
  %min.iters.check715 = icmp ult i32 %205, 8
  %n.vec718 = and i64 %conv137, 4294967288
  %broadcast.splatinsert729 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat730 = shufflevector <4 x float> %broadcast.splatinsert729, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert731 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat732 = shufflevector <4 x float> %broadcast.splatinsert731, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter755 = and i64 %264, 1
  %265 = icmp eq i64 %262, 0
  %unroll_iter757 = sub nuw nsw i64 %264, %xtraiter755
  %lcmp.mod756 = icmp eq i64 %xtraiter755, 0
  %cmp.n722 = icmp eq i64 %n.vec718, %conv137
  br label %for.cond191.preheader.us.us

for.cond191.preheader.us.us:                      ; preds = %for.cond191.for.inc205_crit_edge.us.us, %for.cond191.preheader.us.us.preheader
  %indvars.iv540 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader ], [ %indvars.iv.next541, %for.cond191.for.inc205_crit_edge.us.us ]
  %arrayidx198.us.us = getelementptr inbounds float*, float** %176, i64 %indvars.iv540
  %266 = load float*, float** %arrayidx198.us.us, align 8, !tbaa !27
  br i1 %min.iters.check715, label %for.body194.us.us.preheader, label %vector.ph716

for.body194.us.us.preheader:                      ; preds = %middle.block713, %for.cond191.preheader.us.us
  %indvars.iv538.ph = phi i64 [ 0, %for.cond191.preheader.us.us ], [ %n.vec718, %middle.block713 ]
  br label %for.body194.us.us

vector.ph716:                                     ; preds = %for.cond191.preheader.us.us
  br i1 %265, label %middle.block713.unr-lcssa, label %vector.body712

vector.body712:                                   ; preds = %vector.body712, %vector.ph716
  %index719 = phi i64 [ %index.next720.1, %vector.body712 ], [ 0, %vector.ph716 ]
  %niter758 = phi i64 [ %niter758.nsub.1, %vector.body712 ], [ %unroll_iter757, %vector.ph716 ]
  %267 = getelementptr inbounds float, float* %266, i64 %index719
  %268 = bitcast float* %267 to <4 x float>*
  %wide.load727 = load <4 x float>, <4 x float>* %268, align 4, !tbaa !34
  %269 = getelementptr inbounds float, float* %267, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  %wide.load728 = load <4 x float>, <4 x float>* %270, align 4, !tbaa !34
  %271 = fmul <4 x float> %broadcast.splat730, %wide.load727
  %272 = fmul <4 x float> %broadcast.splat732, %wide.load728
  %273 = bitcast float* %267 to <4 x float>*
  store <4 x float> %271, <4 x float>* %273, align 4, !tbaa !34
  %274 = bitcast float* %269 to <4 x float>*
  store <4 x float> %272, <4 x float>* %274, align 4, !tbaa !34
  %index.next720 = or i64 %index719, 8
  %275 = getelementptr inbounds float, float* %266, i64 %index.next720
  %276 = bitcast float* %275 to <4 x float>*
  %wide.load727.1 = load <4 x float>, <4 x float>* %276, align 4, !tbaa !34
  %277 = getelementptr inbounds float, float* %275, i64 4
  %278 = bitcast float* %277 to <4 x float>*
  %wide.load728.1 = load <4 x float>, <4 x float>* %278, align 4, !tbaa !34
  %279 = fmul <4 x float> %broadcast.splat730, %wide.load727.1
  %280 = fmul <4 x float> %broadcast.splat732, %wide.load728.1
  %281 = bitcast float* %275 to <4 x float>*
  store <4 x float> %279, <4 x float>* %281, align 4, !tbaa !34
  %282 = bitcast float* %277 to <4 x float>*
  store <4 x float> %280, <4 x float>* %282, align 4, !tbaa !34
  %index.next720.1 = add i64 %index719, 16
  %niter758.nsub.1 = add i64 %niter758, -2
  %niter758.ncmp.1 = icmp eq i64 %niter758.nsub.1, 0
  br i1 %niter758.ncmp.1, label %middle.block713.unr-lcssa, label %vector.body712, !llvm.loop !321

middle.block713.unr-lcssa:                        ; preds = %vector.body712, %vector.ph716
  %index719.unr = phi i64 [ 0, %vector.ph716 ], [ %index.next720.1, %vector.body712 ]
  br i1 %lcmp.mod756, label %middle.block713, label %vector.body712.epil

vector.body712.epil:                              ; preds = %middle.block713.unr-lcssa
  %283 = getelementptr inbounds float, float* %266, i64 %index719.unr
  %284 = bitcast float* %283 to <4 x float>*
  %wide.load727.epil = load <4 x float>, <4 x float>* %284, align 4, !tbaa !34
  %285 = getelementptr inbounds float, float* %283, i64 4
  %286 = bitcast float* %285 to <4 x float>*
  %wide.load728.epil = load <4 x float>, <4 x float>* %286, align 4, !tbaa !34
  %287 = fmul <4 x float> %broadcast.splat730, %wide.load727.epil
  %288 = fmul <4 x float> %broadcast.splat732, %wide.load728.epil
  %289 = bitcast float* %283 to <4 x float>*
  store <4 x float> %287, <4 x float>* %289, align 4, !tbaa !34
  %290 = bitcast float* %285 to <4 x float>*
  store <4 x float> %288, <4 x float>* %290, align 4, !tbaa !34
  br label %middle.block713

middle.block713:                                  ; preds = %vector.body712.epil, %middle.block713.unr-lcssa
  br i1 %cmp.n722, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us.preheader

for.cond191.for.inc205_crit_edge.us.us:           ; preds = %for.body194.us.us, %middle.block713
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %exitcond543 = icmp eq i64 %indvars.iv.next541, %wide.trip.count542
  br i1 %exitcond543, label %for.cond191.preheader.us.us.preheader.1, label %for.cond191.preheader.us.us

for.body194.us.us:                                ; preds = %for.body194.us.us, %for.body194.us.us.preheader
  %indvars.iv538 = phi i64 [ %indvars.iv.next539, %for.body194.us.us ], [ %indvars.iv538.ph, %for.body194.us.us.preheader ]
  %arrayidx200.us.us = getelementptr inbounds float, float* %266, i64 %indvars.iv538
  %291 = load float, float* %arrayidx200.us.us, align 4, !tbaa !34
  %mul201.us.us = fmul float %mul183, %291
  store float %mul201.us.us, float* %arrayidx200.us.us, align 4, !tbaa !34
  %indvars.iv.next539 = add nuw nsw i64 %indvars.iv538, 1
  %exitcond = icmp eq i64 %indvars.iv.next539, %conv137
  br i1 %exitcond, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us, !llvm.loop !322

for.cond211.preheader:                            ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.end181
  br i1 %cmp143505, label %for.inc248.1, label %for.body217.lr.ph

for.body217.lr.ph:                                ; preds = %for.cond211.preheader, %for.cond145.preheader.lr.ph
  %.in = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %292 = bitcast float** %.in to i8**
  %_M_head_impl.i.i.i.i.i618 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_start.i458 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body217

for.body217:                                      ; preds = %for.inc245.for.body217_crit_edge, %for.body217.lr.ph
  %293 = phi i32 [ %205, %for.body217.lr.ph ], [ %.pre583, %for.inc245.for.body217_crit_edge ]
  %indvars.iv534 = phi i64 [ 0, %for.body217.lr.ph ], [ %indvars.iv.next535, %for.inc245.for.body217_crit_edge ]
  %294 = load i8*, i8** %292, align 8, !tbaa !60
  %arrayidx222 = getelementptr inbounds float*, float** %176, i64 %indvars.iv534
  %295 = bitcast float** %arrayidx222 to i8**
  %296 = load i8*, i8** %295, align 8, !tbaa !27
  %conv224 = zext i32 %293 to i64
  %mul225 = shl nuw nsw i64 %conv224, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %294, i8* align 4 %296, i64 %mul225, i1 false)
  %297 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %conv228 = zext i32 %297 to i64
  %298 = load float*, float** %.in, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %298, i64 %conv228
  %299 = bitcast float* %add.ptr.i to i8*
  %300 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %sub232 = sub i32 %300, %297
  %conv233 = zext i32 %sub232 to i64
  %mul234 = shl nuw nsw i64 %conv233, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %299, i8 0, i64 %mul234, i1 false)
  %301 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i618, align 8, !tbaa !27
  %302 = load float*, float** %.in, align 8, !tbaa !60
  %303 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i458, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i460 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %303, i64 %indvars.iv534, i32 0, i32 0, i32 0, i32 0
  %304 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i460, align 8, !tbaa !27
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %301, float* %302, %struct.kiss_fft_cpx* %304)
          to label %for.inc245 unwind label %lpad243.loopexit

for.inc245:                                       ; preds = %for.body217
  %indvars.iv.next535 = add nuw nsw i64 %indvars.iv534, 1
  %305 = load i32, i32* %27, align 8, !tbaa !49
  %306 = zext i32 %305 to i64
  %cmp216 = icmp ult i64 %indvars.iv.next535, %306
  br i1 %cmp216, label %for.inc245.for.body217_crit_edge, label %for.inc248

for.inc245.for.body217_crit_edge:                 ; preds = %for.inc245
  %.pre583 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  br label %for.body217

lpad243.loopexit:                                 ; preds = %for.body217
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad243.loopexit.split-lp:                        ; preds = %for.body217.1
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.inc248:                                       ; preds = %for.inc245
  %cmp216469.1 = icmp eq i32 %305, 0
  br i1 %cmp216469.1, label %for.inc248.1, label %for.body217.lr.ph.1

delete.notnull257:                                ; preds = %for.inc248.1
  %307 = bitcast float* %345 to i8*
  call void @_ZdaPv(i8* %307) #26
  br label %for.inc259

for.inc259:                                       ; preds = %for.inc248.1, %delete.notnull257
  %308 = load float*, float** %arrayidx.1, align 8, !tbaa !27
  %isnull256.1 = icmp eq float* %308, null
  br i1 %isnull256.1, label %for.inc259.1, label %delete.notnull257.1

for.body268:                                      ; preds = %for.inc259.1, %for.inc276
  %309 = phi i32 [ %312, %for.inc276 ], [ %330, %for.inc259.1 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc276 ], [ 0, %for.inc259.1 ]
  %arrayidx272 = getelementptr inbounds float*, float** %176, i64 %indvars.iv
  %310 = load float*, float** %arrayidx272, align 8, !tbaa !27
  %isnull273 = icmp eq float* %310, null
  br i1 %isnull273, label %for.inc276, label %delete.notnull274

delete.notnull274:                                ; preds = %for.body268
  %311 = bitcast float* %310 to i8*
  call void @_ZdaPv(i8* %311) #26
  %.pre584 = load i32, i32* %27, align 8, !tbaa !49
  br label %for.inc276

for.inc276:                                       ; preds = %delete.notnull274, %for.body268
  %312 = phi i32 [ %309, %for.body268 ], [ %.pre584, %delete.notnull274 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %313 = zext i32 %312 to i64
  %cmp267 = icmp ult i64 %indvars.iv.next, %313
  br i1 %cmp267, label %for.body268, label %for.inc284

for.inc284:                                       ; preds = %for.inc259.1, %for.inc276
  call void @_ZdaPv(i8* %call32) #26
  %.pre585 = load i32, i32* %27, align 8, !tbaa !49
  %cmp267465.1 = icmp eq i32 %.pre585, 0
  br i1 %cmp267465.1, label %for.inc284.1, label %for.body268.1

if.then.i.i.i.i.i452:                             ; preds = %for.inc284.1
  %314 = bitcast float* %328 to i8*
  call void @_ZdlPv(i8* nonnull %314) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455:             ; preds = %for.inc284.1, %if.then.i.i.i.i.i452
  %_M_start.i.i2.i.i453 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %315 = load float*, float** %_M_start.i.i2.i.i453, align 8, !tbaa !60
  %tobool.i.i.i3.i.i454 = icmp eq float* %315, null
  br i1 %tobool.i.i.i3.i.i454, label %_ZN17CAmbisonicEncoderD2Ev.exit457, label %if.then.i.i.i4.i.i456

if.then.i.i.i4.i.i456:                            ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455
  %316 = bitcast float* %315 to i8*
  call void @_ZdlPv(i8* nonnull %316) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit457

_ZN17CAmbisonicEncoderD2Ev.exit457:               ; preds = %if.then.i.i.i4.i.i456, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %181) #24
  br label %cleanup301

ehcleanup296:                                     ; preds = %lpad243.loopexit.split-lp, %lpad243.loopexit, %lpad138, %lpad128, %lpad125
  %.sink754 = phi { i8*, i32 } [ %249, %lpad128 ], [ %250, %lpad138 ], [ %248, %lpad125 ], [ %lpad.loopexit, %lpad243.loopexit ], [ %lpad.loopexit.split-lp, %lpad243.loopexit.split-lp ]
  %317 = extractvalue { i8*, i32 } %.sink754, 0
  %318 = extractvalue { i8*, i32 } %.sink754, 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !24
  %_M_start.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %319 = load float*, float** %_M_start.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i = icmp eq float* %319, null
  br i1 %tobool.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %ehcleanup296
  %320 = bitcast float* %319 to i8*
  call void @_ZdlPv(i8* nonnull %320) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i:                ; preds = %if.then.i.i.i.i.i, %ehcleanup296
  %_M_start.i.i2.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %321 = load float*, float** %_M_start.i.i2.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i = icmp eq float* %321, null
  br i1 %tobool.i.i.i3.i.i, label %_ZN17CAmbisonicEncoderD2Ev.exit, label %if.then.i.i.i4.i.i

if.then.i.i.i4.i.i:                               ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  %322 = bitcast float* %321 to i8*
  call void @_ZdlPv(i8* nonnull %322) #24
  br label %_ZN17CAmbisonicEncoderD2Ev.exit

_ZN17CAmbisonicEncoderD2Ev.exit:                  ; preds = %if.then.i.i.i4.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %181) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24
  br label %ehcleanup308

cleanup301:                                       ; preds = %_ZN17CAmbisonicEncoderD2Ev.exit457, %for.body58
  %retval.3 = phi i1 [ true, %_ZN17CAmbisonicEncoderD2Ev.exit457 ], [ false, %for.body58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #24
  br label %cleanup307

cleanup307:                                       ; preds = %cleanup301, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %retval.4 = phi i1 [ %retval.3, %cleanup301 ], [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  ret i1 %retval.4

ehcleanup308:                                     ; preds = %_ZN17CAmbisonicEncoderD2Ev.exit, %if.then.i.i433, %lpad.body
  %ehselector.slot.3 = phi i32 [ %318, %_ZN17CAmbisonicEncoderD2Ev.exit ], [ %21, %lpad.body ], [ %21, %if.then.i.i433 ]
  %exn.slot.3 = phi i8* [ %317, %_ZN17CAmbisonicEncoderD2Ev.exit ], [ %20, %lpad.body ], [ %20, %if.then.i.i433 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val317 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val317

for.body268.1:                                    ; preds = %for.inc276.1, %for.inc284
  %323 = phi i32 [ %326, %for.inc276.1 ], [ %.pre585, %for.inc284 ]
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc276.1 ], [ 0, %for.inc284 ]
  %arrayidx272.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv.1
  %324 = load float*, float** %arrayidx272.1, align 8, !tbaa !27
  %isnull273.1 = icmp eq float* %324, null
  br i1 %isnull273.1, label %for.inc276.1, label %delete.notnull274.1

delete.notnull274.1:                              ; preds = %for.body268.1
  %325 = bitcast float* %324 to i8*
  call void @_ZdaPv(i8* %325) #26
  %.pre586 = load i32, i32* %27, align 8, !tbaa !49
  br label %for.inc276.1

for.inc276.1:                                     ; preds = %delete.notnull274.1, %for.body268.1
  %326 = phi i32 [ %.pre586, %delete.notnull274.1 ], [ %323, %for.body268.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %327 = zext i32 %326 to i64
  %cmp267.1 = icmp ult i64 %indvars.iv.next.1, %327
  br i1 %cmp267.1, label %for.body268.1, label %for.inc284.1

for.inc284.1:                                     ; preds = %for.inc276.1, %for.inc284
  call void @_ZdaPv(i8* %178) #26
  call void @_ZdaPv(i8* nonnull %call140) #26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !24
  %_M_start.i.i.i.i450 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %328 = load float*, float** %_M_start.i.i.i.i450, align 8, !tbaa !60
  %tobool.i.i.i.i.i451 = icmp eq float* %328, null
  br i1 %tobool.i.i.i.i.i451, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455, label %if.then.i.i.i.i.i452

delete.notnull257.1:                              ; preds = %for.inc259
  %329 = bitcast float* %308 to i8*
  call void @_ZdaPv(i8* %329) #26
  br label %for.inc259.1

for.inc259.1:                                     ; preds = %delete.notnull257.1, %for.inc259
  %330 = load i32, i32* %27, align 8, !tbaa !49
  %cmp267465 = icmp eq i32 %330, 0
  br i1 %cmp267465, label %for.inc284, label %for.body268

for.body217.lr.ph.1:                              ; preds = %for.inc248
  %_M_start.i458.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body217.1

for.body217.1:                                    ; preds = %for.inc245.1, %for.body217.lr.ph.1
  %indvars.iv534.1 = phi i64 [ 0, %for.body217.lr.ph.1 ], [ %indvars.iv.next535.1, %for.inc245.1 ]
  %331 = load i8*, i8** %292, align 8, !tbaa !60
  %arrayidx222.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv534.1
  %332 = bitcast float** %arrayidx222.1 to i8**
  %333 = load i8*, i8** %332, align 8, !tbaa !27
  %334 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %conv224.1 = zext i32 %334 to i64
  %mul225.1 = shl nuw nsw i64 %conv224.1, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %331, i8* align 4 %333, i64 %mul225.1, i1 false)
  %335 = load i32, i32* %m_nTaps, align 4, !tbaa !279
  %conv228.1 = zext i32 %335 to i64
  %336 = load float*, float** %.in, align 8, !tbaa !60
  %add.ptr.i.1 = getelementptr inbounds float, float* %336, i64 %conv228.1
  %337 = bitcast float* %add.ptr.i.1 to i8*
  %338 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %sub232.1 = sub i32 %338, %335
  %conv233.1 = zext i32 %sub232.1 to i64
  %mul234.1 = shl nuw nsw i64 %conv233.1, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %337, i8 0, i64 %mul234.1, i1 false)
  %339 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i618, align 8, !tbaa !27
  %340 = load float*, float** %.in, align 8, !tbaa !60
  %341 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i458.1, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i460.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %341, i64 %indvars.iv534.1, i32 0, i32 0, i32 0, i32 0
  %342 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i460.1, align 8, !tbaa !27
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %339, float* %340, %struct.kiss_fft_cpx* %342)
          to label %for.inc245.1 unwind label %lpad243.loopexit.split-lp

for.inc245.1:                                     ; preds = %for.body217.1
  %indvars.iv.next535.1 = add nuw nsw i64 %indvars.iv534.1, 1
  %343 = load i32, i32* %27, align 8, !tbaa !49
  %344 = zext i32 %343 to i64
  %cmp216.1 = icmp ult i64 %indvars.iv.next535.1, %344
  br i1 %cmp216.1, label %for.body217.1, label %for.inc248.1

for.inc248.1:                                     ; preds = %for.inc245.1, %for.inc248, %for.cond211.preheader
  %345 = load float*, float** %arrayidx, align 16, !tbaa !27
  %isnull256 = icmp eq float* %345, null
  br i1 %isnull256, label %for.inc259, label %delete.notnull257

for.cond191.preheader.us.us.preheader.1:          ; preds = %for.cond191.for.inc205_crit_edge.us.us
  %wide.trip.count542.1 = zext i32 %208 to i64
  %346 = and i64 %conv137, 4294967288
  %347 = add nsw i64 %346, -8
  %348 = lshr exact i64 %347, 3
  %349 = add nuw nsw i64 %348, 1
  %min.iters.check736 = icmp ult i32 %205, 8
  %n.vec739 = and i64 %conv137, 4294967288
  %broadcast.splatinsert750 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat751 = shufflevector <4 x float> %broadcast.splatinsert750, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert752 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat753 = shufflevector <4 x float> %broadcast.splatinsert752, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter = and i64 %349, 1
  %350 = icmp eq i64 %347, 0
  %unroll_iter = sub nuw nsw i64 %349, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n743 = icmp eq i64 %n.vec739, %conv137
  br label %for.cond191.preheader.us.us.1

for.cond191.preheader.us.us.1:                    ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.cond191.preheader.us.us.preheader.1
  %indvars.iv540.1 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader.1 ], [ %indvars.iv.next541.1, %for.cond191.for.inc205_crit_edge.us.us.1 ]
  %arrayidx198.us.us.1 = getelementptr inbounds float*, float** %177, i64 %indvars.iv540.1
  %351 = load float*, float** %arrayidx198.us.us.1, align 8, !tbaa !27
  br i1 %min.iters.check736, label %for.body194.us.us.1.preheader, label %vector.ph737

vector.ph737:                                     ; preds = %for.cond191.preheader.us.us.1
  br i1 %350, label %middle.block734.unr-lcssa, label %vector.body733

vector.body733:                                   ; preds = %vector.body733, %vector.ph737
  %index740 = phi i64 [ %index.next741.1, %vector.body733 ], [ 0, %vector.ph737 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body733 ], [ %unroll_iter, %vector.ph737 ]
  %352 = getelementptr inbounds float, float* %351, i64 %index740
  %353 = bitcast float* %352 to <4 x float>*
  %wide.load748 = load <4 x float>, <4 x float>* %353, align 4, !tbaa !34
  %354 = getelementptr inbounds float, float* %352, i64 4
  %355 = bitcast float* %354 to <4 x float>*
  %wide.load749 = load <4 x float>, <4 x float>* %355, align 4, !tbaa !34
  %356 = fmul <4 x float> %broadcast.splat751, %wide.load748
  %357 = fmul <4 x float> %broadcast.splat753, %wide.load749
  %358 = bitcast float* %352 to <4 x float>*
  store <4 x float> %356, <4 x float>* %358, align 4, !tbaa !34
  %359 = bitcast float* %354 to <4 x float>*
  store <4 x float> %357, <4 x float>* %359, align 4, !tbaa !34
  %index.next741 = or i64 %index740, 8
  %360 = getelementptr inbounds float, float* %351, i64 %index.next741
  %361 = bitcast float* %360 to <4 x float>*
  %wide.load748.1 = load <4 x float>, <4 x float>* %361, align 4, !tbaa !34
  %362 = getelementptr inbounds float, float* %360, i64 4
  %363 = bitcast float* %362 to <4 x float>*
  %wide.load749.1 = load <4 x float>, <4 x float>* %363, align 4, !tbaa !34
  %364 = fmul <4 x float> %broadcast.splat751, %wide.load748.1
  %365 = fmul <4 x float> %broadcast.splat753, %wide.load749.1
  %366 = bitcast float* %360 to <4 x float>*
  store <4 x float> %364, <4 x float>* %366, align 4, !tbaa !34
  %367 = bitcast float* %362 to <4 x float>*
  store <4 x float> %365, <4 x float>* %367, align 4, !tbaa !34
  %index.next741.1 = add i64 %index740, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block734.unr-lcssa, label %vector.body733, !llvm.loop !326

middle.block734.unr-lcssa:                        ; preds = %vector.body733, %vector.ph737
  %index740.unr = phi i64 [ 0, %vector.ph737 ], [ %index.next741.1, %vector.body733 ]
  br i1 %lcmp.mod, label %middle.block734, label %vector.body733.epil

vector.body733.epil:                              ; preds = %middle.block734.unr-lcssa
  %368 = getelementptr inbounds float, float* %351, i64 %index740.unr
  %369 = bitcast float* %368 to <4 x float>*
  %wide.load748.epil = load <4 x float>, <4 x float>* %369, align 4, !tbaa !34
  %370 = getelementptr inbounds float, float* %368, i64 4
  %371 = bitcast float* %370 to <4 x float>*
  %wide.load749.epil = load <4 x float>, <4 x float>* %371, align 4, !tbaa !34
  %372 = fmul <4 x float> %broadcast.splat751, %wide.load748.epil
  %373 = fmul <4 x float> %broadcast.splat753, %wide.load749.epil
  %374 = bitcast float* %368 to <4 x float>*
  store <4 x float> %372, <4 x float>* %374, align 4, !tbaa !34
  %375 = bitcast float* %370 to <4 x float>*
  store <4 x float> %373, <4 x float>* %375, align 4, !tbaa !34
  br label %middle.block734

middle.block734:                                  ; preds = %vector.body733.epil, %middle.block734.unr-lcssa
  br i1 %cmp.n743, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1.preheader

for.body194.us.us.1.preheader:                    ; preds = %middle.block734, %for.cond191.preheader.us.us.1
  %indvars.iv538.1.ph = phi i64 [ 0, %for.cond191.preheader.us.us.1 ], [ %n.vec739, %middle.block734 ]
  br label %for.body194.us.us.1

for.body194.us.us.1:                              ; preds = %for.body194.us.us.1, %for.body194.us.us.1.preheader
  %indvars.iv538.1 = phi i64 [ %indvars.iv.next539.1, %for.body194.us.us.1 ], [ %indvars.iv538.1.ph, %for.body194.us.us.1.preheader ]
  %arrayidx200.us.us.1 = getelementptr inbounds float, float* %351, i64 %indvars.iv538.1
  %376 = load float, float* %arrayidx200.us.us.1, align 4, !tbaa !34
  %mul201.us.us.1 = fmul float %mul183, %376
  store float %mul201.us.us.1, float* %arrayidx200.us.us.1, align 4, !tbaa !34
  %indvars.iv.next539.1 = add nuw nsw i64 %indvars.iv538.1, 1
  %exitcond.1 = icmp eq i64 %indvars.iv.next539.1, %conv137
  br i1 %exitcond.1, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1, !llvm.loop !327

for.cond191.for.inc205_crit_edge.us.us.1:         ; preds = %for.body194.us.us.1, %middle.block734
  %indvars.iv.next541.1 = add nuw nsw i64 %indvars.iv540.1, 1
  %exitcond543.1 = icmp eq i64 %indvars.iv.next541.1, %wide.trip.count542.1
  br i1 %exitcond543.1, label %for.cond211.preheader, label %for.cond191.preheader.us.us.1

for.body38.us.1:                                  ; preds = %for.body38.us.1, %for.cond35.for.inc49_crit_edge.us
  %indvars.iv570.1 = phi i64 [ 0, %for.cond35.for.inc49_crit_edge.us ], [ %indvars.iv.next571.1, %for.body38.us.1 ]
  %call41.us.1 = call i8* @_Znam(i64 %34) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us.1, i8 0, i64 %34, i1 false)
  %arrayidx45.us.1 = getelementptr inbounds float*, float** %43, i64 %indvars.iv570.1
  %377 = bitcast float** %arrayidx45.us.1 to i8**
  store i8* %call41.us.1, i8** %377, align 8, !tbaa !27
  %indvars.iv.next571.1 = add nuw nsw i64 %indvars.iv570.1, 1
  %exitcond573.1 = icmp eq i64 %indvars.iv.next571.1, %conv31
  br i1 %exitcond573.1, label %for.cond52.preheader, label %for.body38.us.1
}

; Function Attrs: uwtable
define %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nocapture readnone %this, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* nocapture readnone %HRTFPath) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = tail call i8* @_Znwm(i64 16) #25
  %0 = bitcast i8* %call to i32 (...)***
  %i_sampleRate2.i.i = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %i_sampleRate2.i.i to i32*
  store i32 %nSampleRate, i32* %1, align 8, !tbaa !18
  %i_len.i.i = getelementptr inbounds i8, i8* %call, i64 12
  %2 = bitcast i8* %i_len.i.i to i32*
  store i32 0, i32* %2, align 4, !tbaa !23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %call.i10 = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store i32 %call.i10, i32* %2, align 4, !tbaa !23
  %3 = bitcast i8* %call to %class.HRTF*
  %cmp.i = icmp eq i32 %call.i10, 0
  br i1 %cmp.i, label %delete.notnull, label %cleanup

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %call) #26
  resume { i8*, i32 } %4

delete.notnull:                                   ; preds = %invoke.cont
  %5 = bitcast i8* %call to void (%class.HRTF*)***
  %vtable = load void (%class.HRTF*)**, void (%class.HRTF*)*** %5, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable, i64 1
  %6 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn, align 8
  tail call void %6(%class.HRTF* nonnull %3) #24
  br label %cleanup

cleanup:                                          ; preds = %delete.notnull, %invoke.cont
  %retval.0 = phi %class.HRTF* [ null, %delete.notnull ], [ %3, %invoke.cont ]
  ret %class.HRTF* %retval.0
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer5ResetEv(%class.CAmbisonicBinauralizer* nocapture readonly %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !60
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %_M_start.i8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %3 = bitcast float** %_M_start.i8 to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !60
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %conv6 = zext i32 %5 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul7, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN22CAmbisonicBinauralizer7RefreshEv(%class.CAmbisonicBinauralizer* nocapture %this) unnamed_addr #8 align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, float** nocapture readonly %ppfDst) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %m_nFFTSize208 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %_M_start.i522 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i522 to i8**
  %_M_head_impl.i.i.i.i.i.i520 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize220 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i517 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i515 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %m_nFFTBins239 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i490 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %m_fFFTScaler331 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %m_nOverlapLength347 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %3 = load i8*, i8** %0, align 8, !tbaa !60
  %4 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %conv209 = zext i32 %4 to i64
  %mul210 = shl nuw nsw i64 %conv209, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul210, i1 false)
  %5 = load i32, i32* %1, align 8, !tbaa !49
  %cmp213527 = icmp eq i32 %5, 0
  br i1 %cmp213527, label %entry.for.cond327.preheader_crit_edge, label %for.body214.lr.ph

entry.for.cond327.preheader_crit_edge:            ; preds = %entry
  %.pre = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  br label %for.cond327.preheader

for.body214.lr.ph:                                ; preds = %entry
  %_M_start.i511 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body214

for.cond327.preheader:                            ; preds = %for.inc324, %entry.for.cond327.preheader_crit_edge
  %6 = phi i32 [ %.pre, %entry.for.cond327.preheader_crit_edge ], [ %78, %for.inc324 ]
  %cmp329529 = icmp eq i32 %6, 0
  br i1 %cmp329529, label %for.cond327.preheader.for.end338_crit_edge, label %for.body330.lr.ph

for.cond327.preheader.for.end338_crit_edge:       ; preds = %for.cond327.preheader
  %.pre546 = load i8*, i8** %0, align 8, !tbaa !60
  br label %for.end338

for.body330.lr.ph:                                ; preds = %for.cond327.preheader
  %7 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %8 = bitcast float* %7 to i8*
  %9 = zext i32 %6 to i64
  %min.iters.check572 = icmp ult i32 %6, 8
  br i1 %min.iters.check572, label %for.body330.preheader, label %vector.memcheck582

for.body330.preheader:                            ; preds = %middle.block570, %vector.memcheck582, %for.body330.lr.ph
  %indvars.iv540.ph = phi i64 [ 0, %vector.memcheck582 ], [ 0, %for.body330.lr.ph ], [ %n.vec585, %middle.block570 ]
  br label %for.body330

vector.memcheck582:                               ; preds = %for.body330.lr.ph
  %scevgep574 = getelementptr float, float* %7, i64 %9
  %scevgep576 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %scevgep576577 = bitcast float* %scevgep576 to i8*
  %uglygep = getelementptr i8, i8* %scevgep576577, i64 1
  %bound0578 = icmp ugt i8* %uglygep, %8
  %bound1579 = icmp ult float* %m_fFFTScaler331, %scevgep574
  %found.conflict580 = and i1 %bound0578, %bound1579
  br i1 %found.conflict580, label %for.body330.preheader, label %vector.ph583

vector.ph583:                                     ; preds = %vector.memcheck582
  %n.vec585 = and i64 %9, 4294967288
  %10 = add nsw i64 %n.vec585, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %xtraiter726 = and i64 %12, 1
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %middle.block570.unr-lcssa, label %vector.ph583.new

vector.ph583.new:                                 ; preds = %vector.ph583
  %unroll_iter728 = sub nuw nsw i64 %12, %xtraiter726
  %14 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !328
  %15 = insertelement <4 x float> undef, float %14, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = insertelement <4 x float> undef, float %14, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !328
  %20 = insertelement <4 x float> undef, float %19, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> zeroinitializer
  %22 = insertelement <4 x float> undef, float %19, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body569

vector.body569:                                   ; preds = %vector.body569, %vector.ph583.new
  %index586 = phi i64 [ 0, %vector.ph583.new ], [ %index.next587.1, %vector.body569 ]
  %niter729 = phi i64 [ %unroll_iter728, %vector.ph583.new ], [ %niter729.nsub.1, %vector.body569 ]
  %24 = getelementptr inbounds float, float* %7, i64 %index586
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load594 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load595 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %28 = fmul <4 x float> %16, %wide.load594
  %29 = fmul <4 x float> %18, %wide.load595
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %31 = bitcast float* %26 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %index.next587 = or i64 %index586, 8
  %32 = getelementptr inbounds float, float* %7, i64 %index.next587
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load594.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %34 = getelementptr inbounds float, float* %32, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load595.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %36 = fmul <4 x float> %21, %wide.load594.1
  %37 = fmul <4 x float> %23, %wide.load595.1
  %38 = bitcast float* %32 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %39 = bitcast float* %34 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %index.next587.1 = add i64 %index586, 16
  %niter729.nsub.1 = add i64 %niter729, -2
  %niter729.ncmp.1 = icmp eq i64 %niter729.nsub.1, 0
  br i1 %niter729.ncmp.1, label %middle.block570.unr-lcssa, label %vector.body569, !llvm.loop !333

middle.block570.unr-lcssa:                        ; preds = %vector.body569, %vector.ph583
  %index586.unr = phi i64 [ 0, %vector.ph583 ], [ %index.next587.1, %vector.body569 ]
  %lcmp.mod727 = icmp eq i64 %xtraiter726, 0
  br i1 %lcmp.mod727, label %middle.block570, label %vector.body569.epil

vector.body569.epil:                              ; preds = %middle.block570.unr-lcssa
  %40 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !328
  %41 = insertelement <4 x float> undef, float %40, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = insertelement <4 x float> undef, float %40, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> zeroinitializer
  %45 = getelementptr inbounds float, float* %7, i64 %index586.unr
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load594.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %47 = getelementptr inbounds float, float* %45, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  %wide.load595.epil = load <4 x float>, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %49 = fmul <4 x float> %42, %wide.load594.epil
  %50 = fmul <4 x float> %44, %wide.load595.epil
  %51 = bitcast float* %45 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  %52 = bitcast float* %47 to <4 x float>*
  store <4 x float> %50, <4 x float>* %52, align 4, !tbaa !34, !alias.scope !331, !noalias !328
  br label %middle.block570

middle.block570:                                  ; preds = %vector.body569.epil, %middle.block570.unr-lcssa
  %cmp.n589 = icmp eq i64 %n.vec585, %9
  br i1 %cmp.n589, label %for.end338, label %for.body330.preheader

for.body214:                                      ; preds = %for.inc324, %for.body214.lr.ph
  %indvars.iv538 = phi i64 [ 0, %for.body214.lr.ph ], [ %indvars.iv.next539, %for.inc324 ]
  %53 = load i8*, i8** %2, align 8, !tbaa !60
  %54 = load float**, float*** %_M_head_impl.i.i.i.i.i.i520, align 8, !tbaa !27
  %arrayidx.i521 = getelementptr inbounds float*, float** %54, i64 %indvars.iv538
  %55 = bitcast float** %arrayidx.i521 to i8**
  %56 = load i8*, i8** %55, align 8, !tbaa !27
  %57 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv221 = zext i32 %57 to i64
  %mul222 = shl nuw nsw i64 %conv221, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %56, i64 %mul222, i1 false)
  %58 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv225 = zext i32 %58 to i64
  %59 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %add.ptr.i519 = getelementptr inbounds float, float* %59, i64 %conv225
  %60 = bitcast float* %add.ptr.i519 to i8*
  %61 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %sub229 = sub i32 %61, %58
  %conv230 = zext i32 %sub229 to i64
  %mul231 = shl nuw nsw i64 %conv230, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 0, i64 %mul231, i1 false)
  %62 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i517, align 8, !tbaa !27
  %63 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %64 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %62, float* %63, %struct.kiss_fft_cpx* %64)
  %65 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !288
  %cmp240523 = icmp eq i32 %65, 0
  br i1 %cmp240523, label %for.end303, label %for.body241.lr.ph

for.body241.lr.ph:                                ; preds = %for.body214
  %66 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  %67 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i511, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i.i509 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %67, i64 %indvars.iv538, i32 0, i32 0, i32 0, i32 0
  %68 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i509, align 8, !tbaa !27
  br label %for.body241

for.body241:                                      ; preds = %for.body241, %for.body241.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body241.lr.ph ], [ %indvars.iv.next, %for.body241 ]
  %r245 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %66, i64 %indvars.iv, i32 0
  %69 = load float, float* %r245, align 4, !tbaa !213
  %r253 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %68, i64 %indvars.iv, i32 0
  %70 = load float, float* %r253, align 4, !tbaa !213
  %mul254 = fmul float %69, %70
  %i258 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %66, i64 %indvars.iv, i32 1
  %71 = load float, float* %i258, align 4, !tbaa !215
  %i266 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %68, i64 %indvars.iv, i32 1
  %72 = load float, float* %i266, align 4, !tbaa !215
  %mul267 = fmul float %71, %72
  %sub268 = fsub float %mul254, %mul267
  %mul282 = fmul float %69, %72
  %mul295 = fmul float %70, %71
  %add296 = fadd float %mul295, %mul282
  store float %sub268, float* %r245, align 4
  store float %add296, float* %i258, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %73 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !288
  %74 = zext i32 %73 to i64
  %cmp240 = icmp ult i64 %indvars.iv.next, %74
  br i1 %cmp240, label %for.body241, label %for.end303

for.end303:                                       ; preds = %for.body241, %for.body214
  %75 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i490, align 8, !tbaa !27
  %76 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  %77 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %75, %struct.kiss_fft_cpx* %76, float* %77)
  %78 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %cmp312525 = icmp eq i32 %78, 0
  br i1 %cmp312525, label %for.inc324, label %for.body313.lr.ph

for.body313.lr.ph:                                ; preds = %for.end303
  %79 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %80 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %81 = zext i32 %78 to i64
  %min.iters.check = icmp ult i32 %78, 8
  br i1 %min.iters.check, label %for.body313.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body313.lr.ph
  %scevgep = getelementptr float, float* %80, i64 %81
  %scevgep563 = getelementptr float, float* %79, i64 %81
  %bound0 = icmp ult float* %80, %scevgep563
  %bound1 = icmp ult float* %79, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body313.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %81, 4294967288
  %82 = add nsw i64 %n.vec, -8
  %83 = lshr exact i64 %82, 3
  %84 = add nuw nsw i64 %83, 1
  %xtraiter730 = and i64 %84, 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter732 = sub nuw nsw i64 %84, %xtraiter730
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter733 = phi i64 [ %unroll_iter732, %vector.ph.new ], [ %niter733.nsub.1, %vector.body ]
  %86 = getelementptr inbounds float, float* %79, i64 %index
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %87, align 4, !tbaa !34, !alias.scope !334
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load566 = load <4 x float>, <4 x float>* %89, align 4, !tbaa !34, !alias.scope !334
  %90 = getelementptr inbounds float, float* %80, i64 %index
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load567 = load <4 x float>, <4 x float>* %91, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %92 = getelementptr inbounds float, float* %90, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load568 = load <4 x float>, <4 x float>* %93, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %94 = fadd <4 x float> %wide.load, %wide.load567
  %95 = fadd <4 x float> %wide.load566, %wide.load568
  %96 = bitcast float* %90 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %97 = bitcast float* %92 to <4 x float>*
  store <4 x float> %95, <4 x float>* %97, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %index.next = or i64 %index, 8
  %98 = getelementptr inbounds float, float* %79, i64 %index.next
  %99 = bitcast float* %98 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %99, align 4, !tbaa !34, !alias.scope !334
  %100 = getelementptr inbounds float, float* %98, i64 4
  %101 = bitcast float* %100 to <4 x float>*
  %wide.load566.1 = load <4 x float>, <4 x float>* %101, align 4, !tbaa !34, !alias.scope !334
  %102 = getelementptr inbounds float, float* %80, i64 %index.next
  %103 = bitcast float* %102 to <4 x float>*
  %wide.load567.1 = load <4 x float>, <4 x float>* %103, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %104 = getelementptr inbounds float, float* %102, i64 4
  %105 = bitcast float* %104 to <4 x float>*
  %wide.load568.1 = load <4 x float>, <4 x float>* %105, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %106 = fadd <4 x float> %wide.load.1, %wide.load567.1
  %107 = fadd <4 x float> %wide.load566.1, %wide.load568.1
  %108 = bitcast float* %102 to <4 x float>*
  store <4 x float> %106, <4 x float>* %108, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %109 = bitcast float* %104 to <4 x float>*
  store <4 x float> %107, <4 x float>* %109, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %index.next.1 = add i64 %index, 16
  %niter733.nsub.1 = add i64 %niter733, -2
  %niter733.ncmp.1 = icmp eq i64 %niter733.nsub.1, 0
  br i1 %niter733.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !339

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod731 = icmp eq i64 %xtraiter730, 0
  br i1 %lcmp.mod731, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %110 = getelementptr inbounds float, float* %79, i64 %index.unr
  %111 = bitcast float* %110 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %111, align 4, !tbaa !34, !alias.scope !334
  %112 = getelementptr inbounds float, float* %110, i64 4
  %113 = bitcast float* %112 to <4 x float>*
  %wide.load566.epil = load <4 x float>, <4 x float>* %113, align 4, !tbaa !34, !alias.scope !334
  %114 = getelementptr inbounds float, float* %80, i64 %index.unr
  %115 = bitcast float* %114 to <4 x float>*
  %wide.load567.epil = load <4 x float>, <4 x float>* %115, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %116 = getelementptr inbounds float, float* %114, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  %wide.load568.epil = load <4 x float>, <4 x float>* %117, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %118 = fadd <4 x float> %wide.load.epil, %wide.load567.epil
  %119 = fadd <4 x float> %wide.load566.epil, %wide.load568.epil
  %120 = bitcast float* %114 to <4 x float>*
  store <4 x float> %118, <4 x float>* %120, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  %121 = bitcast float* %116 to <4 x float>*
  store <4 x float> %119, <4 x float>* %121, align 4, !tbaa !34, !alias.scope !337, !noalias !334
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %81
  br i1 %cmp.n, label %for.inc324, label %for.body313.preheader

for.body313.preheader:                            ; preds = %middle.block, %vector.memcheck, %for.body313.lr.ph
  %indvars.iv536.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body313.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body313

for.body313:                                      ; preds = %for.body313, %for.body313.preheader
  %indvars.iv536 = phi i64 [ %indvars.iv.next537, %for.body313 ], [ %indvars.iv536.ph, %for.body313.preheader ]
  %add.ptr.i488 = getelementptr inbounds float, float* %79, i64 %indvars.iv536
  %122 = load float, float* %add.ptr.i488, align 4, !tbaa !34
  %add.ptr.i486 = getelementptr inbounds float, float* %80, i64 %indvars.iv536
  %123 = load float, float* %add.ptr.i486, align 4, !tbaa !34
  %add320 = fadd float %122, %123
  store float %add320, float* %add.ptr.i486, align 4, !tbaa !34
  %indvars.iv.next537 = add nuw nsw i64 %indvars.iv536, 1
  %cmp312 = icmp ult i64 %indvars.iv.next537, %81
  br i1 %cmp312, label %for.body313, label %for.inc324, !llvm.loop !340

for.inc324:                                       ; preds = %for.body313, %middle.block, %for.end303
  %indvars.iv.next539 = add nuw nsw i64 %indvars.iv538, 1
  %124 = load i32, i32* %1, align 8, !tbaa !49
  %125 = zext i32 %124 to i64
  %cmp213 = icmp ult i64 %indvars.iv.next539, %125
  br i1 %cmp213, label %for.body214, label %for.cond327.preheader

for.body330:                                      ; preds = %for.body330, %for.body330.preheader
  %indvars.iv540 = phi i64 [ %indvars.iv.next541, %for.body330 ], [ %indvars.iv540.ph, %for.body330.preheader ]
  %126 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289
  %add.ptr.i484 = getelementptr inbounds float, float* %7, i64 %indvars.iv540
  %127 = load float, float* %add.ptr.i484, align 4, !tbaa !34
  %mul335 = fmul float %126, %127
  store float %mul335, float* %add.ptr.i484, align 4, !tbaa !34
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %cmp329 = icmp ult i64 %indvars.iv.next541, %9
  br i1 %cmp329, label %for.body330, label %for.end338, !llvm.loop !341

for.end338:                                       ; preds = %for.body330, %middle.block570, %for.cond327.preheader.for.end338_crit_edge
  %128 = phi i8* [ %.pre546, %for.cond327.preheader.for.end338_crit_edge ], [ %8, %middle.block570 ], [ %8, %for.body330 ]
  %129 = bitcast float** %ppfDst to i8**
  %130 = load i8*, i8** %129, align 8, !tbaa !27
  %131 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv344 = zext i32 %131 to i64
  %mul345 = shl nuw nsw i64 %conv344, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %128, i64 %mul345, i1 false)
  %132 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !286
  %cmp348531 = icmp eq i32 %132, 0
  %arrayidx352 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  br i1 %cmp348531, label %for.end338.for.end362_crit_edge, label %for.body349.lr.ph

for.end338.for.end362_crit_edge:                  ; preds = %for.end338
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %arrayidx352 to i8**
  %.pre547 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !60
  br label %for.end362

for.body349.lr.ph:                                ; preds = %for.end338
  %_M_start.i480 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352, i64 0, i32 0, i32 0, i32 0
  %133 = load float*, float** %_M_start.i480, align 8, !tbaa !60
  %134 = bitcast float* %133 to i8*
  %135 = load float*, float** %ppfDst, align 8, !tbaa !27
  %136 = zext i32 %132 to i64
  %min.iters.check599 = icmp ult i32 %132, 8
  br i1 %min.iters.check599, label %for.body349.preheader, label %vector.memcheck609

vector.memcheck609:                               ; preds = %for.body349.lr.ph
  %scevgep601 = getelementptr float, float* %135, i64 %136
  %scevgep603 = getelementptr float, float* %133, i64 %136
  %bound0605 = icmp ult float* %135, %scevgep603
  %bound1606 = icmp ult float* %133, %scevgep601
  %found.conflict607 = and i1 %bound0605, %bound1606
  br i1 %found.conflict607, label %for.body349.preheader, label %vector.ph610

vector.ph610:                                     ; preds = %vector.memcheck609
  %n.vec612 = and i64 %136, 4294967288
  %137 = add nsw i64 %n.vec612, -8
  %138 = lshr exact i64 %137, 3
  %139 = add nuw nsw i64 %138, 1
  %xtraiter722 = and i64 %139, 1
  %140 = icmp eq i64 %137, 0
  br i1 %140, label %middle.block597.unr-lcssa, label %vector.ph610.new

vector.ph610.new:                                 ; preds = %vector.ph610
  %unroll_iter724 = sub nuw nsw i64 %139, %xtraiter722
  br label %vector.body596

vector.body596:                                   ; preds = %vector.body596, %vector.ph610.new
  %index613 = phi i64 [ 0, %vector.ph610.new ], [ %index.next614.1, %vector.body596 ]
  %niter725 = phi i64 [ %unroll_iter724, %vector.ph610.new ], [ %niter725.nsub.1, %vector.body596 ]
  %141 = getelementptr inbounds float, float* %133, i64 %index613
  %142 = bitcast float* %141 to <4 x float>*
  %wide.load621 = load <4 x float>, <4 x float>* %142, align 4, !tbaa !34, !alias.scope !342
  %143 = getelementptr inbounds float, float* %141, i64 4
  %144 = bitcast float* %143 to <4 x float>*
  %wide.load622 = load <4 x float>, <4 x float>* %144, align 4, !tbaa !34, !alias.scope !342
  %145 = getelementptr inbounds float, float* %135, i64 %index613
  %146 = bitcast float* %145 to <4 x float>*
  %wide.load623 = load <4 x float>, <4 x float>* %146, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %147 = getelementptr inbounds float, float* %145, i64 4
  %148 = bitcast float* %147 to <4 x float>*
  %wide.load624 = load <4 x float>, <4 x float>* %148, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %149 = fadd <4 x float> %wide.load621, %wide.load623
  %150 = fadd <4 x float> %wide.load622, %wide.load624
  %151 = bitcast float* %145 to <4 x float>*
  store <4 x float> %149, <4 x float>* %151, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %152 = bitcast float* %147 to <4 x float>*
  store <4 x float> %150, <4 x float>* %152, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %index.next614 = or i64 %index613, 8
  %153 = getelementptr inbounds float, float* %133, i64 %index.next614
  %154 = bitcast float* %153 to <4 x float>*
  %wide.load621.1 = load <4 x float>, <4 x float>* %154, align 4, !tbaa !34, !alias.scope !342
  %155 = getelementptr inbounds float, float* %153, i64 4
  %156 = bitcast float* %155 to <4 x float>*
  %wide.load622.1 = load <4 x float>, <4 x float>* %156, align 4, !tbaa !34, !alias.scope !342
  %157 = getelementptr inbounds float, float* %135, i64 %index.next614
  %158 = bitcast float* %157 to <4 x float>*
  %wide.load623.1 = load <4 x float>, <4 x float>* %158, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %159 = getelementptr inbounds float, float* %157, i64 4
  %160 = bitcast float* %159 to <4 x float>*
  %wide.load624.1 = load <4 x float>, <4 x float>* %160, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %161 = fadd <4 x float> %wide.load621.1, %wide.load623.1
  %162 = fadd <4 x float> %wide.load622.1, %wide.load624.1
  %163 = bitcast float* %157 to <4 x float>*
  store <4 x float> %161, <4 x float>* %163, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %164 = bitcast float* %159 to <4 x float>*
  store <4 x float> %162, <4 x float>* %164, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %index.next614.1 = add i64 %index613, 16
  %niter725.nsub.1 = add i64 %niter725, -2
  %niter725.ncmp.1 = icmp eq i64 %niter725.nsub.1, 0
  br i1 %niter725.ncmp.1, label %middle.block597.unr-lcssa, label %vector.body596, !llvm.loop !347

middle.block597.unr-lcssa:                        ; preds = %vector.body596, %vector.ph610
  %index613.unr = phi i64 [ 0, %vector.ph610 ], [ %index.next614.1, %vector.body596 ]
  %lcmp.mod723 = icmp eq i64 %xtraiter722, 0
  br i1 %lcmp.mod723, label %middle.block597, label %vector.body596.epil

vector.body596.epil:                              ; preds = %middle.block597.unr-lcssa
  %165 = getelementptr inbounds float, float* %133, i64 %index613.unr
  %166 = bitcast float* %165 to <4 x float>*
  %wide.load621.epil = load <4 x float>, <4 x float>* %166, align 4, !tbaa !34, !alias.scope !342
  %167 = getelementptr inbounds float, float* %165, i64 4
  %168 = bitcast float* %167 to <4 x float>*
  %wide.load622.epil = load <4 x float>, <4 x float>* %168, align 4, !tbaa !34, !alias.scope !342
  %169 = getelementptr inbounds float, float* %135, i64 %index613.unr
  %170 = bitcast float* %169 to <4 x float>*
  %wide.load623.epil = load <4 x float>, <4 x float>* %170, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %171 = getelementptr inbounds float, float* %169, i64 4
  %172 = bitcast float* %171 to <4 x float>*
  %wide.load624.epil = load <4 x float>, <4 x float>* %172, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %173 = fadd <4 x float> %wide.load621.epil, %wide.load623.epil
  %174 = fadd <4 x float> %wide.load622.epil, %wide.load624.epil
  %175 = bitcast float* %169 to <4 x float>*
  store <4 x float> %173, <4 x float>* %175, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  %176 = bitcast float* %171 to <4 x float>*
  store <4 x float> %174, <4 x float>* %176, align 4, !tbaa !34, !alias.scope !345, !noalias !342
  br label %middle.block597

middle.block597:                                  ; preds = %vector.body596.epil, %middle.block597.unr-lcssa
  %cmp.n616 = icmp eq i64 %n.vec612, %136
  br i1 %cmp.n616, label %for.end362.loopexit, label %for.body349.preheader

for.body349.preheader:                            ; preds = %middle.block597, %vector.memcheck609, %for.body349.lr.ph
  %indvars.iv542.ph = phi i64 [ 0, %vector.memcheck609 ], [ 0, %for.body349.lr.ph ], [ %n.vec612, %middle.block597 ]
  br label %for.body349

for.body349:                                      ; preds = %for.body349, %for.body349.preheader
  %indvars.iv542 = phi i64 [ %indvars.iv.next543, %for.body349 ], [ %indvars.iv542.ph, %for.body349.preheader ]
  %add.ptr.i481 = getelementptr inbounds float, float* %133, i64 %indvars.iv542
  %177 = load float, float* %add.ptr.i481, align 4, !tbaa !34
  %arrayidx358 = getelementptr inbounds float, float* %135, i64 %indvars.iv542
  %178 = load float, float* %arrayidx358, align 4, !tbaa !34
  %add359 = fadd float %177, %178
  store float %add359, float* %arrayidx358, align 4, !tbaa !34
  %indvars.iv.next543 = add nuw nsw i64 %indvars.iv542, 1
  %cmp348 = icmp ult i64 %indvars.iv.next543, %136
  br i1 %cmp348, label %for.body349, label %for.end362.loopexit, !llvm.loop !348

for.end362.loopexit:                              ; preds = %for.body349, %middle.block597
  %phitmp = zext i32 %132 to i64
  %phitmp555 = shl nuw nsw i64 %phitmp, 2
  br label %for.end362

for.end362:                                       ; preds = %for.end362.loopexit, %for.end338.for.end362_crit_edge
  %179 = phi i8* [ %.pre547, %for.end338.for.end362_crit_edge ], [ %134, %for.end362.loopexit ]
  %.lcssa = phi i64 [ 0, %for.end338.for.end362_crit_edge ], [ %phitmp555, %for.end362.loopexit ]
  %180 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv369 = zext i32 %180 to i64
  %181 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %181, i64 %conv369
  %182 = bitcast float* %add.ptr.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* nonnull align 4 %182, i64 %.lcssa, i1 false)
  %183 = load i8*, i8** %0, align 8, !tbaa !60
  %184 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %conv209.1 = zext i32 %184 to i64
  %mul210.1 = shl nuw nsw i64 %conv209.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %183, i8 0, i64 %mul210.1, i1 false)
  %185 = load i32, i32* %1, align 8, !tbaa !49
  %cmp213527.1 = icmp eq i32 %185, 0
  br i1 %cmp213527.1, label %for.end362.for.cond327.preheader.1_crit_edge, label %for.body214.lr.ph.1

for.end362.for.cond327.preheader.1_crit_edge:     ; preds = %for.end362
  %.pre548 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  br label %for.cond327.preheader.1

for.body214.lr.ph.1:                              ; preds = %for.end362
  %_M_start.i511.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body214.1

for.body214.1:                                    ; preds = %for.inc324.1, %for.body214.lr.ph.1
  %indvars.iv538.1 = phi i64 [ 0, %for.body214.lr.ph.1 ], [ %indvars.iv.next539.1, %for.inc324.1 ]
  %186 = load i8*, i8** %2, align 8, !tbaa !60
  %187 = load float**, float*** %_M_head_impl.i.i.i.i.i.i520, align 8, !tbaa !27
  %arrayidx.i521.1 = getelementptr inbounds float*, float** %187, i64 %indvars.iv538.1
  %188 = bitcast float** %arrayidx.i521.1 to i8**
  %189 = load i8*, i8** %188, align 8, !tbaa !27
  %190 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv221.1 = zext i32 %190 to i64
  %mul222.1 = shl nuw nsw i64 %conv221.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %189, i64 %mul222.1, i1 false)
  %191 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv225.1 = zext i32 %191 to i64
  %192 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %add.ptr.i519.1 = getelementptr inbounds float, float* %192, i64 %conv225.1
  %193 = bitcast float* %add.ptr.i519.1 to i8*
  %194 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %sub229.1 = sub i32 %194, %191
  %conv230.1 = zext i32 %sub229.1 to i64
  %mul231.1 = shl nuw nsw i64 %conv230.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %193, i8 0, i64 %mul231.1, i1 false)
  %195 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i517, align 8, !tbaa !27
  %196 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %197 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %195, float* %196, %struct.kiss_fft_cpx* %197)
  %198 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !288
  %cmp240523.1 = icmp eq i32 %198, 0
  br i1 %cmp240523.1, label %for.end303.1, label %for.body241.lr.ph.1

for.body241.lr.ph.1:                              ; preds = %for.body214.1
  %199 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  %200 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i511.1, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i.i509.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %200, i64 %indvars.iv538.1, i32 0, i32 0, i32 0, i32 0
  %201 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i509.1, align 8, !tbaa !27
  br label %for.body241.1

for.body241.1:                                    ; preds = %for.body241.1, %for.body241.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body241.lr.ph.1 ], [ %indvars.iv.next.1, %for.body241.1 ]
  %r245.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %199, i64 %indvars.iv.1, i32 0
  %202 = load float, float* %r245.1, align 4, !tbaa !213
  %r253.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %201, i64 %indvars.iv.1, i32 0
  %203 = load float, float* %r253.1, align 4, !tbaa !213
  %mul254.1 = fmul float %202, %203
  %i258.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %199, i64 %indvars.iv.1, i32 1
  %204 = load float, float* %i258.1, align 4, !tbaa !215
  %i266.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %201, i64 %indvars.iv.1, i32 1
  %205 = load float, float* %i266.1, align 4, !tbaa !215
  %mul267.1 = fmul float %204, %205
  %sub268.1 = fsub float %mul254.1, %mul267.1
  %mul282.1 = fmul float %202, %205
  %mul295.1 = fmul float %203, %204
  %add296.1 = fadd float %mul295.1, %mul282.1
  store float %sub268.1, float* %r245.1, align 4
  store float %add296.1, float* %i258.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %206 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !288
  %207 = zext i32 %206 to i64
  %cmp240.1 = icmp ult i64 %indvars.iv.next.1, %207
  br i1 %cmp240.1, label %for.body241.1, label %for.end303.1

for.end303.1:                                     ; preds = %for.body241.1, %for.body214.1
  %208 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i490, align 8, !tbaa !27
  %209 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !27
  %210 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %208, %struct.kiss_fft_cpx* %209, float* %210)
  %211 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !287
  %cmp312525.1 = icmp eq i32 %211, 0
  br i1 %cmp312525.1, label %for.inc324.1, label %for.body313.lr.ph.1

for.body313.lr.ph.1:                              ; preds = %for.end303.1
  %212 = load float*, float** %_M_start.i522, align 8, !tbaa !60
  %213 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %214 = zext i32 %211 to i64
  %min.iters.check628 = icmp ult i32 %211, 8
  br i1 %min.iters.check628, label %for.body313.1.preheader, label %vector.memcheck638

vector.memcheck638:                               ; preds = %for.body313.lr.ph.1
  %scevgep630 = getelementptr float, float* %213, i64 %214
  %scevgep632 = getelementptr float, float* %212, i64 %214
  %bound0634 = icmp ult float* %213, %scevgep632
  %bound1635 = icmp ult float* %212, %scevgep630
  %found.conflict636 = and i1 %bound0634, %bound1635
  br i1 %found.conflict636, label %for.body313.1.preheader, label %vector.ph639

vector.ph639:                                     ; preds = %vector.memcheck638
  %n.vec641 = and i64 %214, 4294967288
  %215 = add nsw i64 %n.vec641, -8
  %216 = lshr exact i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %xtraiter718 = and i64 %217, 1
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %middle.block626.unr-lcssa, label %vector.ph639.new

vector.ph639.new:                                 ; preds = %vector.ph639
  %unroll_iter720 = sub nuw nsw i64 %217, %xtraiter718
  br label %vector.body625

vector.body625:                                   ; preds = %vector.body625, %vector.ph639.new
  %index642 = phi i64 [ 0, %vector.ph639.new ], [ %index.next643.1, %vector.body625 ]
  %niter721 = phi i64 [ %unroll_iter720, %vector.ph639.new ], [ %niter721.nsub.1, %vector.body625 ]
  %219 = getelementptr inbounds float, float* %212, i64 %index642
  %220 = bitcast float* %219 to <4 x float>*
  %wide.load650 = load <4 x float>, <4 x float>* %220, align 4, !tbaa !34, !alias.scope !349
  %221 = getelementptr inbounds float, float* %219, i64 4
  %222 = bitcast float* %221 to <4 x float>*
  %wide.load651 = load <4 x float>, <4 x float>* %222, align 4, !tbaa !34, !alias.scope !349
  %223 = getelementptr inbounds float, float* %213, i64 %index642
  %224 = bitcast float* %223 to <4 x float>*
  %wide.load652 = load <4 x float>, <4 x float>* %224, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %225 = getelementptr inbounds float, float* %223, i64 4
  %226 = bitcast float* %225 to <4 x float>*
  %wide.load653 = load <4 x float>, <4 x float>* %226, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %227 = fadd <4 x float> %wide.load650, %wide.load652
  %228 = fadd <4 x float> %wide.load651, %wide.load653
  %229 = bitcast float* %223 to <4 x float>*
  store <4 x float> %227, <4 x float>* %229, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %230 = bitcast float* %225 to <4 x float>*
  store <4 x float> %228, <4 x float>* %230, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %index.next643 = or i64 %index642, 8
  %231 = getelementptr inbounds float, float* %212, i64 %index.next643
  %232 = bitcast float* %231 to <4 x float>*
  %wide.load650.1 = load <4 x float>, <4 x float>* %232, align 4, !tbaa !34, !alias.scope !349
  %233 = getelementptr inbounds float, float* %231, i64 4
  %234 = bitcast float* %233 to <4 x float>*
  %wide.load651.1 = load <4 x float>, <4 x float>* %234, align 4, !tbaa !34, !alias.scope !349
  %235 = getelementptr inbounds float, float* %213, i64 %index.next643
  %236 = bitcast float* %235 to <4 x float>*
  %wide.load652.1 = load <4 x float>, <4 x float>* %236, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %237 = getelementptr inbounds float, float* %235, i64 4
  %238 = bitcast float* %237 to <4 x float>*
  %wide.load653.1 = load <4 x float>, <4 x float>* %238, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %239 = fadd <4 x float> %wide.load650.1, %wide.load652.1
  %240 = fadd <4 x float> %wide.load651.1, %wide.load653.1
  %241 = bitcast float* %235 to <4 x float>*
  store <4 x float> %239, <4 x float>* %241, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %242 = bitcast float* %237 to <4 x float>*
  store <4 x float> %240, <4 x float>* %242, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %index.next643.1 = add i64 %index642, 16
  %niter721.nsub.1 = add i64 %niter721, -2
  %niter721.ncmp.1 = icmp eq i64 %niter721.nsub.1, 0
  br i1 %niter721.ncmp.1, label %middle.block626.unr-lcssa, label %vector.body625, !llvm.loop !354

middle.block626.unr-lcssa:                        ; preds = %vector.body625, %vector.ph639
  %index642.unr = phi i64 [ 0, %vector.ph639 ], [ %index.next643.1, %vector.body625 ]
  %lcmp.mod719 = icmp eq i64 %xtraiter718, 0
  br i1 %lcmp.mod719, label %middle.block626, label %vector.body625.epil

vector.body625.epil:                              ; preds = %middle.block626.unr-lcssa
  %243 = getelementptr inbounds float, float* %212, i64 %index642.unr
  %244 = bitcast float* %243 to <4 x float>*
  %wide.load650.epil = load <4 x float>, <4 x float>* %244, align 4, !tbaa !34, !alias.scope !349
  %245 = getelementptr inbounds float, float* %243, i64 4
  %246 = bitcast float* %245 to <4 x float>*
  %wide.load651.epil = load <4 x float>, <4 x float>* %246, align 4, !tbaa !34, !alias.scope !349
  %247 = getelementptr inbounds float, float* %213, i64 %index642.unr
  %248 = bitcast float* %247 to <4 x float>*
  %wide.load652.epil = load <4 x float>, <4 x float>* %248, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %249 = getelementptr inbounds float, float* %247, i64 4
  %250 = bitcast float* %249 to <4 x float>*
  %wide.load653.epil = load <4 x float>, <4 x float>* %250, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %251 = fadd <4 x float> %wide.load650.epil, %wide.load652.epil
  %252 = fadd <4 x float> %wide.load651.epil, %wide.load653.epil
  %253 = bitcast float* %247 to <4 x float>*
  store <4 x float> %251, <4 x float>* %253, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  %254 = bitcast float* %249 to <4 x float>*
  store <4 x float> %252, <4 x float>* %254, align 4, !tbaa !34, !alias.scope !352, !noalias !349
  br label %middle.block626

middle.block626:                                  ; preds = %vector.body625.epil, %middle.block626.unr-lcssa
  %cmp.n645 = icmp eq i64 %n.vec641, %214
  br i1 %cmp.n645, label %for.inc324.1, label %for.body313.1.preheader

for.body313.1.preheader:                          ; preds = %middle.block626, %vector.memcheck638, %for.body313.lr.ph.1
  %indvars.iv536.1.ph = phi i64 [ 0, %vector.memcheck638 ], [ 0, %for.body313.lr.ph.1 ], [ %n.vec641, %middle.block626 ]
  br label %for.body313.1

for.body313.1:                                    ; preds = %for.body313.1, %for.body313.1.preheader
  %indvars.iv536.1 = phi i64 [ %indvars.iv.next537.1, %for.body313.1 ], [ %indvars.iv536.1.ph, %for.body313.1.preheader ]
  %add.ptr.i488.1 = getelementptr inbounds float, float* %212, i64 %indvars.iv536.1
  %255 = load float, float* %add.ptr.i488.1, align 4, !tbaa !34
  %add.ptr.i486.1 = getelementptr inbounds float, float* %213, i64 %indvars.iv536.1
  %256 = load float, float* %add.ptr.i486.1, align 4, !tbaa !34
  %add320.1 = fadd float %255, %256
  store float %add320.1, float* %add.ptr.i486.1, align 4, !tbaa !34
  %indvars.iv.next537.1 = add nuw nsw i64 %indvars.iv536.1, 1
  %cmp312.1 = icmp ult i64 %indvars.iv.next537.1, %214
  br i1 %cmp312.1, label %for.body313.1, label %for.inc324.1, !llvm.loop !355

for.inc324.1:                                     ; preds = %for.body313.1, %middle.block626, %for.end303.1
  %indvars.iv.next539.1 = add nuw nsw i64 %indvars.iv538.1, 1
  %257 = load i32, i32* %1, align 8, !tbaa !49
  %258 = zext i32 %257 to i64
  %cmp213.1 = icmp ult i64 %indvars.iv.next539.1, %258
  br i1 %cmp213.1, label %for.body214.1, label %for.cond327.preheader.1

for.cond327.preheader.1:                          ; preds = %for.inc324.1, %for.end362.for.cond327.preheader.1_crit_edge
  %259 = phi i32 [ %.pre548, %for.end362.for.cond327.preheader.1_crit_edge ], [ %211, %for.inc324.1 ]
  %cmp329529.1 = icmp eq i32 %259, 0
  br i1 %cmp329529.1, label %for.cond327.preheader.1.for.end338.1_crit_edge, label %for.body330.lr.ph.1

for.cond327.preheader.1.for.end338.1_crit_edge:   ; preds = %for.cond327.preheader.1
  %.pre549 = load i8*, i8** %0, align 8, !tbaa !60
  br label %for.end338.1

for.body330.lr.ph.1:                              ; preds = %for.cond327.preheader.1
  %260 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %261 = bitcast float* %260 to i8*
  %262 = zext i32 %259 to i64
  %min.iters.check657 = icmp ult i32 %259, 8
  br i1 %min.iters.check657, label %for.body330.1.preheader, label %vector.memcheck669

vector.memcheck669:                               ; preds = %for.body330.lr.ph.1
  %scevgep659 = getelementptr float, float* %260, i64 %262
  %scevgep661 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %scevgep661662 = bitcast float* %scevgep661 to i8*
  %uglygep663 = getelementptr i8, i8* %scevgep661662, i64 1
  %bound0665 = icmp ugt i8* %uglygep663, %261
  %bound1666 = icmp ult float* %m_fFFTScaler331, %scevgep659
  %found.conflict667 = and i1 %bound0665, %bound1666
  br i1 %found.conflict667, label %for.body330.1.preheader, label %vector.ph670

vector.ph670:                                     ; preds = %vector.memcheck669
  %n.vec672 = and i64 %262, 4294967288
  %263 = add nsw i64 %n.vec672, -8
  %264 = lshr exact i64 %263, 3
  %265 = add nuw nsw i64 %264, 1
  %xtraiter714 = and i64 %265, 1
  %266 = icmp eq i64 %263, 0
  br i1 %266, label %middle.block655.unr-lcssa, label %vector.ph670.new

vector.ph670.new:                                 ; preds = %vector.ph670
  %unroll_iter716 = sub nuw nsw i64 %265, %xtraiter714
  %267 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !356
  %268 = insertelement <4 x float> undef, float %267, i32 0
  %269 = shufflevector <4 x float> %268, <4 x float> undef, <4 x i32> zeroinitializer
  %270 = insertelement <4 x float> undef, float %267, i32 0
  %271 = shufflevector <4 x float> %270, <4 x float> undef, <4 x i32> zeroinitializer
  %272 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !356
  %273 = insertelement <4 x float> undef, float %272, i32 0
  %274 = shufflevector <4 x float> %273, <4 x float> undef, <4 x i32> zeroinitializer
  %275 = insertelement <4 x float> undef, float %272, i32 0
  %276 = shufflevector <4 x float> %275, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body654

vector.body654:                                   ; preds = %vector.body654, %vector.ph670.new
  %index673 = phi i64 [ 0, %vector.ph670.new ], [ %index.next674.1, %vector.body654 ]
  %niter717 = phi i64 [ %unroll_iter716, %vector.ph670.new ], [ %niter717.nsub.1, %vector.body654 ]
  %277 = getelementptr inbounds float, float* %260, i64 %index673
  %278 = bitcast float* %277 to <4 x float>*
  %wide.load681 = load <4 x float>, <4 x float>* %278, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %279 = getelementptr inbounds float, float* %277, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  %wide.load682 = load <4 x float>, <4 x float>* %280, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %281 = fmul <4 x float> %269, %wide.load681
  %282 = fmul <4 x float> %271, %wide.load682
  %283 = bitcast float* %277 to <4 x float>*
  store <4 x float> %281, <4 x float>* %283, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %284 = bitcast float* %279 to <4 x float>*
  store <4 x float> %282, <4 x float>* %284, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %index.next674 = or i64 %index673, 8
  %285 = getelementptr inbounds float, float* %260, i64 %index.next674
  %286 = bitcast float* %285 to <4 x float>*
  %wide.load681.1 = load <4 x float>, <4 x float>* %286, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %287 = getelementptr inbounds float, float* %285, i64 4
  %288 = bitcast float* %287 to <4 x float>*
  %wide.load682.1 = load <4 x float>, <4 x float>* %288, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %289 = fmul <4 x float> %274, %wide.load681.1
  %290 = fmul <4 x float> %276, %wide.load682.1
  %291 = bitcast float* %285 to <4 x float>*
  store <4 x float> %289, <4 x float>* %291, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %292 = bitcast float* %287 to <4 x float>*
  store <4 x float> %290, <4 x float>* %292, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %index.next674.1 = add i64 %index673, 16
  %niter717.nsub.1 = add i64 %niter717, -2
  %niter717.ncmp.1 = icmp eq i64 %niter717.nsub.1, 0
  br i1 %niter717.ncmp.1, label %middle.block655.unr-lcssa, label %vector.body654, !llvm.loop !361

middle.block655.unr-lcssa:                        ; preds = %vector.body654, %vector.ph670
  %index673.unr = phi i64 [ 0, %vector.ph670 ], [ %index.next674.1, %vector.body654 ]
  %lcmp.mod715 = icmp eq i64 %xtraiter714, 0
  br i1 %lcmp.mod715, label %middle.block655, label %vector.body654.epil

vector.body654.epil:                              ; preds = %middle.block655.unr-lcssa
  %293 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289, !alias.scope !356
  %294 = insertelement <4 x float> undef, float %293, i32 0
  %295 = shufflevector <4 x float> %294, <4 x float> undef, <4 x i32> zeroinitializer
  %296 = insertelement <4 x float> undef, float %293, i32 0
  %297 = shufflevector <4 x float> %296, <4 x float> undef, <4 x i32> zeroinitializer
  %298 = getelementptr inbounds float, float* %260, i64 %index673.unr
  %299 = bitcast float* %298 to <4 x float>*
  %wide.load681.epil = load <4 x float>, <4 x float>* %299, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %300 = getelementptr inbounds float, float* %298, i64 4
  %301 = bitcast float* %300 to <4 x float>*
  %wide.load682.epil = load <4 x float>, <4 x float>* %301, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %302 = fmul <4 x float> %295, %wide.load681.epil
  %303 = fmul <4 x float> %297, %wide.load682.epil
  %304 = bitcast float* %298 to <4 x float>*
  store <4 x float> %302, <4 x float>* %304, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  %305 = bitcast float* %300 to <4 x float>*
  store <4 x float> %303, <4 x float>* %305, align 4, !tbaa !34, !alias.scope !359, !noalias !356
  br label %middle.block655

middle.block655:                                  ; preds = %vector.body654.epil, %middle.block655.unr-lcssa
  %cmp.n676 = icmp eq i64 %n.vec672, %262
  br i1 %cmp.n676, label %for.end338.1, label %for.body330.1.preheader

for.body330.1.preheader:                          ; preds = %middle.block655, %vector.memcheck669, %for.body330.lr.ph.1
  %indvars.iv540.1.ph = phi i64 [ 0, %vector.memcheck669 ], [ 0, %for.body330.lr.ph.1 ], [ %n.vec672, %middle.block655 ]
  br label %for.body330.1

for.body330.1:                                    ; preds = %for.body330.1, %for.body330.1.preheader
  %indvars.iv540.1 = phi i64 [ %indvars.iv.next541.1, %for.body330.1 ], [ %indvars.iv540.1.ph, %for.body330.1.preheader ]
  %306 = load float, float* %m_fFFTScaler331, align 8, !tbaa !289
  %add.ptr.i484.1 = getelementptr inbounds float, float* %260, i64 %indvars.iv540.1
  %307 = load float, float* %add.ptr.i484.1, align 4, !tbaa !34
  %mul335.1 = fmul float %306, %307
  store float %mul335.1, float* %add.ptr.i484.1, align 4, !tbaa !34
  %indvars.iv.next541.1 = add nuw nsw i64 %indvars.iv540.1, 1
  %cmp329.1 = icmp ult i64 %indvars.iv.next541.1, %262
  br i1 %cmp329.1, label %for.body330.1, label %for.end338.1, !llvm.loop !362

for.end338.1:                                     ; preds = %for.body330.1, %middle.block655, %for.cond327.preheader.1.for.end338.1_crit_edge
  %308 = phi i8* [ %.pre549, %for.cond327.preheader.1.for.end338.1_crit_edge ], [ %261, %middle.block655 ], [ %261, %for.body330.1 ]
  %arrayidx340.1 = getelementptr inbounds float*, float** %ppfDst, i64 1
  %309 = bitcast float** %arrayidx340.1 to i8**
  %310 = load i8*, i8** %309, align 8, !tbaa !27
  %311 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv344.1 = zext i32 %311 to i64
  %mul345.1 = shl nuw nsw i64 %conv344.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %308, i64 %mul345.1, i1 false)
  %312 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !286
  %cmp348531.1 = icmp eq i32 %312, 0
  %arrayidx352.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  br i1 %cmp348531.1, label %for.end338.1.for.end362.1_crit_edge, label %for.body349.lr.ph.1

for.end338.1.for.end362.1_crit_edge:              ; preds = %for.end338.1
  %.phi.trans.insert550 = bitcast %"class.std::vector.0"* %arrayidx352.1 to i8**
  %.pre551 = load i8*, i8** %.phi.trans.insert550, align 8, !tbaa !60
  br label %for.end362.1

for.body349.lr.ph.1:                              ; preds = %for.end338.1
  %_M_start.i480.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352.1, i64 0, i32 0, i32 0, i32 0
  %313 = load float*, float** %_M_start.i480.1, align 8, !tbaa !60
  %314 = bitcast float* %313 to i8*
  %315 = load float*, float** %arrayidx340.1, align 8, !tbaa !27
  %316 = zext i32 %312 to i64
  %min.iters.check686 = icmp ult i32 %312, 8
  br i1 %min.iters.check686, label %for.body349.1.preheader, label %vector.memcheck696

vector.memcheck696:                               ; preds = %for.body349.lr.ph.1
  %scevgep688 = getelementptr float, float* %315, i64 %316
  %scevgep690 = getelementptr float, float* %313, i64 %316
  %bound0692 = icmp ult float* %315, %scevgep690
  %bound1693 = icmp ult float* %313, %scevgep688
  %found.conflict694 = and i1 %bound0692, %bound1693
  br i1 %found.conflict694, label %for.body349.1.preheader, label %vector.ph697

vector.ph697:                                     ; preds = %vector.memcheck696
  %n.vec699 = and i64 %316, 4294967288
  %317 = add nsw i64 %n.vec699, -8
  %318 = lshr exact i64 %317, 3
  %319 = add nuw nsw i64 %318, 1
  %xtraiter = and i64 %319, 1
  %320 = icmp eq i64 %317, 0
  br i1 %320, label %middle.block684.unr-lcssa, label %vector.ph697.new

vector.ph697.new:                                 ; preds = %vector.ph697
  %unroll_iter = sub nuw nsw i64 %319, %xtraiter
  br label %vector.body683

vector.body683:                                   ; preds = %vector.body683, %vector.ph697.new
  %index700 = phi i64 [ 0, %vector.ph697.new ], [ %index.next701.1, %vector.body683 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph697.new ], [ %niter.nsub.1, %vector.body683 ]
  %321 = getelementptr inbounds float, float* %313, i64 %index700
  %322 = bitcast float* %321 to <4 x float>*
  %wide.load708 = load <4 x float>, <4 x float>* %322, align 4, !tbaa !34, !alias.scope !363
  %323 = getelementptr inbounds float, float* %321, i64 4
  %324 = bitcast float* %323 to <4 x float>*
  %wide.load709 = load <4 x float>, <4 x float>* %324, align 4, !tbaa !34, !alias.scope !363
  %325 = getelementptr inbounds float, float* %315, i64 %index700
  %326 = bitcast float* %325 to <4 x float>*
  %wide.load710 = load <4 x float>, <4 x float>* %326, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %327 = getelementptr inbounds float, float* %325, i64 4
  %328 = bitcast float* %327 to <4 x float>*
  %wide.load711 = load <4 x float>, <4 x float>* %328, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %329 = fadd <4 x float> %wide.load708, %wide.load710
  %330 = fadd <4 x float> %wide.load709, %wide.load711
  %331 = bitcast float* %325 to <4 x float>*
  store <4 x float> %329, <4 x float>* %331, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %332 = bitcast float* %327 to <4 x float>*
  store <4 x float> %330, <4 x float>* %332, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %index.next701 = or i64 %index700, 8
  %333 = getelementptr inbounds float, float* %313, i64 %index.next701
  %334 = bitcast float* %333 to <4 x float>*
  %wide.load708.1 = load <4 x float>, <4 x float>* %334, align 4, !tbaa !34, !alias.scope !363
  %335 = getelementptr inbounds float, float* %333, i64 4
  %336 = bitcast float* %335 to <4 x float>*
  %wide.load709.1 = load <4 x float>, <4 x float>* %336, align 4, !tbaa !34, !alias.scope !363
  %337 = getelementptr inbounds float, float* %315, i64 %index.next701
  %338 = bitcast float* %337 to <4 x float>*
  %wide.load710.1 = load <4 x float>, <4 x float>* %338, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %339 = getelementptr inbounds float, float* %337, i64 4
  %340 = bitcast float* %339 to <4 x float>*
  %wide.load711.1 = load <4 x float>, <4 x float>* %340, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %341 = fadd <4 x float> %wide.load708.1, %wide.load710.1
  %342 = fadd <4 x float> %wide.load709.1, %wide.load711.1
  %343 = bitcast float* %337 to <4 x float>*
  store <4 x float> %341, <4 x float>* %343, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %344 = bitcast float* %339 to <4 x float>*
  store <4 x float> %342, <4 x float>* %344, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %index.next701.1 = add i64 %index700, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block684.unr-lcssa, label %vector.body683, !llvm.loop !368

middle.block684.unr-lcssa:                        ; preds = %vector.body683, %vector.ph697
  %index700.unr = phi i64 [ 0, %vector.ph697 ], [ %index.next701.1, %vector.body683 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block684, label %vector.body683.epil

vector.body683.epil:                              ; preds = %middle.block684.unr-lcssa
  %345 = getelementptr inbounds float, float* %313, i64 %index700.unr
  %346 = bitcast float* %345 to <4 x float>*
  %wide.load708.epil = load <4 x float>, <4 x float>* %346, align 4, !tbaa !34, !alias.scope !363
  %347 = getelementptr inbounds float, float* %345, i64 4
  %348 = bitcast float* %347 to <4 x float>*
  %wide.load709.epil = load <4 x float>, <4 x float>* %348, align 4, !tbaa !34, !alias.scope !363
  %349 = getelementptr inbounds float, float* %315, i64 %index700.unr
  %350 = bitcast float* %349 to <4 x float>*
  %wide.load710.epil = load <4 x float>, <4 x float>* %350, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %351 = getelementptr inbounds float, float* %349, i64 4
  %352 = bitcast float* %351 to <4 x float>*
  %wide.load711.epil = load <4 x float>, <4 x float>* %352, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %353 = fadd <4 x float> %wide.load708.epil, %wide.load710.epil
  %354 = fadd <4 x float> %wide.load709.epil, %wide.load711.epil
  %355 = bitcast float* %349 to <4 x float>*
  store <4 x float> %353, <4 x float>* %355, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  %356 = bitcast float* %351 to <4 x float>*
  store <4 x float> %354, <4 x float>* %356, align 4, !tbaa !34, !alias.scope !366, !noalias !363
  br label %middle.block684

middle.block684:                                  ; preds = %vector.body683.epil, %middle.block684.unr-lcssa
  %cmp.n703 = icmp eq i64 %n.vec699, %316
  br i1 %cmp.n703, label %for.end362.loopexit.1, label %for.body349.1.preheader

for.body349.1.preheader:                          ; preds = %middle.block684, %vector.memcheck696, %for.body349.lr.ph.1
  %indvars.iv542.1.ph = phi i64 [ 0, %vector.memcheck696 ], [ 0, %for.body349.lr.ph.1 ], [ %n.vec699, %middle.block684 ]
  br label %for.body349.1

for.body349.1:                                    ; preds = %for.body349.1, %for.body349.1.preheader
  %indvars.iv542.1 = phi i64 [ %indvars.iv.next543.1, %for.body349.1 ], [ %indvars.iv542.1.ph, %for.body349.1.preheader ]
  %add.ptr.i481.1 = getelementptr inbounds float, float* %313, i64 %indvars.iv542.1
  %357 = load float, float* %add.ptr.i481.1, align 4, !tbaa !34
  %arrayidx358.1 = getelementptr inbounds float, float* %315, i64 %indvars.iv542.1
  %358 = load float, float* %arrayidx358.1, align 4, !tbaa !34
  %add359.1 = fadd float %357, %358
  store float %add359.1, float* %arrayidx358.1, align 4, !tbaa !34
  %indvars.iv.next543.1 = add nuw nsw i64 %indvars.iv542.1, 1
  %cmp348.1 = icmp ult i64 %indvars.iv.next543.1, %316
  br i1 %cmp348.1, label %for.body349.1, label %for.end362.loopexit.1, !llvm.loop !369

for.end362.loopexit.1:                            ; preds = %for.body349.1, %middle.block684
  %phitmp556 = zext i32 %312 to i64
  %phitmp557 = shl nuw nsw i64 %phitmp556, 2
  br label %for.end362.1

for.end362.1:                                     ; preds = %for.end362.loopexit.1, %for.end338.1.for.end362.1_crit_edge
  %359 = phi i8* [ %.pre551, %for.end338.1.for.end362.1_crit_edge ], [ %314, %for.end362.loopexit.1 ]
  %.lcssa.1 = phi i64 [ 0, %for.end338.1.for.end362.1_crit_edge ], [ %phitmp557, %for.end362.loopexit.1 ]
  %360 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !285
  %conv369.1 = zext i32 %360 to i64
  %361 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i.1 = getelementptr inbounds float, float* %361, i64 %conv369.1
  %362 = bitcast float* %add.ptr.i.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %359, i8* nonnull align 4 %362, i64 %.lcssa.1, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !45
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !48, !range !51
  %tobool = icmp ne i8 %3, 0
  %call = tail call i32 @_Z15OrderToSpeakersjb(i32 %1, i1 zeroext %tobool)
  %4 = load i32, i32* %0, align 8, !tbaa !45
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24)
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !24
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %5, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %6 = bitcast i8* %_M_ctype.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !370
  %tobool.i47 = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.i47, label %if.then.i48, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit

if.then.i48:                                      ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #27
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit:    ; preds = %if.then
  %_M_widen_ok.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i, align 8, !tbaa !372
  %tobool.i = icmp eq i8 %8, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  %arrayidx.i31 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 9, i64 10
  %9 = load i8, i8* %arrayidx.i31, align 1, !tbaa !278
  br label %if.end

if.end.i:                                         ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %7)
  %10 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i32 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %10, align 8, !tbaa !24
  %vfn.i33 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i32, i64 6
  %11 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i33, align 8
  %call.i34 = tail call signext i8 %11(%"class.std::ctype"* nonnull %7, i8 signext 10)
  br label %if.end

if.else:                                          ; preds = %entry
  %call1.i17 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39)
  %vtable.i19 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !24
  %vbase.offset.ptr.i20 = getelementptr i8, i8* %vtable.i19, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr.i20 to i64*
  %vbase.offset.i21 = load i64, i64* %12, align 8
  %add.ptr.i22 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i21
  %_M_ctype.i35 = getelementptr inbounds i8, i8* %add.ptr.i22, i64 240
  %13 = bitcast i8* %_M_ctype.i35 to %"class.std::ctype"**
  %14 = load %"class.std::ctype"*, %"class.std::ctype"** %13, align 8, !tbaa !370
  %tobool.i50 = icmp eq %"class.std::ctype"* %14, null
  br i1 %tobool.i50, label %if.then.i51, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53

if.then.i51:                                      ; preds = %if.else
  tail call void @_ZSt16__throw_bad_castv() #27
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53:  ; preds = %if.else
  %_M_widen_ok.i37 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 8
  %15 = load i8, i8* %_M_widen_ok.i37, align 8, !tbaa !372
  %tobool.i38 = icmp eq i8 %15, 0
  br i1 %tobool.i38, label %if.end.i44, label %if.then.i40

if.then.i40:                                      ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  %arrayidx.i39 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %14, i64 0, i32 9, i64 10
  %16 = load i8, i8* %arrayidx.i39, align 1, !tbaa !278
  br label %if.end

if.end.i44:                                       ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* nonnull %14)
  %17 = bitcast %"class.std::ctype"* %14 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i41 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %17, align 8, !tbaa !24
  %vfn.i42 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i41, i64 6
  %18 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i42, align 8
  %call.i43 = tail call signext i8 %18(%"class.std::ctype"* nonnull %14, i8 signext 10)
  br label %if.end

if.end:                                           ; preds = %if.end.i44, %if.then.i40, %if.end.i, %if.then.i
  %retval.0.i45.sink = phi i8 [ %9, %if.then.i ], [ %call.i34, %if.end.i ], [ %16, %if.then.i40 ], [ %call.i43, %if.end.i44 ]
  %nSpeakerSetUp.0 = phi i32 [ 13, %if.then.i ], [ 13, %if.end.i ], [ 12, %if.then.i40 ], [ 12, %if.end.i44 ]
  %call1.i24 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i8 signext %retval.0.i45.sink)
  %call.i25 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* nonnull %call1.i24)
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1
  %19 = load i32, i32* %0, align 8, !tbaa !45
  %20 = load i8, i8* %2, align 4, !tbaa !48, !range !51
  %tobool9 = icmp ne i8 %20, 0
  %21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 %19, i32* %21, align 8, !tbaa !45
  %22 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 %20, i8* %22, align 4, !tbaa !48
  %call.i.i26 = tail call i32 @_Z17OrderToComponentsjb(i32 %19, i1 zeroext %tobool9)
  %23 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 %call.i.i26, i32* %23, align 8, !tbaa !49
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder, i32 %nSpeakerSetUp.0, i32 %call)
  %24 = bitcast %class.CAmbisonicDecoder* %m_AmbDecoder to void (%class.CAmbisonicDecoder*)***
  %vtable.i27 = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %24, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable.i27, i64 4
  %25 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn.i, align 8
  tail call void %25(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %26 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !243
  %cmp5.i = icmp eq i32 %26, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %27 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %27, i64 %indvars.iv.i
  %28 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i28 = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %28, align 8, !tbaa !24
  %vfn.i29 = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i28, i64 4
  %29 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i29, align 8
  tail call void %29(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %30 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !243
  %31 = zext i32 %30 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %31
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %if.end
  ret void
}

declare i32 @_Z15OrderToSpeakersjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %conv = zext i32 %0 to i64
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 1
  %1 = bitcast float** %_M_finish.i.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !57
  %3 = bitcast %"class.std::vector.0"* %m_pfScratchBufferA to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !60
  %sub.ptr.sub.i.i = sub i64 %2, %4
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferA, i64 %sub.i)
  %.pre = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %.pre117 = zext i32 %.pre to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %5, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %conv3.pre-phi = phi i64 [ %.pre117, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ]
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13
  %_M_finish.i.i41 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = bitcast float** %_M_finish.i.i41 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !57
  %8 = bitcast %"class.std::vector.0"* %m_pfScratchBufferB to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !60
  %sub.ptr.sub.i.i42 = sub i64 %7, %9
  %sub.ptr.div.i.i43 = ashr exact i64 %sub.ptr.sub.i.i42, 2
  %cmp.i44 = icmp ugt i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  %10 = inttoptr i64 %9 to float*
  br i1 %cmp.i44, label %if.then.i46, label %if.else.i48

if.then.i46:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %sub.i45 = sub nsw i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferB, i64 %sub.i45)
  %.pre113 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %.pre118 = zext i32 %.pre113 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

if.else.i48:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %cmp4.i47 = icmp ult i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  br i1 %cmp4.i47, label %if.then5.i50, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

if.then5.i50:                                     ; preds = %if.else.i48
  %add.ptr.i49 = getelementptr inbounds float, float* %10, i64 %conv3.pre-phi
  store float* %add.ptr.i49, float** %_M_finish.i.i41, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

_ZNSt6vectorIfSaIfEE6resizeEm.exit51:             ; preds = %if.then5.i50, %if.else.i48, %if.then.i46
  %conv5.pre-phi = phi i64 [ %.pre118, %if.then.i46 ], [ %conv3.pre-phi, %if.else.i48 ], [ %conv3.pre-phi, %if.then5.i50 ]
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14
  %_M_finish.i.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 1
  %11 = bitcast float** %_M_finish.i.i52 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !57
  %13 = bitcast %"class.std::vector.0"* %m_pfScratchBufferC to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !60
  %sub.ptr.sub.i.i53 = sub i64 %12, %14
  %sub.ptr.div.i.i54 = ashr exact i64 %sub.ptr.sub.i.i53, 2
  %cmp.i55 = icmp ugt i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  %15 = inttoptr i64 %14 to float*
  br i1 %cmp.i55, label %if.then.i57, label %if.else.i59

if.then.i57:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
  %sub.i56 = sub nsw i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferC, i64 %sub.i56)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

if.else.i59:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
  %cmp4.i58 = icmp ult i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  br i1 %cmp4.i58, label %if.then5.i61, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

if.then5.i61:                                     ; preds = %if.else.i59
  %add.ptr.i60 = getelementptr inbounds float, float* %15, i64 %conv5.pre-phi
  store float* %add.ptr.i60, float** %_M_finish.i.i52, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

_ZNSt6vectorIfSaIfEE6resizeEm.exit62:             ; preds = %if.then5.i61, %if.else.i59, %if.then.i57
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %16 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %conv6 = zext i32 %16 to i64
  %_M_finish.i.i63 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast float** %_M_finish.i.i63 to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !57
  %19 = bitcast %"class.std::vector.0"* %arrayidx to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !60
  %sub.ptr.sub.i.i64 = sub i64 %18, %20
  %sub.ptr.div.i.i65 = ashr exact i64 %sub.ptr.sub.i.i64, 2
  %cmp.i66 = icmp ult i64 %sub.ptr.div.i.i65, %conv6
  %21 = inttoptr i64 %20 to float*
  br i1 %cmp.i66, label %if.then.i68, label %if.else.i70

if.then.i68:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
  %sub.i67 = sub nsw i64 %conv6, %sub.ptr.div.i.i65
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx, i64 %sub.i67)
  %.pre114 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %.pre119 = zext i32 %.pre114 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

if.else.i70:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
  %cmp4.i69 = icmp ugt i64 %sub.ptr.div.i.i65, %conv6
  br i1 %cmp4.i69, label %if.then5.i72, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

if.then5.i72:                                     ; preds = %if.else.i70
  %add.ptr.i71 = getelementptr inbounds float, float* %21, i64 %conv6
  store float* %add.ptr.i71, float** %_M_finish.i.i63, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

_ZNSt6vectorIfSaIfEE6resizeEm.exit73:             ; preds = %if.then5.i72, %if.else.i70, %if.then.i68
  %conv10.pre-phi = phi i64 [ %.pre119, %if.then.i68 ], [ %conv6, %if.else.i70 ], [ %conv6, %if.then5.i72 ]
  %arrayidx8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  %_M_finish.i.i74 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 1
  %22 = bitcast float** %_M_finish.i.i74 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !57
  %24 = bitcast %"class.std::vector.0"* %arrayidx8 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !60
  %sub.ptr.sub.i.i75 = sub i64 %23, %25
  %sub.ptr.div.i.i76 = ashr exact i64 %sub.ptr.sub.i.i75, 2
  %cmp.i77 = icmp ugt i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  %26 = inttoptr i64 %25 to float*
  br i1 %cmp.i77, label %if.then.i79, label %if.else.i81

if.then.i79:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
  %sub.i78 = sub nsw i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx8, i64 %sub.i78)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

if.else.i81:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
  %cmp4.i80 = icmp ult i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  br i1 %cmp4.i80, label %if.then5.i83, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

if.then5.i83:                                     ; preds = %if.else.i81
  %add.ptr.i82 = getelementptr inbounds float, float* %26, i64 %conv10.pre-phi
  store float* %add.ptr.i82, float** %_M_finish.i.i74, align 8, !tbaa !57
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

_ZNSt6vectorIfSaIfEE6resizeEm.exit84:             ; preds = %if.then5.i83, %if.else.i81, %if.then.i79
  %27 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %call = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %27, i32 0, i8* null, i64* null)
  %28 = ptrtoint %struct.kiss_fftr_state* %call to i64
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !27
  store i64 %28, i64* %29, align 8, !tbaa !27
  %cmp.i85 = icmp eq i64 %30, 0
  br i1 %cmp.i85, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit, label %if.then.i86

if.then.i86:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %32 = inttoptr i64 %30 to i8*
  invoke void %31(i8* %32)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i86
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  tail call void @__clang_call_terminate(i8* %34) #28
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit: ; preds = %if.then.i86, %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
  %35 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %call13 = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %35, i32 1, i8* null, i64* null)
  %36 = ptrtoint %struct.kiss_fftr_state* %call13 to i64
  %_M_head_impl.i.i.i.i.i87 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i87 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !27
  store i64 %36, i64* %37, align 8, !tbaa !27
  %cmp.i88 = icmp eq i64 %38, 0
  br i1 %cmp.i88, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92, label %if.then.i90

if.then.i90:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %_M_head_impl.i.i.i.i.i.i89 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i89, align 8, !tbaa !27
  %40 = inttoptr i64 %38 to i8*
  invoke void %39(i8* %40)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92 unwind label %terminate.lpad.i91

terminate.lpad.i91:                               ; preds = %if.then.i90
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #28
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92: ; preds = %if.then.i90, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %43 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %arrayidx14 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0
  %44 = load i32, i32* %43, align 8, !tbaa !49
  %conv15 = zext i32 %44 to i64
  %_M_finish.i.i94 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::unique_ptr.31"** %_M_finish.i.i94 to i64*
  %46 = load i64, i64* %45, align 8, !tbaa !374
  %47 = bitcast %"class.std::vector.26"* %arrayidx14 to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !323
  %sub.ptr.sub.i.i95 = sub i64 %46, %48
  %sub.ptr.div.i.i96 = ashr exact i64 %sub.ptr.sub.i.i95, 3
  %cmp.i97 = icmp ult i64 %sub.ptr.div.i.i96, %conv15
  %49 = inttoptr i64 %48 to %"class.std::unique_ptr.31"*
  %50 = inttoptr i64 %46 to %"class.std::unique_ptr.31"*
  br i1 %cmp.i97, label %if.then.i99, label %if.else.i101

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i: ; preds = %for.cond.cleanup19.1
  %51 = bitcast %struct.kiss_fft_cpx* %92 to i8*
  tail call void @_ZdaPv(i8* %51) #26
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit: ; preds = %for.cond.cleanup19.1, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
  ret void

if.then.i99:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
  %sub.i98 = sub nsw i64 %conv15, %sub.ptr.div.i.i96
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* nonnull %arrayidx14, i64 %sub.i98)
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.else.i101:                                     ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
  %cmp4.i100 = icmp ugt i64 %sub.ptr.div.i.i96, %conv15
  br i1 %cmp4.i100, label %if.then5.i103, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

if.then5.i103:                                    ; preds = %if.else.i101
  %add.ptr.i102 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %49, i64 %conv15
  %cmp3.i.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %add.ptr.i102, %50
  br i1 %cmp3.i.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, %if.then5.i103
  %__first.addr.04.i.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i ], [ %add.ptr.i102, %if.then5.i103 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %52, null
  br i1 %cmp.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i.i
  %53 = bitcast %struct.kiss_fft_cpx* %52 to i8*
  tail call void @_ZdaPv(i8* %53) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i, %for.body.i.i.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i, %50
  br i1 %cmp.i.i.i.i.i, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, label %for.body.i.i.i.i.i

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i, %if.then5.i103
  store %"class.std::unique_ptr.31"* %add.ptr.i102, %"class.std::unique_ptr.31"** %_M_finish.i.i94, align 8, !tbaa !374
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i, %if.else.i101, %if.then.i99
  %54 = load i32, i32* %43, align 8, !tbaa !49
  %cmp18108 = icmp eq i32 %54, 0
  br i1 %cmp18108, label %for.cond.cleanup19, label %for.body20.lr.ph

for.body20.lr.ph:                                 ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %_M_start.i = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arrayidx14, i64 0, i32 0, i32 0, i32 0
  br label %for.body20

for.cond.cleanup19:                               ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
  %55 = phi i32 [ 0, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit ], [ %71, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107 ]
  %arrayidx14.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1
  %conv15.1 = zext i32 %55 to i64
  %_M_finish.i.i94.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::unique_ptr.31"** %_M_finish.i.i94.1 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !374
  %58 = bitcast %"class.std::vector.26"* %arrayidx14.1 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !323
  %sub.ptr.sub.i.i95.1 = sub i64 %57, %59
  %sub.ptr.div.i.i96.1 = ashr exact i64 %sub.ptr.sub.i.i95.1, 3
  %cmp.i97.1 = icmp ult i64 %sub.ptr.div.i.i96.1, %conv15.1
  %60 = inttoptr i64 %59 to %"class.std::unique_ptr.31"*
  %61 = inttoptr i64 %57 to %"class.std::unique_ptr.31"*
  br i1 %cmp.i97.1, label %if.then.i99.1, label %if.else.i101.1

for.body20:                                       ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107, %for.body20.lr.ph
  %62 = phi i32 [ %54, %for.body20.lr.ph ], [ %71, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107 ]
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107 ]
  %63 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i, align 8, !tbaa !323
  %add.ptr.i104 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %63, i64 %indvars.iv
  %64 = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  %conv26 = zext i32 %64 to i64
  %65 = shl nuw nsw i64 %conv26, 3
  %call27 = tail call i8* @_Znam(i64 %65) #25
  %66 = ptrtoint i8* %call27 to i64
  %67 = bitcast %"class.std::unique_ptr.31"* %add.ptr.i104 to i64*
  %68 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %add.ptr.i104, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %68, align 8, !tbaa !27
  store i64 %66, i64* %67, align 8, !tbaa !27
  %cmp.i105 = icmp eq %struct.kiss_fft_cpx* %69, null
  br i1 %cmp.i105, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106: ; preds = %for.body20
  %70 = bitcast %struct.kiss_fft_cpx* %69 to i8*
  tail call void @_ZdaPv(i8* %70) #26
  %.pre115 = load i32, i32* %43, align 8, !tbaa !49
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106, %for.body20
  %71 = phi i32 [ %62, %for.body20 ], [ %.pre115, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %72 = zext i32 %71 to i64
  %cmp18 = icmp ult i64 %indvars.iv.next, %72
  br i1 %cmp18, label %for.body20, label %for.cond.cleanup19

if.else.i101.1:                                   ; preds = %for.cond.cleanup19
  %cmp4.i100.1 = icmp ugt i64 %sub.ptr.div.i.i96.1, %conv15.1
  br i1 %cmp4.i100.1, label %if.then5.i103.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then5.i103.1:                                  ; preds = %if.else.i101.1
  %add.ptr.i102.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %60, i64 %conv15.1
  %cmp3.i.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.31"* %add.ptr.i102.1, %61
  br i1 %cmp3.i.i.i.i.i.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, label %for.body.i.i.i.i.i.1

for.body.i.i.i.i.i.1:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, %if.then5.i103.1
  %__first.addr.04.i.i.i.i.i.1 = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.i.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1 ], [ %add.ptr.i102.1, %if.then5.i103.1 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %73, null
  br i1 %cmp.i.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i.i.1
  %74 = bitcast %struct.kiss_fft_cpx* %73 to i8*
  tail call void @_ZdaPv(i8* %74) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1, %for.body.i.i.i.i.i.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.i.1, i64 1
  %cmp.i.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.1, %61
  br i1 %cmp.i.i.i.i.i.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, label %for.body.i.i.i.i.i.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1, %if.then5.i103.1
  store %"class.std::unique_ptr.31"* %add.ptr.i102.1, %"class.std::unique_ptr.31"** %_M_finish.i.i94.1, align 8, !tbaa !374
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

if.then.i99.1:                                    ; preds = %for.cond.cleanup19
  %sub.i98.1 = sub nsw i64 %conv15.1, %sub.ptr.div.i.i96.1
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* nonnull %arrayidx14.1, i64 %sub.i98.1)
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1: ; preds = %if.then.i99.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1, %if.else.i101.1
  %75 = load i32, i32* %43, align 8, !tbaa !49
  %cmp18108.1 = icmp eq i32 %75, 0
  br i1 %cmp18108.1, label %for.cond.cleanup19.1, label %for.body20.lr.ph.1

for.body20.lr.ph.1:                               ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %_M_start.i.1 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arrayidx14.1, i64 0, i32 0, i32 0, i32 0
  br label %for.body20.1

for.body20.1:                                     ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1, %for.body20.lr.ph.1
  %76 = phi i32 [ %75, %for.body20.lr.ph.1 ], [ %85, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1 ]
  %indvars.iv.1 = phi i64 [ 0, %for.body20.lr.ph.1 ], [ %indvars.iv.next.1, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1 ]
  %77 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i.1, align 8, !tbaa !323
  %add.ptr.i104.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %77, i64 %indvars.iv.1
  %78 = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  %conv26.1 = zext i32 %78 to i64
  %79 = shl nuw nsw i64 %conv26.1, 3
  %call27.1 = tail call i8* @_Znam(i64 %79) #25
  %80 = ptrtoint i8* %call27.1 to i64
  %81 = bitcast %"class.std::unique_ptr.31"* %add.ptr.i104.1 to i64*
  %82 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %add.ptr.i104.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %82, align 8, !tbaa !27
  store i64 %80, i64* %81, align 8, !tbaa !27
  %cmp.i105.1 = icmp eq %struct.kiss_fft_cpx* %83, null
  br i1 %cmp.i105.1, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1: ; preds = %for.body20.1
  %84 = bitcast %struct.kiss_fft_cpx* %83 to i8*
  tail call void @_ZdaPv(i8* %84) #26
  %.pre116 = load i32, i32* %43, align 8, !tbaa !49
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1, %for.body20.1
  %85 = phi i32 [ %.pre116, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1 ], [ %76, %for.body20.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %86 = zext i32 %85 to i64
  %cmp18.1 = icmp ult i64 %indvars.iv.next.1, %86
  br i1 %cmp18.1, label %for.body20.1, label %for.cond.cleanup19.1

for.cond.cleanup19.1:                             ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11
  %87 = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  %conv32 = zext i32 %87 to i64
  %88 = shl nuw nsw i64 %conv32, 3
  %call33 = tail call i8* @_Znam(i64 %88) #25
  %89 = ptrtoint i8* %call33 to i64
  %90 = bitcast %"class.std::unique_ptr.31"* %m_pcpScratch to i64*
  %91 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %m_pcpScratch, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %91, align 8, !tbaa !27
  store i64 %89, i64* %90, align 8, !tbaa !27
  %cmp.i93 = icmp eq %struct.kiss_fft_cpx* %92, null
  br i1 %cmp.i93, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %"class.std::__cxx11::basic_string"* %srcFilename, i32 %nOrder, i1 zeroext %b3D) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %temp = alloca [44 x i8], align 16
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float 1.000000e+00, float* %amp, align 4, !tbaa !375
  %call = tail call i8* @_Znwm(i64 528) #25
  %0 = bitcast i8* %call to %"class.std::basic_fstream"*
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %srcFilename, i32 8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to i8**
  store i8* %call, i8** %1, align 8, !tbaa !377
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %.cast = bitcast i8* %call to %"class.std::basic_istream"*
  %call3 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* nonnull %.cast, i8* nonnull %2, i64 44)
  %call4 = call i8* @_Znwm(i64 64) #25
  %3 = bitcast i8* %call4 to %class.CBFormat*
  %4 = bitcast i8* %call4 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %call4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8, !tbaa !45
  %7 = getelementptr inbounds i8, i8* %call4, i64 12
  store i8 0, i8* %7, align 4, !tbaa !48
  %8 = getelementptr inbounds i8, i8* %call4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !49
  %10 = getelementptr inbounds i8, i8* %call4, i64 20
  store i8 0, i8* %10, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !24
  %m_nSamples.i = getelementptr inbounds i8, i8* %call4, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %11 = bitcast %class.CBFormat** %BFormat to i8**
  store i8* %call4, i8** %11, align 8, !tbaa !378
  %call8 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %3, i32 %nOrder, i1 zeroext true, i32 1024)
  %12 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !378
  %13 = bitcast %class.CBFormat* %12 to void (%class.CBFormat*)***
  %vtable11 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %13, align 8, !tbaa !24
  %vfn12 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable11, i64 4
  %14 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn12, align 8
  call void %14(%class.CBFormat* %12)
  %call13 = call i8* @_Znwm(i64 136) #25
  %15 = bitcast i8* %call13 to %class.CAmbisonicEncoderDist*
  invoke void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* nonnull %15)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %16 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to i8**
  store i8* %call13, i8** %16, align 8, !tbaa !379
  %17 = bitcast i8* %call13 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable17 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %17, align 8, !tbaa !24
  %vfn18 = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable17, i64 2
  %18 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn18, align 8
  %call19 = call zeroext i1 %18(%class.CAmbisonicEncoderDist* nonnull %15, i32 %nOrder, i1 zeroext true, i32 48000)
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !379
  %20 = bitcast %class.CAmbisonicEncoderDist* %19 to void (%class.CAmbisonicEncoderDist*)***
  %vtable24 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %20, align 8, !tbaa !24
  %vfn25 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable24, i64 4
  %21 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn25, align 8
  call void %21(%class.CAmbisonicEncoderDist* %19)
  %fAzimuth = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8, !tbaa !380
  %fElevation = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %fElevation, align 4, !tbaa !381
  %fDistance = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %fDistance, align 8, !tbaa !382
  %22 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %23 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %22, align 8, !tbaa !379
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %agg.tmp.sroa.0.0..sroa_idx to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %24 = bitcast %class.CAmbisonicSource* %23 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable31 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %24, align 8, !tbaa !24
  %vfn32 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable31, i64 5
  %25 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn32, align 8
  call void %25(%class.CAmbisonicSource* %23, <2 x float> %agg.tmp.sroa.0.0.copyload, float 0.000000e+00)
  %26 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !379
  %27 = bitcast %class.CAmbisonicEncoderDist* %26 to void (%class.CAmbisonicEncoderDist*)***
  %vtable34 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %27, align 8, !tbaa !24
  %vfn35 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable34, i64 4
  %28 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn35, align 8
  call void %28(%class.CAmbisonicEncoderDist* %26)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  ret void

lpad:                                             ; preds = %entry
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  tail call void @_ZdlPv(i8* nonnull %call) #26
  br label %eh.resume

lpad14:                                           ; preds = %invoke.cont
  %32 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call13) #26
  %33 = extractvalue { i8*, i32 } %32, 1
  %34 = extractvalue { i8*, i32 } %32, 0
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %eh.resume

eh.resume:                                        ; preds = %lpad14, %lpad
  %ehselector.slot.1 = phi i32 [ %33, %lpad14 ], [ %31, %lpad ]
  %exn.slot.1 = phi i8* [ %34, %lpad14 ], [ %30, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val36 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.1, 1
  resume { i8*, i32 } %lpad.val36
}

; Function Attrs: uwtable
declare void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %struct.PolarPoint* nocapture readonly dereferenceable(12) %pos) local_unnamed_addr #16 align 2 {
entry:
  %0 = bitcast %struct.PolarPoint* %pos to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !383
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %2 = bitcast %struct.PolarPoint* %srcPos to i32*
  store i32 %1, i32* %2, align 8, !tbaa !380
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 1
  %3 = bitcast float* %fElevation to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !384
  %fElevation4 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  %5 = bitcast float* %fElevation4 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !381
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 2
  %6 = bitcast float* %fDistance to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !385
  %fDistance6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  %8 = bitcast float* %fDistance6 to i32*
  store i32 %7, i32* %8, align 8, !tbaa !382
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %10 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %9, align 8, !tbaa !379
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %srcPos to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %agg.tmp.sroa.2.0.copyload.cast = bitcast i32 %7 to float
  %11 = bitcast %class.CAmbisonicSource* %10 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %11, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %12 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %12(%class.CAmbisonicSource* %10, <2 x float> %agg.tmp.sroa.0.0.copyload, float %agg.tmp.sroa.2.0.copyload.cast)
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !379
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !24
  %vfn10 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9, i64 4
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* %13)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, float %ampScale) local_unnamed_addr #5 align 2 {
entry:
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float %ampScale, float* %amp, align 4, !tbaa !375
  ret void
}

; Function Attrs: uwtable
define %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* nocapture %this) local_unnamed_addr #3 align 2 {
entry:
  %sampleTemp = alloca [1024 x i16], align 16
  %0 = bitcast [1024 x i16]* %sampleTemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #24
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to %"class.std::basic_istream"**
  %2 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %1, align 8, !tbaa !377
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %2, i8* nonnull %0, i64 2048)
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !379
  %arraydecay8 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !378
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %3, float* nonnull %arraydecay8, i32 1024, %class.CBFormat* %4)
  %5 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !378
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #24
  ret %class.CBFormat* %5

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.body ]
  %6 = load float, float* %amp, align 4, !tbaa !375
  %conv = fpext float %6 to double
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv
  %7 = load i16, i16* %arrayidx, align 4, !tbaa !29
  %conv3 = sitofp i16 %7 to double
  %div = fdiv double %conv3, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv4 = fptrunc double %mul to float
  %arrayidx6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv
  store float %conv4, float* %arrayidx6, align 4, !tbaa !34
  %indvars.iv.next = or i64 %indvars.iv, 1
  %8 = load float, float* %amp, align 4, !tbaa !375
  %conv.1 = fpext float %8 to double
  %arrayidx.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv.next
  %9 = load i16, i16* %arrayidx.1, align 2, !tbaa !29
  %conv3.1 = sitofp i16 %9 to double
  %div.1 = fdiv double %conv3.1, 3.276700e+04
  %mul.1 = fmul double %div.1, %conv.1
  %conv4.1 = fptrunc double %mul.1 to float
  %arrayidx6.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv.next
  store float %conv4.1, float* %arrayidx6.1, align 4, !tbaa !34
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 1024
  br i1 %exitcond.1, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5SoundD2Ev(%"class.ILLIXR_AUDIO::Sound"* nocapture readonly %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !377
  %_M_filebuf.i = getelementptr inbounds %"class.std::basic_fstream", %"class.std::basic_fstream"* %0, i64 0, i32 1
  %call.i15 = invoke %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"* nonnull %_M_filebuf.i)
          to label %call.i.noexc unwind label %terminate.lpad

call.i.noexc:                                     ; preds = %entry
  %tobool.i = icmp eq %"class.std::basic_filebuf"* %call.i15, null
  br i1 %tobool.i, label %if.then.i, label %invoke.cont

if.then.i:                                        ; preds = %call.i.noexc
  %1 = bitcast %"class.std::basic_fstream"* %0 to i8**
  %vtable.i = load i8*, i8** %1, align 8, !tbaa !24
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %2 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %2, align 8
  %3 = bitcast %"class.std::basic_fstream"* %0 to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %3, i64 %vbase.offset.i
  %4 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %5 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %6 = load i32, i32* %5, align 8, !tbaa !386
  %or.i.i.i = or i32 %6, 4
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %4, i32 %or.i.i.i)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then.i, %call.i.noexc
  %7 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !377
  %isnull = icmp eq %"class.std::basic_fstream"* %7, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont
  %8 = bitcast %"class.std::basic_fstream"* %7 to void (%"class.std::basic_fstream"*)***
  %vtable = load void (%"class.std::basic_fstream"*)**, void (%"class.std::basic_fstream"*)*** %8, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vtable, i64 1
  %9 = load void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vfn, align 8
  tail call void %9(%"class.std::basic_fstream"* nonnull %7) #24
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %invoke.cont
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %10 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !378
  %isnull3 = icmp eq %class.CBFormat* %10, null
  br i1 %isnull3, label %delete.end7, label %delete.notnull4

delete.notnull4:                                  ; preds = %delete.end
  %11 = bitcast %class.CBFormat* %10 to void (%class.CBFormat*)***
  %vtable5 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %11, align 8, !tbaa !24
  %vfn6 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable5, i64 1
  %12 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn6, align 8
  tail call void %12(%class.CBFormat* nonnull %10) #24
  br label %delete.end7

delete.end7:                                      ; preds = %delete.notnull4, %delete.end
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !379
  %isnull8 = icmp eq %class.CAmbisonicEncoderDist* %13, null
  br i1 %isnull8, label %delete.end12, label %delete.notnull9

delete.notnull9:                                  ; preds = %delete.end7
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable10 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !24
  %vfn11 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable10, i64 1
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn11, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* nonnull %13) #24
  br label %delete.end12

delete.end12:                                     ; preds = %delete.notnull9, %delete.end7
  ret void

terminate.lpad:                                   ; preds = %if.then.i, %entry
  %16 = landingpad { i8*, i32 }
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  tail call void @__clang_call_terminate(i8* %17) #28
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #18 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #24
  tail call void @_ZSt9terminatev() #28
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nocapture %this, %"class.std::__cxx11::basic_string"* %outputFilePath, i32 %procTypeIn) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %wavh.i = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 16
  %temp = alloca i32, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  store i32 %procTypeIn, i32* %processType, align 8, !tbaa !392
  %cmp = icmp eq i32 %procTypeIn, 0
  br i1 %cmp, label %if.then, label %invoke.cont8

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 512) #25
  %0 = bitcast i8* %call to %"class.std::basic_ofstream"*
  invoke void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %outputFilePath, i32 20)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %if.then
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  store i8* %call, i8** %1, align 8, !tbaa !395
  %2 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %3 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i to <4 x i32>*
  store <4 x i32> <i32 1179011410, i32 48000000, i32 1163280727, i32 544501094>, <4 x i32>* %3, align 16, !tbaa !26
  %subchunksize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 4
  store i32 16, i32* %subchunksize.i.i, align 16, !tbaa !396
  %audioFormat.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 5
  store i16 1, i16* %audioFormat.i.i, align 4, !tbaa !398
  %NumChannels.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 6
  store i16 2, i16* %NumChannels.i.i, align 2, !tbaa !399
  %SampleRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i.i, align 8, !tbaa !400
  %byteRate.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 8
  store i32 192000, i32* %byteRate.i.i, align 4, !tbaa !401
  %BlockAlign.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i.i, align 16, !tbaa !402
  %BitsPerSample.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i.i, align 2, !tbaa !403
  %dataChunkID.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i.i, align 4, !tbaa !404
  %dataChunkSize.i.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh.i, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i.i, align 8, !tbaa !405
  %4 = bitcast i8* %call to %"class.std::basic_ostream"*
  %call.i = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* nonnull %4, i8* nonnull %2, i64 44)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %invoke.cont8

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  tail call void @_ZdlPv(i8* nonnull %call) #26
  br label %eh.resume

invoke.cont8:                                     ; preds = %invoke.cont4, %entry
  %call5 = call i8* @_Znwm(i64 24) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call5, i8 0, i64 24, i1 false) #24
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %8 = bitcast %"class.std::vector.43"** %soundSrcs to i8**
  store i8* %call5, i8** %8, align 8, !tbaa !406
  %call6 = call i8* @_Znwm(i64 296) #25
  %9 = bitcast i8* %call6 to %class.CAmbisonicBinauralizer*
  %10 = bitcast i8* %call6 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %call6, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8, !tbaa !45
  %13 = getelementptr inbounds i8, i8* %call6, i64 12
  store i8 0, i8* %13, align 4, !tbaa !48
  %14 = getelementptr inbounds i8, i8* %call6, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8, !tbaa !49
  %16 = getelementptr inbounds i8, i8* %call6, i64 20
  store i8 0, i8* %16, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !24
  %17 = getelementptr inbounds i8, i8* %call6, i64 24
  %18 = bitcast i8* %17 to i32 (...)***
  %19 = getelementptr inbounds i8, i8* %call6, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8, !tbaa !45
  %21 = getelementptr inbounds i8, i8* %call6, i64 36
  store i8 0, i8* %21, align 4, !tbaa !48
  %22 = getelementptr inbounds i8, i8* %call6, i64 40
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 8, !tbaa !49
  %24 = getelementptr inbounds i8, i8* %call6, i64 44
  store i8 0, i8* %24, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !tbaa !24
  %m_nSpeakerSetUp.i.i36 = getelementptr inbounds i8, i8* %call6, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i36, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg.i = getelementptr inbounds i8, i8* %call6, i64 88
  %25 = bitcast i8* %m_pFFT_cfg.i to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %25, align 8, !tbaa !27
  %m_pIFFT_cfg.i = getelementptr inbounds i8, i8* %call6, i64 104
  %26 = bitcast i8* %m_pIFFT_cfg.i to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %26, align 8, !tbaa !269
  %27 = getelementptr inbounds i8, i8* %call6, i64 112
  %m_nBlockSize.i = getelementptr inbounds i8, i8* %call6, i64 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nBlockSize.i, i8 0, i64 24, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 184, i1 false) #24
  %decoder = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %28 = bitcast %class.CAmbisonicBinauralizer** %decoder to i8**
  store i8* %call6, i8** %28, align 8, !tbaa !407
  %29 = bitcast i32* %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #24
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %31 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %30, %union.anon** %31, align 8, !tbaa !271
  %32 = bitcast %union.anon* %30 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !276
  store i8 0, i8* %32, align 8, !tbaa !278
  %call14 = invoke zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nonnull %9, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont8
  %33 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i40 = icmp eq i8* %33, %32
  br i1 %cmp.i.i.i40, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42, label %if.then.i.i41

if.then.i.i41:                                    ; preds = %invoke.cont13
  call void @_ZdlPv(i8* %33) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42: ; preds = %if.then.i.i41, %invoke.cont13
  br i1 %call14, label %invoke.cont27, label %if.then16

if.then16:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
  %puts = call i32 @puts(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str, i64 0, i64 0))
  br label %invoke.cont27

lpad12:                                           ; preds = %invoke.cont8
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i = icmp eq i8* %37, %32
  br i1 %cmp.i.i.i, label %ehcleanup33, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad12
  call void @_ZdlPv(i8* %37) #24
  br label %ehcleanup33

invoke.cont27:                                    ; preds = %if.then16, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
  %call19 = call i8* @_Znwm(i64 200) #25
  %38 = bitcast i8* %call19 to %class.CAmbisonicProcessor*
  %39 = bitcast i8* %call19 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %call19, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 8, !tbaa !45
  %42 = getelementptr inbounds i8, i8* %call19, i64 12
  store i8 0, i8* %42, align 4, !tbaa !48
  %43 = getelementptr inbounds i8, i8* %call19, i64 16
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8, !tbaa !49
  %45 = getelementptr inbounds i8, i8* %call19, i64 20
  store i8 0, i8* %45, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !24
  %m_orientation.i = getelementptr inbounds i8, i8* %call19, i64 24
  %46 = bitcast i8* %m_orientation.i to %class.Orientation*
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %46, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00) #24
  %m_pfTempSample.i = getelementptr inbounds i8, i8* %call19, i64 48
  %m_ppcpPsychFilters.i = getelementptr inbounds i8, i8* %call19, i64 112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfTempSample.i, i8 0, i64 40, i1 false) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_ppcpPsychFilters.i, i8 0, i64 16, i1 false) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %47 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  store i8* %call19, i8** %47, align 8, !tbaa !408
  %call24 = call zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* nonnull %38, i32 3, i1 zeroext true, i32 1024, i32 undef)
  %call25 = call i8* @_Znwm(i64 104) #25
  %48 = bitcast i8* %call25 to %class.CAmbisonicZoomer*
  %49 = bitcast i8* %call25 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %call25, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8, !tbaa !45
  %52 = getelementptr inbounds i8, i8* %call25, i64 12
  store i8 0, i8* %52, align 4, !tbaa !48
  %53 = getelementptr inbounds i8, i8* %call25, i64 16
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 8, !tbaa !49
  %55 = getelementptr inbounds i8, i8* %call25, i64 20
  store i8 0, i8* %55, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !tbaa !24
  %56 = getelementptr inbounds i8, i8* %call25, i64 24
  %57 = bitcast i8* %56 to i32 (...)***
  %58 = getelementptr inbounds i8, i8* %call25, i64 32
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 8, !tbaa !45
  %60 = getelementptr inbounds i8, i8* %call25, i64 36
  store i8 0, i8* %60, align 4, !tbaa !48
  %61 = getelementptr inbounds i8, i8* %call25, i64 40
  %62 = bitcast i8* %61 to i32*
  store i32 0, i32* %62, align 8, !tbaa !49
  %63 = getelementptr inbounds i8, i8* %call25, i64 44
  store i8 0, i8* %63, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8, !tbaa !24
  %m_nSpeakerSetUp.i.i = getelementptr inbounds i8, i8* %call25, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i, i8 0, i64 44, i1 false) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %64 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  store i8* %call25, i8** %64, align 8, !tbaa !409
  %call32 = call zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* nonnull %48, i32 3, i1 zeroext true, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24
  ret void

ehcleanup33:                                      ; preds = %if.then.i.i, %lpad12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup33, %lpad
  %ehselector.slot.2 = phi i32 [ %36, %ehcleanup33 ], [ %7, %lpad ]
  %exn.slot.2 = phi i8* [ %35, %ehcleanup33 ], [ %6, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.2, 0
  %lpad.val35 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.2, 1
  resume { i8*, i32 } %lpad.val35
}

; Function Attrs: uwtable
declare void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %wavh = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 16
  %0 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %0) #24
  %1 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to <4 x i32>*
  store <4 x i32> <i32 1179011410, i32 48000000, i32 1163280727, i32 544501094>, <4 x i32>* %1, align 16, !tbaa !26
  %subchunksize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 4
  store i32 16, i32* %subchunksize.i, align 16, !tbaa !396
  %audioFormat.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 5
  store i16 1, i16* %audioFormat.i, align 4, !tbaa !398
  %NumChannels.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 6
  store i16 2, i16* %NumChannels.i, align 2, !tbaa !399
  %SampleRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i, align 8, !tbaa !400
  %byteRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 8
  store i32 192000, i32* %byteRate.i, align 4, !tbaa !401
  %BlockAlign.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i, align 16, !tbaa !402
  %BitsPerSample.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i, align 2, !tbaa !403
  %dataChunkID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i, align 4, !tbaa !404
  %dataChunkSize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i, align 8, !tbaa !405
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  %3 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !395
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %3, i8* nonnull %0, i64 44)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %0) #24
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) unnamed_addr #7 align 2 {
entry:
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !392
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !395
  tail call void @free(i8* %2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %3 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i10 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %3, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i10 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !410
  %6 = bitcast %"class.std::vector.43"* %3 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !413
  %cmp213 = icmp eq i64 %5, %7
  br i1 %cmp213, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %.in = phi %"class.std::vector.43"* [ %3, %if.end ], [ %19, %for.body ]
  %8 = bitcast %"class.std::vector.43"* %.in to i8*
  tail call void @free(i8* %8) #24
  %decoder = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicBinauralizer** %decoder to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !407
  tail call void @free(i8* %10) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %11 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !408
  tail call void @free(i8* %12) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %13 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !409
  tail call void @free(i8* %14) #24
  ret void

for.body:                                         ; preds = %for.body, %if.end
  %15 = phi %"class.std::vector.43"* [ %19, %for.body ], [ %3, %if.end ]
  %conv15 = phi i64 [ %conv, %for.body ], [ 0, %if.end ]
  %soundIdx.014 = phi i32 [ %inc, %for.body ], [ 0, %if.end ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %15, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !413
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %16, i64 %conv15
  %17 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !27
  tail call void @free(i8* %18) #24
  %inc = add i32 %soundIdx.014, 1
  %conv = zext i32 %inc to i64
  %19 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %19, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !410
  %22 = bitcast %"class.std::vector.43"* %19 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !413
  %sub.ptr.sub.i = sub i64 %21, %23
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp2 = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp2, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i149 = alloca i64, align 8
  %__dnew.i.i.i.i67 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp7 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp27 = alloca %"class.std::__cxx11::basic_string", align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !392
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp27 to %union.anon**
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i149 to i8*
  %_M_p.i18.i.i.i.i152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i153 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i159 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 1
  %soundSrcs50 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 4136) #25
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !271
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24
  store i64 25, i64* %__dnew.i.i.i.i, align 8, !tbaa !277
  %call5.i.i.i9.i61 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %lpad

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i18.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i61, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !273
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !277
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i61, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !276
  %10 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !273
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24
  %11 = bitcast i8* %call to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %11, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 3, i1 zeroext undef)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  %12 = ptrtoint i8* %call to i64
  %13 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i64 = icmp eq i8* %13, %7
  br i1 %cmp.i.i.i64, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66, label %if.then.i.i65

if.then.i.i65:                                    ; preds = %invoke.cont3
  call void @_ZdlPv(i8* %13) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66: ; preds = %if.then.i.i65, %invoke.cont3
  %srcPos.i = getelementptr inbounds i8, i8* %call, i64 4120
  %14 = bitcast i8* %srcPos.i to i32*
  store i32 -1110651699, i32* %14, align 8, !tbaa !380
  %fElevation4.i = getelementptr inbounds i8, i8* %call, i64 4124
  %15 = bitcast i8* %fElevation4.i to i32*
  store i32 1070134723, i32* %15, align 4, !tbaa !381
  %fDistance6.i = getelementptr inbounds i8, i8* %call, i64 4128
  %16 = bitcast i8* %fDistance6.i to i32*
  store i32 1065353216, i32* %16, align 8, !tbaa !382
  %BEncoder.i = getelementptr inbounds i8, i8* %call, i64 4112
  %17 = bitcast i8* %BEncoder.i to %class.CAmbisonicEncoderDist**
  %18 = bitcast i8* %BEncoder.i to %class.CAmbisonicSource**
  %19 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %18, align 8, !tbaa !379
  %agg.tmp.sroa.0.0..sroa_cast.i = bitcast i8* %srcPos.i to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i, align 8
  %20 = bitcast %class.CAmbisonicSource* %19 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %20, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i, i64 5
  %21 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i, align 8
  call void %21(%class.CAmbisonicSource* %19, <2 x float> %agg.tmp.sroa.0.0.copyload.i, float 1.000000e+00)
  %22 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %17, align 8, !tbaa !379
  %23 = bitcast %class.CAmbisonicEncoderDist* %22 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !24
  %vfn10.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i, i64 4
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i, align 8
  call void %24(%class.CAmbisonicEncoderDist* %22)
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %25 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %25, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !410
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %25, i64 0, i32 0, i32 0, i32 2
  %27 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i, align 8, !tbaa !414
  %cmp.i = icmp eq %"class.ILLIXR_AUDIO::Sound"** %26, %27
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
  %28 = bitcast %"class.ILLIXR_AUDIO::Sound"** %26 to i64*
  store i64 %12, i64* %28, align 8, !tbaa !27
  %29 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !410
  %incdec.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %29, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

if.else.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
  %30 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %26 to i64
  %31 = bitcast %"class.std::vector.43"* %25 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !413
  %sub.ptr.sub.i21.i.i.i = sub i64 %30, %32
  %sub.ptr.div.i22.i.i.i = ashr exact i64 %sub.ptr.sub.i21.i.i.i, 3
  %cmp.i.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i.i, 0
  %.sroa.speculated.i.i.i = select i1 %cmp.i.i.i.i, i64 1, i64 %sub.ptr.div.i22.i.i.i
  %add.i.i.i = add nsw i64 %.sroa.speculated.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 2305843009213693951
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp9.i.i.i
  %cond.i.i.i = select i1 %or.cond.i.i.i, i64 2305843009213693951, i64 %add.i.i.i
  %cmp.i56.i.i = icmp eq i64 %cond.i.i.i, 0
  br i1 %cmp.i56.i.i, label %invoke.cont.i.i, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i: ; preds = %if.else.i
  %33 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %mul.i.i.i.i.i = shl i64 %cond.i.i.i, 3
  %call2.i.i.i.i.i = call i8* @_Znwm(i64 %mul.i.i.i.i.i)
  %34 = bitcast i8* %call2.i.i.i.i.i to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i = load i64, i64* %33, align 8, !tbaa !410
  %.pre65.i.i = load i64, i64* %31, align 8, !tbaa !413
  %.pre66.i.i = sub i64 %.pre.i.i, %.pre65.i.i
  %.pre67.i.i = ashr exact i64 %.pre66.i.i, 3
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i, %if.else.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i = phi i64 [ %.pre67.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %sub.ptr.div.i22.i.i.i, %if.else.i ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i = phi i64 [ %.pre66.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %sub.ptr.sub.i21.i.i.i, %if.else.i ]
  %.in.i.i = phi i64 [ %.pre65.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %32, %if.else.i ]
  %35 = phi i8* [ %call2.i.i.i.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %cond.i57.i.i = phi %"class.ILLIXR_AUDIO::Sound"** [ %34, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %add.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i
  %36 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i to i64*
  store i64 %12, i64* %36, align 8, !tbaa !27
  %tobool.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i, label %invoke.cont8.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i.i:                      ; preds = %invoke.cont.i.i
  %37 = inttoptr i64 %.in.i.i to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i, i1 false) #24
  br label %invoke.cont8.i.i

invoke.cont8.i.i:                                 ; preds = %if.then.i.i.i.i.i.i.i.i.i.i, %invoke.cont.i.i
  %incdec.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i, i64 1
  %tobool.i62.i.i = icmp eq i64 %.in.i.i, 0
  br i1 %tobool.i62.i.i, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i, label %if.then.i63.i.i

if.then.i63.i.i:                                  ; preds = %invoke.cont8.i.i
  %38 = inttoptr i64 %.in.i.i to i8*
  call void @_ZdlPv(i8* nonnull %38) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i: ; preds = %if.then.i63.i.i, %invoke.cont8.i.i
  %39 = bitcast %"class.std::vector.43"* %25 to i8**
  store i8* %35, i8** %39, align 8, !tbaa !413
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !410
  %add.ptr33.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i, i64 %cond.i.i.i
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i, %if.then.i
  %_M_finish.i.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i, %if.then.i ], [ %_M_end_of_storage.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i ]
  %incdec.ptr.i.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i, %if.then.i ], [ %add.ptr33.i.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i.sink, align 8, !tbaa !27
  %call6 = call i8* @_Znwm(i64 4136) #25
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2
  %41 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp7 to %union.anon**
  store %union.anon* %40, %union.anon** %41, align 8, !tbaa !271
  %42 = bitcast %union.anon* %40 to i8*
  %43 = bitcast i64* %__dnew.i.i.i.i67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #24
  store i64 28, i64* %__dnew.i.i.i.i67, align 8, !tbaa !277
  %call5.i.i.i9.i80 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i67, i64 0)
          to label %call5.i.i.i9.i.noexc79 unwind label %lpad9

call5.i.i.i9.i.noexc79:                           ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  %_M_p.i18.i.i.i.i70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i80, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !273
  %44 = load i64, i64* %__dnew.i.i.i.i67, align 8, !tbaa !277
  %_M_allocated_capacity.i.i.i.i.i71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2, i32 0
  store i64 %44, i64* %_M_allocated_capacity.i.i.i.i.i71, align 8, !tbaa !278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i80, i8* nonnull align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i64 28, i1 false) #24
  %_M_string_length.i.i.i.i.i.i77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 1
  store i64 %44, i64* %_M_string_length.i.i.i.i.i.i77, align 8, !tbaa !276
  %45 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !273
  %arrayidx.i.i.i.i.i78 = getelementptr inbounds i8, i8* %45, i64 %44
  store i8 0, i8* %arrayidx.i.i.i.i.i78, align 1, !tbaa !278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #24
  %46 = bitcast i8* %call6 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %46, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i32 3, i1 zeroext undef)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %call5.i.i.i9.i.noexc79
  %47 = ptrtoint i8* %call6 to i64
  %48 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !273
  %cmp.i.i.i84 = icmp eq i8* %48, %42
  br i1 %cmp.i.i.i84, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86, label %if.then.i.i85

if.then.i.i85:                                    ; preds = %invoke.cont12
  call void @_ZdlPv(i8* %48) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86: ; preds = %if.then.i.i85, %invoke.cont12
  %srcPos.i87 = getelementptr inbounds i8, i8* %call6, i64 4120
  %49 = bitcast i8* %srcPos.i87 to i32*
  store i32 1065353216, i32* %49, align 8, !tbaa !380
  %fElevation4.i89 = getelementptr inbounds i8, i8* %call6, i64 4124
  %50 = bitcast i8* %fElevation4.i89 to i32*
  store i32 0, i32* %50, align 4, !tbaa !381
  %fDistance6.i91 = getelementptr inbounds i8, i8* %call6, i64 4128
  %51 = bitcast i8* %fDistance6.i91 to i32*
  store i32 1084227584, i32* %51, align 8, !tbaa !382
  %BEncoder.i92 = getelementptr inbounds i8, i8* %call6, i64 4112
  %52 = bitcast i8* %BEncoder.i92 to %class.CAmbisonicEncoderDist**
  %53 = bitcast i8* %BEncoder.i92 to %class.CAmbisonicSource**
  %54 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %53, align 8, !tbaa !379
  %agg.tmp.sroa.0.0..sroa_cast.i93 = bitcast i8* %srcPos.i87 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i94 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i93, align 8
  %55 = bitcast %class.CAmbisonicSource* %54 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i96 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %55, align 8, !tbaa !24
  %vfn.i97 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i96, i64 5
  %56 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i97, align 8
  call void %56(%class.CAmbisonicSource* %54, <2 x float> %agg.tmp.sroa.0.0.copyload.i94, float 5.000000e+00)
  %57 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %52, align 8, !tbaa !379
  %58 = bitcast %class.CAmbisonicEncoderDist* %57 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i98 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %58, align 8, !tbaa !24
  %vfn10.i99 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i98, i64 4
  %59 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i99, align 8
  call void %59(%class.CAmbisonicEncoderDist* %57)
  %60 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i100 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %60, i64 0, i32 0, i32 0, i32 1
  %61 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !410
  %_M_end_of_storage.i101 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %60, i64 0, i32 0, i32 0, i32 2
  %62 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i101, align 8, !tbaa !414
  %cmp.i102 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %61, %62
  br i1 %cmp.i102, label %if.else.i115, label %if.then.i104

if.then.i104:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
  %63 = bitcast %"class.ILLIXR_AUDIO::Sound"** %61 to i64*
  store i64 %47, i64* %63, align 8, !tbaa !27
  %64 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !410
  %incdec.ptr.i103 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %64, i64 1
  br label %if.end.sink.split

if.else.i115:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
  %65 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %61 to i64
  %66 = bitcast %"class.std::vector.43"* %60 to i64*
  %67 = load i64, i64* %66, align 8, !tbaa !413
  %sub.ptr.sub.i21.i.i.i105 = sub i64 %65, %67
  %sub.ptr.div.i22.i.i.i106 = ashr exact i64 %sub.ptr.sub.i21.i.i.i105, 3
  %cmp.i.i.i.i107 = icmp eq i64 %sub.ptr.sub.i21.i.i.i105, 0
  %.sroa.speculated.i.i.i108 = select i1 %cmp.i.i.i.i107, i64 1, i64 %sub.ptr.div.i22.i.i.i106
  %add.i.i.i109 = add nsw i64 %.sroa.speculated.i.i.i108, %sub.ptr.div.i22.i.i.i106
  %cmp7.i.i.i110 = icmp ult i64 %add.i.i.i109, %sub.ptr.div.i22.i.i.i106
  %cmp9.i.i.i111 = icmp ugt i64 %add.i.i.i109, 2305843009213693951
  %or.cond.i.i.i112 = or i1 %cmp7.i.i.i110, %cmp9.i.i.i111
  %cond.i.i.i113 = select i1 %or.cond.i.i.i112, i64 2305843009213693951, i64 %add.i.i.i109
  %cmp.i56.i.i114 = icmp eq i64 %cond.i.i.i113, 0
  br i1 %cmp.i56.i.i114, label %invoke.cont.i.i129, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122: ; preds = %if.else.i115
  %68 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100 to i64*
  %mul.i.i.i.i.i116 = shl i64 %cond.i.i.i113, 3
  %call2.i.i.i.i.i117 = call i8* @_Znwm(i64 %mul.i.i.i.i.i116)
  %69 = bitcast i8* %call2.i.i.i.i.i117 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i118 = load i64, i64* %68, align 8, !tbaa !410
  %.pre65.i.i119 = load i64, i64* %66, align 8, !tbaa !413
  %.pre66.i.i120 = sub i64 %.pre.i.i118, %.pre65.i.i119
  %.pre67.i.i121 = ashr exact i64 %.pre66.i.i120, 3
  br label %invoke.cont.i.i129

invoke.cont.i.i129:                               ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122, %if.else.i115
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i123 = phi i64 [ %.pre67.i.i121, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122 ], [ %sub.ptr.div.i22.i.i.i106, %if.else.i115 ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i124 = phi i64 [ %.pre66.i.i120, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122 ], [ %sub.ptr.sub.i21.i.i.i105, %if.else.i115 ]
  %.in.i.i125 = phi i64 [ %.pre65.i.i119, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122 ], [ %67, %if.else.i115 ]
  %70 = phi i8* [ %call2.i.i.i.i.i117, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122 ], [ null, %if.else.i115 ]
  %cond.i57.i.i126 = phi %"class.ILLIXR_AUDIO::Sound"** [ %69, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122 ], [ null, %if.else.i115 ]
  %add.ptr.i.i127 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i126, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i123
  %71 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i127 to i64*
  store i64 %47, i64* %71, align 8, !tbaa !27
  %tobool.i.i.i.i.i.i.i.i.i.i128 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i124, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i128, label %invoke.cont8.i.i134, label %if.then.i.i.i.i.i.i.i.i.i.i130

if.then.i.i.i.i.i.i.i.i.i.i130:                   ; preds = %invoke.cont.i.i129
  %72 = inttoptr i64 %.in.i.i125 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %72, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i124, i1 false) #24
  br label %invoke.cont8.i.i134

invoke.cont8.i.i134:                              ; preds = %if.then.i.i.i.i.i.i.i.i.i.i130, %invoke.cont.i.i129
  %incdec.ptr.i.i132 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i127, i64 1
  %tobool.i62.i.i133 = icmp eq i64 %.in.i.i125, 0
  br i1 %tobool.i62.i.i133, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137, label %if.then.i63.i.i135

if.then.i63.i.i135:                               ; preds = %invoke.cont8.i.i134
  %73 = inttoptr i64 %.in.i.i125 to i8*
  call void @_ZdlPv(i8* nonnull %73) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137: ; preds = %if.then.i63.i.i135, %invoke.cont8.i.i134
  %74 = bitcast %"class.std::vector.43"* %60 to i8**
  store i8* %70, i8** %74, align 8, !tbaa !413
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i132, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i100, align 8, !tbaa !410
  %add.ptr33.i.i136 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i126, i64 %cond.i.i.i113
  br label %if.end.sink.split

lpad:                                             ; preds = %if.then
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  %77 = extractvalue { i8*, i32 } %75, 1
  br label %ehcleanup52

lpad2:                                            ; preds = %call5.i.i.i9.i.noexc
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  %80 = extractvalue { i8*, i32 } %78, 1
  %81 = load i8*, i8** %_M_p.i18.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i141 = icmp eq i8* %81, %7
  br i1 %cmp.i.i.i141, label %ehcleanup52, label %if.then.i.i142

if.then.i.i142:                                   ; preds = %lpad2
  call void @_ZdlPv(i8* %81) #24
  br label %ehcleanup52

lpad9:                                            ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  %84 = extractvalue { i8*, i32 } %82, 1
  br label %ehcleanup52

lpad11:                                           ; preds = %call5.i.i.i9.i.noexc79
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  %87 = extractvalue { i8*, i32 } %85, 1
  %88 = load i8*, i8** %_M_p.i18.i.i.i.i70, align 8, !tbaa !273
  %cmp.i.i.i146 = icmp eq i8* %88, %42
  br i1 %cmp.i.i.i146, label %ehcleanup52, label %if.then.i.i147

if.then.i.i147:                                   ; preds = %lpad11
  call void @_ZdlPv(i8* %88) #24
  br label %ehcleanup52

for.body:                                         ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220, %for.cond.preheader
  %i.0245 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220 ]
  %call26 = call i8* @_Znwm(i64 4136) #25
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !271
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24
  store i64 25, i64* %__dnew.i.i.i.i149, align 8, !tbaa !277
  %call5.i.i.i9.i162 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i64* nonnull dereferenceable(8) %__dnew.i.i.i.i149, i64 0)
          to label %call5.i.i.i9.i.noexc161 unwind label %lpad29

call5.i.i.i9.i.noexc161:                          ; preds = %for.body
  store i8* %call5.i.i.i9.i162, i8** %_M_p.i18.i.i.i.i152, align 8, !tbaa !273
  %89 = load i64, i64* %__dnew.i.i.i.i149, align 8, !tbaa !277
  store i64 %89, i64* %_M_allocated_capacity.i.i.i.i.i153, align 8, !tbaa !278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call5.i.i.i9.i162, i8* nonnull align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25, i1 false) #24
  store i64 %89, i64* %_M_string_length.i.i.i.i.i.i159, align 8, !tbaa !276
  %90 = load i8*, i8** %_M_p.i18.i.i.i.i152, align 8, !tbaa !273
  %arrayidx.i.i.i.i.i160 = getelementptr inbounds i8, i8* %90, i64 %89
  store i8 0, i8* %arrayidx.i.i.i.i.i160, align 1, !tbaa !278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24
  %91 = bitcast i8* %call26 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %91, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i32 3, i1 zeroext undef)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %call5.i.i.i9.i.noexc161
  %92 = ptrtoint i8* %call26 to i64
  %93 = load i8*, i8** %_M_p.i18.i.i.i.i152, align 8, !tbaa !273
  %cmp.i.i.i166 = icmp eq i8* %93, %3
  br i1 %cmp.i.i.i166, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168, label %if.then.i.i167

if.then.i.i167:                                   ; preds = %invoke.cont32
  call void @_ZdlPv(i8* %93) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168: ; preds = %if.then.i.i167, %invoke.cont32
  %conv = uitofp i32 %i.0245 to double
  %mul = fmul double %conv, -1.000000e-01
  %conv41 = fptrunc double %mul to float
  %mul44 = fmul double %conv, 1.570000e+00
  %conv45 = fptrunc double %mul44 to float
  %conv48 = uitofp i32 %i.0245 to float
  %srcPos.i169 = getelementptr inbounds i8, i8* %call26, i64 4120
  %94 = bitcast i8* %srcPos.i169 to float*
  store float %conv41, float* %94, align 8, !tbaa !380
  %fElevation4.i171 = getelementptr inbounds i8, i8* %call26, i64 4124
  %95 = bitcast i8* %fElevation4.i171 to float*
  store float %conv45, float* %95, align 4, !tbaa !381
  %fDistance6.i173 = getelementptr inbounds i8, i8* %call26, i64 4128
  %96 = bitcast i8* %fDistance6.i173 to float*
  store float %conv48, float* %96, align 8, !tbaa !382
  %BEncoder.i174 = getelementptr inbounds i8, i8* %call26, i64 4112
  %97 = bitcast i8* %BEncoder.i174 to %class.CAmbisonicEncoderDist**
  %98 = bitcast i8* %BEncoder.i174 to %class.CAmbisonicSource**
  %99 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %98, align 8, !tbaa !379
  %agg.tmp.sroa.0.0..sroa_cast.i175 = bitcast i8* %srcPos.i169 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i176 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i175, align 8
  %100 = bitcast %class.CAmbisonicSource* %99 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i178 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %100, align 8, !tbaa !24
  %vfn.i179 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i178, i64 5
  %101 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i179, align 8
  call void %101(%class.CAmbisonicSource* %99, <2 x float> %agg.tmp.sroa.0.0.copyload.i176, float %conv48)
  %102 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %97, align 8, !tbaa !379
  %103 = bitcast %class.CAmbisonicEncoderDist* %102 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i180 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %103, align 8, !tbaa !24
  %vfn10.i181 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i180, i64 4
  %104 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i181, align 8
  call void %104(%class.CAmbisonicEncoderDist* %102)
  %105 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs50, align 8, !tbaa !406
  %_M_finish.i182 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %105, i64 0, i32 0, i32 0, i32 1
  %106 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i182, align 8, !tbaa !410
  %_M_end_of_storage.i183 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %105, i64 0, i32 0, i32 0, i32 2
  %107 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i183, align 8, !tbaa !414
  %cmp.i184 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %106, %107
  br i1 %cmp.i184, label %if.else.i197, label %if.then.i186

if.then.i186:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
  %108 = bitcast %"class.ILLIXR_AUDIO::Sound"** %106 to i64*
  store i64 %92, i64* %108, align 8, !tbaa !27
  %109 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i182, align 8, !tbaa !410
  %incdec.ptr.i185 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %109, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220

if.else.i197:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
  %110 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %106 to i64
  %111 = bitcast %"class.std::vector.43"* %105 to i64*
  %112 = load i64, i64* %111, align 8, !tbaa !413
  %sub.ptr.sub.i21.i.i.i187 = sub i64 %110, %112
  %sub.ptr.div.i22.i.i.i188 = ashr exact i64 %sub.ptr.sub.i21.i.i.i187, 3
  %cmp.i.i.i.i189 = icmp eq i64 %sub.ptr.sub.i21.i.i.i187, 0
  %.sroa.speculated.i.i.i190 = select i1 %cmp.i.i.i.i189, i64 1, i64 %sub.ptr.div.i22.i.i.i188
  %add.i.i.i191 = add nsw i64 %.sroa.speculated.i.i.i190, %sub.ptr.div.i22.i.i.i188
  %cmp7.i.i.i192 = icmp ult i64 %add.i.i.i191, %sub.ptr.div.i22.i.i.i188
  %cmp9.i.i.i193 = icmp ugt i64 %add.i.i.i191, 2305843009213693951
  %or.cond.i.i.i194 = or i1 %cmp7.i.i.i192, %cmp9.i.i.i193
  %cond.i.i.i195 = select i1 %or.cond.i.i.i194, i64 2305843009213693951, i64 %add.i.i.i191
  %cmp.i56.i.i196 = icmp eq i64 %cond.i.i.i195, 0
  br i1 %cmp.i56.i.i196, label %invoke.cont.i.i211, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204: ; preds = %if.else.i197
  %113 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i182 to i64*
  %mul.i.i.i.i.i198 = shl i64 %cond.i.i.i195, 3
  %call2.i.i.i.i.i199 = call i8* @_Znwm(i64 %mul.i.i.i.i.i198)
  %114 = bitcast i8* %call2.i.i.i.i.i199 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i200 = load i64, i64* %113, align 8, !tbaa !410
  %.pre65.i.i201 = load i64, i64* %111, align 8, !tbaa !413
  %.pre66.i.i202 = sub i64 %.pre.i.i200, %.pre65.i.i201
  %.pre67.i.i203 = ashr exact i64 %.pre66.i.i202, 3
  br label %invoke.cont.i.i211

invoke.cont.i.i211:                               ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204, %if.else.i197
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i205 = phi i64 [ %.pre67.i.i203, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ %sub.ptr.div.i22.i.i.i188, %if.else.i197 ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i206 = phi i64 [ %.pre66.i.i202, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ %sub.ptr.sub.i21.i.i.i187, %if.else.i197 ]
  %.in.i.i207 = phi i64 [ %.pre65.i.i201, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ %112, %if.else.i197 ]
  %115 = phi i8* [ %call2.i.i.i.i.i199, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ null, %if.else.i197 ]
  %cond.i57.i.i208 = phi %"class.ILLIXR_AUDIO::Sound"** [ %114, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204 ], [ null, %if.else.i197 ]
  %add.ptr.i.i209 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i208, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i205
  %116 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i209 to i64*
  store i64 %92, i64* %116, align 8, !tbaa !27
  %tobool.i.i.i.i.i.i.i.i.i.i210 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i206, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i210, label %invoke.cont8.i.i216, label %if.then.i.i.i.i.i.i.i.i.i.i212

if.then.i.i.i.i.i.i.i.i.i.i212:                   ; preds = %invoke.cont.i.i211
  %117 = inttoptr i64 %.in.i.i207 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %117, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i206, i1 false) #24
  br label %invoke.cont8.i.i216

invoke.cont8.i.i216:                              ; preds = %if.then.i.i.i.i.i.i.i.i.i.i212, %invoke.cont.i.i211
  %incdec.ptr.i.i214 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i209, i64 1
  %tobool.i62.i.i215 = icmp eq i64 %.in.i.i207, 0
  br i1 %tobool.i62.i.i215, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219, label %if.then.i63.i.i217

if.then.i63.i.i217:                               ; preds = %invoke.cont8.i.i216
  %118 = inttoptr i64 %.in.i.i207 to i8*
  call void @_ZdlPv(i8* nonnull %118) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219: ; preds = %if.then.i63.i.i217, %invoke.cont8.i.i216
  %119 = bitcast %"class.std::vector.43"* %105 to i8**
  store i8* %115, i8** %119, align 8, !tbaa !413
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i214, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i182, align 8, !tbaa !410
  %add.ptr33.i.i218 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i208, i64 %cond.i.i.i195
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219, %if.then.i186
  %_M_finish.i182.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i182, %if.then.i186 ], [ %_M_end_of_storage.i183, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219 ]
  %incdec.ptr.i185.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i185, %if.then.i186 ], [ %add.ptr33.i.i218, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219 ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i185.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i182.sink, align 8, !tbaa !27
  %inc = add nuw nsw i32 %i.0245, 1
  %exitcond = icmp eq i32 %inc, 16
  br i1 %exitcond, label %if.end, label %for.body

lpad29:                                           ; preds = %for.body
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  %122 = extractvalue { i8*, i32 } %120, 1
  br label %ehcleanup52

lpad31:                                           ; preds = %call5.i.i.i9.i.noexc161
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  %125 = extractvalue { i8*, i32 } %123, 1
  %126 = load i8*, i8** %_M_p.i18.i.i.i.i152, align 8, !tbaa !273
  %cmp.i.i.i = icmp eq i8* %126, %3
  br i1 %cmp.i.i.i, label %ehcleanup52, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad31
  call void @_ZdlPv(i8* %126) #24
  br label %ehcleanup52

if.end.sink.split:                                ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137, %if.then.i104
  %_M_end_of_storage.i101.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_end_of_storage.i101, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137 ], [ %_M_finish.i100, %if.then.i104 ]
  %add.ptr33.i.i136.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %add.ptr33.i.i136, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137 ], [ %incdec.ptr.i103, %if.then.i104 ]
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr33.i.i136.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i101.sink, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
  ret void

ehcleanup52:                                      ; preds = %if.then.i.i, %lpad31, %lpad29, %if.then.i.i147, %lpad11, %lpad9, %if.then.i.i142, %lpad2, %lpad
  %call6.sink = phi i8* [ %call, %if.then.i.i142 ], [ %call, %lpad2 ], [ %call, %lpad ], [ %call6, %if.then.i.i147 ], [ %call6, %lpad11 ], [ %call6, %lpad9 ], [ %call26, %if.then.i.i ], [ %call26, %lpad31 ], [ %call26, %lpad29 ]
  %exn.slot.3 = phi i8* [ %79, %if.then.i.i142 ], [ %79, %lpad2 ], [ %76, %lpad ], [ %86, %if.then.i.i147 ], [ %86, %lpad11 ], [ %83, %lpad9 ], [ %124, %if.then.i.i ], [ %124, %lpad31 ], [ %121, %lpad29 ]
  %ehselector.slot.3 = phi i32 [ %80, %if.then.i.i142 ], [ %80, %lpad2 ], [ %77, %lpad ], [ %87, %if.then.i.i147 ], [ %87, %lpad11 ], [ %84, %lpad9 ], [ %125, %if.then.i.i ], [ %125, %lpad31 ], [ %122, %lpad29 ]
  call void @_ZdlPv(i8* nonnull %call6.sink) #26
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val54 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val54
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio12processBlockEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %sumBF = alloca %class.CBFormat, align 8
  %call = tail call i8* @_Znam(i64 16) #25
  %0 = bitcast i8* %call to float**
  %call2 = tail call i8* @_Znam(i64 4096) #25
  %1 = bitcast i8* %call to i8**
  store i8* %call2, i8** %1, align 8, !tbaa !27
  %call3 = tail call i8* @_Znam(i64 4096) #25
  %arrayidx4 = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %arrayidx4 to float**
  %3 = bitcast i8* %arrayidx4 to i8**
  store i8* %call3, i8** %3, align 8, !tbaa !27
  %4 = bitcast %class.CBFormat* %sumBF to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #24
  %5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !45
  %7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !48
  %8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !49
  %9 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %10 = bitcast i32* %m_nSamples.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #24
  %call5 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %sumBF, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %11 = load i32, i32* %processType, align 8, !tbaa !392
  %cmp = icmp eq i32 %11, 2
  br i1 %cmp, label %if.then9, label %if.then

if.then:                                          ; preds = %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %if.then15, %invoke.cont10, %if.then9, %if.then, %entry
  %12 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %_M_head_impl.i.i.i.i.i.i36 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i36, align 8, !tbaa !27
  %cmp.i.i37 = icmp eq float** %13, null
  br i1 %cmp.i.i37, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i38

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i38:   ; preds = %lpad
  %14 = bitcast float** %13 to i8*
  call void @_ZdaPv(i8* %14) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i38, %lpad
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i36, align 8, !tbaa !27
  %_M_start.i.i.i39 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load float*, float** %_M_start.i.i.i39, align 8, !tbaa !60
  %tobool.i.i.i.i40 = icmp eq float* %15, null
  br i1 %tobool.i.i.i.i40, label %_ZN8CBFormatD2Ev.exit43, label %if.then.i.i.i.i42

if.then.i.i.i.i42:                                ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41
  %16 = bitcast float* %15 to i8*
  call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZN8CBFormatD2Ev.exit43

_ZN8CBFormatD2Ev.exit43:                          ; preds = %if.then.i.i.i.i42, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  resume { i8*, i32 } %12

if.end:                                           ; preds = %if.then
  %.pr = load i32, i32* %processType, align 8, !tbaa !392
  %cmp8 = icmp eq i32 %.pr, 1
  br i1 %cmp8, label %if.end17, label %if.then9

if.then9:                                         ; preds = %if.end, %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %invoke.cont10 unwind label %lpad

invoke.cont10:                                    ; preds = %if.then9
  %decoder = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %17 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder, align 8, !tbaa !407
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %17, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
          to label %if.end12 unwind label %lpad

if.end12:                                         ; preds = %invoke.cont10
  %.pr45 = load i32, i32* %processType, align 8, !tbaa !392
  %cmp14 = icmp eq i32 %.pr45, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, float** nonnull %0)
          to label %if.end17 unwind label %lpad

if.end17:                                         ; preds = %if.then15, %if.end12, %if.end
  %18 = load float*, float** %0, align 8, !tbaa !27
  %isnull = icmp eq float* %18, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end17
  %19 = bitcast float* %18 to i8*
  call void @_ZdaPv(i8* %19) #26
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end17
  %20 = load float*, float** %2, align 8, !tbaa !27
  %isnull20 = icmp eq float* %20, null
  br i1 %isnull20, label %delete.notnull24, label %delete.notnull21

delete.notnull21:                                 ; preds = %delete.end
  %21 = bitcast float* %20 to i8*
  call void @_ZdaPv(i8* %21) #26
  br label %delete.notnull24

delete.notnull24:                                 ; preds = %delete.notnull21, %delete.end
  call void @_ZdaPv(i8* nonnull %call) #26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !24
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %22 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i.i = icmp eq float** %22, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i:     ; preds = %delete.notnull24
  %23 = bitcast float** %22 to i8*
  call void @_ZdaPv(i8* %23) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i, %delete.notnull24
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i = icmp eq float* %24, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %25 = bitcast float* %24 to i8*
  call void @_ZdlPv(i8* nonnull %25) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %sampleTemp.i = alloca [1024 x i16], align 16
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %0 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i17 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i17 to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !410
  %3 = bitcast %"class.std::vector.43"* %0 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !413
  %cmp20 = icmp eq i64 %2, %4
  br i1 %cmp20, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = bitcast [1024 x i16]* %sampleTemp.i to i8*
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i.i to i8**
  %m_nDataLength.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %8 = phi %"class.std::vector.43"* [ %0, %for.body.lr.ph ], [ %85, %for.inc ]
  %conv22 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.inc ]
  %soundIdx.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %8, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !413
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %9, i64 %conv22
  %10 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %5) #24
  %11 = bitcast %"class.ILLIXR_AUDIO::Sound"* %10 to %"class.std::basic_istream"**
  %12 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %11, align 8, !tbaa !377
  %call.i = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %12, i8* nonnull %5, i64 2048)
  %amp.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body
  %indvars.iv.i13 = phi i64 [ 0, %for.body ], [ %indvars.iv.next.i16.1, %for.body.i ]
  %13 = load float, float* %amp.i, align 4, !tbaa !375
  %conv.i14 = fpext float %13 to double
  %arrayidx.i = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.i13
  %14 = load i16, i16* %arrayidx.i, align 4, !tbaa !29
  %conv3.i = sitofp i16 %14 to double
  %div.i = fdiv double %conv3.i, 3.276700e+04
  %mul.i15 = fmul double %div.i, %conv.i14
  %conv4.i = fptrunc double %mul.i15 to float
  %arrayidx6.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.i13
  store float %conv4.i, float* %arrayidx6.i, align 4, !tbaa !34
  %indvars.iv.next.i16 = or i64 %indvars.iv.i13, 1
  %15 = load float, float* %amp.i, align 4, !tbaa !375
  %conv.i14.1 = fpext float %15 to double
  %arrayidx.i.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp.i, i64 0, i64 %indvars.iv.next.i16
  %16 = load i16, i16* %arrayidx.i.1, align 2, !tbaa !29
  %conv3.i.1 = sitofp i16 %16 to double
  %div.i.1 = fdiv double %conv3.i.1, 3.276700e+04
  %mul.i15.1 = fmul double %div.i.1, %conv.i14.1
  %conv4.i.1 = fptrunc double %mul.i15.1 to float
  %arrayidx6.i.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 %indvars.iv.next.i16
  store float %conv4.i.1, float* %arrayidx6.i.1, align 4, !tbaa !34
  %indvars.iv.next.i16.1 = add nuw nsw i64 %indvars.iv.i13, 2
  %exitcond.i.1 = icmp eq i64 %indvars.iv.next.i16.1, 1024
  br i1 %exitcond.i.1, label %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit, label %for.body.i

_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit:    ; preds = %for.body.i
  %BEncoder.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 3
  %17 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder.i, align 8, !tbaa !379
  %arraydecay8.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 1, i64 0
  %BFormat.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %10, i64 0, i32 2
  %18 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !378
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %17, float* nonnull %arraydecay8.i, i32 1024, %class.CBFormat* %18)
  %19 = load %class.CBFormat*, %class.CBFormat** %BFormat.i, align 8, !tbaa !378
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %5) #24
  %cmp6 = icmp eq i32 %soundIdx.021, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %20 = load i8*, i8** %7, align 8, !tbaa !60
  %_M_start.i4.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = bitcast float** %_M_start.i4.i to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !60
  %23 = load i32, i32* %m_nDataLength.i, align 4, !tbaa !79
  %conv.i = zext i32 %23 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %mul.i, i1 false) #24
  br label %for.inc

if.else:                                          ; preds = %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
  %24 = load i32, i32* %6, align 8, !tbaa !49
  %cmp25.i = icmp eq i32 %24, 0
  br i1 %cmp25.i, label %for.inc, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %if.else
  %25 = load i32, i32* %m_nSamples.i, align 8, !tbaa !75
  %cmp323.i = icmp eq i32 %25, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %26 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %for.inc, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %27 = zext i32 %24 to i64
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !27
  %28 = zext i32 %25 to i64
  %29 = and i64 %28, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %min.iters.check = icmp ult i32 %25, 8
  %n.vec = and i64 %28, 4294967288
  %xtraiter = and i64 %32, 1
  %33 = icmp eq i64 %30, 0
  %unroll_iter = sub nuw nsw i64 %32, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %28
  %xtraiter31 = and i64 %28, 3
  %lcmp.mod32 = icmp eq i64 %xtraiter31, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %26, i64 %indvars.iv29.i
  %34 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !27
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %35 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !27
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %35, i64 %28
  %scevgep25 = getelementptr float, float* %34, i64 %28
  %bound0 = icmp ult float* %35, %scevgep25
  %bound1 = icmp ult float* %34, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %33, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %36 = getelementptr inbounds float, float* %34, i64 %index
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !415
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !415
  %40 = getelementptr inbounds float, float* %35, i64 %index
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %41, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %43, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %44 = fadd <4 x float> %wide.load, %wide.load29
  %45 = fadd <4 x float> %wide.load28, %wide.load30
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %index.next = or i64 %index, 8
  %48 = getelementptr inbounds float, float* %34, i64 %index.next
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !415
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !34, !alias.scope !415
  %52 = getelementptr inbounds float, float* %35, i64 %index.next
  %53 = bitcast float* %52 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %53, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %54 = getelementptr inbounds float, float* %52, i64 4
  %55 = bitcast float* %54 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %55, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %56 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %57 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %58 = bitcast float* %52 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %59 = bitcast float* %54 to <4 x float>*
  store <4 x float> %57, <4 x float>* %59, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !420

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %60 = getelementptr inbounds float, float* %34, i64 %index.unr
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %61, align 4, !tbaa !34, !alias.scope !415
  %62 = getelementptr inbounds float, float* %60, i64 4
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %63, align 4, !tbaa !34, !alias.scope !415
  %64 = getelementptr inbounds float, float* %35, i64 %index.unr
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %65, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %67, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %68 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %69 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %70 = bitcast float* %64 to <4 x float>*
  store <4 x float> %68, <4 x float>* %70, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !418, !noalias !415
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %72 = xor i64 %indvars.iv.i.ph, -1
  %73 = add nsw i64 %72, %28
  br i1 %lcmp.mod32, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter31, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %34, i64 %indvars.iv.i.prol
  %74 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !34
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %35, i64 %indvars.iv.i.prol
  %75 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !34
  %add.us.i.prol = fadd float %74, %75
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !34
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !421

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %76 = icmp ult i64 %73, 3
  br i1 %76, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %34, i64 %indvars.iv.i
  %77 = load float, float* %arrayidx.us.i, align 4, !tbaa !34
  %arrayidx9.us.i = getelementptr inbounds float, float* %35, i64 %indvars.iv.i
  %78 = load float, float* %arrayidx9.us.i, align 4, !tbaa !34
  %add.us.i = fadd float %77, %78
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !34
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i
  %79 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !34
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i
  %80 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !34
  %add.us.i.1 = fadd float %79, %80
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !34
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i.1
  %81 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !34
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i.1
  %82 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !34
  %add.us.i.2 = fadd float %81, %82
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !34
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %34, i64 %indvars.iv.next.i.2
  %83 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !34
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %35, i64 %indvars.iv.next.i.2
  %84 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !34
  %add.us.i.3 = fadd float %83, %84
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !34
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %28
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !422

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond23 = icmp eq i64 %indvars.iv.next30.i, %27
  br i1 %exitcond23, label %for.inc, label %for.cond2.preheader.us.i

for.inc:                                          ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %if.else, %if.then
  %inc = add i32 %soundIdx.021, 1
  %conv = zext i32 %inc to i64
  %85 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !406
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %85, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %87 = load i64, i64* %86, align 8, !tbaa !410
  %88 = bitcast %"class.std::vector.43"* %85 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !413
  %sub.ptr.sub.i = sub i64 %87, %89
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 {
entry:
  %fZoom.addr.i.i = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %head.i = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !26
  %inc.i = add nsw i32 %0, 1
  store i32 %inc.i, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !26
  %1 = bitcast %class.Orientation* %head.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv.i = sitofp i32 %inc.i to double
  %div.i = fdiv double %conv.i, 1.500000e+03
  %mul2.i = fmul double %div.i, 3.140000e+00
  %mul3.i = fmul double %mul2.i, 2.000000e+00
  %conv4.i = fptrunc double %mul3.i to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head.i, float 0.000000e+00, float 0.000000e+00, float %conv4.i)
  %rotator.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !408
  %m_orientation.i.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %2, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %1, i64 24, i1 false)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !408
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable.i = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !24
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable.i, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn.i, align 8
  call void %6(%class.CAmbisonicProcessor* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  %7 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.i, align 8, !tbaa !408
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 5
  %9 = load i8, i8* %8, align 4, !tbaa !50, !range !51
  %tobool.i = icmp eq i8 %9, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 undef)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %7, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !tbaa !45
  %cmp.i = icmp eq i32 %11, 0
  br i1 %cmp.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  %.pr.i = load i32, i32* %10, align 8, !tbaa !45
  %cmp5.i = icmp ugt i32 %.pr.i, 1
  br i1 %cmp5.i, label %if.end7.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.end7.i:                                        ; preds = %if.end3.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  %.pr19.i = load i32, i32* %10, align 8, !tbaa !45
  %cmp9.i = icmp ugt i32 %.pr19.i, 2
  br i1 %cmp9.i, label %if.then10.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %7, %class.CBFormat* nonnull %sumBF, i32 1024)
  br label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit: ; preds = %if.then10.i, %if.end7.i, %if.end3.i, %if.end.i
  %12 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !26
  %inc.i3 = add nsw i32 %12, 1
  store i32 %inc.i3, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !26
  %zoomer.i = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %13 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !409
  %div.i4 = sdiv i32 %inc.i3, 100
  %conv.i5 = sitofp i32 %div.i4 to float
  %call.i = call float @sinf(float %conv.i5) #24
  %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  store float %call.i, float* %fZoom.addr.i.i, align 4, !tbaa !34
  %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i.i, align 4, !tbaa !34
  %cmp.i.i.i = fcmp ogt float %call.i, 0x3FEFAE1480000000
  %__b.__a.i.i.i = select i1 %cmp.i.i.i, float* %ref.tmp.i.i, float* %fZoom.addr.i.i
  %14 = bitcast float* %__b.__a.i.i.i to i32*
  %15 = load i32, i32* %14, align 4, !tbaa !34
  %m_fZoom.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %13, i64 0, i32 5
  %16 = bitcast float* %m_fZoom.i.i to i32*
  store i32 %15, i32* %16, align 8, !tbaa !265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.i.0.ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.i.0.fZoom.addr.i.0..sroa_cast)
  %17 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !409
  %18 = bitcast %class.CAmbisonicZoomer* %17 to void (%class.CAmbisonicZoomer*)***
  %vtable.i6 = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %18, align 8, !tbaa !24
  %vfn.i7 = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable.i6, i64 4
  %19 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn.i7, align 8
  call void %19(%class.CAmbisonicZoomer* %17)
  %20 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.i, align 8, !tbaa !409
  %21 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8, !tbaa !49
  %cmp397.i = icmp eq i32 %22, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %20, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !27
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !27
  %23 = zext i32 %22 to i64
  %24 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !27
  %25 = add nsw i64 %23, -1
  %xtraiter = and i64 %23, 3
  %26 = icmp ult i64 %25, 3
  %unroll_iter = sub nsw i64 %23, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %26, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, 1024
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %24, i64 %indvars.iv108.i
  %27 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !34
  %28 = call float @llvm.fabs.f32(float %27) #24
  %conv17.us.i = fpext float %28 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %29 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !27
  %arrayidx45.us.i = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx45.us.i, align 4, !tbaa !34
  %31 = load float, float* %m_fZoomRed.i, align 4, !tbaa !260
  %mul46.us.i = fmul float %30, %31
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !34
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %32 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !266
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %33 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !27
  %arrayidx23.us.i = getelementptr inbounds float, float* %33, i64 %indvars.iv110.i
  %34 = load float, float* %arrayidx23.us.i, align 4, !tbaa !34
  %mul24.us.i = fmul float %32, %34
  %35 = load float, float* %m_fZoom.i, align 8, !tbaa !265
  %mul28.us.i = fmul float %27, %35
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %36 = call float @llvm.fabs.f32(float %35) #24
  %37 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !264
  %mul34.us.i = fmul float %36, %37
  %add35.us.i = fadd float %32, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !34
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %23
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %38 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !34
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %39 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !27
  %arrayidx.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv110.i
  %40 = load float, float* %arrayidx.us.i, align 4, !tbaa !34
  %mul.us.i = fmul float %38, %40
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %41 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !34
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %42 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !27
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %42, i64 %indvars.iv110.i
  %43 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !34
  %mul.us.i.1 = fmul float %41, %43
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %44 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !34
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %45 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !27
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %45, i64 %indvars.iv110.i
  %46 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !34
  %mul.us.i.2 = fmul float %44, %46
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %47 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !34
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %48 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !27
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !34
  %mul.us.i.3 = fmul float %47, %49
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %50 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !34
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %51 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !27
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %51, i64 %indvars.iv110.i
  %52 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !34
  %mul.us.i.epil = fmul float %50, %52
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !423

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, float** nocapture readonly %resultSample) local_unnamed_addr #3 align 2 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp3 = alloca float, align 4
  %ref.tmp11 = alloca float, align 4
  %ref.tmp13 = alloca float, align 4
  %tempSample0 = alloca i16, align 2
  %tempSample1 = alloca i16, align 2
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  %ref.tmp3.0..sroa_cast = bitcast float* %ref.tmp3 to i8*
  %arrayidx8 = getelementptr inbounds float*, float** %resultSample, i64 1
  %ref.tmp11.0..sroa_cast = bitcast float* %ref.tmp11 to i8*
  %ref.tmp13.0..sroa_cast = bitcast float* %ref.tmp13 to i8*
  %0 = bitcast i16* %tempSample0 to i8*
  %1 = bitcast i16* %tempSample1 to i8*
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %3 = load float*, float** %resultSample, align 8, !tbaa !27
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp, align 4, !tbaa !34
  %4 = load float, float* %arrayidx2, align 4, !tbaa !34
  %cmp.i = fcmp ogt float %4, 1.000000e+00
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %arrayidx2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp3, align 4, !tbaa !34
  %5 = load float, float* %__b.__a.i, align 4, !tbaa !34
  %cmp.i49 = fcmp olt float %5, -1.000000e+00
  %__b.__a.i50 = select i1 %cmp.i49, float* %ref.tmp3, float* %__b.__a.i
  %6 = bitcast float* %__b.__a.i50 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !34
  %8 = bitcast float* %arrayidx2 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  %9 = load float*, float** %arrayidx8, align 8, !tbaa !27
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp11, align 4, !tbaa !34
  %10 = load float, float* %arrayidx10, align 4, !tbaa !34
  %cmp.i47 = fcmp ogt float %10, 1.000000e+00
  %__b.__a.i48 = select i1 %cmp.i47, float* %ref.tmp11, float* %arrayidx10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp13, align 4, !tbaa !34
  %11 = load float, float* %__b.__a.i48, align 4, !tbaa !34
  %cmp.i45 = fcmp olt float %11, -1.000000e+00
  %__b.__a.i46 = select i1 %cmp.i45, float* %ref.tmp13, float* %__b.__a.i48
  %12 = bitcast float* %__b.__a.i46 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !34
  %14 = bitcast float* %arrayidx10 to i32*
  store i32 %13, i32* %14, align 4, !tbaa !34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24
  %15 = load float, float* %arrayidx2, align 4, !tbaa !34
  %conv = fpext float %15 to double
  %mul = fmul double %conv, 3.276700e+04
  %conv21 = fptosi double %mul to i16
  store i16 %conv21, i16* %tempSample0, align 2, !tbaa !29
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1) #24
  %16 = bitcast i32 %13 to float
  %conv25 = fpext float %16 to double
  %mul27 = fmul double %conv25, 3.276700e+04
  %conv28 = fptosi double %mul27 to i16
  store i16 %conv28, i16* %tempSample1, align 2, !tbaa !29
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !395
  %call29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %17, i8* nonnull %0, i64 2)
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !395
  %call31 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %18, i8* nonnull %1, i64 2)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD2Ev(%class.CBFormat* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i = icmp eq float** %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i:       ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i, align 8, !tbaa !60
  %tobool.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %head = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !26
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !26
  %1 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul2 = fmul double %div, 3.140000e+00
  %mul3 = fmul double %mul2, 2.000000e+00
  %conv4 = fptrunc double %mul3 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv4)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !408
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %2, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %1, i64 24, i1 false)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !408
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %6(%class.CAmbisonicProcessor* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 {
entry:
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !26
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !26
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !409
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !34
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !34
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !34
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !409
  %6 = bitcast %class.CAmbisonicZoomer* %5 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicZoomer* %5)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: norecurse uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #20 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %audio = alloca %"class.ILLIXR_AUDIO::ABAudio", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cmp = icmp slt i32 %argc, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7)
  %0 = load i8*, i8** %argv, align 8, !tbaa !27
  %tobool.i = icmp eq i8* %0, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !24
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %2 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !386
  %or.i.i.i = or i32 %4, 1
  tail call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull %2, i32 %or.i.i.i)
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

if.else.i:                                        ; preds = %if.then
  %call.i.i225 = tail call i64 @strlen(i8* nonnull %0) #24
  %call1.i226 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull %0, i64 %call.i.i225)
  br label %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit: ; preds = %if.else.i, %if.then.i
  %call1.i228 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i64 41)
  %call1.i231 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i64 26)
  %call1.i234 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9, i64 0, i64 0), i64 121)
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 1
  %5 = load i8*, i8** %arrayidx5, align 8, !tbaa !27
  %call.i = tail call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10) #24
  %conv.i = trunc i64 %call.i to i32
  %6 = bitcast %"class.ILLIXR_AUDIO::ABAudio"* %audio to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #24
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %8 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %7, %union.anon** %8, align 8, !tbaa !271
  %9 = bitcast %union.anon* %7 to i8*
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10, i1 false) #24
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !276
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 1, i64 2
  store i8 0, i8* %10, align 2, !tbaa !278
  invoke void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 2)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %if.end
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i = icmp eq i8* %11, %9
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont8
  call void @_ZdlPv(i8* %11) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont8
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %call14 = invoke i8* @_Znam(i64 16) #25
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont11
  %call16 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont15 unwind label %lpad12

invoke.cont15:                                    ; preds = %invoke.cont13
  %12 = bitcast i8* %call14 to i8**
  store i8* %call16, i8** %12, align 8, !tbaa !27
  %call19 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont18 unwind label %lpad12

invoke.cont18:                                    ; preds = %invoke.cont15
  %arrayidx20 = getelementptr inbounds i8, i8* %call14, i64 8
  %13 = bitcast i8* %arrayidx20 to i8**
  store i8* %call19, i8** %13, align 8, !tbaa !27
  %call23 = invoke i8* @_Znwm(i64 64) #25
          to label %invoke.cont22 unwind label %lpad21

invoke.cont22:                                    ; preds = %invoke.cont18
  %14 = bitcast i8* %call23 to %class.CBFormat*
  %15 = bitcast i8* %call23 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %call23, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8, !tbaa !45
  %18 = getelementptr inbounds i8, i8* %call23, i64 12
  store i8 0, i8* %18, align 4, !tbaa !48
  %19 = getelementptr inbounds i8, i8* %call23, i64 16
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8, !tbaa !49
  %21 = getelementptr inbounds i8, i8* %call23, i64 20
  store i8 0, i8* %21, align 4, !tbaa !50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !tbaa !24
  %m_nSamples.i = getelementptr inbounds i8, i8* %call23, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %call28 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %14, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont27 unwind label %lpad21

invoke.cont27:                                    ; preds = %invoke.cont22
  %call31 = invoke i8* @_Znam(i64 24) #25
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont27
  %call33 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont32 unwind label %lpad29

invoke.cont32:                                    ; preds = %invoke.cont30
  %22 = bitcast i8* %call31 to i8**
  store i8* %call33, i8** %22, align 8, !tbaa !27
  %call36 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont35 unwind label %lpad29

invoke.cont35:                                    ; preds = %invoke.cont32
  %arrayidx37 = getelementptr inbounds i8, i8* %call31, i64 8
  %23 = bitcast i8* %arrayidx37 to i8**
  store i8* %call36, i8** %23, align 8, !tbaa !27
  %call39 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont38 unwind label %lpad29

invoke.cont38:                                    ; preds = %invoke.cont35
  %arrayidx40 = getelementptr inbounds i8, i8* %call31, i64 16
  %24 = bitcast i8* %arrayidx40 to i8**
  store i8* %call39, i8** %24, align 8, !tbaa !27
  %call43 = invoke i8* @_Znam(i64 40) #25
          to label %invoke.cont42 unwind label %lpad41

invoke.cont42:                                    ; preds = %invoke.cont38
  %call45 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont44 unwind label %lpad41

invoke.cont44:                                    ; preds = %invoke.cont42
  %25 = bitcast i8* %call43 to i8**
  store i8* %call45, i8** %25, align 8, !tbaa !27
  %call48 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont47 unwind label %lpad41

invoke.cont47:                                    ; preds = %invoke.cont44
  %arrayidx49 = getelementptr inbounds i8, i8* %call43, i64 8
  %26 = bitcast i8* %arrayidx49 to i8**
  store i8* %call48, i8** %26, align 8, !tbaa !27
  %call51 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont50 unwind label %lpad41

invoke.cont50:                                    ; preds = %invoke.cont47
  %arrayidx52 = getelementptr inbounds i8, i8* %call43, i64 16
  %27 = bitcast i8* %arrayidx52 to i8**
  store i8* %call51, i8** %27, align 8, !tbaa !27
  %call54 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont53 unwind label %lpad41

invoke.cont53:                                    ; preds = %invoke.cont50
  %arrayidx55 = getelementptr inbounds i8, i8* %call43, i64 24
  %28 = bitcast i8* %arrayidx55 to i8**
  store i8* %call54, i8** %28, align 8, !tbaa !27
  %call57 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont56 unwind label %lpad41

invoke.cont56:                                    ; preds = %invoke.cont53
  %arrayidx58 = getelementptr inbounds i8, i8* %call43, i64 32
  %29 = bitcast i8* %arrayidx58 to i8**
  store i8* %call57, i8** %29, align 8, !tbaa !27
  %call61 = invoke i8* @_Znam(i64 56) #25
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %invoke.cont56
  %call63 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont62 unwind label %lpad59

invoke.cont62:                                    ; preds = %invoke.cont60
  %30 = bitcast i8* %call61 to i8**
  store i8* %call63, i8** %30, align 8, !tbaa !27
  %call66 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont65 unwind label %lpad59

invoke.cont65:                                    ; preds = %invoke.cont62
  %arrayidx67 = getelementptr inbounds i8, i8* %call61, i64 8
  %31 = bitcast i8* %arrayidx67 to i8**
  store i8* %call66, i8** %31, align 8, !tbaa !27
  %call69 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont68 unwind label %lpad59

invoke.cont68:                                    ; preds = %invoke.cont65
  %arrayidx70 = getelementptr inbounds i8, i8* %call61, i64 16
  %32 = bitcast i8* %arrayidx70 to i8**
  store i8* %call69, i8** %32, align 8, !tbaa !27
  %call72 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont71 unwind label %lpad59

invoke.cont71:                                    ; preds = %invoke.cont68
  %arrayidx73 = getelementptr inbounds i8, i8* %call61, i64 24
  %33 = bitcast i8* %arrayidx73 to i8**
  store i8* %call72, i8** %33, align 8, !tbaa !27
  %call75 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont74 unwind label %lpad59

invoke.cont74:                                    ; preds = %invoke.cont71
  %arrayidx76 = getelementptr inbounds i8, i8* %call61, i64 32
  %34 = bitcast i8* %arrayidx76 to i8**
  store i8* %call75, i8** %34, align 8, !tbaa !27
  %call78 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont77 unwind label %lpad59

invoke.cont77:                                    ; preds = %invoke.cont74
  %arrayidx79 = getelementptr inbounds i8, i8* %call61, i64 40
  %35 = bitcast i8* %arrayidx79 to i8**
  store i8* %call78, i8** %35, align 8, !tbaa !27
  %call81 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont80 unwind label %lpad59

invoke.cont80:                                    ; preds = %invoke.cont77
  %arrayidx82 = getelementptr inbounds i8, i8* %call61, i64 48
  %36 = bitcast i8* %arrayidx82 to i8**
  store i8* %call81, i8** %36, align 8, !tbaa !27
  %call83 = call noalias i8* @malloc(i64 132) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 4
  %37 = bitcast %class.CAmbisonicProcessor** %rotator to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !408
  %39 = bitcast i8* %call83 to i64*
  store i64 %38, i64* %39, align 1, !tbaa !424
  %bytes_rotator85 = getelementptr inbounds i8, i8* %call83, i64 8
  %40 = bitcast i8* %bytes_rotator85 to i64*
  store i64 200, i64* %40, align 1, !tbaa !426
  %sumBF86 = getelementptr inbounds i8, i8* %call83, i64 16
  %41 = bitcast i8* %sumBF86 to i8**
  store i8* %call23, i8** %41, align 1, !tbaa !427
  %bytes_sumBF87 = getelementptr inbounds i8, i8* %call83, i64 24
  %42 = bitcast i8* %bytes_sumBF87 to i64*
  store i64 64, i64* %42, align 1, !tbaa !428
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 5
  %43 = bitcast %class.CAmbisonicZoomer** %zoomer to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !409
  %zoomer88 = getelementptr inbounds i8, i8* %call83, i64 32
  %45 = bitcast i8* %zoomer88 to i64*
  store i64 %44, i64* %45, align 1, !tbaa !429
  %bytes_zoomer89 = getelementptr inbounds i8, i8* %call83, i64 40
  %46 = bitcast i8* %bytes_zoomer89 to i64*
  store i64 104, i64* %46, align 1, !tbaa !430
  %decoder = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 3
  %47 = bitcast %class.CAmbisonicBinauralizer** %decoder to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !407
  %decoder90 = getelementptr inbounds i8, i8* %call83, i64 48
  %49 = bitcast i8* %decoder90 to i64*
  store i64 %48, i64* %49, align 1, !tbaa !431
  %bytes_decoder91 = getelementptr inbounds i8, i8* %call83, i64 56
  %50 = bitcast i8* %bytes_decoder91 to i64*
  store i64 296, i64* %50, align 1, !tbaa !432
  %resultSample92 = getelementptr inbounds i8, i8* %call83, i64 64
  %51 = bitcast i8* %resultSample92 to i8**
  store i8* %call14, i8** %51, align 1, !tbaa !433
  %bytes_resultSample93 = getelementptr inbounds i8, i8* %call83, i64 72
  %52 = bitcast i8* %bytes_resultSample93 to i64*
  store i64 8192, i64* %52, align 1, !tbaa !434
  %nSample = getelementptr inbounds i8, i8* %call83, i64 80
  %53 = bitcast i8* %nSample to i32*
  store i32 1024, i32* %53, align 1, !tbaa !435
  %channelpart194 = getelementptr inbounds i8, i8* %call83, i64 84
  %54 = bitcast i8* %channelpart194 to i8**
  store i8* %call31, i8** %54, align 1, !tbaa !436
  %bytes_channelpart195 = getelementptr inbounds i8, i8* %call83, i64 92
  %55 = bitcast i8* %bytes_channelpart195 to i64*
  store i64 12288, i64* %55, align 1, !tbaa !437
  %channelpart296 = getelementptr inbounds i8, i8* %call83, i64 100
  %56 = bitcast i8* %channelpart296 to i8**
  store i8* %call43, i8** %56, align 1, !tbaa !438
  %bytes_channelpart297 = getelementptr inbounds i8, i8* %call83, i64 108
  %57 = bitcast i8* %bytes_channelpart297 to i64*
  store i64 20480, i64* %57, align 1, !tbaa !439
  %channelpart398 = getelementptr inbounds i8, i8* %call83, i64 116
  %58 = bitcast i8* %channelpart398 to i8**
  store i8* %call61, i8** %58, align 1, !tbaa !440
  %bytes_channelpart399 = getelementptr inbounds i8, i8* %call83, i64 124
  %59 = bitcast i8* %bytes_channelpart399 to i64*
  store i64 28672, i64* %59, align 1, !tbaa !441
  %cmp100243 = icmp sgt i32 %conv.i, 0
  %60 = inttoptr i64 %38 to i8*
  %61 = inttoptr i64 %44 to i8*
  %62 = inttoptr i64 %48 to i8*
  br i1 %cmp100243, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %invoke.cont80
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #24
  br label %return

lpad7:                                            ; preds = %if.end
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  %65 = extractvalue { i8*, i32 } %63, 1
  %66 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !273
  %cmp.i.i.i240 = icmp eq i8* %66, %9
  br i1 %cmp.i.i.i240, label %ehcleanup118, label %if.then.i.i241

if.then.i.i241:                                   ; preds = %lpad7
  call void @_ZdlPv(i8* %66) #24
  br label %ehcleanup118

lpad10:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %67 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

lpad12:                                           ; preds = %invoke.cont15, %invoke.cont13, %invoke.cont11
  %68 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

lpad21:                                           ; preds = %invoke.cont22, %invoke.cont18
  %69 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

lpad29:                                           ; preds = %invoke.cont35, %invoke.cont32, %invoke.cont30, %invoke.cont27
  %70 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

lpad41:                                           ; preds = %invoke.cont53, %invoke.cont50, %invoke.cont47, %invoke.cont44, %invoke.cont42, %invoke.cont38
  %71 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

lpad59:                                           ; preds = %invoke.cont77, %invoke.cont74, %invoke.cont71, %invoke.cont68, %invoke.cont65, %invoke.cont62, %invoke.cont60, %invoke.cont56
  %72 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup117

for.body:                                         ; preds = %for.body, %invoke.cont80
  %i.0244 = phi i32 [ %inc, %for.body ], [ 0, %invoke.cont80 ]
  call void @llvm_hpvm_track_mem(i8* %60, i64 200) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call23, i64 64) #24
  call void @llvm_hpvm_track_mem(i8* %61, i64 104) #24
  call void @llvm_hpvm_track_mem(i8* %62, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call14, i64 8192) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call31, i64 12288) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call43, i64 20480) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call61, i64 28672) #24
  %graphaudioDecoding_cloned = call i8* @llvm_hpvm_cpu_launch(i8* (i8*)* @LaunchDataflowGraph, i8* %call83)
  call void @llvm_hpvm_cpu_wait(i8* %graphaudioDecoding_cloned)
  call void @llvm_hpvm_request_mem(i8* %60, i64 200) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call23, i64 64) #24
  call void @llvm_hpvm_request_mem(i8* %61, i64 104) #24
  call void @llvm_hpvm_request_mem(i8* %62, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call14, i64 8192) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call31, i64 12288) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call43, i64 20480) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call61, i64 28672) #24
  call void @llvm_hpvm_untrack_mem(i8* %60) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call23) #24
  call void @llvm_hpvm_untrack_mem(i8* %61) #24
  call void @llvm_hpvm_untrack_mem(i8* %62) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call14) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call31) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call43) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call61) #24
  %inc = add nuw nsw i32 %i.0244, 1
  %exitcond = icmp eq i32 %inc, %conv.i
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

ehcleanup117:                                     ; preds = %lpad59, %lpad41, %lpad29, %lpad21, %lpad12, %lpad10
  %.sink245 = phi { i8*, i32 } [ %68, %lpad12 ], [ %70, %lpad29 ], [ %72, %lpad59 ], [ %71, %lpad41 ], [ %69, %lpad21 ], [ %67, %lpad10 ]
  %73 = extractvalue { i8*, i32 } %.sink245, 0
  %74 = extractvalue { i8*, i32 } %.sink245, 1
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  br label %ehcleanup118

ehcleanup118:                                     ; preds = %ehcleanup117, %if.then.i.i241, %lpad7
  %ehselector.slot.6 = phi i32 [ %74, %ehcleanup117 ], [ %65, %lpad7 ], [ %65, %if.then.i.i241 ]
  %exn.slot.6 = phi i8* [ %73, %ehcleanup117 ], [ %64, %lpad7 ], [ %64, %if.then.i.i241 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.6, 0
  %lpad.val120 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.6, 1
  resume { i8*, i32 } %lpad.val120

return:                                           ; preds = %for.cond.cleanup, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
  %retval.0 = phi i32 [ 1, %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @llvm_hpvm_track_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_request_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_untrack_mem(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8MIT_HRTFD0Ev(%class.MIT_HRTF* %this) unnamed_addr #19 comdat align 2 {
entry:
  %0 = bitcast %class.MIT_HRTF* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD0Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @llvm.trap() #28
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !60
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2, align 8, !tbaa !60
  %tobool.i.i.i3 = icmp eq float* %3, null
  br i1 %tobool.i.i.i3, label %_ZNSt6vectorIfSaIfEED2Ev.exit5, label %if.then.i.i.i4

if.then.i.i.i4:                                   ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit5

_ZNSt6vectorIfSaIfEED2Ev.exit5:                   ; preds = %if.then.i.i.i4, %_ZNSt6vectorIfSaIfEED2Ev.exit
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD0Ev(%class.CAmbisonicSource* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !60
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %5 = bitcast %class.CAmbisonicSource* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD0Ev(%class.CBFormat* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i.i = icmp eq float** %1, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i:     ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %5 = bitcast %class.CBFormat* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i = icmp eq float* %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i

_ZNKSt14default_deleteIA_fEclEPf.exit.i:          ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i, %entry
  store float* null, float** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %_M_head_impl.i.i.i.i.i2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_head_impl.i.i.i.i.i2, align 8, !tbaa !27
  %cmp.i3 = icmp eq float* %3, null
  br i1 %cmp.i3, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i4

_ZNKSt14default_deleteIA_fEclEPf.exit.i4:         ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i4, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  store float* null, float** %_M_head_impl.i.i.i.i.i2, align 8, !tbaa !27
  %_M_head_impl.i.i.i.i.i6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i6, align 8, !tbaa !27
  %cmp.i7 = icmp eq float* %5, null
  br i1 %cmp.i7, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i8

_ZNKSt14default_deleteIA_fEclEPf.exit.i8:         ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdaPv(i8* %6) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i8, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  store float* null, float** %_M_head_impl.i.i.i.i.i6, align 8, !tbaa !27
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !24
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %8 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %8, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  %9 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 -1, i32 0, i32 3, i32 2
  %10 = bitcast float* %9 to i8*
  %11 = bitcast float* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %arraydestroy.isempty.i = icmp eq i64 %12, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %12
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %13 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !24
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %14 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i.i = icmp eq float* %14, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %15 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i.i = icmp eq float* %16, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %17 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* nonnull %17) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %8
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %10) #26
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD0Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) #24
  %0 = bitcast %class.CAmbisonicZoomer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #19 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !24
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !60
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.1, align 8, !tbaa !60
  %tobool.i.i.i.1 = icmp eq float* %3, null
  br i1 %tobool.i.i.i.1, label %_ZNSt6vectorIfSaIfEED2Ev.exit.1, label %if.then.i.i.i.1

if.then.i.i.i11:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1
  %4 = bitcast float* %45 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit12

_ZNSt6vectorIfSaIfEED2Ev.exit12:                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1, %if.then.i.i.i11
  %_M_start.i.i13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i13, align 8, !tbaa !60
  %tobool.i.i.i14 = icmp eq float* %5, null
  br i1 %tobool.i.i.i14, label %_ZNSt6vectorIfSaIfEED2Ev.exit16, label %if.then.i.i.i15

if.then.i.i.i15:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit16

_ZNSt6vectorIfSaIfEED2Ev.exit16:                  ; preds = %if.then.i.i.i15, %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %_M_start.i.i17 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i17, align 8, !tbaa !60
  %tobool.i.i.i18 = icmp eq float* %7, null
  br i1 %tobool.i.i.i18, label %_ZNSt6vectorIfSaIfEED2Ev.exit20, label %if.then.i.i.i19

if.then.i.i.i19:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit20

_ZNSt6vectorIfSaIfEED2Ev.exit20:                  ; preds = %if.then.i.i.i19, %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i = icmp eq %struct.kiss_fft_cpx* %9, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit20
  %10 = bitcast %struct.kiss_fft_cpx* %9 to i8*
  tail call void @_ZdaPv(i8* %10) #26
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i, %_ZNSt6vectorIfSaIfEED2Ev.exit20
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %11 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i, align 8, !tbaa !323
  %_M_finish.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 1
  %12 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish.i, align 8, !tbaa !374
  %cmp3.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %11, %12
  br i1 %cmp3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %__first.addr.04.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i ], [ %11, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %13, null
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i: ; preds = %for.body.i.i.i.i
  %14 = bitcast %struct.kiss_fft_cpx* %13 to i8*
  tail call void @_ZdaPv(i8* %14) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i, %for.body.i.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i, %12
  br i1 %cmp.i.i.i.i, label %invoke.cont.loopexit.i, label %for.body.i.i.i.i

invoke.cont.loopexit.i:                           ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i, align 8, !tbaa !323
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.loopexit.i, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
  %15 = phi %"class.std::unique_ptr.31"* [ %.pre.i, %invoke.cont.loopexit.i ], [ %11, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit ]
  %tobool.i.i.i21 = icmp eq %"class.std::unique_ptr.31"* %15, null
  br i1 %tobool.i.i.i21, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit, label %if.then.i.i.i22

if.then.i.i.i22:                                  ; preds = %invoke.cont.i
  %16 = bitcast %"class.std::unique_ptr.31"* %15 to i8*
  tail call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit: ; preds = %if.then.i.i.i22, %invoke.cont.i
  %_M_start.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i.1, align 8, !tbaa !323
  %_M_finish.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 1
  %18 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish.i.1, align 8, !tbaa !374
  %cmp3.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.31"* %17, %18
  br i1 %cmp3.i.i.i.i.1, label %invoke.cont.i.1, label %for.body.i.i.i.i.1

if.then.i:                                        ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
  %19 = bitcast %struct.kiss_fftr_state* %43 to i8*
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  invoke void %20(i8* nonnull %19)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit unwind label %lpad.i

lpad.i:                                           ; preds = %if.then.i
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  tail call void @__clang_call_terminate(i8* %22) #28
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit: ; preds = %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, %if.then.i
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i23, align 8, !tbaa !27
  %_M_head_impl.i.i.i.i.i25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %23 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i25, align 8, !tbaa !27
  %cmp.i26 = icmp eq %struct.kiss_fftr_state* %23, null
  br i1 %cmp.i26, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30, label %if.then.i28

if.then.i28:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  %24 = bitcast %struct.kiss_fftr_state* %23 to i8*
  %_M_head_impl.i.i.i.i.i.i27 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i27, align 8, !tbaa !27
  invoke void %25(i8* nonnull %24)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30 unwind label %lpad.i29

lpad.i29:                                         ; preds = %if.then.i28
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  tail call void @__clang_call_terminate(i8* %27) #28
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30: ; preds = %if.then.i28, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i25, align 8, !tbaa !27
  %28 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !24
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %29 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !240
  %tobool.i = icmp eq %class.CAmbisonicSpeaker* %29, null
  br i1 %tobool.i, label %_ZN17CAmbisonicDecoderD2Ev.exit, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30
  %30 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %29, i64 -1, i32 0, i32 3, i32 2
  %31 = bitcast float* %30 to i8*
  %32 = bitcast float* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %arraydestroy.isempty.i = icmp eq i64 %33, 0
  br i1 %arraydestroy.isempty.i, label %arraydestroy.done3.i, label %arraydestroy.body.preheader.i

arraydestroy.body.preheader.i:                    ; preds = %delete.notnull.i
  %delete.end.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %29, i64 %33
  br label %arraydestroy.body.i

arraydestroy.body.i:                              ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %arraydestroy.body.preheader.i
  %arraydestroy.elementPast.i = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element.i, %_ZN17CAmbisonicSpeakerD2Ev.exit.i ], [ %delete.end.i, %arraydestroy.body.preheader.i ]
  %arraydestroy.element.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1
  %34 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.element.i, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8, !tbaa !24
  %_M_start.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 2, i32 0, i32 0, i32 0
  %35 = load float*, float** %_M_start.i.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i.i.i.i = icmp eq float* %35, null
  br i1 %tobool.i.i.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %arraydestroy.body.i
  %36 = bitcast float* %35 to i8*
  tail call void @_ZdlPv(i8* nonnull %36) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i:              ; preds = %if.then.i.i.i.i.i.i, %arraydestroy.body.i
  %_M_start.i.i2.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast.i, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load float*, float** %_M_start.i.i2.i.i.i, align 8, !tbaa !60
  %tobool.i.i.i3.i.i.i = icmp eq float* %37, null
  br i1 %tobool.i.i.i3.i.i.i, label %_ZN17CAmbisonicSpeakerD2Ev.exit.i, label %if.then.i.i.i4.i.i.i

if.then.i.i.i4.i.i.i:                             ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %38 = bitcast float* %37 to i8*
  tail call void @_ZdlPv(i8* nonnull %38) #24
  br label %_ZN17CAmbisonicSpeakerD2Ev.exit.i

_ZN17CAmbisonicSpeakerD2Ev.exit.i:                ; preds = %if.then.i.i.i4.i.i.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
  %arraydestroy.done.i = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element.i, %29
  br i1 %arraydestroy.done.i, label %arraydestroy.done3.i, label %arraydestroy.body.i

arraydestroy.done3.i:                             ; preds = %_ZN17CAmbisonicSpeakerD2Ev.exit.i, %delete.notnull.i
  tail call void @_ZdaPv(i8* nonnull %31) #26
  br label %_ZN17CAmbisonicDecoderD2Ev.exit

_ZN17CAmbisonicDecoderD2Ev.exit:                  ; preds = %arraydestroy.done3.i, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30
  ret void

for.body.i.i.i.i.1:                               ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %__first.addr.04.i.i.i.i.1 = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.1, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1 ], [ %17, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !27
  %cmp.i.i.i.i.i.i.1 = icmp eq %struct.kiss_fft_cpx* %39, null
  br i1 %cmp.i.i.i.i.i.i.1, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1: ; preds = %for.body.i.i.i.i.1
  %40 = bitcast %struct.kiss_fft_cpx* %39 to i8*
  tail call void @_ZdaPv(i8* %40) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1, %for.body.i.i.i.i.1
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i.i.1, align 8, !tbaa !27
  %incdec.ptr.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i.i.1, i64 1
  %cmp.i.i.i.i.1 = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.1, %18
  br i1 %cmp.i.i.i.i.1, label %invoke.cont.loopexit.i.1, label %for.body.i.i.i.i.1

invoke.cont.loopexit.i.1:                         ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
  %.pre.i.1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i.1, align 8, !tbaa !323
  br label %invoke.cont.i.1

invoke.cont.i.1:                                  ; preds = %invoke.cont.loopexit.i.1, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
  %41 = phi %"class.std::unique_ptr.31"* [ %.pre.i.1, %invoke.cont.loopexit.i.1 ], [ %17, %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit ]
  %tobool.i.i.i21.1 = icmp eq %"class.std::unique_ptr.31"* %41, null
  br i1 %tobool.i.i.i21.1, label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1, label %if.then.i.i.i22.1

if.then.i.i.i22.1:                                ; preds = %invoke.cont.i.1
  %42 = bitcast %"class.std::unique_ptr.31"* %41 to i8*
  tail call void @_ZdlPv(i8* nonnull %42) #24
  br label %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1

_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1: ; preds = %if.then.i.i.i22.1, %invoke.cont.i.1
  %_M_head_impl.i.i.i.i.i23 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %43 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i23, align 8, !tbaa !27
  %cmp.i24 = icmp eq %struct.kiss_fftr_state* %43, null
  br i1 %cmp.i24, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit, label %if.then.i

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %44 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %44) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.1

_ZNSt6vectorIfSaIfEED2Ev.exit.1:                  ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIfSaIfEED2Ev.exit
  %_M_start.i.i9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 0
  %45 = load float*, float** %_M_start.i.i9, align 8, !tbaa !60
  %tobool.i.i.i10 = icmp eq float* %45, null
  br i1 %tobool.i.i.i10, label %_ZNSt6vectorIfSaIfEED2Ev.exit12, label %if.then.i.i.i11
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD0Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #19 comdat align 2 {
entry:
  tail call void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) #24
  %0 = bitcast %class.CAmbisonicBinauralizer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN4HRTFD2Ev(%class.HRTF* %this) unnamed_addr #7 comdat align 2 {
entry:
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #21

; Function Attrs: nofree nounwind
declare double @atan2(double, double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @acos(double) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #22

declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = ptrtoint float* %__position.coerce to i64
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end102, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast float** %_M_end_of_storage to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !442
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !57
  %sub.ptr.sub = sub i64 %2, %4
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp3, label %if.else44, label %if.then4

if.then4:                                         ; preds = %if.then
  %6 = bitcast float* %__x to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !34
  %sub.ptr.sub.i = sub i64 %4, %0
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp9 = icmp ugt i64 %sub.ptr.div.i, %__n
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.then4
  %idx.neg = sub i64 0, %__n
  %add.ptr = getelementptr inbounds float, float* %5, i64 %idx.neg
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint float* %add.ptr to i64
  %diff.neg = shl i64 %__n, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %diff.neg, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %if.then10
  %8 = inttoptr i64 %4 to i8*
  %9 = bitcast float* %add.ptr to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 %diff.neg, i1 false) #24
  %.pre213 = load float*, float** %_M_finish, align 8, !tbaa !57
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit: ; preds = %if.then.i.i.i.i.i.i.i.i, %if.then10
  %10 = phi float* [ %5, %if.then10 ], [ %.pre213, %if.then.i.i.i.i.i.i.i.i ]
  %add.ptr21 = getelementptr inbounds float, float* %10, i64 %__n
  store float* %add.ptr21, float** %_M_finish, align 8, !tbaa !57
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i, %0
  %tobool.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %tobool.i.i.i.i, label %for.body.i.i196.preheader, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %idx.neg.i.i.i.i = sub nsw i64 0, %sub.ptr.div.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr inbounds float, float* %5, i64 %idx.neg.i.i.i.i
  %11 = bitcast float* %add.ptr.i.i.i.i to i8*
  %12 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i, i1 false) #24
  br label %for.body.i.i196.preheader

for.body.i.i196.preheader:                        ; preds = %if.then.i.i.i.i, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %add.ptr28 = getelementptr inbounds float, float* %__position.coerce, i64 %__n
  %13 = shl nsw i64 %__n, 2
  %14 = add i64 %13, -4
  %15 = lshr exact i64 %14, 2
  %16 = add nuw nsw i64 %15, 1
  %min.iters.check247 = icmp ult i64 %16, 8
  br i1 %min.iters.check247, label %for.body.i.i196.preheader287, label %vector.ph248

vector.ph248:                                     ; preds = %for.body.i.i196.preheader
  %n.vec250 = and i64 %16, 9223372036854775800
  %ind.end254 = getelementptr float, float* %__position.coerce, i64 %n.vec250
  %broadcast.splatinsert258 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat259 = shufflevector <4 x i32> %broadcast.splatinsert258, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert260 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat261 = shufflevector <4 x i32> %broadcast.splatinsert260, <4 x i32> undef, <4 x i32> zeroinitializer
  %17 = add nsw i64 %n.vec250, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %xtraiter291 = and i64 %19, 7
  %20 = icmp ult i64 %17, 56
  br i1 %20, label %middle.block245.unr-lcssa, label %vector.ph248.new

vector.ph248.new:                                 ; preds = %vector.ph248
  %unroll_iter294 = sub nsw i64 %19, %xtraiter291
  br label %vector.body244

vector.body244:                                   ; preds = %vector.body244, %vector.ph248.new
  %index251 = phi i64 [ 0, %vector.ph248.new ], [ %index.next252.7, %vector.body244 ]
  %niter295 = phi i64 [ %unroll_iter294, %vector.ph248.new ], [ %niter295.nsub.7, %vector.body244 ]
  %next.gep256 = getelementptr float, float* %__position.coerce, i64 %index251
  %21 = bitcast float* %next.gep256 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %21, align 4, !tbaa !34
  %22 = getelementptr float, float* %next.gep256, i64 4
  %23 = bitcast float* %22 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %23, align 4, !tbaa !34
  %index.next252 = or i64 %index251, 8
  %next.gep256.1 = getelementptr float, float* %__position.coerce, i64 %index.next252
  %24 = bitcast float* %next.gep256.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %24, align 4, !tbaa !34
  %25 = getelementptr float, float* %next.gep256.1, i64 4
  %26 = bitcast float* %25 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %26, align 4, !tbaa !34
  %index.next252.1 = or i64 %index251, 16
  %next.gep256.2 = getelementptr float, float* %__position.coerce, i64 %index.next252.1
  %27 = bitcast float* %next.gep256.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %27, align 4, !tbaa !34
  %28 = getelementptr float, float* %next.gep256.2, i64 4
  %29 = bitcast float* %28 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %29, align 4, !tbaa !34
  %index.next252.2 = or i64 %index251, 24
  %next.gep256.3 = getelementptr float, float* %__position.coerce, i64 %index.next252.2
  %30 = bitcast float* %next.gep256.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %30, align 4, !tbaa !34
  %31 = getelementptr float, float* %next.gep256.3, i64 4
  %32 = bitcast float* %31 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %32, align 4, !tbaa !34
  %index.next252.3 = or i64 %index251, 32
  %next.gep256.4 = getelementptr float, float* %__position.coerce, i64 %index.next252.3
  %33 = bitcast float* %next.gep256.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %33, align 4, !tbaa !34
  %34 = getelementptr float, float* %next.gep256.4, i64 4
  %35 = bitcast float* %34 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %35, align 4, !tbaa !34
  %index.next252.4 = or i64 %index251, 40
  %next.gep256.5 = getelementptr float, float* %__position.coerce, i64 %index.next252.4
  %36 = bitcast float* %next.gep256.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %36, align 4, !tbaa !34
  %37 = getelementptr float, float* %next.gep256.5, i64 4
  %38 = bitcast float* %37 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %38, align 4, !tbaa !34
  %index.next252.5 = or i64 %index251, 48
  %next.gep256.6 = getelementptr float, float* %__position.coerce, i64 %index.next252.5
  %39 = bitcast float* %next.gep256.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %39, align 4, !tbaa !34
  %40 = getelementptr float, float* %next.gep256.6, i64 4
  %41 = bitcast float* %40 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %41, align 4, !tbaa !34
  %index.next252.6 = or i64 %index251, 56
  %next.gep256.7 = getelementptr float, float* %__position.coerce, i64 %index.next252.6
  %42 = bitcast float* %next.gep256.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %42, align 4, !tbaa !34
  %43 = getelementptr float, float* %next.gep256.7, i64 4
  %44 = bitcast float* %43 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %44, align 4, !tbaa !34
  %index.next252.7 = add i64 %index251, 64
  %niter295.nsub.7 = add i64 %niter295, -8
  %niter295.ncmp.7 = icmp eq i64 %niter295.nsub.7, 0
  br i1 %niter295.ncmp.7, label %middle.block245.unr-lcssa, label %vector.body244, !llvm.loop !443

middle.block245.unr-lcssa:                        ; preds = %vector.body244, %vector.ph248
  %index251.unr = phi i64 [ 0, %vector.ph248 ], [ %index.next252.7, %vector.body244 ]
  %lcmp.mod293 = icmp eq i64 %xtraiter291, 0
  br i1 %lcmp.mod293, label %middle.block245, label %vector.body244.epil

vector.body244.epil:                              ; preds = %vector.body244.epil, %middle.block245.unr-lcssa
  %index251.epil = phi i64 [ %index.next252.epil, %vector.body244.epil ], [ %index251.unr, %middle.block245.unr-lcssa ]
  %epil.iter292 = phi i64 [ %epil.iter292.sub, %vector.body244.epil ], [ %xtraiter291, %middle.block245.unr-lcssa ]
  %next.gep256.epil = getelementptr float, float* %__position.coerce, i64 %index251.epil
  %45 = bitcast float* %next.gep256.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat259, <4 x i32>* %45, align 4, !tbaa !34
  %46 = getelementptr float, float* %next.gep256.epil, i64 4
  %47 = bitcast float* %46 to <4 x i32>*
  store <4 x i32> %broadcast.splat261, <4 x i32>* %47, align 4, !tbaa !34
  %index.next252.epil = add i64 %index251.epil, 8
  %epil.iter292.sub = add i64 %epil.iter292, -1
  %epil.iter292.cmp = icmp eq i64 %epil.iter292.sub, 0
  br i1 %epil.iter292.cmp, label %middle.block245, label %vector.body244.epil, !llvm.loop !444

middle.block245:                                  ; preds = %vector.body244.epil, %middle.block245.unr-lcssa
  %cmp.n255 = icmp eq i64 %16, %n.vec250
  br i1 %cmp.n255, label %if.end102, label %for.body.i.i196.preheader287

for.body.i.i196.preheader287:                     ; preds = %middle.block245, %for.body.i.i196.preheader
  %__first.addr.05.i.i193.ph = phi float* [ %__position.coerce, %for.body.i.i196.preheader ], [ %ind.end254, %middle.block245 ]
  br label %for.body.i.i196

for.body.i.i196:                                  ; preds = %for.body.i.i196, %for.body.i.i196.preheader287
  %__first.addr.05.i.i193 = phi float* [ %incdec.ptr.i.i194, %for.body.i.i196 ], [ %__first.addr.05.i.i193.ph, %for.body.i.i196.preheader287 ]
  %48 = bitcast float* %__first.addr.05.i.i193 to i32*
  store i32 %7, i32* %48, align 4, !tbaa !34
  %incdec.ptr.i.i194 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 1
  %cmp.i.i195 = icmp eq float* %incdec.ptr.i.i194, %add.ptr28
  br i1 %cmp.i.i195, label %if.end102, label %for.body.i.i196, !llvm.loop !445

if.else:                                          ; preds = %if.then4
  %sub = sub i64 %__n, %sub.ptr.div.i
  %cmp6.i.i.i.i.i183 = icmp eq i64 %sub, 0
  br i1 %cmp6.i.i.i.i.i183, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189.preheader

for.body.i.i.i.i.i189.preheader:                  ; preds = %if.else
  %min.iters.check = icmp ult i64 %sub, 8
  br i1 %min.iters.check, label %for.body.i.i.i.i.i189.preheader290, label %vector.ph

vector.ph:                                        ; preds = %for.body.i.i.i.i.i189.preheader
  %n.vec = and i64 %sub, -8
  %ind.end = sub i64 %sub, %n.vec
  %ind.end217 = getelementptr float, float* %5, i64 %n.vec
  %broadcast.splatinsert220 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat221 = shufflevector <4 x i32> %broadcast.splatinsert220, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert222 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat223 = shufflevector <4 x i32> %broadcast.splatinsert222, <4 x i32> undef, <4 x i32> zeroinitializer
  %49 = add i64 %n.vec, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %xtraiter301 = and i64 %51, 7
  %52 = icmp ult i64 %49, 56
  br i1 %52, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter304 = sub nsw i64 %51, %xtraiter301
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter305 = phi i64 [ %unroll_iter304, %vector.ph.new ], [ %niter305.nsub.7, %vector.body ]
  %next.gep = getelementptr float, float* %5, i64 %index
  %53 = bitcast float* %next.gep to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %53, align 4, !tbaa !34
  %54 = getelementptr float, float* %next.gep, i64 4
  %55 = bitcast float* %54 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %55, align 4, !tbaa !34
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %5, i64 %index.next
  %56 = bitcast float* %next.gep.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %56, align 4, !tbaa !34
  %57 = getelementptr float, float* %next.gep.1, i64 4
  %58 = bitcast float* %57 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %58, align 4, !tbaa !34
  %index.next.1 = or i64 %index, 16
  %next.gep.2 = getelementptr float, float* %5, i64 %index.next.1
  %59 = bitcast float* %next.gep.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %59, align 4, !tbaa !34
  %60 = getelementptr float, float* %next.gep.2, i64 4
  %61 = bitcast float* %60 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %61, align 4, !tbaa !34
  %index.next.2 = or i64 %index, 24
  %next.gep.3 = getelementptr float, float* %5, i64 %index.next.2
  %62 = bitcast float* %next.gep.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %62, align 4, !tbaa !34
  %63 = getelementptr float, float* %next.gep.3, i64 4
  %64 = bitcast float* %63 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %64, align 4, !tbaa !34
  %index.next.3 = or i64 %index, 32
  %next.gep.4 = getelementptr float, float* %5, i64 %index.next.3
  %65 = bitcast float* %next.gep.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %65, align 4, !tbaa !34
  %66 = getelementptr float, float* %next.gep.4, i64 4
  %67 = bitcast float* %66 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %67, align 4, !tbaa !34
  %index.next.4 = or i64 %index, 40
  %next.gep.5 = getelementptr float, float* %5, i64 %index.next.4
  %68 = bitcast float* %next.gep.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %68, align 4, !tbaa !34
  %69 = getelementptr float, float* %next.gep.5, i64 4
  %70 = bitcast float* %69 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %70, align 4, !tbaa !34
  %index.next.5 = or i64 %index, 48
  %next.gep.6 = getelementptr float, float* %5, i64 %index.next.5
  %71 = bitcast float* %next.gep.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %71, align 4, !tbaa !34
  %72 = getelementptr float, float* %next.gep.6, i64 4
  %73 = bitcast float* %72 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %73, align 4, !tbaa !34
  %index.next.6 = or i64 %index, 56
  %next.gep.7 = getelementptr float, float* %5, i64 %index.next.6
  %74 = bitcast float* %next.gep.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %74, align 4, !tbaa !34
  %75 = getelementptr float, float* %next.gep.7, i64 4
  %76 = bitcast float* %75 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %76, align 4, !tbaa !34
  %index.next.7 = add i64 %index, 64
  %niter305.nsub.7 = add i64 %niter305, -8
  %niter305.ncmp.7 = icmp eq i64 %niter305.nsub.7, 0
  br i1 %niter305.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !446

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod303 = icmp eq i64 %xtraiter301, 0
  br i1 %lcmp.mod303, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %epil.iter302 = phi i64 [ %epil.iter302.sub, %vector.body.epil ], [ %xtraiter301, %middle.block.unr-lcssa ]
  %next.gep.epil = getelementptr float, float* %5, i64 %index.epil
  %77 = bitcast float* %next.gep.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %77, align 4, !tbaa !34
  %78 = getelementptr float, float* %next.gep.epil, i64 4
  %79 = bitcast float* %78 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %79, align 4, !tbaa !34
  %index.next.epil = add i64 %index.epil, 8
  %epil.iter302.sub = add i64 %epil.iter302, -1
  %epil.iter302.cmp = icmp eq i64 %epil.iter302.sub, 0
  br i1 %epil.iter302.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !447

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %sub, %n.vec
  br i1 %cmp.n, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189.preheader290

for.body.i.i.i.i.i189.preheader290:               ; preds = %middle.block, %for.body.i.i.i.i.i189.preheader
  %__niter.08.i.i.i.i.i184.ph = phi i64 [ %sub, %for.body.i.i.i.i.i189.preheader ], [ %ind.end, %middle.block ]
  %__first.addr.07.i.i.i.i.i185.ph = phi float* [ %5, %for.body.i.i.i.i.i189.preheader ], [ %ind.end217, %middle.block ]
  br label %for.body.i.i.i.i.i189

for.body.i.i.i.i.i189:                            ; preds = %for.body.i.i.i.i.i189, %for.body.i.i.i.i.i189.preheader290
  %__niter.08.i.i.i.i.i184 = phi i64 [ %dec.i.i.i.i.i186, %for.body.i.i.i.i.i189 ], [ %__niter.08.i.i.i.i.i184.ph, %for.body.i.i.i.i.i189.preheader290 ]
  %__first.addr.07.i.i.i.i.i185 = phi float* [ %incdec.ptr.i.i.i.i.i187, %for.body.i.i.i.i.i189 ], [ %__first.addr.07.i.i.i.i.i185.ph, %for.body.i.i.i.i.i189.preheader290 ]
  %80 = bitcast float* %__first.addr.07.i.i.i.i.i185 to i32*
  store i32 %7, i32* %80, align 4, !tbaa !34
  %dec.i.i.i.i.i186 = add i64 %__niter.08.i.i.i.i.i184, -1
  %incdec.ptr.i.i.i.i.i187 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i185, i64 1
  %cmp.i.i.i.i.i188 = icmp eq i64 %dec.i.i.i.i.i186, 0
  br i1 %cmp.i.i.i.i.i188, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189, !llvm.loop !448

_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191: ; preds = %for.body.i.i.i.i.i189, %middle.block, %if.else
  %__first.addr.0.lcssa.i.i.i.i.i190 = phi float* [ %5, %if.else ], [ %ind.end217, %middle.block ], [ %incdec.ptr.i.i.i.i.i187, %for.body.i.i.i.i.i189 ]
  store float* %__first.addr.0.lcssa.i.i.i.i.i190, float** %_M_finish, align 8, !tbaa !57
  %tobool.i.i.i.i.i.i.i.i178 = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i178, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181, label %if.then.i.i.i.i.i.i.i.i179

if.then.i.i.i.i.i.i.i.i179:                       ; preds = %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
  %81 = bitcast float* %__first.addr.0.lcssa.i.i.i.i.i190 to i8*
  %82 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %sub.ptr.sub.i, i1 false) #24
  %.pre = load float*, float** %_M_finish, align 8, !tbaa !57
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181: ; preds = %if.then.i.i.i.i.i.i.i.i179, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
  %83 = phi float* [ %__first.addr.0.lcssa.i.i.i.i.i190, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191 ], [ %.pre, %if.then.i.i.i.i.i.i.i.i179 ]
  %add.ptr42 = getelementptr inbounds float, float* %83, i64 %sub.ptr.div.i
  store float* %add.ptr42, float** %_M_finish, align 8, !tbaa !57
  %cmp4.i.i = icmp eq float* %5, %__position.coerce
  br i1 %cmp4.i.i, label %if.end102, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
  %scevgep = getelementptr float, float* %5, i64 -1
  %84 = ptrtoint float* %scevgep to i64
  %85 = sub i64 %84, %0
  %86 = lshr i64 %85, 2
  %87 = add nuw nsw i64 %86, 1
  %min.iters.check229 = icmp ult i64 %87, 8
  br i1 %min.iters.check229, label %for.body.i.i.preheader288, label %vector.ph230

vector.ph230:                                     ; preds = %for.body.i.i.preheader
  %n.vec232 = and i64 %87, 9223372036854775800
  %ind.end236 = getelementptr float, float* %__position.coerce, i64 %n.vec232
  %broadcast.splatinsert240 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat241 = shufflevector <4 x i32> %broadcast.splatinsert240, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert242 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat243 = shufflevector <4 x i32> %broadcast.splatinsert242, <4 x i32> undef, <4 x i32> zeroinitializer
  %88 = add nsw i64 %n.vec232, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %xtraiter296 = and i64 %90, 7
  %91 = icmp ult i64 %88, 56
  br i1 %91, label %middle.block225.unr-lcssa, label %vector.ph230.new

vector.ph230.new:                                 ; preds = %vector.ph230
  %unroll_iter299 = sub nsw i64 %90, %xtraiter296
  br label %vector.body224

vector.body224:                                   ; preds = %vector.body224, %vector.ph230.new
  %index233 = phi i64 [ 0, %vector.ph230.new ], [ %index.next234.7, %vector.body224 ]
  %niter300 = phi i64 [ %unroll_iter299, %vector.ph230.new ], [ %niter300.nsub.7, %vector.body224 ]
  %next.gep238 = getelementptr float, float* %__position.coerce, i64 %index233
  %92 = bitcast float* %next.gep238 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %92, align 4, !tbaa !34
  %93 = getelementptr float, float* %next.gep238, i64 4
  %94 = bitcast float* %93 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %94, align 4, !tbaa !34
  %index.next234 = or i64 %index233, 8
  %next.gep238.1 = getelementptr float, float* %__position.coerce, i64 %index.next234
  %95 = bitcast float* %next.gep238.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %95, align 4, !tbaa !34
  %96 = getelementptr float, float* %next.gep238.1, i64 4
  %97 = bitcast float* %96 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %97, align 4, !tbaa !34
  %index.next234.1 = or i64 %index233, 16
  %next.gep238.2 = getelementptr float, float* %__position.coerce, i64 %index.next234.1
  %98 = bitcast float* %next.gep238.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %98, align 4, !tbaa !34
  %99 = getelementptr float, float* %next.gep238.2, i64 4
  %100 = bitcast float* %99 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %100, align 4, !tbaa !34
  %index.next234.2 = or i64 %index233, 24
  %next.gep238.3 = getelementptr float, float* %__position.coerce, i64 %index.next234.2
  %101 = bitcast float* %next.gep238.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %101, align 4, !tbaa !34
  %102 = getelementptr float, float* %next.gep238.3, i64 4
  %103 = bitcast float* %102 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %103, align 4, !tbaa !34
  %index.next234.3 = or i64 %index233, 32
  %next.gep238.4 = getelementptr float, float* %__position.coerce, i64 %index.next234.3
  %104 = bitcast float* %next.gep238.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %104, align 4, !tbaa !34
  %105 = getelementptr float, float* %next.gep238.4, i64 4
  %106 = bitcast float* %105 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %106, align 4, !tbaa !34
  %index.next234.4 = or i64 %index233, 40
  %next.gep238.5 = getelementptr float, float* %__position.coerce, i64 %index.next234.4
  %107 = bitcast float* %next.gep238.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %107, align 4, !tbaa !34
  %108 = getelementptr float, float* %next.gep238.5, i64 4
  %109 = bitcast float* %108 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %109, align 4, !tbaa !34
  %index.next234.5 = or i64 %index233, 48
  %next.gep238.6 = getelementptr float, float* %__position.coerce, i64 %index.next234.5
  %110 = bitcast float* %next.gep238.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %110, align 4, !tbaa !34
  %111 = getelementptr float, float* %next.gep238.6, i64 4
  %112 = bitcast float* %111 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %112, align 4, !tbaa !34
  %index.next234.6 = or i64 %index233, 56
  %next.gep238.7 = getelementptr float, float* %__position.coerce, i64 %index.next234.6
  %113 = bitcast float* %next.gep238.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %113, align 4, !tbaa !34
  %114 = getelementptr float, float* %next.gep238.7, i64 4
  %115 = bitcast float* %114 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %115, align 4, !tbaa !34
  %index.next234.7 = add i64 %index233, 64
  %niter300.nsub.7 = add i64 %niter300, -8
  %niter300.ncmp.7 = icmp eq i64 %niter300.nsub.7, 0
  br i1 %niter300.ncmp.7, label %middle.block225.unr-lcssa, label %vector.body224, !llvm.loop !449

middle.block225.unr-lcssa:                        ; preds = %vector.body224, %vector.ph230
  %index233.unr = phi i64 [ 0, %vector.ph230 ], [ %index.next234.7, %vector.body224 ]
  %lcmp.mod298 = icmp eq i64 %xtraiter296, 0
  br i1 %lcmp.mod298, label %middle.block225, label %vector.body224.epil

vector.body224.epil:                              ; preds = %vector.body224.epil, %middle.block225.unr-lcssa
  %index233.epil = phi i64 [ %index.next234.epil, %vector.body224.epil ], [ %index233.unr, %middle.block225.unr-lcssa ]
  %epil.iter297 = phi i64 [ %epil.iter297.sub, %vector.body224.epil ], [ %xtraiter296, %middle.block225.unr-lcssa ]
  %next.gep238.epil = getelementptr float, float* %__position.coerce, i64 %index233.epil
  %116 = bitcast float* %next.gep238.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat241, <4 x i32>* %116, align 4, !tbaa !34
  %117 = getelementptr float, float* %next.gep238.epil, i64 4
  %118 = bitcast float* %117 to <4 x i32>*
  store <4 x i32> %broadcast.splat243, <4 x i32>* %118, align 4, !tbaa !34
  %index.next234.epil = add i64 %index233.epil, 8
  %epil.iter297.sub = add i64 %epil.iter297, -1
  %epil.iter297.cmp = icmp eq i64 %epil.iter297.sub, 0
  br i1 %epil.iter297.cmp, label %middle.block225, label %vector.body224.epil, !llvm.loop !450

middle.block225:                                  ; preds = %vector.body224.epil, %middle.block225.unr-lcssa
  %cmp.n237 = icmp eq i64 %87, %n.vec232
  br i1 %cmp.n237, label %if.end102, label %for.body.i.i.preheader288

for.body.i.i.preheader288:                        ; preds = %middle.block225, %for.body.i.i.preheader
  %__first.addr.05.i.i.ph = phi float* [ %__position.coerce, %for.body.i.i.preheader ], [ %ind.end236, %middle.block225 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.i.i.preheader288
  %__first.addr.05.i.i = phi float* [ %incdec.ptr.i.i, %for.body.i.i ], [ %__first.addr.05.i.i.ph, %for.body.i.i.preheader288 ]
  %119 = bitcast float* %__first.addr.05.i.i to i32*
  store i32 %7, i32* %119, align 4, !tbaa !34
  %incdec.ptr.i.i = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 1
  %cmp.i.i172 = icmp eq float* %incdec.ptr.i.i, %5
  br i1 %cmp.i.i172, label %if.end102, label %for.body.i.i, !llvm.loop !451

if.else44:                                        ; preds = %if.then
  %120 = bitcast %"class.std::vector.0"* %this to i64*
  %121 = load i64, i64* %120, align 8, !tbaa !60
  %sub.ptr.sub.i21.i = sub i64 %4, %121
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i168 = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i168, label %if.then.i169, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i169:                                     ; preds = %if.else44
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #27
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else44
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i170 = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i
  %122 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i166 = sub i64 %0, %121
  %sub.ptr.div.i167 = ashr exact i64 %sub.ptr.sub.i166, 2
  %cmp.i = icmp eq i64 %cond.i170, 0
  br i1 %cmp.i, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i170, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %123 = bitcast i8* %call2.i.i.i to float*
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %124 = phi float* [ %123, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %125 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr51 = getelementptr inbounds float, float* %124, i64 %sub.ptr.div.i167
  %126 = bitcast float* %__x to i32*
  %127 = load i32, i32* %126, align 4, !tbaa !34
  %min.iters.check265 = icmp ult i64 %__n, 8
  br i1 %min.iters.check265, label %for.body.i.i.i.i.i.preheader, label %vector.ph266

vector.ph266:                                     ; preds = %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %n.vec268 = and i64 %__n, -8
  %ind.end272 = sub i64 %__n, %n.vec268
  %ind.end274 = getelementptr float, float* %add.ptr51, i64 %n.vec268
  %broadcast.splatinsert283 = insertelement <4 x i32> undef, i32 %127, i32 0
  %broadcast.splat284 = shufflevector <4 x i32> %broadcast.splatinsert283, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert285 = insertelement <4 x i32> undef, i32 %127, i32 0
  %broadcast.splat286 = shufflevector <4 x i32> %broadcast.splatinsert285, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = add i64 %n.vec268, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %xtraiter = and i64 %130, 7
  %131 = icmp ult i64 %128, 56
  br i1 %131, label %middle.block263.unr-lcssa, label %vector.ph266.new

vector.ph266.new:                                 ; preds = %vector.ph266
  %unroll_iter = sub nsw i64 %130, %xtraiter
  br label %vector.body262

vector.body262:                                   ; preds = %vector.body262, %vector.ph266.new
  %index269 = phi i64 [ 0, %vector.ph266.new ], [ %index.next270.7, %vector.body262 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph266.new ], [ %niter.nsub.7, %vector.body262 ]
  %next.gep281 = getelementptr float, float* %add.ptr51, i64 %index269
  %132 = bitcast float* %next.gep281 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %132, align 4, !tbaa !34
  %133 = getelementptr float, float* %next.gep281, i64 4
  %134 = bitcast float* %133 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %134, align 4, !tbaa !34
  %index.next270 = or i64 %index269, 8
  %next.gep281.1 = getelementptr float, float* %add.ptr51, i64 %index.next270
  %135 = bitcast float* %next.gep281.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %135, align 4, !tbaa !34
  %136 = getelementptr float, float* %next.gep281.1, i64 4
  %137 = bitcast float* %136 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %137, align 4, !tbaa !34
  %index.next270.1 = or i64 %index269, 16
  %next.gep281.2 = getelementptr float, float* %add.ptr51, i64 %index.next270.1
  %138 = bitcast float* %next.gep281.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %138, align 4, !tbaa !34
  %139 = getelementptr float, float* %next.gep281.2, i64 4
  %140 = bitcast float* %139 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %140, align 4, !tbaa !34
  %index.next270.2 = or i64 %index269, 24
  %next.gep281.3 = getelementptr float, float* %add.ptr51, i64 %index.next270.2
  %141 = bitcast float* %next.gep281.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %141, align 4, !tbaa !34
  %142 = getelementptr float, float* %next.gep281.3, i64 4
  %143 = bitcast float* %142 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %143, align 4, !tbaa !34
  %index.next270.3 = or i64 %index269, 32
  %next.gep281.4 = getelementptr float, float* %add.ptr51, i64 %index.next270.3
  %144 = bitcast float* %next.gep281.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %144, align 4, !tbaa !34
  %145 = getelementptr float, float* %next.gep281.4, i64 4
  %146 = bitcast float* %145 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %146, align 4, !tbaa !34
  %index.next270.4 = or i64 %index269, 40
  %next.gep281.5 = getelementptr float, float* %add.ptr51, i64 %index.next270.4
  %147 = bitcast float* %next.gep281.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %147, align 4, !tbaa !34
  %148 = getelementptr float, float* %next.gep281.5, i64 4
  %149 = bitcast float* %148 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %149, align 4, !tbaa !34
  %index.next270.5 = or i64 %index269, 48
  %next.gep281.6 = getelementptr float, float* %add.ptr51, i64 %index.next270.5
  %150 = bitcast float* %next.gep281.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %150, align 4, !tbaa !34
  %151 = getelementptr float, float* %next.gep281.6, i64 4
  %152 = bitcast float* %151 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %152, align 4, !tbaa !34
  %index.next270.6 = or i64 %index269, 56
  %next.gep281.7 = getelementptr float, float* %add.ptr51, i64 %index.next270.6
  %153 = bitcast float* %next.gep281.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %153, align 4, !tbaa !34
  %154 = getelementptr float, float* %next.gep281.7, i64 4
  %155 = bitcast float* %154 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %155, align 4, !tbaa !34
  %index.next270.7 = add i64 %index269, 64
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block263.unr-lcssa, label %vector.body262, !llvm.loop !452

middle.block263.unr-lcssa:                        ; preds = %vector.body262, %vector.ph266
  %index269.unr = phi i64 [ 0, %vector.ph266 ], [ %index.next270.7, %vector.body262 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block263, label %vector.body262.epil

vector.body262.epil:                              ; preds = %vector.body262.epil, %middle.block263.unr-lcssa
  %index269.epil = phi i64 [ %index.next270.epil, %vector.body262.epil ], [ %index269.unr, %middle.block263.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body262.epil ], [ %xtraiter, %middle.block263.unr-lcssa ]
  %next.gep281.epil = getelementptr float, float* %add.ptr51, i64 %index269.epil
  %156 = bitcast float* %next.gep281.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat284, <4 x i32>* %156, align 4, !tbaa !34
  %157 = getelementptr float, float* %next.gep281.epil, i64 4
  %158 = bitcast float* %157 to <4 x i32>*
  store <4 x i32> %broadcast.splat286, <4 x i32>* %158, align 4, !tbaa !34
  %index.next270.epil = add i64 %index269.epil, 8
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block263, label %vector.body262.epil, !llvm.loop !453

middle.block263:                                  ; preds = %vector.body262.epil, %middle.block263.unr-lcssa
  %cmp.n275 = icmp eq i64 %n.vec268, %__n
  br i1 %cmp.n275, label %invoke.cont, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %middle.block263, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %__niter.08.i.i.i.i.i.ph = phi i64 [ %__n, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end272, %middle.block263 ]
  %__first.addr.07.i.i.i.i.i.ph = phi float* [ %add.ptr51, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end274, %middle.block263 ]
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.preheader
  %__niter.08.i.i.i.i.i = phi i64 [ %dec.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__niter.08.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %__first.addr.07.i.i.i.i.i = phi float* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__first.addr.07.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %159 = bitcast float* %__first.addr.07.i.i.i.i.i to i32*
  store i32 %127, i32* %159, align 4, !tbaa !34
  %dec.i.i.i.i.i = add i64 %__niter.08.i.i.i.i.i, -1
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq i64 %dec.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %invoke.cont, label %for.body.i.i.i.i.i, !llvm.loop !454

invoke.cont:                                      ; preds = %for.body.i.i.i.i.i, %middle.block263
  %160 = load float*, float** %122, align 8, !tbaa !60
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i157 = ptrtoint float* %160 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i158 = sub i64 %0, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i157
  %sub.ptr.div.i.i.i.i.i.i.i.i159 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, 2
  %tobool.i.i.i.i.i.i.i.i160 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, 0
  br i1 %tobool.i.i.i.i.i.i.i.i160, label %invoke.cont57, label %if.then.i.i.i.i.i.i.i.i161

if.then.i.i.i.i.i.i.i.i161:                       ; preds = %invoke.cont
  %161 = bitcast float* %160 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %161, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, i1 false) #24
  br label %invoke.cont57

invoke.cont57:                                    ; preds = %if.then.i.i.i.i.i.i.i.i161, %invoke.cont
  %add.ptr.i.i.i.i.i.i.i.i162 = getelementptr inbounds float, float* %124, i64 %sub.ptr.div.i.i.i.i.i.i.i.i159
  %add.ptr59 = getelementptr inbounds float, float* %add.ptr.i.i.i.i.i.i.i.i162, i64 %__n
  %162 = load i64, i64* %3, align 8, !tbaa !57
  %sub.ptr.sub.i.i.i.i.i.i.i.i151 = sub i64 %162, %0
  %sub.ptr.div.i.i.i.i.i.i.i.i152 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, 2
  %tobool.i.i.i.i.i.i.i.i153 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, 0
  br i1 %tobool.i.i.i.i.i.i.i.i153, label %invoke.cont64, label %if.then.i.i.i.i.i.i.i.i154

if.then.i.i.i.i.i.i.i.i154:                       ; preds = %invoke.cont57
  %163 = bitcast float* %add.ptr59 to i8*
  %164 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, i1 false) #24
  br label %invoke.cont64

invoke.cont64:                                    ; preds = %if.then.i.i.i.i.i.i.i.i154, %invoke.cont57
  %add.ptr.i.i.i.i.i.i.i.i155 = getelementptr inbounds float, float* %add.ptr59, i64 %sub.ptr.div.i.i.i.i.i.i.i.i152
  %tobool.i146 = icmp eq float* %160, null
  br i1 %tobool.i146, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148, label %if.then.i147

if.then.i147:                                     ; preds = %invoke.cont64
  %165 = bitcast float* %160 to i8*
  tail call void @_ZdlPv(i8* nonnull %165) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148: ; preds = %if.then.i147, %invoke.cont64
  store float* %124, float** %122, align 8, !tbaa !60
  store float* %add.ptr.i.i.i.i.i.i.i.i155, float** %_M_finish, align 8, !tbaa !57
  %add.ptr98 = getelementptr inbounds float, float* %124, i64 %cond.i170
  store float* %add.ptr98, float** %_M_end_of_storage, align 8, !tbaa !442
  br label %if.end102

if.end102:                                        ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148, %for.body.i.i, %middle.block225, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181, %for.body.i.i196, %middle.block245, %entry
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #22

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end47, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast float** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !442
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load float*, float** %_M_finish, align 8, !tbaa !57
  %sub.ptr.rhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first2.i.i.i = bitcast float* %2 to i8*
  %3 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr float, float* %2, i64 %__n
  br label %if.end47.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast float** %_M_finish to i64*
  %5 = bitcast %"class.std::vector.0"* %this to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !60
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %6
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i71, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit

if.then.i71:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)) #27
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %7 = inttoptr i64 %6 to float*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i
  %cmp.i75 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i75, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %8 = bitcast i8* %call2.i.i.i to float*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load float*, float** %_M_start.phi.trans.insert, align 8, !tbaa !60
  %.pre83 = load i64, i64* %4, align 8, !tbaa !57
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %9 = phi i64 [ %.pre83, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %sub.ptr.rhs.cast, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %10 = phi float* [ %.pre, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %7, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %11 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %cond.i76 = phi float* [ %8, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint float* %10 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %9, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %invoke.cont19, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %12 = bitcast float* %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #24
  br label %invoke.cont19

invoke.cont19:                                    ; preds = %if.then.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %add.ptr.i.i.i.i.i.i.i.i = getelementptr inbounds float, float* %cond.i76, i64 %sub.ptr.div.i.i.i.i.i.i.i.i
  %__first2.i.i.i78 = bitcast float* %add.ptr.i.i.i.i.i.i.i.i to i8*
  %13 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i78, i8 0, i64 %13, i1 false)
  %scevgep.i.i79 = getelementptr float, float* %add.ptr.i.i.i.i.i.i.i.i, i64 %__n
  %tobool.i72 = icmp eq float* %10, null
  br i1 %tobool.i72, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74, label %if.then.i73

if.then.i73:                                      ; preds = %invoke.cont19
  %14 = bitcast float* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74: ; preds = %if.then.i73, %invoke.cont19
  %15 = bitcast %"class.std::vector.0"* %this to i8**
  store i8* %11, i8** %15, align 8, !tbaa !60
  store float* %scevgep.i.i79, float** %_M_finish, align 8, !tbaa !57
  %add.ptr = getelementptr inbounds float, float* %cond.i76, i64 %cond.i
  br label %if.end47.sink.split

if.end47.sink.split:                              ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
  %_M_finish.sink = phi float** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74 ]
  %scevgep.i.i.sink = phi float* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %add.ptr, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74 ]
  store float* %scevgep.i.i.sink, float** %_M_finish.sink, align 8, !tbaa !27
  br label %if.end47

if.end47:                                         ; preds = %if.end47.sink.split, %entry
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* dereferenceable(272), i8*, i64) local_unnamed_addr #0

declare void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"*, i32) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #23

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"*, i8 signext) local_unnamed_addr #0

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #22

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"*) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end47, label %if.then

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast %"class.std::unique_ptr.31"** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !455
  %_M_finish = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !374
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.31"* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first12.i.i.i = bitcast %"class.std::unique_ptr.31"* %2 to i8*
  %3 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %2, i64 %__n
  br label %if.end47.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast %"class.std::vector.26"* %this to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !323
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %5
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 3
  %sub.i = sub nsw i64 2305843009213693951, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i71, label %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit

if.then.i71:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)) #27
  unreachable

_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit: ; preds = %if.else
  %6 = inttoptr i64 %5 to %"class.std::unique_ptr.31"*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %cmp.i72 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i72, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i

_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i: ; preds = %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 3
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %7 = bitcast i8* %call2.i.i.i to %"class.std::unique_ptr.31"*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.phi.trans.insert, align 8, !tbaa !323
  %.pre95 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !374
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit: ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
  %8 = phi %"class.std::unique_ptr.31"* [ %.pre95, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %2, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %9 = phi %"class.std::unique_ptr.31"* [ %.pre, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ %6, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %cond.i74 = phi %"class.std::unique_ptr.31"* [ %7, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i ], [ null, %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit ]
  %_M_start = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 0
  %cmp.i.i23.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %9, %8
  br i1 %cmp.i.i23.i.i.i.i, label %invoke.cont19, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
  %10 = ptrtoint %"class.std::unique_ptr.31"* %9 to i64
  %scevgep = getelementptr %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %8, i64 -1, i32 0, i32 0, i32 0, i32 0
  %11 = ptrtoint %struct.kiss_fft_cpx** %scevgep to i64
  %12 = sub i64 %11, %10
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %xtraiter = and i64 %14, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %__cur.025.i.i.i.i.prol = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %cond.i74, %for.body.i.i.i.i.preheader ]
  %__first.sroa.0.024.i.i.i.i.prol = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %9, %for.body.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i.i.i.prol ], [ %xtraiter, %for.body.i.i.i.i.preheader ]
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i.prol, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i.prol to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.prol, align 8, !tbaa !27
  %17 = bitcast %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i.prol to i64*
  store i64 %16, i64* %17, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i.prol, i64 1
  %incdec.ptr.i.i.i.i.prol = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !458

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %incdec.ptr.i.i.i.i.lcssa.unr = phi %"class.std::unique_ptr.31"* [ undef, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %__cur.025.i.i.i.i.unr = phi %"class.std::unique_ptr.31"* [ %cond.i74, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %__first.sroa.0.024.i.i.i.i.unr = phi %"class.std::unique_ptr.31"* [ %9, %for.body.i.i.i.i.preheader ], [ %incdec.ptr.i.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %18 = icmp ult i64 %12, 56
  br i1 %18, label %invoke.cont19, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit
  %__cur.025.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.7, %for.body.i.i.i.i ], [ %__cur.025.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %__first.sroa.0.024.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.i.7, %for.body.i.i.i.i ], [ %__first.sroa.0.024.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i, align 8, !tbaa !27
  %21 = bitcast %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i to i64*
  store i64 %20, i64* %21, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.1, align 8, !tbaa !27
  %24 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i to i64*
  store i64 %23, i64* %24, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 2
  %incdec.ptr.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 2
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.1 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.2, align 8, !tbaa !27
  %27 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.1 to i64*
  store i64 %26, i64* %27, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 3
  %incdec.ptr.i.i.i.i.2 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 3
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.2, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.2 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.3, align 8, !tbaa !27
  %30 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.2 to i64*
  store i64 %29, i64* %30, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 4
  %incdec.ptr.i.i.i.i.3 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 4
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.3, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.3 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.4, align 8, !tbaa !27
  %33 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.3 to i64*
  store i64 %32, i64* %33, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 5
  %incdec.ptr.i.i.i.i.4 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 5
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.4, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.4 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.5, align 8, !tbaa !27
  %36 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.4 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 6
  %incdec.ptr.i.i.i.i.5 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 6
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.5, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.5 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.6, align 8, !tbaa !27
  %39 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.5 to i64*
  store i64 %38, i64* %39, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 7
  %incdec.ptr.i.i.i.i.6 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 7
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.6, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.6 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !27
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.7, align 8, !tbaa !27
  %42 = bitcast %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.6 to i64*
  store i64 %41, i64* %42, align 8, !tbaa !456
  %incdec.ptr.i.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 8
  %incdec.ptr.i.i.i.i.7 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 8
  %cmp.i.i.i.i.i.i.7 = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i.7, %8
  br i1 %cmp.i.i.i.i.i.i.7, label %invoke.cont19, label %for.body.i.i.i.i

invoke.cont19:                                    ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.prol.loopexit, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %cond.i74, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit ], [ %incdec.ptr.i.i.i.i.lcssa.unr, %for.body.i.i.i.i.prol.loopexit ], [ %incdec.ptr.i.i.i.i.7, %for.body.i.i.i.i ]
  %__first12.i.i.i89 = bitcast %"class.std::unique_ptr.31"* %__cur.0.lcssa.i.i.i.i to i8*
  %43 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i89, i8 0, i64 %43, i1 false)
  %scevgep.i.i90 = getelementptr %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.0.lcssa.i.i.i.i, i64 %__n
  %44 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !323
  %45 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !374
  %cmp3.i.i.i78 = icmp eq %"class.std::unique_ptr.31"* %44, %45
  br i1 %cmp3.i.i.i78, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87, label %for.body.i.i.i82

for.body.i.i.i82:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86, %invoke.cont19
  %__first.addr.04.i.i.i79 = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i84, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86 ], [ %44, %invoke.cont19 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i80 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i79, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i80, align 8, !tbaa !27
  %cmp.i.i.i.i.i81 = icmp eq %struct.kiss_fft_cpx* %46, null
  br i1 %cmp.i.i.i.i.i81, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83: ; preds = %for.body.i.i.i82
  %47 = bitcast %struct.kiss_fft_cpx* %46 to i8*
  tail call void @_ZdaPv(i8* %47) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83, %for.body.i.i.i82
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i80, align 8, !tbaa !27
  %incdec.ptr.i.i.i84 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i79, i64 1
  %cmp.i.i.i85 = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i84, %45
  br i1 %cmp.i.i.i85, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split, label %for.body.i.i.i82

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86
  %.pr = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !323
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split, %invoke.cont19
  %48 = phi %"class.std::unique_ptr.31"* [ %.pr, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split ], [ %44, %invoke.cont19 ]
  %tobool.i75 = icmp eq %"class.std::unique_ptr.31"* %48, null
  br i1 %tobool.i75, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77, label %if.then.i76

if.then.i76:                                      ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87
  %49 = bitcast %"class.std::unique_ptr.31"* %48 to i8*
  tail call void @_ZdlPv(i8* nonnull %49) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77: ; preds = %if.then.i76, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87
  store %"class.std::unique_ptr.31"* %cond.i74, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !323
  store %"class.std::unique_ptr.31"* %scevgep.i.i90, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !374
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %cond.i74, i64 %cond.i
  br label %if.end47.sink.split

if.end47.sink.split:                              ; preds = %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
  %_M_finish.sink = phi %"class.std::unique_ptr.31"** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77 ]
  %scevgep.i.i.sink = phi %"class.std::unique_ptr.31"* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %add.ptr, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77 ]
  store %"class.std::unique_ptr.31"* %scevgep.i.i.sink, %"class.std::unique_ptr.31"** %_M_finish.sink, align 8, !tbaa !27
  br label %if.end47

if.end47:                                         ; preds = %if.end47.sink.split, %entry
  ret void
}

declare %"class.std::basic_filebuf"* @_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv(%"class.std::basic_filebuf"*) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #3 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #24
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #24

declare i8* @llvm_hpvm_cpu_launch(i8* (i8*)*, i8*)

declare void @llvm_hpvm_cpu_wait(i8*)

declare i8* @llvm_hpvm_cpu_argument_ptr(i8*, i64)

declare i8* @llvm_hpvm_streamLaunch(void (i8*, i8*)*, i8*)

declare void @llvm_hpvm_streamPush(i8*, i8*)

declare i8* @llvm_hpvm_streamPop(i8*)

declare void @llvm_hpvm_streamWait(i8*)

declare i8* @llvm_hpvm_createBindInBuffer(i8*, i64, i32)

declare i8* @llvm_hpvm_createBindOutBuffer(i8*, i64)

declare i8* @llvm_hpvm_createEdgeBuffer(i8*, i64)

declare i8* @llvm_hpvm_createLastInputBuffer(i8*, i64)

declare void @llvm_hpvm_createThread(i8*, i8* (i8*)*, i8*)

declare void @llvm_hpvm_bufferPush(i8*, i64)

declare i64 @llvm_hpvm_bufferPop(i8*)

declare void @llvm_hpvm_cpu_dstack_push(i32, i64, i64, i64, i64, i64, i64)

declare void @llvm_hpvm_cpu_dstack_pop()

declare i64 @llvm_hpvm_cpu_getDimLimit(i32, i32)

declare i64 @llvm_hpvm_cpu_getDimInstance(i32, i32)

declare i8* @llvm_hpvm_initializeTimerSet()

declare void @llvm_hpvm_switchToTimer(i8**, i32)

declare void @llvm_hpvm_printTimerSet(i8**, i8*)

; Function Attrs: uwtable
define %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %head = alloca %class.Orientation, align 4
  %1 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !26
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !26
  %2 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %2, i64 24, i1 false)
  %4 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %4, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %5(%class.CAmbisonicProcessor* %rotator)
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #24
  ret %struct.out.rotatorSet_fxp %returnStruct
}

; Function Attrs: uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !26
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !26
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !34
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !34
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !34
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !24
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}

; Function Attrs: uwtable
define %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** out %channelpart1, i64 %bytes_channelpart1, float** out %channelpart2, i64 %bytes_channelpart2, float** out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %3 = load i8, i8* %2, align 4, !tbaa !50, !range !51
  %tobool = icmp eq i8 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp200 = icmp eq i32 %nSample, 0
  br i1 %cmp200, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %4, i64 3
  %5 = load float*, float** %arrayidx.i, align 8, !tbaa !27
  %6 = load float*, float** %channelpart1, align 8, !tbaa !27
  %arrayidx.i199 = getelementptr inbounds float*, float** %4, i64 1
  %7 = load float*, float** %arrayidx.i199, align 8, !tbaa !27
  %arrayidx8 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx8, align 8, !tbaa !27
  %arrayidx.i197 = getelementptr inbounds float*, float** %4, i64 2
  %9 = load float*, float** %arrayidx.i197, align 8, !tbaa !27
  %arrayidx15 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx15, align 8, !tbaa !27
  %arrayidx.i195 = getelementptr inbounds float*, float** %4, i64 6
  %11 = load float*, float** %arrayidx.i195, align 8, !tbaa !27
  %12 = load float*, float** %channelpart2, align 8, !tbaa !27
  %arrayidx.i193 = getelementptr inbounds float*, float** %4, i64 7
  %13 = load float*, float** %arrayidx.i193, align 8, !tbaa !27
  %arrayidx29 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx29, align 8, !tbaa !27
  %arrayidx.i191 = getelementptr inbounds float*, float** %4, i64 5
  %15 = load float*, float** %arrayidx.i191, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx36, align 8, !tbaa !27
  %arrayidx.i189 = getelementptr inbounds float*, float** %4, i64 8
  %17 = load float*, float** %arrayidx.i189, align 8, !tbaa !27
  %arrayidx43 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx43, align 8, !tbaa !27
  %arrayidx.i187 = getelementptr inbounds float*, float** %4, i64 4
  %19 = load float*, float** %arrayidx.i187, align 8, !tbaa !27
  %arrayidx50 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx50, align 8, !tbaa !27
  %arrayidx.i185 = getelementptr inbounds float*, float** %4, i64 9
  %21 = load float*, float** %arrayidx.i185, align 8, !tbaa !27
  %22 = load float*, float** %channelpart3, align 8, !tbaa !27
  %arrayidx.i183 = getelementptr inbounds float*, float** %4, i64 10
  %23 = load float*, float** %arrayidx.i183, align 8, !tbaa !27
  %arrayidx64 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx64, align 8, !tbaa !27
  %arrayidx.i181 = getelementptr inbounds float*, float** %4, i64 11
  %25 = load float*, float** %arrayidx.i181, align 8, !tbaa !27
  %arrayidx71 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx71, align 8, !tbaa !27
  %arrayidx.i179 = getelementptr inbounds float*, float** %4, i64 12
  %27 = load float*, float** %arrayidx.i179, align 8, !tbaa !27
  %arrayidx78 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx78, align 8, !tbaa !27
  %arrayidx.i177 = getelementptr inbounds float*, float** %4, i64 13
  %29 = load float*, float** %arrayidx.i177, align 8, !tbaa !27
  %arrayidx85 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx85, align 8, !tbaa !27
  %arrayidx.i175 = getelementptr inbounds float*, float** %4, i64 14
  %31 = load float*, float** %arrayidx.i175, align 8, !tbaa !27
  %arrayidx92 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx92, align 8, !tbaa !27
  %arrayidx.i173 = getelementptr inbounds float*, float** %4, i64 15
  %33 = load float*, float** %arrayidx.i173, align 8, !tbaa !27
  %arrayidx99 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx99, align 8, !tbaa !27
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %35 = bitcast float* %arrayidx to i32*
  %36 = load i32, i32* %35, align 4, !tbaa !34
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %37 = bitcast float* %arrayidx3 to i32*
  store i32 %36, i32* %37, align 4, !tbaa !34
  %arrayidx7 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %38 = bitcast float* %arrayidx7 to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !34
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %40 = bitcast float* %arrayidx10 to i32*
  store i32 %39, i32* %40, align 4, !tbaa !34
  %arrayidx14 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %41 = bitcast float* %arrayidx14 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !34
  %arrayidx17 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %43 = bitcast float* %arrayidx17 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !34
  %arrayidx21 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %44 = bitcast float* %arrayidx21 to i32*
  %45 = load i32, i32* %44, align 4, !tbaa !34
  %arrayidx24 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %46 = bitcast float* %arrayidx24 to i32*
  store i32 %45, i32* %46, align 4, !tbaa !34
  %arrayidx28 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %47 = bitcast float* %arrayidx28 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !34
  %arrayidx31 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %49 = bitcast float* %arrayidx31 to i32*
  store i32 %48, i32* %49, align 4, !tbaa !34
  %arrayidx35 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %50 = bitcast float* %arrayidx35 to i32*
  %51 = load i32, i32* %50, align 4, !tbaa !34
  %arrayidx38 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %52 = bitcast float* %arrayidx38 to i32*
  store i32 %51, i32* %52, align 4, !tbaa !34
  %arrayidx42 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %53 = bitcast float* %arrayidx42 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !34
  %arrayidx45 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %55 = bitcast float* %arrayidx45 to i32*
  store i32 %54, i32* %55, align 4, !tbaa !34
  %arrayidx49 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %56 = bitcast float* %arrayidx49 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !34
  %arrayidx52 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %58 = bitcast float* %arrayidx52 to i32*
  store i32 %57, i32* %58, align 4, !tbaa !34
  %arrayidx56 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %59 = bitcast float* %arrayidx56 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !34
  %arrayidx59 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %61 = bitcast float* %arrayidx59 to i32*
  store i32 %60, i32* %61, align 4, !tbaa !34
  %arrayidx63 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %62 = bitcast float* %arrayidx63 to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !34
  %arrayidx66 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %64 = bitcast float* %arrayidx66 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !34
  %arrayidx70 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %65 = bitcast float* %arrayidx70 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !34
  %arrayidx73 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %67 = bitcast float* %arrayidx73 to i32*
  store i32 %66, i32* %67, align 4, !tbaa !34
  %arrayidx77 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %68 = bitcast float* %arrayidx77 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !34
  %arrayidx80 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %70 = bitcast float* %arrayidx80 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !34
  %arrayidx84 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %71 = bitcast float* %arrayidx84 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !34
  %arrayidx87 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %73 = bitcast float* %arrayidx87 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !34
  %arrayidx91 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %74 = bitcast float* %arrayidx91 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !34
  %arrayidx94 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %76 = bitcast float* %arrayidx94 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !34
  %arrayidx98 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %77 = bitcast float* %arrayidx98 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !34
  %arrayidx101 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %79 = bitcast float* %arrayidx101 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !45
  %cmp = icmp ne i32 %3, 0
  %cmp1127 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1127
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %4 = load float*, float** %channelpart1, align 8, !tbaa !27
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %5 = load float*, float** %arrayidx3, align 8, !tbaa !27
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %6 = load float*, float** %arrayidx7, align 8, !tbaa !27
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %7 = load float, float* %arrayidx2, align 4, !tbaa !34
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %9 = fmul float %7, %8
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !34
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul6 = fmul float %10, %11
  %add = fsub float %mul6, %9
  %arrayidx9 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %12 = load float, float* %arrayidx9, align 4, !tbaa !34
  %mul14 = fmul float %7, %11
  %mul19 = fmul float %8, %10
  %add20 = fadd float %mul19, %mul14
  store float %add, float* %arrayidx5, align 4, !tbaa !34
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul24 = fmul float %12, %13
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul25 = fmul float %add20, %14
  %add26 = fadd float %mul24, %mul25
  store float %add26, float* %arrayidx9, align 4, !tbaa !34
  %15 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul31 = fmul float %add20, %15
  %16 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul33 = fmul float %12, %16
  %add34 = fadd float %mul31, %mul33
  store float %add34, float* %arrayidx2, align 4, !tbaa !34
  %17 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %18 = fmul float %add34, %17
  %19 = load float, float* %arrayidx5, align 4, !tbaa !34
  %20 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul46 = fmul float %19, %20
  %add47 = fsub float %mul46, %18
  %21 = bitcast float* %arrayidx9 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !34
  %mul55 = fmul float %add34, %20
  %mul60 = fmul float %17, %19
  %add61 = fadd float %mul60, %mul55
  store float %add61, float* %arrayidx2, align 4, !tbaa !34
  store float %add47, float* %arrayidx5, align 4, !tbaa !34
  store i32 %22, i32* %21, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !45
  %cmp = icmp ugt i32 %3, 1
  %cmp1297 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1297
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %4 = load float*, float** %arrayidx, align 8, !tbaa !27
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %5 = load float*, float** %arrayidx3, align 8, !tbaa !27
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %6 = load float*, float** %arrayidx7, align 8, !tbaa !27
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx12 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %7 = load float*, float** %arrayidx12, align 8, !tbaa !27
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %8 = load float*, float** %channelpart2, align 8, !tbaa !27
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %9 = load float, float* %arrayidx2, align 4, !tbaa !34
  %10 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %11 = fmul float %9, %10
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %12 = load float, float* %arrayidx5, align 4, !tbaa !34
  %13 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul6 = fmul float %12, %13
  %add = fsub float %mul6, %11
  %arrayidx9 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %14 = load float, float* %arrayidx9, align 4, !tbaa !34
  %15 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %16 = fmul float %14, %15
  %arrayidx14 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %17 = load float, float* %arrayidx14, align 4, !tbaa !34
  %18 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul15 = fmul float %17, %18
  %add16 = fsub float %mul15, %16
  %arrayidx19 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %19 = load float, float* %arrayidx19, align 4, !tbaa !34
  %mul24 = fmul float %14, %18
  %mul29 = fmul float %15, %17
  %add30 = fadd float %mul29, %mul24
  %mul35 = fmul float %9, %13
  %mul40 = fmul float %10, %12
  %add41 = fadd float %mul40, %mul35
  %20 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %21 = fmul float %add16, %20
  %22 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul44 = fmul float %add, %22
  %add45 = fsub float %mul44, %21
  store float %add45, float* %arrayidx5, align 4, !tbaa !34
  %23 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %24 = fmul float %add16, %23
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul53 = fmul float %add, %25
  %add54 = fsub float %mul53, %24
  store float %add54, float* %arrayidx14, align 4, !tbaa !34
  %26 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul58 = fmul float %26, 7.500000e-01
  %add59 = fadd float %mul58, 2.500000e-01
  %mul60 = fmul float %19, %add59
  %conv61 = fpext float %mul60 to double
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %conv65 = fpext float %27 to double
  %square = fmul double %conv65, %conv65
  %mul67 = fmul double %square, 0x3FEBB67AE0000000
  %conv68 = fpext float %add41 to double
  %mul69 = fmul double %mul67, %conv68
  %add70 = fadd double %mul69, %conv61
  %mul72 = fmul float %27, 0x3FFBB67AE0000000
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul74 = fmul float %mul72, %28
  %mul75 = fmul float %add30, %mul74
  %conv76 = fpext float %mul75 to double
  %add77 = fadd double %add70, %conv76
  %conv78 = fptrunc double %add77 to float
  store float %conv78, float* %arrayidx19, align 4, !tbaa !34
  %29 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul83 = fmul float %add30, %29
  %30 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul85 = fmul float %30, 0x3FFBB67AE0000000
  %31 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul87 = fmul float %mul85, %31
  %mul88 = fmul float %19, %mul87
  %sub89 = fsub float %mul83, %mul88
  %mul92 = fmul float %30, %31
  %mul93 = fmul float %add41, %mul92
  %add94 = fadd float %mul93, %sub89
  store float %add94, float* %arrayidx9, align 4, !tbaa !34
  %32 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul99 = fmul float %32, 2.500000e-01
  %add100 = fadd float %mul99, 7.500000e-01
  %mul101 = fmul float %add41, %add100
  %33 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %34 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul104 = fmul float %33, %34
  %mul105 = fmul float %add30, %mul104
  %sub106 = fsub float %mul101, %mul105
  %conv107 = fpext float %sub106 to double
  %conv111 = fpext float %34 to double
  %square296 = fmul double %conv111, %conv111
  %mul113 = fmul double %square296, 0x3FEBB67AE0000000
  %conv114 = fpext float %19 to double
  %mul115 = fmul double %mul113, %conv114
  %add116 = fadd double %mul115, %conv107
  %conv117 = fptrunc double %add116 to float
  store float %conv117, float* %arrayidx2, align 4, !tbaa !34
  %35 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %36 = fmul float %35, %conv117
  %37 = load float, float* %arrayidx5, align 4, !tbaa !34
  %38 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul129 = fmul float %37, %38
  %add130 = fsub float %mul129, %36
  %39 = load float, float* %arrayidx9, align 4, !tbaa !34
  %40 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %41 = fmul float %39, %40
  %42 = load float, float* %arrayidx14, align 4, !tbaa !34
  %43 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul139 = fmul float %42, %43
  %add140 = fsub float %mul139, %41
  %mul148 = fmul float %39, %43
  %mul153 = fmul float %40, %42
  %add154 = fadd float %mul153, %mul148
  %mul159 = fmul float %38, %conv117
  %mul164 = fmul float %35, %37
  %add165 = fadd float %mul164, %mul159
  store float %add154, float* %arrayidx9, align 4, !tbaa !34
  store float %add140, float* %arrayidx14, align 4, !tbaa !34
  store float %add165, float* %arrayidx2, align 4, !tbaa !34
  store float %add130, float* %arrayidx5, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !45
  %cmp = icmp ugt i32 %3, 2
  %cmp5584 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp5584
  br i1 %or.cond, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx21 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx26 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx31 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  %.pre = load float*, float** %arrayidx, align 8, !tbaa !27
  %.pre586 = load float*, float** %channelpart3, align 8, !tbaa !27
  %.pre587 = load float*, float** %arrayidx11, align 8, !tbaa !27
  %.pre588 = load float*, float** %arrayidx16, align 8, !tbaa !27
  %.pre589 = load float*, float** %arrayidx21, align 8, !tbaa !27
  %.pre590 = load float*, float** %arrayidx26, align 8, !tbaa !27
  %.pre591 = load float*, float** %arrayidx31, align 8, !tbaa !27
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %4 = phi float* [ %.pre591, %for.body.lr.ph ], [ %78, %for.body ]
  %5 = phi float* [ %.pre590, %for.body.lr.ph ], [ %75, %for.body ]
  %6 = phi float* [ %.pre589, %for.body.lr.ph ], [ %71, %for.body ]
  %7 = phi float* [ %.pre588, %for.body.lr.ph ], [ %68, %for.body ]
  %8 = phi float* [ %.pre587, %for.body.lr.ph ], [ %64, %for.body ]
  %9 = phi float* [ %.pre586, %for.body.lr.ph ], [ %61, %for.body ]
  %10 = phi float* [ %.pre, %for.body.lr.ph ], [ %58, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %11 = load float, float* %arrayidx6, align 4, !tbaa !34
  %12 = load float, float* %m_fSin3Alpha, align 4, !tbaa !201
  %13 = fmul float %11, %12
  %arrayidx9 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %14 = load float, float* %arrayidx9, align 4, !tbaa !34
  %15 = load float, float* %m_fCos3Alpha, align 8, !tbaa !200
  %mul10 = fmul float %14, %15
  %add = fsub float %mul10, %13
  %arrayidx13 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %16 = load float, float* %arrayidx13, align 4, !tbaa !34
  %17 = load float, float* %m_fSin2Alpha, align 4, !tbaa !195
  %18 = fmul float %16, %17
  %arrayidx18 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %19 = load float, float* %arrayidx18, align 4, !tbaa !34
  %20 = load float, float* %m_fCos2Alpha, align 8, !tbaa !194
  %mul19 = fmul float %19, %20
  %add20 = fsub float %mul19, %18
  %arrayidx23 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %21 = load float, float* %arrayidx23, align 4, !tbaa !34
  %22 = load float, float* %m_fSinAlpha, align 4, !tbaa !187
  %23 = fmul float %21, %22
  %arrayidx28 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %24 = load float, float* %arrayidx28, align 4, !tbaa !34
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !186
  %mul29 = fmul float %24, %25
  %add30 = fsub float %mul29, %23
  %arrayidx33 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %26 = load float, float* %arrayidx33, align 4, !tbaa !34
  %mul38 = fmul float %21, %25
  %mul43 = fmul float %22, %24
  %add44 = fadd float %mul43, %mul38
  %mul49 = fmul float %16, %20
  %mul54 = fmul float %17, %19
  %add55 = fadd float %mul54, %mul49
  %mul60 = fmul float %11, %15
  %mul65 = fmul float %12, %14
  %add66 = fadd float %mul65, %mul60
  %mul67 = fmul float %add, 1.250000e-01
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul68 = fmul float %27, 3.000000e+00
  %add69 = fadd float %mul68, 5.000000e+00
  %mul70 = fmul float %mul67, %add69
  %mul71 = fmul float %add20, 0x3FF3988E20000000
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul72 = fmul float %mul71, %28
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul73 = fmul float %mul72, %29
  %sub74 = fsub float %mul70, %mul73
  %conv75 = fpext float %sub74 to double
  %mul77 = fmul float %add30, 0x3FEEFBDEC0000000
  %conv78 = fpext float %mul77 to double
  %conv80 = fpext float %29 to double
  %square = fmul double %conv80, %conv80
  %mul82 = fmul double %square, %conv78
  %add83 = fadd double %mul82, %conv75
  %conv84 = fptrunc double %add83 to float
  store float %conv84, float* %arrayidx9, align 4, !tbaa !34
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul89 = fmul float %add20, %30
  %mul90 = fmul float %add30, 0x3FF94C5840000000
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul92 = fmul float %mul90, %31
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul94 = fmul float %mul92, %32
  %sub95 = fsub float %mul89, %mul94
  %mul96 = fmul float %add, 0x3FF3988E20000000
  %mul98 = fmul float %mul96, %31
  %mul100 = fmul float %mul98, %32
  %add101 = fadd float %mul100, %sub95
  store float %add101, float* %arrayidx18, align 4, !tbaa !34
  %mul105 = fmul float %add30, 1.250000e-01
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul107 = fmul float %33, 5.000000e+00
  %add108 = fadd float %mul107, 3.000000e+00
  %mul109 = fmul float %mul105, %add108
  %mul110 = fmul float %add20, 0x3FF94C5840000000
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul112 = fmul float %mul110, %34
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul114 = fmul float %mul112, %35
  %sub115 = fsub float %mul109, %mul114
  %conv116 = fpext float %sub115 to double
  %mul118 = fmul float %add, 0x3FEEFBDEC0000000
  %conv119 = fpext float %mul118 to double
  %conv121 = fpext float %35 to double
  %square579 = fmul double %conv121, %conv121
  %mul123 = fmul double %square579, %conv119
  %add124 = fadd double %mul123, %conv116
  %conv125 = fptrunc double %add124 to float
  store float %conv125, float* %arrayidx28, align 4, !tbaa !34
  store float %conv125, float* %arrayidx9, align 4, !tbaa !34
  %mul132 = fmul float %26, 2.500000e-01
  %36 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul134 = fmul float %mul132, %36
  %37 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul136 = fmul float %37, 1.500000e+01
  %add137 = fadd float %mul136, -1.000000e+00
  %mul138 = fmul float %mul134, %add137
  %conv139 = fpext float %mul138 to double
  %mul141 = fmul float %add55, 0x3FFEFBDEC0000000
  %mul143 = fmul float %mul141, %36
  %conv144 = fpext float %mul143 to double
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %conv146 = fpext float %38 to double
  %square580 = fmul double %conv146, %conv146
  %mul148 = fmul double %square580, %conv144
  %add149 = fadd double %mul148, %conv139
  %mul151 = fmul float %add66, 0x3FE94C5840000000
  %conv152 = fpext float %mul151 to double
  %call155 = tail call double @pow(double %conv146, double 3.000000e+00) #24
  %mul156 = fmul double %call155, %conv152
  %add157 = fadd double %mul156, %add149
  %mul159 = fmul float %add44, 0x3FC3988E20000000
  %39 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %40 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul161 = fmul float %40, 5.000000e+00
  %add162 = fadd float %39, %mul161
  %mul163 = fmul float %mul159, %add162
  %conv164 = fpext float %mul163 to double
  %add165 = fadd double %add157, %conv164
  %conv166 = fptrunc double %add165 to float
  %41 = load float*, float** %arrayidx31, align 8, !tbaa !27
  %arrayidx169 = getelementptr inbounds float, float* %41, i64 %indvars.iv
  store float %conv166, float* %arrayidx169, align 4, !tbaa !34
  %mul170 = fmul float %add44, 6.250000e-02
  %42 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %43 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %mul172 = fmul float %43, 1.500000e+01
  %add173 = fadd float %42, %mul172
  %mul174 = fmul float %mul170, %add173
  %mul176 = fmul float %add55, 0x3FD94C5840000000
  %44 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %mul178 = fmul float %44, 3.000000e+00
  %add179 = fadd float %mul178, 1.000000e+00
  %mul180 = fmul float %mul176, %add179
  %45 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul182 = fmul float %45, %mul180
  %add183 = fadd float %mul174, %mul182
  %conv184 = fpext float %add183 to double
  %mul186 = fmul float %add66, 0x3FEEFBDEC0000000
  %mul188 = fmul float %mul186, %42
  %conv189 = fpext float %mul188 to double
  %conv191 = fpext float %45 to double
  %square581 = fmul double %conv191, %conv191
  %mul193 = fmul double %square581, %conv189
  %add194 = fadd double %mul193, %conv184
  %conv197 = fpext float %26 to double
  %mul198 = fmul double %conv197, 0x3FC3988E20000000
  %46 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul201 = fmul float %46, 5.000000e+00
  %add202 = fadd float %45, %mul201
  %conv203 = fpext float %add202 to double
  %mul204 = fmul double %mul198, %conv203
  %sub205 = fsub double %add194, %mul204
  %conv206 = fptrunc double %sub205 to float
  %47 = load float*, float** %arrayidx21, align 8, !tbaa !27
  %arrayidx209 = getelementptr inbounds float, float* %47, i64 %indvars.iv
  store float %conv206, float* %arrayidx209, align 4, !tbaa !34
  %mul210 = fmul float %add55, 1.250000e-01
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul212 = fmul float %48, 5.000000e+00
  %49 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %mul214 = fmul float %49, 3.000000e+00
  %add215 = fadd float %mul212, %mul214
  %mul216 = fmul float %mul210, %add215
  %mul218 = fmul float %add66, 0x3FD3988E20000000
  %50 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %add220 = fadd float %50, 3.000000e+00
  %mul221 = fmul float %mul218, %add220
  %51 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul223 = fmul float %51, %mul221
  %add224 = fadd float %mul216, %mul223
  %conv225 = fpext float %add224 to double
  %mul227 = fmul float %26, 0x3FFEFBDEC0000000
  %mul229 = fmul float %mul227, %48
  %conv230 = fpext float %mul229 to double
  %conv232 = fpext float %51 to double
  %square582 = fmul double %conv232, %conv232
  %mul234 = fmul double %square582, %conv230
  %add235 = fadd double %mul234, %conv225
  %conv238 = fpext float %add44 to double
  %mul239 = fmul double %conv238, 0x3FC94C5840000000
  %52 = load float, float* %m_fSin3Beta, align 4, !tbaa !203
  %mul242 = fmul float %52, 3.000000e+00
  %sub243 = fsub float %51, %mul242
  %conv244 = fpext float %sub243 to double
  %mul245 = fmul double %mul239, %conv244
  %add246 = fadd double %add235, %mul245
  %conv247 = fptrunc double %add246 to float
  %53 = load float*, float** %arrayidx11, align 8, !tbaa !27
  %arrayidx250 = getelementptr inbounds float, float* %53, i64 %indvars.iv
  store float %conv247, float* %arrayidx250, align 4, !tbaa !34
  %mul251 = fmul float %add66, 6.250000e-02
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !189
  %mul253 = fmul float %54, 1.500000e+01
  %55 = load float, float* %m_fCos3Beta, align 8, !tbaa !202
  %add255 = fadd float %mul253, %55
  %mul256 = fmul float %mul251, %add255
  %mul258 = fmul float %add55, 0x3FD3988E20000000
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !196
  %add260 = fadd float %56, 3.000000e+00
  %mul261 = fmul float %mul258, %add260
  %57 = load float, float* %m_fSinBeta, align 4, !tbaa !190
  %mul263 = fmul float %57, %mul261
  %sub264 = fsub float %mul256, %mul263
  %conv265 = fpext float %sub264 to double
  %mul267 = fmul float %add44, 0x3FEEFBDEC0000000
  %mul269 = fmul float %mul267, %54
  %conv270 = fpext float %mul269 to double
  %conv272 = fpext float %57 to double
  %square583 = fmul double %conv272, %conv272
  %mul274 = fmul double %square583, %conv270
  %add275 = fadd double %mul274, %conv265
  %mul279 = fmul double %conv197, 0x3FE94C5840000000
  %call282 = tail call double @pow(double %conv272, double 3.000000e+00) #24
  %mul283 = fmul double %mul279, %call282
  %sub284 = fsub double %add275, %mul283
  %conv285 = fptrunc double %sub284 to float
  %58 = load float*, float** %arrayidx, align 8, !tbaa !27
  %arrayidx288 = getelementptr inbounds float, float* %58, i64 %indvars.iv
  store float %conv285, float* %arrayidx288, align 4, !tbaa !34
  %59 = load float, float* %m_fSin3Gamma, align 4, !tbaa !205
  %60 = fmul float %59, %conv285
  %61 = load float*, float** %channelpart3, align 8, !tbaa !27
  %arrayidx296 = getelementptr inbounds float, float* %61, i64 %indvars.iv
  %62 = load float, float* %arrayidx296, align 4, !tbaa !34
  %63 = load float, float* %m_fCos3Gamma, align 8, !tbaa !204
  %mul297 = fmul float %62, %63
  %add298 = fsub float %mul297, %60
  %64 = load float*, float** %arrayidx11, align 8, !tbaa !27
  %arrayidx301 = getelementptr inbounds float, float* %64, i64 %indvars.iv
  %65 = load float, float* %arrayidx301, align 4, !tbaa !34
  %66 = load float, float* %m_fSin2Gamma, align 4, !tbaa !199
  %67 = fmul float %65, %66
  %68 = load float*, float** %arrayidx16, align 8, !tbaa !27
  %arrayidx306 = getelementptr inbounds float, float* %68, i64 %indvars.iv
  %69 = load float, float* %arrayidx306, align 4, !tbaa !34
  %70 = load float, float* %m_fCos2Gamma, align 8, !tbaa !198
  %mul307 = fmul float %69, %70
  %add308 = fsub float %mul307, %67
  %71 = load float*, float** %arrayidx21, align 8, !tbaa !27
  %arrayidx311 = getelementptr inbounds float, float* %71, i64 %indvars.iv
  %72 = load float, float* %arrayidx311, align 4, !tbaa !34
  %73 = load float, float* %m_fSinGamma, align 4, !tbaa !193
  %74 = fmul float %72, %73
  %75 = load float*, float** %arrayidx26, align 8, !tbaa !27
  %arrayidx316 = getelementptr inbounds float, float* %75, i64 %indvars.iv
  %76 = load float, float* %arrayidx316, align 4, !tbaa !34
  %77 = load float, float* %m_fCosGamma, align 8, !tbaa !192
  %mul317 = fmul float %76, %77
  %add318 = fsub float %mul317, %74
  %78 = load float*, float** %arrayidx31, align 8, !tbaa !27
  %arrayidx321 = getelementptr inbounds float, float* %78, i64 %indvars.iv
  %79 = bitcast float* %arrayidx321 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !34
  %mul326 = fmul float %72, %77
  %mul331 = fmul float %73, %76
  %add332 = fadd float %mul331, %mul326
  %mul337 = fmul float %65, %70
  %mul342 = fmul float %66, %69
  %add343 = fadd float %mul342, %mul337
  %mul348 = fmul float %63, %conv285
  %mul353 = fmul float %59, %62
  %add354 = fadd float %mul353, %mul348
  store float %add298, float* %arrayidx296, align 4, !tbaa !34
  store float %add308, float* %arrayidx306, align 4, !tbaa !34
  store float %add318, float* %arrayidx316, align 4, !tbaa !34
  store i32 %80, i32* %79, align 4, !tbaa !34
  store float %add332, float* %arrayidx311, align 4, !tbaa !34
  store float %add343, float* %arrayidx301, align 4, !tbaa !34
  store float %add354, float* %arrayidx288, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %cmp197 = icmp eq i32 %nSample, 0
  br i1 %cmp197, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %channelpart1, align 8, !tbaa !27
  %_M_head_impl.i.i.i.i.i.i194 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i194, align 8, !tbaa !27
  %arrayidx.i195 = getelementptr inbounds float*, float** %6, i64 3
  %7 = load float*, float** %arrayidx.i195, align 8, !tbaa !27
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx4, align 8, !tbaa !27
  %arrayidx.i193 = getelementptr inbounds float*, float** %6, i64 1
  %9 = load float*, float** %arrayidx.i193, align 8, !tbaa !27
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx11, align 8, !tbaa !27
  %arrayidx.i191 = getelementptr inbounds float*, float** %6, i64 2
  %11 = load float*, float** %arrayidx.i191, align 8, !tbaa !27
  %12 = load float*, float** %channelpart2, align 8, !tbaa !27
  %arrayidx.i189 = getelementptr inbounds float*, float** %6, i64 6
  %13 = load float*, float** %arrayidx.i189, align 8, !tbaa !27
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx25, align 8, !tbaa !27
  %arrayidx.i187 = getelementptr inbounds float*, float** %6, i64 7
  %15 = load float*, float** %arrayidx.i187, align 8, !tbaa !27
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx32, align 8, !tbaa !27
  %arrayidx.i185 = getelementptr inbounds float*, float** %6, i64 5
  %17 = load float*, float** %arrayidx.i185, align 8, !tbaa !27
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !27
  %arrayidx.i183 = getelementptr inbounds float*, float** %6, i64 8
  %19 = load float*, float** %arrayidx.i183, align 8, !tbaa !27
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx46, align 8, !tbaa !27
  %arrayidx.i181 = getelementptr inbounds float*, float** %6, i64 4
  %21 = load float*, float** %arrayidx.i181, align 8, !tbaa !27
  %22 = load float*, float** %channelpart3, align 8, !tbaa !27
  %arrayidx.i179 = getelementptr inbounds float*, float** %6, i64 9
  %23 = load float*, float** %arrayidx.i179, align 8, !tbaa !27
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx60, align 8, !tbaa !27
  %arrayidx.i177 = getelementptr inbounds float*, float** %6, i64 10
  %25 = load float*, float** %arrayidx.i177, align 8, !tbaa !27
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx67, align 8, !tbaa !27
  %arrayidx.i175 = getelementptr inbounds float*, float** %6, i64 11
  %27 = load float*, float** %arrayidx.i175, align 8, !tbaa !27
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx74, align 8, !tbaa !27
  %arrayidx.i173 = getelementptr inbounds float*, float** %6, i64 12
  %29 = load float*, float** %arrayidx.i173, align 8, !tbaa !27
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx81, align 8, !tbaa !27
  %arrayidx.i171 = getelementptr inbounds float*, float** %6, i64 13
  %31 = load float*, float** %arrayidx.i171, align 8, !tbaa !27
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx88, align 8, !tbaa !27
  %arrayidx.i169 = getelementptr inbounds float*, float** %6, i64 14
  %33 = load float*, float** %arrayidx.i169, align 8, !tbaa !27
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx95, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %6, i64 15
  %35 = load float*, float** %arrayidx.i, align 8, !tbaa !27
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  br i1 %cmp197, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.cleanup
  %36 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 8, !tbaa !49
  %cmp397.i = icmp eq i32 %37, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = zext i32 %nSample to i64
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !27
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !27
  %38 = zext i32 %37 to i64
  %39 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !27
  %40 = add nsw i64 %38, -1
  %xtraiter = and i64 %38, 3
  %41 = icmp ult i64 %40, 3
  %unroll_iter = sub nsw i64 %38, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %41, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv108.i
  %42 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !34
  %43 = tail call float @llvm.fabs.f32(float %42) #24
  %conv17.us.i = fpext float %43 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %44 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !27
  %arrayidx45.us.i = getelementptr inbounds float, float* %44, i64 %indvars.iv110.i
  %45 = load float, float* %arrayidx45.us.i, align 4, !tbaa !34
  %46 = load float, float* %m_fZoomRed.i, align 4, !tbaa !260
  %mul46.us.i = fmul float %45, %46
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !34
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %47 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !266
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %48 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !27
  %arrayidx23.us.i = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx23.us.i, align 4, !tbaa !34
  %mul24.us.i = fmul float %47, %49
  %50 = load float, float* %m_fZoom.i, align 8, !tbaa !265
  %mul28.us.i = fmul float %42, %50
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %51 = tail call float @llvm.fabs.f32(float %50) #24
  %52 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !264
  %mul34.us.i = fmul float %51, %52
  %add35.us.i = fadd float %47, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !34
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %38
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %53 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !34
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %54 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !27
  %arrayidx.us.i = getelementptr inbounds float, float* %54, i64 %indvars.iv110.i
  %55 = load float, float* %arrayidx.us.i, align 4, !tbaa !34
  %mul.us.i = fmul float %53, %55
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %56 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !34
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %57 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !27
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %57, i64 %indvars.iv110.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !34
  %mul.us.i.1 = fmul float %56, %58
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %59 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !34
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %60 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !27
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %60, i64 %indvars.iv110.i
  %61 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !34
  %mul.us.i.2 = fmul float %59, %61
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !34
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %63 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !27
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %63, i64 %indvars.iv110.i
  %64 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !34
  %mul.us.i.3 = fmul float %62, %64
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %65 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !34
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %66 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !27
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %66, i64 %indvars.iv110.i
  %67 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !34
  %mul.us.i.epil = fmul float %65, %67
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !459

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %for.cond.cleanup, %entry
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.zoomProcess_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %68 = bitcast float* %arrayidx1 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !34
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %70 = bitcast float* %arrayidx3 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !34
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %71 = bitcast float* %arrayidx6 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !34
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %73 = bitcast float* %arrayidx10 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !34
  %arrayidx13 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %74 = bitcast float* %arrayidx13 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !34
  %arrayidx17 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %76 = bitcast float* %arrayidx17 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !34
  %arrayidx20 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %77 = bitcast float* %arrayidx20 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !34
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %79 = bitcast float* %arrayidx24 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !34
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %80 = bitcast float* %arrayidx27 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !34
  %arrayidx31 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %82 = bitcast float* %arrayidx31 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !34
  %arrayidx34 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %83 = bitcast float* %arrayidx34 to i32*
  %84 = load i32, i32* %83, align 4, !tbaa !34
  %arrayidx38 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %85 = bitcast float* %arrayidx38 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !34
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %86 = bitcast float* %arrayidx41 to i32*
  %87 = load i32, i32* %86, align 4, !tbaa !34
  %arrayidx45 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %88 = bitcast float* %arrayidx45 to i32*
  store i32 %87, i32* %88, align 4, !tbaa !34
  %arrayidx48 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %89 = bitcast float* %arrayidx48 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !34
  %arrayidx52 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %91 = bitcast float* %arrayidx52 to i32*
  store i32 %90, i32* %91, align 4, !tbaa !34
  %arrayidx55 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %92 = bitcast float* %arrayidx55 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !34
  %arrayidx59 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %94 = bitcast float* %arrayidx59 to i32*
  store i32 %93, i32* %94, align 4, !tbaa !34
  %arrayidx62 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %95 = bitcast float* %arrayidx62 to i32*
  %96 = load i32, i32* %95, align 4, !tbaa !34
  %arrayidx66 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %97 = bitcast float* %arrayidx66 to i32*
  store i32 %96, i32* %97, align 4, !tbaa !34
  %arrayidx69 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %98 = bitcast float* %arrayidx69 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !34
  %arrayidx73 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %100 = bitcast float* %arrayidx73 to i32*
  store i32 %99, i32* %100, align 4, !tbaa !34
  %arrayidx76 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %101 = bitcast float* %arrayidx76 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !34
  %arrayidx80 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %103 = bitcast float* %arrayidx80 to i32*
  store i32 %102, i32* %103, align 4, !tbaa !34
  %arrayidx83 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %104 = bitcast float* %arrayidx83 to i32*
  %105 = load i32, i32* %104, align 4, !tbaa !34
  %arrayidx87 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %106 = bitcast float* %arrayidx87 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !34
  %arrayidx90 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %107 = bitcast float* %arrayidx90 to i32*
  %108 = load i32, i32* %107, align 4, !tbaa !34
  %arrayidx94 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %109 = bitcast float* %arrayidx94 to i32*
  store i32 %108, i32* %109, align 4, !tbaa !34
  %arrayidx97 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %110 = bitcast float* %arrayidx97 to i32*
  %111 = load i32, i32* %110, align 4, !tbaa !34
  %arrayidx101 = getelementptr inbounds float, float* %35, i64 %indvars.iv
  %112 = bitcast float* %arrayidx101 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond200 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond200, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !60
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !49
  %cmp40 = icmp eq i32 %6, 0
  br i1 %cmp40, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i39 to i8**
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i37 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_fxp undef, i64 %bytes_decoder, 0
  %returnStruct1 = insertvalue %struct.out.setAndFFT_fxp %returnStruct, i64 %bytes_decoder, 1
  ret %struct.out.setAndFFT_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %8 = load i8*, i8** %7, align 8, !tbaa !60
  %9 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %10 = bitcast float** %arrayidx.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !27
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv4 = zext i32 %12 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 %mul5, i1 false)
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv8 = zext i32 %13 to i64
  %14 = load float*, float** %_M_start.i39, align 8, !tbaa !60
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %conv8
  %15 = bitcast float* %add.ptr.i to i8*
  %16 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %sub = sub i32 %16, %13
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 %mul13, i1 false)
  %17 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i37, align 8, !tbaa !27
  %18 = load float*, float** %_M_start.i39, align 8, !tbaa !60
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %17, float* %18, %struct.kiss_fft_cpx* %19)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %5, align 8, !tbaa !49
  %21 = zext i32 %20 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !49
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %6 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i105, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !27
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %1, align 8, !tbaa !49
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !213
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !213
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !215
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !215
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !49
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !27
  %6 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i105, align 8, !tbaa !323
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !27
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %1, align 8, !tbaa !49
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !213
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !213
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !215
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !215
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !288
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit
}

; Function Attrs: uwtable
define %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !49
  %cmp34 = icmp eq i32 %2, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i31, align 8, !tbaa !27
  %5 = load float*, float** %_M_start.i30, align 8, !tbaa !60
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %5)
  %6 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %cmp432 = icmp eq i32 %6, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %7 = load float*, float** %_M_start.i30, align 8, !tbaa !60
  %8 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %9 = zext i32 %6 to i64
  %min.iters.check = icmp ult i32 %6, 8
  br i1 %min.iters.check, label %for.body6.preheader, label %vector.memcheck

for.body6.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body6.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body6.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body6

vector.memcheck:                                  ; preds = %for.body6.lr.ph
  %scevgep = getelementptr float, float* %8, i64 %9
  %scevgep37 = getelementptr float, float* %7, i64 %9
  %bound0 = icmp ult float* %8, %scevgep37
  %bound1 = icmp ult float* %7, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body6.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %9, 4294967288
  %10 = add nsw i64 %n.vec, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %xtraiter = and i64 %12, 1
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %12, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %14 = getelementptr inbounds float, float* %7, i64 %index
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %15, align 4, !tbaa !34, !alias.scope !460
  %16 = getelementptr inbounds float, float* %14, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load40 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !34, !alias.scope !460
  %18 = getelementptr inbounds float, float* %8, i64 %index
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load41 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %20 = getelementptr inbounds float, float* %18, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %22 = fadd <4 x float> %wide.load, %wide.load41
  %23 = fadd <4 x float> %wide.load40, %wide.load42
  %24 = bitcast float* %18 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %25 = bitcast float* %20 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %index.next = or i64 %index, 8
  %26 = getelementptr inbounds float, float* %7, i64 %index.next
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !460
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load40.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !460
  %30 = getelementptr inbounds float, float* %8, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load41.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %34 = fadd <4 x float> %wide.load.1, %wide.load41.1
  %35 = fadd <4 x float> %wide.load40.1, %wide.load42.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !465

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = getelementptr inbounds float, float* %7, i64 %index.unr
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !460
  %40 = getelementptr inbounds float, float* %38, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load40.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !34, !alias.scope !460
  %42 = getelementptr inbounds float, float* %8, i64 %index.unr
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load41.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %44 = getelementptr inbounds float, float* %42, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %46 = fadd <4 x float> %wide.load.epil, %wide.load41.epil
  %47 = fadd <4 x float> %wide.load40.epil, %wide.load42.epil
  %48 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  %49 = bitcast float* %44 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !463, !noalias !460
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %9
  br i1 %cmp.n, label %for.cond.cleanup5, label %for.body6.preheader

for.cond.cleanup5:                                ; preds = %for.body6, %middle.block, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %50 = load i32, i32* %1, align 8, !tbaa !49
  %cmp = icmp ult i32 %inc12, %50
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body6:                                        ; preds = %for.body6, %for.body6.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ %indvars.iv.ph, %for.body6.preheader ]
  %add.ptr.i29 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %51 = load float, float* %add.ptr.i29, align 4, !tbaa !34
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %52 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %add = fadd float %51, %52
  store float %add, float* %add.ptr.i, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp4 = icmp ult i64 %indvars.iv.next, %9
  br i1 %cmp4, label %for.body6, label %for.cond.cleanup5, !llvm.loop !466
}

; Function Attrs: uwtable
define %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !49
  %cmp34 = icmp eq i32 %2, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !27
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i31, align 8, !tbaa !27
  %5 = load float*, float** %_M_start.i30, align 8, !tbaa !60
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %3, %struct.kiss_fft_cpx* %4, float* %5)
  %6 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %cmp432 = icmp eq i32 %6, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %7 = load float*, float** %_M_start.i30, align 8, !tbaa !60
  %8 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %9 = zext i32 %6 to i64
  %min.iters.check = icmp ult i32 %6, 8
  br i1 %min.iters.check, label %for.body6.preheader, label %vector.memcheck

for.body6.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body6.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body6.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body6

vector.memcheck:                                  ; preds = %for.body6.lr.ph
  %scevgep = getelementptr float, float* %8, i64 %9
  %scevgep37 = getelementptr float, float* %7, i64 %9
  %bound0 = icmp ult float* %8, %scevgep37
  %bound1 = icmp ult float* %7, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body6.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %9, 4294967288
  %10 = add nsw i64 %n.vec, -8
  %11 = lshr exact i64 %10, 3
  %12 = add nuw nsw i64 %11, 1
  %xtraiter = and i64 %12, 1
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %12, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %14 = getelementptr inbounds float, float* %7, i64 %index
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %15, align 4, !tbaa !34, !alias.scope !467
  %16 = getelementptr inbounds float, float* %14, i64 4
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load40 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !34, !alias.scope !467
  %18 = getelementptr inbounds float, float* %8, i64 %index
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load41 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %20 = getelementptr inbounds float, float* %18, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %22 = fadd <4 x float> %wide.load, %wide.load41
  %23 = fadd <4 x float> %wide.load40, %wide.load42
  %24 = bitcast float* %18 to <4 x float>*
  store <4 x float> %22, <4 x float>* %24, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %25 = bitcast float* %20 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %index.next = or i64 %index, 8
  %26 = getelementptr inbounds float, float* %7, i64 %index.next
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !467
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load40.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !467
  %30 = getelementptr inbounds float, float* %8, i64 %index.next
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load41.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %34 = fadd <4 x float> %wide.load.1, %wide.load41.1
  %35 = fadd <4 x float> %wide.load40.1, %wide.load42.1
  %36 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %37 = bitcast float* %32 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !472

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %38 = getelementptr inbounds float, float* %7, i64 %index.unr
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !34, !alias.scope !467
  %40 = getelementptr inbounds float, float* %38, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load40.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !34, !alias.scope !467
  %42 = getelementptr inbounds float, float* %8, i64 %index.unr
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load41.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %44 = getelementptr inbounds float, float* %42, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %46 = fadd <4 x float> %wide.load.epil, %wide.load41.epil
  %47 = fadd <4 x float> %wide.load40.epil, %wide.load42.epil
  %48 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  %49 = bitcast float* %44 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !34, !alias.scope !470, !noalias !467
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %9
  br i1 %cmp.n, label %for.cond.cleanup5, label %for.body6.preheader

for.cond.cleanup5:                                ; preds = %for.body6, %middle.block, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %50 = load i32, i32* %1, align 8, !tbaa !49
  %cmp = icmp ult i32 %inc12, %50
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.body6:                                        ; preds = %for.body6, %for.body6.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ %indvars.iv.ph, %for.body6.preheader ]
  %add.ptr.i29 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %51 = load float, float* %add.ptr.i29, align 4, !tbaa !34
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %52 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %add = fadd float %51, %52
  store float %add, float* %add.ptr.i, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp4 = icmp ult i64 %indvars.iv.next, %9
  br i1 %cmp4, label %for.body6, label %for.cond.cleanup5, !llvm.loop !473
}

; Function Attrs: nounwind uwtable
define %emptyStruct @overlap_left_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float** in out %resultSample, i64 %bytes_resultSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %cmp58 = icmp eq i32 %2, 0
  br i1 %cmp58, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !60
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !60
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv60.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep69 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6970 = bitcast float* %scevgep69 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6970, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter102 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter104 = sub nuw nsw i64 %8, %xtraiter102
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !474
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !474
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter105 = phi i64 [ %unroll_iter104, %vector.ph.new ], [ %niter105.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load72 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load72
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load72.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load72.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %index.next.1 = add i64 %index, 16
  %niter105.nsub.1 = add i64 %niter105, -2
  %niter105.ncmp.1 = icmp eq i64 %niter105.nsub.1, 0
  br i1 %niter105.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !479

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod103 = icmp eq i64 %xtraiter102, 0
  br i1 %lcmp.mod103, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !474
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load72.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load72.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !477, !noalias !474
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %50 = bitcast float** %resultSample to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !27
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %cmp755 = icmp eq i32 %53, 0
  %arrayidx10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp755, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph

for.cond.cleanup.for.cond.cleanup8_crit_edge:     ; preds = %for.cond.cleanup
  %.phi.trans.insert62 = bitcast %"class.std::vector.0"* %arrayidx10 to i8**
  %.pre63 = load i8*, i8** %.phi.trans.insert62, align 8, !tbaa !60
  br label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i49 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx10, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !60
  %55 = bitcast float* %54 to i8*
  %56 = load float*, float** %resultSample, align 8, !tbaa !27
  %57 = zext i32 %53 to i64
  %min.iters.check76 = icmp ult i32 %53, 8
  br i1 %min.iters.check76, label %for.body9.preheader, label %vector.memcheck86

for.body9.preheader:                              ; preds = %middle.block74, %vector.memcheck86, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck86 ], [ 0, %for.body9.lr.ph ], [ %n.vec89, %middle.block74 ]
  br label %for.body9

vector.memcheck86:                                ; preds = %for.body9.lr.ph
  %scevgep78 = getelementptr float, float* %56, i64 %57
  %scevgep80 = getelementptr float, float* %54, i64 %57
  %bound082 = icmp ult float* %56, %scevgep80
  %bound183 = icmp ult float* %54, %scevgep78
  %found.conflict84 = and i1 %bound082, %bound183
  br i1 %found.conflict84, label %for.body9.preheader, label %vector.ph87

vector.ph87:                                      ; preds = %vector.memcheck86
  %n.vec89 = and i64 %57, 4294967288
  %58 = add nsw i64 %n.vec89, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %xtraiter = and i64 %60, 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %middle.block74.unr-lcssa, label %vector.ph87.new

vector.ph87.new:                                  ; preds = %vector.ph87
  %unroll_iter = sub nuw nsw i64 %60, %xtraiter
  br label %vector.body73

vector.body73:                                    ; preds = %vector.body73, %vector.ph87.new
  %index90 = phi i64 [ 0, %vector.ph87.new ], [ %index.next91.1, %vector.body73 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph87.new ], [ %niter.nsub.1, %vector.body73 ]
  %62 = getelementptr inbounds float, float* %54, i64 %index90
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load98 = load <4 x float>, <4 x float>* %63, align 4, !tbaa !34, !alias.scope !480
  %64 = getelementptr inbounds float, float* %62, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %65, align 4, !tbaa !34, !alias.scope !480
  %66 = getelementptr inbounds float, float* %56, i64 %index90
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load100 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %68 = getelementptr inbounds float, float* %66, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  %wide.load101 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %70 = fadd <4 x float> %wide.load98, %wide.load100
  %71 = fadd <4 x float> %wide.load99, %wide.load101
  %72 = bitcast float* %66 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %73 = bitcast float* %68 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %index.next91 = or i64 %index90, 8
  %74 = getelementptr inbounds float, float* %54, i64 %index.next91
  %75 = bitcast float* %74 to <4 x float>*
  %wide.load98.1 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !34, !alias.scope !480
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load99.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !34, !alias.scope !480
  %78 = getelementptr inbounds float, float* %56, i64 %index.next91
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load100.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %wide.load101.1 = load <4 x float>, <4 x float>* %81, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %82 = fadd <4 x float> %wide.load98.1, %wide.load100.1
  %83 = fadd <4 x float> %wide.load99.1, %wide.load101.1
  %84 = bitcast float* %78 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %85 = bitcast float* %80 to <4 x float>*
  store <4 x float> %83, <4 x float>* %85, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %index.next91.1 = add i64 %index90, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block74.unr-lcssa, label %vector.body73, !llvm.loop !485

middle.block74.unr-lcssa:                         ; preds = %vector.body73, %vector.ph87
  %index90.unr = phi i64 [ 0, %vector.ph87 ], [ %index.next91.1, %vector.body73 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block74, label %vector.body73.epil

vector.body73.epil:                               ; preds = %middle.block74.unr-lcssa
  %86 = getelementptr inbounds float, float* %54, i64 %index90.unr
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load98.epil = load <4 x float>, <4 x float>* %87, align 4, !tbaa !34, !alias.scope !480
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load99.epil = load <4 x float>, <4 x float>* %89, align 4, !tbaa !34, !alias.scope !480
  %90 = getelementptr inbounds float, float* %56, i64 %index90.unr
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load100.epil = load <4 x float>, <4 x float>* %91, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %92 = getelementptr inbounds float, float* %90, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load101.epil = load <4 x float>, <4 x float>* %93, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %94 = fadd <4 x float> %wide.load98.epil, %wide.load100.epil
  %95 = fadd <4 x float> %wide.load99.epil, %wide.load101.epil
  %96 = bitcast float* %90 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  %97 = bitcast float* %92 to <4 x float>*
  store <4 x float> %95, <4 x float>* %97, align 4, !tbaa !34, !alias.scope !483, !noalias !480
  br label %middle.block74

middle.block74:                                   ; preds = %vector.body73.epil, %middle.block74.unr-lcssa
  %cmp.n93 = icmp eq i64 %n.vec89, %57
  br i1 %cmp.n93, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv60 = phi i64 [ %indvars.iv.next61, %for.body ], [ %indvars.iv60.ph, %for.body.preheader ]
  %98 = load float, float* %m_fFFTScaler, align 8, !tbaa !289
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv60
  %99 = load float, float* %add.ptr.i54, align 4, !tbaa !34
  %mul = fmul float %98, %99
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !34
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %cmp = icmp ult i64 %indvars.iv.next61, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !486

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block74
  %phitmp = zext i32 %53 to i64
  %phitmp67 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup.for.cond.cleanup8_crit_edge
  %100 = phi i8* [ %.pre63, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %55, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp67, %for.cond.cleanup8.loopexit ]
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct undef

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %arrayidx14 = getelementptr inbounds float, float* %56, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !34
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %57
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !487
}

; Function Attrs: nounwind uwtable
define %emptyStruct.26 @overlap_right_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float** in out %resultSample, i64 %bytes_resultSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !287
  %cmp57 = icmp eq i32 %2, 0
  br i1 %cmp57, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !60
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !60
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv59.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep64 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6465 = bitcast float* %scevgep64 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6465, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter97 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter99 = sub nuw nsw i64 %8, %xtraiter97
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !488
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !488
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter100 = phi i64 [ %unroll_iter99, %vector.ph.new ], [ %niter100.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load67 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load67
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load67.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load67.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %index.next.1 = add i64 %index, 16
  %niter100.nsub.1 = add i64 %niter100, -2
  %niter100.ncmp.1 = icmp eq i64 %niter100.nsub.1, 0
  br i1 %niter100.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !493

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod98 = icmp eq i64 %xtraiter97, 0
  br i1 %lcmp.mod98, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !289, !alias.scope !488
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load67.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load67.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !491, !noalias !488
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %arrayidx = getelementptr inbounds float*, float** %resultSample, i64 1
  %50 = bitcast float** %arrayidx to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !27
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !286
  %cmp755 = icmp eq i32 %53, 0
  br i1 %cmp755, label %for.cond.cleanup8, label %for.body9.lr.ph

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i49 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !60
  %55 = load float*, float** %arrayidx, align 8, !tbaa !27
  %56 = zext i32 %53 to i64
  %min.iters.check71 = icmp ult i32 %53, 8
  br i1 %min.iters.check71, label %for.body9.preheader, label %vector.memcheck81

for.body9.preheader:                              ; preds = %middle.block69, %vector.memcheck81, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck81 ], [ 0, %for.body9.lr.ph ], [ %n.vec84, %middle.block69 ]
  br label %for.body9

vector.memcheck81:                                ; preds = %for.body9.lr.ph
  %scevgep73 = getelementptr float, float* %55, i64 %56
  %scevgep75 = getelementptr float, float* %54, i64 %56
  %bound077 = icmp ult float* %55, %scevgep75
  %bound178 = icmp ult float* %54, %scevgep73
  %found.conflict79 = and i1 %bound077, %bound178
  br i1 %found.conflict79, label %for.body9.preheader, label %vector.ph82

vector.ph82:                                      ; preds = %vector.memcheck81
  %n.vec84 = and i64 %56, 4294967288
  %57 = add nsw i64 %n.vec84, -8
  %58 = lshr exact i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %xtraiter = and i64 %59, 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %middle.block69.unr-lcssa, label %vector.ph82.new

vector.ph82.new:                                  ; preds = %vector.ph82
  %unroll_iter = sub nuw nsw i64 %59, %xtraiter
  br label %vector.body68

vector.body68:                                    ; preds = %vector.body68, %vector.ph82.new
  %index85 = phi i64 [ 0, %vector.ph82.new ], [ %index.next86.1, %vector.body68 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph82.new ], [ %niter.nsub.1, %vector.body68 ]
  %61 = getelementptr inbounds float, float* %54, i64 %index85
  %62 = bitcast float* %61 to <4 x float>*
  %wide.load93 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !34, !alias.scope !494
  %63 = getelementptr inbounds float, float* %61, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %64, align 4, !tbaa !34, !alias.scope !494
  %65 = getelementptr inbounds float, float* %55, i64 %index85
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load95 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load96 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %69 = fadd <4 x float> %wide.load93, %wide.load95
  %70 = fadd <4 x float> %wide.load94, %wide.load96
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %index.next86 = or i64 %index85, 8
  %73 = getelementptr inbounds float, float* %54, i64 %index.next86
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load93.1 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !34, !alias.scope !494
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load94.1 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !34, !alias.scope !494
  %77 = getelementptr inbounds float, float* %55, i64 %index.next86
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load95.1 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %79 = getelementptr inbounds float, float* %77, i64 4
  %80 = bitcast float* %79 to <4 x float>*
  %wide.load96.1 = load <4 x float>, <4 x float>* %80, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %81 = fadd <4 x float> %wide.load93.1, %wide.load95.1
  %82 = fadd <4 x float> %wide.load94.1, %wide.load96.1
  %83 = bitcast float* %77 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %84 = bitcast float* %79 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %index.next86.1 = add i64 %index85, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block69.unr-lcssa, label %vector.body68, !llvm.loop !499

middle.block69.unr-lcssa:                         ; preds = %vector.body68, %vector.ph82
  %index85.unr = phi i64 [ 0, %vector.ph82 ], [ %index.next86.1, %vector.body68 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block69, label %vector.body68.epil

vector.body68.epil:                               ; preds = %middle.block69.unr-lcssa
  %85 = getelementptr inbounds float, float* %54, i64 %index85.unr
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load93.epil = load <4 x float>, <4 x float>* %86, align 4, !tbaa !34, !alias.scope !494
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  %wide.load94.epil = load <4 x float>, <4 x float>* %88, align 4, !tbaa !34, !alias.scope !494
  %89 = getelementptr inbounds float, float* %55, i64 %index85.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load95.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load96.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %93 = fadd <4 x float> %wide.load93.epil, %wide.load95.epil
  %94 = fadd <4 x float> %wide.load94.epil, %wide.load96.epil
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !497, !noalias !494
  br label %middle.block69

middle.block69:                                   ; preds = %vector.body68.epil, %middle.block69.unr-lcssa
  %cmp.n88 = icmp eq i64 %n.vec84, %56
  br i1 %cmp.n88, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv59 = phi i64 [ %indvars.iv.next60, %for.body ], [ %indvars.iv59.ph, %for.body.preheader ]
  %97 = load float, float* %m_fFFTScaler, align 8, !tbaa !289
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv59
  %98 = load float, float* %add.ptr.i54, align 4, !tbaa !34
  %mul = fmul float %97, %98
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !34
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1
  %cmp = icmp ult i64 %indvars.iv.next60, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !500

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block69
  %phitmp = zext i32 %53 to i64
  %phitmp62 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup
  %.lcssa = phi i64 [ %phitmp62, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %99 = bitcast float** %_M_start.i52 to i8**
  %100 = load i8*, i8** %99, align 8, !tbaa !60
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !285
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !60
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct.26 undef

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %arrayidx14 = getelementptr inbounds float, float* %55, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !34
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %56
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !501
}

define %emptyStruct.27 @audioDecoding_cloned.15(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.rotatorSet_fxp %rotatorSet_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %0, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %1 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %2 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 4
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder1_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %1, i32 %nSample, float** %channelpart1, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  %4 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 5
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder2_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %3, i32 %nSample, float** %channelpart2, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 2
  %6 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 6
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder3_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %5, i32 %nSample, float** %channelpart3, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %7 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %8 = extractvalue %struct.out.psychoFilter_fxp %psychoFilter_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 3
  %9 = extractvalue %struct.out.rotateOrder1_fxp %rotateOrder1_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %10 = extractvalue %struct.out.rotateOrder2_fxp %rotateOrder2_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %11 = extractvalue %struct.out.rotateOrder3_fxp %rotateOrder3_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %7, %class.CBFormat* %sumBF, i64 %8, i32 %nSample, float** %channelpart1, i64 %9, float** %channelpart2, i64 %10, float** %channelpart3, i64 %11, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %12 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %12, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %13 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %13, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %14 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %14, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %15 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %15, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %16 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %16, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %17 = extractvalue %struct.out.IFFT_left_fxp %IFFT_left_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_left_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct @overlap_left_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %17, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %18 = extractvalue %struct.out.IFFT_right_fxp %IFFT_right_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_right_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct.26 @overlap_right_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %18, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.27 undef
}

define i8* @LaunchDataflowGraph(i8* %data.addr) {
entry:
  %rotator.addr = bitcast i8* %data.addr to %class.CAmbisonicProcessor**
  %rotator = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr
  %nextArg = getelementptr %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, i64 1
  %bytes_rotator.addr = bitcast %class.CAmbisonicProcessor** %nextArg to i64*
  %bytes_rotator = load i64, i64* %bytes_rotator.addr
  %nextArg1 = getelementptr i64, i64* %bytes_rotator.addr, i64 1
  %sumBF.addr = bitcast i64* %nextArg1 to %class.CBFormat**
  %sumBF = load %class.CBFormat*, %class.CBFormat** %sumBF.addr
  %nextArg2 = getelementptr %class.CBFormat*, %class.CBFormat** %sumBF.addr, i64 1
  %bytes_sumBF.addr = bitcast %class.CBFormat** %nextArg2 to i64*
  %bytes_sumBF = load i64, i64* %bytes_sumBF.addr
  %nextArg3 = getelementptr i64, i64* %bytes_sumBF.addr, i64 1
  %zoomer.addr = bitcast i64* %nextArg3 to %class.CAmbisonicZoomer**
  %zoomer = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr
  %nextArg4 = getelementptr %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, i64 1
  %bytes_zoomer.addr = bitcast %class.CAmbisonicZoomer** %nextArg4 to i64*
  %bytes_zoomer = load i64, i64* %bytes_zoomer.addr
  %nextArg5 = getelementptr i64, i64* %bytes_zoomer.addr, i64 1
  %decoder.addr = bitcast i64* %nextArg5 to %class.CAmbisonicBinauralizer**
  %decoder = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr
  %nextArg6 = getelementptr %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, i64 1
  %bytes_decoder.addr = bitcast %class.CAmbisonicBinauralizer** %nextArg6 to i64*
  %bytes_decoder = load i64, i64* %bytes_decoder.addr
  %nextArg7 = getelementptr i64, i64* %bytes_decoder.addr, i64 1
  %resultSample.addr = bitcast i64* %nextArg7 to float***
  %resultSample = load float**, float*** %resultSample.addr
  %nextArg8 = getelementptr float**, float*** %resultSample.addr, i64 1
  %bytes_resultSample.addr = bitcast float*** %nextArg8 to i64*
  %bytes_resultSample = load i64, i64* %bytes_resultSample.addr
  %nextArg9 = getelementptr i64, i64* %bytes_resultSample.addr, i64 1
  %nSample.addr = bitcast i64* %nextArg9 to i32*
  %nSample = load i32, i32* %nSample.addr
  %nextArg10 = getelementptr i32, i32* %nSample.addr, i64 1
  %channelpart1.addr = bitcast i32* %nextArg10 to float***
  %channelpart1 = load float**, float*** %channelpart1.addr
  %nextArg11 = getelementptr float**, float*** %channelpart1.addr, i64 1
  %bytes_channelpart1.addr = bitcast float*** %nextArg11 to i64*
  %bytes_channelpart1 = load i64, i64* %bytes_channelpart1.addr
  %nextArg12 = getelementptr i64, i64* %bytes_channelpart1.addr, i64 1
  %channelpart2.addr = bitcast i64* %nextArg12 to float***
  %channelpart2 = load float**, float*** %channelpart2.addr
  %nextArg13 = getelementptr float**, float*** %channelpart2.addr, i64 1
  %bytes_channelpart2.addr = bitcast float*** %nextArg13 to i64*
  %bytes_channelpart2 = load i64, i64* %bytes_channelpart2.addr
  %nextArg14 = getelementptr i64, i64* %bytes_channelpart2.addr, i64 1
  %channelpart3.addr = bitcast i64* %nextArg14 to float***
  %channelpart3 = load float**, float*** %channelpart3.addr
  %nextArg15 = getelementptr float**, float*** %channelpart3.addr, i64 1
  %bytes_channelpart3.addr = bitcast float*** %nextArg15 to i64*
  %bytes_channelpart3 = load i64, i64* %bytes_channelpart3.addr
  %audioDecoding_cloned.15.output = call %emptyStruct.27 @audioDecoding_cloned.15(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3)
  %audioDecoding_cloned.15.output.addr = bitcast i8* %data.addr to %emptyStruct.27*
  store %emptyStruct.27 %audioDecoding_cloned.15.output, %emptyStruct.27* %audioDecoding_cloned.15.output.addr
  ret i8* null
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noinline noreturn nounwind }
attributes #19 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { cold noreturn nounwind }
attributes #22 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { nounwind }
attributes #25 = { builtin }
attributes #26 = { builtin nounwind }
attributes #27 = { noreturn }
attributes #28 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}
!hpvm_hint_cpu = !{!3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17}
!hpvm_hint_gpu = !{}
!hpvm_hint_cpu_gpu = !{}
!hpvm_hint_cpu_spir = !{}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 9.0.0 (https://gitlab.engr.illinois.edu/llvm/hpvm-release.git f83c355d11be7d011508763fedc67e76d592a636)"}
!3 = !{%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* undef}
!4 = !{%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* undef}
!5 = !{%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* undef}
!6 = !{%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* undef}
!7 = !{%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* undef}
!8 = !{%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* undef}
!9 = !{%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* undef}
!10 = !{%struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* undef}
!11 = !{%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!12 = !{%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!13 = !{%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!14 = !{%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* undef}
!15 = !{%emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64)* undef}
!16 = !{%emptyStruct.26 (%class.CAmbisonicBinauralizer*, i64, float**, i64)* undef}
!17 = !{%emptyStruct.27 (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float**, i64, i32, float**, i64, float**, i64, float**, i64)* undef}
!18 = !{!19, !20, i64 8}
!19 = !{!"_ZTS4HRTF", !20, i64 8, !20, i64 12}
!20 = !{!"int", !21, i64 0}
!21 = !{!"omnipotent char", !22, i64 0}
!22 = !{!"Simple C++ TBAA"}
!23 = !{!19, !20, i64 12}
!24 = !{!25, !25, i64 0}
!25 = !{!"vtable pointer", !22, i64 0}
!26 = !{!20, !20, i64 0}
!27 = !{!28, !28, i64 0}
!28 = !{!"any pointer", !21, i64 0}
!29 = !{!30, !30, i64 0}
!30 = !{!"short", !21, i64 0}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35, !35, i64 0}
!35 = !{!"float", !21, i64 0}
!36 = !{!37}
!37 = distinct !{!37, !33}
!38 = !{!39}
!39 = distinct !{!39, !33}
!40 = !{!41}
!41 = distinct !{!41, !33}
!42 = distinct !{!42, !43}
!43 = !{!"llvm.loop.isvectorized", i32 1}
!44 = distinct !{!44, !43}
!45 = !{!46, !20, i64 8}
!46 = !{!"_ZTS14CAmbisonicBase", !20, i64 8, !47, i64 12, !20, i64 16, !47, i64 20}
!47 = !{!"bool", !21, i64 0}
!48 = !{!46, !47, i64 12}
!49 = !{!46, !20, i64 16}
!50 = !{!46, !47, i64 20}
!51 = !{i8 0, i8 2}
!52 = !{!53, !35, i64 80}
!53 = !{!"_ZTS16CAmbisonicSource", !54, i64 24, !54, i64 48, !55, i64 72, !35, i64 84}
!54 = !{!"_ZTSSt6vectorIfSaIfEE"}
!55 = !{!"_ZTS10PolarPoint", !35, i64 0, !35, i64 4, !35, i64 8}
!56 = !{!53, !35, i64 84}
!57 = !{!58, !28, i64 8}
!58 = !{!"_ZTSSt12_Vector_baseIfSaIfEE", !59, i64 0}
!59 = !{!"_ZTSNSt12_Vector_baseIfSaIfEE12_Vector_implE", !28, i64 0, !28, i64 8, !28, i64 16}
!60 = !{!58, !28, i64 0}
!61 = !{!53, !35, i64 72}
!62 = !{!53, !35, i64 76}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !43}
!69 = distinct !{!69, !43}
!70 = distinct !{!70, !43}
!71 = distinct !{!71, !72}
!72 = !{!"llvm.loop.unroll.disable"}
!73 = distinct !{!73, !74, !43}
!74 = !{!"llvm.loop.unroll.runtime.disable"}
!75 = !{!76, !20, i64 24}
!76 = !{!"_ZTS8CBFormat", !20, i64 24, !20, i64 28, !54, i64 32, !77, i64 56}
!77 = !{!"_ZTSSt10unique_ptrIA_PfSt14default_deleteIS1_EE", !78, i64 0}
!78 = !{!"_ZTSSt5tupleIJPPfSt14default_deleteIA_S0_EEE"}
!79 = !{!76, !20, i64 28}
!80 = distinct !{!80, !72}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !43}
!87 = distinct !{!87, !43}
!88 = !{!89}
!89 = distinct !{!89, !90}
!90 = distinct !{!90, !"LVerDomain"}
!91 = !{!92}
!92 = distinct !{!92, !90}
!93 = distinct !{!93, !43}
!94 = distinct !{!94, !43}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !43}
!101 = distinct !{!101, !43}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !43}
!108 = distinct !{!108, !43}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !43}
!115 = distinct !{!115, !43}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !43}
!122 = distinct !{!122, !43}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !43}
!129 = distinct !{!129, !43}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !43}
!136 = distinct !{!136, !43}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = !{!143}
!143 = distinct !{!143, !139}
!144 = !{!141, !138}
!145 = distinct !{!145, !43}
!146 = distinct !{!146, !72}
!147 = distinct !{!147, !43}
!148 = !{!149, !35, i64 124}
!149 = !{!"_ZTS21CAmbisonicEncoderDist", !20, i64 88, !35, i64 92, !20, i64 96, !20, i64 100, !28, i64 104, !20, i64 112, !20, i64 116, !20, i64 120, !35, i64 124, !35, i64 128, !35, i64 132}
!150 = !{!149, !35, i64 128}
!151 = !{!149, !35, i64 132}
!152 = !{!149, !20, i64 88}
!153 = !{!149, !20, i64 100}
!154 = !{!149, !28, i64 104}
!155 = !{!149, !20, i64 96}
!156 = !{!149, !35, i64 92}
!157 = !{!149, !20, i64 112}
!158 = !{!149, !20, i64 116}
!159 = !{!149, !20, i64 120}
!160 = distinct !{!160, !72}
!161 = !{!162, !35, i64 0}
!162 = !{!"_ZTS11Orientation", !35, i64 0, !35, i64 4, !35, i64 8, !35, i64 12, !35, i64 16, !35, i64 20}
!163 = !{!162, !35, i64 4}
!164 = !{!162, !35, i64 8}
!165 = !{!162, !35, i64 16}
!166 = !{!162, !35, i64 20}
!167 = !{!162, !35, i64 12}
!168 = !{!169, !28, i64 48}
!169 = !{!"_ZTS19CAmbisonicProcessor", !162, i64 24, !28, i64 48, !28, i64 56, !28, i64 64, !28, i64 72, !28, i64 80, !20, i64 88, !20, i64 92, !20, i64 96, !20, i64 100, !20, i64 104, !35, i64 108, !28, i64 112, !28, i64 120, !35, i64 128, !35, i64 132, !35, i64 136, !35, i64 140, !35, i64 144, !35, i64 148, !35, i64 152, !35, i64 156, !35, i64 160, !35, i64 164, !35, i64 168, !35, i64 172, !35, i64 176, !35, i64 180, !35, i64 184, !35, i64 188, !35, i64 192, !35, i64 196}
!170 = !{!169, !28, i64 72}
!171 = !{!169, !28, i64 56}
!172 = !{!169, !28, i64 64}
!173 = !{!169, !28, i64 112}
!174 = !{!169, !28, i64 120}
!175 = !{!169, !28, i64 80}
!176 = !{!169, !20, i64 92}
!177 = !{!169, !20, i64 96}
!178 = !{!169, !20, i64 100}
!179 = !{!169, !20, i64 88}
!180 = !{!169, !20, i64 104}
!181 = !{!169, !35, i64 108}
!182 = !{!183, !28, i64 0}
!183 = !{!"_ZTSSt10_Head_baseILm0EPfLb0EE", !28, i64 0}
!184 = distinct !{!184, !72}
!185 = !{!169, !35, i64 36}
!186 = !{!169, !35, i64 128}
!187 = !{!169, !35, i64 132}
!188 = !{!169, !35, i64 40}
!189 = !{!169, !35, i64 136}
!190 = !{!169, !35, i64 140}
!191 = !{!169, !35, i64 44}
!192 = !{!169, !35, i64 144}
!193 = !{!169, !35, i64 148}
!194 = !{!169, !35, i64 152}
!195 = !{!169, !35, i64 156}
!196 = !{!169, !35, i64 160}
!197 = !{!169, !35, i64 164}
!198 = !{!169, !35, i64 168}
!199 = !{!169, !35, i64 172}
!200 = !{!169, !35, i64 176}
!201 = !{!169, !35, i64 180}
!202 = !{!169, !35, i64 184}
!203 = !{!169, !35, i64 188}
!204 = !{!169, !35, i64 192}
!205 = !{!169, !35, i64 196}
!206 = !{i64 0, i64 4, !34, i64 4, i64 4, !34, i64 8, i64 4, !34, i64 12, i64 4, !34, i64 16, i64 4, !34, i64 20, i64 4, !34}
!207 = !{!208}
!208 = distinct !{!208, !209}
!209 = distinct !{!209, !"LVerDomain"}
!210 = !{!211}
!211 = distinct !{!211, !209}
!212 = distinct !{!212, !43}
!213 = !{!214, !35, i64 0}
!214 = !{!"_ZTS12kiss_fft_cpx", !35, i64 0, !35, i64 4}
!215 = !{!214, !35, i64 4}
!216 = !{!217}
!217 = distinct !{!217, !218}
!218 = distinct !{!218, !"LVerDomain"}
!219 = !{!220}
!220 = distinct !{!220, !218}
!221 = distinct !{!221, !43}
!222 = distinct !{!222, !43}
!223 = distinct !{!223, !43}
!224 = !{!225}
!225 = distinct !{!225, !226}
!226 = distinct !{!226, !"LVerDomain"}
!227 = !{!228}
!228 = distinct !{!228, !226}
!229 = distinct !{!229, !43}
!230 = distinct !{!230, !72}
!231 = distinct !{!231, !43}
!232 = distinct !{!232, !72}
!233 = !{!234}
!234 = distinct !{!234, !235}
!235 = distinct !{!235, !"LVerDomain"}
!236 = !{!237}
!237 = distinct !{!237, !235}
!238 = distinct !{!238, !43}
!239 = distinct !{!239, !43}
!240 = !{!241, !28, i64 32}
!241 = !{!"_ZTS17CAmbisonicDecoder", !20, i64 24, !20, i64 28, !28, i64 32}
!242 = !{!241, !20, i64 24}
!243 = !{!241, !20, i64 28}
!244 = !{!245}
!245 = distinct !{!245, !246}
!246 = distinct !{!246, !"LVerDomain"}
!247 = !{!248}
!248 = distinct !{!248, !246}
!249 = distinct !{!249, !43}
!250 = distinct !{!250, !72}
!251 = distinct !{!251, !43}
!252 = distinct !{!252, !72}
!253 = !{!254}
!254 = distinct !{!254, !255}
!255 = distinct !{!255, !"LVerDomain"}
!256 = !{!257}
!257 = distinct !{!257, !255}
!258 = distinct !{!258, !43}
!259 = distinct !{!259, !43}
!260 = !{!261, !35, i64 92}
!261 = !{!"_ZTS16CAmbisonicZoomer", !241, i64 24, !262, i64 64, !262, i64 72, !262, i64 80, !35, i64 88, !35, i64 92, !35, i64 96, !35, i64 100}
!262 = !{!"_ZTSSt10unique_ptrIA_fSt14default_deleteIS0_EE", !263, i64 0}
!263 = !{!"_ZTSSt5tupleIJPfSt14default_deleteIA_fEEE"}
!264 = !{!261, !35, i64 96}
!265 = !{!261, !35, i64 88}
!266 = !{!261, !35, i64 100}
!267 = distinct !{!267, !72}
!268 = distinct !{!268, !72}
!269 = !{!270, !28, i64 0}
!270 = !{!"_ZTSSt10_Head_baseILm1EPFvPvELb0EE", !28, i64 0}
!271 = !{!272, !28, i64 0}
!272 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !28, i64 0}
!273 = !{!274, !28, i64 0}
!274 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !272, i64 0, !275, i64 8, !21, i64 16}
!275 = !{!"long", !21, i64 0}
!276 = !{!274, !275, i64 8}
!277 = !{!275, !275, i64 0}
!278 = !{!21, !21, i64 0}
!279 = !{!280, !20, i64 68}
!280 = !{!"_ZTS22CAmbisonicBinauralizer", !241, i64 24, !20, i64 64, !20, i64 68, !20, i64 72, !20, i64 76, !35, i64 80, !20, i64 84, !281, i64 88, !281, i64 104, !21, i64 120, !283, i64 168, !54, i64 176, !54, i64 200, !54, i64 224, !21, i64 248}
!281 = !{!"_ZTSSt10unique_ptrI15kiss_fftr_statePFvPvEE", !282, i64 0}
!282 = !{!"_ZTSSt5tupleIJP15kiss_fftr_statePFvPvEEE"}
!283 = !{!"_ZTSSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE", !284, i64 0}
!284 = !{!"_ZTSSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE"}
!285 = !{!280, !20, i64 64}
!286 = !{!280, !20, i64 84}
!287 = !{!280, !20, i64 72}
!288 = !{!280, !20, i64 76}
!289 = !{!280, !35, i64 80}
!290 = !{!291}
!291 = distinct !{!291, !292}
!292 = distinct !{!292, !"LVerDomain"}
!293 = !{!294}
!294 = distinct !{!294, !292}
!295 = distinct !{!295, !43}
!296 = !{!297}
!297 = distinct !{!297, !298}
!298 = distinct !{!298, !"LVerDomain"}
!299 = !{!300}
!300 = distinct !{!300, !298}
!301 = !{!302, !297, !303}
!302 = distinct !{!302, !298}
!303 = distinct !{!303, !298}
!304 = !{!303}
!305 = !{!302}
!306 = !{!297, !303}
!307 = distinct !{!307, !43}
!308 = distinct !{!308, !43}
!309 = distinct !{!309, !43}
!310 = !{!311}
!311 = distinct !{!311, !312}
!312 = distinct !{!312, !"LVerDomain"}
!313 = !{!314}
!314 = distinct !{!314, !312}
!315 = !{!316}
!316 = distinct !{!316, !312}
!317 = !{!311, !314}
!318 = distinct !{!318, !43}
!319 = distinct !{!319, !43}
!320 = distinct !{!320, !72}
!321 = distinct !{!321, !43}
!322 = distinct !{!322, !74, !43}
!323 = !{!324, !28, i64 0}
!324 = !{!"_ZTSSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE", !325, i64 0}
!325 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implE", !28, i64 0, !28, i64 8, !28, i64 16}
!326 = distinct !{!326, !43}
!327 = distinct !{!327, !74, !43}
!328 = !{!329}
!329 = distinct !{!329, !330}
!330 = distinct !{!330, !"LVerDomain"}
!331 = !{!332}
!332 = distinct !{!332, !330}
!333 = distinct !{!333, !43}
!334 = !{!335}
!335 = distinct !{!335, !336}
!336 = distinct !{!336, !"LVerDomain"}
!337 = !{!338}
!338 = distinct !{!338, !336}
!339 = distinct !{!339, !43}
!340 = distinct !{!340, !43}
!341 = distinct !{!341, !43}
!342 = !{!343}
!343 = distinct !{!343, !344}
!344 = distinct !{!344, !"LVerDomain"}
!345 = !{!346}
!346 = distinct !{!346, !344}
!347 = distinct !{!347, !43}
!348 = distinct !{!348, !43}
!349 = !{!350}
!350 = distinct !{!350, !351}
!351 = distinct !{!351, !"LVerDomain"}
!352 = !{!353}
!353 = distinct !{!353, !351}
!354 = distinct !{!354, !43}
!355 = distinct !{!355, !43}
!356 = !{!357}
!357 = distinct !{!357, !358}
!358 = distinct !{!358, !"LVerDomain"}
!359 = !{!360}
!360 = distinct !{!360, !358}
!361 = distinct !{!361, !43}
!362 = distinct !{!362, !43}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = distinct !{!368, !43}
!369 = distinct !{!369, !43}
!370 = !{!371, !28, i64 240}
!371 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !28, i64 216, !21, i64 224, !47, i64 225, !28, i64 232, !28, i64 240, !28, i64 248, !28, i64 256}
!372 = !{!373, !21, i64 56}
!373 = !{!"_ZTSSt5ctypeIcE", !28, i64 16, !47, i64 24, !28, i64 32, !28, i64 40, !28, i64 48, !21, i64 56, !21, i64 57, !21, i64 313, !21, i64 569}
!374 = !{!324, !28, i64 8}
!375 = !{!376, !35, i64 4132}
!376 = !{!"_ZTSN12ILLIXR_AUDIO5SoundE", !28, i64 0, !21, i64 8, !28, i64 4104, !28, i64 4112, !55, i64 4120, !35, i64 4132}
!377 = !{!376, !28, i64 0}
!378 = !{!376, !28, i64 4104}
!379 = !{!376, !28, i64 4112}
!380 = !{!376, !35, i64 4120}
!381 = !{!376, !35, i64 4124}
!382 = !{!376, !35, i64 4128}
!383 = !{!55, !35, i64 0}
!384 = !{!55, !35, i64 4}
!385 = !{!55, !35, i64 8}
!386 = !{!387, !389, i64 32}
!387 = !{!"_ZTSSt8ios_base", !275, i64 8, !275, i64 16, !388, i64 24, !389, i64 28, !389, i64 32, !28, i64 40, !390, i64 48, !21, i64 64, !20, i64 192, !28, i64 200, !391, i64 208}
!388 = !{!"_ZTSSt13_Ios_Fmtflags", !21, i64 0}
!389 = !{!"_ZTSSt12_Ios_Iostate", !21, i64 0}
!390 = !{!"_ZTSNSt8ios_base6_WordsE", !28, i64 0, !275, i64 8}
!391 = !{!"_ZTSSt6locale", !28, i64 0}
!392 = !{!393, !394, i64 0}
!393 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudioE", !394, i64 0, !28, i64 8, !28, i64 16, !28, i64 24, !28, i64 32, !28, i64 40}
!394 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudio11ProcessTypeE", !21, i64 0}
!395 = !{!393, !28, i64 16}
!396 = !{!397, !20, i64 16}
!397 = !{!"_ZTSN12ILLIXR_AUDIO11WAVHeader_tE", !20, i64 0, !20, i64 4, !20, i64 8, !20, i64 12, !20, i64 16, !30, i64 20, !30, i64 22, !20, i64 24, !20, i64 28, !30, i64 32, !30, i64 34, !20, i64 36, !20, i64 40}
!398 = !{!397, !30, i64 20}
!399 = !{!397, !30, i64 22}
!400 = !{!397, !20, i64 24}
!401 = !{!397, !20, i64 28}
!402 = !{!397, !30, i64 32}
!403 = !{!397, !30, i64 34}
!404 = !{!397, !20, i64 36}
!405 = !{!397, !20, i64 40}
!406 = !{!393, !28, i64 8}
!407 = !{!393, !28, i64 24}
!408 = !{!393, !28, i64 32}
!409 = !{!393, !28, i64 40}
!410 = !{!411, !28, i64 8}
!411 = !{!"_ZTSSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE", !412, i64 0}
!412 = !{!"_ZTSNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implE", !28, i64 0, !28, i64 8, !28, i64 16}
!413 = !{!411, !28, i64 0}
!414 = !{!411, !28, i64 16}
!415 = !{!416}
!416 = distinct !{!416, !417}
!417 = distinct !{!417, !"LVerDomain"}
!418 = !{!419}
!419 = distinct !{!419, !417}
!420 = distinct !{!420, !43}
!421 = distinct !{!421, !72}
!422 = distinct !{!422, !43}
!423 = distinct !{!423, !72}
!424 = !{!425, !28, i64 0}
!425 = !{!"_ZTS7RootArg", !28, i64 0, !275, i64 8, !28, i64 16, !275, i64 24, !28, i64 32, !275, i64 40, !28, i64 48, !275, i64 56, !28, i64 64, !275, i64 72, !20, i64 80, !28, i64 84, !275, i64 92, !28, i64 100, !275, i64 108, !28, i64 116, !275, i64 124}
!426 = !{!425, !275, i64 8}
!427 = !{!425, !28, i64 16}
!428 = !{!425, !275, i64 24}
!429 = !{!425, !28, i64 32}
!430 = !{!425, !275, i64 40}
!431 = !{!425, !28, i64 48}
!432 = !{!425, !275, i64 56}
!433 = !{!425, !28, i64 64}
!434 = !{!425, !275, i64 72}
!435 = !{!425, !20, i64 80}
!436 = !{!425, !28, i64 84}
!437 = !{!425, !275, i64 92}
!438 = !{!425, !28, i64 100}
!439 = !{!425, !275, i64 108}
!440 = !{!425, !28, i64 116}
!441 = !{!425, !275, i64 124}
!442 = !{!58, !28, i64 16}
!443 = distinct !{!443, !43}
!444 = distinct !{!444, !72}
!445 = distinct !{!445, !74, !43}
!446 = distinct !{!446, !43}
!447 = distinct !{!447, !72}
!448 = distinct !{!448, !74, !43}
!449 = distinct !{!449, !43}
!450 = distinct !{!450, !72}
!451 = distinct !{!451, !74, !43}
!452 = distinct !{!452, !43}
!453 = distinct !{!453, !72}
!454 = distinct !{!454, !74, !43}
!455 = !{!324, !28, i64 16}
!456 = !{!457, !28, i64 0}
!457 = !{!"_ZTSSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE", !28, i64 0}
!458 = distinct !{!458, !72}
!459 = distinct !{!459, !72}
!460 = !{!461}
!461 = distinct !{!461, !462}
!462 = distinct !{!462, !"LVerDomain"}
!463 = !{!464}
!464 = distinct !{!464, !462}
!465 = distinct !{!465, !43}
!466 = distinct !{!466, !43}
!467 = !{!468}
!468 = distinct !{!468, !469}
!469 = distinct !{!469, !"LVerDomain"}
!470 = !{!471}
!471 = distinct !{!471, !469}
!472 = distinct !{!472, !43}
!473 = distinct !{!473, !43}
!474 = !{!475}
!475 = distinct !{!475, !476}
!476 = distinct !{!476, !"LVerDomain"}
!477 = !{!478}
!478 = distinct !{!478, !476}
!479 = distinct !{!479, !43}
!480 = !{!481}
!481 = distinct !{!481, !482}
!482 = distinct !{!482, !"LVerDomain"}
!483 = !{!484}
!484 = distinct !{!484, !482}
!485 = distinct !{!485, !43}
!486 = distinct !{!486, !43}
!487 = distinct !{!487, !43}
!488 = !{!489}
!489 = distinct !{!489, !490}
!490 = distinct !{!490, !"LVerDomain"}
!491 = !{!492}
!492 = distinct !{!492, !490}
!493 = distinct !{!493, !43}
!494 = !{!495}
!495 = distinct !{!495, !496}
!496 = distinct !{!496, !"LVerDomain"}
!497 = !{!498}
!498 = distinct !{!498, !496}
!499 = distinct !{!499, !43}
!500 = distinct !{!500, !43}
!501 = distinct !{!501, !43}
