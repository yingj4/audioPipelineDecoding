/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -S build/seq/main.hpvm.ll -o build/seq/audioDecoding-seq.host.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -S build/seq/main.hpvm.ll -o build/seq/audioDecoding-seq.host.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %cleanup
	discovered a new reachable node %_ZNSt6vectorIsSaIsEED2Ev.exit75
	discovered a new reachable node %_ZNSt6vectorIsSaIsEED2Ev.exit75.1
	discovered a new reachable node %if.then.i.i.i74.1
	discovered a new reachable node %if.then.i.i.i74
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %vector.body
	discovered a new reachable node %middle.block
	discovered a new reachable node %lpad17
	discovered a new reachable node %_ZNSt6vectorIsSaIsEED2Ev.exit
	discovered a new reachable node %ehcleanup56
	discovered a new reachable node %if.then.i.i.i.1
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %cond.true.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %cond.true.i.i.i.i77
	discovered a new reachable node %for.body.i.i.preheader.i.i.i.i.i85
	discovered a new reachable node %_ZNSt6vectorIsSaIsEED2Ev.exit95
	discovered a new reachable node %ehcleanup.thread
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
	discovered a new reachable node %if.then.i11
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16
	discovered a new reachable node %if.else.i13
	discovered a new reachable node %if.then9.i15
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then9.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.body.epil
	discovered a new reachable node %for.body.lr.ph.new
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc9_crit_edge.us
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.body4.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.end9.i
	discovered a new reachable node %call12.i.noexc
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN21CAmbisonicEncoderDistD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.cond18.for.end_crit_edge.us.unr-lcssa
	discovered a new reachable node %for.cond18.for.end_crit_edge.us
	discovered a new reachable node %for.cond.for.end44_crit_edge
	discovered a new reachable node %for.body20.us.epil
	discovered a new reachable node %for.body20.us
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.else22
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.end13
	discovered a new reachable node %if.end17
	discovered a new reachable node %if.end34
	discovered a new reachable node %if.end41
	discovered a new reachable node %if.end68
	discovered a new reachable node %for.cond45.preheader
	discovered a new reachable node %delete.notnull66
	discovered a new reachable node %for.body48
	discovered a new reachable node %for.inc61
	discovered a new reachable node %for.cond.cleanup47
	discovered a new reachable node %delete.notnull58
	discovered a new reachable node %delete.notnull39
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.notnull32
	discovered a new reachable node %delete.notnull27
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.then11
	discovered a new reachable node %delete.notnull7
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup49
	discovered a new reachable node %for.body68
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i266
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i
	discovered a new reachable node %.noexc
	discovered a new reachable node %invoke.cont72
	discovered a new reachable node %for.cond.cleanup67
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %invoke.cont79
	discovered a new reachable node %invoke.cont82
	discovered a new reachable node %for.cond90.preheader
	discovered a new reachable node %for.cond90.preheader.for.cond.cleanup93_crit_edge
	discovered a new reachable node %for.cond.cleanup93
	discovered a new reachable node %for.inc211
	discovered a new reachable node %for.cond.cleanup87
	discovered a new reachable node %invoke.cont.i284
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286
	discovered a new reachable node %if.then.i.i.i285
	discovered a new reachable node %for.body.i.i.i.i276
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277
	discovered a new reachable node %lpad209
	discovered a new reachable node %ehcleanup214
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i
	discovered a new reachable node %for.body94.lr.ph
	discovered a new reachable node %for.body94.us
	discovered a new reachable node %for.inc185.us
	discovered a new reachable node %sw.bb141.us
	discovered a new reachable node %for.inc185.us.sink.split
	discovered a new reachable node %sw.bb155.us
	discovered a new reachable node %sw.bb169.us
	discovered a new reachable node %for.body94
	discovered a new reachable node %for.inc185
	discovered a new reachable node %sw.bb
	discovered a new reachable node %for.inc185.sink.split
	discovered a new reachable node %sw.bb112
	discovered a new reachable node %sw.bb126
	discovered a new reachable node %lpad76
	discovered a new reachable node %invoke.cont72.for.body68_crit_edge
	discovered a new reachable node %if.then.i64.i
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i.prol.loopexit
	discovered a new reachable node %invoke.cont8.i
	discovered a new reachable node %for.body.i.i.i70.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i
	discovered a new reachable node %call2.i.i.i.i.noexc
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then.i
	discovered a new reachable node %for.body50.for.body50_crit_edge
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end11
	discovered a new reachable node %if.end3
	discovered a new reachable node %if.end7
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup18
	discovered a new reachable node %for.cond.cleanup18.for.cond.cleanup73_crit_edge
	discovered a new reachable node %for.cond.cleanup73
	discovered a new reachable node %for.cond.cleanup73.for.cond.cleanup92_crit_edge
	discovered a new reachable node %for.cond.cleanup92
	discovered a new reachable node %for.body93.lr.ph
	discovered a new reachable node %for.body93.preheader
	discovered a new reachable node %for.body93
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body74.lr.ph
	discovered a new reachable node %for.body74.preheader
	discovered a new reachable node %for.body74
	discovered a new reachable node %vector.memcheck199
	discovered a new reachable node %vector.ph200
	discovered a new reachable node %middle.block187.unr-lcssa
	discovered a new reachable node %middle.block187
	discovered a new reachable node %vector.body186.epil
	discovered a new reachable node %vector.ph200.new
	discovered a new reachable node %vector.body186
	discovered a new reachable node %for.body19.lr.ph
	discovered a new reachable node %for.body19
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end34
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body24.us.preheader
	discovered a new reachable node %for.body24.us.preheader179
	discovered a new reachable node %for.body24.us.prol.loopexit
	discovered a new reachable node %if.end.us
	discovered a new reachable node %for.body24.us
	discovered a new reachable node %for.body24.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %for.body13.us.prol
	discovered a new reachable node %vector.memcheck149
	discovered a new reachable node %vector.ph150
	discovered a new reachable node %middle.block137.unr-lcssa
	discovered a new reachable node %middle.block137
	discovered a new reachable node %vector.body136.epil
	discovered a new reachable node %vector.body136
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %sw.default
	discovered a new reachable node %if.then.i.i.i1764
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
	discovered a new reachable node %if.then.i11.i.i1778
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783
	discovered a new reachable node %sw.epilog
	discovered a new reachable node %for.end1278
	discovered a new reachable node %for.body1270
	discovered a new reachable node %if.else.i13.i.i1780
	discovered a new reachable node %if.then9.i15.i.i1782
	discovered a new reachable node %if.else.i.i.i1766
	discovered a new reachable node %if.then9.i.i.i1768
	discovered a new reachable node %sw.bb
	discovered a new reachable node %arrayctor.cont.thread
	discovered a new reachable node %new.ctorloop
	discovered a new reachable node %arrayctor.loop
	discovered a new reachable node %arrayctor.cont
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.for.body_crit_edge
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb103
	discovered a new reachable node %sw.bb170
	discovered a new reachable node %sw.bb252
	discovered a new reachable node %for.body374.lr.ph
	discovered a new reachable node %for.body374
	discovered a new reachable node %for.body423.lr.ph
	discovered a new reachable node %for.body423
	discovered a new reachable node %for.body475.lr.ph
	discovered a new reachable node %for.body475
	discovered a new reachable node %for.body527.lr.ph
	discovered a new reachable node %for.body527
	discovered a new reachable node %for.body579.lr.ph
	discovered a new reachable node %for.body579
	discovered a new reachable node %for.body631.lr.ph
	discovered a new reachable node %for.body631
	discovered a new reachable node %sw.bb658
	discovered a new reachable node %for.end713
	discovered a new reachable node %for.body721.lr.ph
	discovered a new reachable node %for.body721
	discovered a new reachable node %for.body685.lr.ph
	discovered a new reachable node %for.body685
	discovered a new reachable node %sw.bb751
	discovered a new reachable node %sw.bb1087
	discovered a new reachable node %for.end1143
	discovered a new reachable node %for.body1151.lr.ph
	discovered a new reachable node %for.body1151
	discovered a new reachable node %for.body1115.lr.ph
	discovered a new reachable node %for.body1115
	discovered a new reachable node %sw.bb1181
	discovered a new reachable node %for.body1208.lr.ph
	discovered a new reachable node %for.body1208
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.us.i
	discovered a new reachable node %for.body24.us.preheader.i
	discovered a new reachable node %for.body24.us.i.preheader
	discovered a new reachable node %for.body24.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.i
	discovered a new reachable node %for.body24.us.i
	discovered a new reachable node %for.body24.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112.i
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %for.body13.us.i.prol
	discovered a new reachable node %vector.memcheck47
	discovered a new reachable node %vector.ph48
	discovered a new reachable node %middle.block35.unr-lcssa
	discovered a new reachable node %middle.block35
	discovered a new reachable node %vector.body34.epil
	discovered a new reachable node %vector.body34
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92
	discovered a new reachable node %for.cond34.preheader
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body38.lr.ph
	discovered a new reachable node %for.body38
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i104.preheader
	discovered a new reachable node %for.body.i104
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit105
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit116
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit142
	discovered a new reachable node %for.body.i141
	discovered a new reachable node %for.cond.cleanup.loopexit.i134
	discovered a new reachable node %for.body.i115
	discovered a new reachable node %for.cond.cleanup.loopexit.i108
	discovered a new reachable node %for.body.i94
	discovered a new reachable node %for.cond.cleanup.loopexit.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i91
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i88
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup.loopexit
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.preheader
	discovered a new reachable node %for.cond.cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.cond.cleanup12.epil
	discovered a new reachable node %for.cond2.preheader.preheader.new
	discovered a new reachable node %for.cond.cleanup12
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body13.us.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.inc52.us
	discovered a new reachable node %for.cond.cleanup12.us
	discovered a new reachable node %if.else.us
	discovered a new reachable node %for.body5.us.epil
	discovered a new reachable node %for.body5.us
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i.i.i.i
	discovered a new reachable node %if.then4.i.i.i.i
	discovered a new reachable node %if.end6.i.i.i.i
	discovered a new reachable node %if.end.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %cleanup307
	discovered a new reachable node %if.end
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond52.preheader.thread
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %invoke.cont126
	discovered a new reachable node %invoke.cont129
	discovered a new reachable node %invoke.cont139
	discovered a new reachable node %for.cond166.preheader
	discovered a new reachable node %for.end181
	discovered a new reachable node %for.cond211.preheader
	discovered a new reachable node %for.inc248.1
	discovered a new reachable node %for.inc259
	discovered a new reachable node %for.inc259.1
	discovered a new reachable node %for.inc284
	discovered a new reachable node %for.inc284.1
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i455
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit457
	discovered a new reachable node %cleanup301
	discovered a new reachable node %if.then.i.i.i4.i.i456
	discovered a new reachable node %if.then.i.i.i.i.i452
	discovered a new reachable node %for.body268.1
	discovered a new reachable node %for.inc276.1
	discovered a new reachable node %delete.notnull274.1
	discovered a new reachable node %for.body268
	discovered a new reachable node %for.inc276
	discovered a new reachable node %delete.notnull274
	discovered a new reachable node %delete.notnull257.1
	discovered a new reachable node %delete.notnull257
	discovered a new reachable node %for.body217.lr.ph
	discovered a new reachable node %for.body217
	discovered a new reachable node %for.inc245
	discovered a new reachable node %for.inc245.for.body217_crit_edge
	discovered a new reachable node %for.inc248
	discovered a new reachable node %for.body217.lr.ph.1
	discovered a new reachable node %for.body217.1
	discovered a new reachable node %for.inc245.1
	discovered a new reachable node %lpad243.loopexit.split-lp
	discovered a new reachable node %ehcleanup296
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %ehcleanup308
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %lpad243.loopexit
	discovered a new reachable node %for.cond191.preheader.us.us.preheader
	discovered a new reachable node %for.cond191.preheader.us.us
	discovered a new reachable node %for.body194.us.us.preheader
	discovered a new reachable node %for.body194.us.us
	discovered a new reachable node %for.cond191.for.inc205_crit_edge.us.us
	discovered a new reachable node %for.cond191.preheader.us.us.preheader.1
	discovered a new reachable node %for.cond191.preheader.us.us.1
	discovered a new reachable node %for.body194.us.us.1.preheader
	discovered a new reachable node %for.body194.us.us.1
	discovered a new reachable node %for.cond191.for.inc205_crit_edge.us.us.1
	discovered a new reachable node %vector.ph737
	discovered a new reachable node %middle.block734.unr-lcssa
	discovered a new reachable node %middle.block734
	discovered a new reachable node %vector.body733.epil
	discovered a new reachable node %vector.body733
	discovered a new reachable node %vector.ph716
	discovered a new reachable node %middle.block713.unr-lcssa
	discovered a new reachable node %middle.block713
	discovered a new reachable node %vector.body712.epil
	discovered a new reachable node %vector.body712
	discovered a new reachable node %for.body169.preheader
	discovered a new reachable node %for.end181.loopexit.unr-lcssa
	discovered a new reachable node %for.body169.epil
	discovered a new reachable node %for.body169.preheader.new
	discovered a new reachable node %for.body169
	discovered a new reachable node %for.cond145.preheader.lr.ph
	discovered a new reachable node %for.cond145.preheader.us.preheader
	discovered a new reachable node %for.cond145.preheader.us
	discovered a new reachable node %for.body148.us.preheader
	discovered a new reachable node %for.body148.us.prol.loopexit
	discovered a new reachable node %for.cond145.for.inc163_crit_edge.us
	discovered a new reachable node %for.body148.us
	discovered a new reachable node %for.body148.us.prol
	discovered a new reachable node %vector.memcheck696
	discovered a new reachable node %vector.ph697
	discovered a new reachable node %vector.body678
	discovered a new reachable node %middle.block679
	discovered a new reachable node %lpad138
	discovered a new reachable node %lpad128
	discovered a new reachable node %lpad125
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %for.body30.us.preheader
	discovered a new reachable node %for.body38.us
	discovered a new reachable node %for.cond35.for.inc49_crit_edge.us
	discovered a new reachable node %for.body38.us.1
	discovered a new reachable node %for.cond52.preheader
	discovered a new reachable node %for.cond56.preheader.lr.ph
	discovered a new reachable node %for.cond56.preheader
	discovered a new reachable node %for.inc120
	discovered a new reachable node %for.body58.lr.ph
	discovered a new reachable node %for.body58
	discovered a new reachable node %if.end67
	discovered a new reachable node %for.inc117
	discovered a new reachable node %for.inc120.loopexit
	discovered a new reachable node %for.body79.lr.ph
	discovered a new reachable node %for.body79.preheader
	discovered a new reachable node %for.body79
	discovered a new reachable node %for.cond91.preheader
	discovered a new reachable node %for.body94.lr.ph
	discovered a new reachable node %for.body94.preheader
	discovered a new reachable node %for.body94.prol.loopexit
	discovered a new reachable node %for.body94
	discovered a new reachable node %for.body94.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %vector.memcheck658
	discovered a new reachable node %vector.ph659
	discovered a new reachable node %middle.block646.unr-lcssa
	discovered a new reachable node %middle.block646
	discovered a new reachable node %vector.body645.epil
	discovered a new reachable node %vector.ph659.new
	discovered a new reachable node %vector.body645
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad.i
	discovered a new reachable node %lpad.body
	discovered a new reachable node %if.then.i.i433
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %cleanup
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond351.preheader_crit_edge
	discovered a new reachable node %for.cond351.preheader
	discovered a new reachable node %for.cond351.preheader.for.end362_crit_edge
	discovered a new reachable node %for.end362
	discovered a new reachable node %for.end362.for.end386_crit_edge
	discovered a new reachable node %for.end386
	discovered a new reachable node %for.end386.for.cond351.preheader.1_crit_edge
	discovered a new reachable node %for.cond351.preheader.1
	discovered a new reachable node %for.cond351.preheader.1.for.end362.1_crit_edge
	discovered a new reachable node %for.end362.1
	discovered a new reachable node %for.end362.1.for.end386.1_crit_edge
	discovered a new reachable node %for.end386.1
	discovered a new reachable node %for.body373.lr.ph.1
	discovered a new reachable node %for.body373.1.preheader
	discovered a new reachable node %for.body373.1
	discovered a new reachable node %for.end386.loopexit.1
	discovered a new reachable node %vector.memcheck741
	discovered a new reachable node %vector.ph742
	discovered a new reachable node %middle.block729.unr-lcssa
	discovered a new reachable node %middle.block729
	discovered a new reachable node %vector.body728.epil
	discovered a new reachable node %vector.ph742.new
	discovered a new reachable node %vector.body728
	discovered a new reachable node %for.body354.lr.ph.1
	discovered a new reachable node %for.body354.1.preheader
	discovered a new reachable node %for.body354.1
	discovered a new reachable node %vector.memcheck714
	discovered a new reachable node %vector.ph715
	discovered a new reachable node %middle.block700.unr-lcssa
	discovered a new reachable node %middle.block700
	discovered a new reachable node %vector.body699.epil
	discovered a new reachable node %vector.ph715.new
	discovered a new reachable node %vector.body699
	discovered a new reachable node %for.body228.lr.ph.1
	discovered a new reachable node %for.body228.1
	discovered a new reachable node %for.end323.1
	discovered a new reachable node %for.inc348.1
	discovered a new reachable node %for.body335.lr.ph.1
	discovered a new reachable node %for.body335.1.preheader
	discovered a new reachable node %for.body335.1
	discovered a new reachable node %vector.memcheck683
	discovered a new reachable node %vector.ph684
	discovered a new reachable node %middle.block671.unr-lcssa
	discovered a new reachable node %middle.block671
	discovered a new reachable node %vector.body670.epil
	discovered a new reachable node %vector.ph684.new
	discovered a new reachable node %vector.body670
	discovered a new reachable node %for.body261.lr.ph.1
	discovered a new reachable node %for.body261.1
	discovered a new reachable node %for.body373.lr.ph
	discovered a new reachable node %for.body373.preheader
	discovered a new reachable node %for.body373
	discovered a new reachable node %for.end386.loopexit
	discovered a new reachable node %vector.memcheck654
	discovered a new reachable node %vector.ph655
	discovered a new reachable node %middle.block642.unr-lcssa
	discovered a new reachable node %middle.block642
	discovered a new reachable node %vector.body641.epil
	discovered a new reachable node %vector.ph655.new
	discovered a new reachable node %vector.body641
	discovered a new reachable node %for.body354.lr.ph
	discovered a new reachable node %for.body354.preheader
	discovered a new reachable node %for.body354
	discovered a new reachable node %vector.memcheck627
	discovered a new reachable node %vector.ph628
	discovered a new reachable node %middle.block615.unr-lcssa
	discovered a new reachable node %middle.block615
	discovered a new reachable node %vector.body614.epil
	discovered a new reachable node %vector.ph628.new
	discovered a new reachable node %vector.body614
	discovered a new reachable node %for.body228.lr.ph
	discovered a new reachable node %for.body228
	discovered a new reachable node %for.end323
	discovered a new reachable node %for.inc348
	discovered a new reachable node %for.body335.lr.ph
	discovered a new reachable node %for.body335.preheader
	discovered a new reachable node %for.body335
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body261.lr.ph
	discovered a new reachable node %for.body261
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i48
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
	discovered a new reachable node %if.end.i
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i51
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
	discovered a new reachable node %if.end.i44
	discovered a new reachable node %if.then.i40
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %if.then.i62
	discovered a new reachable node %_ZNSt6vectorIS_IfSaIfEESaIS1_EE6resizeEm.exit
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %if.then.i72
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit77
	discovered a new reachable node %if.then.i83
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit88
	discovered a new reachable node %if.then.i94
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit99
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit107
	discovered a new reachable node %if.then.i126
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
	discovered a new reachable node %for.cond.cleanup29
	discovered a new reachable node %if.then.i126.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
	discovered a new reachable node %for.cond.cleanup29.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %for.body30.lr.ph.1
	discovered a new reachable node %for.body30.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit140.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i139.1
	discovered a new reachable node %if.else.i128.1
	discovered a new reachable node %if.then5.i131.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1
	discovered a new reachable node %for.body.i.i.i.i.i133.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1
	discovered a new reachable node %for.body30.lr.ph
	discovered a new reachable node %for.body30
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit140
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i139
	discovered a new reachable node %if.else.i128
	discovered a new reachable node %if.then5.i131
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i
	discovered a new reachable node %for.body.i.i.i.i.i133
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i
	discovered a new reachable node %if.then.i105
	discovered a new reachable node %terminate.lpad.i106
	discovered a new reachable node %if.then.i101
	discovered a new reachable node %terminate.lpad.i
	discovered a new reachable node %if.else.i96
	discovered a new reachable node %if.then5.i98
	discovered a new reachable node %if.else.i85
	discovered a new reachable node %if.then5.i87
	discovered a new reachable node %if.else.i74
	discovered a new reachable node %if.then5.i76
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then.i114
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit119
	discovered a new reachable node %if.else.i116
	discovered a new reachable node %if.then5.i118
	discovered a new reachable node %if.else.i64
	discovered a new reachable node %if.then5.i66
	discovered a new reachable node %_ZNSt6vectorIS_IfSaIfEESaIS1_EE15_M_erase_at_endEPS1_.exit.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.then.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont16
	discovered a new reachable node %land.rhs
	discovered a new reachable node %cleanup.action.critedge
	discovered a new reachable node %cleanup.done41
	discovered a new reachable node %invoke.cont59
	discovered a new reachable node %if.then.i.i103
	discovered a new reachable node %if.then.i.i98
	discovered a new reachable node %lpad27
	discovered a new reachable node %ehcleanup46
	discovered a new reachable node %ehcleanup65
	discovered a new reachable node %eh.resume
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %if.then.i.i77
	discovered a new reachable node %lpad15
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %call5.i.i.i9.i.noexc
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i.i
	discovered a new reachable node %invoke.cont8.i.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
	discovered a new reachable node %call5.i.i.i9.i.noexc79
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	discovered a new reachable node %if.else.i115
	discovered a new reachable node %invoke.cont.i.i129
	discovered a new reachable node %invoke.cont8.i.i134
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137
	discovered a new reachable node %if.end.sink.split
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then.i63.i.i135
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i130
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122
	discovered a new reachable node %if.then.i104
	discovered a new reachable node %if.then.i.i85
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %if.then.i.i147
	discovered a new reachable node %lpad9
	discovered a new reachable node %if.then.i63.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.then.i.i65
	discovered a new reachable node %lpad2
	discovered a new reachable node %if.then.i.i142
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %call5.i.i.i9.i.noexc161
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	discovered a new reachable node %if.else.i197
	discovered a new reachable node %invoke.cont.i.i211
	discovered a new reachable node %invoke.cont8.i.i216
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
	discovered a new reachable node %if.then.i63.i.i217
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i212
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204
	discovered a new reachable node %if.then.i186
	discovered a new reachable node %if.then.i.i167
	discovered a new reachable node %lpad31
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.then9
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %if.end13
	discovered a new reachable node %if.then16
	discovered a new reachable node %if.end18
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull25
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %delete.notnull22
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit45
	discovered a new reachable node %if.then.i.i.i.i44
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i40
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i
	discovered a new reachable node %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.else
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body4.us.i.preheader
	discovered a new reachable node %for.body4.us.i.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us.i
	discovered a new reachable node %for.body4.us.i
	discovered a new reachable node %for.body4.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %if.end3.i
	discovered a new reachable node %if.end7.i
	discovered a new reachable node %if.then10.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	discovered a new reachable node %return
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont13
	discovered a new reachable node %invoke.cont16
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %invoke.cont24
	discovered a new reachable node %invoke.cont27
	discovered a new reachable node %invoke.cont29
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %invoke.cont35
	discovered a new reachable node %invoke.cont39
	discovered a new reachable node %invoke.cont41
	discovered a new reachable node %invoke.cont44
	discovered a new reachable node %invoke.cont47
	discovered a new reachable node %invoke.cont50
	discovered a new reachable node %invoke.cont53
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont59
	discovered a new reachable node %invoke.cont62
	discovered a new reachable node %invoke.cont65
	discovered a new reachable node %invoke.cont68
	discovered a new reachable node %invoke.cont71
	discovered a new reachable node %invoke.cont74
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %lpad56
	discovered a new reachable node %ehcleanup131
	discovered a new reachable node %ehcleanup132
	discovered a new reachable node %lpad38
	discovered a new reachable node %lpad26
	discovered a new reachable node %lpad18
	discovered a new reachable node %lpad15
	discovered a new reachable node %lpad12
	discovered a new reachable node %lpad10
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad7
	discovered a new reachable node %if.then.i.i280
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit5
	discovered a new reachable node %if.then.i.i.i4
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i8
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i4
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.1
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit12
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorIS_IfSaIfEESaIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit19
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i30
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i30.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit39
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i37
	discovered a new reachable node %lpad.i38
	discovered a new reachable node %if.then.i
	discovered a new reachable node %lpad.i
	discovered a new reachable node %if.then.i.i.i31.1
	discovered a new reachable node %for.body.i.i.i.i24.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
	discovered a new reachable node %invoke.cont.loopexit.i28.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1
	discovered a new reachable node %if.then.i.i.i31
	discovered a new reachable node %for.body.i.i.i.i24
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %invoke.cont.loopexit.i28
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %if.then.i.i.i18
	discovered a new reachable node %if.then.i.i.i14
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i.i
	discovered a new reachable node %invoke.cont.loopexit.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.then.i.i.i11
	discovered a new reachable node %if.then.i.i.i.1
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then.i169
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148
	discovered a new reachable node %if.then.i147
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i154
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i161
	discovered a new reachable node %vector.ph266
	discovered a new reachable node %middle.block263.unr-lcssa
	discovered a new reachable node %middle.block263
	discovered a new reachable node %vector.body262.epil
	discovered a new reachable node %vector.ph266.new
	discovered a new reachable node %vector.body262
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
	discovered a new reachable node %for.body.i.i196.preheader
	discovered a new reachable node %for.body.i.i196.preheader287
	discovered a new reachable node %for.body.i.i196
	discovered a new reachable node %vector.ph248
	discovered a new reachable node %middle.block245.unr-lcssa
	discovered a new reachable node %middle.block245
	discovered a new reachable node %vector.body244.epil
	discovered a new reachable node %vector.ph248.new
	discovered a new reachable node %vector.body244
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else
	discovered a new reachable node %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
	discovered a new reachable node %for.body.i.i.preheader
	discovered a new reachable node %for.body.i.i.preheader288
	discovered a new reachable node %for.body.i.i
	discovered a new reachable node %vector.ph230
	discovered a new reachable node %middle.block225.unr-lcssa
	discovered a new reachable node %middle.block225
	discovered a new reachable node %vector.body224.epil
	discovered a new reachable node %vector.ph230.new
	discovered a new reachable node %vector.body224
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i179
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader290
	discovered a new reachable node %for.body.i.i.i.i.i189
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i73
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIS_IfSaIfEESaIS1_EE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit87
	discovered a new reachable node %_ZNSt12_Vector_baseISt6vectorIfSaIfEESaIS2_EE13_M_deallocateEPS2_m.exit77
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i76
	discovered a new reachable node %for.body.i.i.i82
	discovered a new reachable node %_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_.exit.i.i.i86
	discovered a new reachable node %_ZSt8_DestroyIPSt6vectorIfSaIfEES2_EvT_S4_RSaIT0_E.exit87thread-pre-split
	discovered a new reachable node %if.then.i.i.i.i.i.i.i83
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt6vectorIfSaIfEEEE8allocateERS3_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPSt6vectorIfSaIfEEmS2_ET_S4_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i76
	discovered a new reachable node %for.body.i.i.i82
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83
	discovered a new reachable node %for.body.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.prol.loopexit
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then3
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end157
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end339
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader.us.preheader
	discovered a new reachable node %for.cond1.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond1.for.cond.cleanup3_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader.us.preheader
	discovered a new reachable node %for.cond1.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond1.for.cond.cleanup3_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup.loopexit
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup.loopexit
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry

BUILDDFG PASS
-------- Searching for launch sites ----------
Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN8MIT_HRTFC2Ej
Function: mit_hrtf_availability
Function: __gxx_personality_v0
Function: _ZN8MIT_HRTF3getEffPPf
Function: llvm.lifetime.start.p0i8
Function: _Z16RadiansToDegreesf
Function: llvm.lifetime.end.p0i8
Function: mit_hrtf_get
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: sqrt
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN19CAmbisonicProcessorC2Ev
Function: _ZN11OrientationC2Efff
Function: _ZN19CAmbisonicProcessorD2Ev
Function: free
Function: _ZN19CAmbisonicProcessorD0Ev
Function: _ZN19CAmbisonicProcessor9ConfigureEjbjj
Function: kiss_fftr_alloc
Function: kiss_fftr
Function: _ZN19CAmbisonicProcessor5ResetEv
Function: _ZN19CAmbisonicProcessor7RefreshEv
Function: _ZN19CAmbisonicProcessor14SetOrientationE11Orientation
Function: _ZN19CAmbisonicProcessor14GetOrientationEv
Function: _ZN19CAmbisonicProcessor7ProcessEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj
Function: pow
Function: kiss_fftri
Function: _ZN17CAmbisonicSpeakerC2Ev
Function: _ZN17CAmbisonicSpeakerD2Ev
Function: _ZN17CAmbisonicSpeakerD0Ev
Function: _ZN17CAmbisonicSpeaker9ConfigureEjbj
Function: _ZN17CAmbisonicSpeaker7RefreshEv
Function: _ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf
Function: llvm.floor.f64
Function: _ZN17CAmbisonicDecoderC2Ev
Function: _ZN17CAmbisonicDecoderD2Ev
Function: _ZN17CAmbisonicDecoderD0Ev
Function: _ZN17CAmbisonicDecoder9ConfigureEjbij
Function: _ZN17CAmbisonicDecoder12SpeakerSetUpEij
Function: _ZN17CAmbisonicDecoder5ResetEv
Function: _ZN17CAmbisonicDecoder7RefreshEv
Function: _ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf
Function: _ZN17CAmbisonicDecoder15GetSpeakerSetUpEv
Function: _ZN17CAmbisonicDecoder15GetSpeakerCountEv
Function: _ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint
Function: _ZN17CAmbisonicDecoder11GetPositionEj
Function: _ZN17CAmbisonicDecoder14SetOrderWeightEjjf
Function: _ZN17CAmbisonicDecoder14GetOrderWeightEjj
Function: _ZN17CAmbisonicDecoder14GetCoefficientEjj
Function: _ZN17CAmbisonicDecoder14SetCoefficientEjjf
Function: _Z16DegreesToRadiansf
Function: sqrtf
Function: _ZN16CAmbisonicZoomerC2Ev
Function: _ZN16CAmbisonicZoomer9ConfigureEjbj
Function: _ZN16CAmbisonicZoomer9factorialEj
Function: _ZN16CAmbisonicZoomer5ResetEv
Function: _ZN16CAmbisonicZoomer7RefreshEv
Function: _ZN16CAmbisonicZoomer7SetZoomEf
Function: _ZN16CAmbisonicZoomer7GetZoomEv
Function: _ZN16CAmbisonicZoomer7ProcessEP8CBFormatj
Function: _ZN22CAmbisonicBinauralizerC2Ev
Function: _ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
Function: _ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
Function: _ZN22CAmbisonicBinauralizer5ResetEv
Function: _ZN22CAmbisonicBinauralizer7RefreshEv
Function: _ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf
Function: _ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv
Function: _Z15OrderToSpeakersjb
Function: _Znwm
Function: _ZN22CAmbisonicBinauralizer15AllocateBuffersEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5Sound13readInBFormatEv
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZN12ILLIXR_AUDIO7ABAudio12processBlockEv
Function: _ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat
Function: _ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat
Function: _ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf
Function: _ZN8CBFormatD2Ev
Function: _ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv
Function: _ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv
Function: _ZNSo5writeEPKcl
Function: main
------------ Found launch site --------------
Finding preferred target for audioDecoding_cloned
FUNCTION: audioDecoding_cloned
  %wrapperRotatorSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @wrapperRotatorSet_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperRotatorSet_fxp_cloned
FUNCTION: wrapperRotatorSet_fxp_cloned
  %rotatorSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @rotatorSet_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for rotatorSet_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %rotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotatorSet_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %rotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperRotatorSet_fxp undef
  %wrapperPsychoFilter_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* @wrapperPsychoFilter_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperPsychoFilter_fxp_cloned
FUNCTION: wrapperPsychoFilter_fxp_cloned
  %psychoFilter_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* @psychoFilter_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for psychoFilter_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 5, i32 5, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 6, i32 6, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 7, i32 7, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 8, i32 8, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 9, i32 9, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 10, i32 10, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 5, i32 5, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 6, i32 6, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperPsychoFilter_fxp undef
  %wrapperRotateOrder1_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @wrapperRotateOrder1_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperRotateOrder1_fxp_cloned
FUNCTION: wrapperRotateOrder1_fxp_cloned
  %rotateOrder1_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @rotateOrder1_fxp_cloned to i8*), i64 %nSample)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for rotateOrder1_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %rotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperRotateOrder1_fxp undef
  %wrapperRotateOrder2_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @wrapperRotateOrder2_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperRotateOrder2_fxp_cloned
FUNCTION: wrapperRotateOrder2_fxp_cloned
  %rotateOrder2_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @rotateOrder2_fxp_cloned to i8*), i64 %nSample)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for rotateOrder2_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %rotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperRotateOrder2_fxp undef
  %wrapperRotateOrder3_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @wrapperRotateOrder3_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperRotateOrder3_fxp_cloned
FUNCTION: wrapperRotateOrder3_fxp_cloned
  %rotateOrder3_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)* @rotateOrder3_fxp_cloned to i8*), i64 %nSample)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for rotateOrder3_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %rotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperRotateOrder3_fxp undef
  %wrapperZoomSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @wrapperZoomSet_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperZoomSet_fxp_cloned
FUNCTION: wrapperZoomSet_fxp_cloned
  %zoomSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @zoomSet_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for zoomSet_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %zoomSet_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperZoomSet_fxp undef
  %wrapperZoomProcess_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* @wrapperZoomProcess_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperZoomProcess_fxp_cloned
FUNCTION: wrapperZoomProcess_fxp_cloned
  %zoomProcess_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)* @zoomProcess_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for zoomProcess_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 5, i32 5, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 6, i32 6, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 7, i32 7, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 8, i32 8, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 9, i32 9, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 10, i32 10, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %zoomProcess_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  call void @llvm.hpvm.bind.output(i8* %zoomProcess_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperZoomProcess_fxp undef
  %wrapperDecoderSet_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperDecoderSet_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperDecoderSet_left_fxp_cloned
FUNCTION: wrapperDecoderSet_left_fxp_cloned
  %decoderSet_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @decoderSet_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for decoderSet_left_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %decoderSet_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %decoderSet_left_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %decoderSet_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperDecoderSet_left_fxp undef
  %wrapperDecoderSet_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperDecoderSet_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperDecoderSet_right_fxp_cloned
FUNCTION: wrapperDecoderSet_right_fxp_cloned
  %decoderSet_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @decoderSet_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for decoderSet_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %decoderSet_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %decoderSet_right_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %decoderSet_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperDecoderSet_right_fxp undef
  %wrapperFFT_FIR_IFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)* @wrapperFFT_FIR_IFFT_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperFFT_FIR_IFFT_left_fxp_cloned
FUNCTION: wrapperFFT_FIR_IFFT_left_fxp_cloned
  %FFT_FIR_IFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)* @FFT_FIR_IFFT_left_fxp_cloned to i8*), i64 %decoder0ChannelCount)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for FFT_FIR_IFFT_left_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %FFT_FIR_IFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperFFT_FIR_IFFT_left_fxp undef
  %wrapperFFT_FIR_IFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)* @wrapperFFT_FIR_IFFT_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperFFT_FIR_IFFT_right_fxp_cloned
FUNCTION: wrapperFFT_FIR_IFFT_right_fxp_cloned
  %FFT_FIR_IFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)* @FFT_FIR_IFFT_right_fxp_cloned to i8*), i64 %decoder1ChannelCount)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for FFT_FIR_IFFT_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 4, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %FFT_FIR_IFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperFFT_FIR_IFFT_right_fxp undef
  %wrapperSum_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperSum_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperSum_left_fxp_cloned
FUNCTION: wrapperSum_left_fxp_cloned
  %sum_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sum_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @sum_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for sum_left_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %sum_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %sum_left_fxp_cloned.node, i32 1, i32 1, i1 true)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %sum_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperSum_left_fxp undef
  %wrapperSum_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperSum_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperSum_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperSum_right_fxp_cloned
FUNCTION: wrapperSum_right_fxp_cloned
  %sum_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sum_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @sum_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for sum_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %sum_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %sum_right_fxp_cloned.node, i32 1, i32 1, i1 true)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %sum_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperSum_right_fxp undef
  %wrapperScale_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperScale_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)* @wrapperScale_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperScale_left_fxp_cloned
FUNCTION: wrapperScale_left_fxp_cloned
  %scale_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.scale_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)* @scale_left_fxp_cloned to i8*), i64 %decoder0FFTSize)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for scale_left_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %scale_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %scale_left_fxp_cloned.node, i32 1, i32 1, i1 true)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %scale_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperScale_left_fxp undef
  %wrapperScale_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperScale_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)* @wrapperScale_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperScale_right_fxp_cloned
FUNCTION: wrapperScale_right_fxp_cloned
  %scale_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode1D(i8* bitcast (%struct.out.scale_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)* @scale_right_fxp_cloned to i8*), i64 %decoder1FFTSize)
IntrinsicID = 3163: llvm.hpvm.createNode1D
Finding preferred target for scale_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %scale_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %scale_right_fxp_cloned.node, i32 1, i32 1, i1 true)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %scale_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperScale_right_fxp undef
  %wrapperOverlap_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperOverlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperOverlap_left_fxp_cloned
FUNCTION: wrapperOverlap_left_fxp_cloned
  %overlap_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.overlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for overlap_left_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %overlap_left_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperOverlap_left_fxp undef
  %wrapperOverlap_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperOverlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for wrapperOverlap_right_fxp_cloned
FUNCTION: wrapperOverlap_right_fxp_cloned
  %overlap_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.overlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for overlap_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.output(i8* %overlap_right_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3159: llvm.hpvm.bind.output
  ret %struct.out.wrapperOverlap_right_fxp undef
  call void @llvm.hpvm.bind.input(i8* %wrapperRotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperRotatorSet_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotatorSet_fxp_cloned.node, i8* %wrapperPsychoFilter_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 10, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 11, i32 5, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 12, i32 6, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 13, i32 7, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 14, i32 8, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 15, i32 9, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 16, i32 10, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder1_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 10, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 11, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output2 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder1_fxp_cloned.node, i1 true, i32 4, i32 4, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output3 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder2_fxp_cloned.node, i1 true, i32 1, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 10, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 13, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output4 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder2_fxp_cloned.node, i1 true, i32 5, i32 4, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output5 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder3_fxp_cloned.node, i1 true, i32 2, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 10, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 15, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output6 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder3_fxp_cloned.node, i1 true, i32 6, i32 4, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomSet_fxp_cloned.node, i32 4, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomSet_fxp_cloned.node, i32 5, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 4, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output7 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomSet_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output8 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 3, i32 3, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 10, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 11, i32 5, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output9 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder1_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 6, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 13, i32 7, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output10 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder2_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 8, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 15, i32 9, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output11 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder3_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 10, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperDecoderSet_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperDecoderSet_left_fxp_cloned.node, i32 7, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperDecoderSet_right_fxp_cloned.node, i32 17, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperDecoderSet_right_fxp_cloned.node, i32 18, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output12 = call i8* @llvm.hpvm.createEdge(i8* %wrapperDecoderSet_left_fxp_cloned.node, i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output13 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomProcess_fxp_cloned.node, i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i1 true, i32 0, i32 3, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i32 21, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i32 17, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output14 = call i8* @llvm.hpvm.createEdge(i8* %wrapperDecoderSet_right_fxp_cloned.node, i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output15 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomProcess_fxp_cloned.node, i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i1 true, i32 1, i32 3, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i32 23, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperSum_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output16 = call i8* @llvm.hpvm.createEdge(i8* %wrapperFFT_FIR_IFFT_left_fxp_cloned.node, i8* %wrapperSum_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperSum_right_fxp_cloned.node, i32 17, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output17 = call i8* @llvm.hpvm.createEdge(i8* %wrapperFFT_FIR_IFFT_right_fxp_cloned.node, i8* %wrapperSum_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperScale_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output18 = call i8* @llvm.hpvm.createEdge(i8* %wrapperSum_left_fxp_cloned.node, i8* %wrapperScale_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperScale_left_fxp_cloned.node, i32 22, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperScale_right_fxp_cloned.node, i32 17, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output19 = call i8* @llvm.hpvm.createEdge(i8* %wrapperSum_right_fxp_cloned.node, i8* %wrapperScale_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperScale_left_fxp_cloned.node, i32 24, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output20 = call i8* @llvm.hpvm.createEdge(i8* %wrapperScale_left_fxp_cloned.node, i8* %wrapperOverlap_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 8, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 9, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 17, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output21 = call i8* @llvm.hpvm.createEdge(i8* %wrapperScale_right_fxp_cloned.node, i8* %wrapperOverlap_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 19, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 20, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  ret %emptyStruct undef
	audioDecoding_cloned
	audioDecoding_cloned
	wrapperRotatorSet_fxp_cloned
	wrapperPsychoFilter_fxp_cloned
	wrapperRotateOrder1_fxp_cloned
	wrapperRotateOrder2_fxp_cloned
	wrapperRotateOrder3_fxp_cloned
	wrapperZoomSet_fxp_cloned
	wrapperZoomProcess_fxp_cloned
	wrapperDecoderSet_left_fxp_cloned
	wrapperDecoderSet_right_fxp_cloned
	wrapperFFT_FIR_IFFT_left_fxp_cloned
	wrapperFFT_FIR_IFFT_right_fxp_cloned
	wrapperSum_left_fxp_cloned
	wrapperSum_right_fxp_cloned
	wrapperScale_left_fxp_cloned
	wrapperScale_right_fxp_cloned
	wrapperOverlap_left_fxp_cloned
	wrapperOverlap_right_fxp_cloned
	audioDecoding_cloned
	audioDecoding_cloned
	wrapperDecoderSet_left_fxp_cloned
	wrapperDecoderSet_right_fxp_cloned
	wrapperZoomSet_fxp_cloned
	wrapperRotatorSet_fxp_cloned
	wrapperPsychoFilter_fxp_cloned
	wrapperRotateOrder2_fxp_cloned
	wrapperRotateOrder3_fxp_cloned
	wrapperRotateOrder1_fxp_cloned
	wrapperZoomProcess_fxp_cloned
	wrapperFFT_FIR_IFFT_left_fxp_cloned
	wrapperFFT_FIR_IFFT_right_fxp_cloned
	wrapperSum_left_fxp_cloned
	wrapperSum_right_fxp_cloned
	wrapperScale_left_fxp_cloned
	wrapperScale_right_fxp_cloned
	wrapperOverlap_left_fxp_cloned
	wrapperOverlap_right_fxp_cloned
Writing '/tmp/DataflowGraph-1c5707.dot'...  done. 
Function: malloc
Function: llvm_hpvm_track_mem
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: _ZN8MIT_HRTFD0Ev
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicZoomerD2Ev
Function: _ZN16CAmbisonicZoomerD0Ev
Function: _ZN22CAmbisonicBinauralizerD2Ev
Function: _ZN22CAmbisonicBinauralizerD0Ev
Function: _ZN4HRTFD2Ev
Function: llvm.trap
Function: atan2
Function: acos
Function: llvm.fabs.f32
Function: strtol
Function: _ZSt19__throw_logic_errorPKc
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZSt20__throw_length_errorPKc
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: strlen
Function: _ZNSo3putEc
Function: _ZNSo5flushEv
Function: _ZSt16__throw_bad_castv
Function: _ZNKSt5ctypeIcE13_M_widen_initEv
Function: _ZNSt6vectorIS_IfSaIfEESaIS1_EE17_M_default_appendEm
Function: _ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _GLOBAL__sub_I_main.cpp
Function: rotatorSet_fxp_cloned
Function: llvm.hpvm.createNode
Function: llvm.hpvm.bind.input
Function: llvm.hpvm.bind.output
Function: wrapperRotatorSet_fxp_cloned
Function: psychoFilter_fxp_cloned
Function: wrapperPsychoFilter_fxp_cloned
Function: llvm.hpvm.getNode
Function: llvm.hpvm.getNodeInstanceID.x
Function: rotateOrder1_fxp_cloned
Function: llvm.hpvm.createNode1D
Function: wrapperRotateOrder1_fxp_cloned
Function: rotateOrder2_fxp_cloned
Function: wrapperRotateOrder2_fxp_cloned
Function: rotateOrder3_fxp_cloned
Function: wrapperRotateOrder3_fxp_cloned
Function: zoomSet_fxp_cloned
Function: wrapperZoomSet_fxp_cloned
Function: zoomProcess_fxp_cloned
Function: wrapperZoomProcess_fxp_cloned
Function: decoderSet_left_fxp_cloned
Function: wrapperDecoderSet_left_fxp_cloned
Function: decoderSet_right_fxp_cloned
Function: wrapperDecoderSet_right_fxp_cloned
Function: FFT_FIR_IFFT_left_fxp_cloned
Function: wrapperFFT_FIR_IFFT_left_fxp_cloned
Function: FFT_FIR_IFFT_right_fxp_cloned
Function: wrapperFFT_FIR_IFFT_right_fxp_cloned
Function: sum_left_fxp_cloned
Function: wrapperSum_left_fxp_cloned
Function: sum_right_fxp_cloned
Function: wrapperSum_right_fxp_cloned
Function: scale_left_fxp_cloned
Function: wrapperScale_left_fxp_cloned
Function: scale_right_fxp_cloned
Function: wrapperScale_right_fxp_cloned
Function: overlap_left_fxp_cloned
Function: wrapperOverlap_left_fxp_cloned
Function: overlap_right_fxp_cloned
Function: wrapperOverlap_right_fxp_cloned
Function: llvm.hpvm.createEdge
Function: llvm.hpvm.init
Function: llvm.hpvm.cleanup
Function: llvm.hpvm.launch
Function: audioDecoding_cloned
Function: llvm.hpvm.wait

DFG2LLVM_CPU PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end3
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then8
	discovered a new reachable node %for.end
	discovered a new reachable node %if.end9
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end21
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %return
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %return
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.end14
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %if.end14
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Inserting cpu timer initialization
Inserting cpu timer print
Start: Generating Code for Node (I) - audioDecoding_cloned
Start: Generating Code for Node (L) - audioDecoding_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - audioDecoding_cloned
Start: Generating Code for Node (L) - audioDecoding_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - audioDecoding_cloned
Start: Generating Code for Node (I) - wrapperDecoderSet_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperDecoderSet_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperDecoderSet_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperDecoderSet_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperDecoderSet_left_fxp_cloned
Start: Generating Code for Node (L) - decoderSet_left_fxp_cloned
Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: decoderSet_left_fxp_cloned.1
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1
New Function name: decoderSet_left_fxp_cloned.1_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: decoderSet_left_fxp_cloned.1_cloned
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1_cloned
New Function name: decoderSet_left_fxp_cloned.1_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: decoderSet_left_fxp_cloned.1_cloned_cloned
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1_cloned_cloned
New Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned
New Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned
New Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
New Function name: decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %1 = bitcast float** %_M_start.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !38
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !44
  %conv = zext i32 %3 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul, i1 false)
  %returnStruct = insertvalue %struct.out.decoderSet_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.decoderSet_left_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.decoderSet_left_fxp @decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %1 = bitcast float** %_M_start.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !80
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !308
  %conv = zext i32 %3 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul, i1 false)
  %returnStruct = insertvalue %struct.out.decoderSet_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.decoderSet_left_fxp %returnStruct
}
DONE: Generating Code for Node (L) - decoderSet_left_fxp_cloned
Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2_cloned
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperDecoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodedecoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 1:
Argument 1 = i64 %bytes_decoder
Gen Function type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.decoderSet_left_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_left_fxp @decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperDecoderSet_left_fxp @wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_left_fxp @decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperDecoderSet_left_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- decoderSet_left_fxp_cloned
Going to generate ExtarctVal inst from   %decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_left_fxp @decoderSet_left_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperDecoderSet_left_fxp_cloned with tag 1
CPU Fun: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperDecoderSet_left_fxp_cloned
After editing
Node: wrapperDecoderSet_left_fxp_cloned with tag 1
CPU Fun: wrapperDecoderSet_left_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperDecoderSet_left_fxp_cloned
Start: Generating Code for Node (I) - wrapperDecoderSet_right_fxp_cloned
Start: Generating Code for Node (L) - wrapperDecoderSet_right_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperDecoderSet_right_fxp_cloned
Start: Generating Code for Node (L) - wrapperDecoderSet_right_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperDecoderSet_right_fxp_cloned
Start: Generating Code for Node (L) - decoderSet_right_fxp_cloned
Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: decoderSet_right_fxp_cloned.3
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3
New Function name: decoderSet_right_fxp_cloned.3_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: decoderSet_right_fxp_cloned.3_cloned
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3_cloned
New Function name: decoderSet_right_fxp_cloned.3_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: decoderSet_right_fxp_cloned.3_cloned_cloned
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3_cloned_cloned
New Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned
New Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned
New Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
New Function name: decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %1 = bitcast float** %_M_start.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !38
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !44
  %conv = zext i32 %3 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul, i1 false)
  %returnStruct = insertvalue %struct.out.decoderSet_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.decoderSet_right_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.decoderSet_right_fxp @decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %1 = bitcast float** %_M_start.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !80
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !308
  %conv = zext i32 %3 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul, i1 false)
  %returnStruct = insertvalue %struct.out.decoderSet_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.decoderSet_right_fxp %returnStruct
}
DONE: Generating Code for Node (L) - decoderSet_right_fxp_cloned
Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4_cloned
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperDecoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodedecoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 1:
Argument 1 = i64 %bytes_decoder
Gen Function type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.decoderSet_right_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_right_fxp @decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperDecoderSet_right_fxp @wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_right_fxp @decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperDecoderSet_right_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- decoderSet_right_fxp_cloned
Going to generate ExtarctVal inst from   %decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.decoderSet_right_fxp @decoderSet_right_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperDecoderSet_right_fxp_cloned with tag 1
CPU Fun: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperDecoderSet_right_fxp_cloned
After editing
Node: wrapperDecoderSet_right_fxp_cloned with tag 1
CPU Fun: wrapperDecoderSet_right_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperDecoderSet_right_fxp_cloned
Start: Generating Code for Node (I) - wrapperZoomSet_fxp_cloned
Start: Generating Code for Node (L) - wrapperZoomSet_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperZoomSet_fxp_cloned
Start: Generating Code for Node (L) - wrapperZoomSet_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperZoomSet_fxp_cloned
Start: Generating Code for Node (L) - zoomSet_fxp_cloned
Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)
Cloning Function: zoomSet_fxp_cloned.5
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
Old Function name: zoomSet_fxp_cloned.5
New Function name: zoomSet_fxp_cloned.5_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
Cloning Function: zoomSet_fxp_cloned.5_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.5_cloned
New Function name: zoomSet_fxp_cloned.5_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: zoomSet_fxp_cloned.5_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.5_cloned_cloned
New Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: zoomSet_fxp_cloned.5_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !38
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !38
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !42
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !42
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !42
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !50
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !46
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !46
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !54
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !54
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !54
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !44
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}
DONE: Generating Code for Node (L) - zoomSet_fxp_cloned
Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)
Cloning Function: wrapperZoomSet_fxp_cloned.6
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6
New Function name: wrapperZoomSet_fxp_cloned.6_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
Cloning Function: wrapperZoomSet_fxp_cloned.6_cloned
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6_cloned
New Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: wrapperZoomSet_fxp_cloned.6_cloned_cloned
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned
New Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned
New Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned
New Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodezoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicZoomer* %zoomer
Finding argument 1:
Argument 1 = i64 %bytes_zoomer
Gen Function type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)*
Arguments: 8
  %zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperZoomSet_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- zoomSet_fxp_cloned
Going to generate ExtarctVal inst from   %zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperZoomSet_fxp_cloned with tag 1
CPU Fun: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperZoomSet_fxp_cloned
After editing
Node: wrapperZoomSet_fxp_cloned with tag 1
CPU Fun: wrapperZoomSet_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperZoomSet_fxp_cloned
Start: Generating Code for Node (I) - wrapperRotatorSet_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotatorSet_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotatorSet_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotatorSet_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotatorSet_fxp_cloned
Start: Generating Code for Node (L) - rotatorSet_fxp_cloned
Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)
Cloning Function: rotatorSet_fxp_cloned.7
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7
New Function name: rotatorSet_fxp_cloned.7_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
Cloning Function: rotatorSet_fxp_cloned.7_cloned
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7_cloned
New Function name: rotatorSet_fxp_cloned.7_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: rotatorSet_fxp_cloned.7_cloned_cloned
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7_cloned_cloned
New Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: rotatorSet_fxp_cloned.7_cloned_cloned_cloned
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned
New Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned
New Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
New Function name: rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry
  %head = alloca %class.Orientation, align 4
  %1 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !38
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !38
  %2 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %2, i64 24, i1 false)
  %4 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %4, align 8, !tbaa !42
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %5(%class.CAmbisonicProcessor* %rotator)
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #24
  ret %struct.out.rotatorSet_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %head = alloca %class.Orientation, align 4
  %1 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !46
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !46
  %2 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %2, i64 24, i1 false)
  %4 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %4, align 8, !tbaa !44
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %5(%class.CAmbisonicProcessor* %rotator)
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #24
  ret %struct.out.rotatorSet_fxp %returnStruct
}
DONE: Generating Code for Node (L) - rotatorSet_fxp_cloned
Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)
Cloning Function: wrapperRotatorSet_fxp_cloned.8
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
Cloning Function: wrapperRotatorSet_fxp_cloned.8_cloned
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8_cloned
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: wrapperRotatorSet_fxp_cloned.8_cloned_cloned
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64, i64)
Invoking child noderotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Gen Function type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)*
Arguments: 8
  %rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperRotatorSet_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- rotatorSet_fxp_cloned
Going to generate ExtarctVal inst from   %rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperRotatorSet_fxp_cloned with tag 1
CPU Fun: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperRotatorSet_fxp_cloned
After editing
Node: wrapperRotatorSet_fxp_cloned with tag 1
CPU Fun: wrapperRotatorSet_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperRotatorSet_fxp_cloned
Start: Generating Code for Node (I) - wrapperPsychoFilter_fxp_cloned
Start: Generating Code for Node (L) - wrapperPsychoFilter_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperPsychoFilter_fxp_cloned
Start: Generating Code for Node (L) - wrapperPsychoFilter_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperPsychoFilter_fxp_cloned
Start: Generating Code for Node (L) - psychoFilter_fxp_cloned
Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
Cloning Function: psychoFilter_fxp_cloned.9
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9
New Function name: psychoFilter_fxp_cloned.9_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
Cloning Function: psychoFilter_fxp_cloned.9_cloned
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9_cloned
New Function name: psychoFilter_fxp_cloned.9_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
Cloning Function: psychoFilter_fxp_cloned.9_cloned_cloned
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9_cloned_cloned
New Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
Cloning Function: psychoFilter_fxp_cloned.9_cloned_cloned_cloned
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned
New Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
Cloning Function: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned
New Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
Cloning Function: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
New Function name: psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
15. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry
  %5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 4, !tbaa !38, !range !44
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.end, label %if.then
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end
  %cmp204 = icmp sgt i64 %nSample, 0
  br i1 %cmp204, label %for.body.lr.ph, label %for.cond.cleanup
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !45
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 3
  %8 = load float*, float** %arrayidx.i, align 8, !tbaa !45
  %9 = load float*, float** %channelpart1, align 8, !tbaa !45
  %arrayidx.i203 = getelementptr inbounds float*, float** %7, i64 1
  %10 = load float*, float** %arrayidx.i203, align 8, !tbaa !45
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !45
  %arrayidx.i201 = getelementptr inbounds float*, float** %7, i64 2
  %12 = load float*, float** %arrayidx.i201, align 8, !tbaa !45
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %13 = load float*, float** %arrayidx16, align 8, !tbaa !45
  %arrayidx.i199 = getelementptr inbounds float*, float** %7, i64 6
  %14 = load float*, float** %arrayidx.i199, align 8, !tbaa !45
  %15 = load float*, float** %channelpart2, align 8, !tbaa !45
  %arrayidx.i197 = getelementptr inbounds float*, float** %7, i64 7
  %16 = load float*, float** %arrayidx.i197, align 8, !tbaa !45
  %arrayidx30 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %17 = load float*, float** %arrayidx30, align 8, !tbaa !45
  %arrayidx.i195 = getelementptr inbounds float*, float** %7, i64 5
  %18 = load float*, float** %arrayidx.i195, align 8, !tbaa !45
  %arrayidx37 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %19 = load float*, float** %arrayidx37, align 8, !tbaa !45
  %arrayidx.i193 = getelementptr inbounds float*, float** %7, i64 8
  %20 = load float*, float** %arrayidx.i193, align 8, !tbaa !45
  %arrayidx44 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %21 = load float*, float** %arrayidx44, align 8, !tbaa !45
  %arrayidx.i191 = getelementptr inbounds float*, float** %7, i64 4
  %22 = load float*, float** %arrayidx.i191, align 8, !tbaa !45
  %arrayidx51 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %23 = load float*, float** %arrayidx51, align 8, !tbaa !45
  %arrayidx.i189 = getelementptr inbounds float*, float** %7, i64 9
  %24 = load float*, float** %arrayidx.i189, align 8, !tbaa !45
  %25 = load float*, float** %channelpart3, align 8, !tbaa !45
  %arrayidx.i187 = getelementptr inbounds float*, float** %7, i64 10
  %26 = load float*, float** %arrayidx.i187, align 8, !tbaa !45
  %arrayidx65 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %27 = load float*, float** %arrayidx65, align 8, !tbaa !45
  %arrayidx.i185 = getelementptr inbounds float*, float** %7, i64 11
  %28 = load float*, float** %arrayidx.i185, align 8, !tbaa !45
  %arrayidx72 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %29 = load float*, float** %arrayidx72, align 8, !tbaa !45
  %arrayidx.i183 = getelementptr inbounds float*, float** %7, i64 12
  %30 = load float*, float** %arrayidx.i183, align 8, !tbaa !45
  %arrayidx79 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %31 = load float*, float** %arrayidx79, align 8, !tbaa !45
  %arrayidx.i181 = getelementptr inbounds float*, float** %7, i64 13
  %32 = load float*, float** %arrayidx.i181, align 8, !tbaa !45
  %arrayidx86 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %33 = load float*, float** %arrayidx86, align 8, !tbaa !45
  %arrayidx.i179 = getelementptr inbounds float*, float** %7, i64 14
  %34 = load float*, float** %arrayidx.i179, align 8, !tbaa !45
  %arrayidx93 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %35 = load float*, float** %arrayidx93, align 8, !tbaa !45
  %arrayidx.i177 = getelementptr inbounds float*, float** %7, i64 15
  %36 = load float*, float** %arrayidx.i177, align 8, !tbaa !45
  %arrayidx100 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %37 = load float*, float** %arrayidx100, align 8, !tbaa !45
  br label %for.body
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %38 = bitcast float* %arrayidx to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !47
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %40 = bitcast float* %arrayidx4 to i32*
  store i32 %39, i32* %40, align 4, !tbaa !47
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %41 = bitcast float* %arrayidx8 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !47
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %43 = bitcast float* %arrayidx11 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !47
  %arrayidx15 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %44 = bitcast float* %arrayidx15 to i32*
  %45 = load i32, i32* %44, align 4, !tbaa !47
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %46 = bitcast float* %arrayidx18 to i32*
  store i32 %45, i32* %46, align 4, !tbaa !47
  %arrayidx22 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %47 = bitcast float* %arrayidx22 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !47
  %arrayidx25 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %49 = bitcast float* %arrayidx25 to i32*
  store i32 %48, i32* %49, align 4, !tbaa !47
  %arrayidx29 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %50 = bitcast float* %arrayidx29 to i32*
  %51 = load i32, i32* %50, align 4, !tbaa !47
  %arrayidx32 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %52 = bitcast float* %arrayidx32 to i32*
  store i32 %51, i32* %52, align 4, !tbaa !47
  %arrayidx36 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %53 = bitcast float* %arrayidx36 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !47
  %arrayidx39 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %55 = bitcast float* %arrayidx39 to i32*
  store i32 %54, i32* %55, align 4, !tbaa !47
  %arrayidx43 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %56 = bitcast float* %arrayidx43 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !47
  %arrayidx46 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %58 = bitcast float* %arrayidx46 to i32*
  store i32 %57, i32* %58, align 4, !tbaa !47
  %arrayidx50 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %59 = bitcast float* %arrayidx50 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !47
  %arrayidx53 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %61 = bitcast float* %arrayidx53 to i32*
  store i32 %60, i32* %61, align 4, !tbaa !47
  %arrayidx57 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %62 = bitcast float* %arrayidx57 to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !47
  %arrayidx60 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %64 = bitcast float* %arrayidx60 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !47
  %arrayidx64 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %65 = bitcast float* %arrayidx64 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !47
  %arrayidx67 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %67 = bitcast float* %arrayidx67 to i32*
  store i32 %66, i32* %67, align 4, !tbaa !47
  %arrayidx71 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %68 = bitcast float* %arrayidx71 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !47
  %arrayidx74 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %70 = bitcast float* %arrayidx74 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !47
  %arrayidx78 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %71 = bitcast float* %arrayidx78 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !47
  %arrayidx81 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %73 = bitcast float* %arrayidx81 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !47
  %arrayidx85 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %74 = bitcast float* %arrayidx85 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !47
  %arrayidx88 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %76 = bitcast float* %arrayidx88 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !47
  %arrayidx92 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %77 = bitcast float* %arrayidx92 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !47
  %arrayidx95 = getelementptr inbounds float, float* %35, i64 %indvars.iv
  %79 = bitcast float* %arrayidx95 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !47
  %arrayidx99 = getelementptr inbounds float, float* %36, i64 %indvars.iv
  %80 = bitcast float* %arrayidx99 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !47
  %arrayidx102 = getelementptr inbounds float, float* %37, i64 %indvars.iv
  %82 = bitcast float* %arrayidx102 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %nSample
  br i1 %exitcond, label %for.cond.cleanup, label %for.body

; Function Attrs: uwtable
define %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, float** in out %channelpart2, i64 %bytes_channelpart2, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %6 = load i8, i8* %5, align 4, !tbaa !70, !range !71
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp204 = icmp sgt i64 %nSample, 0
  br i1 %cmp204, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !47
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 3
  %8 = load float*, float** %arrayidx.i, align 8, !tbaa !47
  %9 = load float*, float** %channelpart1, align 8, !tbaa !47
  %arrayidx.i203 = getelementptr inbounds float*, float** %7, i64 1
  %10 = load float*, float** %arrayidx.i203, align 8, !tbaa !47
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !47
  %arrayidx.i201 = getelementptr inbounds float*, float** %7, i64 2
  %12 = load float*, float** %arrayidx.i201, align 8, !tbaa !47
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %13 = load float*, float** %arrayidx16, align 8, !tbaa !47
  %arrayidx.i199 = getelementptr inbounds float*, float** %7, i64 6
  %14 = load float*, float** %arrayidx.i199, align 8, !tbaa !47
  %15 = load float*, float** %channelpart2, align 8, !tbaa !47
  %arrayidx.i197 = getelementptr inbounds float*, float** %7, i64 7
  %16 = load float*, float** %arrayidx.i197, align 8, !tbaa !47
  %arrayidx30 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %17 = load float*, float** %arrayidx30, align 8, !tbaa !47
  %arrayidx.i195 = getelementptr inbounds float*, float** %7, i64 5
  %18 = load float*, float** %arrayidx.i195, align 8, !tbaa !47
  %arrayidx37 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %19 = load float*, float** %arrayidx37, align 8, !tbaa !47
  %arrayidx.i193 = getelementptr inbounds float*, float** %7, i64 8
  %20 = load float*, float** %arrayidx.i193, align 8, !tbaa !47
  %arrayidx44 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %21 = load float*, float** %arrayidx44, align 8, !tbaa !47
  %arrayidx.i191 = getelementptr inbounds float*, float** %7, i64 4
  %22 = load float*, float** %arrayidx.i191, align 8, !tbaa !47
  %arrayidx51 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %23 = load float*, float** %arrayidx51, align 8, !tbaa !47
  %arrayidx.i189 = getelementptr inbounds float*, float** %7, i64 9
  %24 = load float*, float** %arrayidx.i189, align 8, !tbaa !47
  %25 = load float*, float** %channelpart3, align 8, !tbaa !47
  %arrayidx.i187 = getelementptr inbounds float*, float** %7, i64 10
  %26 = load float*, float** %arrayidx.i187, align 8, !tbaa !47
  %arrayidx65 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %27 = load float*, float** %arrayidx65, align 8, !tbaa !47
  %arrayidx.i185 = getelementptr inbounds float*, float** %7, i64 11
  %28 = load float*, float** %arrayidx.i185, align 8, !tbaa !47
  %arrayidx72 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %29 = load float*, float** %arrayidx72, align 8, !tbaa !47
  %arrayidx.i183 = getelementptr inbounds float*, float** %7, i64 12
  %30 = load float*, float** %arrayidx.i183, align 8, !tbaa !47
  %arrayidx79 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %31 = load float*, float** %arrayidx79, align 8, !tbaa !47
  %arrayidx.i181 = getelementptr inbounds float*, float** %7, i64 13
  %32 = load float*, float** %arrayidx.i181, align 8, !tbaa !47
  %arrayidx86 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %33 = load float*, float** %arrayidx86, align 8, !tbaa !47
  %arrayidx.i179 = getelementptr inbounds float*, float** %7, i64 14
  %34 = load float*, float** %arrayidx.i179, align 8, !tbaa !47
  %arrayidx93 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %35 = load float*, float** %arrayidx93, align 8, !tbaa !47
  %arrayidx.i177 = getelementptr inbounds float*, float** %7, i64 15
  %36 = load float*, float** %arrayidx.i177, align 8, !tbaa !47
  %arrayidx100 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %37 = load float*, float** %arrayidx100, align 8, !tbaa !47
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %38 = bitcast float* %arrayidx to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !54
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %40 = bitcast float* %arrayidx4 to i32*
  store i32 %39, i32* %40, align 4, !tbaa !54
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %41 = bitcast float* %arrayidx8 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !54
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %43 = bitcast float* %arrayidx11 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !54
  %arrayidx15 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %44 = bitcast float* %arrayidx15 to i32*
  %45 = load i32, i32* %44, align 4, !tbaa !54
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %46 = bitcast float* %arrayidx18 to i32*
  store i32 %45, i32* %46, align 4, !tbaa !54
  %arrayidx22 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %47 = bitcast float* %arrayidx22 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !54
  %arrayidx25 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %49 = bitcast float* %arrayidx25 to i32*
  store i32 %48, i32* %49, align 4, !tbaa !54
  %arrayidx29 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %50 = bitcast float* %arrayidx29 to i32*
  %51 = load i32, i32* %50, align 4, !tbaa !54
  %arrayidx32 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %52 = bitcast float* %arrayidx32 to i32*
  store i32 %51, i32* %52, align 4, !tbaa !54
  %arrayidx36 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %53 = bitcast float* %arrayidx36 to i32*
  %54 = load i32, i32* %53, align 4, !tbaa !54
  %arrayidx39 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %55 = bitcast float* %arrayidx39 to i32*
  store i32 %54, i32* %55, align 4, !tbaa !54
  %arrayidx43 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %56 = bitcast float* %arrayidx43 to i32*
  %57 = load i32, i32* %56, align 4, !tbaa !54
  %arrayidx46 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %58 = bitcast float* %arrayidx46 to i32*
  store i32 %57, i32* %58, align 4, !tbaa !54
  %arrayidx50 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %59 = bitcast float* %arrayidx50 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !54
  %arrayidx53 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %61 = bitcast float* %arrayidx53 to i32*
  store i32 %60, i32* %61, align 4, !tbaa !54
  %arrayidx57 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %62 = bitcast float* %arrayidx57 to i32*
  %63 = load i32, i32* %62, align 4, !tbaa !54
  %arrayidx60 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %64 = bitcast float* %arrayidx60 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !54
  %arrayidx64 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %65 = bitcast float* %arrayidx64 to i32*
  %66 = load i32, i32* %65, align 4, !tbaa !54
  %arrayidx67 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %67 = bitcast float* %arrayidx67 to i32*
  store i32 %66, i32* %67, align 4, !tbaa !54
  %arrayidx71 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %68 = bitcast float* %arrayidx71 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !54
  %arrayidx74 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %70 = bitcast float* %arrayidx74 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !54
  %arrayidx78 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %71 = bitcast float* %arrayidx78 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !54
  %arrayidx81 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %73 = bitcast float* %arrayidx81 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !54
  %arrayidx85 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %74 = bitcast float* %arrayidx85 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !54
  %arrayidx88 = getelementptr inbounds float, float* %33, i64 %indvars.iv
  %76 = bitcast float* %arrayidx88 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !54
  %arrayidx92 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %77 = bitcast float* %arrayidx92 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !54
  %arrayidx95 = getelementptr inbounds float, float* %35, i64 %indvars.iv
  %79 = bitcast float* %arrayidx95 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !54
  %arrayidx99 = getelementptr inbounds float, float* %36, i64 %indvars.iv
  %80 = bitcast float* %arrayidx99 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !54
  %arrayidx102 = getelementptr inbounds float, float* %37, i64 %indvars.iv
  %82 = bitcast float* %arrayidx102 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %nSample
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}
DONE: Generating Code for Node (L) - psychoFilter_fxp_cloned
Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
Cloning Function: wrapperPsychoFilter_fxp_cloned.10
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
Cloning Function: wrapperPsychoFilter_fxp_cloned.10_cloned
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10_cloned
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
Cloning Function: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
Cloning Function: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
Cloning Function: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
Cloning Function: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
15. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodepsychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Finding argument 3:
Argument 3 = i64 %bytes_sumBF
Finding argument 4:
Argument 4 = i64 %nSample
Finding argument 5:
Argument 5 = float** %channelpart1
Finding argument 6:
Argument 6 = i64 %bytes_channelpart1
Finding argument 7:
Argument 7 = float** %channelpart2
Finding argument 8:
Argument 8 = i64 %bytes_channelpart2
Finding argument 9:
Argument 9 = float** %channelpart3
Finding argument 10:
Argument 10 = i64 %bytes_channelpart3
Gen Function type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)*
Arguments: 17
  %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperPsychoFilter_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 1
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 2
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 3
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 4
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 5
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 6
Edge source -- psychoFilter_fxp_cloned
Going to generate ExtarctVal inst from   %psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperPsychoFilter_fxp_cloned with tag 1
CPU Fun: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperPsychoFilter_fxp_cloned
After editing
Node: wrapperPsychoFilter_fxp_cloned with tag 1
CPU Fun: wrapperPsychoFilter_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperPsychoFilter_fxp_cloned
Start: Generating Code for Node (I) - wrapperRotateOrder2_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder2_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder2_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder2_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder2_fxp_cloned
Start: Generating Code for Node (L) - rotateOrder2_fxp_cloned
Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: rotateOrder2_fxp_cloned.11
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11
New Function name: rotateOrder2_fxp_cloned.11_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
Cloning Function: rotateOrder2_fxp_cloned.11_cloned
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11_cloned
New Function name: rotateOrder2_fxp_cloned.11_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: rotateOrder2_fxp_cloned.11_cloned_cloned
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11_cloned_cloned
New Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned
New Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned
New Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned
New Function name: rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !38
  %cmp = icmp ugt i32 %3, 1
  br i1 %cmp, label %if.then, label %if.end157
  %call11 = call i8* @llvm.hpvm.getNode()
  %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call11)
  %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call11) replaced with i64 %idx_x
  %cmp3 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp3, label %if.then4, label %if.end157
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %4 = load float*, float** %arrayidx, align 8, !tbaa !44
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx5, align 4, !tbaa !46
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %6 = load float, float* %m_fSin2Alpha, align 4, !tbaa !48
  %7 = fmul float %5, %6
  %arrayidx6 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %8 = load float*, float** %arrayidx6, align 8, !tbaa !44
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx7, align 4, !tbaa !46
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %10 = load float, float* %m_fCos2Alpha, align 8, !tbaa !51
  %mul8 = fmul float %9, %10
  %add = fsub float %mul8, %7
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !44
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx10, align 4, !tbaa !46
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %13 = load float, float* %m_fSinAlpha, align 4, !tbaa !52
  %14 = fmul float %12, %13
  %arrayidx13 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %15 = load float*, float** %arrayidx13, align 8, !tbaa !44
  %arrayidx14 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx14, align 4, !tbaa !46
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %17 = load float, float* %m_fCosAlpha, align 8, !tbaa !53
  %mul15 = fmul float %16, %17
  %add16 = fsub float %mul15, %14
  %18 = load float*, float** %channelpart2, align 8, !tbaa !44
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx18, align 4, !tbaa !46
  %mul22 = fmul float %12, %17
  %mul26 = fmul float %13, %16
  %add27 = fadd float %mul26, %mul22
  %mul31 = fmul float %5, %10
  %mul35 = fmul float %6, %9
  %add36 = fadd float %mul35, %mul31
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %20 = load float, float* %m_fSinBeta, align 4, !tbaa !54
  %21 = fmul float %add16, %20
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %22 = load float, float* %m_fCosBeta, align 8, !tbaa !55
  %mul39 = fmul float %add, %22
  %add40 = fsub float %mul39, %21
  store float %add40, float* %arrayidx7, align 4, !tbaa !46
  %23 = load float, float* %m_fCosBeta, align 8, !tbaa !55
  %24 = fmul float %add16, %23
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !54
  %mul47 = fmul float %add, %25
  %add48 = fsub float %mul47, %24
  store float %add48, float* %arrayidx14, align 4, !tbaa !46
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %26 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul51 = fmul float %26, 7.500000e-01
  %add52 = fadd float %mul51, 2.500000e-01
  %mul53 = fmul float %19, %add52
  %conv54 = fpext float %mul53 to double
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !54
  %conv58 = fpext float %27 to double
  %square = fmul double %conv58, %conv58
  %mul60 = fmul double %square, 0x3FEBB67AE0000000
  %conv61 = fpext float %add36 to double
  %mul62 = fmul double %mul60, %conv61
  %add63 = fadd double %mul62, %conv54
  %mul65 = fmul float %27, 0x3FFBB67AE0000000
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !55
  %mul67 = fmul float %mul65, %28
  %mul68 = fmul float %add27, %mul67
  %conv69 = fpext float %mul68 to double
  %add70 = fadd double %add63, %conv69
  %conv71 = fptrunc double %add70 to float
  store float %conv71, float* %arrayidx18, align 4, !tbaa !46
  %29 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul75 = fmul float %add27, %29
  %30 = load float, float* %m_fCosBeta, align 8, !tbaa !55
  %mul77 = fmul float %30, 0x3FFBB67AE0000000
  %31 = load float, float* %m_fSinBeta, align 4, !tbaa !54
  %mul79 = fmul float %mul77, %31
  %mul80 = fmul float %19, %mul79
  %sub81 = fsub float %mul75, %mul80
  %mul84 = fmul float %30, %31
  %mul85 = fmul float %add36, %mul84
  %add86 = fadd float %mul85, %sub81
  store float %add86, float* %arrayidx10, align 4, !tbaa !46
  %32 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul90 = fmul float %32, 2.500000e-01
  %add91 = fadd float %mul90, 7.500000e-01
  %mul92 = fmul float %add36, %add91
  %33 = load float, float* %m_fCosBeta, align 8, !tbaa !55
  %34 = load float, float* %m_fSinBeta, align 4, !tbaa !54
  %mul95 = fmul float %33, %34
  %mul96 = fmul float %add27, %mul95
  %sub97 = fsub float %mul92, %mul96
  %conv98 = fpext float %sub97 to double
  %conv102 = fpext float %34 to double
  %square273 = fmul double %conv102, %conv102
  %mul104 = fmul double %square273, 0x3FEBB67AE0000000
  %conv105 = fpext float %19 to double
  %mul106 = fmul double %mul104, %conv105
  %add107 = fadd double %mul106, %conv98
  %conv108 = fptrunc double %add107 to float
  store float %conv108, float* %arrayidx5, align 4, !tbaa !46
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %35 = load float, float* %m_fSin2Gamma, align 4, !tbaa !57
  %36 = fmul float %35, %conv108
  %37 = load float, float* %arrayidx7, align 4, !tbaa !46
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %38 = load float, float* %m_fCos2Gamma, align 8, !tbaa !58
  %mul117 = fmul float %37, %38
  %add118 = fsub float %mul117, %36
  %39 = load float, float* %arrayidx10, align 4, !tbaa !46
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %40 = load float, float* %m_fSinGamma, align 4, !tbaa !59
  %41 = fmul float %39, %40
  %42 = load float, float* %arrayidx14, align 4, !tbaa !46
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %43 = load float, float* %m_fCosGamma, align 8, !tbaa !60
  %mul125 = fmul float %42, %43
  %add126 = fsub float %mul125, %41
  %mul132 = fmul float %39, %43
  %mul136 = fmul float %40, %42
  %add137 = fadd float %mul136, %mul132
  %mul141 = fmul float %38, %conv108
  %mul145 = fmul float %35, %37
  %add146 = fadd float %mul145, %mul141
  store float %add137, float* %arrayidx10, align 4, !tbaa !46
  store float %add126, float* %arrayidx14, align 4, !tbaa !46
  store float %add146, float* %arrayidx5, align 4, !tbaa !46
  store float %add118, float* %arrayidx7, align 4, !tbaa !46
  br label %if.end157
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !65
  %cmp = icmp ugt i32 %3, 1
  br i1 %cmp, label %if.then, label %if.end157

if.then:                                          ; preds = %entry
  %cmp3 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp3, label %if.then4, label %if.end157

if.then4:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %4 = load float*, float** %arrayidx, align 8, !tbaa !47
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx5, align 4, !tbaa !54
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %6 = load float, float* %m_fSin2Alpha, align 4, !tbaa !215
  %7 = fmul float %5, %6
  %arrayidx6 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %8 = load float*, float** %arrayidx6, align 8, !tbaa !47
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx7, align 4, !tbaa !54
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %10 = load float, float* %m_fCos2Alpha, align 8, !tbaa !214
  %mul8 = fmul float %9, %10
  %add = fsub float %mul8, %7
  %arrayidx9 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %11 = load float*, float** %arrayidx9, align 8, !tbaa !47
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx10, align 4, !tbaa !54
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %13 = load float, float* %m_fSinAlpha, align 4, !tbaa !207
  %14 = fmul float %12, %13
  %arrayidx13 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %15 = load float*, float** %arrayidx13, align 8, !tbaa !47
  %arrayidx14 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx14, align 4, !tbaa !54
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %17 = load float, float* %m_fCosAlpha, align 8, !tbaa !206
  %mul15 = fmul float %16, %17
  %add16 = fsub float %mul15, %14
  %18 = load float*, float** %channelpart2, align 8, !tbaa !47
  %arrayidx18 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx18, align 4, !tbaa !54
  %mul22 = fmul float %12, %17
  %mul26 = fmul float %13, %16
  %add27 = fadd float %mul26, %mul22
  %mul31 = fmul float %5, %10
  %mul35 = fmul float %6, %9
  %add36 = fadd float %mul35, %mul31
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %20 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %21 = fmul float %add16, %20
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %22 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul39 = fmul float %add, %22
  %add40 = fsub float %mul39, %21
  store float %add40, float* %arrayidx7, align 4, !tbaa !54
  %23 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %24 = fmul float %add16, %23
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul47 = fmul float %add, %25
  %add48 = fsub float %mul47, %24
  store float %add48, float* %arrayidx14, align 4, !tbaa !54
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %26 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul51 = fmul float %26, 7.500000e-01
  %add52 = fadd float %mul51, 2.500000e-01
  %mul53 = fmul float %19, %add52
  %conv54 = fpext float %mul53 to double
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %conv58 = fpext float %27 to double
  %square = fmul double %conv58, %conv58
  %mul60 = fmul double %square, 0x3FEBB67AE0000000
  %conv61 = fpext float %add36 to double
  %mul62 = fmul double %mul60, %conv61
  %add63 = fadd double %mul62, %conv54
  %mul65 = fmul float %27, 0x3FFBB67AE0000000
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul67 = fmul float %mul65, %28
  %mul68 = fmul float %add27, %mul67
  %conv69 = fpext float %mul68 to double
  %add70 = fadd double %add63, %conv69
  %conv71 = fptrunc double %add70 to float
  store float %conv71, float* %arrayidx18, align 4, !tbaa !54
  %29 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul75 = fmul float %add27, %29
  %30 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul77 = fmul float %30, 0x3FFBB67AE0000000
  %31 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul79 = fmul float %mul77, %31
  %mul80 = fmul float %19, %mul79
  %sub81 = fsub float %mul75, %mul80
  %mul84 = fmul float %30, %31
  %mul85 = fmul float %add36, %mul84
  %add86 = fadd float %mul85, %sub81
  store float %add86, float* %arrayidx10, align 4, !tbaa !54
  %32 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul90 = fmul float %32, 2.500000e-01
  %add91 = fadd float %mul90, 7.500000e-01
  %mul92 = fmul float %add36, %add91
  %33 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %34 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul95 = fmul float %33, %34
  %mul96 = fmul float %add27, %mul95
  %sub97 = fsub float %mul92, %mul96
  %conv98 = fpext float %sub97 to double
  %conv102 = fpext float %34 to double
  %square273 = fmul double %conv102, %conv102
  %mul104 = fmul double %square273, 0x3FEBB67AE0000000
  %conv105 = fpext float %19 to double
  %mul106 = fmul double %mul104, %conv105
  %add107 = fadd double %mul106, %conv98
  %conv108 = fptrunc double %add107 to float
  store float %conv108, float* %arrayidx5, align 4, !tbaa !54
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %35 = load float, float* %m_fSin2Gamma, align 4, !tbaa !219
  %36 = fmul float %35, %conv108
  %37 = load float, float* %arrayidx7, align 4, !tbaa !54
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %38 = load float, float* %m_fCos2Gamma, align 8, !tbaa !218
  %mul117 = fmul float %37, %38
  %add118 = fsub float %mul117, %36
  %39 = load float, float* %arrayidx10, align 4, !tbaa !54
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %40 = load float, float* %m_fSinGamma, align 4, !tbaa !213
  %41 = fmul float %39, %40
  %42 = load float, float* %arrayidx14, align 4, !tbaa !54
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %43 = load float, float* %m_fCosGamma, align 8, !tbaa !212
  %mul125 = fmul float %42, %43
  %add126 = fsub float %mul125, %41
  %mul132 = fmul float %39, %43
  %mul136 = fmul float %40, %42
  %add137 = fadd float %mul136, %mul132
  %mul141 = fmul float %38, %conv108
  %mul145 = fmul float %35, %37
  %add146 = fadd float %mul145, %mul141
  store float %add137, float* %arrayidx10, align 4, !tbaa !54
  store float %add126, float* %arrayidx14, align 4, !tbaa !54
  store float %add146, float* %arrayidx5, align 4, !tbaa !54
  store float %add118, float* %arrayidx7, align 4, !tbaa !54
  br label %if.end157

if.end157:                                        ; preds = %if.then4, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct
}
DONE: Generating Code for Node (L) - rotateOrder2_fxp_cloned
Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: wrapperRotateOrder2_fxp_cloned.12
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
Cloning Function: wrapperRotateOrder2_fxp_cloned.12_cloned
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12_cloned
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart2 : float** %0
4. i64 %bytes_channelpart2 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Invoking child noderotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Finding argument 2:
Argument 2 = i64 %nSample
Finding argument 3:
Argument 3 = float** %channelpart2
Finding argument 4:
Argument 4 = i64 %bytes_channelpart2
Gen Function type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)*
Arguments: 11
  %rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
In VMap case:  indexLimit type = i64
indexVar type = i64
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret %struct.out.wrapperRotateOrder2_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- rotateOrder2_fxp_cloned
Going to generate ExtarctVal inst from   %rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned.11_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart2, i64 %bytes_channelpart2, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperRotateOrder2_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperRotateOrder2_fxp_cloned
After editing
Node: wrapperRotateOrder2_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder2_fxp_cloned.12_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperRotateOrder2_fxp_cloned
Start: Generating Code for Node (I) - wrapperRotateOrder3_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder3_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder3_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder3_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder3_fxp_cloned
Start: Generating Code for Node (L) - rotateOrder3_fxp_cloned
Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: rotateOrder3_fxp_cloned.13
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13
New Function name: rotateOrder3_fxp_cloned.13_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
Cloning Function: rotateOrder3_fxp_cloned.13_cloned
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13_cloned
New Function name: rotateOrder3_fxp_cloned.13_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: rotateOrder3_fxp_cloned.13_cloned_cloned
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13_cloned_cloned
New Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned
New Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned
New Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned
New Function name: rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !38
  %cmp = icmp ugt i32 %3, 2
  br i1 %cmp, label %if.then, label %if.end339
  %call51 = call i8* @llvm.hpvm.getNode()
  %call62 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call51)
  %call62 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call51) replaced with i64 %idx_x
  %cmp7 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp7, label %if.then8, label %if.end339
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %4 = load float*, float** %arrayidx, align 8, !tbaa !44
  %arrayidx9 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx9, align 4, !tbaa !46
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %6 = load float, float* %m_fSin3Alpha, align 4, !tbaa !48
  %7 = fmul float %5, %6
  %8 = load float*, float** %channelpart3, align 8, !tbaa !44
  %arrayidx11 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx11, align 4, !tbaa !46
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %10 = load float, float* %m_fCos3Alpha, align 8, !tbaa !51
  %mul12 = fmul float %9, %10
  %add = fsub float %mul12, %7
  %arrayidx13 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %11 = load float*, float** %arrayidx13, align 8, !tbaa !44
  %arrayidx14 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx14, align 4, !tbaa !46
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !52
  %14 = fmul float %12, %13
  %arrayidx17 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %15 = load float*, float** %arrayidx17, align 8, !tbaa !44
  %arrayidx18 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx18, align 4, !tbaa !46
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %17 = load float, float* %m_fCos2Alpha, align 8, !tbaa !53
  %mul19 = fmul float %16, %17
  %add20 = fsub float %mul19, %14
  %arrayidx21 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %18 = load float*, float** %arrayidx21, align 8, !tbaa !44
  %arrayidx22 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx22, align 4, !tbaa !46
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %20 = load float, float* %m_fSinAlpha, align 4, !tbaa !54
  %21 = fmul float %19, %20
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %22 = load float*, float** %arrayidx25, align 8, !tbaa !44
  %arrayidx26 = getelementptr inbounds float, float* %22, i64 %idx_x
  %23 = load float, float* %arrayidx26, align 4, !tbaa !46
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %24 = load float, float* %m_fCosAlpha, align 8, !tbaa !55
  %mul27 = fmul float %23, %24
  %add28 = fsub float %mul27, %21
  %arrayidx29 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %25 = load float*, float** %arrayidx29, align 8, !tbaa !44
  %arrayidx30 = getelementptr inbounds float, float* %25, i64 %idx_x
  %26 = load float, float* %arrayidx30, align 4, !tbaa !46
  %mul34 = fmul float %19, %24
  %mul38 = fmul float %20, %23
  %add39 = fadd float %mul38, %mul34
  %mul43 = fmul float %12, %17
  %mul47 = fmul float %13, %16
  %add48 = fadd float %mul47, %mul43
  %mul52 = fmul float %5, %10
  %mul56 = fmul float %6, %9
  %add57 = fadd float %mul56, %mul52
  %mul58 = fmul float %add, 1.250000e-01
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul59 = fmul float %27, 3.000000e+00
  %add60 = fadd float %mul59, 5.000000e+00
  %mul61 = fmul float %mul58, %add60
  %mul62 = fmul float %add20, 0x3FF3988E20000000
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul63 = fmul float %mul62, %28
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul64 = fmul float %mul63, %29
  %sub65 = fsub float %mul61, %mul64
  %conv66 = fpext float %sub65 to double
  %mul68 = fmul float %add28, 0x3FEEFBDEC0000000
  %conv69 = fpext float %mul68 to double
  %conv71 = fpext float %29 to double
  %square = fmul double %conv71, %conv71
  %mul73 = fmul double %square, %conv69
  %add74 = fadd double %mul73, %conv66
  %conv75 = fptrunc double %add74 to float
  store float %conv75, float* %arrayidx11, align 4, !tbaa !46
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul79 = fmul float %add20, %30
  %mul80 = fmul float %add28, 0x3FF94C5840000000
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul82 = fmul float %mul80, %31
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul84 = fmul float %mul82, %32
  %sub85 = fsub float %mul79, %mul84
  %mul86 = fmul float %add, 0x3FF3988E20000000
  %mul88 = fmul float %mul86, %31
  %mul90 = fmul float %mul88, %32
  %add91 = fadd float %mul90, %sub85
  store float %add91, float* %arrayidx18, align 4, !tbaa !46
  %mul94 = fmul float %add28, 1.250000e-01
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul96 = fmul float %33, 5.000000e+00
  %add97 = fadd float %mul96, 3.000000e+00
  %mul98 = fmul float %mul94, %add97
  %mul99 = fmul float %add20, 0x3FF94C5840000000
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul101 = fmul float %mul99, %34
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul103 = fmul float %mul101, %35
  %sub104 = fsub float %mul98, %mul103
  %conv105 = fpext float %sub104 to double
  %mul107 = fmul float %add, 0x3FEEFBDEC0000000
  %conv108 = fpext float %mul107 to double
  %conv110 = fpext float %35 to double
  %square543 = fmul double %conv110, %conv110
  %mul112 = fmul double %square543, %conv108
  %add113 = fadd double %mul112, %conv105
  %conv114 = fptrunc double %add113 to float
  store float %conv114, float* %arrayidx26, align 4, !tbaa !46
  store float %conv114, float* %arrayidx11, align 4, !tbaa !46
  %mul119 = fmul float %26, 2.500000e-01
  %36 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul121 = fmul float %mul119, %36
  %37 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul123 = fmul float %37, 1.500000e+01
  %add124 = fadd float %mul123, -1.000000e+00
  %mul125 = fmul float %mul121, %add124
  %conv126 = fpext float %mul125 to double
  %mul128 = fmul float %add48, 0x3FFEFBDEC0000000
  %mul130 = fmul float %mul128, %36
  %conv131 = fpext float %mul130 to double
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %conv133 = fpext float %38 to double
  %square544 = fmul double %conv133, %conv133
  %mul135 = fmul double %square544, %conv131
  %add136 = fadd double %mul135, %conv126
  %mul138 = fmul float %add57, 0x3FE94C5840000000
  %conv139 = fpext float %mul138 to double
  %call142 = tail call double @pow(double %conv133, double 3.000000e+00) #24
  %mul143 = fmul double %call142, %conv139
  %add144 = fadd double %mul143, %add136
  %mul146 = fmul float %add39, 0x3FC3988E20000000
  %39 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %40 = load float, float* %m_fSin3Beta, align 4, !tbaa !59
  %mul148 = fmul float %40, 5.000000e+00
  %add149 = fadd float %39, %mul148
  %mul150 = fmul float %mul146, %add149
  %conv151 = fpext float %mul150 to double
  %add152 = fadd double %add144, %conv151
  %conv153 = fptrunc double %add152 to float
  %41 = load float*, float** %arrayidx29, align 8, !tbaa !44
  %arrayidx155 = getelementptr inbounds float, float* %41, i64 %idx_x
  store float %conv153, float* %arrayidx155, align 4, !tbaa !46
  %mul156 = fmul float %add39, 6.250000e-02
  %42 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %43 = load float, float* %m_fCos3Beta, align 8, !tbaa !60
  %mul158 = fmul float %43, 1.500000e+01
  %add159 = fadd float %42, %mul158
  %mul160 = fmul float %mul156, %add159
  %mul162 = fmul float %add48, 0x3FD94C5840000000
  %44 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %mul164 = fmul float %44, 3.000000e+00
  %add165 = fadd float %mul164, 1.000000e+00
  %mul166 = fmul float %mul162, %add165
  %45 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul168 = fmul float %45, %mul166
  %add169 = fadd float %mul160, %mul168
  %conv170 = fpext float %add169 to double
  %mul172 = fmul float %add57, 0x3FEEFBDEC0000000
  %mul174 = fmul float %mul172, %42
  %conv175 = fpext float %mul174 to double
  %conv177 = fpext float %45 to double
  %square545 = fmul double %conv177, %conv177
  %mul179 = fmul double %square545, %conv175
  %add180 = fadd double %mul179, %conv170
  %conv183 = fpext float %26 to double
  %mul184 = fmul double %conv183, 0x3FC3988E20000000
  %46 = load float, float* %m_fSin3Beta, align 4, !tbaa !59
  %mul187 = fmul float %46, 5.000000e+00
  %add188 = fadd float %45, %mul187
  %conv189 = fpext float %add188 to double
  %mul190 = fmul double %mul184, %conv189
  %sub191 = fsub double %add180, %mul190
  %conv192 = fptrunc double %sub191 to float
  %47 = load float*, float** %arrayidx21, align 8, !tbaa !44
  %arrayidx194 = getelementptr inbounds float, float* %47, i64 %idx_x
  store float %conv192, float* %arrayidx194, align 4, !tbaa !46
  %mul195 = fmul float %add48, 1.250000e-01
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul197 = fmul float %48, 5.000000e+00
  %49 = load float, float* %m_fCos3Beta, align 8, !tbaa !60
  %mul199 = fmul float %49, 3.000000e+00
  %add200 = fadd float %mul197, %mul199
  %mul201 = fmul float %mul195, %add200
  %mul203 = fmul float %add57, 0x3FD3988E20000000
  %50 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %add205 = fadd float %50, 3.000000e+00
  %mul206 = fmul float %mul203, %add205
  %51 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul208 = fmul float %51, %mul206
  %add209 = fadd float %mul201, %mul208
  %conv210 = fpext float %add209 to double
  %mul212 = fmul float %26, 0x3FFEFBDEC0000000
  %mul214 = fmul float %mul212, %48
  %conv215 = fpext float %mul214 to double
  %conv217 = fpext float %51 to double
  %square546 = fmul double %conv217, %conv217
  %mul219 = fmul double %square546, %conv215
  %add220 = fadd double %mul219, %conv210
  %conv223 = fpext float %add39 to double
  %mul224 = fmul double %conv223, 0x3FC94C5840000000
  %52 = load float, float* %m_fSin3Beta, align 4, !tbaa !59
  %mul227 = fmul float %52, 3.000000e+00
  %sub228 = fsub float %51, %mul227
  %conv229 = fpext float %sub228 to double
  %mul230 = fmul double %mul224, %conv229
  %add231 = fadd double %add220, %mul230
  %conv232 = fptrunc double %add231 to float
  %53 = load float*, float** %arrayidx13, align 8, !tbaa !44
  %arrayidx234 = getelementptr inbounds float, float* %53, i64 %idx_x
  store float %conv232, float* %arrayidx234, align 4, !tbaa !46
  %mul235 = fmul float %add57, 6.250000e-02
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !57
  %mul237 = fmul float %54, 1.500000e+01
  %55 = load float, float* %m_fCos3Beta, align 8, !tbaa !60
  %add239 = fadd float %mul237, %55
  %mul240 = fmul float %mul235, %add239
  %mul242 = fmul float %add48, 0x3FD3988E20000000
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !56
  %add244 = fadd float %56, 3.000000e+00
  %mul245 = fmul float %mul242, %add244
  %57 = load float, float* %m_fSinBeta, align 4, !tbaa !58
  %mul247 = fmul float %57, %mul245
  %sub248 = fsub float %mul240, %mul247
  %conv249 = fpext float %sub248 to double
  %mul251 = fmul float %add39, 0x3FEEFBDEC0000000
  %mul253 = fmul float %mul251, %54
  %conv254 = fpext float %mul253 to double
  %conv256 = fpext float %57 to double
  %square547 = fmul double %conv256, %conv256
  %mul258 = fmul double %square547, %conv254
  %add259 = fadd double %mul258, %conv249
  %mul263 = fmul double %conv183, 0x3FE94C5840000000
  %call266 = tail call double @pow(double %conv256, double 3.000000e+00) #24
  %mul267 = fmul double %mul263, %call266
  %sub268 = fsub double %add259, %mul267
  %conv269 = fptrunc double %sub268 to float
  %58 = load float*, float** %arrayidx, align 8, !tbaa !44
  %arrayidx271 = getelementptr inbounds float, float* %58, i64 %idx_x
  store float %conv269, float* %arrayidx271, align 4, !tbaa !46
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %59 = load float, float* %m_fSin3Gamma, align 4, !tbaa !61
  %60 = fmul float %59, %conv269
  %61 = load float*, float** %channelpart3, align 8, !tbaa !44
  %arrayidx277 = getelementptr inbounds float, float* %61, i64 %idx_x
  %62 = load float, float* %arrayidx277, align 4, !tbaa !46
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %63 = load float, float* %m_fCos3Gamma, align 8, !tbaa !62
  %mul278 = fmul float %62, %63
  %add279 = fsub float %mul278, %60
  %64 = load float*, float** %arrayidx13, align 8, !tbaa !44
  %arrayidx281 = getelementptr inbounds float, float* %64, i64 %idx_x
  %65 = load float, float* %arrayidx281, align 4, !tbaa !46
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %66 = load float, float* %m_fSin2Gamma, align 4, !tbaa !63
  %67 = fmul float %65, %66
  %68 = load float*, float** %arrayidx17, align 8, !tbaa !44
  %arrayidx285 = getelementptr inbounds float, float* %68, i64 %idx_x
  %69 = load float, float* %arrayidx285, align 4, !tbaa !46
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %70 = load float, float* %m_fCos2Gamma, align 8, !tbaa !64
  %mul286 = fmul float %69, %70
  %add287 = fsub float %mul286, %67
  %71 = load float*, float** %arrayidx21, align 8, !tbaa !44
  %arrayidx289 = getelementptr inbounds float, float* %71, i64 %idx_x
  %72 = load float, float* %arrayidx289, align 4, !tbaa !46
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %73 = load float, float* %m_fSinGamma, align 4, !tbaa !65
  %74 = fmul float %72, %73
  %75 = load float*, float** %arrayidx25, align 8, !tbaa !44
  %arrayidx293 = getelementptr inbounds float, float* %75, i64 %idx_x
  %76 = load float, float* %arrayidx293, align 4, !tbaa !46
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %77 = load float, float* %m_fCosGamma, align 8, !tbaa !66
  %mul294 = fmul float %76, %77
  %add295 = fsub float %mul294, %74
  %78 = load float*, float** %arrayidx29, align 8, !tbaa !44
  %arrayidx297 = getelementptr inbounds float, float* %78, i64 %idx_x
  %79 = bitcast float* %arrayidx297 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !46
  %mul301 = fmul float %72, %77
  %mul305 = fmul float %73, %76
  %add306 = fadd float %mul305, %mul301
  %mul310 = fmul float %65, %70
  %mul314 = fmul float %66, %69
  %add315 = fadd float %mul314, %mul310
  %mul319 = fmul float %63, %conv269
  %mul323 = fmul float %59, %62
  %add324 = fadd float %mul323, %mul319
  store float %add279, float* %arrayidx277, align 4, !tbaa !46
  store float %add287, float* %arrayidx285, align 4, !tbaa !46
  store float %add295, float* %arrayidx293, align 4, !tbaa !46
  store i32 %80, i32* %79, align 4, !tbaa !46
  store float %add306, float* %arrayidx289, align 4, !tbaa !46
  store float %add315, float* %arrayidx281, align 4, !tbaa !46
  store float %add324, float* %arrayidx271, align 4, !tbaa !46
  br label %if.end339
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !65
  %cmp = icmp ugt i32 %3, 2
  br i1 %cmp, label %if.then, label %if.end339

if.then:                                          ; preds = %entry
  %cmp7 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp7, label %if.then8, label %if.end339

if.then8:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %4 = load float*, float** %arrayidx, align 8, !tbaa !47
  %arrayidx9 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx9, align 4, !tbaa !54
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %6 = load float, float* %m_fSin3Alpha, align 4, !tbaa !221
  %7 = fmul float %5, %6
  %8 = load float*, float** %channelpart3, align 8, !tbaa !47
  %arrayidx11 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx11, align 4, !tbaa !54
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %10 = load float, float* %m_fCos3Alpha, align 8, !tbaa !220
  %mul12 = fmul float %9, %10
  %add = fsub float %mul12, %7
  %arrayidx13 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %11 = load float*, float** %arrayidx13, align 8, !tbaa !47
  %arrayidx14 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx14, align 4, !tbaa !54
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !215
  %14 = fmul float %12, %13
  %arrayidx17 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %15 = load float*, float** %arrayidx17, align 8, !tbaa !47
  %arrayidx18 = getelementptr inbounds float, float* %15, i64 %idx_x
  %16 = load float, float* %arrayidx18, align 4, !tbaa !54
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %17 = load float, float* %m_fCos2Alpha, align 8, !tbaa !214
  %mul19 = fmul float %16, %17
  %add20 = fsub float %mul19, %14
  %arrayidx21 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %18 = load float*, float** %arrayidx21, align 8, !tbaa !47
  %arrayidx22 = getelementptr inbounds float, float* %18, i64 %idx_x
  %19 = load float, float* %arrayidx22, align 4, !tbaa !54
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %20 = load float, float* %m_fSinAlpha, align 4, !tbaa !207
  %21 = fmul float %19, %20
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %22 = load float*, float** %arrayidx25, align 8, !tbaa !47
  %arrayidx26 = getelementptr inbounds float, float* %22, i64 %idx_x
  %23 = load float, float* %arrayidx26, align 4, !tbaa !54
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %24 = load float, float* %m_fCosAlpha, align 8, !tbaa !206
  %mul27 = fmul float %23, %24
  %add28 = fsub float %mul27, %21
  %arrayidx29 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %25 = load float*, float** %arrayidx29, align 8, !tbaa !47
  %arrayidx30 = getelementptr inbounds float, float* %25, i64 %idx_x
  %26 = load float, float* %arrayidx30, align 4, !tbaa !54
  %mul34 = fmul float %19, %24
  %mul38 = fmul float %20, %23
  %add39 = fadd float %mul38, %mul34
  %mul43 = fmul float %12, %17
  %mul47 = fmul float %13, %16
  %add48 = fadd float %mul47, %mul43
  %mul52 = fmul float %5, %10
  %mul56 = fmul float %6, %9
  %add57 = fadd float %mul56, %mul52
  %mul58 = fmul float %add, 1.250000e-01
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul59 = fmul float %27, 3.000000e+00
  %add60 = fadd float %mul59, 5.000000e+00
  %mul61 = fmul float %mul58, %add60
  %mul62 = fmul float %add20, 0x3FF3988E20000000
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul63 = fmul float %mul62, %28
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul64 = fmul float %mul63, %29
  %sub65 = fsub float %mul61, %mul64
  %conv66 = fpext float %sub65 to double
  %mul68 = fmul float %add28, 0x3FEEFBDEC0000000
  %conv69 = fpext float %mul68 to double
  %conv71 = fpext float %29 to double
  %square = fmul double %conv71, %conv71
  %mul73 = fmul double %square, %conv69
  %add74 = fadd double %mul73, %conv66
  %conv75 = fptrunc double %add74 to float
  store float %conv75, float* %arrayidx11, align 4, !tbaa !54
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul79 = fmul float %add20, %30
  %mul80 = fmul float %add28, 0x3FF94C5840000000
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul82 = fmul float %mul80, %31
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul84 = fmul float %mul82, %32
  %sub85 = fsub float %mul79, %mul84
  %mul86 = fmul float %add, 0x3FF3988E20000000
  %mul88 = fmul float %mul86, %31
  %mul90 = fmul float %mul88, %32
  %add91 = fadd float %mul90, %sub85
  store float %add91, float* %arrayidx18, align 4, !tbaa !54
  %mul94 = fmul float %add28, 1.250000e-01
  %33 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul96 = fmul float %33, 5.000000e+00
  %add97 = fadd float %mul96, 3.000000e+00
  %mul98 = fmul float %mul94, %add97
  %mul99 = fmul float %add20, 0x3FF94C5840000000
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul101 = fmul float %mul99, %34
  %35 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul103 = fmul float %mul101, %35
  %sub104 = fsub float %mul98, %mul103
  %conv105 = fpext float %sub104 to double
  %mul107 = fmul float %add, 0x3FEEFBDEC0000000
  %conv108 = fpext float %mul107 to double
  %conv110 = fpext float %35 to double
  %square543 = fmul double %conv110, %conv110
  %mul112 = fmul double %square543, %conv108
  %add113 = fadd double %mul112, %conv105
  %conv114 = fptrunc double %add113 to float
  store float %conv114, float* %arrayidx26, align 4, !tbaa !54
  store float %conv114, float* %arrayidx11, align 4, !tbaa !54
  %mul119 = fmul float %26, 2.500000e-01
  %36 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul121 = fmul float %mul119, %36
  %37 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul123 = fmul float %37, 1.500000e+01
  %add124 = fadd float %mul123, -1.000000e+00
  %mul125 = fmul float %mul121, %add124
  %conv126 = fpext float %mul125 to double
  %mul128 = fmul float %add48, 0x3FFEFBDEC0000000
  %mul130 = fmul float %mul128, %36
  %conv131 = fpext float %mul130 to double
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %conv133 = fpext float %38 to double
  %square544 = fmul double %conv133, %conv133
  %mul135 = fmul double %square544, %conv131
  %add136 = fadd double %mul135, %conv126
  %mul138 = fmul float %add57, 0x3FE94C5840000000
  %conv139 = fpext float %mul138 to double
  %call142 = tail call double @pow(double %conv133, double 3.000000e+00) #24
  %mul143 = fmul double %call142, %conv139
  %add144 = fadd double %mul143, %add136
  %mul146 = fmul float %add39, 0x3FC3988E20000000
  %39 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %40 = load float, float* %m_fSin3Beta, align 4, !tbaa !223
  %mul148 = fmul float %40, 5.000000e+00
  %add149 = fadd float %39, %mul148
  %mul150 = fmul float %mul146, %add149
  %conv151 = fpext float %mul150 to double
  %add152 = fadd double %add144, %conv151
  %conv153 = fptrunc double %add152 to float
  %41 = load float*, float** %arrayidx29, align 8, !tbaa !47
  %arrayidx155 = getelementptr inbounds float, float* %41, i64 %idx_x
  store float %conv153, float* %arrayidx155, align 4, !tbaa !54
  %mul156 = fmul float %add39, 6.250000e-02
  %42 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %43 = load float, float* %m_fCos3Beta, align 8, !tbaa !222
  %mul158 = fmul float %43, 1.500000e+01
  %add159 = fadd float %42, %mul158
  %mul160 = fmul float %mul156, %add159
  %mul162 = fmul float %add48, 0x3FD94C5840000000
  %44 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %mul164 = fmul float %44, 3.000000e+00
  %add165 = fadd float %mul164, 1.000000e+00
  %mul166 = fmul float %mul162, %add165
  %45 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul168 = fmul float %45, %mul166
  %add169 = fadd float %mul160, %mul168
  %conv170 = fpext float %add169 to double
  %mul172 = fmul float %add57, 0x3FEEFBDEC0000000
  %mul174 = fmul float %mul172, %42
  %conv175 = fpext float %mul174 to double
  %conv177 = fpext float %45 to double
  %square545 = fmul double %conv177, %conv177
  %mul179 = fmul double %square545, %conv175
  %add180 = fadd double %mul179, %conv170
  %conv183 = fpext float %26 to double
  %mul184 = fmul double %conv183, 0x3FC3988E20000000
  %46 = load float, float* %m_fSin3Beta, align 4, !tbaa !223
  %mul187 = fmul float %46, 5.000000e+00
  %add188 = fadd float %45, %mul187
  %conv189 = fpext float %add188 to double
  %mul190 = fmul double %mul184, %conv189
  %sub191 = fsub double %add180, %mul190
  %conv192 = fptrunc double %sub191 to float
  %47 = load float*, float** %arrayidx21, align 8, !tbaa !47
  %arrayidx194 = getelementptr inbounds float, float* %47, i64 %idx_x
  store float %conv192, float* %arrayidx194, align 4, !tbaa !54
  %mul195 = fmul float %add48, 1.250000e-01
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul197 = fmul float %48, 5.000000e+00
  %49 = load float, float* %m_fCos3Beta, align 8, !tbaa !222
  %mul199 = fmul float %49, 3.000000e+00
  %add200 = fadd float %mul197, %mul199
  %mul201 = fmul float %mul195, %add200
  %mul203 = fmul float %add57, 0x3FD3988E20000000
  %50 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %add205 = fadd float %50, 3.000000e+00
  %mul206 = fmul float %mul203, %add205
  %51 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul208 = fmul float %51, %mul206
  %add209 = fadd float %mul201, %mul208
  %conv210 = fpext float %add209 to double
  %mul212 = fmul float %26, 0x3FFEFBDEC0000000
  %mul214 = fmul float %mul212, %48
  %conv215 = fpext float %mul214 to double
  %conv217 = fpext float %51 to double
  %square546 = fmul double %conv217, %conv217
  %mul219 = fmul double %square546, %conv215
  %add220 = fadd double %mul219, %conv210
  %conv223 = fpext float %add39 to double
  %mul224 = fmul double %conv223, 0x3FC94C5840000000
  %52 = load float, float* %m_fSin3Beta, align 4, !tbaa !223
  %mul227 = fmul float %52, 3.000000e+00
  %sub228 = fsub float %51, %mul227
  %conv229 = fpext float %sub228 to double
  %mul230 = fmul double %mul224, %conv229
  %add231 = fadd double %add220, %mul230
  %conv232 = fptrunc double %add231 to float
  %53 = load float*, float** %arrayidx13, align 8, !tbaa !47
  %arrayidx234 = getelementptr inbounds float, float* %53, i64 %idx_x
  store float %conv232, float* %arrayidx234, align 4, !tbaa !54
  %mul235 = fmul float %add57, 6.250000e-02
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul237 = fmul float %54, 1.500000e+01
  %55 = load float, float* %m_fCos3Beta, align 8, !tbaa !222
  %add239 = fadd float %mul237, %55
  %mul240 = fmul float %mul235, %add239
  %mul242 = fmul float %add48, 0x3FD3988E20000000
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !216
  %add244 = fadd float %56, 3.000000e+00
  %mul245 = fmul float %mul242, %add244
  %57 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul247 = fmul float %57, %mul245
  %sub248 = fsub float %mul240, %mul247
  %conv249 = fpext float %sub248 to double
  %mul251 = fmul float %add39, 0x3FEEFBDEC0000000
  %mul253 = fmul float %mul251, %54
  %conv254 = fpext float %mul253 to double
  %conv256 = fpext float %57 to double
  %square547 = fmul double %conv256, %conv256
  %mul258 = fmul double %square547, %conv254
  %add259 = fadd double %mul258, %conv249
  %mul263 = fmul double %conv183, 0x3FE94C5840000000
  %call266 = tail call double @pow(double %conv256, double 3.000000e+00) #24
  %mul267 = fmul double %mul263, %call266
  %sub268 = fsub double %add259, %mul267
  %conv269 = fptrunc double %sub268 to float
  %58 = load float*, float** %arrayidx, align 8, !tbaa !47
  %arrayidx271 = getelementptr inbounds float, float* %58, i64 %idx_x
  store float %conv269, float* %arrayidx271, align 4, !tbaa !54
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %59 = load float, float* %m_fSin3Gamma, align 4, !tbaa !225
  %60 = fmul float %59, %conv269
  %61 = load float*, float** %channelpart3, align 8, !tbaa !47
  %arrayidx277 = getelementptr inbounds float, float* %61, i64 %idx_x
  %62 = load float, float* %arrayidx277, align 4, !tbaa !54
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %63 = load float, float* %m_fCos3Gamma, align 8, !tbaa !224
  %mul278 = fmul float %62, %63
  %add279 = fsub float %mul278, %60
  %64 = load float*, float** %arrayidx13, align 8, !tbaa !47
  %arrayidx281 = getelementptr inbounds float, float* %64, i64 %idx_x
  %65 = load float, float* %arrayidx281, align 4, !tbaa !54
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %66 = load float, float* %m_fSin2Gamma, align 4, !tbaa !219
  %67 = fmul float %65, %66
  %68 = load float*, float** %arrayidx17, align 8, !tbaa !47
  %arrayidx285 = getelementptr inbounds float, float* %68, i64 %idx_x
  %69 = load float, float* %arrayidx285, align 4, !tbaa !54
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %70 = load float, float* %m_fCos2Gamma, align 8, !tbaa !218
  %mul286 = fmul float %69, %70
  %add287 = fsub float %mul286, %67
  %71 = load float*, float** %arrayidx21, align 8, !tbaa !47
  %arrayidx289 = getelementptr inbounds float, float* %71, i64 %idx_x
  %72 = load float, float* %arrayidx289, align 4, !tbaa !54
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %73 = load float, float* %m_fSinGamma, align 4, !tbaa !213
  %74 = fmul float %72, %73
  %75 = load float*, float** %arrayidx25, align 8, !tbaa !47
  %arrayidx293 = getelementptr inbounds float, float* %75, i64 %idx_x
  %76 = load float, float* %arrayidx293, align 4, !tbaa !54
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %77 = load float, float* %m_fCosGamma, align 8, !tbaa !212
  %mul294 = fmul float %76, %77
  %add295 = fsub float %mul294, %74
  %78 = load float*, float** %arrayidx29, align 8, !tbaa !47
  %arrayidx297 = getelementptr inbounds float, float* %78, i64 %idx_x
  %79 = bitcast float* %arrayidx297 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !54
  %mul301 = fmul float %72, %77
  %mul305 = fmul float %73, %76
  %add306 = fadd float %mul305, %mul301
  %mul310 = fmul float %65, %70
  %mul314 = fmul float %66, %69
  %add315 = fadd float %mul314, %mul310
  %mul319 = fmul float %63, %conv269
  %mul323 = fmul float %59, %62
  %add324 = fadd float %mul323, %mul319
  store float %add279, float* %arrayidx277, align 4, !tbaa !54
  store float %add287, float* %arrayidx285, align 4, !tbaa !54
  store float %add295, float* %arrayidx293, align 4, !tbaa !54
  store i32 %80, i32* %79, align 4, !tbaa !54
  store float %add306, float* %arrayidx289, align 4, !tbaa !54
  store float %add315, float* %arrayidx281, align 4, !tbaa !54
  store float %add324, float* %arrayidx271, align 4, !tbaa !54
  br label %if.end339

if.end339:                                        ; preds = %if.then8, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct
}
DONE: Generating Code for Node (L) - rotateOrder3_fxp_cloned
Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: wrapperRotateOrder3_fxp_cloned.14
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
Cloning Function: wrapperRotateOrder3_fxp_cloned.14_cloned
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14_cloned
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart3 : float** %0
4. i64 %bytes_channelpart3 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Invoking child noderotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Finding argument 2:
Argument 2 = i64 %nSample
Finding argument 3:
Argument 3 = float** %channelpart3
Finding argument 4:
Argument 4 = i64 %bytes_channelpart3
Gen Function type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)*
Arguments: 11
  %rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
In VMap case:  indexLimit type = i64
indexVar type = i64
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret %struct.out.wrapperRotateOrder3_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- rotateOrder3_fxp_cloned
Going to generate ExtarctVal inst from   %rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned.13_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart3, i64 %bytes_channelpart3, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperRotateOrder3_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperRotateOrder3_fxp_cloned
After editing
Node: wrapperRotateOrder3_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder3_fxp_cloned.14_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperRotateOrder3_fxp_cloned
Start: Generating Code for Node (I) - wrapperRotateOrder1_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder1_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder1_fxp_cloned
Start: Generating Code for Node (L) - wrapperRotateOrder1_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperRotateOrder1_fxp_cloned
Start: Generating Code for Node (L) - rotateOrder1_fxp_cloned
Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: rotateOrder1_fxp_cloned.15
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15
New Function name: rotateOrder1_fxp_cloned.15_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
Cloning Function: rotateOrder1_fxp_cloned.15_cloned
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15_cloned
New Function name: rotateOrder1_fxp_cloned.15_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: rotateOrder1_fxp_cloned.15_cloned_cloned
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15_cloned_cloned
New Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned
New Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned
New Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned
New Function name: rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !38
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end58, label %if.then
  %call2 = call i8* @llvm.hpvm.getNode()
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2)
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2) replaced with i64 %idx_x
  %cmp2 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp2, label %if.then3, label %if.end58
  %4 = load float*, float** %channelpart1, align 8, !tbaa !44
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx4, align 4, !tbaa !46
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %6 = load float, float* %m_fSinAlpha, align 4, !tbaa !48
  %7 = fmul float %5, %6
  %arrayidx5 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx5, align 8, !tbaa !44
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx6, align 4, !tbaa !46
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %10 = load float, float* %m_fCosAlpha, align 8, !tbaa !51
  %mul7 = fmul float %9, %10
  %add = fsub float %mul7, %7
  %arrayidx8 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %11 = load float*, float** %arrayidx8, align 8, !tbaa !44
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx9, align 4, !tbaa !46
  %mul13 = fmul float %5, %10
  %mul17 = fmul float %6, %9
  %add18 = fadd float %mul17, %mul13
  store float %add, float* %arrayidx6, align 4, !tbaa !46
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !52
  %mul21 = fmul float %12, %13
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !53
  %mul22 = fmul float %add18, %14
  %add23 = fadd float %mul21, %mul22
  store float %add23, float* %arrayidx9, align 4, !tbaa !46
  %15 = load float, float* %m_fCosBeta, align 8, !tbaa !52
  %mul27 = fmul float %add18, %15
  %16 = load float, float* %m_fSinBeta, align 4, !tbaa !53
  %mul29 = fmul float %12, %16
  %add30 = fadd float %mul27, %mul29
  store float %add30, float* %arrayidx4, align 4, !tbaa !46
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %17 = load float, float* %m_fSinGamma, align 4, !tbaa !54
  %18 = fmul float %add30, %17
  %19 = load float, float* %arrayidx6, align 4, !tbaa !46
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %20 = load float, float* %m_fCosGamma, align 8, !tbaa !55
  %mul39 = fmul float %19, %20
  %add40 = fsub float %mul39, %18
  %21 = bitcast float* %arrayidx9 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !46
  %mul46 = fmul float %add30, %20
  %mul50 = fmul float %17, %19
  %add51 = fadd float %mul50, %mul46
  store float %add51, float* %arrayidx4, align 4, !tbaa !46
  store float %add40, float* %arrayidx6, align 4, !tbaa !46
  store i32 %22, i32* %21, align 4, !tbaa !46
  br label %if.end58
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i64 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !65
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end58, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp slt i64 %idx_x, %nSample
  br i1 %cmp2, label %if.then3, label %if.end58

if.then3:                                         ; preds = %if.then
  %4 = load float*, float** %channelpart1, align 8, !tbaa !47
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 %idx_x
  %5 = load float, float* %arrayidx4, align 4, !tbaa !54
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %6 = load float, float* %m_fSinAlpha, align 4, !tbaa !207
  %7 = fmul float %5, %6
  %arrayidx5 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx5, align 8, !tbaa !47
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idx_x
  %9 = load float, float* %arrayidx6, align 4, !tbaa !54
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %10 = load float, float* %m_fCosAlpha, align 8, !tbaa !206
  %mul7 = fmul float %9, %10
  %add = fsub float %mul7, %7
  %arrayidx8 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %11 = load float*, float** %arrayidx8, align 8, !tbaa !47
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idx_x
  %12 = load float, float* %arrayidx9, align 4, !tbaa !54
  %mul13 = fmul float %5, %10
  %mul17 = fmul float %6, %9
  %add18 = fadd float %mul17, %mul13
  store float %add, float* %arrayidx6, align 4, !tbaa !54
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul21 = fmul float %12, %13
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul22 = fmul float %add18, %14
  %add23 = fadd float %mul21, %mul22
  store float %add23, float* %arrayidx9, align 4, !tbaa !54
  %15 = load float, float* %m_fCosBeta, align 8, !tbaa !209
  %mul27 = fmul float %add18, %15
  %16 = load float, float* %m_fSinBeta, align 4, !tbaa !210
  %mul29 = fmul float %12, %16
  %add30 = fadd float %mul27, %mul29
  store float %add30, float* %arrayidx4, align 4, !tbaa !54
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %17 = load float, float* %m_fSinGamma, align 4, !tbaa !213
  %18 = fmul float %add30, %17
  %19 = load float, float* %arrayidx6, align 4, !tbaa !54
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %20 = load float, float* %m_fCosGamma, align 8, !tbaa !212
  %mul39 = fmul float %19, %20
  %add40 = fsub float %mul39, %18
  %21 = bitcast float* %arrayidx9 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !54
  %mul46 = fmul float %add30, %20
  %mul50 = fmul float %17, %19
  %add51 = fadd float %mul50, %mul46
  store float %add51, float* %arrayidx4, align 4, !tbaa !54
  store float %add40, float* %arrayidx6, align 4, !tbaa !54
  store i32 %22, i32* %21, align 4, !tbaa !54
  br label %if.end58

if.end58:                                         ; preds = %if.then3, %if.then, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct
}
DONE: Generating Code for Node (L) - rotateOrder1_fxp_cloned
Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
Cloning Function: wrapperRotateOrder1_fxp_cloned.16
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
Cloning Function: wrapperRotateOrder1_fxp_cloned.16_cloned
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16_cloned
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. i64 %nSample : i64 %0
3. float** %channelpart1 : float** %0
4. i64 %bytes_channelpart1 : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Invoking child noderotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Finding argument 2:
Argument 2 = i64 %nSample
Finding argument 3:
Argument 3 = float** %channelpart1
Finding argument 4:
Argument 4 = i64 %bytes_channelpart1
Gen Function type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i64, float**, i64)*
Arguments: 11
  %rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
In VMap case:  indexLimit type = i64
indexVar type = i64
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %nSample, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %nSample
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret %struct.out.wrapperRotateOrder1_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- rotateOrder1_fxp_cloned
Going to generate ExtarctVal inst from   %rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned.15_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, i64 %index.x, i64 0, i64 0, i64 %nSample, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperRotateOrder1_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperRotateOrder1_fxp_cloned
After editing
Node: wrapperRotateOrder1_fxp_cloned with tag 1
CPU Fun: wrapperRotateOrder1_fxp_cloned.16_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperRotateOrder1_fxp_cloned
Start: Generating Code for Node (I) - wrapperZoomProcess_fxp_cloned
Start: Generating Code for Node (L) - wrapperZoomProcess_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperZoomProcess_fxp_cloned
Start: Generating Code for Node (L) - wrapperZoomProcess_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperZoomProcess_fxp_cloned
Start: Generating Code for Node (L) - zoomProcess_fxp_cloned
Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
Cloning Function: zoomProcess_fxp_cloned.17
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17
New Function name: zoomProcess_fxp_cloned.17_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
Cloning Function: zoomProcess_fxp_cloned.17_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17_cloned
New Function name: zoomProcess_fxp_cloned.17_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
Cloning Function: zoomProcess_fxp_cloned.17_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17_cloned_cloned
New Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
Cloning Function: zoomProcess_fxp_cloned.17_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
Cloning Function: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
Cloning Function: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
15. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry
  %cmp199 = icmp sgt i64 %nSample, 0
  br i1 %cmp199, label %for.body.lr.ph, label %for.cond.cleanup
  %5 = load float*, float** %channelpart1, align 8, !tbaa !38
  %_M_head_impl.i.i.i.i.i.i196 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i196, align 8, !tbaa !38
  %arrayidx.i197 = getelementptr inbounds float*, float** %6, i64 3
  %7 = load float*, float** %arrayidx.i197, align 8, !tbaa !38
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx4, align 8, !tbaa !38
  %arrayidx.i195 = getelementptr inbounds float*, float** %6, i64 1
  %9 = load float*, float** %arrayidx.i195, align 8, !tbaa !38
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx11, align 8, !tbaa !38
  %arrayidx.i193 = getelementptr inbounds float*, float** %6, i64 2
  %11 = load float*, float** %arrayidx.i193, align 8, !tbaa !38
  %12 = load float*, float** %channelpart2, align 8, !tbaa !38
  %arrayidx.i191 = getelementptr inbounds float*, float** %6, i64 6
  %13 = load float*, float** %arrayidx.i191, align 8, !tbaa !38
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx25, align 8, !tbaa !38
  %arrayidx.i189 = getelementptr inbounds float*, float** %6, i64 7
  %15 = load float*, float** %arrayidx.i189, align 8, !tbaa !38
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx32, align 8, !tbaa !38
  %arrayidx.i187 = getelementptr inbounds float*, float** %6, i64 5
  %17 = load float*, float** %arrayidx.i187, align 8, !tbaa !38
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !38
  %arrayidx.i185 = getelementptr inbounds float*, float** %6, i64 8
  %19 = load float*, float** %arrayidx.i185, align 8, !tbaa !38
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx46, align 8, !tbaa !38
  %arrayidx.i183 = getelementptr inbounds float*, float** %6, i64 4
  %21 = load float*, float** %arrayidx.i183, align 8, !tbaa !38
  %22 = load float*, float** %channelpart3, align 8, !tbaa !38
  %arrayidx.i181 = getelementptr inbounds float*, float** %6, i64 9
  %23 = load float*, float** %arrayidx.i181, align 8, !tbaa !38
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx60, align 8, !tbaa !38
  %arrayidx.i179 = getelementptr inbounds float*, float** %6, i64 10
  %25 = load float*, float** %arrayidx.i179, align 8, !tbaa !38
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx67, align 8, !tbaa !38
  %arrayidx.i177 = getelementptr inbounds float*, float** %6, i64 11
  %27 = load float*, float** %arrayidx.i177, align 8, !tbaa !38
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx74, align 8, !tbaa !38
  %arrayidx.i175 = getelementptr inbounds float*, float** %6, i64 12
  %29 = load float*, float** %arrayidx.i175, align 8, !tbaa !38
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx81, align 8, !tbaa !38
  %arrayidx.i173 = getelementptr inbounds float*, float** %6, i64 13
  %31 = load float*, float** %arrayidx.i173, align 8, !tbaa !38
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx88, align 8, !tbaa !38
  %arrayidx.i171 = getelementptr inbounds float*, float** %6, i64 14
  %33 = load float*, float** %arrayidx.i171, align 8, !tbaa !38
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx95, align 8, !tbaa !38
  %arrayidx.i = getelementptr inbounds float*, float** %6, i64 15
  %35 = load float*, float** %arrayidx.i, align 8, !tbaa !38
  br label %for.body
  %conv102 = trunc i64 %nSample to i32
  %cmp103.i = icmp eq i32 %conv102, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i
  %36 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 8, !tbaa !42
  %cmp397.i = icmp eq i32 %37, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = and i64 %nSample, 4294967295
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !38
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !38
  %38 = zext i32 %37 to i64
  %39 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !38
  %40 = add nsw i64 %38, -1
  %xtraiter = and i64 %38, 3
  %41 = icmp ult i64 %40, 3
  %unroll_iter = sub nsw i64 %38, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %41, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv108.i
  %42 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !46
  %43 = tail call float @llvm.fabs.f32(float %42) #24
  %conv17.us.i = fpext float %43 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %44 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !38
  %arrayidx45.us.i = getelementptr inbounds float, float* %44, i64 %indvars.iv110.i
  %45 = load float, float* %arrayidx45.us.i, align 4, !tbaa !46
  %46 = load float, float* %m_fZoomRed.i, align 4, !tbaa !48
  %mul46.us.i = fmul float %45, %46
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !46
  br label %for.inc52.us.i
  %47 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !53
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %48 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !38
  %arrayidx23.us.i = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx23.us.i, align 4, !tbaa !46
  %mul24.us.i = fmul float %47, %49
  %50 = load float, float* %m_fZoom.i, align 8, !tbaa !54
  %mul28.us.i = fmul float %42, %50
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %51 = tail call float @llvm.fabs.f32(float %50) #24
  %52 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !55
  %mul34.us.i = fmul float %51, %52
  %add35.us.i = fadd float %47, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !46
  br label %for.inc52.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %38
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %53 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !46
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %54 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !38
  %arrayidx.us.i = getelementptr inbounds float, float* %54, i64 %indvars.iv110.i
  %55 = load float, float* %arrayidx.us.i, align 4, !tbaa !46
  %mul.us.i = fmul float %53, %55
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %56 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !46
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %57 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !38
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %57, i64 %indvars.iv110.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !46
  %mul.us.i.1 = fmul float %56, %58
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %59 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !46
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %60 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !38
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %60, i64 %indvars.iv110.i
  %61 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !46
  %mul.us.i.2 = fmul float %59, %61
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !46
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %63 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !38
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %63, i64 %indvars.iv110.i
  %64 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !46
  %mul.us.i.3 = fmul float %62, %64
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %65 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !46
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %66 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !38
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %66, i64 %indvars.iv110.i
  %67 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !46
  %mul.us.i.epil = fmul float %65, %67
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !56
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct1 = insertvalue %struct.out.zoomProcess_fxp %returnStruct, i64 %bytes_sumBF, 1
  ret %struct.out.zoomProcess_fxp %returnStruct1
  %conv201 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %i.0200 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 %conv201
  %68 = bitcast float* %arrayidx1 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !46
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 %conv201
  %70 = bitcast float* %arrayidx3 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !46
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %conv201
  %71 = bitcast float* %arrayidx6 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !46
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %conv201
  %73 = bitcast float* %arrayidx10 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !46
  %arrayidx13 = getelementptr inbounds float, float* %10, i64 %conv201
  %74 = bitcast float* %arrayidx13 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !46
  %arrayidx17 = getelementptr inbounds float, float* %11, i64 %conv201
  %76 = bitcast float* %arrayidx17 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !46
  %arrayidx20 = getelementptr inbounds float, float* %12, i64 %conv201
  %77 = bitcast float* %arrayidx20 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !46
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %conv201
  %79 = bitcast float* %arrayidx24 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !46
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 %conv201
  %80 = bitcast float* %arrayidx27 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !46
  %arrayidx31 = getelementptr inbounds float, float* %15, i64 %conv201
  %82 = bitcast float* %arrayidx31 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !46
  %arrayidx34 = getelementptr inbounds float, float* %16, i64 %conv201
  %83 = bitcast float* %arrayidx34 to i32*
  %84 = load i32, i32* %83, align 4, !tbaa !46
  %arrayidx38 = getelementptr inbounds float, float* %17, i64 %conv201
  %85 = bitcast float* %arrayidx38 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !46
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 %conv201
  %86 = bitcast float* %arrayidx41 to i32*
  %87 = load i32, i32* %86, align 4, !tbaa !46
  %arrayidx45 = getelementptr inbounds float, float* %19, i64 %conv201
  %88 = bitcast float* %arrayidx45 to i32*
  store i32 %87, i32* %88, align 4, !tbaa !46
  %arrayidx48 = getelementptr inbounds float, float* %20, i64 %conv201
  %89 = bitcast float* %arrayidx48 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !46
  %arrayidx52 = getelementptr inbounds float, float* %21, i64 %conv201
  %91 = bitcast float* %arrayidx52 to i32*
  store i32 %90, i32* %91, align 4, !tbaa !46
  %arrayidx55 = getelementptr inbounds float, float* %22, i64 %conv201
  %92 = bitcast float* %arrayidx55 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !46
  %arrayidx59 = getelementptr inbounds float, float* %23, i64 %conv201
  %94 = bitcast float* %arrayidx59 to i32*
  store i32 %93, i32* %94, align 4, !tbaa !46
  %arrayidx62 = getelementptr inbounds float, float* %24, i64 %conv201
  %95 = bitcast float* %arrayidx62 to i32*
  %96 = load i32, i32* %95, align 4, !tbaa !46
  %arrayidx66 = getelementptr inbounds float, float* %25, i64 %conv201
  %97 = bitcast float* %arrayidx66 to i32*
  store i32 %96, i32* %97, align 4, !tbaa !46
  %arrayidx69 = getelementptr inbounds float, float* %26, i64 %conv201
  %98 = bitcast float* %arrayidx69 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !46
  %arrayidx73 = getelementptr inbounds float, float* %27, i64 %conv201
  %100 = bitcast float* %arrayidx73 to i32*
  store i32 %99, i32* %100, align 4, !tbaa !46
  %arrayidx76 = getelementptr inbounds float, float* %28, i64 %conv201
  %101 = bitcast float* %arrayidx76 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !46
  %arrayidx80 = getelementptr inbounds float, float* %29, i64 %conv201
  %103 = bitcast float* %arrayidx80 to i32*
  store i32 %102, i32* %103, align 4, !tbaa !46
  %arrayidx83 = getelementptr inbounds float, float* %30, i64 %conv201
  %104 = bitcast float* %arrayidx83 to i32*
  %105 = load i32, i32* %104, align 4, !tbaa !46
  %arrayidx87 = getelementptr inbounds float, float* %31, i64 %conv201
  %106 = bitcast float* %arrayidx87 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !46
  %arrayidx90 = getelementptr inbounds float, float* %32, i64 %conv201
  %107 = bitcast float* %arrayidx90 to i32*
  %108 = load i32, i32* %107, align 4, !tbaa !46
  %arrayidx94 = getelementptr inbounds float, float* %33, i64 %conv201
  %109 = bitcast float* %arrayidx94 to i32*
  store i32 %108, i32* %109, align 4, !tbaa !46
  %arrayidx97 = getelementptr inbounds float, float* %34, i64 %conv201
  %110 = bitcast float* %arrayidx97 to i32*
  %111 = load i32, i32* %110, align 4, !tbaa !46
  %arrayidx101 = getelementptr inbounds float, float* %35, i64 %conv201
  %112 = bitcast float* %arrayidx101 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !46
  %inc = add i32 %i.0200, 1
  %conv = zext i32 %inc to i64
  %cmp = icmp slt i64 %conv, %nSample
  br i1 %cmp, label %for.body, label %for.cond.cleanup

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #7 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  %channelpart1.i8ptr = bitcast float** %channelpart1 to i8*
  %2 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart1.i8ptr, i64 %bytes_channelpart1)
  %channelpart2.i8ptr = bitcast float** %channelpart2 to i8*
  %3 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart2.i8ptr, i64 %bytes_channelpart2)
  %channelpart3.i8ptr = bitcast float** %channelpart3 to i8*
  %4 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %channelpart3.i8ptr, i64 %bytes_channelpart3)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %cmp199 = icmp sgt i64 %nSample, 0
  br i1 %cmp199, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %channelpart1, align 8, !tbaa !47
  %_M_head_impl.i.i.i.i.i.i196 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i196, align 8, !tbaa !47
  %arrayidx.i197 = getelementptr inbounds float*, float** %6, i64 3
  %7 = load float*, float** %arrayidx.i197, align 8, !tbaa !47
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %8 = load float*, float** %arrayidx4, align 8, !tbaa !47
  %arrayidx.i195 = getelementptr inbounds float*, float** %6, i64 1
  %9 = load float*, float** %arrayidx.i195, align 8, !tbaa !47
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %10 = load float*, float** %arrayidx11, align 8, !tbaa !47
  %arrayidx.i193 = getelementptr inbounds float*, float** %6, i64 2
  %11 = load float*, float** %arrayidx.i193, align 8, !tbaa !47
  %12 = load float*, float** %channelpart2, align 8, !tbaa !47
  %arrayidx.i191 = getelementptr inbounds float*, float** %6, i64 6
  %13 = load float*, float** %arrayidx.i191, align 8, !tbaa !47
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %14 = load float*, float** %arrayidx25, align 8, !tbaa !47
  %arrayidx.i189 = getelementptr inbounds float*, float** %6, i64 7
  %15 = load float*, float** %arrayidx.i189, align 8, !tbaa !47
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %16 = load float*, float** %arrayidx32, align 8, !tbaa !47
  %arrayidx.i187 = getelementptr inbounds float*, float** %6, i64 5
  %17 = load float*, float** %arrayidx.i187, align 8, !tbaa !47
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !47
  %arrayidx.i185 = getelementptr inbounds float*, float** %6, i64 8
  %19 = load float*, float** %arrayidx.i185, align 8, !tbaa !47
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %20 = load float*, float** %arrayidx46, align 8, !tbaa !47
  %arrayidx.i183 = getelementptr inbounds float*, float** %6, i64 4
  %21 = load float*, float** %arrayidx.i183, align 8, !tbaa !47
  %22 = load float*, float** %channelpart3, align 8, !tbaa !47
  %arrayidx.i181 = getelementptr inbounds float*, float** %6, i64 9
  %23 = load float*, float** %arrayidx.i181, align 8, !tbaa !47
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %24 = load float*, float** %arrayidx60, align 8, !tbaa !47
  %arrayidx.i179 = getelementptr inbounds float*, float** %6, i64 10
  %25 = load float*, float** %arrayidx.i179, align 8, !tbaa !47
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %26 = load float*, float** %arrayidx67, align 8, !tbaa !47
  %arrayidx.i177 = getelementptr inbounds float*, float** %6, i64 11
  %27 = load float*, float** %arrayidx.i177, align 8, !tbaa !47
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %28 = load float*, float** %arrayidx74, align 8, !tbaa !47
  %arrayidx.i175 = getelementptr inbounds float*, float** %6, i64 12
  %29 = load float*, float** %arrayidx.i175, align 8, !tbaa !47
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %30 = load float*, float** %arrayidx81, align 8, !tbaa !47
  %arrayidx.i173 = getelementptr inbounds float*, float** %6, i64 13
  %31 = load float*, float** %arrayidx.i173, align 8, !tbaa !47
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %32 = load float*, float** %arrayidx88, align 8, !tbaa !47
  %arrayidx.i171 = getelementptr inbounds float*, float** %6, i64 14
  %33 = load float*, float** %arrayidx.i171, align 8, !tbaa !47
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %34 = load float*, float** %arrayidx95, align 8, !tbaa !47
  %arrayidx.i = getelementptr inbounds float*, float** %6, i64 15
  %35 = load float*, float** %arrayidx.i, align 8, !tbaa !47
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %conv102 = trunc i64 %nSample to i32
  %cmp103.i = icmp eq i32 %conv102, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.cleanup
  %36 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %37 = load i32, i32* %36, align 8, !tbaa !69
  %cmp397.i = icmp eq i32 %37, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = and i64 %nSample, 4294967295
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !47
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !47
  %38 = zext i32 %37 to i64
  %39 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !47
  %40 = add nsw i64 %38, -1
  %xtraiter = and i64 %38, 3
  %41 = icmp ult i64 %40, 3
  %unroll_iter = sub nsw i64 %38, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %41, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv108.i
  %42 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !54
  %43 = tail call float @llvm.fabs.f32(float %42) #24
  %conv17.us.i = fpext float %43 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %44 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !47
  %arrayidx45.us.i = getelementptr inbounds float, float* %44, i64 %indvars.iv110.i
  %45 = load float, float* %arrayidx45.us.i, align 4, !tbaa !54
  %46 = load float, float* %m_fZoomRed.i, align 4, !tbaa !280
  %mul46.us.i = fmul float %45, %46
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !54
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %47 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !286
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %48 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !47
  %arrayidx23.us.i = getelementptr inbounds float, float* %48, i64 %indvars.iv110.i
  %49 = load float, float* %arrayidx23.us.i, align 4, !tbaa !54
  %mul24.us.i = fmul float %47, %49
  %50 = load float, float* %m_fZoom.i, align 8, !tbaa !285
  %mul28.us.i = fmul float %42, %50
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %51 = tail call float @llvm.fabs.f32(float %50) #24
  %52 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !284
  %mul34.us.i = fmul float %51, %52
  %add35.us.i = fadd float %47, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !54
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %38
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %53 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !54
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %54 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !47
  %arrayidx.us.i = getelementptr inbounds float, float* %54, i64 %indvars.iv110.i
  %55 = load float, float* %arrayidx.us.i, align 4, !tbaa !54
  %mul.us.i = fmul float %53, %55
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %56 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !54
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %57 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !47
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %57, i64 %indvars.iv110.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !54
  %mul.us.i.1 = fmul float %56, %58
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %59 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !54
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %60 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !47
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %60, i64 %indvars.iv110.i
  %61 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !54
  %mul.us.i.2 = fmul float %59, %61
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !54
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %63 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !47
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %63, i64 %indvars.iv110.i
  %64 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !54
  %mul.us.i.3 = fmul float %62, %64
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %65 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !54
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %66 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !47
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %66, i64 %indvars.iv110.i
  %67 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !54
  %mul.us.i.epil = fmul float %65, %67
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !492

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct1 = insertvalue %struct.out.zoomProcess_fxp %returnStruct, i64 %bytes_sumBF, 1
  ret %struct.out.zoomProcess_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %conv201 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.body ]
  %i.0200 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %5, i64 %conv201
  %68 = bitcast float* %arrayidx1 to i32*
  %69 = load i32, i32* %68, align 4, !tbaa !54
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 %conv201
  %70 = bitcast float* %arrayidx3 to i32*
  store i32 %69, i32* %70, align 4, !tbaa !54
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %conv201
  %71 = bitcast float* %arrayidx6 to i32*
  %72 = load i32, i32* %71, align 4, !tbaa !54
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %conv201
  %73 = bitcast float* %arrayidx10 to i32*
  store i32 %72, i32* %73, align 4, !tbaa !54
  %arrayidx13 = getelementptr inbounds float, float* %10, i64 %conv201
  %74 = bitcast float* %arrayidx13 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !54
  %arrayidx17 = getelementptr inbounds float, float* %11, i64 %conv201
  %76 = bitcast float* %arrayidx17 to i32*
  store i32 %75, i32* %76, align 4, !tbaa !54
  %arrayidx20 = getelementptr inbounds float, float* %12, i64 %conv201
  %77 = bitcast float* %arrayidx20 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !54
  %arrayidx24 = getelementptr inbounds float, float* %13, i64 %conv201
  %79 = bitcast float* %arrayidx24 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !54
  %arrayidx27 = getelementptr inbounds float, float* %14, i64 %conv201
  %80 = bitcast float* %arrayidx27 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !54
  %arrayidx31 = getelementptr inbounds float, float* %15, i64 %conv201
  %82 = bitcast float* %arrayidx31 to i32*
  store i32 %81, i32* %82, align 4, !tbaa !54
  %arrayidx34 = getelementptr inbounds float, float* %16, i64 %conv201
  %83 = bitcast float* %arrayidx34 to i32*
  %84 = load i32, i32* %83, align 4, !tbaa !54
  %arrayidx38 = getelementptr inbounds float, float* %17, i64 %conv201
  %85 = bitcast float* %arrayidx38 to i32*
  store i32 %84, i32* %85, align 4, !tbaa !54
  %arrayidx41 = getelementptr inbounds float, float* %18, i64 %conv201
  %86 = bitcast float* %arrayidx41 to i32*
  %87 = load i32, i32* %86, align 4, !tbaa !54
  %arrayidx45 = getelementptr inbounds float, float* %19, i64 %conv201
  %88 = bitcast float* %arrayidx45 to i32*
  store i32 %87, i32* %88, align 4, !tbaa !54
  %arrayidx48 = getelementptr inbounds float, float* %20, i64 %conv201
  %89 = bitcast float* %arrayidx48 to i32*
  %90 = load i32, i32* %89, align 4, !tbaa !54
  %arrayidx52 = getelementptr inbounds float, float* %21, i64 %conv201
  %91 = bitcast float* %arrayidx52 to i32*
  store i32 %90, i32* %91, align 4, !tbaa !54
  %arrayidx55 = getelementptr inbounds float, float* %22, i64 %conv201
  %92 = bitcast float* %arrayidx55 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !54
  %arrayidx59 = getelementptr inbounds float, float* %23, i64 %conv201
  %94 = bitcast float* %arrayidx59 to i32*
  store i32 %93, i32* %94, align 4, !tbaa !54
  %arrayidx62 = getelementptr inbounds float, float* %24, i64 %conv201
  %95 = bitcast float* %arrayidx62 to i32*
  %96 = load i32, i32* %95, align 4, !tbaa !54
  %arrayidx66 = getelementptr inbounds float, float* %25, i64 %conv201
  %97 = bitcast float* %arrayidx66 to i32*
  store i32 %96, i32* %97, align 4, !tbaa !54
  %arrayidx69 = getelementptr inbounds float, float* %26, i64 %conv201
  %98 = bitcast float* %arrayidx69 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !54
  %arrayidx73 = getelementptr inbounds float, float* %27, i64 %conv201
  %100 = bitcast float* %arrayidx73 to i32*
  store i32 %99, i32* %100, align 4, !tbaa !54
  %arrayidx76 = getelementptr inbounds float, float* %28, i64 %conv201
  %101 = bitcast float* %arrayidx76 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !54
  %arrayidx80 = getelementptr inbounds float, float* %29, i64 %conv201
  %103 = bitcast float* %arrayidx80 to i32*
  store i32 %102, i32* %103, align 4, !tbaa !54
  %arrayidx83 = getelementptr inbounds float, float* %30, i64 %conv201
  %104 = bitcast float* %arrayidx83 to i32*
  %105 = load i32, i32* %104, align 4, !tbaa !54
  %arrayidx87 = getelementptr inbounds float, float* %31, i64 %conv201
  %106 = bitcast float* %arrayidx87 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !54
  %arrayidx90 = getelementptr inbounds float, float* %32, i64 %conv201
  %107 = bitcast float* %arrayidx90 to i32*
  %108 = load i32, i32* %107, align 4, !tbaa !54
  %arrayidx94 = getelementptr inbounds float, float* %33, i64 %conv201
  %109 = bitcast float* %arrayidx94 to i32*
  store i32 %108, i32* %109, align 4, !tbaa !54
  %arrayidx97 = getelementptr inbounds float, float* %34, i64 %conv201
  %110 = bitcast float* %arrayidx97 to i32*
  %111 = load i32, i32* %110, align 4, !tbaa !54
  %arrayidx101 = getelementptr inbounds float, float* %35, i64 %conv201
  %112 = bitcast float* %arrayidx101 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !54
  %inc = add i32 %i.0200, 1
  %conv = zext i32 %inc to i64
  %cmp = icmp slt i64 %conv, %nSample
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}
DONE: Generating Code for Node (L) - zoomProcess_fxp_cloned
Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
Cloning Function: wrapperZoomProcess_fxp_cloned.18
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
Cloning Function: wrapperZoomProcess_fxp_cloned.18_cloned
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18_cloned
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
Cloning Function: wrapperZoomProcess_fxp_cloned.18_cloned_cloned
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
Cloning Function: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
Cloning Function: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
Cloning Function: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %nSample : i64 %0
5. float** %channelpart1 : float** %0
6. i64 %bytes_channelpart1 : i64 %0
7. float** %channelpart2 : float** %0
8. i64 %bytes_channelpart2 : i64 %0
9. float** %channelpart3 : float** %0
10. i64 %bytes_channelpart3 : i64 %0
11. i64 %idx_x : i64 %0
12. i64 %idx_y : i64 %0
13. i64 %idx_z : i64 %0
14. i64 %dim_x : i64 %0
15. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodezoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicZoomer* %zoomer
Finding argument 1:
Argument 1 = i64 %bytes_zoomer
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Finding argument 3:
Argument 3 = i64 %bytes_sumBF
Finding argument 4:
Argument 4 = i64 %nSample
Finding argument 5:
Argument 5 = float** %channelpart1
Finding argument 6:
Argument 6 = i64 %bytes_channelpart1
Finding argument 7:
Argument 7 = float** %channelpart2
Finding argument 8:
Argument 8 = i64 %bytes_channelpart2
Finding argument 9:
Argument 9 = float** %channelpart3
Finding argument 10:
Argument 10 = i64 %bytes_channelpart3
Gen Function type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i64, float**, i64, float**, i64, float**, i64)*
Arguments: 17
  %zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %struct.out.wrapperZoomProcess_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- zoomProcess_fxp_cloned
Going to generate ExtarctVal inst from   %zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Output Edge 1
Edge source -- zoomProcess_fxp_cloned
Going to generate ExtarctVal inst from   %zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.17_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperZoomProcess_fxp_cloned with tag 1
CPU Fun: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperZoomProcess_fxp_cloned
After editing
Node: wrapperZoomProcess_fxp_cloned with tag 1
CPU Fun: wrapperZoomProcess_fxp_cloned.18_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperZoomProcess_fxp_cloned
Start: Generating Code for Node (I) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Start: Generating Code for Node (L) - FFT_FIR_IFFT_left_fxp_cloned
Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry
  %call2 = call i8* @llvm.hpvm.getNode()
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2)
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2) replaced with i64 %idx_x
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %2 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %3 = zext i32 %2 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %3, align 16
  %cmp = icmp slt i64 %idx_x, %decoder0ChannelCount
  br i1 %cmp, label %if.then, label %if.end
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i166 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 %idx_x, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i166 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !55
  %_M_head_impl.i.i.i.i.i.i164 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i164, align 8, !tbaa !58
  %arrayidx.i165 = getelementptr inbounds float*, float** %7, i64 %idx_x
  %8 = bitcast float** %arrayidx.i165 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !58
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !59
  %conv = zext i32 %10 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul, i1 false)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !59
  %conv8 = zext i32 %12 to i64
  %_M_start.i160 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %11, i64 %idx_x, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i160, align 8, !tbaa !55
  %add.ptr.i161 = getelementptr inbounds float, float* %13, i64 %conv8
  %14 = bitcast float* %add.ptr.i161 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %15 = load i32, i32* %m_nFFTSize, align 8, !tbaa !60
  %sub = sub i32 %15, %12
  %conv11 = zext i32 %sub to i64
  %mul12 = shl nuw nsw i64 %conv11, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %mul12, i1 false)
  %_M_head_impl.i.i.i.i.i159 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %16 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i159, align 8, !tbaa !58
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i156 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %idx_x, i32 0, i32 0, i32 0
  %18 = load float*, float** %_M_start.i156, align 8, !tbaa !55
  %_M_head_impl.i.i.i.i.i155 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %16, float* %18, %struct.kiss_fft_cpx* %19)
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %cmp19167 = icmp eq i32 %20, 0
  br i1 %cmp19167, label %for.cond.cleanup, label %for.body.lr.ph
  %_M_start.i147 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body
  %_M_head_impl.i.i.i.i.i154 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i154, align 8, !tbaa !58
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i151 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %idx_x, i32 0, i32 0, i32 0
  %24 = load float*, float** %_M_start.i151, align 8, !tbaa !55
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %21, %struct.kiss_fft_cpx* %22, float* %24)
  br label %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  %arrayidx.i150 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i150, i64 0, i32 0
  %26 = load float, float* %r, align 4, !tbaa !61
  %27 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i147, align 8, !tbaa !63
  %_M_head_impl.i.i.i.i.i.i145 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %27, i64 %idx_x, i32 0, i32 0, i32 0, i32 0
  %28 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i145, align 8, !tbaa !58
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 0
  %29 = load float, float* %r26, align 4, !tbaa !61
  %mul27 = fmul float %26, %29
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i, align 4, !tbaa !66
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 1
  %31 = load float, float* %i36, align 4, !tbaa !66
  %mul37 = fmul float %30, %31
  %sub38 = fsub float %mul27, %mul37
  %arrayidx39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r40 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx39, i64 0, i32 0
  store float %sub38, float* %r40, align 8, !tbaa !61
  %mul51 = fmul float %26, %31
  %mul62 = fmul float %29, %30
  %add = fadd float %mul62, %mul51
  %i65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i65, align 4, !tbaa !66
  %32 = bitcast %struct.kiss_fft_cpx* %arrayidx39 to i64*
  %33 = bitcast %struct.kiss_fft_cpx* %arrayidx.i150 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %36 = zext i32 %35 to i64
  %cmp19 = icmp ult i64 %indvars.iv.next, %36
  br i1 %cmp19, label %for.body, label %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.FFT_FIR_IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FFT_FIR_IFFT_left_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.FFT_FIR_IFFT_left_fxp @FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %decoder0ChannelCount, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %2 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %3 = zext i32 %2 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %3, align 16
  %cmp = icmp slt i64 %idx_x, %decoder0ChannelCount
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i166 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 %idx_x, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i166 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !80
  %_M_head_impl.i.i.i.i.i.i164 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i164, align 8, !tbaa !47
  %arrayidx.i165 = getelementptr inbounds float*, float** %7, i64 %idx_x
  %8 = bitcast float** %arrayidx.i165 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !47
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !306
  %conv = zext i32 %10 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul, i1 false)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !306
  %conv8 = zext i32 %12 to i64
  %_M_start.i160 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %11, i64 %idx_x, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i160, align 8, !tbaa !80
  %add.ptr.i161 = getelementptr inbounds float, float* %13, i64 %conv8
  %14 = bitcast float* %add.ptr.i161 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %15 = load i32, i32* %m_nFFTSize, align 8, !tbaa !308
  %sub = sub i32 %15, %12
  %conv11 = zext i32 %sub to i64
  %mul12 = shl nuw nsw i64 %conv11, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %mul12, i1 false)
  %_M_head_impl.i.i.i.i.i159 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %16 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i159, align 8, !tbaa !47
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i156 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %idx_x, i32 0, i32 0, i32 0
  %18 = load float*, float** %_M_start.i156, align 8, !tbaa !80
  %_M_head_impl.i.i.i.i.i155 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %16, float* %18, %struct.kiss_fft_cpx* %19)
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %cmp19167 = icmp eq i32 %20, 0
  br i1 %cmp19167, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %_M_start.i147 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %_M_head_impl.i.i.i.i.i154 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i154, align 8, !tbaa !47
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i151 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %idx_x, i32 0, i32 0, i32 0
  %24 = load float*, float** %_M_start.i151, align 8, !tbaa !80
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %21, %struct.kiss_fft_cpx* %22, float* %24)
  br label %if.end

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  %arrayidx.i150 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i150, i64 0, i32 0
  %26 = load float, float* %r, align 4, !tbaa !233
  %27 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i147, align 8, !tbaa !344
  %_M_head_impl.i.i.i.i.i.i145 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %27, i64 %idx_x, i32 0, i32 0, i32 0, i32 0
  %28 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i145, align 8, !tbaa !47
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 0
  %29 = load float, float* %r26, align 4, !tbaa !233
  %mul27 = fmul float %26, %29
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i, align 4, !tbaa !235
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 1
  %31 = load float, float* %i36, align 4, !tbaa !235
  %mul37 = fmul float %30, %31
  %sub38 = fsub float %mul27, %mul37
  %arrayidx39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r40 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx39, i64 0, i32 0
  store float %sub38, float* %r40, align 8, !tbaa !233
  %mul51 = fmul float %26, %31
  %mul62 = fmul float %29, %30
  %add = fadd float %mul62, %mul51
  %i65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i65, align 4, !tbaa !235
  %32 = bitcast %struct.kiss_fft_cpx* %arrayidx39 to i64*
  %33 = bitcast %struct.kiss_fft_cpx* %arrayidx.i150 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %36 = zext i32 %35 to i64
  %cmp19 = icmp ult i64 %indvars.iv.next, %36
  br i1 %cmp19, label %for.body, label %for.cond.cleanup

if.end:                                           ; preds = %for.cond.cleanup, %entry
  %returnStruct = insertvalue %struct.out.FFT_FIR_IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FFT_FIR_IFFT_left_fxp %returnStruct
}
DONE: Generating Code for Node (L) - FFT_FIR_IFFT_left_fxp_cloned
Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder0ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperFFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodeFFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 1:
Argument 1 = i64 %bytes_decoder
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Finding argument 3:
Argument 3 = i64 %bytes_sumBF
Finding argument 4:
Argument 4 = i64 %decoder0ChannelCount
Gen Function type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.FFT_FIR_IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)*
Arguments: 11
  %FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_left_fxp @FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder0ChannelCount, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
In VMap case:  indexLimit type = i64
indexVar type = i64
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %decoder0ChannelCount, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperFFT_FIR_IFFT_left_fxp @wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder0ChannelCount, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %decoder0ChannelCount, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_left_fxp @FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder0ChannelCount, i64 %index.x, i64 0, i64 0, i64 %decoder0ChannelCount, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %decoder0ChannelCount
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret %struct.out.wrapperFFT_FIR_IFFT_left_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- FFT_FIR_IFFT_left_fxp_cloned
Going to generate ExtarctVal inst from   %FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_left_fxp @FFT_FIR_IFFT_left_fxp_cloned.19_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder0ChannelCount, i64 %index.x, i64 0, i64 0, i64 %decoder0ChannelCount, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperFFT_FIR_IFFT_left_fxp_cloned with tag 1
CPU Fun: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperFFT_FIR_IFFT_left_fxp_cloned
After editing
Node: wrapperFFT_FIR_IFFT_left_fxp_cloned with tag 1
CPU Fun: wrapperFFT_FIR_IFFT_left_fxp_cloned.20_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperFFT_FIR_IFFT_left_fxp_cloned
Start: Generating Code for Node (I) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Start: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Start: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Start: Generating Code for Node (L) - FFT_FIR_IFFT_right_fxp_cloned
Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned
New Function name: FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry
  %call2 = call i8* @llvm.hpvm.getNode()
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2)
  %call13 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call2) replaced with i64 %idx_x
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %2 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %3 = zext i32 %2 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %3, align 16
  %cmp = icmp slt i64 %idx_x, %decoder1ChannelCount
  br i1 %cmp, label %if.then, label %if.end
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i166 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 %idx_x, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i166 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !55
  %_M_head_impl.i.i.i.i.i.i164 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i164, align 8, !tbaa !58
  %arrayidx.i165 = getelementptr inbounds float*, float** %7, i64 %idx_x
  %8 = bitcast float** %arrayidx.i165 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !58
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !59
  %conv = zext i32 %10 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul, i1 false)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !59
  %conv8 = zext i32 %12 to i64
  %_M_start.i160 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %11, i64 %idx_x, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i160, align 8, !tbaa !55
  %add.ptr.i161 = getelementptr inbounds float, float* %13, i64 %conv8
  %14 = bitcast float* %add.ptr.i161 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %15 = load i32, i32* %m_nFFTSize, align 8, !tbaa !60
  %sub = sub i32 %15, %12
  %conv11 = zext i32 %sub to i64
  %mul12 = shl nuw nsw i64 %conv11, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %mul12, i1 false)
  %_M_head_impl.i.i.i.i.i159 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %16 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i159, align 8, !tbaa !58
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i156 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %idx_x, i32 0, i32 0, i32 0
  %18 = load float*, float** %_M_start.i156, align 8, !tbaa !55
  %_M_head_impl.i.i.i.i.i155 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %16, float* %18, %struct.kiss_fft_cpx* %19)
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %cmp19167 = icmp eq i32 %20, 0
  br i1 %cmp19167, label %for.cond.cleanup, label %for.body.lr.ph
  %_M_start.i147 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body
  %_M_head_impl.i.i.i.i.i154 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i154, align 8, !tbaa !58
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !52
  %_M_start.i151 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %idx_x, i32 0, i32 0, i32 0
  %24 = load float*, float** %_M_start.i151, align 8, !tbaa !55
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %21, %struct.kiss_fft_cpx* %22, float* %24)
  br label %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !58
  %arrayidx.i150 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i150, i64 0, i32 0
  %26 = load float, float* %r, align 4, !tbaa !61
  %27 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i147, align 8, !tbaa !63
  %_M_head_impl.i.i.i.i.i.i145 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %27, i64 %idx_x, i32 0, i32 0, i32 0, i32 0
  %28 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i145, align 8, !tbaa !58
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 0
  %29 = load float, float* %r26, align 4, !tbaa !61
  %mul27 = fmul float %26, %29
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i, align 4, !tbaa !66
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 1
  %31 = load float, float* %i36, align 4, !tbaa !66
  %mul37 = fmul float %30, %31
  %sub38 = fsub float %mul27, %mul37
  %arrayidx39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r40 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx39, i64 0, i32 0
  store float %sub38, float* %r40, align 8, !tbaa !61
  %mul51 = fmul float %26, %31
  %mul62 = fmul float %29, %30
  %add = fadd float %mul62, %mul51
  %i65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i65, align 4, !tbaa !66
  %32 = bitcast %struct.kiss_fft_cpx* %arrayidx39 to i64*
  %33 = bitcast %struct.kiss_fft_cpx* %arrayidx.i150 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = load i32, i32* %m_nFFTBins, align 4, !tbaa !38
  %36 = zext i32 %35 to i64
  %cmp19 = icmp ult i64 %indvars.iv.next, %36
  br i1 %cmp19, label %for.body, label %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.FFT_FIR_IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FFT_FIR_IFFT_right_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.FFT_FIR_IFFT_right_fxp @FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %decoder1ChannelCount, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #3 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %2 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %3 = zext i32 %2 to i64
  %vla = alloca %struct.kiss_fft_cpx, i64 %3, align 16
  %cmp = icmp slt i64 %idx_x, %decoder1ChannelCount
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i166 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %4, i64 %idx_x, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i166 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !80
  %_M_head_impl.i.i.i.i.i.i164 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i164, align 8, !tbaa !47
  %arrayidx.i165 = getelementptr inbounds float*, float** %7, i64 %idx_x
  %8 = bitcast float** %arrayidx.i165 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !47
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !306
  %conv = zext i32 %10 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul, i1 false)
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !306
  %conv8 = zext i32 %12 to i64
  %_M_start.i160 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %11, i64 %idx_x, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i160, align 8, !tbaa !80
  %add.ptr.i161 = getelementptr inbounds float, float* %13, i64 %conv8
  %14 = bitcast float* %add.ptr.i161 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %15 = load i32, i32* %m_nFFTSize, align 8, !tbaa !308
  %sub = sub i32 %15, %12
  %conv11 = zext i32 %sub to i64
  %mul12 = shl nuw nsw i64 %conv11, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %mul12, i1 false)
  %_M_head_impl.i.i.i.i.i159 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %16 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i159, align 8, !tbaa !47
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i156 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %idx_x, i32 0, i32 0, i32 0
  %18 = load float*, float** %_M_start.i156, align 8, !tbaa !80
  %_M_head_impl.i.i.i.i.i155 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %16, float* %18, %struct.kiss_fft_cpx* %19)
  %20 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %cmp19167 = icmp eq i32 %20, 0
  br i1 %cmp19167, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %_M_start.i147 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %_M_head_impl.i.i.i.i.i154 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i154, align 8, !tbaa !47
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %_M_start.i151 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %23, i64 %idx_x, i32 0, i32 0, i32 0
  %24 = load float*, float** %_M_start.i151, align 8, !tbaa !80
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %21, %struct.kiss_fft_cpx* %22, float* %24)
  br label %if.end

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i155, align 8, !tbaa !47
  %arrayidx.i150 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx.i150, i64 0, i32 0
  %26 = load float, float* %r, align 4, !tbaa !233
  %27 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i147, align 8, !tbaa !344
  %_M_head_impl.i.i.i.i.i.i145 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %27, i64 %idx_x, i32 0, i32 0, i32 0, i32 0
  %28 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i145, align 8, !tbaa !47
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 0
  %29 = load float, float* %r26, align 4, !tbaa !233
  %mul27 = fmul float %26, %29
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i, align 4, !tbaa !235
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %28, i64 %indvars.iv, i32 1
  %31 = load float, float* %i36, align 4, !tbaa !235
  %mul37 = fmul float %30, %31
  %sub38 = fsub float %mul27, %mul37
  %arrayidx39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv
  %r40 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx39, i64 0, i32 0
  store float %sub38, float* %r40, align 8, !tbaa !233
  %mul51 = fmul float %26, %31
  %mul62 = fmul float %29, %30
  %add = fadd float %mul62, %mul51
  %i65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %vla, i64 %indvars.iv, i32 1
  store float %add, float* %i65, align 4, !tbaa !235
  %32 = bitcast %struct.kiss_fft_cpx* %arrayidx39 to i64*
  %33 = bitcast %struct.kiss_fft_cpx* %arrayidx.i150 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %35 = load i32, i32* %m_nFFTBins, align 4, !tbaa !309
  %36 = zext i32 %35 to i64
  %cmp19 = icmp ult i64 %indvars.iv.next, %36
  br i1 %cmp19, label %for.body, label %for.cond.cleanup

if.end:                                           ; preds = %for.cond.cleanup, %entry
  %returnStruct = insertvalue %struct.out.FFT_FIR_IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FFT_FIR_IFFT_right_fxp %returnStruct
}
DONE: Generating Code for Node (L) - FFT_FIR_IFFT_right_fxp_cloned
Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %decoder1ChannelCount : i64 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperFFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodeFFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 1:
Argument 1 = i64 %bytes_decoder
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Finding argument 3:
Argument 3 = i64 %bytes_sumBF
Finding argument 4:
Argument 4 = i64 %decoder1ChannelCount
Gen Function type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.FFT_FIR_IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)*
Arguments: 11
  %FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_right_fxp @FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder1ChannelCount, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
In VMap case:  indexLimit type = i64
indexVar type = i64
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %decoder1ChannelCount, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %struct.out.wrapperFFT_FIR_IFFT_right_fxp @wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder1ChannelCount, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %index.x = phi i64 [ 0, %entry ], [ %index.x.inc, %for.body ]
  call void @llvm_hpvm_cpu_dstack_push(i32 1, i64 %decoder1ChannelCount, i64 %index.x, i64 0, i64 0, i64 0, i64 0)
  %FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_right_fxp @FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder1ChannelCount, i64 %index.x, i64 0, i64 0, i64 %decoder1ChannelCount, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %index.x.inc = add i64 %index.x, 1
  %cond.x = icmp ult i64 %index.x.inc, %decoder1ChannelCount
  br i1 %cond.x, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret %struct.out.wrapperFFT_FIR_IFFT_right_fxp undef
}
*** Generating epilogue code for the function****
Output Edge 0
Edge source -- FFT_FIR_IFFT_right_fxp_cloned
Going to generate ExtarctVal inst from   %FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FFT_FIR_IFFT_right_fxp @FFT_FIR_IFFT_right_fxp_cloned.21_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %decoder1ChannelCount, i64 %index.x, i64 0, i64 0, i64 %decoder1ChannelCount, i64 0, i64 0)
Extracted all
Before editing
Node: wrapperFFT_FIR_IFFT_right_fxp_cloned with tag 1
CPU Fun: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node wrapperFFT_FIR_IFFT_right_fxp_cloned
After editing
Node: wrapperFFT_FIR_IFFT_right_fxp_cloned with tag 1
CPU Fun: wrapperFFT_FIR_IFFT_right_fxp_cloned.22_cloned_cloned_cloned_cloned_cloned_cloned
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - wrapperFFT_FIR_IFFT_right_fxp_cloned
Start: Generating Code for Node (I) - wrapperSum_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperSum_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperSum_left_fxp_cloned
Start: Generating Code for Node (L) - wrapperSum_left_fxp_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - wrapperSum_left_fxp_cloned
Start: Generating Code for Node (L) - sum_left_fxp_cloned

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !38
  %cmp30 = icmp eq i32 %2, 0
  br i1 %cmp30, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !44
  %cmp228 = icmp eq i32 %3, 0
  br i1 %cmp228, label %for.cond.cleanup, label %for.cond1.preheader.us.preheader
  %_M_start.i24 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = zext i32 %2 to i64
  %.pre = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !55
  %.pre36 = load float*, float** %_M_start.i24, align 8, !tbaa !58
  %5 = zext i32 %3 to i64
  %scevgep = getelementptr float, float* %.pre36, i64 %5
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %3, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond1.preheader.us
  %indvars.iv34 = phi i64 [ 0, %for.cond1.preheader.us.preheader ], [ %indvars.iv.next35, %for.cond1.for.cond.cleanup3_crit_edge.us ]
  %_M_start.i26.us = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %.pre, i64 %indvars.iv34, i32 0, i32 0, i32 0
  %11 = load float*, float** %_M_start.i26.us, align 8, !tbaa !58
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck
  %scevgep39 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %.pre36, %scevgep39
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %12 = getelementptr inbounds float, float* %11, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !61, !alias.scope !62
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !61, !alias.scope !62
  %16 = getelementptr inbounds float, float* %.pre36, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load43 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load44 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %20 = fadd <4 x float> %wide.load, %wide.load43
  %21 = fadd <4 x float> %wide.load42, %wide.load44
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %11, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !61, !alias.scope !62
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !61, !alias.scope !62
  %28 = getelementptr inbounds float, float* %.pre36, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load43.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load44.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %32 = fadd <4 x float> %wide.load.1, %wide.load43.1
  %33 = fadd <4 x float> %wide.load42.1, %wide.load44.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !67
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil
  %36 = getelementptr inbounds float, float* %11, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !61, !alias.scope !62
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !61, !alias.scope !62
  %40 = getelementptr inbounds float, float* %.pre36, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load43.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load44.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %44 = fadd <4 x float> %wide.load.epil, %wide.load43.epil
  %45 = fadd <4 x float> %wide.load42.epil, %wide.load44.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !61, !alias.scope !65, !noalias !62
  br label %middle.block
  br i1 %cmp.n, label %for.cond1.for.cond.cleanup3_crit_edge.us, label %for.body4.us.preheader
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond1.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %add.ptr.i27.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i27.us, align 4, !tbaa !61
  %add.ptr.i25.us = getelementptr inbounds float, float* %.pre36, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i25.us, align 4, !tbaa !61
  %add.us = fadd float %48, %49
  store float %add.us, float* %add.ptr.i25.us, align 4, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp2.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp2.us, label %for.body4.us, label %for.cond1.for.cond.cleanup3_crit_edge.us, !llvm.loop !69
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1
  %cmp.us = icmp ult i64 %indvars.iv.next35, %4
  br i1 %cmp.us, label %for.cond1.preheader.us, label %for.cond.cleanup
  %returnStruct = insertvalue %struct.out.sum_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.sum_left_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.sum_left_fxp @sum_left_fxp_cloned.23(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !69
  %cmp30 = icmp eq i32 %2, 0
  br i1 %cmp30, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %3 = load i32, i32* %m_nFFTSize, align 8, !tbaa !308
  %cmp228 = icmp eq i32 %3, 0
  br i1 %cmp228, label %for.cond.cleanup, label %for.cond1.preheader.us.preheader

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph
  %_M_start.i24 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = zext i32 %2 to i64
  %.pre = load %"class.std::vector.0"*, %"class.std::vector.0"** %_M_start.i, align 8, !tbaa !355
  %.pre36 = load float*, float** %_M_start.i24, align 8, !tbaa !80
  %5 = zext i32 %3 to i64
  %scevgep = getelementptr float, float* %.pre36, i64 %5
  %6 = and i64 %5, 4294967288
  %7 = add nsw i64 %6, -8
  %8 = lshr exact i64 %7, 3
  %9 = add nuw nsw i64 %8, 1
  %min.iters.check = icmp ult i32 %3, 8
  %n.vec = and i64 %5, 4294967288
  %xtraiter = and i64 %9, 1
  %10 = icmp eq i64 %7, 0
  %unroll_iter = sub nuw nsw i64 %9, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %5
  br label %for.cond1.preheader.us

for.cond1.preheader.us:                           ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us, %for.cond1.preheader.us.preheader
  %indvars.iv34 = phi i64 [ 0, %for.cond1.preheader.us.preheader ], [ %indvars.iv.next35, %for.cond1.for.cond.cleanup3_crit_edge.us ]
  %_M_start.i26.us = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %.pre, i64 %indvars.iv34, i32 0, i32 0, i32 0
  %11 = load float*, float** %_M_start.i26.us, align 8, !tbaa !80
  br i1 %min.iters.check, label %for.body4.us.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond1.preheader.us
  %scevgep39 = getelementptr float, float* %11, i64 %5
  %bound0 = icmp ult float* %.pre36, %scevgep39
  %bound1 = icmp ult float* %11, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %10, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %12 = getelementptr inbounds float, float* %11, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !54, !alias.scope !493
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !54, !alias.scope !493
  %16 = getelementptr inbounds float, float* %.pre36, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load43 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load44 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %20 = fadd <4 x float> %wide.load, %wide.load43
  %21 = fadd <4 x float> %wide.load42, %wide.load44
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %11, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !54, !alias.scope !493
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !54, !alias.scope !493
  %28 = getelementptr inbounds float, float* %.pre36, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load43.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load44.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %32 = fadd <4 x float> %wide.load.1, %wide.load43.1
  %33 = fadd <4 x float> %wide.load42.1, %wide.load44.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !498

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = getelementptr inbounds float, float* %11, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !54, !alias.scope !493
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !54, !alias.scope !493
  %40 = getelementptr inbounds float, float* %.pre36, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load43.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load44.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %44 = fadd <4 x float> %wide.load.epil, %wide.load43.epil
  %45 = fadd <4 x float> %wide.load42.epil, %wide.load44.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !54, !alias.scope !496, !noalias !493
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond1.for.cond.cleanup3_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %middle.block, %vector.memcheck, %for.cond1.preheader.us
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond1.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.body4.us.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4.us ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %add.ptr.i27.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i27.us, align 4, !tbaa !54
  %add.ptr.i25.us = getelementptr inbounds float, float* %.pre36, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i25.us, align 4, !tbaa !54
  %add.us = fadd float %48, %49
  store float %add.us, float* %add.ptr.i25.us, align 4, !tbaa !54
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp2.us = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp2.us, label %for.body4.us, label %for.cond1.for.cond.cleanup3_crit_edge.us, !llvm.loop !499

for.cond1.for.cond.cleanup3_crit_edge.us:         ; preds = %for.body4.us, %middle.block
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1
  %cmp.us = icmp ult i64 %indvars.iv.next35, %4
  br i1 %cmp.us, label %for.cond1.preheader.us, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us, %for.cond1.preheader.lr.ph, %entry
  %returnStruct = insertvalue %struct.out.sum_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.sum_left_fxp %returnStruct
}
DONE: Generating Code for Node (L) - sum_left_fxp_cloned
Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: wrapperSum_left_fxp_cloned.24
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24
New Function name: wrapperSum_left_fxp_cloned.24_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: wrapperSum_left_fxp_cloned.24_cloned
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24_cloned
New Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: wrapperSum_left_fxp_cloned.24_cloned_cloned
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned
New Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned
New Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned
New Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned
New Function name: wrapperSum_left_fxp_cloned.24_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.wrapperSum_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Invoking child nodesum_left_fxp_cloned.23
Finding argument 0:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 1:
Argument 1 = i64 %bytes_decoder
Gen Function type: %struct.out.sum_left_fxp (%class.CAmbisonicBinauralizer*, i64)*
Node Function type: %struct.out.sum_left_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
opt: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/Instructions.cpp:400: void llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&): Assertion `(Args.size() == FTy->getNumParams() || (FTy->isVarArg() && Args.size() > FTy->getNumParams())) && "Calling a function with bad signature!"' failed.
Stack dump:
0.	Program arguments: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -S build/seq/main.hpvm.ll -o build/seq/audioDecoding-seq.host.ll 
1.	Running pass 'Unnamed pass: implement Pass::getPassName()' on module 'build/seq/main.hpvm.ll'.
 #0 0x0000000003067291 llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:533:0
 #1 0x0000000003067324 PrintStackTraceSignalHandler(void*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:594:0
 #2 0x00000000030651f8 llvm::sys::RunSignalHandlers() /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Signals.cpp:68:0
 #3 0x0000000003066c46 SignalHandler(int) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:385:0
 #4 0x00007fc76c173390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)
 #5 0x00007fc76aee5438 raise /build/glibc-S7Ft5T/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0
 #6 0x00007fc76aee703a abort /build/glibc-S7Ft5T/glibc-2.23/stdlib/abort.c:91:0
 #7 0x00007fc76aeddbe7 __assert_fail_base /build/glibc-S7Ft5T/glibc-2.23/assert/assert.c:92:0
 #8 0x00007fc76aeddc92 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc92)
 #9 0x000000000272c45f llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/Instructions.cpp:402:0
#10 0x00007fc76aa05a43 llvm::CallInst::CallInst(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&, llvm::Instruction*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/include/llvm/IR/Instructions.h:1700:0
#11 0x00007fc76aa05761 llvm::CallInst::Create(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&, llvm::Instruction*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/include/llvm/IR/Instructions.h:1446:0
#12 0x00007fc76aa0586f llvm::CallInst::Create(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&, llvm::Instruction*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/include/llvm/IR/Instructions.h:1538:0
#13 0x00007fc76a9fda05 (anonymous namespace)::CGT_CPU::invokeChild_CPU(llvm::DFNode*, llvm::Function*, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::Instruction*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:924:0
#14 0x00007fc76a9ffd8e (anonymous namespace)::CGT_CPU::codeGen(llvm::DFInternalNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:1266:0
#15 0x00007fc76aa081d0 dfg2llvm::CodeGenTraversal::visit(llvm::DFInternalNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFG2LLVM.h:148:0
#16 0x00007fc76ac74806 llvm::DFInternalNode::applyDFNodeVisitor(llvm::DFNodeVisitor&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFGraph.h:912:0
#17 0x00007fc76aa081a4 dfg2llvm::CodeGenTraversal::visit(llvm::DFInternalNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFG2LLVM.h:139:0
#18 0x00007fc76a9f857c (anonymous namespace)::DFG2LLVM_CPU::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:157:0
#19 0x000000000276b70b (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1750:0
#20 0x000000000276bead llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1863:0
#21 0x000000000276c0b3 llvm::legacy::PassManager::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1895:0
#22 0x000000000183dba7 main /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/opt/opt.cpp:892:0
#23 0x00007fc76aed0840 __libc_start_main /build/glibc-S7Ft5T/glibc-2.23/csu/../csu/libc-start.c:325:0
#24 0x00000000017ffb89 _start (/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt+0x17ffb89)
Makefile:121: recipe for target 'build/seq/audioDecoding-seq.host.ll' failed
make: *** [build/seq/audioDecoding-seq.host.ll] Aborted
