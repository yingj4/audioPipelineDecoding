Script started on Sun 25 Oct 2020 01:11:05 AM CDT
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/audioDecodingNoPara[00m$ make TARGERT[K[KT=seq
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/clang -O3 -std=c++14 -Wall -fPIC -I./include -DDEVICE=CPU_TARGET -I./libspatialaudio/build/Debug/include -emit-llvm -S -o build/seq/main.ll src//main.cpp
In file included from src//main.cpp:1:
[1m./include/audio.h:400:10: [0m[0;1;35mwarning: [0m[1m'CAmbisonicProcessor::Configure' hides overloaded virtual function [-Woverloaded-virtual][0m
    bool Configure(unsigned nOrder, bool b3D, unsigned nBlockSize, unsigned nMisc);
[0;1;32m         ^
[0m[1m./include/audio.h:55:18: [0m[0;1;30mnote: [0mhidden overloaded virtual function 'CAmbisonicBase::Configure' declared here: different number of parameters (3 vs 4)[0m
    virtual bool Configure(unsigned nOrder, bool b3D, unsigned nMisc);
[0;1;32m                 ^
[0m[1m./include/audio.h:527:10: [0m[0;1;35mwarning: [0m[1m'CAmbisonicDecoder::Configure' hides overloaded virtual function [-Woverloaded-virtual][0m
    bool Configure(unsigned nOrder, bool b3D, int nSpeakerSetUp, unsigned nSpeakers = 0);
[0;1;32m         ^
[0m[1m./include/audio.h:55:18: [0m[0;1;30mnote: [0mhidden overloaded virtual function 'CAmbisonicBase::Configure' declared here: different number of parameters (3 vs 4)[0m
    virtual bool Configure(unsigned nOrder, bool b3D, unsigned nMisc);
[0;1;32m                 ^
[0m[1m./include/audio.h:660:18: [0m[0;1;35mwarning: [0m[1m'CAmbisonicBinauralizer::Configure' hides overloaded virtual function [-Woverloaded-virtual][0m
    virtual bool Configure(unsigned nOrder,
[0;1;32m                 ^
[0m[1m./include/audio.h:55:18: [0m[0;1;30mnote: [0mhidden overloaded virtual function 'CAmbisonicBase::Configure' declared here: different number of parameters (3 vs 6)[0m
    virtual bool Configure(unsigned nOrder, bool b3D, unsigned nMisc);
[0;1;32m                 ^
[0m3 warnings generated.
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -load LLVMGenHPVM.so -genhpvm -globaldce build/seq/main.ll -S -o build/seq/main.hpvm.ll
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -S build/seq/main.hpvm.ll -o build/seq/audioEncoding-seq.host.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -S build/seq/main.hpvm.ll -o build/seq/audioEncoding-seq.host.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
	discovered a new reachable node %if.then.i11
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16
	discovered a new reachable node %if.else.i13
	discovered a new reachable node %if.then9.i15
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then9.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.body.epil
	discovered a new reachable node %for.body.lr.ph.new
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc9_crit_edge.us
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.body4.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.end9.i
	discovered a new reachable node %call12.i.noexc
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN21CAmbisonicEncoderDistD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.cond18.for.end_crit_edge.us.unr-lcssa
	discovered a new reachable node %for.cond18.for.end_crit_edge.us
	discovered a new reachable node %for.cond.for.end44_crit_edge
	discovered a new reachable node %for.body20.us.epil
	discovered a new reachable node %for.body20.us
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.else22
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.end13
	discovered a new reachable node %if.end17
	discovered a new reachable node %if.end34
	discovered a new reachable node %if.end41
	discovered a new reachable node %if.end68
	discovered a new reachable node %for.cond45.preheader
	discovered a new reachable node %delete.notnull66
	discovered a new reachable node %for.body48
	discovered a new reachable node %for.inc61
	discovered a new reachable node %for.cond.cleanup47
	discovered a new reachable node %delete.notnull58
	discovered a new reachable node %delete.notnull39
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.notnull32
	discovered a new reachable node %delete.notnull27
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.then11
	discovered a new reachable node %delete.notnull7
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup49
	discovered a new reachable node %for.body68
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i266
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i
	discovered a new reachable node %.noexc
	discovered a new reachable node %invoke.cont72
	discovered a new reachable node %for.cond.cleanup67
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %invoke.cont79
	discovered a new reachable node %invoke.cont82
	discovered a new reachable node %for.cond90.preheader
	discovered a new reachable node %for.cond90.preheader.for.cond.cleanup93_crit_edge
	discovered a new reachable node %for.cond.cleanup93
	discovered a new reachable node %for.inc211
	discovered a new reachable node %for.cond.cleanup87
	discovered a new reachable node %invoke.cont.i284
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286
	discovered a new reachable node %if.then.i.i.i285
	discovered a new reachable node %for.body.i.i.i.i276
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277
	discovered a new reachable node %lpad209
	discovered a new reachable node %ehcleanup214
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i
	discovered a new reachable node %for.body94.lr.ph
	discovered a new reachable node %for.body94.us
	discovered a new reachable node %for.inc185.us
	discovered a new reachable node %sw.bb141.us
	discovered a new reachable node %for.inc185.us.sink.split
	discovered a new reachable node %sw.bb155.us
	discovered a new reachable node %sw.bb169.us
	discovered a new reachable node %for.body94
	discovered a new reachable node %for.inc185
	discovered a new reachable node %sw.bb
	discovered a new reachable node %for.inc185.sink.split
	discovered a new reachable node %sw.bb112
	discovered a new reachable node %sw.bb126
	discovered a new reachable node %lpad76
	discovered a new reachable node %invoke.cont72.for.body68_crit_edge
	discovered a new reachable node %if.then.i64.i
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i.prol.loopexit
	discovered a new reachable node %invoke.cont8.i
	discovered a new reachable node %for.body.i.i.i70.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i
	discovered a new reachable node %call2.i.i.i.i.noexc
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then.i
	discovered a new reachable node %for.body50.for.body50_crit_edge
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end11
	discovered a new reachable node %if.end3
	discovered a new reachable node %if.end7
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup18
	discovered a new reachable node %for.cond.cleanup18.for.cond.cleanup73_crit_edge
	discovered a new reachable node %for.cond.cleanup73
	discovered a new reachable node %for.cond.cleanup73.for.cond.cleanup92_crit_edge
	discovered a new reachable node %for.cond.cleanup92
	discovered a new reachable node %for.body93.lr.ph
	discovered a new reachable node %for.body93.preheader
	discovered a new reachable node %for.body93
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body74.lr.ph
	discovered a new reachable node %for.body74.preheader
	discovered a new reachable node %for.body74
	discovered a new reachable node %vector.memcheck199
	discovered a new reachable node %vector.ph200
	discovered a new reachable node %middle.block187.unr-lcssa
	discovered a new reachable node %middle.block187
	discovered a new reachable node %vector.body186.epil
	discovered a new reachable node %vector.ph200.new
	discovered a new reachable node %vector.body186
	discovered a new reachable node %for.body19.lr.ph
	discovered a new reachable node %for.body19
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end34
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body24.us.preheader
	discovered a new reachable node %for.body24.us.preheader179
	discovered a new reachable node %for.body24.us.prol.loopexit
	discovered a new reachable node %if.end.us
	discovered a new reachable node %for.body24.us
	discovered a new reachable node %for.body24.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %for.body13.us.prol
	discovered a new reachable node %vector.memcheck149
	discovered a new reachable node %vector.ph150
	discovered a new reachable node %middle.block137.unr-lcssa
	discovered a new reachable node %middle.block137
	discovered a new reachable node %vector.body136.epil
	discovered a new reachable node %vector.body136
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %sw.default
	discovered a new reachable node %if.then.i.i.i1764
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
	discovered a new reachable node %if.then.i11.i.i1778
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783
	discovered a new reachable node %sw.epilog
	discovered a new reachable node %for.end1278
	discovered a new reachable node %for.body1270
	discovered a new reachable node %if.else.i13.i.i1780
	discovered a new reachable node %if.then9.i15.i.i1782
	discovered a new reachable node %if.else.i.i.i1766
	discovered a new reachable node %if.then9.i.i.i1768
	discovered a new reachable node %sw.bb
	discovered a new reachable node %arrayctor.cont.thread
	discovered a new reachable node %new.ctorloop
	discovered a new reachable node %arrayctor.loop
	discovered a new reachable node %arrayctor.cont
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.for.body_crit_edge
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb103
	discovered a new reachable node %sw.bb170
	discovered a new reachable node %sw.bb252
	discovered a new reachable node %for.body374.lr.ph
	discovered a new reachable node %for.body374
	discovered a new reachable node %for.body423.lr.ph
	discovered a new reachable node %for.body423
	discovered a new reachable node %for.body475.lr.ph
	discovered a new reachable node %for.body475
	discovered a new reachable node %for.body527.lr.ph
	discovered a new reachable node %for.body527
	discovered a new reachable node %for.body579.lr.ph
	discovered a new reachable node %for.body579
	discovered a new reachable node %for.body631.lr.ph
	discovered a new reachable node %for.body631
	discovered a new reachable node %sw.bb658
	discovered a new reachable node %for.end713
	discovered a new reachable node %for.body721.lr.ph
	discovered a new reachable node %for.body721
	discovered a new reachable node %for.body685.lr.ph
	discovered a new reachable node %for.body685
	discovered a new reachable node %sw.bb751
	discovered a new reachable node %sw.bb1087
	discovered a new reachable node %for.end1143
	discovered a new reachable node %for.body1151.lr.ph
	discovered a new reachable node %for.body1151
	discovered a new reachable node %for.body1115.lr.ph
	discovered a new reachable node %for.body1115
	discovered a new reachable node %sw.bb1181
	discovered a new reachable node %for.body1208.lr.ph
	discovered a new reachable node %for.body1208
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.us.i
	discovered a new reachable node %for.body24.us.preheader.i
	discovered a new reachable node %for.body24.us.i.preheader
	discovered a new reachable node %for.body24.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.i
	discovered a new reachable node %for.body24.us.i
	discovered a new reachable node %for.body24.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112.i
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %for.body13.us.i.prol
	discovered a new reachable node %vector.memcheck47
	discovered a new reachable node %vector.ph48
	discovered a new reachable node %middle.block35.unr-lcssa
	discovered a new reachable node %middle.block35
	discovered a new reachable node %vector.body34.epil
	discovered a new reachable node %vector.body34
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92
	discovered a new reachable node %for.cond34.preheader
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body38.lr.ph
	discovered a new reachable node %for.body38
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i104.preheader
	discovered a new reachable node %for.body.i104
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit105
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit116
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit142
	discovered a new reachable node %for.body.i141
	discovered a new reachable node %for.cond.cleanup.loopexit.i134
	discovered a new reachable node %for.body.i115
	discovered a new reachable node %for.cond.cleanup.loopexit.i108
	discovered a new reachable node %for.body.i94
	discovered a new reachable node %for.cond.cleanup.loopexit.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i91
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i88
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup.loopexit
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.preheader
	discovered a new reachable node %for.cond.cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.cond.cleanup12.epil
	discovered a new reachable node %for.cond2.preheader.preheader.new
	discovered a new reachable node %for.cond.cleanup12
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body13.us.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.inc52.us
	discovered a new reachable node %for.cond.cleanup12.us
	discovered a new reachable node %if.else.us
	discovered a new reachable node %for.body5.us.epil
	discovered a new reachable node %for.body5.us
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i.i.i.i
	discovered a new reachable node %if.then4.i.i.i.i
	discovered a new reachable node %if.end6.i.i.i.i
	discovered a new reachable node %if.end.i.i.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond327.preheader_crit_edge
	discovered a new reachable node %for.cond327.preheader
	discovered a new reachable node %for.cond327.preheader.for.end338_crit_edge
	discovered a new reachable node %for.end338
	discovered a new reachable node %for.end338.for.end362_crit_edge
	discovered a new reachable node %for.end362
	discovered a new reachable node %for.end362.for.cond327.preheader.1_crit_edge
	discovered a new reachable node %for.cond327.preheader.1
	discovered a new reachable node %for.cond327.preheader.1.for.end338.1_crit_edge
	discovered a new reachable node %for.end338.1
	discovered a new reachable node %for.end338.1.for.end362.1_crit_edge
	discovered a new reachable node %for.end362.1
	discovered a new reachable node %for.body349.lr.ph.1
	discovered a new reachable node %for.body349.1.preheader
	discovered a new reachable node %for.body349.1
	discovered a new reachable node %for.end362.loopexit.1
	discovered a new reachable node %vector.memcheck696
	discovered a new reachable node %vector.ph697
	discovered a new reachable node %middle.block684.unr-lcssa
	discovered a new reachable node %middle.block684
	discovered a new reachable node %vector.body683.epil
	discovered a new reachable node %vector.ph697.new
	discovered a new reachable node %vector.body683
	discovered a new reachable node %for.body330.lr.ph.1
	discovered a new reachable node %for.body330.1.preheader
	discovered a new reachable node %for.body330.1
	discovered a new reachable node %vector.memcheck669
	discovered a new reachable node %vector.ph670
	discovered a new reachable node %middle.block655.unr-lcssa
	discovered a new reachable node %middle.block655
	discovered a new reachable node %vector.body654.epil
	discovered a new reachable node %vector.ph670.new
	discovered a new reachable node %vector.body654
	discovered a new reachable node %for.body214.lr.ph.1
	discovered a new reachable node %for.body214.1
	discovered a new reachable node %for.end303.1
	discovered a new reachable node %for.inc324.1
	discovered a new reachable node %for.body313.lr.ph.1
	discovered a new reachable node %for.body313.1.preheader
	discovered a new reachable node %for.body313.1
	discovered a new reachable node %vector.memcheck638
	discovered a new reachable node %vector.ph639
	discovered a new reachable node %middle.block626.unr-lcssa
	discovered a new reachable node %middle.block626
	discovered a new reachable node %vector.body625.epil
	discovered a new reachable node %vector.ph639.new
	discovered a new reachable node %vector.body625
	discovered a new reachable node %for.body241.lr.ph.1
	discovered a new reachable node %for.body241.1
	discovered a new reachable node %for.body349.lr.ph
	discovered a new reachable node %for.body349.preheader
	discovered a new reachable node %for.body349
	discovered a new reachable node %for.end362.loopexit
	discovered a new reachable node %vector.memcheck609
	discovered a new reachable node %vector.ph610
	discovered a new reachable node %middle.block597.unr-lcssa
	discovered a new reachable node %middle.block597
	discovered a new reachable node %vector.body596.epil
	discovered a new reachable node %vector.ph610.new
	discovered a new reachable node %vector.body596
	discovered a new reachable node %for.body330.lr.ph
	discovered a new reachable node %for.body330.preheader
	discovered a new reachable node %for.body330
	discovered a new reachable node %vector.memcheck582
	discovered a new reachable node %vector.ph583
	discovered a new reachable node %middle.block570.unr-lcssa
	discovered a new reachable node %middle.block570
	discovered a new reachable node %vector.body569.epil
	discovered a new reachable node %vector.ph583.new
	discovered a new reachable node %vector.body569
	discovered a new reachable node %for.body214.lr.ph
	discovered a new reachable node %for.body214
	discovered a new reachable node %for.end303
	discovered a new reachable node %for.inc324
	discovered a new reachable node %for.body313.lr.ph
	discovered a new reachable node %for.body313.preheader
	discovered a new reachable node %for.body313
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body241.lr.ph
	discovered a new reachable node %for.body241
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i48
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
	discovered a new reachable node %if.end.i
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i51
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
	discovered a new reachable node %if.end.i44
	discovered a new reachable node %if.then.i40
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %if.then.i46
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
	discovered a new reachable node %if.then.i57
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
	discovered a new reachable node %if.then.i68
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
	discovered a new reachable node %if.then.i79
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
	discovered a new reachable node %if.then.i99
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
	discovered a new reachable node %for.cond.cleanup19
	discovered a new reachable node %if.then.i99.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
	discovered a new reachable node %for.cond.cleanup19.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %for.body20.lr.ph.1
	discovered a new reachable node %for.body20.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1
	discovered a new reachable node %if.else.i101.1
	discovered a new reachable node %if.then5.i103.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1
	discovered a new reachable node %for.body.i.i.i.i.i.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1
	discovered a new reachable node %for.body20.lr.ph
	discovered a new reachable node %for.body20
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106
	discovered a new reachable node %if.else.i101
	discovered a new reachable node %if.then5.i103
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i
	discovered a new reachable node %if.then.i90
	discovered a new reachable node %terminate.lpad.i91
	discovered a new reachable node %if.then.i86
	discovered a new reachable node %terminate.lpad.i
	discovered a new reachable node %if.else.i81
	discovered a new reachable node %if.then5.i83
	discovered a new reachable node %if.else.i70
	discovered a new reachable node %if.then5.i72
	discovered a new reachable node %if.else.i59
	discovered a new reachable node %if.then5.i61
	discovered a new reachable node %if.else.i48
	discovered a new reachable node %if.then5.i50
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.then.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont27
	discovered a new reachable node %eh.resume
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %call5.i.i.i9.i.noexc
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i.i
	discovered a new reachable node %invoke.cont8.i.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
	discovered a new reachable node %call5.i.i.i9.i.noexc79
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	discovered a new reachable node %if.else.i115
	discovered a new reachable node %invoke.cont.i.i129
	discovered a new reachable node %invoke.cont8.i.i134
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137
	discovered a new reachable node %if.end.sink.split
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then.i63.i.i135
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i130
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122
	discovered a new reachable node %if.then.i104
	discovered a new reachable node %if.then.i.i85
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %if.then.i.i147
	discovered a new reachable node %lpad9
	discovered a new reachable node %if.then.i63.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.then.i.i65
	discovered a new reachable node %lpad2
	discovered a new reachable node %if.then.i.i142
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %call5.i.i.i9.i.noexc161
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	discovered a new reachable node %if.else.i197
	discovered a new reachable node %invoke.cont.i.i211
	discovered a new reachable node %invoke.cont8.i.i216
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
	discovered a new reachable node %if.then.i63.i.i217
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i212
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204
	discovered a new reachable node %if.then.i186
	discovered a new reachable node %if.then.i.i167
	discovered a new reachable node %lpad31
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.then9
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end17
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull24
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %delete.notnull21
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit43
	discovered a new reachable node %if.then.i.i.i.i42
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i38
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i
	discovered a new reachable node %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.else
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body4.us.i.preheader
	discovered a new reachable node %for.body4.us.i.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us.i
	discovered a new reachable node %for.body4.us.i
	discovered a new reachable node %for.body4.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %if.end3.i
	discovered a new reachable node %if.end7.i
	discovered a new reachable node %if.then10.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	discovered a new reachable node %return
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont13
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %invoke.cont22
	discovered a new reachable node %invoke.cont27
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull83
	discovered a new reachable node %delete.notnull80
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %lpad21
	discovered a new reachable node %ehcleanup94
	discovered a new reachable node %ehcleanup95
	discovered a new reachable node %lpad12
	discovered a new reachable node %lpad10
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad7
	discovered a new reachable node %if.then.i.i194
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit5
	discovered a new reachable node %if.then.i.i.i4
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i8
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i4
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.1
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit12
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit16
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit20
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i28
	discovered a new reachable node %lpad.i29
	discovered a new reachable node %if.then.i
	discovered a new reachable node %lpad.i
	discovered a new reachable node %if.then.i.i.i22.1
	discovered a new reachable node %for.body.i.i.i.i.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
	discovered a new reachable node %invoke.cont.loopexit.i.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1
	discovered a new reachable node %if.then.i.i.i22
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %invoke.cont.loopexit.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %if.then.i.i.i19
	discovered a new reachable node %if.then.i.i.i15
	discovered a new reachable node %if.then.i.i.i11
	discovered a new reachable node %if.then.i.i.i.1
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then.i169
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148
	discovered a new reachable node %if.then.i147
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i154
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i161
	discovered a new reachable node %vector.ph266
	discovered a new reachable node %middle.block263.unr-lcssa
	discovered a new reachable node %middle.block263
	discovered a new reachable node %vector.body262.epil
	discovered a new reachable node %vector.ph266.new
	discovered a new reachable node %vector.body262
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
	discovered a new reachable node %for.body.i.i196.preheader
	discovered a new reachable node %for.body.i.i196.preheader287
	discovered a new reachable node %for.body.i.i196
	discovered a new reachable node %vector.ph248
	discovered a new reachable node %middle.block245.unr-lcssa
	discovered a new reachable node %middle.block245
	discovered a new reachable node %vector.body244.epil
	discovered a new reachable node %vector.ph248.new
	discovered a new reachable node %vector.body244
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else
	discovered a new reachable node %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
	discovered a new reachable node %for.body.i.i.preheader
	discovered a new reachable node %for.body.i.i.preheader288
	discovered a new reachable node %for.body.i.i
	discovered a new reachable node %vector.ph230
	discovered a new reachable node %middle.block225.unr-lcssa
	discovered a new reachable node %middle.block225
	discovered a new reachable node %vector.body224.epil
	discovered a new reachable node %vector.ph230.new
	discovered a new reachable node %vector.body224
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i179
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader290
	discovered a new reachable node %for.body.i.i.i.i.i189
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i73
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i76
	discovered a new reachable node %for.body.i.i.i82
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83
	discovered a new reachable node %for.body.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.prol.loopexit
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
	discovered a new reachable node %if.end3.i
	discovered a new reachable node %if.end7.i
	discovered a new reachable node %if.then10.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3.loopexit
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3.loopexit
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup.for.cond.cleanup8_crit_edge
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body9.lr.ph
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.cond.cleanup8.loopexit
	discovered a new reachable node %vector.memcheck86
	discovered a new reachable node %vector.ph87
	discovered a new reachable node %middle.block74.unr-lcssa
	discovered a new reachable node %middle.block74
	discovered a new reachable node %vector.body73.epil
	discovered a new reachable node %vector.ph87.new
	discovered a new reachable node %vector.body73
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body9.lr.ph
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.cond.cleanup8.loopexit
	discovered a new reachable node %vector.memcheck81
	discovered a new reachable node %vector.ph82
	discovered a new reachable node %middle.block69.unr-lcssa
	discovered a new reachable node %middle.block69
	discovered a new reachable node %vector.body68.epil
	discovered a new reachable node %vector.ph82.new
	discovered a new reachable node %vector.body68
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry

BUILDDFG PASS
-------- Searching for launch sites ----------
Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: llvm.lifetime.start.p0i8
Function: llvm.lifetime.end.p0i8
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: sqrt
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: __gxx_personality_v0
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN19CAmbisonicProcessorC2Ev
Function: _ZN11OrientationC2Efff
Function: _ZN19CAmbisonicProcessorD2Ev
Function: free
Function: _ZN19CAmbisonicProcessorD0Ev
Function: _ZN19CAmbisonicProcessor9ConfigureEjbjj
Function: kiss_fftr_alloc
Function: kiss_fftr
Function: _ZN19CAmbisonicProcessor5ResetEv
Function: _ZN19CAmbisonicProcessor7RefreshEv
Function: _ZN19CAmbisonicProcessor14SetOrientationE11Orientation
Function: _ZN19CAmbisonicProcessor14GetOrientationEv
Function: _ZN19CAmbisonicProcessor7ProcessEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj
Function: _ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj
Function: pow
Function: kiss_fftri
Function: _ZN17CAmbisonicSpeakerC2Ev
Function: _ZN17CAmbisonicSpeakerD2Ev
Function: _ZN17CAmbisonicSpeakerD0Ev
Function: _ZN17CAmbisonicSpeaker9ConfigureEjbj
Function: _ZN17CAmbisonicSpeaker7RefreshEv
Function: _ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf
Function: llvm.floor.f64
Function: _ZN17CAmbisonicDecoderC2Ev
Function: _ZN17CAmbisonicDecoderD2Ev
Function: _ZN17CAmbisonicDecoderD0Ev
Function: _ZN17CAmbisonicDecoder9ConfigureEjbij
Function: _ZN17CAmbisonicDecoder12SpeakerSetUpEij
Function: _ZN17CAmbisonicDecoder5ResetEv
Function: _ZN17CAmbisonicDecoder7RefreshEv
Function: _ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf
Function: _ZN17CAmbisonicDecoder15GetSpeakerSetUpEv
Function: _ZN17CAmbisonicDecoder15GetSpeakerCountEv
Function: _ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint
Function: _ZN17CAmbisonicDecoder11GetPositionEj
Function: _ZN17CAmbisonicDecoder14SetOrderWeightEjjf
Function: _ZN17CAmbisonicDecoder14GetOrderWeightEjj
Function: _ZN17CAmbisonicDecoder14GetCoefficientEjj
Function: _ZN17CAmbisonicDecoder14SetCoefficientEjjf
Function: _Z16DegreesToRadiansf
Function: sqrtf
Function: _ZN16CAmbisonicZoomerC2Ev
Function: _ZN16CAmbisonicZoomer9ConfigureEjbj
Function: _ZN16CAmbisonicZoomer9factorialEj
Function: _ZN16CAmbisonicZoomer5ResetEv
Function: _ZN16CAmbisonicZoomer7RefreshEv
Function: _ZN16CAmbisonicZoomer7SetZoomEf
Function: _ZN16CAmbisonicZoomer7GetZoomEv
Function: _ZN16CAmbisonicZoomer7ProcessEP8CBFormatj
Function: _ZN22CAmbisonicBinauralizerC2Ev
Function: _ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
Function: _ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
Function: _ZN22CAmbisonicBinauralizer5ResetEv
Function: _ZN22CAmbisonicBinauralizer7RefreshEv
Function: _ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf
Function: _ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv
Function: _Z15OrderToSpeakersjb
Function: _ZN22CAmbisonicBinauralizer15AllocateBuffersEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _Znwm
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5Sound13readInBFormatEv
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: printf
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZN12ILLIXR_AUDIO7ABAudio12processBlockEv
Function: _ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat
Function: _ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat
Function: _ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf
Function: _ZN8CBFormatD2Ev
Function: _ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv
Function: _ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv
Function: _ZNSo5writeEPKcl
Function: main
------------ Found launch site --------------
Finding preferred target for audioDecoding_cloned
FUNCTION: audioDecoding_cloned
  %rotator_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32)* @rotator_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for rotator_fxp_cloned
  %zoomSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @zoomSet_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for zoomSet_fxp_cloned
  %zoomProcess_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32)* @zoomProcess_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for zoomProcess_fxp_cloned
  %setAndFFT_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for setAndFFT_fxp_cloned
  %FIR_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for FIR_left_fxp_cloned
  %FIR_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for FIR_right_fxp_cloned
  %IFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for IFFT_left_fxp_cloned
  %IFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for IFFT_right_fxp_cloned
  %overlap_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64)* @overlap_left_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for overlap_left_fxp_cloned
  %overlap_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64)* @overlap_right_fxp_cloned to i8*))
IntrinsicID = 3162: llvm.hpvm.createNode
Finding preferred target for overlap_right_fxp_cloned
  call void @llvm.hpvm.bind.input(i8* %rotator_fxp_cloned.node, i32 0, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotator_fxp_cloned.node, i32 1, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotator_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotator_fxp_cloned.node, i32 3, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %rotator_fxp_cloned.node, i32 10, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 4, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 5, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 4, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output = call i8* @llvm.hpvm.createEdge(i8* %zoomSet_fxp_cloned.node, i8* %zoomProcess_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %rotator_fxp_cloned.node, i8* %zoomProcess_fxp_cloned.node, i1 true, i32 0, i32 3, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 10, i32 4, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_fxp_cloned.node, i32 7, i32 1, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_fxp_cloned.node, i32 2, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output2 = call i8* @llvm.hpvm.createEdge(i8* %zoomProcess_fxp_cloned.node, i8* %setAndFFT_fxp_cloned.node, i1 true, i32 0, i32 3, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %FIR_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output3 = call i8* @llvm.hpvm.createEdge(i8* %setAndFFT_fxp_cloned.node, i8* %FIR_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %FIR_right_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output4 = call i8* @llvm.hpvm.createEdge(i8* %setAndFFT_fxp_cloned.node, i8* %FIR_right_fxp_cloned.node, i1 true, i32 1, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %IFFT_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output5 = call i8* @llvm.hpvm.createEdge(i8* %FIR_left_fxp_cloned.node, i8* %IFFT_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %IFFT_right_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output6 = call i8* @llvm.hpvm.createEdge(i8* %FIR_right_fxp_cloned.node, i8* %IFFT_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output7 = call i8* @llvm.hpvm.createEdge(i8* %IFFT_left_fxp_cloned.node, i8* %overlap_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 8, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 9, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 6, i32 0, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  %output8 = call i8* @llvm.hpvm.createEdge(i8* %IFFT_right_fxp_cloned.node, i8* %overlap_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
IntrinsicID = 3161: llvm.hpvm.createEdge
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 8, i32 2, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 9, i32 3, i1 false)
IntrinsicID = 3158: llvm.hpvm.bind.input
  ret %emptyStruct.30 undef
	audioDecoding_cloned
	audioDecoding_cloned
	rotator_fxp_cloned
	zoomSet_fxp_cloned
	zoomProcess_fxp_cloned
	setAndFFT_fxp_cloned
	FIR_left_fxp_cloned
	FIR_right_fxp_cloned
	IFFT_left_fxp_cloned
	IFFT_right_fxp_cloned
	overlap_left_fxp_cloned
	overlap_right_fxp_cloned
	audioDecoding_cloned
	audioDecoding_cloned
	rotator_fxp_cloned
	zoomSet_fxp_cloned
	zoomProcess_fxp_cloned
	setAndFFT_fxp_cloned
	FIR_left_fxp_cloned
	FIR_right_fxp_cloned
	IFFT_left_fxp_cloned
	IFFT_right_fxp_cloned
	overlap_left_fxp_cloned
	overlap_right_fxp_cloned
Writing '/tmp/DataflowGraph-8b32ec.dot'...  done. 
Function: malloc
Function: llvm_hpvm_track_mem
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicZoomerD2Ev
Function: _ZN16CAmbisonicZoomerD0Ev
Function: _ZN22CAmbisonicBinauralizerD2Ev
Function: _ZN22CAmbisonicBinauralizerD0Ev
Function: atan2
Function: acos
Function: llvm.fabs.f32
Function: strtol
Function: llvm.trap
Function: _ZSt19__throw_logic_errorPKc
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZSt20__throw_length_errorPKc
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: strlen
Function: _ZNSo3putEc
Function: _ZNSo5flushEv
Function: _ZSt16__throw_bad_castv
Function: _ZNKSt5ctypeIcE13_M_widen_initEv
Function: _ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _GLOBAL__sub_I_main.cpp
Function: puts
Function: rotator_fxp_cloned
Function: zoomSet_fxp_cloned
Function: zoomProcess_fxp_cloned
Function: setAndFFT_fxp_cloned
Function: FIR_left_fxp_cloned
Function: FIR_right_fxp_cloned
Function: IFFT_left_fxp_cloned
Function: IFFT_right_fxp_cloned
Function: llvm.hpvm.createNode
Function: overlap_left_fxp_cloned
Function: overlap_right_fxp_cloned
Function: llvm.hpvm.bind.input
Function: llvm.hpvm.createEdge
Function: llvm.hpvm.init
Function: llvm.hpvm.cleanup
Function: llvm.hpvm.launch
Function: audioDecoding_cloned
Function: llvm.hpvm.wait

DFG2LLVM_CPU PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end19
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else12
	discovered a new reachable node %return
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Inserting cpu timer initialization
Inserting cpu timer print
Start: Generating Code for Node (I) - audioDecoding_cloned
Start: Generating Code for Node (L) - audioDecoding_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - audioDecoding_cloned
Start: Generating Code for Node (L) - audioDecoding_cloned
Skipping dummy node
DONE: Generating Code for Node (L) - audioDecoding_cloned
Start: Generating Code for Node (L) - rotator_fxp_cloned
Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32)
Cloning Function: rotator_fxp_cloned.1
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64)
Old Function name: rotator_fxp_cloned.1
New Function name: rotator_fxp_cloned.1_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
Cloning Function: rotator_fxp_cloned.1_cloned
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64)
Old Function name: rotator_fxp_cloned.1_cloned
New Function name: rotator_fxp_cloned.1_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
Cloning Function: rotator_fxp_cloned.1_cloned_cloned
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64)
Old Function name: rotator_fxp_cloned.1_cloned_cloned
New Function name: rotator_fxp_cloned.1_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: rotator_fxp_cloned.1_cloned_cloned_cloned
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64)
Old Function name: rotator_fxp_cloned.1_cloned_cloned_cloned
New Function name: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64)
Old Function name: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned
New Function name: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64)
New Function Type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)
Old Function name: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned
New Function name: rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicProcessor* %rotator : %class.CAmbisonicProcessor* %0
1. i64 %bytes_rotator : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry
  %head = alloca %class.Orientation, align 4
  %2 = load i32, i32* @_ZZ11rotator_fxpE5frame, align 4, !tbaa !14
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @_ZZ11rotator_fxpE5frame, align 4, !tbaa !14
  %3 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %4 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 4 %3, i64 24, i1 false)
  %5 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !18
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %6(%class.CAmbisonicProcessor* %rotator)
  %7 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %8 = load i8, i8* %7, align 4, !tbaa !20, !range !23
  %tobool.i = icmp eq i8 %8, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end.i
  %9 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8, !tbaa !24
  %cmp.i = icmp eq i32 %10, 0
  br i1 %cmp.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit, label %if.end3.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  %.pr.i = load i32, i32* %9, align 8, !tbaa !24
  %cmp5.i = icmp ugt i32 %.pr.i, 1
  br i1 %cmp5.i, label %if.end7.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  %.pr19.i = load i32, i32* %9, align 8, !tbaa !24
  %cmp9.i = icmp ugt i32 %.pr19.i, 2
  br i1 %cmp9.i, label %if.then10.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  br label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
  %returnStruct = insertvalue %struct.out.rotator_fxp undef, i64 %bytes_sumBF, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #24
  ret %struct.out.rotator_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #5 {
getHPVMPtrArgs:
  %rotator.i8ptr = bitcast %class.CAmbisonicProcessor* %rotator to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %rotator.i8ptr, i64 %bytes_rotator)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %head = alloca %class.Orientation, align 4
  %2 = load i32, i32* @_ZZ11rotator_fxpE5frame, align 4, !tbaa !341
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @_ZZ11rotator_fxpE5frame, align 4, !tbaa !341
  %3 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %4 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 4 %3, i64 24, i1 false)
  %5 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !14
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %6(%class.CAmbisonicProcessor* %rotator)
  %7 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %8 = load i8, i8* %7, align 4, !tbaa !24, !range !25
  %tobool.i = icmp eq i8 %8, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %9 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8, !tbaa !17
  %cmp.i = icmp eq i32 %10, 0
  br i1 %cmp.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  %.pr.i = load i32, i32* %9, align 8, !tbaa !17
  %cmp5.i = icmp ugt i32 %.pr.i, 1
  br i1 %cmp5.i, label %if.end7.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.end7.i:                                        ; preds = %if.end3.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  %.pr19.i = load i32, i32* %9, align 8, !tbaa !17
  %cmp9.i = icmp ugt i32 %.pr19.i, 2
  br i1 %cmp9.i, label %if.then10.i, label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 %nSample)
  br label %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit

_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit: ; preds = %if.then10.i, %if.end7.i, %if.end3.i, %if.end.i
  %returnStruct = insertvalue %struct.out.rotator_fxp undef, i64 %bytes_sumBF, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #24
  ret %struct.out.rotator_fxp %returnStruct
}
DONE: Generating Code for Node (L) - rotator_fxp_cloned
Start: Generating Code for Node (L) - zoomSet_fxp_cloned
Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)
Cloning Function: zoomSet_fxp_cloned.2
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
Old Function name: zoomSet_fxp_cloned.2
New Function name: zoomSet_fxp_cloned.2_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
Cloning Function: zoomSet_fxp_cloned.2_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.2_cloned
New Function name: zoomSet_fxp_cloned.2_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: zoomSet_fxp_cloned.2_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.2_cloned_cloned
New Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: zoomSet_fxp_cloned.2_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned
New Function name: zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !14
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !14
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !18
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !18
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !18
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !26
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct

; Function Attrs: uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #5 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %1 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !341
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !341
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !32
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !32
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !32
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %5, align 8, !tbaa !14
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %6(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}
DONE: Generating Code for Node (L) - zoomSet_fxp_cloned
Start: Generating Code for Node (L) - zoomProcess_fxp_cloned
Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32)
Cloning Function: zoomProcess_fxp_cloned.3
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64)
Old Function name: zoomProcess_fxp_cloned.3
New Function name: zoomProcess_fxp_cloned.3_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
Cloning Function: zoomProcess_fxp_cloned.3_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64)
Old Function name: zoomProcess_fxp_cloned.3_cloned
New Function name: zoomProcess_fxp_cloned.3_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
Cloning Function: zoomProcess_fxp_cloned.3_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.3_cloned_cloned
New Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
Cloning Function: zoomProcess_fxp_cloned.3_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
Cloning Function: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
Cloning Function: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64)
New Function Type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)
Old Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned
New Function name: zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicZoomer* %zoomer : %class.CAmbisonicZoomer* %0
1. i64 %bytes_zoomer : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %nSample : i32 %0
5. i64 %idx_x : i64 %0
6. i64 %idx_y : i64 %0
7. i64 %idx_z : i64 %0
8. i64 %dim_x : i64 %0
9. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry
  %cmp103.i = icmp eq i32 %nSample, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8, !tbaa !14
  %cmp397.i = icmp eq i32 %3, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = zext i32 %nSample to i64
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !20
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !20
  %4 = zext i32 %3 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !20
  %6 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %7, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %5, i64 %indvars.iv108.i
  %8 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !22
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us.i = fpext float %9 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %10 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !20
  %arrayidx45.us.i = getelementptr inbounds float, float* %10, i64 %indvars.iv110.i
  %11 = load float, float* %arrayidx45.us.i, align 4, !tbaa !22
  %12 = load float, float* %m_fZoomRed.i, align 4, !tbaa !24
  %mul46.us.i = fmul float %11, %12
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !22
  br label %for.inc52.us.i
  %13 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !29
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %14 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !20
  %arrayidx23.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv110.i
  %15 = load float, float* %arrayidx23.us.i, align 4, !tbaa !22
  %mul24.us.i = fmul float %13, %15
  %16 = load float, float* %m_fZoom.i, align 8, !tbaa !30
  %mul28.us.i = fmul float %8, %16
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !31
  %mul34.us.i = fmul float %17, %18
  %add35.us.i = fadd float %13, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !22
  br label %for.inc52.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %4
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %19 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !22
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %20 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !20
  %arrayidx.us.i = getelementptr inbounds float, float* %20, i64 %indvars.iv110.i
  %21 = load float, float* %arrayidx.us.i, align 4, !tbaa !22
  %mul.us.i = fmul float %19, %21
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %22 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !22
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %23 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !20
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110.i
  %24 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !22
  %mul.us.i.1 = fmul float %22, %24
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %25 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !22
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %26 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !20
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110.i
  %27 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !22
  %mul.us.i.2 = fmul float %25, %27
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %28 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !22
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %29 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !20
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !22
  %mul.us.i.3 = fmul float %28, %30
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %31 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !22
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %32 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !20
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110.i
  %33 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !22
  %mul.us.i.epil = fmul float %31, %33
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !32
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.zoomProcess_fxp %returnStruct

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #6 {
getHPVMPtrArgs:
  %zoomer.i8ptr = bitcast %class.CAmbisonicZoomer* %zoomer to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %zoomer.i8ptr, i64 %bytes_zoomer)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %cmp103.i = icmp eq i32 %nSample, 0
  br i1 %cmp103.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8, !tbaa !23
  %cmp397.i = icmp eq i32 %3, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = zext i32 %nSample to i64
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !58
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !58
  %4 = zext i32 %3 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !58
  %6 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %7, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %5, i64 %indvars.iv108.i
  %8 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !32
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us.i = fpext float %9 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %10 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !58
  %arrayidx45.us.i = getelementptr inbounds float, float* %10, i64 %indvars.iv110.i
  %11 = load float, float* %arrayidx45.us.i, align 4, !tbaa !32
  %12 = load float, float* %m_fZoomRed.i, align 4, !tbaa !241
  %mul46.us.i = fmul float %11, %12
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !32
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %13 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !247
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %14 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !58
  %arrayidx23.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv110.i
  %15 = load float, float* %arrayidx23.us.i, align 4, !tbaa !32
  %mul24.us.i = fmul float %13, %15
  %16 = load float, float* %m_fZoom.i, align 8, !tbaa !246
  %mul28.us.i = fmul float %8, %16
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !245
  %mul34.us.i = fmul float %17, %18
  %add35.us.i = fadd float %13, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !32
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %4
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %19 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !32
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %20 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !58
  %arrayidx.us.i = getelementptr inbounds float, float* %20, i64 %indvars.iv110.i
  %21 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %mul.us.i = fmul float %19, %21
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %22 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !32
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %23 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !58
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110.i
  %24 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %mul.us.i.1 = fmul float %22, %24
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %25 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !32
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %26 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !58
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110.i
  %27 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %mul.us.i.2 = fmul float %25, %27
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %28 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !32
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %29 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !58
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %mul.us.i.3 = fmul float %28, %30
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %31 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !32
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %32 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !58
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110.i
  %33 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !32
  %mul.us.i.epil = fmul float %31, %33
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !399

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %entry
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.zoomProcess_fxp %returnStruct
}
DONE: Generating Code for Node (L) - zoomProcess_fxp_cloned
Start: Generating Code for Node (L) - setAndFFT_fxp_cloned
Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)
Cloning Function: setAndFFT_fxp_cloned.4
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4
New Function name: setAndFFT_fxp_cloned.4_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
Cloning Function: setAndFFT_fxp_cloned.4_cloned
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4_cloned
New Function name: setAndFFT_fxp_cloned.4_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %idx_x : i64 %0
Cloning Function: setAndFFT_fxp_cloned.4_cloned_cloned
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4_cloned_cloned
New Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
Cloning Function: setAndFFT_fxp_cloned.4_cloned_cloned_cloned
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned
New Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
Cloning Function: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned
New Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
Cloning Function: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned
New Function name: setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
8. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !14
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !20
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !30
  %cmp40 = icmp eq i32 %6, 0
  br i1 %cmp40, label %for.cond.cleanup, label %for.body.lr.ph
  %_M_start.i39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i39 to i8**
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i37 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  br label %for.body
  %returnStruct = insertvalue %struct.out.setAndFFT_fxp undef, i64 %bytes_decoder, 0
  %returnStruct1 = insertvalue %struct.out.setAndFFT_fxp %returnStruct, i64 %bytes_decoder, 1
  ret %struct.out.setAndFFT_fxp %returnStruct1
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %8 = load i8*, i8** %7, align 8, !tbaa !14
  %9 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !33
  %arrayidx.i = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %10 = bitcast float** %arrayidx.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !33
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !34
  %conv4 = zext i32 %12 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 %mul5, i1 false)
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !34
  %conv8 = zext i32 %13 to i64
  %14 = load float*, float** %_M_start.i39, align 8, !tbaa !14
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %conv8
  %15 = bitcast float* %add.ptr.i to i8*
  %16 = load i32, i32* %m_nFFTSize, align 8, !tbaa !20
  %sub = sub i32 %16, %13
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 %mul13, i1 false)
  %17 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i37, align 8, !tbaa !33
  %18 = load float*, float** %_M_start.i39, align 8, !tbaa !14
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !33
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %17, float* %18, %struct.kiss_fft_cpx* %19)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %5, align 8, !tbaa !30
  %21 = zext i32 %20 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond.cleanup

; Function Attrs: uwtable
define %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #5 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %sumBF.i8ptr = bitcast %class.CBFormat* %sumBF to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %sumBF.i8ptr, i64 %bytes_sumBF)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !37
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul, i1 false)
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8, !tbaa !23
  %cmp40 = icmp eq i32 %6, 0
  br i1 %cmp40, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = bitcast float** %_M_start.i39 to i8**
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i37 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_fxp undef, i64 %bytes_decoder, 0
  %returnStruct1 = insertvalue %struct.out.setAndFFT_fxp %returnStruct, i64 %bytes_decoder, 1
  ret %struct.out.setAndFFT_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %8 = load i8*, i8** %7, align 8, !tbaa !37
  %9 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !58
  %arrayidx.i = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %10 = bitcast float** %arrayidx.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !58
  %12 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv4 = zext i32 %12 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %11, i64 %mul5, i1 false)
  %13 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv8 = zext i32 %13 to i64
  %14 = load float*, float** %_M_start.i39, align 8, !tbaa !37
  %add.ptr.i = getelementptr inbounds float, float* %14, i64 %conv8
  %15 = bitcast float* %add.ptr.i to i8*
  %16 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %sub = sub i32 %16, %13
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 %mul13, i1 false)
  %17 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i37, align 8, !tbaa !58
  %18 = load float*, float** %_M_start.i39, align 8, !tbaa !37
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !58
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %17, float* %18, %struct.kiss_fft_cpx* %19)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load i32, i32* %5, align 8, !tbaa !23
  %21 = zext i32 %20 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}
DONE: Generating Code for Node (L) - setAndFFT_fxp_cloned
Start: Generating Code for Node (L) - FIR_left_fxp_cloned
Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: FIR_left_fxp_cloned.5
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: FIR_left_fxp_cloned.5
New Function name: FIR_left_fxp_cloned.5_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: FIR_left_fxp_cloned.5_cloned
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: FIR_left_fxp_cloned.5_cloned
New Function name: FIR_left_fxp_cloned.5_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: FIR_left_fxp_cloned.5_cloned_cloned
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: FIR_left_fxp_cloned.5_cloned_cloned
New Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: FIR_left_fxp_cloned.5_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned
New Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned
New Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned
New Function name: FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !14
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !20
  br label %for.cond1.preheader
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !30
  %6 = load %"class.std::unique_ptr.26"*, %"class.std::unique_ptr.26"** %_M_start.i105, align 8, !tbaa !31
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.26", %"class.std::unique_ptr.26"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !30
  br label %for.body4
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct
  %.pre114 = load i32, i32* %1, align 8, !tbaa !14
  br label %for.cond.cleanup3
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !34
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !34
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !36
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !36
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !20
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit

; Function Attrs: nounwind uwtable
define %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #6 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !23
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !275
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !58
  %6 = load %"class.std::unique_ptr.26"*, %"class.std::unique_ptr.26"** %_M_start.i105, align 8, !tbaa !276
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.26", %"class.std::unique_ptr.26"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !58
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %1, align 8, !tbaa !23
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !194
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !194
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !196
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !196
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !275
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit
}
DONE: Generating Code for Node (L) - FIR_left_fxp_cloned
Start: Generating Code for Node (L) - FIR_right_fxp_cloned
Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: FIR_right_fxp_cloned.6
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: FIR_right_fxp_cloned.6
New Function name: FIR_right_fxp_cloned.6_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: FIR_right_fxp_cloned.6_cloned
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: FIR_right_fxp_cloned.6_cloned
New Function name: FIR_right_fxp_cloned.6_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: FIR_right_fxp_cloned.6_cloned_cloned
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: FIR_right_fxp_cloned.6_cloned_cloned
New Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: FIR_right_fxp_cloned.6_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned
New Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned
New Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned
New Function name: FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !14
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !20
  br label %for.cond1.preheader
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !30
  %6 = load %"class.std::unique_ptr.26"*, %"class.std::unique_ptr.26"** %_M_start.i105, align 8, !tbaa !31
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.26", %"class.std::unique_ptr.26"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !30
  br label %for.body4
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct
  %.pre114 = load i32, i32* %1, align 8, !tbaa !14
  br label %for.cond.cleanup3
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !34
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !34
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !36
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !36
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !20
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit

; Function Attrs: nounwind uwtable
define %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #6 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !23
  %cmp109 = icmp eq i32 %2, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !275
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %3 = phi i32 [ %2, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %4 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %9, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %4, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !58
  %6 = load %"class.std::unique_ptr.26"*, %"class.std::unique_ptr.26"** %_M_start.i105, align 8, !tbaa !276
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.26", %"class.std::unique_ptr.26"* %6, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !58
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %1, align 8, !tbaa !23
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %8 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %3, %for.cond1.preheader ]
  %9 = phi i32 [ %15, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %10 = zext i32 %8 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %10
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 0
  %11 = load float, float* %r, align 4, !tbaa !194
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 0
  %12 = load float, float* %r9, align 4, !tbaa !194
  %mul = fmul float %11, %12
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %5, i64 %indvars.iv, i32 1
  %13 = load float, float* %i, align 4, !tbaa !196
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %7, i64 %indvars.iv, i32 1
  %14 = load float, float* %i19, align 4, !tbaa !196
  %mul20 = fmul float %13, %14
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %11, %14
  %mul45 = fmul float %12, %13
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %m_nFFTBins, align 4, !tbaa !275
  %16 = zext i32 %15 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %16
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit
}
DONE: Generating Code for Node (L) - FIR_right_fxp_cloned
Start: Generating Code for Node (L) - IFFT_left_fxp_cloned
Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: IFFT_left_fxp_cloned.7
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7
New Function name: IFFT_left_fxp_cloned.7_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: IFFT_left_fxp_cloned.7_cloned
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7_cloned
New Function name: IFFT_left_fxp_cloned.7_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: IFFT_left_fxp_cloned.7_cloned_cloned
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7_cloned_cloned
New Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: IFFT_left_fxp_cloned.7_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned
New Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned
New Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned
New Function name: IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !14
  %_M_head_impl.i.i.i.i.i21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %2 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i21, align 8, !tbaa !14
  %_M_start.i20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i20, align 8, !tbaa !18
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %1, %struct.kiss_fft_cpx* %2, float* %3)
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !21
  %cmp22 = icmp eq i32 %4, 0
  br i1 %cmp22, label %for.cond.cleanup, label %for.body.lr.ph
  %5 = load float*, float** %_M_start.i20, align 8, !tbaa !18
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !18
  %7 = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body
  %scevgep = getelementptr float, float* %6, i64 %7
  %scevgep25 = getelementptr float, float* %5, i64 %7
  %bound0 = icmp ult float* %6, %scevgep25
  %bound1 = icmp ult float* %5, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph
  %n.vec = and i64 %7, 4294967288
  %8 = add nsw i64 %n.vec, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %xtraiter = and i64 %10, 1
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %middle.block.unr-lcssa, label %vector.ph.new
  %unroll_iter = sub nuw nsw i64 %10, %xtraiter
  br label %vector.body
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %12 = getelementptr inbounds float, float* %5, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !31, !alias.scope !32
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !31, !alias.scope !32
  %16 = getelementptr inbounds float, float* %6, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %20 = fadd <4 x float> %wide.load, %wide.load29
  %21 = fadd <4 x float> %wide.load28, %wide.load30
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %5, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !31, !alias.scope !32
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !31, !alias.scope !32
  %28 = getelementptr inbounds float, float* %6, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %32 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %33 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !37
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil
  %36 = getelementptr inbounds float, float* %5, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !31, !alias.scope !32
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !31, !alias.scope !32
  %40 = getelementptr inbounds float, float* %6, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %44 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %45 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  br label %middle.block
  %cmp.n = icmp eq i64 %n.vec, %7
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i19 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i19, align 4, !tbaa !31
  %add.ptr.i = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i, align 4, !tbaa !31
  %add = fadd float %48, %49
  store float %add, float* %add.ptr.i, align 4, !tbaa !31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !39

; Function Attrs: uwtable
define %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #5 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !58
  %_M_head_impl.i.i.i.i.i21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %2 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i21, align 8, !tbaa !58
  %_M_start.i20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i20, align 8, !tbaa !37
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %1, %struct.kiss_fft_cpx* %2, float* %3)
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %cmp22 = icmp eq i32 %4, 0
  br i1 %cmp22, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %_M_start.i20, align 8, !tbaa !37
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !37
  %7 = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %6, i64 %7
  %scevgep25 = getelementptr float, float* %5, i64 %7
  %bound0 = icmp ult float* %6, %scevgep25
  %bound1 = icmp ult float* %5, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %7, 4294967288
  %8 = add nsw i64 %n.vec, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %xtraiter = and i64 %10, 1
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %10, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %12 = getelementptr inbounds float, float* %5, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !32, !alias.scope !400
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !32, !alias.scope !400
  %16 = getelementptr inbounds float, float* %6, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %20 = fadd <4 x float> %wide.load, %wide.load29
  %21 = fadd <4 x float> %wide.load28, %wide.load30
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %5, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !400
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !32, !alias.scope !400
  %28 = getelementptr inbounds float, float* %6, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %32 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %33 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !405

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = getelementptr inbounds float, float* %5, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !400
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !32, !alias.scope !400
  %40 = getelementptr inbounds float, float* %6, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %44 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %45 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !32, !alias.scope !403, !noalias !400
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %7
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i19 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i19, align 4, !tbaa !32
  %add.ptr.i = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i, align 4, !tbaa !32
  %add = fadd float %48, %49
  store float %add, float* %add.ptr.i, align 4, !tbaa !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !406
}
DONE: Generating Code for Node (L) - IFFT_left_fxp_cloned
Start: Generating Code for Node (L) - IFFT_right_fxp_cloned
Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)
Cloning Function: IFFT_right_fxp_cloned.8
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8
New Function name: IFFT_right_fxp_cloned.8_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
Cloning Function: IFFT_right_fxp_cloned.8_cloned
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8_cloned
New Function name: IFFT_right_fxp_cloned.8_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
Cloning Function: IFFT_right_fxp_cloned.8_cloned_cloned
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8_cloned_cloned
New Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
Cloning Function: IFFT_right_fxp_cloned.8_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned
New Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
Cloning Function: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned
New Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
Cloning Function: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
Old Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64)
New Function Type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)
Old Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned
New Function name: IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. i64 %idx_x : i64 %0
3. i64 %idx_y : i64 %0
4. i64 %idx_z : i64 %0
5. i64 %dim_x : i64 %0
6. i64 %dim_y : i64 %0
Function Type after adding args: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !14
  %_M_head_impl.i.i.i.i.i21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %2 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i21, align 8, !tbaa !14
  %_M_start.i20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i20, align 8, !tbaa !18
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %1, %struct.kiss_fft_cpx* %2, float* %3)
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !21
  %cmp22 = icmp eq i32 %4, 0
  br i1 %cmp22, label %for.cond.cleanup, label %for.body.lr.ph
  %5 = load float*, float** %_M_start.i20, align 8, !tbaa !18
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !18
  %7 = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body
  %scevgep = getelementptr float, float* %6, i64 %7
  %scevgep25 = getelementptr float, float* %5, i64 %7
  %bound0 = icmp ult float* %6, %scevgep25
  %bound1 = icmp ult float* %5, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph
  %n.vec = and i64 %7, 4294967288
  %8 = add nsw i64 %n.vec, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %xtraiter = and i64 %10, 1
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %middle.block.unr-lcssa, label %vector.ph.new
  %unroll_iter = sub nuw nsw i64 %10, %xtraiter
  br label %vector.body
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %12 = getelementptr inbounds float, float* %5, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !31, !alias.scope !32
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !31, !alias.scope !32
  %16 = getelementptr inbounds float, float* %6, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %20 = fadd <4 x float> %wide.load, %wide.load29
  %21 = fadd <4 x float> %wide.load28, %wide.load30
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %5, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !31, !alias.scope !32
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !31, !alias.scope !32
  %28 = getelementptr inbounds float, float* %6, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %32 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %33 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !37
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil
  %36 = getelementptr inbounds float, float* %5, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !31, !alias.scope !32
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !31, !alias.scope !32
  %40 = getelementptr inbounds float, float* %6, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %44 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %45 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !31, !alias.scope !35, !noalias !32
  br label %middle.block
  %cmp.n = icmp eq i64 %n.vec, %7
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i19 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i19, align 4, !tbaa !31
  %add.ptr.i = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i, align 4, !tbaa !31
  %add = fadd float %48, %49
  store float %add, float* %add.ptr.i, align 4, !tbaa !31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !39

; Function Attrs: uwtable
define %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #5 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !58
  %_M_head_impl.i.i.i.i.i21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %2 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i21, align 8, !tbaa !58
  %_M_start.i20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i20, align 8, !tbaa !37
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %1, %struct.kiss_fft_cpx* %2, float* %3)
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %4 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %cmp22 = icmp eq i32 %4, 0
  br i1 %cmp22, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %5 = load float*, float** %_M_start.i20, align 8, !tbaa !37
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_start.i, align 8, !tbaa !37
  %7 = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %6, i64 %7
  %scevgep25 = getelementptr float, float* %5, i64 %7
  %bound0 = icmp ult float* %6, %scevgep25
  %bound1 = icmp ult float* %5, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %7, 4294967288
  %8 = add nsw i64 %n.vec, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %xtraiter = and i64 %10, 1
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %10, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %12 = getelementptr inbounds float, float* %5, i64 %index
  %13 = bitcast float* %12 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %13, align 4, !tbaa !32, !alias.scope !407
  %14 = getelementptr inbounds float, float* %12, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  %wide.load28 = load <4 x float>, <4 x float>* %15, align 4, !tbaa !32, !alias.scope !407
  %16 = getelementptr inbounds float, float* %6, i64 %index
  %17 = bitcast float* %16 to <4 x float>*
  %wide.load29 = load <4 x float>, <4 x float>* %17, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %18 = getelementptr inbounds float, float* %16, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %wide.load30 = load <4 x float>, <4 x float>* %19, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %20 = fadd <4 x float> %wide.load, %wide.load29
  %21 = fadd <4 x float> %wide.load28, %wide.load30
  %22 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %23 = bitcast float* %18 to <4 x float>*
  store <4 x float> %21, <4 x float>* %23, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %index.next = or i64 %index, 8
  %24 = getelementptr inbounds float, float* %5, i64 %index.next
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !407
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load28.1 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !32, !alias.scope !407
  %28 = getelementptr inbounds float, float* %6, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load29.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load30.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %32 = fadd <4 x float> %wide.load.1, %wide.load29.1
  %33 = fadd <4 x float> %wide.load28.1, %wide.load30.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !412

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = getelementptr inbounds float, float* %5, i64 %index.unr
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !407
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load28.epil = load <4 x float>, <4 x float>* %39, align 4, !tbaa !32, !alias.scope !407
  %40 = getelementptr inbounds float, float* %6, i64 %index.unr
  %41 = bitcast float* %40 to <4 x float>*
  %wide.load29.epil = load <4 x float>, <4 x float>* %41, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %42 = getelementptr inbounds float, float* %40, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  %wide.load30.epil = load <4 x float>, <4 x float>* %43, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %44 = fadd <4 x float> %wide.load.epil, %wide.load29.epil
  %45 = fadd <4 x float> %wide.load28.epil, %wide.load30.epil
  %46 = bitcast float* %40 to <4 x float>*
  store <4 x float> %44, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !32, !alias.scope !410, !noalias !407
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %7
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i19 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %48 = load float, float* %add.ptr.i19, align 4, !tbaa !32
  %add.ptr.i = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %49 = load float, float* %add.ptr.i, align 4, !tbaa !32
  %add = fadd float %48, %49
  store float %add, float* %add.ptr.i, align 4, !tbaa !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !413
}
DONE: Generating Code for Node (L) - IFFT_right_fxp_cloned
Start: Generating Code for Node (L) - overlap_left_fxp_cloned
Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64)
Cloning Function: overlap_left_fxp_cloned.9
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64)
Old Function name: overlap_left_fxp_cloned.9
New Function name: overlap_left_fxp_cloned.9_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
Cloning Function: overlap_left_fxp_cloned.9_cloned
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64)
Old Function name: overlap_left_fxp_cloned.9_cloned
New Function name: overlap_left_fxp_cloned.9_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
Cloning Function: overlap_left_fxp_cloned.9_cloned_cloned
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64)
Old Function name: overlap_left_fxp_cloned.9_cloned_cloned
New Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
Cloning Function: overlap_left_fxp_cloned.9_cloned_cloned_cloned
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64)
Old Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned
New Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
Cloning Function: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned
New Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
Cloning Function: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
Old Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned
New Function name: overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
8. i64 %dim_y : i64 %0
Function Type after adding args: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !14
  %cmp58 = icmp eq i32 %2, 0
  br i1 %cmp58, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !27
  br label %for.cond.cleanup
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !27
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck
  %indvars.iv60.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep69 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6970 = bitcast float* %scevgep69 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6970, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter102 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new
  %unroll_iter104 = sub nuw nsw i64 %8, %xtraiter102
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter105 = phi i64 [ %unroll_iter104, %vector.ph.new ], [ %niter105.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load72 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load72
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load72.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load72.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %index.next.1 = add i64 %index, 16
  %niter105.nsub.1 = add i64 %niter105, -2
  %niter105.ncmp.1 = icmp eq i64 %niter105.nsub.1, 0
  br i1 %niter105.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !37
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod103 = icmp eq i64 %xtraiter102, 0
  br i1 %lcmp.mod103, label %middle.block, label %vector.body.epil
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load72.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load72.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  br label %middle.block
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %50 = bitcast float** %resultSample to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !39
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !40
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !41
  %cmp755 = icmp eq i32 %53, 0
  %arrayidx10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp755, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph
  %.phi.trans.insert62 = bitcast %"class.std::vector"* %arrayidx10 to i8**
  %.pre63 = load i8*, i8** %.phi.trans.insert62, align 8, !tbaa !27
  br label %for.cond.cleanup8
  %_M_start.i49 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arrayidx10, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !27
  %55 = bitcast float* %54 to i8*
  %56 = load float*, float** %resultSample, align 8, !tbaa !39
  %57 = zext i32 %53 to i64
  %min.iters.check76 = icmp ult i32 %53, 8
  br i1 %min.iters.check76, label %for.body9.preheader, label %vector.memcheck86
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck86 ], [ 0, %for.body9.lr.ph ], [ %n.vec89, %middle.block74 ]
  br label %for.body9
  %scevgep78 = getelementptr float, float* %56, i64 %57
  %scevgep80 = getelementptr float, float* %54, i64 %57
  %bound082 = icmp ult float* %56, %scevgep80
  %bound183 = icmp ult float* %54, %scevgep78
  %found.conflict84 = and i1 %bound082, %bound183
  br i1 %found.conflict84, label %for.body9.preheader, label %vector.ph87
  %n.vec89 = and i64 %57, 4294967288
  %58 = add nsw i64 %n.vec89, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %xtraiter = and i64 %60, 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %middle.block74.unr-lcssa, label %vector.ph87.new
  %unroll_iter = sub nuw nsw i64 %60, %xtraiter
  br label %vector.body73
  %index90 = phi i64 [ 0, %vector.ph87.new ], [ %index.next91.1, %vector.body73 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph87.new ], [ %niter.nsub.1, %vector.body73 ]
  %62 = getelementptr inbounds float, float* %54, i64 %index90
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load98 = load <4 x float>, <4 x float>* %63, align 4, !tbaa !34, !alias.scope !42
  %64 = getelementptr inbounds float, float* %62, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %65, align 4, !tbaa !34, !alias.scope !42
  %66 = getelementptr inbounds float, float* %56, i64 %index90
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load100 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %68 = getelementptr inbounds float, float* %66, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  %wide.load101 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %70 = fadd <4 x float> %wide.load98, %wide.load100
  %71 = fadd <4 x float> %wide.load99, %wide.load101
  %72 = bitcast float* %66 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %73 = bitcast float* %68 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %index.next91 = or i64 %index90, 8
  %74 = getelementptr inbounds float, float* %54, i64 %index.next91
  %75 = bitcast float* %74 to <4 x float>*
  %wide.load98.1 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !34, !alias.scope !42
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load99.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !34, !alias.scope !42
  %78 = getelementptr inbounds float, float* %56, i64 %index.next91
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load100.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %wide.load101.1 = load <4 x float>, <4 x float>* %81, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %82 = fadd <4 x float> %wide.load98.1, %wide.load100.1
  %83 = fadd <4 x float> %wide.load99.1, %wide.load101.1
  %84 = bitcast float* %78 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %85 = bitcast float* %80 to <4 x float>*
  store <4 x float> %83, <4 x float>* %85, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %index.next91.1 = add i64 %index90, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block74.unr-lcssa, label %vector.body73, !llvm.loop !47
  %index90.unr = phi i64 [ 0, %vector.ph87 ], [ %index.next91.1, %vector.body73 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block74, label %vector.body73.epil
  %86 = getelementptr inbounds float, float* %54, i64 %index90.unr
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load98.epil = load <4 x float>, <4 x float>* %87, align 4, !tbaa !34, !alias.scope !42
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load99.epil = load <4 x float>, <4 x float>* %89, align 4, !tbaa !34, !alias.scope !42
  %90 = getelementptr inbounds float, float* %56, i64 %index90.unr
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load100.epil = load <4 x float>, <4 x float>* %91, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %92 = getelementptr inbounds float, float* %90, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load101.epil = load <4 x float>, <4 x float>* %93, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %94 = fadd <4 x float> %wide.load98.epil, %wide.load100.epil
  %95 = fadd <4 x float> %wide.load99.epil, %wide.load101.epil
  %96 = bitcast float* %90 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %97 = bitcast float* %92 to <4 x float>*
  store <4 x float> %95, <4 x float>* %97, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  br label %middle.block74
  %cmp.n93 = icmp eq i64 %n.vec89, %57
  br i1 %cmp.n93, label %for.cond.cleanup8.loopexit, label %for.body9.preheader
  %indvars.iv60 = phi i64 [ %indvars.iv.next61, %for.body ], [ %indvars.iv60.ph, %for.body.preheader ]
  %98 = load float, float* %m_fFFTScaler, align 8, !tbaa !30
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv60
  %99 = load float, float* %add.ptr.i54, align 4, !tbaa !34
  %mul = fmul float %98, %99
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !34
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %cmp = icmp ult i64 %indvars.iv.next61, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !48
  %phitmp = zext i32 %53 to i64
  %phitmp67 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8
  %100 = phi i8* [ %.pre63, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %55, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp67, %for.cond.cleanup8.loopexit ]
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !40
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !27
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct undef
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %arrayidx14 = getelementptr inbounds float, float* %56, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !34
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %57
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !49

; Function Attrs: nounwind uwtable
define %emptyStruct @overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float** in out %resultSample, i64 %bytes_resultSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #6 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %cmp58 = icmp eq i32 %2, 0
  br i1 %cmp58, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !37
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !37
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv60.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep69 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6970 = bitcast float* %scevgep69 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6970, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter102 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter104 = sub nuw nsw i64 %8, %xtraiter102
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !414
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !414
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter105 = phi i64 [ %unroll_iter104, %vector.ph.new ], [ %niter105.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load72 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load72
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load72.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load72.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %index.next.1 = add i64 %index, 16
  %niter105.nsub.1 = add i64 %niter105, -2
  %niter105.ncmp.1 = icmp eq i64 %niter105.nsub.1, 0
  br i1 %niter105.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !419

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod103 = icmp eq i64 %xtraiter102, 0
  br i1 %lcmp.mod103, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !414
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load72.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load72.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !32, !alias.scope !417, !noalias !414
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %50 = bitcast float** %resultSample to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !58
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !260
  %cmp755 = icmp eq i32 %53, 0
  %arrayidx10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp755, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph

for.cond.cleanup.for.cond.cleanup8_crit_edge:     ; preds = %for.cond.cleanup
  %.phi.trans.insert62 = bitcast %"class.std::vector"* %arrayidx10 to i8**
  %.pre63 = load i8*, i8** %.phi.trans.insert62, align 8, !tbaa !37
  br label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i49 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arrayidx10, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !37
  %55 = bitcast float* %54 to i8*
  %56 = load float*, float** %resultSample, align 8, !tbaa !58
  %57 = zext i32 %53 to i64
  %min.iters.check76 = icmp ult i32 %53, 8
  br i1 %min.iters.check76, label %for.body9.preheader, label %vector.memcheck86

for.body9.preheader:                              ; preds = %middle.block74, %vector.memcheck86, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck86 ], [ 0, %for.body9.lr.ph ], [ %n.vec89, %middle.block74 ]
  br label %for.body9

vector.memcheck86:                                ; preds = %for.body9.lr.ph
  %scevgep78 = getelementptr float, float* %56, i64 %57
  %scevgep80 = getelementptr float, float* %54, i64 %57
  %bound082 = icmp ult float* %56, %scevgep80
  %bound183 = icmp ult float* %54, %scevgep78
  %found.conflict84 = and i1 %bound082, %bound183
  br i1 %found.conflict84, label %for.body9.preheader, label %vector.ph87

vector.ph87:                                      ; preds = %vector.memcheck86
  %n.vec89 = and i64 %57, 4294967288
  %58 = add nsw i64 %n.vec89, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %xtraiter = and i64 %60, 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %middle.block74.unr-lcssa, label %vector.ph87.new

vector.ph87.new:                                  ; preds = %vector.ph87
  %unroll_iter = sub nuw nsw i64 %60, %xtraiter
  br label %vector.body73

vector.body73:                                    ; preds = %vector.body73, %vector.ph87.new
  %index90 = phi i64 [ 0, %vector.ph87.new ], [ %index.next91.1, %vector.body73 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph87.new ], [ %niter.nsub.1, %vector.body73 ]
  %62 = getelementptr inbounds float, float* %54, i64 %index90
  %63 = bitcast float* %62 to <4 x float>*
  %wide.load98 = load <4 x float>, <4 x float>* %63, align 4, !tbaa !32, !alias.scope !420
  %64 = getelementptr inbounds float, float* %62, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %65, align 4, !tbaa !32, !alias.scope !420
  %66 = getelementptr inbounds float, float* %56, i64 %index90
  %67 = bitcast float* %66 to <4 x float>*
  %wide.load100 = load <4 x float>, <4 x float>* %67, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %68 = getelementptr inbounds float, float* %66, i64 4
  %69 = bitcast float* %68 to <4 x float>*
  %wide.load101 = load <4 x float>, <4 x float>* %69, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %70 = fadd <4 x float> %wide.load98, %wide.load100
  %71 = fadd <4 x float> %wide.load99, %wide.load101
  %72 = bitcast float* %66 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %73 = bitcast float* %68 to <4 x float>*
  store <4 x float> %71, <4 x float>* %73, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %index.next91 = or i64 %index90, 8
  %74 = getelementptr inbounds float, float* %54, i64 %index.next91
  %75 = bitcast float* %74 to <4 x float>*
  %wide.load98.1 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !32, !alias.scope !420
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load99.1 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !32, !alias.scope !420
  %78 = getelementptr inbounds float, float* %56, i64 %index.next91
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load100.1 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %wide.load101.1 = load <4 x float>, <4 x float>* %81, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %82 = fadd <4 x float> %wide.load98.1, %wide.load100.1
  %83 = fadd <4 x float> %wide.load99.1, %wide.load101.1
  %84 = bitcast float* %78 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %85 = bitcast float* %80 to <4 x float>*
  store <4 x float> %83, <4 x float>* %85, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %index.next91.1 = add i64 %index90, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block74.unr-lcssa, label %vector.body73, !llvm.loop !425

middle.block74.unr-lcssa:                         ; preds = %vector.body73, %vector.ph87
  %index90.unr = phi i64 [ 0, %vector.ph87 ], [ %index.next91.1, %vector.body73 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block74, label %vector.body73.epil

vector.body73.epil:                               ; preds = %middle.block74.unr-lcssa
  %86 = getelementptr inbounds float, float* %54, i64 %index90.unr
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load98.epil = load <4 x float>, <4 x float>* %87, align 4, !tbaa !32, !alias.scope !420
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load99.epil = load <4 x float>, <4 x float>* %89, align 4, !tbaa !32, !alias.scope !420
  %90 = getelementptr inbounds float, float* %56, i64 %index90.unr
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load100.epil = load <4 x float>, <4 x float>* %91, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %92 = getelementptr inbounds float, float* %90, i64 4
  %93 = bitcast float* %92 to <4 x float>*
  %wide.load101.epil = load <4 x float>, <4 x float>* %93, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %94 = fadd <4 x float> %wide.load98.epil, %wide.load100.epil
  %95 = fadd <4 x float> %wide.load99.epil, %wide.load101.epil
  %96 = bitcast float* %90 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  %97 = bitcast float* %92 to <4 x float>*
  store <4 x float> %95, <4 x float>* %97, align 4, !tbaa !32, !alias.scope !423, !noalias !420
  br label %middle.block74

middle.block74:                                   ; preds = %vector.body73.epil, %middle.block74.unr-lcssa
  %cmp.n93 = icmp eq i64 %n.vec89, %57
  br i1 %cmp.n93, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv60 = phi i64 [ %indvars.iv.next61, %for.body ], [ %indvars.iv60.ph, %for.body.preheader ]
  %98 = load float, float* %m_fFFTScaler, align 8, !tbaa !267
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv60
  %99 = load float, float* %add.ptr.i54, align 4, !tbaa !32
  %mul = fmul float %98, %99
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !32
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %cmp = icmp ult i64 %indvars.iv.next61, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !426

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block74
  %phitmp = zext i32 %53 to i64
  %phitmp67 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup.for.cond.cleanup8_crit_edge
  %100 = phi i8* [ %.pre63, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %55, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp67, %for.cond.cleanup8.loopexit ]
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !37
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct undef

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !32
  %arrayidx14 = getelementptr inbounds float, float* %56, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !32
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %57
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !427
}
DONE: Generating Code for Node (L) - overlap_left_fxp_cloned
Start: Generating Code for Node (L) - overlap_right_fxp_cloned
Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64)
Cloning Function: overlap_right_fxp_cloned.10
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64)
Old Function name: overlap_right_fxp_cloned.10
New Function name: overlap_right_fxp_cloned.10_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
Cloning Function: overlap_right_fxp_cloned.10_cloned
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64)
Old Function name: overlap_right_fxp_cloned.10_cloned
New Function name: overlap_right_fxp_cloned.10_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
Cloning Function: overlap_right_fxp_cloned.10_cloned_cloned
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64)
Old Function name: overlap_right_fxp_cloned.10_cloned_cloned
New Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
Cloning Function: overlap_right_fxp_cloned.10_cloned_cloned_cloned
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64)
Old Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned
New Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
Cloning Function: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64)
Old Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned
New Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
Cloning Function: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
Old Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64)
New Function Type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)
Old Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned
New Function name: overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %class.CAmbisonicBinauralizer* %decoder : %class.CAmbisonicBinauralizer* %0
1. i64 %bytes_decoder : i64 %0
2. float** %resultSample : float** %0
3. i64 %bytes_resultSample : i64 %0
4. i64 %idx_x : i64 %0
5. i64 %idx_y : i64 %0
6. i64 %idx_z : i64 %0
7. i64 %dim_x : i64 %0
8. i64 %dim_y : i64 %0
Function Type after adding args: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)

getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !14
  %cmp57 = icmp eq i32 %2, 0
  br i1 %cmp57, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !27
  br label %for.cond.cleanup
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !27
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck
  %indvars.iv59.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep64 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6465 = bitcast float* %scevgep64 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6465, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter97 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new
  %unroll_iter99 = sub nuw nsw i64 %8, %xtraiter97
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter100 = phi i64 [ %unroll_iter99, %vector.ph.new ], [ %niter100.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load67 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load67
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load67.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load67.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %index.next.1 = add i64 %index, 16
  %niter100.nsub.1 = add i64 %niter100, -2
  %niter100.ncmp.1 = icmp eq i64 %niter100.nsub.1, 0
  br i1 %niter100.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !37
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod98 = icmp eq i64 %xtraiter97, 0
  br i1 %lcmp.mod98, label %middle.block, label %vector.body.epil
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !30, !alias.scope !31
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load67.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load67.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !34, !alias.scope !35, !noalias !31
  br label %middle.block
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %arrayidx = getelementptr inbounds float*, float** %resultSample, i64 1
  %50 = bitcast float** %arrayidx to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !39
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !40
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !41
  %cmp755 = icmp eq i32 %53, 0
  br i1 %cmp755, label %for.cond.cleanup8, label %for.body9.lr.ph
  %_M_start.i49 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !27
  %55 = load float*, float** %arrayidx, align 8, !tbaa !39
  %56 = zext i32 %53 to i64
  %min.iters.check71 = icmp ult i32 %53, 8
  br i1 %min.iters.check71, label %for.body9.preheader, label %vector.memcheck81
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck81 ], [ 0, %for.body9.lr.ph ], [ %n.vec84, %middle.block69 ]
  br label %for.body9
  %scevgep73 = getelementptr float, float* %55, i64 %56
  %scevgep75 = getelementptr float, float* %54, i64 %56
  %bound077 = icmp ult float* %55, %scevgep75
  %bound178 = icmp ult float* %54, %scevgep73
  %found.conflict79 = and i1 %bound077, %bound178
  br i1 %found.conflict79, label %for.body9.preheader, label %vector.ph82
  %n.vec84 = and i64 %56, 4294967288
  %57 = add nsw i64 %n.vec84, -8
  %58 = lshr exact i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %xtraiter = and i64 %59, 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %middle.block69.unr-lcssa, label %vector.ph82.new
  %unroll_iter = sub nuw nsw i64 %59, %xtraiter
  br label %vector.body68
  %index85 = phi i64 [ 0, %vector.ph82.new ], [ %index.next86.1, %vector.body68 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph82.new ], [ %niter.nsub.1, %vector.body68 ]
  %61 = getelementptr inbounds float, float* %54, i64 %index85
  %62 = bitcast float* %61 to <4 x float>*
  %wide.load93 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !34, !alias.scope !42
  %63 = getelementptr inbounds float, float* %61, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %64, align 4, !tbaa !34, !alias.scope !42
  %65 = getelementptr inbounds float, float* %55, i64 %index85
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load95 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load96 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %69 = fadd <4 x float> %wide.load93, %wide.load95
  %70 = fadd <4 x float> %wide.load94, %wide.load96
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %index.next86 = or i64 %index85, 8
  %73 = getelementptr inbounds float, float* %54, i64 %index.next86
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load93.1 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !34, !alias.scope !42
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load94.1 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !34, !alias.scope !42
  %77 = getelementptr inbounds float, float* %55, i64 %index.next86
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load95.1 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %79 = getelementptr inbounds float, float* %77, i64 4
  %80 = bitcast float* %79 to <4 x float>*
  %wide.load96.1 = load <4 x float>, <4 x float>* %80, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %81 = fadd <4 x float> %wide.load93.1, %wide.load95.1
  %82 = fadd <4 x float> %wide.load94.1, %wide.load96.1
  %83 = bitcast float* %77 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %84 = bitcast float* %79 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %index.next86.1 = add i64 %index85, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block69.unr-lcssa, label %vector.body68, !llvm.loop !47
  %index85.unr = phi i64 [ 0, %vector.ph82 ], [ %index.next86.1, %vector.body68 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block69, label %vector.body68.epil
  %85 = getelementptr inbounds float, float* %54, i64 %index85.unr
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load93.epil = load <4 x float>, <4 x float>* %86, align 4, !tbaa !34, !alias.scope !42
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  %wide.load94.epil = load <4 x float>, <4 x float>* %88, align 4, !tbaa !34, !alias.scope !42
  %89 = getelementptr inbounds float, float* %55, i64 %index85.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load95.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load96.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %93 = fadd <4 x float> %wide.load93.epil, %wide.load95.epil
  %94 = fadd <4 x float> %wide.load94.epil, %wide.load96.epil
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !34, !alias.scope !45, !noalias !42
  br label %middle.block69
  %cmp.n88 = icmp eq i64 %n.vec84, %56
  br i1 %cmp.n88, label %for.cond.cleanup8.loopexit, label %for.body9.preheader
  %indvars.iv59 = phi i64 [ %indvars.iv.next60, %for.body ], [ %indvars.iv59.ph, %for.body.preheader ]
  %97 = load float, float* %m_fFFTScaler, align 8, !tbaa !30
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv59
  %98 = load float, float* %add.ptr.i54, align 4, !tbaa !34
  %mul = fmul float %97, %98
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !34
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1
  %cmp = icmp ult i64 %indvars.iv.next60, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !48
  %phitmp = zext i32 %53 to i64
  %phitmp62 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8
  %.lcssa = phi i64 [ %phitmp62, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %99 = bitcast float** %_M_start.i52 to i8**
  %100 = load i8*, i8** %99, align 8, !tbaa !27
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !40
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !27
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct.29 undef
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !34
  %arrayidx14 = getelementptr inbounds float, float* %55, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !34
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %56
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !49

; Function Attrs: nounwind uwtable
define %emptyStruct.29 @overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float** in out %resultSample, i64 %bytes_resultSample, i64 %idx_x, i64 %idx_y, i64 %idx_z, i64 %dim_x, i64 %dim_y, i64 %dim_z) #6 personality i32 (...)* @__gxx_personality_v0 {
getHPVMPtrArgs:
  %decoder.i8ptr = bitcast %class.CAmbisonicBinauralizer* %decoder to i8*
  %0 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %decoder.i8ptr, i64 %bytes_decoder)
  %resultSample.i8ptr = bitcast float** %resultSample to i8*
  %1 = call i8* @llvm_hpvm_cpu_argument_ptr(i8* %resultSample.i8ptr, i64 %bytes_resultSample)
  br label %entry

entry:                                            ; preds = %getHPVMPtrArgs
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !266
  %cmp57 = icmp eq i32 %2, 0
  br i1 %cmp57, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !37
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i53, align 8, !tbaa !37
  %4 = bitcast float* %3 to i8*
  %5 = zext i32 %2 to i64
  %min.iters.check = icmp ult i32 %2, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv59.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %3, i64 %5
  %scevgep64 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6465 = bitcast float* %scevgep64 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6465, i64 1
  %bound0 = icmp ugt i8* %uglygep, %4
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %5, 4294967288
  %6 = add nsw i64 %n.vec, -8
  %7 = lshr exact i64 %6, 3
  %8 = add nuw nsw i64 %7, 1
  %xtraiter97 = and i64 %8, 1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter99 = sub nuw nsw i64 %8, %xtraiter97
  %10 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !428
  %11 = insertelement <4 x float> undef, float %10, i32 0
  %12 = shufflevector <4 x float> %11, <4 x float> undef, <4 x i32> zeroinitializer
  %13 = insertelement <4 x float> undef, float %10, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !428
  %16 = insertelement <4 x float> undef, float %15, i32 0
  %17 = shufflevector <4 x float> %16, <4 x float> undef, <4 x i32> zeroinitializer
  %18 = insertelement <4 x float> undef, float %15, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter100 = phi i64 [ %unroll_iter99, %vector.ph.new ], [ %niter100.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %3, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load67 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %24 = fmul <4 x float> %12, %wide.load
  %25 = fmul <4 x float> %14, %wide.load67
  %26 = bitcast float* %20 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %index.next = or i64 %index, 8
  %28 = getelementptr inbounds float, float* %3, i64 %index.next
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %30 = getelementptr inbounds float, float* %28, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  %wide.load67.1 = load <4 x float>, <4 x float>* %31, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %32 = fmul <4 x float> %17, %wide.load.1
  %33 = fmul <4 x float> %19, %wide.load67.1
  %34 = bitcast float* %28 to <4 x float>*
  store <4 x float> %32, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %33, <4 x float>* %35, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %index.next.1 = add i64 %index, 16
  %niter100.nsub.1 = add i64 %niter100, -2
  %niter100.ncmp.1 = icmp eq i64 %niter100.nsub.1, 0
  br i1 %niter100.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !433

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod98 = icmp eq i64 %xtraiter97, 0
  br i1 %lcmp.mod98, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %36 = load float, float* %m_fFFTScaler, align 8, !tbaa !267, !alias.scope !428
  %37 = insertelement <4 x float> undef, float %36, i32 0
  %38 = shufflevector <4 x float> %37, <4 x float> undef, <4 x i32> zeroinitializer
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> zeroinitializer
  %41 = getelementptr inbounds float, float* %3, i64 %index.unr
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %43 = getelementptr inbounds float, float* %41, i64 4
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load67.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %45 = fmul <4 x float> %38, %wide.load.epil
  %46 = fmul <4 x float> %40, %wide.load67.epil
  %47 = bitcast float* %41 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  %48 = bitcast float* %43 to <4 x float>*
  store <4 x float> %46, <4 x float>* %48, align 4, !tbaa !32, !alias.scope !431, !noalias !428
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %5
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry.for.cond.cleanup_crit_edge
  %49 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %4, %middle.block ], [ %4, %for.body ]
  %arrayidx = getelementptr inbounds float*, float** %resultSample, i64 1
  %50 = bitcast float** %arrayidx to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !58
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %52 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv3 = zext i32 %52 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %53 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !260
  %cmp755 = icmp eq i32 %53, 0
  br i1 %cmp755, label %for.cond.cleanup8, label %for.body9.lr.ph

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i49 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %54 = load float*, float** %_M_start.i49, align 8, !tbaa !37
  %55 = load float*, float** %arrayidx, align 8, !tbaa !58
  %56 = zext i32 %53 to i64
  %min.iters.check71 = icmp ult i32 %53, 8
  br i1 %min.iters.check71, label %for.body9.preheader, label %vector.memcheck81

for.body9.preheader:                              ; preds = %middle.block69, %vector.memcheck81, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck81 ], [ 0, %for.body9.lr.ph ], [ %n.vec84, %middle.block69 ]
  br label %for.body9

vector.memcheck81:                                ; preds = %for.body9.lr.ph
  %scevgep73 = getelementptr float, float* %55, i64 %56
  %scevgep75 = getelementptr float, float* %54, i64 %56
  %bound077 = icmp ult float* %55, %scevgep75
  %bound178 = icmp ult float* %54, %scevgep73
  %found.conflict79 = and i1 %bound077, %bound178
  br i1 %found.conflict79, label %for.body9.preheader, label %vector.ph82

vector.ph82:                                      ; preds = %vector.memcheck81
  %n.vec84 = and i64 %56, 4294967288
  %57 = add nsw i64 %n.vec84, -8
  %58 = lshr exact i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %xtraiter = and i64 %59, 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %middle.block69.unr-lcssa, label %vector.ph82.new

vector.ph82.new:                                  ; preds = %vector.ph82
  %unroll_iter = sub nuw nsw i64 %59, %xtraiter
  br label %vector.body68

vector.body68:                                    ; preds = %vector.body68, %vector.ph82.new
  %index85 = phi i64 [ 0, %vector.ph82.new ], [ %index.next86.1, %vector.body68 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph82.new ], [ %niter.nsub.1, %vector.body68 ]
  %61 = getelementptr inbounds float, float* %54, i64 %index85
  %62 = bitcast float* %61 to <4 x float>*
  %wide.load93 = load <4 x float>, <4 x float>* %62, align 4, !tbaa !32, !alias.scope !434
  %63 = getelementptr inbounds float, float* %61, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %64, align 4, !tbaa !32, !alias.scope !434
  %65 = getelementptr inbounds float, float* %55, i64 %index85
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load95 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load96 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %69 = fadd <4 x float> %wide.load93, %wide.load95
  %70 = fadd <4 x float> %wide.load94, %wide.load96
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %index.next86 = or i64 %index85, 8
  %73 = getelementptr inbounds float, float* %54, i64 %index.next86
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load93.1 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !32, !alias.scope !434
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load94.1 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !32, !alias.scope !434
  %77 = getelementptr inbounds float, float* %55, i64 %index.next86
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load95.1 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %79 = getelementptr inbounds float, float* %77, i64 4
  %80 = bitcast float* %79 to <4 x float>*
  %wide.load96.1 = load <4 x float>, <4 x float>* %80, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %81 = fadd <4 x float> %wide.load93.1, %wide.load95.1
  %82 = fadd <4 x float> %wide.load94.1, %wide.load96.1
  %83 = bitcast float* %77 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %84 = bitcast float* %79 to <4 x float>*
  store <4 x float> %82, <4 x float>* %84, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %index.next86.1 = add i64 %index85, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block69.unr-lcssa, label %vector.body68, !llvm.loop !439

middle.block69.unr-lcssa:                         ; preds = %vector.body68, %vector.ph82
  %index85.unr = phi i64 [ 0, %vector.ph82 ], [ %index.next86.1, %vector.body68 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block69, label %vector.body68.epil

vector.body68.epil:                               ; preds = %middle.block69.unr-lcssa
  %85 = getelementptr inbounds float, float* %54, i64 %index85.unr
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load93.epil = load <4 x float>, <4 x float>* %86, align 4, !tbaa !32, !alias.scope !434
  %87 = getelementptr inbounds float, float* %85, i64 4
  %88 = bitcast float* %87 to <4 x float>*
  %wide.load94.epil = load <4 x float>, <4 x float>* %88, align 4, !tbaa !32, !alias.scope !434
  %89 = getelementptr inbounds float, float* %55, i64 %index85.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load95.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load96.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %93 = fadd <4 x float> %wide.load93.epil, %wide.load95.epil
  %94 = fadd <4 x float> %wide.load94.epil, %wide.load96.epil
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !32, !alias.scope !437, !noalias !434
  br label %middle.block69

middle.block69:                                   ; preds = %vector.body68.epil, %middle.block69.unr-lcssa
  %cmp.n88 = icmp eq i64 %n.vec84, %56
  br i1 %cmp.n88, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv59 = phi i64 [ %indvars.iv.next60, %for.body ], [ %indvars.iv59.ph, %for.body.preheader ]
  %97 = load float, float* %m_fFFTScaler, align 8, !tbaa !267
  %add.ptr.i54 = getelementptr inbounds float, float* %3, i64 %indvars.iv59
  %98 = load float, float* %add.ptr.i54, align 4, !tbaa !32
  %mul = fmul float %97, %98
  store float %mul, float* %add.ptr.i54, align 4, !tbaa !32
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1
  %cmp = icmp ult i64 %indvars.iv.next60, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !440

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block69
  %phitmp = zext i32 %53 to i64
  %phitmp62 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup
  %.lcssa = phi i64 [ %phitmp62, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %99 = bitcast float** %_M_start.i52 to i8**
  %100 = load i8*, i8** %99, align 8, !tbaa !37
  %101 = load i32, i32* %m_nBlockSize, align 8, !tbaa !274
  %conv23 = zext i32 %101 to i64
  %102 = load float*, float** %_M_start.i, align 8, !tbaa !37
  %add.ptr.i51 = getelementptr inbounds float, float* %102, i64 %conv23
  %103 = bitcast float* %add.ptr.i51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* nonnull align 4 %103, i64 %.lcssa, i1 false)
  ret %emptyStruct.29 undef

for.body9:                                        ; preds = %for.body9, %for.body9.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ %indvars.iv.ph, %for.body9.preheader ]
  %add.ptr.i = getelementptr inbounds float, float* %54, i64 %indvars.iv
  %104 = load float, float* %add.ptr.i, align 4, !tbaa !32
  %arrayidx14 = getelementptr inbounds float, float* %55, i64 %indvars.iv
  %105 = load float, float* %arrayidx14, align 4, !tbaa !32
  %add = fadd float %104, %105
  store float %add, float* %arrayidx14, align 4, !tbaa !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp7 = icmp ult i64 %indvars.iv.next, %56
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8.loopexit, !llvm.loop !441
}
DONE: Generating Code for Node (L) - overlap_right_fxp_cloned
Invoking child noderotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 0:
Argument 0 = %class.CAmbisonicProcessor* %rotator
Finding argument 1:
Argument 1 = i64 %bytes_rotator
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Finding argument 3:
Argument 3 = i64 %bytes_sumBF
Finding argument 10:
Argument 4 = i32 %nSample
Gen Function type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.rotator_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32)*
Arguments: 11
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodezoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 4:
Argument 0 = %class.CAmbisonicZoomer* %zoomer
Finding argument 5:
Argument 1 = i64 %bytes_zoomer
Gen Function type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)*
Arguments: 8
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodezoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 4:
Argument 0 = %class.CAmbisonicZoomer* %zoomer
Going to generate ExtarctVal inst from   %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Going to generate ExtarctVal inst from   %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Finding argument 10:
Argument 4 = i32 %nSample
Gen Function type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32)*
Arguments: 11
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodesetAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Finding argument 7:
Argument 1 = i64 %bytes_decoder
Finding argument 2:
Argument 2 = %class.CBFormat* %sumBF
Going to generate ExtarctVal inst from   %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Gen Function type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.setAndFFT_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)*
Arguments: 10
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeFIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Gen Function type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeFIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Gen Function type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %4 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeIFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Gen Function type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %4 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeIFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Gen Function type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)*
Arguments: 8
  %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %4 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %6 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeoverlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Finding argument 8:
Argument 2 = float** %resultSample
Finding argument 9:
Argument 3 = i64 %bytes_resultSample
Gen Function type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %emptyStruct (%class.CAmbisonicBinauralizer*, i64, float**, i64)*
Arguments: 10
  %overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct @overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %7, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %4 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %6 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %7 = extractvalue %struct.out.IFFT_left_fxp %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct @overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %7, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
Invoking child nodeoverlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned
Finding argument 6:
Argument 0 = %class.CAmbisonicBinauralizer* %decoder
Going to generate ExtarctVal inst from   %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Finding argument 8:
Argument 2 = float** %resultSample
Finding argument 9:
Argument 3 = i64 %bytes_resultSample
Gen Function type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64, i64, i64, i64, i64, i64, i64)*
Node Function type: %emptyStruct.29 (%class.CAmbisonicBinauralizer*, i64, float**, i64)*
Arguments: 10
  %overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct.29 @overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %8, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Push on stack:   call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
Pop from stack:   call void @llvm_hpvm_cpu_dstack_pop()

define %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample) {
entry:
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.rotator_fxp @rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomSet_fxp @zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %0 = extractvalue %struct.out.zoomSet_fxp %zoomSet_fxp_cloned.2_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  %1 = extractvalue %struct.out.rotator_fxp %rotator_fxp_cloned.1_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicZoomer* %zoomer, i64 %0, %class.CBFormat* %sumBF, i64 %1, i32 %nSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %2 = extractvalue %struct.out.zoomProcess_fxp %zoomProcess_fxp_cloned.3_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.setAndFFT_fxp @setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %2, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %3 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_left_fxp @FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %3, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %4 = extractvalue %struct.out.setAndFFT_fxp %setAndFFT_fxp_cloned.4_cloned_cloned_cloned_cloned_cloned_cloned_output, 1
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.FIR_right_fxp @FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %4, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %5 = extractvalue %struct.out.FIR_left_fxp %FIR_left_fxp_cloned.5_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %5, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %6 = extractvalue %struct.out.FIR_right_fxp %FIR_right_fxp_cloned.6_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output = call %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %6, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %7 = extractvalue %struct.out.IFFT_left_fxp %IFFT_left_fxp_cloned.7_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct @overlap_left_fxp_cloned.9_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %7, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  %8 = extractvalue %struct.out.IFFT_right_fxp %IFFT_right_fxp_cloned.8_cloned_cloned_cloned_cloned_cloned_cloned_output, 0
  call void @llvm_hpvm_cpu_dstack_push(i32 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  %overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned_output = call %emptyStruct.29 @overlap_right_fxp_cloned.10_cloned_cloned_cloned_cloned_cloned_cloned(%class.CAmbisonicBinauralizer* %decoder, i64 %8, float** %resultSample, i64 %bytes_resultSample, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0)
  call void @llvm_hpvm_cpu_dstack_pop()
  ret %emptyStruct.30 undef
}
*** Generating epilogue code for the function****
Extracted all
Before editing
Node: audioDecoding_cloned with tag 1
CPU Fun: audioDecoding_cloned.11
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
Warning: Second generated CPU function for node audioDecoding_cloned
After editing
Node: audioDecoding_cloned with tag 1
CPU Fun: audioDecoding_cloned.11
hascpuGenFuncForCPU : 1
GPU Fun: null
hascpuGenFuncForGPU : 0
DONE: Generating Code for Node (I) - audioDecoding_cloned
Generating Launch Function
Generating Launch Function
Generating Launch Function
Created Empty Launch Function
Application specific function:

define i8* @LaunchDataflowGraph(i8* %data.addr) {
entry:
  %rotator.addr = bitcast i8* %data.addr to %class.CAmbisonicProcessor**
  %rotator = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr
  %nextArg = getelementptr %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, i64 1
  %bytes_rotator.addr = bitcast %class.CAmbisonicProcessor** %nextArg to i64*
  %bytes_rotator = load i64, i64* %bytes_rotator.addr
  %nextArg1 = getelementptr i64, i64* %bytes_rotator.addr, i64 1
  %sumBF.addr = bitcast i64* %nextArg1 to %class.CBFormat**
  %sumBF = load %class.CBFormat*, %class.CBFormat** %sumBF.addr
  %nextArg2 = getelementptr %class.CBFormat*, %class.CBFormat** %sumBF.addr, i64 1
  %bytes_sumBF.addr = bitcast %class.CBFormat** %nextArg2 to i64*
  %bytes_sumBF = load i64, i64* %bytes_sumBF.addr
  %nextArg3 = getelementptr i64, i64* %bytes_sumBF.addr, i64 1
  %zoomer.addr = bitcast i64* %nextArg3 to %class.CAmbisonicZoomer**
  %zoomer = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr
  %nextArg4 = getelementptr %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, i64 1
  %bytes_zoomer.addr = bitcast %class.CAmbisonicZoomer** %nextArg4 to i64*
  %bytes_zoomer = load i64, i64* %bytes_zoomer.addr
  %nextArg5 = getelementptr i64, i64* %bytes_zoomer.addr, i64 1
  %decoder.addr = bitcast i64* %nextArg5 to %class.CAmbisonicBinauralizer**
  %decoder = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr
  %nextArg6 = getelementptr %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, i64 1
  %bytes_decoder.addr = bitcast %class.CAmbisonicBinauralizer** %nextArg6 to i64*
  %bytes_decoder = load i64, i64* %bytes_decoder.addr
  %nextArg7 = getelementptr i64, i64* %bytes_decoder.addr, i64 1
  %resultSample.addr = bitcast i64* %nextArg7 to float***
  %resultSample = load float**, float*** %resultSample.addr
  %nextArg8 = getelementptr float**, float*** %resultSample.addr, i64 1
  %bytes_resultSample.addr = bitcast float*** %nextArg8 to i64*
  %bytes_resultSample = load i64, i64* %bytes_resultSample.addr
  %nextArg9 = getelementptr i64, i64* %bytes_resultSample.addr, i64 1
  %nSample.addr = bitcast i64* %nextArg9 to i32*
  %nSample = load i32, i32* %nSample.addr
  %audioDecoding_cloned.11.output = call %emptyStruct.30 @audioDecoding_cloned.11(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float** %resultSample, i64 %bytes_resultSample, i32 %nSample)
  %audioDecoding_cloned.11.output.addr = bitcast i8* %data.addr to %emptyStruct.30*
  store %emptyStruct.30 %audioDecoding_cloned.11.output, %emptyStruct.30* %audioDecoding_cloned.11.output.addr
  ret i8* null
}

  %graphaudioDecoding_cloned = call i8* @llvm_hpvm_cpu_launch(i8* (i8*)* @LaunchDataflowGraph, i8* %call29)
  call void @llvm_hpvm_cpu_wait(i8* %graphaudioDecoding_cloned)

CLEARDFG PASS
Erasing Node (L) - audioDecoding_cloned
DONE
Erasing Node (L) - audioDecoding_cloned
DONE
Erasing Node (L) - rotator_fxp_cloned
DONE
Erasing Node (L) - zoomSet_fxp_cloned
DONE
Erasing Node (L) - zoomProcess_fxp_cloned
DONE
Erasing Node (L) - setAndFFT_fxp_cloned
DONE
Erasing Node (L) - FIR_left_fxp_cloned
DONE
Erasing Node (L) - FIR_right_fxp_cloned
DONE
Erasing Node (L) - IFFT_left_fxp_cloned
DONE
Erasing Node (L) - IFFT_right_fxp_cloned
DONE
Erasing Node (L) - overlap_left_fxp_cloned
DONE
Erasing Node (L) - overlap_right_fxp_cloned
DONE
Erasing Node (I) - audioDecoding_cloned
	Done - 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
	discovered a new reachable node %if.then.i11
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16
	discovered a new reachable node %if.else.i13
	discovered a new reachable node %if.then9.i15
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then9.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.body.epil
	discovered a new reachable node %for.body.lr.ph.new
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc9_crit_edge.us
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.body4.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.end9.i
	discovered a new reachable node %call12.i.noexc
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN21CAmbisonicEncoderDistD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.cond18.for.end_crit_edge.us.unr-lcssa
	discovered a new reachable node %for.cond18.for.end_crit_edge.us
	discovered a new reachable node %for.cond.for.end44_crit_edge
	discovered a new reachable node %for.body20.us.epil
	discovered a new reachable node %for.body20.us
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.else22
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.end13
	discovered a new reachable node %if.end17
	discovered a new reachable node %if.end34
	discovered a new reachable node %if.end41
	discovered a new reachable node %if.end68
	discovered a new reachable node %for.cond45.preheader
	discovered a new reachable node %delete.notnull66
	discovered a new reachable node %for.body48
	discovered a new reachable node %for.inc61
	discovered a new reachable node %for.cond.cleanup47
	discovered a new reachable node %delete.notnull58
	discovered a new reachable node %delete.notnull39
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.notnull32
	discovered a new reachable node %delete.notnull27
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.then11
	discovered a new reachable node %delete.notnull7
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup49
	discovered a new reachable node %for.body68
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i266
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit75.i
	discovered a new reachable node %.noexc
	discovered a new reachable node %invoke.cont72
	discovered a new reachable node %for.cond.cleanup67
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %invoke.cont79
	discovered a new reachable node %invoke.cont82
	discovered a new reachable node %for.cond90.preheader
	discovered a new reachable node %for.cond90.preheader.for.cond.cleanup93_crit_edge
	discovered a new reachable node %for.cond.cleanup93
	discovered a new reachable node %for.inc211
	discovered a new reachable node %for.cond.cleanup87
	discovered a new reachable node %invoke.cont.i284
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit286
	discovered a new reachable node %if.then.i.i.i285
	discovered a new reachable node %for.body.i.i.i.i276
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i280
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i277
	discovered a new reachable node %lpad209
	discovered a new reachable node %ehcleanup214
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.i
	discovered a new reachable node %for.body94.lr.ph
	discovered a new reachable node %for.body94.us
	discovered a new reachable node %for.inc185.us
	discovered a new reachable node %sw.bb141.us
	discovered a new reachable node %for.inc185.us.sink.split
	discovered a new reachable node %sw.bb155.us
	discovered a new reachable node %sw.bb169.us
	discovered a new reachable node %for.body94
	discovered a new reachable node %for.inc185
	discovered a new reachable node %sw.bb
	discovered a new reachable node %for.inc185.sink.split
	discovered a new reachable node %sw.bb112
	discovered a new reachable node %sw.bb126
	discovered a new reachable node %lpad76
	discovered a new reachable node %invoke.cont72.for.body68_crit_edge
	discovered a new reachable node %if.then.i64.i
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i.prol.loopexit
	discovered a new reachable node %invoke.cont8.i
	discovered a new reachable node %for.body.i.i.i70.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i74.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i71.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit.i.i
	discovered a new reachable node %call2.i.i.i.i.noexc
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then.i
	discovered a new reachable node %for.body50.for.body50_crit_edge
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end11
	discovered a new reachable node %if.end3
	discovered a new reachable node %if.end7
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup18
	discovered a new reachable node %for.cond.cleanup18.for.cond.cleanup73_crit_edge
	discovered a new reachable node %for.cond.cleanup73
	discovered a new reachable node %for.cond.cleanup73.for.cond.cleanup92_crit_edge
	discovered a new reachable node %for.cond.cleanup92
	discovered a new reachable node %for.body93.lr.ph
	discovered a new reachable node %for.body93.preheader
	discovered a new reachable node %for.body93
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body74.lr.ph
	discovered a new reachable node %for.body74.preheader
	discovered a new reachable node %for.body74
	discovered a new reachable node %vector.memcheck199
	discovered a new reachable node %vector.ph200
	discovered a new reachable node %middle.block187.unr-lcssa
	discovered a new reachable node %middle.block187
	discovered a new reachable node %vector.body186.epil
	discovered a new reachable node %vector.ph200.new
	discovered a new reachable node %vector.body186
	discovered a new reachable node %for.body19.lr.ph
	discovered a new reachable node %for.body19
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end34
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body24.us.preheader
	discovered a new reachable node %for.body24.us.preheader179
	discovered a new reachable node %for.body24.us.prol.loopexit
	discovered a new reachable node %if.end.us
	discovered a new reachable node %for.body24.us
	discovered a new reachable node %for.body24.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %for.body13.us.prol
	discovered a new reachable node %vector.memcheck149
	discovered a new reachable node %vector.ph150
	discovered a new reachable node %middle.block137.unr-lcssa
	discovered a new reachable node %middle.block137
	discovered a new reachable node %vector.body136.epil
	discovered a new reachable node %vector.body136
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %sw.default
	discovered a new reachable node %if.then.i.i.i1764
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
	discovered a new reachable node %if.then.i11.i.i1778
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783
	discovered a new reachable node %sw.epilog
	discovered a new reachable node %for.end1278
	discovered a new reachable node %for.body1270
	discovered a new reachable node %if.else.i13.i.i1780
	discovered a new reachable node %if.then9.i15.i.i1782
	discovered a new reachable node %if.else.i.i.i1766
	discovered a new reachable node %if.then9.i.i.i1768
	discovered a new reachable node %sw.bb
	discovered a new reachable node %arrayctor.cont.thread
	discovered a new reachable node %new.ctorloop
	discovered a new reachable node %arrayctor.loop
	discovered a new reachable node %arrayctor.cont
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.for.body_crit_edge
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb103
	discovered a new reachable node %sw.bb170
	discovered a new reachable node %sw.bb252
	discovered a new reachable node %for.body374.lr.ph
	discovered a new reachable node %for.body374
	discovered a new reachable node %for.body423.lr.ph
	discovered a new reachable node %for.body423
	discovered a new reachable node %for.body475.lr.ph
	discovered a new reachable node %for.body475
	discovered a new reachable node %for.body527.lr.ph
	discovered a new reachable node %for.body527
	discovered a new reachable node %for.body579.lr.ph
	discovered a new reachable node %for.body579
	discovered a new reachable node %for.body631.lr.ph
	discovered a new reachable node %for.body631
	discovered a new reachable node %sw.bb658
	discovered a new reachable node %for.end713
	discovered a new reachable node %for.body721.lr.ph
	discovered a new reachable node %for.body721
	discovered a new reachable node %for.body685.lr.ph
	discovered a new reachable node %for.body685
	discovered a new reachable node %sw.bb751
	discovered a new reachable node %sw.bb1087
	discovered a new reachable node %for.end1143
	discovered a new reachable node %for.body1151.lr.ph
	discovered a new reachable node %for.body1151
	discovered a new reachable node %for.body1115.lr.ph
	discovered a new reachable node %for.body1115
	discovered a new reachable node %sw.bb1181
	discovered a new reachable node %for.body1208.lr.ph
	discovered a new reachable node %for.body1208
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %arraydestroy.done3
	discovered a new reachable node %arraydestroy.body.preheader
	discovered a new reachable node %arraydestroy.body
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.us.i
	discovered a new reachable node %for.body24.us.preheader.i
	discovered a new reachable node %for.body24.us.i.preheader
	discovered a new reachable node %for.body24.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.i
	discovered a new reachable node %for.body24.us.i
	discovered a new reachable node %for.body24.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i.prol.loopexit
	discovered a new reachable node %if.end.us.loopexit112.i
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %for.body13.us.i.prol
	discovered a new reachable node %vector.memcheck47
	discovered a new reachable node %vector.ph48
	discovered a new reachable node %middle.block35.unr-lcssa
	discovered a new reachable node %middle.block35
	discovered a new reachable node %vector.body34.epil
	discovered a new reachable node %vector.body34
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit89
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit92
	discovered a new reachable node %for.cond34.preheader
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body38.lr.ph
	discovered a new reachable node %for.body38
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i104.preheader
	discovered a new reachable node %for.body.i104
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit105
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit116
	discovered a new reachable node %_ZN16CAmbisonicZoomer9factorialEj.exit142
	discovered a new reachable node %for.body.i141
	discovered a new reachable node %for.cond.cleanup.loopexit.i134
	discovered a new reachable node %for.body.i115
	discovered a new reachable node %for.cond.cleanup.loopexit.i108
	discovered a new reachable node %for.body.i94
	discovered a new reachable node %for.cond.cleanup.loopexit.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i91
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i88
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup.loopexit
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.preheader
	discovered a new reachable node %for.cond.cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.cond.cleanup12.epil
	discovered a new reachable node %for.cond2.preheader.preheader.new
	discovered a new reachable node %for.cond.cleanup12
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body13.us.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.preheader
	discovered a new reachable node %for.body13.us
	discovered a new reachable node %if.then.us
	discovered a new reachable node %for.inc52.us
	discovered a new reachable node %for.cond.cleanup12.us
	discovered a new reachable node %if.else.us
	discovered a new reachable node %for.body5.us.epil
	discovered a new reachable node %for.body5.us
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i.i.i.i
	discovered a new reachable node %if.then4.i.i.i.i
	discovered a new reachable node %if.end6.i.i.i.i
	discovered a new reachable node %if.end.i.i.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond327.preheader_crit_edge
	discovered a new reachable node %for.cond327.preheader
	discovered a new reachable node %for.cond327.preheader.for.end338_crit_edge
	discovered a new reachable node %for.end338
	discovered a new reachable node %for.end338.for.end362_crit_edge
	discovered a new reachable node %for.end362
	discovered a new reachable node %for.end362.for.cond327.preheader.1_crit_edge
	discovered a new reachable node %for.cond327.preheader.1
	discovered a new reachable node %for.cond327.preheader.1.for.end338.1_crit_edge
	discovered a new reachable node %for.end338.1
	discovered a new reachable node %for.end338.1.for.end362.1_crit_edge
	discovered a new reachable node %for.end362.1
	discovered a new reachable node %for.body349.lr.ph.1
	discovered a new reachable node %for.body349.1.preheader
	discovered a new reachable node %for.body349.1
	discovered a new reachable node %for.end362.loopexit.1
	discovered a new reachable node %vector.memcheck696
	discovered a new reachable node %vector.ph697
	discovered a new reachable node %middle.block684.unr-lcssa
	discovered a new reachable node %middle.block684
	discovered a new reachable node %vector.body683.epil
	discovered a new reachable node %vector.ph697.new
	discovered a new reachable node %vector.body683
	discovered a new reachable node %for.body330.lr.ph.1
	discovered a new reachable node %for.body330.1.preheader
	discovered a new reachable node %for.body330.1
	discovered a new reachable node %vector.memcheck669
	discovered a new reachable node %vector.ph670
	discovered a new reachable node %middle.block655.unr-lcssa
	discovered a new reachable node %middle.block655
	discovered a new reachable node %vector.body654.epil
	discovered a new reachable node %vector.ph670.new
	discovered a new reachable node %vector.body654
	discovered a new reachable node %for.body214.lr.ph.1
	discovered a new reachable node %for.body214.1
	discovered a new reachable node %for.end303.1
	discovered a new reachable node %for.inc324.1
	discovered a new reachable node %for.body313.lr.ph.1
	discovered a new reachable node %for.body313.1.preheader
	discovered a new reachable node %for.body313.1
	discovered a new reachable node %vector.memcheck638
	discovered a new reachable node %vector.ph639
	discovered a new reachable node %middle.block626.unr-lcssa
	discovered a new reachable node %middle.block626
	discovered a new reachable node %vector.body625.epil
	discovered a new reachable node %vector.ph639.new
	discovered a new reachable node %vector.body625
	discovered a new reachable node %for.body241.lr.ph.1
	discovered a new reachable node %for.body241.1
	discovered a new reachable node %for.body349.lr.ph
	discovered a new reachable node %for.body349.preheader
	discovered a new reachable node %for.body349
	discovered a new reachable node %for.end362.loopexit
	discovered a new reachable node %vector.memcheck609
	discovered a new reachable node %vector.ph610
	discovered a new reachable node %middle.block597.unr-lcssa
	discovered a new reachable node %middle.block597
	discovered a new reachable node %vector.body596.epil
	discovered a new reachable node %vector.ph610.new
	discovered a new reachable node %vector.body596
	discovered a new reachable node %for.body330.lr.ph
	discovered a new reachable node %for.body330.preheader
	discovered a new reachable node %for.body330
	discovered a new reachable node %vector.memcheck582
	discovered a new reachable node %vector.ph583
	discovered a new reachable node %middle.block570.unr-lcssa
	discovered a new reachable node %middle.block570
	discovered a new reachable node %vector.body569.epil
	discovered a new reachable node %vector.ph583.new
	discovered a new reachable node %vector.body569
	discovered a new reachable node %for.body214.lr.ph
	discovered a new reachable node %for.body214
	discovered a new reachable node %for.end303
	discovered a new reachable node %for.inc324
	discovered a new reachable node %for.body313.lr.ph
	discovered a new reachable node %for.body313.preheader
	discovered a new reachable node %for.body313
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %for.body241.lr.ph
	discovered a new reachable node %for.body241
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i48
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit
	discovered a new reachable node %if.end.i
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZN17CAmbisonicDecoder7RefreshEv.exit
	discovered a new reachable node %for.body.lr.ph.i
	discovered a new reachable node %for.body.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i51
	discovered a new reachable node %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit53
	discovered a new reachable node %if.end.i44
	discovered a new reachable node %if.then.i40
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %if.then.i46
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
	discovered a new reachable node %if.then.i57
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
	discovered a new reachable node %if.then.i68
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
	discovered a new reachable node %if.then.i79
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
	discovered a new reachable node %if.then.i99
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit
	discovered a new reachable node %for.cond.cleanup19
	discovered a new reachable node %if.then.i99.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm.exit.1
	discovered a new reachable node %for.cond.cleanup19.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %for.body20.lr.ph.1
	discovered a new reachable node %for.body20.1
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106.1
	discovered a new reachable node %if.else.i101.1
	discovered a new reachable node %if.then5.i103.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i.1
	discovered a new reachable node %for.body.i.i.i.i.i.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i.1
	discovered a new reachable node %for.body20.lr.ph
	discovered a new reachable node %for.body20
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit107
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i106
	discovered a new reachable node %if.else.i101
	discovered a new reachable node %if.then5.i103
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_.exit.i
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.i
	discovered a new reachable node %if.then.i90
	discovered a new reachable node %terminate.lpad.i91
	discovered a new reachable node %if.then.i86
	discovered a new reachable node %terminate.lpad.i
	discovered a new reachable node %if.else.i81
	discovered a new reachable node %if.then5.i83
	discovered a new reachable node %if.else.i70
	discovered a new reachable node %if.then5.i72
	discovered a new reachable node %if.else.i59
	discovered a new reachable node %if.then5.i61
	discovered a new reachable node %if.else.i48
	discovered a new reachable node %if.then5.i50
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.then.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont27
	discovered a new reachable node %eh.resume
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %call5.i.i.i9.i.noexc
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i.i
	discovered a new reachable node %invoke.cont8.i.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
	discovered a new reachable node %call5.i.i.i9.i.noexc79
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	discovered a new reachable node %if.else.i115
	discovered a new reachable node %invoke.cont.i.i129
	discovered a new reachable node %invoke.cont8.i.i134
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137
	discovered a new reachable node %if.end.sink.split
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then.i63.i.i135
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i130
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122
	discovered a new reachable node %if.then.i104
	discovered a new reachable node %if.then.i.i85
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %if.then.i.i147
	discovered a new reachable node %lpad9
	discovered a new reachable node %if.then.i63.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.then.i.i65
	discovered a new reachable node %lpad2
	discovered a new reachable node %if.then.i.i142
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %call5.i.i.i9.i.noexc161
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	discovered a new reachable node %if.else.i197
	discovered a new reachable node %invoke.cont.i.i211
	discovered a new reachable node %invoke.cont8.i.i216
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
	discovered a new reachable node %if.then.i63.i.i217
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i212
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204
	discovered a new reachable node %if.then.i186
	discovered a new reachable node %if.then.i.i167
	discovered a new reachable node %lpad31
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.then9
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end17
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull24
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %delete.notnull21
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i41
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit43
	discovered a new reachable node %if.then.i.i.i.i42
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i38
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body.i
	discovered a new reachable node %_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv.exit
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.else
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body4.us.i.preheader
	discovered a new reachable node %for.body4.us.i.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us.i
	discovered a new reachable node %for.body4.us.i
	discovered a new reachable node %for.body4.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %if.end3.i
	discovered a new reachable node %if.end7.i
	discovered a new reachable node %if.then10.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	discovered a new reachable node %return
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont13
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %invoke.cont22
	discovered a new reachable node %invoke.cont27
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull83
	discovered a new reachable node %delete.notnull80
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %lpad21
	discovered a new reachable node %ehcleanup94
	discovered a new reachable node %ehcleanup95
	discovered a new reachable node %lpad12
	discovered a new reachable node %lpad10
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad7
	discovered a new reachable node %if.then.i.i194
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit5
	discovered a new reachable node %if.then.i.i.i4
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
	discovered a new reachable node %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i8
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i4
	discovered a new reachable node %_ZNKSt14default_deleteIA_fEclEPf.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.1
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit12
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit16
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit20
	discovered a new reachable node %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit
	discovered a new reachable node %invoke.cont.i.1
	discovered a new reachable node %_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit.1
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit
	discovered a new reachable node %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev.exit30
	discovered a new reachable node %_ZN17CAmbisonicDecoderD2Ev.exit
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %arraydestroy.done3.i
	discovered a new reachable node %arraydestroy.body.preheader.i
	discovered a new reachable node %arraydestroy.body.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN17CAmbisonicSpeakerD2Ev.exit.i
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %if.then.i28
	discovered a new reachable node %lpad.i29
	discovered a new reachable node %if.then.i
	discovered a new reachable node %lpad.i
	discovered a new reachable node %if.then.i.i.i22.1
	discovered a new reachable node %for.body.i.i.i.i.1
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i.1
	discovered a new reachable node %invoke.cont.loopexit.i.1
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i.1
	discovered a new reachable node %if.then.i.i.i22
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i.i
	discovered a new reachable node %invoke.cont.loopexit.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
	discovered a new reachable node %if.then.i.i.i19
	discovered a new reachable node %if.then.i.i.i15
	discovered a new reachable node %if.then.i.i.i11
	discovered a new reachable node %if.then.i.i.i.1
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then.i169
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148
	discovered a new reachable node %if.then.i147
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i154
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i161
	discovered a new reachable node %vector.ph266
	discovered a new reachable node %middle.block263.unr-lcssa
	discovered a new reachable node %middle.block263
	discovered a new reachable node %vector.body262.epil
	discovered a new reachable node %vector.ph266.new
	discovered a new reachable node %vector.body262
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
	discovered a new reachable node %for.body.i.i196.preheader
	discovered a new reachable node %for.body.i.i196.preheader287
	discovered a new reachable node %for.body.i.i196
	discovered a new reachable node %vector.ph248
	discovered a new reachable node %middle.block245.unr-lcssa
	discovered a new reachable node %middle.block245
	discovered a new reachable node %vector.body244.epil
	discovered a new reachable node %vector.ph248.new
	discovered a new reachable node %vector.body244
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else
	discovered a new reachable node %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
	discovered a new reachable node %for.body.i.i.preheader
	discovered a new reachable node %for.body.i.i.preheader288
	discovered a new reachable node %for.body.i.i
	discovered a new reachable node %vector.ph230
	discovered a new reachable node %middle.block225.unr-lcssa
	discovered a new reachable node %middle.block225
	discovered a new reachable node %vector.body224.epil
	discovered a new reachable node %vector.ph230.new
	discovered a new reachable node %vector.body224
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i179
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader290
	discovered a new reachable node %for.body.i.i.i.i.i189
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i73
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87
	discovered a new reachable node %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit77
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i76
	discovered a new reachable node %for.body.i.i.i82
	discovered a new reachable node %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i86
	discovered a new reachable node %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit87thread-pre-split
	discovered a new reachable node %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i83
	discovered a new reachable node %for.body.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.prol.loopexit
	discovered a new reachable node %for.body.i.i.i.i
	discovered a new reachable node %for.body.i.i.i.i.prol
	discovered a new reachable node %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj.exit
	discovered a new reachable node %if.end3.i
	discovered a new reachable node %if.end7.i
	discovered a new reachable node %if.then10.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body13.us.i.preheader.unr-lcssa
	discovered a new reachable node %for.body13.us.i.preheader
	discovered a new reachable node %for.body13.us.i
	discovered a new reachable node %if.then.us.i
	discovered a new reachable node %for.inc52.us.i
	discovered a new reachable node %for.cond.cleanup12.us.i
	discovered a new reachable node %if.else.us.i
	discovered a new reachable node %for.body5.us.i.epil
	discovered a new reachable node %for.body5.us.i
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3.loopexit
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3.loopexit
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup.for.cond.cleanup8_crit_edge
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body9.lr.ph
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.cond.cleanup8.loopexit
	discovered a new reachable node %vector.memcheck86
	discovered a new reachable node %vector.ph87
	discovered a new reachable node %middle.block74.unr-lcssa
	discovered a new reachable node %middle.block74
	discovered a new reachable node %vector.body73.epil
	discovered a new reachable node %vector.ph87.new
	discovered a new reachable node %vector.body73
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %getHPVMPtrArgs
	discovered a new reachable node %entry
	discovered a new reachable node %entry.for.cond.cleanup_crit_edge
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body9.lr.ph
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.cond.cleanup8.loopexit
	discovered a new reachable node %vector.memcheck81
	discovered a new reachable node %vector.ph82
	discovered a new reachable node %middle.block69.unr-lcssa
	discovered a new reachable node %middle.block69
	discovered a new reachable node %vector.body68.epil
	discovered a new reachable node %vector.ph82.new
	discovered a new reachable node %vector.body68
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
make: *** No rule to make target 'build/seq/AmbisonicCommons.ll', needed by 'build/seq/audioEncoding-seq.linked.ll'.  Stop.
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/audioDecodingNoPara[00m$ exit
exit

Script done on Sun 25 Oct 2020 01:11:38 AM CDT
