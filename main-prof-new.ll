; ModuleID = 'src/main.cpp'
source_filename = "src/main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.PolarPoint = type { float, float, float }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.MIT_HRTF = type { %class.HRTF }
%class.HRTF = type { i32 (...)**, i32, i32 }
%class.CAmbisonicSource = type { %class.CAmbisonicBase.base, %"class.std::vector.0", %"class.std::vector.0", %struct.PolarPoint, float }
%class.CAmbisonicBase.base = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8 }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" = type { float*, float*, float* }
%class.CBFormat = type { %class.CAmbisonicBase.base, i32, i32, %"class.std::vector.0", %"class.std::unique_ptr" }
%"class.std::unique_ptr" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.6" }
%"struct.std::_Head_base.6" = type { float** }
%class.CAmbisonicEncoder = type { %class.CAmbisonicSource }
%class.CAmbisonicEncoderDist = type { %class.CAmbisonicEncoder, i32, float, i32, i32, float*, i32, i32, i32, float, float, float }
%class.CAmbisonicProcessor = type { %class.CAmbisonicBase.base, %class.Orientation, float*, %struct.kiss_fftr_state*, %struct.kiss_fftr_state*, float*, float**, i32, i32, i32, i32, i32, float, %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.Orientation = type { float, float, float, float, float, float }
%struct.kiss_fftr_state = type opaque
%struct.kiss_fft_cpx = type { float, float }
%class.CAmbisonicSpeaker = type { %class.CAmbisonicSource }
%class.CAmbisonicDecoder = type { %class.CAmbisonicBase.base, i32, i32, %class.CAmbisonicSpeaker* }
%class.CAmbisonicZoomer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", float, float, float, float }
%"class.std::unique_ptr.12" = type { %"class.std::tuple.13" }
%"class.std::tuple.13" = type { %"struct.std::_Tuple_impl.14" }
%"struct.std::_Tuple_impl.14" = type { %"struct.std::_Head_base.19" }
%"struct.std::_Head_base.19" = type { float* }
%class.CAmbisonicBinauralizer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, i32, i32, i32, i32, float, i32, %"class.std::unique_ptr.20", %"class.std::unique_ptr.20", [2 x %"class.std::vector.26"], %"class.std::unique_ptr.31", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", [2 x %"class.std::vector.0"] }
%"class.std::unique_ptr.20" = type { %"class.std::tuple.21" }
%"class.std::tuple.21" = type { %"struct.std::_Tuple_impl.22" }
%"struct.std::_Tuple_impl.22" = type { %"struct.std::_Tuple_impl.23", %"struct.std::_Head_base.25" }
%"struct.std::_Tuple_impl.23" = type { %"struct.std::_Head_base.24" }
%"struct.std::_Head_base.24" = type { void (i8*)* }
%"struct.std::_Head_base.25" = type { %struct.kiss_fftr_state* }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"* }
%"class.std::unique_ptr.31" = type { %"class.std::tuple.32" }
%"class.std::tuple.32" = type { %"struct.std::_Tuple_impl.33" }
%"struct.std::_Tuple_impl.33" = type { %"struct.std::_Head_base.38" }
%"struct.std::_Head_base.38" = type { %struct.kiss_fft_cpx* }
%"class.ILLIXR_AUDIO::Sound" = type { %"class.std::basic_fstream"*, [1024 x float], %class.CBFormat*, %class.CAmbisonicEncoderDist*, %struct.PolarPoint, float }
%"class.std::basic_fstream" = type { %"class.std::basic_iostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon.42 }
%union.anon.42 = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.ILLIXR_AUDIO::ABAudio" = type { i32, %"class.std::vector.43"*, %"class.std::basic_ofstream"*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicProcessor*, %class.CAmbisonicZoomer* }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" = type { %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl" }
%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl" = type { i16*, i16*, i16* }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%class.CAmbisonicBase = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.__gnu_cxx::__normal_iterator.48" = type { float* }
%"class.__gnu_cxx::__normal_iterator" = type { float* }
%"struct.std::default_delete" = type { i8 }
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"* }
%"class.std::allocator.9" = type { i8 }
%"struct.std::default_delete.17" = type { i8 }
%"struct.std::default_delete.36" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::allocator.39" = type { i8 }
%"struct.ILLIXR_AUDIO::WAVHeader_t" = type { i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, i32 }
%"class.std::allocator.45" = type { i8 }
%struct.RootArg = type <{ %class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i32, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64 }>
%"struct.std::_Tuple_impl.5" = type { i8 }
%"struct.std::_Head_base" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"struct.std::_Tuple_impl.15" = type { i8 }
%"struct.std::_Head_base.16" = type { i8 }
%"struct.std::_Tuple_impl.34" = type { i8 }
%"struct.std::_Head_base.35" = type { i8 }
%"class.std::allocator.28" = type { i8 }
%"class.__gnu_cxx::new_allocator.29" = type { i8 }
%"class.std::move_iterator" = type { float* }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"class.std::move_iterator.49" = type { %"class.std::unique_ptr.12"* }
%"class.std::move_iterator.50" = type { %"class.std::unique_ptr.31"* }
%"class.__gnu_cxx::new_allocator.46" = type { i8 }
%"class.std::move_iterator.51" = type { %"class.ILLIXR_AUDIO::Sound"** }

$_ZN4HRTFC2Ej = comdat any

$_ZNSaIsEC2Ev = comdat any

$_ZNSt6vectorIsSaIsEEC2EmRKS0_ = comdat any

$_ZNSaIsED2Ev = comdat any

$_ZNSt6vectorIsSaIsEED2Ev = comdat any

$_ZNSt6vectorIsSaIsEE4dataEv = comdat any

$_ZNSt6vectorIsSaIsEEixEm = comdat any

$_ZNSt6vectorIfSaIfEEC2Ev = comdat any

$_ZNSt6vectorIfSaIfEE6resizeEmRKf = comdat any

$_ZNSt6vectorIfSaIfEEixEm = comdat any

$_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EEC2Ev = comdat any

$_ZNSt6vectorIfSaIfEE6resizeEm = comdat any

$_ZNSt6vectorIfSaIfEE4dataEv = comdat any

$_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_ = comdat any

$_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm = comdat any

$_ZNKSt6vectorIfSaIfEE4dataEv = comdat any

$_ZN11OrientationC2Efff = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_ = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm = comdat any

$_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm = comdat any

$_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EE3getEv = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2Ev = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf = comdat any

$_ZSt3minIfERKT_S2_S2_ = comdat any

$_ZSt3absf = comdat any

$_ZSt4fabsf = comdat any

$_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEEC2EPS0_OS3_ = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2Ev = comdat any

$_ZN4HRTF10getHRTFLenEv = comdat any

$_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm = comdat any

$_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv = comdat any

$_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm = comdat any

$_ZN4HRTF8isLoadedEv = comdat any

$_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_ = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_ = comdat any

$__clang_call_terminate = comdat any

$_ZStorSt13_Ios_OpenmodeS_ = comdat any

$_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev = comdat any

$_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm = comdat any

$_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_ = comdat any

$_ZN8CBFormatD2Ev = comdat any

$_ZSt3maxIfERKT_S2_S2_ = comdat any

$_ZN12ILLIXR_AUDIO11WAVHeader_tC2Ev = comdat any

$_ZN8MIT_HRTFD2Ev = comdat any

$_ZN8MIT_HRTFD0Ev = comdat any

$_ZN14CAmbisonicBaseD2Ev = comdat any

$_ZN14CAmbisonicBaseD0Ev = comdat any

$_ZN16CAmbisonicSourceD2Ev = comdat any

$_ZN16CAmbisonicSourceD0Ev = comdat any

$_ZN8CBFormatD0Ev = comdat any

$_ZN16CAmbisonicZoomerD2Ev = comdat any

$_ZN16CAmbisonicZoomerD0Ev = comdat any

$_ZN22CAmbisonicBinauralizerD2Ev = comdat any

$_ZN22CAmbisonicBinauralizerD0Ev = comdat any

$_ZN4HRTFD2Ev = comdat any

$_ZN4HRTFD0Ev = comdat any

$_ZNSt5tupleIJPPfSt14default_deleteIA_S0_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPPfLb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EEC2Ev = comdat any

$_ZNSt6vectorIfSaIfEED2Ev = comdat any

$_ZSt8_DestroyIPffEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIfSaIfEED2Ev = comdat any

$_ZSt8_DestroyIPfEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm = comdat any

$_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfm = comdat any

$_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm = comdat any

$_ZNSaIfED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIfED2Ev = comdat any

$_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EPfLb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2Ev = comdat any

$_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2Ev = comdat any

$_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2Ev = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2Ev = comdat any

$_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev = comdat any

$_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNKSt14default_deleteIA_PfEclEPS0_ = comdat any

$_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERS2_ = comdat any

$_ZSt3getILm1EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIA_PfEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EE7_M_headERS4_ = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev = comdat any

$_ZSt3getILm0EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_ = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE11get_deleterEv = comdat any

$_ZNKSt14default_deleteIA_fEclEPf = comdat any

$_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERS1_ = comdat any

$_ZSt3getILm1EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIA_fEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEE7_M_headERS3_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EE7_M_headERS3_ = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev = comdat any

$_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev = comdat any

$_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE11get_deleterEv = comdat any

$_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_ = comdat any

$_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERS2_ = comdat any

$_ZSt3getILm1EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1ESt14default_deleteIA_12kiss_fft_cpxEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEE7_M_headERS4_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EE7_M_headERS4_ = comdat any

$_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev = comdat any

$_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEEEvT_S9_ = comdat any

$_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_ = comdat any

$_ZSt11__addressofISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEPT_RS6_ = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE10deallocateEPS6_m = comdat any

$_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEED2Ev = comdat any

$_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE11get_deleterEv = comdat any

$_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERS5_ = comdat any

$_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERS2_ = comdat any

$_ZSt3getILm1EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ = comdat any

$_ZSt12__get_helperILm1EPFvPvEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm1EJPFvPvEEE7_M_headERS3_ = comdat any

$_ZNSt10_Head_baseILm1EPFvPvELb0EE7_M_headERS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIsEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIsED2Ev = comdat any

$_ZNSt12_Vector_baseIsSaIsEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIsSaIsEE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIsSaIsEED2Ev = comdat any

$_ZNSt12_Vector_baseIsSaIsEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIsSaIsEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIsSaIsEE12_Vector_implD2Ev = comdat any

$_ZNSaIsEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIsEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIsSaIsEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIsEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIsE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIsE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPsmsET_S1_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIsSaIsEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPsmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPsmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPsmsET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPsmsEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPsENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPsLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIsSaIsEE13_M_deallocateEPsm = comdat any

$_ZNSt16allocator_traitsISaIsEE10deallocateERS0_Psm = comdat any

$_ZN9__gnu_cxx13new_allocatorIsE10deallocateEPsm = comdat any

$_ZSt8_DestroyIPssEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPsEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPsEEvT_S3_ = comdat any

$_ZNKSt6vectorIsSaIsEE11_M_data_ptrIsEEPT_S4_ = comdat any

$_ZNSt12_Vector_baseIfSaIfEEC2Ev = comdat any

$_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2Ev = comdat any

$_ZNSaIfEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIfEC2Ev = comdat any

$_ZNKSt6vectorIfSaIfEE4sizeEv = comdat any

$_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EEmRS4_ = comdat any

$_ZNSt6vectorIfSaIfEE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2IPfEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE = comdat any

$_ZNSt6vectorIfSaIfEE15_M_erase_at_endEPf = comdat any

$_ZN9__gnu_cxxmiIPKfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZNKSt6vectorIfSaIfEE6cbeginEv = comdat any

$_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf = comdat any

$_ZNSt6vectorIfSaIfEE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxxmiIPfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13move_backwardIPfS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv = comdat any

$_ZSt4fillIPffEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPfES1_fET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPfESt13move_iteratorIT_ES2_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPfES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPfES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPfES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPfEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPfELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPfE4baseEv = comdat any

$_ZNSt13move_iteratorIPfEC2ES0_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPfENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPfS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIfEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPfmfET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIfSaIfEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIfEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIfEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPfSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEC2ERKS1_ = comdat any

$_ZNSt6vectorIfSaIfEE17_M_default_appendEm = comdat any

$_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPfmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPfmEET_S3_T0_ = comdat any

$_ZNKSt6vectorIfSaIfEE11_M_data_ptrIfEEPT_S4_ = comdat any

$_ZSt4swapIPPfEvRT_S3_ = comdat any

$_ZSt4moveIRPPfEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EE3getEv = comdat any

$_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ = comdat any

$_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERKS5_ = comdat any

$_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERKS2_ = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEEC2Ev = comdat any

$_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_fSt14default_deleteIS3_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_ = comdat any

$_ZSt11__addressofISt10unique_ptrIA_fSt14default_deleteIS1_EEEPT_RS5_ = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE10deallocateEPS5_m = comdat any

$_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEED2Ev = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE9constructIS4_JPfEEEvRS5_PT_DpOT0_ = comdat any

$_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE9constructIS5_JPfEEEvPT_DpOT0_ = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EPf = comdat any

$_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IRS0_S3_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPfEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IRS0_JS3_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2IS2_EEOT_ = comdat any

$_ZNSt10_Head_baseILm0EPfLb0EEC2IRS0_EEOT_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2IS2_EEOT_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_fSt14default_deleteIS1_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE7destroyIS4_EEvRS5_PT_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8max_sizeERKS5_ = comdat any

$_ZNKSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_S5_ET0_T_S9_S8_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EESt13move_iteratorIS5_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_ET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS4_EEES8_EET0_T_SB_SA_ = comdat any

$_ZStneIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZSt10_ConstructISt10unique_ptrIA_fSt14default_deleteIS1_EEJS4_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEppEv = comdat any

$_ZSteqIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEE4baseEv = comdat any

$_ZSt7forwardISt10unique_ptrIA_fSt14default_deleteIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EOS3_ = comdat any

$_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE7releaseEv = comdat any

$_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IS0_S3_vEEOT_OT0_ = comdat any

$_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IS0_JS3_EvEEOT_DpOT0_ = comdat any

$_ZNSt10_Head_baseILm0EPfLb0EEC2IS0_EEOT_ = comdat any

$_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEC2ES5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE7destroyIS5_EEvPT_ = comdat any

$_ZSt3getILm0EJPfSt14default_deleteIA_fEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_ = comdat any

$_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERKT0_RKSt11_Tuple_implIXT_EJS4_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERKS4_ = comdat any

$_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERKS1_ = comdat any

$_ZSt4swapIPfEvRT_S2_ = comdat any

$_ZSt4moveIRPfEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRPFvPvEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5tupleIJP15kiss_fftr_statePFvPvEEEC2IS1_S4_vEEOT_OT0_ = comdat any

$_ZSt7forwardIP15kiss_fftr_stateEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEEC2IS1_JS4_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJPFvPvEEEC2IS2_EEOT_ = comdat any

$_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EEC2IS1_EEOT_ = comdat any

$_ZNSt10_Head_baseILm1EPFvPvELb0EEC2IS2_EEOT_ = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEEC2Ev = comdat any

$_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ = comdat any

$_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERKS5_ = comdat any

$_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERKS2_ = comdat any

$_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ = comdat any

$_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE = comdat any

$_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERKS5_ = comdat any

$_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERKS2_ = comdat any

$_ZSt4swapIP15kiss_fftr_stateEvRT_S3_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS5_EEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEppEv = comdat any

$_ZSteqIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEE4baseEv = comdat any

$_ZSt7forwardISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2EOS4_ = comdat any

$_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE7releaseEv = comdat any

$_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_S4_vEEOT_OT0_ = comdat any

$_ZSt7forwardIP12kiss_fft_cpxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_JS4_EvEEOT_DpOT0_ = comdat any

$_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2IS3_EEOT_ = comdat any

$_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2IS1_EEOT_ = comdat any

$_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2IS3_EEOT_ = comdat any

$_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEC2ES6_ = comdat any

$_ZSt4swapIP12kiss_fft_cpxEvRT_S3_ = comdat any

$_ZSt4moveIRP12kiss_fft_cpxEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIPN12ILLIXR_AUDIO5SoundEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEEC2Ev = comdat any

$_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKPN12ILLIXR_AUDIO5SoundEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPPN12ILLIXR_AUDIO5SoundES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPPN12ILLIXR_AUDIO5SoundESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_ = comdat any

$_ZSt14__copy_move_a2ILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt13__copy_move_aILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPPN12ILLIXR_AUDIO5SoundEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN12ILLIXR_AUDIO5SoundEEEPT_PKS6_S9_S7_ = comdat any

$_ZNSt10_Iter_baseIPPN12ILLIXR_AUDIO5SoundELb0EE7_S_baseES3_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEELb1EE7_S_baseES5_ = comdat any

$_ZNKSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEE4baseEv = comdat any

$_ZNSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE7destroyIS3_EEvPT_ = comdat any

$_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPPN12ILLIXR_AUDIO5SoundEEEvT_S6_ = comdat any

$_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE10deallocateEPS3_m = comdat any

$_ZTS4HRTF = comdat any

$_ZTI4HRTF = comdat any

$_ZTV4HRTF = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV8MIT_HRTF = dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MIT_HRTF to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD2Ev to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD0Ev to i8*), i8* bitcast (i1 (%class.MIT_HRTF*, float, float, float**)* @_ZN8MIT_HRTF3getEffPPf to i8*)] }, align 8
@_ZTV14CAmbisonicBase = dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV16CAmbisonicSource = dso_local unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSource*, i32, i1, i32)* @_ZN16CAmbisonicSource9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV8CBFormat = dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8CBFormat to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD2Ev to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD0Ev to i8*), i8* bitcast (i1 (%class.CBFormat*, i32, i1, i32)* @_ZN8CBFormat9ConfigureEjbj to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat5ResetEv to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat7RefreshEv to i8*)] }, align 8
@_ZTV17CAmbisonicEncoder = dso_local unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD1Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoder*, i32, i1, i32)* @_ZN17CAmbisonicEncoder9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoder7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV21CAmbisonicEncoderDist = dso_local unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI21CAmbisonicEncoderDist to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD1Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)* @_ZN21CAmbisonicEncoderDist9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV19CAmbisonicProcessor = dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19CAmbisonicProcessor to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD1Ev to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor7RefreshEv to i8*)] }, align 8
@_ZL14first_order_3D = internal constant [2 x [101 x i16]] [[101 x i16] [i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -10, i16 -13, i16 -17, i16 -21, i16 -25, i16 -30, i16 -35, i16 -41, i16 -47, i16 -54, i16 -60, i16 -67, i16 -75, i16 -82, i16 -90, i16 -97, i16 -105, i16 -113, i16 -120, i16 -127, i16 -134, i16 -141, i16 -147, i16 -153, i16 -158, i16 -163, i16 -167, i16 -170, i16 -173, i16 -175, i16 -176, i16 23040, i16 -176, i16 -175, i16 -173, i16 -170, i16 -167, i16 -163, i16 -158, i16 -153, i16 -147, i16 -141, i16 -134, i16 -127, i16 -120, i16 -113, i16 -105, i16 -97, i16 -90, i16 -82, i16 -75, i16 -67, i16 -60, i16 -54, i16 -47, i16 -41, i16 -35, i16 -30, i16 -25, i16 -21, i16 -17, i16 -13, i16 -10, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 5, i16 7, i16 9, i16 11, i16 14, i16 16, i16 19, i16 23, i16 26, i16 30, i16 34, i16 38, i16 42, i16 46, i16 51, i16 55, i16 60, i16 64, i16 68, i16 73, i16 77, i16 80, i16 84, i16 87, i16 90, i16 93, i16 95, i16 97, i16 99, i16 100, i16 101, i16 13438, i16 101, i16 100, i16 99, i16 97, i16 95, i16 93, i16 90, i16 87, i16 84, i16 80, i16 77, i16 73, i16 68, i16 64, i16 60, i16 55, i16 51, i16 46, i16 42, i16 38, i16 34, i16 30, i16 26, i16 23, i16 19, i16 16, i16 14, i16 11, i16 9, i16 7, i16 5, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_3D = internal constant [3 x [101 x i16]] [[101 x i16] [i16 -5, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -5, i16 -3, i16 -1, i16 2, i16 6, i16 10, i16 15, i16 21, i16 26, i16 32, i16 38, i16 44, i16 49, i16 53, i16 55, i16 56, i16 54, i16 50, i16 42, i16 32, i16 19, i16 2, i16 -19, i16 -43, i16 -70, i16 -100, i16 -133, i16 -167, i16 -203, i16 -241, i16 -278, i16 -315, i16 -350, i16 -384, i16 -414, i16 -442, i16 -465, i16 -484, i16 -497, i16 -506, i16 25438, i16 -506, i16 -497, i16 -484, i16 -465, i16 -442, i16 -414, i16 -384, i16 -350, i16 -315, i16 -278, i16 -241, i16 -203, i16 -167, i16 -133, i16 -100, i16 -70, i16 -43, i16 -19, i16 2, i16 19, i16 32, i16 42, i16 50, i16 54, i16 56, i16 55, i16 53, i16 49, i16 44, i16 38, i16 32, i16 26, i16 21, i16 15, i16 10, i16 6, i16 2, i16 -1, i16 -3, i16 -5, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -5], [101 x i16] [i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2, i16 -1, i16 0, i16 2, i16 4, i16 6, i16 8, i16 10, i16 12, i16 15, i16 17, i16 19, i16 20, i16 21, i16 21, i16 21, i16 19, i16 16, i16 12, i16 7, i16 0, i16 -8, i16 -17, i16 -27, i16 -39, i16 -52, i16 -65, i16 -79, i16 -94, i16 -108, i16 -123, i16 -136, i16 -149, i16 -161, i16 -172, i16 -181, i16 -188, i16 -194, i16 -197, i16 19884, i16 -197, i16 -194, i16 -188, i16 -181, i16 -172, i16 -161, i16 -149, i16 -136, i16 -123, i16 -108, i16 -94, i16 -79, i16 -65, i16 -52, i16 -39, i16 -27, i16 -17, i16 -8, i16 0, i16 7, i16 12, i16 16, i16 19, i16 21, i16 21, i16 21, i16 20, i16 19, i16 17, i16 15, i16 12, i16 10, i16 8, i16 6, i16 4, i16 2, i16 0, i16 -1, i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2], [101 x i16] [i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -14, i16 -17, i16 -21, i16 -25, i16 -28, i16 -31, i16 -34, i16 -35, i16 -36, i16 -35, i16 -32, i16 -27, i16 -21, i16 -12, i16 -2, i16 11, i16 26, i16 43, i16 62, i16 82, i16 104, i16 127, i16 150, i16 173, i16 196, i16 219, i16 240, i16 259, i16 276, i16 290, i16 302, i16 311, i16 316, i16 10659, i16 316, i16 311, i16 302, i16 290, i16 276, i16 259, i16 240, i16 219, i16 196, i16 173, i16 150, i16 127, i16 104, i16 82, i16 62, i16 43, i16 26, i16 11, i16 -2, i16 -12, i16 -21, i16 -27, i16 -32, i16 -35, i16 -36, i16 -35, i16 -34, i16 -31, i16 -28, i16 -25, i16 -21, i16 -17, i16 -14, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2]], align 16
@_ZL14first_order_2D = internal constant [2 x [101 x i16]] [[101 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -7, i16 -9, i16 -10, i16 -13, i16 -15, i16 -18, i16 -21, i16 -24, i16 -27, i16 -30, i16 -34, i16 -37, i16 -41, i16 -45, i16 -49, i16 -52, i16 -56, i16 -60, i16 -63, i16 -67, i16 -70, i16 -73, i16 -76, i16 -79, i16 -81, i16 -83, i16 -85, i16 -86, i16 -87, i16 -88, i16 19968, i16 -88, i16 -87, i16 -86, i16 -85, i16 -83, i16 -81, i16 -79, i16 -76, i16 -73, i16 -70, i16 -67, i16 -63, i16 -60, i16 -56, i16 -52, i16 -49, i16 -45, i16 -41, i16 -37, i16 -34, i16 -30, i16 -27, i16 -24, i16 -21, i16 -18, i16 -15, i16 -13, i16 -10, i16 -9, i16 -7, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 4, i16 5, i16 7, i16 8, i16 10, i16 12, i16 15, i16 17, i16 20, i16 23, i16 26, i16 29, i16 32, i16 35, i16 39, i16 42, i16 46, i16 49, i16 52, i16 55, i16 58, i16 61, i16 64, i16 67, i16 69, i16 71, i16 73, i16 74, i16 76, i16 76, i16 77, i16 14259, i16 77, i16 76, i16 76, i16 74, i16 73, i16 71, i16 69, i16 67, i16 64, i16 61, i16 58, i16 55, i16 52, i16 49, i16 46, i16 42, i16 39, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 17, i16 15, i16 12, i16 10, i16 8, i16 7, i16 5, i16 4, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_2D = internal constant [3 x [101 x i16]] [[101 x i16] [i16 -3, i16 -3, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -2, i16 -1, i16 1, i16 3, i16 5, i16 7, i16 10, i16 13, i16 16, i16 19, i16 22, i16 24, i16 26, i16 27, i16 28, i16 27, i16 25, i16 21, i16 16, i16 9, i16 1, i16 -10, i16 -22, i16 -35, i16 -50, i16 -67, i16 -84, i16 -102, i16 -121, i16 -139, i16 -158, i16 -176, i16 -192, i16 -208, i16 -222, i16 -233, i16 -243, i16 -249, i16 -254, i16 20905, i16 -254, i16 -249, i16 -243, i16 -233, i16 -222, i16 -208, i16 -192, i16 -176, i16 -158, i16 -139, i16 -121, i16 -102, i16 -84, i16 -67, i16 -50, i16 -35, i16 -22, i16 -10, i16 1, i16 9, i16 16, i16 21, i16 25, i16 27, i16 28, i16 27, i16 26, i16 24, i16 22, i16 19, i16 16, i16 13, i16 10, i16 7, i16 5, i16 3, i16 1, i16 -1, i16 -2, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -3, i16 -3], [101 x i16] [i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 10, i16 10, i16 11, i16 11, i16 11, i16 10, i16 8, i16 6, i16 3, i16 0, i16 -4, i16 -9, i16 -15, i16 -21, i16 -28, i16 -35, i16 -42, i16 -50, i16 -58, i16 -65, i16 -72, i16 -79, i16 -86, i16 -91, i16 -96, i16 -100, i16 -103, i16 -104, i16 18220, i16 -104, i16 -103, i16 -100, i16 -96, i16 -91, i16 -86, i16 -79, i16 -72, i16 -65, i16 -58, i16 -50, i16 -42, i16 -35, i16 -28, i16 -21, i16 -15, i16 -9, i16 -4, i16 0, i16 3, i16 6, i16 8, i16 10, i16 11, i16 11, i16 11, i16 10, i16 10, i16 9, i16 8, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1], [101 x i16] [i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -17, i16 -20, i16 -24, i16 -27, i16 -30, i16 -33, i16 -34, i16 -34, i16 -33, i16 -31, i16 -26, i16 -20, i16 -12, i16 -2, i16 11, i16 25, i16 41, i16 59, i16 79, i16 100, i16 122, i16 144, i16 166, i16 189, i16 210, i16 230, i16 249, i16 265, i16 279, i16 290, i16 298, i16 303, i16 10885, i16 303, i16 298, i16 290, i16 279, i16 265, i16 249, i16 230, i16 210, i16 189, i16 166, i16 144, i16 122, i16 100, i16 79, i16 59, i16 41, i16 25, i16 11, i16 -2, i16 -12, i16 -20, i16 -26, i16 -31, i16 -33, i16 -34, i16 -34, i16 -33, i16 -30, i16 -27, i16 -24, i16 -20, i16 -17, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2]], align 16
@_ZL14third_order_2D = internal constant [4 x [101 x i16]] [[101 x i16] [i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 4, i16 3, i16 2, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -16, i16 -18, i16 -20, i16 -20, i16 -18, i16 -15, i16 -10, i16 -3, i16 6, i16 16, i16 26, i16 37, i16 47, i16 56, i16 62, i16 64, i16 63, i16 57, i16 45, i16 27, i16 3, i16 -26, i16 -60, i16 -98, i16 -140, i16 -183, i16 -226, i16 -268, i16 -307, i16 -342, i16 -370, i16 -391, i16 -404, i16 21262, i16 -404, i16 -391, i16 -370, i16 -342, i16 -307, i16 -268, i16 -226, i16 -183, i16 -140, i16 -98, i16 -60, i16 -26, i16 3, i16 27, i16 45, i16 57, i16 63, i16 64, i16 62, i16 56, i16 47, i16 37, i16 26, i16 16, i16 6, i16 -3, i16 -10, i16 -15, i16 -18, i16 -20, i16 -20, i16 -18, i16 -16, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 2, i16 3, i16 4, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0], [101 x i16] [i16 0, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -9, i16 -11, i16 -13, i16 -14, i16 -14, i16 -13, i16 -10, i16 -7, i16 -2, i16 4, i16 10, i16 18, i16 25, i16 32, i16 38, i16 42, i16 44, i16 43, i16 39, i16 30, i16 18, i16 2, i16 -18, i16 -41, i16 -68, i16 -96, i16 -126, i16 -155, i16 -184, i16 -211, i16 -234, i16 -254, i16 -268, i16 -277, i16 19741, i16 -277, i16 -268, i16 -254, i16 -234, i16 -211, i16 -184, i16 -155, i16 -126, i16 -96, i16 -68, i16 -41, i16 -18, i16 2, i16 18, i16 30, i16 39, i16 43, i16 44, i16 42, i16 38, i16 32, i16 25, i16 18, i16 10, i16 4, i16 -2, i16 -7, i16 -10, i16 -13, i16 -14, i16 -14, i16 -13, i16 -11, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 0], [101 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 1, i16 0, i16 -2, i16 -4, i16 -6, i16 -8, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -6, i16 -1, i16 5, i16 12, i16 20, i16 29, i16 38, i16 47, i16 56, i16 64, i16 71, i16 77, i16 82, i16 84, i16 15409, i16 84, i16 82, i16 77, i16 71, i16 64, i16 56, i16 47, i16 38, i16 29, i16 20, i16 12, i16 5, i16 -1, i16 -6, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -8, i16 -6, i16 -4, i16 -2, i16 0, i16 1, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 20, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -97, i16 -101, i16 -99, i16 -89, i16 -71, i16 -43, i16 -7, i16 39, i16 92, i16 151, i16 215, i16 282, i16 350, i16 415, i16 475, i16 528, i16 572, i16 605, i16 625, i16 8926, i16 625, i16 605, i16 572, i16 528, i16 475, i16 415, i16 350, i16 282, i16 215, i16 151, i16 92, i16 39, i16 -7, i16 -43, i16 -71, i16 -89, i16 -99, i16 -101, i16 -97, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 20, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2]], align 16
@_ZTV17CAmbisonicSpeaker = dso_local unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicSpeaker to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD1Ev to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)* @_ZN17CAmbisonicSpeaker9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeaker7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV17CAmbisonicDecoder = dso_local unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicDecoder to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD1Ev to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder7RefreshEv to i8*), i8* bitcast (float (%class.CAmbisonicDecoder*, i32, i32)* @_ZN17CAmbisonicDecoder14GetCoefficientEjj to i8*)] }, align 8
@__const._ZN17CAmbisonicDecoder12SpeakerSetUpEij.polPosition = private unnamed_addr constant %struct.PolarPoint { float 0.000000e+00, float 0.000000e+00, float 1.000000e+00 }, align 4
@_ZTV16CAmbisonicZoomer = dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicZoomer to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicZoomer*, i32, i1, i32)* @_ZN16CAmbisonicZoomer9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer7RefreshEv to i8*)] }, align 8
@_ZTV22CAmbisonicBinauralizer = dso_local unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22CAmbisonicBinauralizer to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer7RefreshEv to i8*), i8* bitcast (i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)* @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv to i8*)] }, align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"Getting first order cube\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Getting second/third order dodecahedron\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"Binauralizer Configuration failed!\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"samples/lectureSample.wav\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"samples/radioMusicSample.wav\00", align 1
@_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame = internal global i32 0, align 4
@_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame = internal global i32 0, align 4
@_ZZ14rotatorSet_fxpE5frame = internal global i32 0, align 4
@_ZZ11zoomSet_fxpE5frame = internal global i32 0, align 4
@.str.6 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c" <number of size 1024 blocks to process> \00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"<optional: encode/decode>\0A\00", align 1
@.str.9 = private unnamed_addr constant [122 x i8] c"Note: If you want to hear the output sound, limit the process sample blocks so that the output is not longer than input!\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"output.wav\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS8MIT_HRTF = dso_local constant [10 x i8] c"8MIT_HRTF\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS4HRTF = linkonce_odr dso_local constant [6 x i8] c"4HRTF\00", comdat, align 1
@_ZTI4HRTF = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZTS4HRTF, i32 0, i32 0) }, comdat, align 8
@_ZTI8MIT_HRTF = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8MIT_HRTF, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*) }, align 8
@_ZTS14CAmbisonicBase = dso_local constant [17 x i8] c"14CAmbisonicBase\00", align 1
@_ZTI14CAmbisonicBase = dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14CAmbisonicBase, i32 0, i32 0) }, align 8
@_ZTS16CAmbisonicSource = dso_local constant [19 x i8] c"16CAmbisonicSource\00", align 1
@_ZTI16CAmbisonicSource = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicSource, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS8CBFormat = dso_local constant [10 x i8] c"8CBFormat\00", align 1
@_ZTI8CBFormat = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8CBFormat, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicEncoder = dso_local constant [20 x i8] c"17CAmbisonicEncoder\00", align 1
@_ZTI17CAmbisonicEncoder = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicEncoder, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS21CAmbisonicEncoderDist = dso_local constant [24 x i8] c"21CAmbisonicEncoderDist\00", align 1
@_ZTI21CAmbisonicEncoderDist = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS21CAmbisonicEncoderDist, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*) }, align 8
@_ZTS19CAmbisonicProcessor = dso_local constant [22 x i8] c"19CAmbisonicProcessor\00", align 1
@_ZTI19CAmbisonicProcessor = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS19CAmbisonicProcessor, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicSpeaker = dso_local constant [20 x i8] c"17CAmbisonicSpeaker\00", align 1
@_ZTI17CAmbisonicSpeaker = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicSpeaker, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS17CAmbisonicDecoder = dso_local constant [20 x i8] c"17CAmbisonicDecoder\00", align 1
@_ZTI17CAmbisonicDecoder = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicDecoder, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS16CAmbisonicZoomer = dso_local constant [19 x i8] c"16CAmbisonicZoomer\00", align 1
@_ZTI16CAmbisonicZoomer = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicZoomer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS22CAmbisonicBinauralizer = dso_local constant [25 x i8] c"22CAmbisonicBinauralizer\00", align 1
@_ZTI22CAmbisonicBinauralizer = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22CAmbisonicBinauralizer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTV4HRTF = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD2Ev to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZL14third_order_3D = internal constant <{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }> <{ [101 x i16] [i16 1, i16 3, i16 4, i16 5, i16 6, i16 8, i16 8, i16 8, i16 8, i16 7, i16 5, i16 1, i16 -3, i16 -8, i16 -15, i16 -21, i16 -28, i16 -34, i16 -38, i16 -41, i16 -41, i16 -38, i16 -31, i16 -20, i16 -5, i16 13, i16 33, i16 56, i16 78, i16 99, i16 117, i16 130, i16 136, i16 133, i16 120, i16 95, i16 57, i16 8, i16 -54, i16 -126, i16 -206, i16 -294, i16 -384, i16 -476, i16 -564, i16 -646, i16 -718, i16 -778, i16 -823, i16 -850, i16 26604, i16 -850, i16 -823, i16 -778, i16 -718, i16 -646, i16 -564, i16 -476, i16 -384, i16 -294, i16 -206, i16 -126, i16 -54, i16 8, i16 57, i16 95, i16 120, i16 133, i16 136, i16 130, i16 117, i16 99, i16 78, i16 56, i16 33, i16 13, i16 -5, i16 -20, i16 -31, i16 -38, i16 -41, i16 -41, i16 -38, i16 -34, i16 -28, i16 -21, i16 -15, i16 -8, i16 -3, i16 1, i16 5, i16 7, i16 8, i16 8, i16 8, i16 8, i16 6, i16 5, i16 4, i16 3, i16 1], [101 x i16] [i16 1, i16 2, i16 2, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 1, i16 -2, i16 -6, i16 -10, i16 -14, i16 -18, i16 -22, i16 -25, i16 -27, i16 -27, i16 -25, i16 -20, i16 -13, i16 -4, i16 8, i16 22, i16 36, i16 51, i16 65, i16 77, i16 85, i16 89, i16 87, i16 78, i16 62, i16 37, i16 5, i16 -35, i16 -82, i16 -135, i16 -192, i16 -252, i16 -311, i16 -369, i16 -423, i16 -470, i16 -509, i16 -538, i16 -556, i16 23082, i16 -556, i16 -538, i16 -509, i16 -470, i16 -423, i16 -369, i16 -311, i16 -252, i16 -192, i16 -135, i16 -82, i16 -35, i16 5, i16 37, i16 62, i16 78, i16 87, i16 89, i16 85, i16 77, i16 65, i16 51, i16 36, i16 22, i16 8, i16 -4, i16 -13, i16 -20, i16 -25, i16 -27, i16 -27, i16 -25, i16 -22, i16 -18, i16 -14, i16 -10, i16 -6, i16 -2, i16 1, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 2, i16 2, i16 1], <{ [89 x i16], [12 x i16] }> <{ [89 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 1, i16 0, i16 -2, i16 -5, i16 -8, i16 -11, i16 -14, i16 -17, i16 -20, i16 -23, i16 -25, i16 -27, i16 -29, i16 -30, i16 16773, i16 -30, i16 -29, i16 -27, i16 -25, i16 -23, i16 -20, i16 -17, i16 -14, i16 -11, i16 -8, i16 -5, i16 -2, i16 0, i16 1, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [12 x i16] zeroinitializer }>, [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 19, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -96, i16 -101, i16 -98, i16 -88, i16 -70, i16 -43, i16 -7, i16 38, i16 91, i16 150, i16 214, i16 280, i16 347, i16 412, i16 472, i16 525, i16 568, i16 601, i16 621, i16 8977, i16 621, i16 601, i16 568, i16 525, i16 472, i16 412, i16 347, i16 280, i16 214, i16 150, i16 91, i16 38, i16 -7, i16 -43, i16 -70, i16 -88, i16 -98, i16 -101, i16 -96, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 19, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2] }>, align 16
@.str.12 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]

@_ZN8MIT_HRTFC1Ej = dso_local unnamed_addr alias void (%class.MIT_HRTF*, i32), void (%class.MIT_HRTF*, i32)* @_ZN8MIT_HRTFC2Ej
@_ZN16CAmbisonicSourceC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicSource*), void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceC2Ev
@_ZN8CBFormatC1Ev = dso_local unnamed_addr alias void (%class.CBFormat*), void (%class.CBFormat*)* @_ZN8CBFormatC2Ev
@_ZN17CAmbisonicEncoderC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderC2Ev
@_ZN17CAmbisonicEncoderD1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev
@_ZN21CAmbisonicEncoderDistC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistC2Ev
@_ZN21CAmbisonicEncoderDistD1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev
@_ZN19CAmbisonicProcessorC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorC2Ev
@_ZN19CAmbisonicProcessorD1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev
@_ZN17CAmbisonicSpeakerC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerC2Ev
@_ZN17CAmbisonicSpeakerD1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev
@_ZN17CAmbisonicDecoderC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderC2Ev
@_ZN17CAmbisonicDecoderD1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev
@_ZN16CAmbisonicZoomerC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicZoomer*), void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerC2Ev
@_ZN22CAmbisonicBinauralizerC1Ev = dso_local unnamed_addr alias void (%class.CAmbisonicBinauralizer*), void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerC2Ev
@_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb = dso_local unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1), void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1)* @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
@_ZN12ILLIXR_AUDIO5SoundD1Ev = dso_local unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*), void (%"class.ILLIXR_AUDIO::Sound"*)* @_ZN12ILLIXR_AUDIO5SoundD2Ev
@_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE = dso_local unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32), void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32)* @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
@_ZN12ILLIXR_AUDIO7ABAudioD1Ev = dso_local unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*), void (%"class.ILLIXR_AUDIO::ABAudio"*)* @_ZN12ILLIXR_AUDIO7ABAudioD2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8MIT_HRTFC2Ej(%class.MIT_HRTF* %this, i32 %i_sampleRate) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.MIT_HRTF*, align 8
  %i_sampleRate.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.MIT_HRTF* %this, %class.MIT_HRTF** %this.addr, align 8
  store i32 %i_sampleRate, i32* %i_sampleRate.addr, align 4
  %this1 = load %class.MIT_HRTF*, %class.MIT_HRTF** %this.addr, align 8
  %0 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %1 = load i32, i32* %i_sampleRate.addr, align 4
  call void @_ZN4HRTFC2Ej(%class.HRTF* %0, i32 %1)
  %2 = bitcast %class.MIT_HRTF* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load i32, i32* %i_sampleRate.addr, align 4
  %call = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %4 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %i_len = getelementptr inbounds %class.HRTF, %class.HRTF* %4, i32 0, i32 2
  store i32 %call, i32* %i_len, align 4
  ret void

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  %8 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  call void @_ZN4HRTFD2Ev(%class.HRTF* %8) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4HRTFC2Ej(%class.HRTF* %this, i32 %i_sampleRate) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.HRTF*, align 8
  %i_sampleRate.addr = alloca i32, align 4
  store %class.HRTF* %this, %class.HRTF** %this.addr, align 8
  store i32 %i_sampleRate, i32* %i_sampleRate.addr, align 4
  %this1 = load %class.HRTF*, %class.HRTF** %this.addr, align 8
  %0 = bitcast %class.HRTF* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV4HRTF, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %i_sampleRate2 = getelementptr inbounds %class.HRTF, %class.HRTF* %this1, i32 0, i32 1
  %1 = load i32, i32* %i_sampleRate.addr, align 4
  store i32 %1, i32* %i_sampleRate2, align 8
  %i_len = getelementptr inbounds %class.HRTF, %class.HRTF* %this1, i32 0, i32 2
  store i32 0, i32* %i_len, align 4
  ret void
}

declare dso_local i32 @mit_hrtf_availability(i32, i32, i32) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN8MIT_HRTF3getEffPPf(%class.MIT_HRTF* %this, float %f_azimuth, float %f_elevation, float** %pfHRTF) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.MIT_HRTF*, align 8
  %f_azimuth.addr = alloca float, align 4
  %f_elevation.addr = alloca float, align 4
  %pfHRTF.addr = alloca float**, align 8
  %nAzimuth = alloca i32, align 4
  %nElevation = alloca i32, align 4
  %psHRTF = alloca [2 x %"class.std::vector"], align 16
  %arrayinit.endOfInit = alloca %"class.std::vector"*, align 8
  %ref.tmp = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %ref.tmp8 = alloca %"class.std::allocator", align 1
  %cleanup.isactive = alloca i1, align 1
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %t = alloca i32, align 4
  store %class.MIT_HRTF* %this, %class.MIT_HRTF** %this.addr, align 8
  store float %f_azimuth, float* %f_azimuth.addr, align 4
  store float %f_elevation, float* %f_elevation.addr, align 4
  store float** %pfHRTF, float*** %pfHRTF.addr, align 8
  %this1 = load %class.MIT_HRTF*, %class.MIT_HRTF** %this.addr, align 8
  %0 = load float, float* %f_azimuth.addr, align 4
  %sub = fsub float -0.000000e+00, %0
  %call = call float @_Z16RadiansToDegreesf(float %sub)
  %conv = fptosi float %call to i32
  store i32 %conv, i32* %nAzimuth, align 4
  %1 = load i32, i32* %nAzimuth, align 4
  %cmp = icmp sgt i32 %1, 180
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %nAzimuth, align 4
  %sub2 = sub nsw i32 %2, 360
  store i32 %sub2, i32* %nAzimuth, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load float, float* %f_elevation.addr, align 4
  %call3 = call float @_Z16RadiansToDegreesf(float %3)
  %conv4 = fptosi float %call3 to i32
  store i32 %conv4, i32* %nElevation, align 4
  %arrayinit.begin = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i64 0, i64 0
  store i1 true, i1* %cleanup.isactive, align 1
  store %"class.std::vector"* %arrayinit.begin, %"class.std::vector"** %arrayinit.endOfInit, align 8
  %4 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %i_len = getelementptr inbounds %class.HRTF, %class.HRTF* %4, i32 0, i32 2
  %5 = load i32, i32* %i_len, align 4
  %conv5 = zext i32 %5 to i64
  call void @_ZNSaIsEC2Ev(%"class.std::allocator"* %ref.tmp) #3
  invoke void @_ZNSt6vectorIsSaIsEEC2EmRKS0_(%"class.std::vector"* %arrayinit.begin, i64 %conv5, %"class.std::allocator"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end
  %arrayinit.element = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arrayinit.begin, i64 1
  store %"class.std::vector"* %arrayinit.element, %"class.std::vector"** %arrayinit.endOfInit, align 8
  %6 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %i_len6 = getelementptr inbounds %class.HRTF, %class.HRTF* %6, i32 0, i32 2
  %7 = load i32, i32* %i_len6, align 4
  %conv7 = zext i32 %7 to i64
  call void @_ZNSaIsEC2Ev(%"class.std::allocator"* %ref.tmp8) #3
  invoke void @_ZNSt6vectorIsSaIsEEC2EmRKS0_(%"class.std::vector"* %arrayinit.element, i64 %conv7, %"class.std::allocator"* dereferenceable(1) %ref.tmp8)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  call void @_ZNSaIsED2Ev(%"class.std::allocator"* %ref.tmp8) #3
  call void @_ZNSaIsED2Ev(%"class.std::allocator"* %ref.tmp) #3
  %8 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %i_sampleRate = getelementptr inbounds %class.HRTF, %class.HRTF* %8, i32 0, i32 1
  %9 = load i32, i32* %i_sampleRate, align 8
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i64 0, i64 0
  %call13 = call i16* @_ZNSt6vectorIsSaIsEE4dataEv(%"class.std::vector"* %arrayidx) #3
  %arrayidx14 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i64 0, i64 1
  %call15 = call i16* @_ZNSt6vectorIsSaIsEE4dataEv(%"class.std::vector"* %arrayidx14) #3
  %call18 = invoke i32 @mit_hrtf_get(i32* %nAzimuth, i32* %nElevation, i32 %9, i16* %call13, i16* %call15)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %invoke.cont10
  store i32 %call18, i32* %ret, align 4
  %10 = load i32, i32* %ret, align 4
  %cmp19 = icmp eq i32 %10, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %invoke.cont17
  store i1 false, i1* %retval, align 1
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

lpad:                                             ; preds = %if.end
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad9:                                            ; preds = %invoke.cont
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  call void @_ZNSaIsED2Ev(%"class.std::allocator"* %ref.tmp8) #3
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad9, %lpad
  call void @_ZNSaIsED2Ev(%"class.std::allocator"* %ref.tmp) #3
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  %17 = load %"class.std::vector"*, %"class.std::vector"** %arrayinit.endOfInit, align 8
  %arraydestroy.isempty = icmp eq %"class.std::vector"* %arrayinit.begin, %17
  br i1 %arraydestroy.isempty, label %arraydestroy.done12, label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %cleanup.action
  %arraydestroy.elementPast = phi %"class.std::vector"* [ %17, %cleanup.action ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arraydestroy.elementPast, i64 -1
  call void @_ZNSt6vectorIsSaIsEED2Ev(%"class.std::vector"* %arraydestroy.element) #3
  %arraydestroy.done = icmp eq %"class.std::vector"* %arraydestroy.element, %arrayinit.begin
  br i1 %arraydestroy.done, label %arraydestroy.done12, label %arraydestroy.body

arraydestroy.done12:                              ; preds = %arraydestroy.body, %cleanup.action
  br label %cleanup.done

cleanup.done:                                     ; preds = %arraydestroy.done12, %ehcleanup
  br label %eh.resume

lpad16:                                           ; preds = %invoke.cont10
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  store i8* %19, i8** %exn.slot, align 8
  %20 = extractvalue { i8*, i32 } %18, 1
  store i32 %20, i32* %ehselector.slot, align 4
  %array.begin46 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %array.begin46, i64 2
  br label %arraydestroy.body47

if.end21:                                         ; preds = %invoke.cont17
  store i32 0, i32* %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end21
  %22 = load i32, i32* %t, align 4
  %23 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  %i_len22 = getelementptr inbounds %class.HRTF, %class.HRTF* %23, i32 0, i32 2
  %24 = load i32, i32* %i_len22, align 4
  %cmp23 = icmp ult i32 %22, %24
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx24 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i64 0, i64 0
  %25 = load i32, i32* %t, align 4
  %conv25 = zext i32 %25 to i64
  %call26 = call dereferenceable(2) i16* @_ZNSt6vectorIsSaIsEEixEm(%"class.std::vector"* %arrayidx24, i64 %conv25) #3
  %26 = load i16, i16* %call26, align 2
  %conv27 = sext i16 %26 to i32
  %conv28 = sitofp i32 %conv27 to float
  %div = fdiv float %conv28, 3.276700e+04
  %27 = load float**, float*** %pfHRTF.addr, align 8
  %arrayidx29 = getelementptr inbounds float*, float** %27, i64 0
  %28 = load float*, float** %arrayidx29, align 8
  %29 = load i32, i32* %t, align 4
  %idxprom = zext i32 %29 to i64
  %arrayidx30 = getelementptr inbounds float, float* %28, i64 %idxprom
  store float %div, float* %arrayidx30, align 4
  %arrayidx31 = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i64 0, i64 1
  %30 = load i32, i32* %t, align 4
  %conv32 = zext i32 %30 to i64
  %call33 = call dereferenceable(2) i16* @_ZNSt6vectorIsSaIsEEixEm(%"class.std::vector"* %arrayidx31, i64 %conv32) #3
  %31 = load i16, i16* %call33, align 2
  %conv34 = sext i16 %31 to i32
  %conv35 = sitofp i32 %conv34 to float
  %div36 = fdiv float %conv35, 3.276700e+04
  %32 = load float**, float*** %pfHRTF.addr, align 8
  %arrayidx37 = getelementptr inbounds float*, float** %32, i64 1
  %33 = load float*, float** %arrayidx37, align 8
  %34 = load i32, i32* %t, align 4
  %idxprom38 = zext i32 %34 to i64
  %arrayidx39 = getelementptr inbounds float, float* %33, i64 %idxprom38
  store float %div36, float* %arrayidx39, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %t, align 4
  %inc = add i32 %35, 1
  store i32 %inc, i32* %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then20
  %array.begin = getelementptr inbounds [2 x %"class.std::vector"], [2 x %"class.std::vector"]* %psHRTF, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %array.begin, i64 2
  br label %arraydestroy.body40

arraydestroy.body40:                              ; preds = %arraydestroy.body40, %cleanup
  %arraydestroy.elementPast41 = phi %"class.std::vector"* [ %36, %cleanup ], [ %arraydestroy.element42, %arraydestroy.body40 ]
  %arraydestroy.element42 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arraydestroy.elementPast41, i64 -1
  call void @_ZNSt6vectorIsSaIsEED2Ev(%"class.std::vector"* %arraydestroy.element42) #3
  %arraydestroy.done43 = icmp eq %"class.std::vector"* %arraydestroy.element42, %array.begin
  br i1 %arraydestroy.done43, label %arraydestroy.done44, label %arraydestroy.body40

arraydestroy.done44:                              ; preds = %arraydestroy.body40
  %37 = load i1, i1* %retval, align 1
  ret i1 %37

arraydestroy.body47:                              ; preds = %arraydestroy.body47, %lpad16
  %arraydestroy.elementPast48 = phi %"class.std::vector"* [ %21, %lpad16 ], [ %arraydestroy.element49, %arraydestroy.body47 ]
  %arraydestroy.element49 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %arraydestroy.elementPast48, i64 -1
  call void @_ZNSt6vectorIsSaIsEED2Ev(%"class.std::vector"* %arraydestroy.element49) #3
  %arraydestroy.done50 = icmp eq %"class.std::vector"* %arraydestroy.element49, %array.begin46
  br i1 %arraydestroy.done50, label %arraydestroy.done51, label %arraydestroy.body47

arraydestroy.done51:                              ; preds = %arraydestroy.body47
  br label %eh.resume

eh.resume:                                        ; preds = %arraydestroy.done51, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val52 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val52
}

declare dso_local float @_Z16RadiansToDegreesf(float) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIsEC2Ev(%"class.std::allocator"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIsEC2Ev(%"class.__gnu_cxx::new_allocator"* %0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIsSaIsEEC2EmRKS0_(%"class.std::vector"* %this, i64 %__n, %"class.std::allocator"* dereferenceable(1) %__a) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  call void @_ZNSt12_Vector_baseIsSaIsEEC2EmRKS0_(%"struct.std::_Vector_base"* %0, i64 %1, %"class.std::allocator"* dereferenceable(1) %2)
  %3 = load i64, i64* %__n.addr, align 8
  invoke void @_ZNSt6vectorIsSaIsEE21_M_default_initializeEm(%"class.std::vector"* %this1, i64 %3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIsSaIsEED2Ev(%"struct.std::_Vector_base"* %7) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIsED2Ev(%"class.std::allocator"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIsED2Ev(%"class.__gnu_cxx::new_allocator"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIsSaIsEED2Ev(%"class.std::vector"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load i16*, i16** %_M_start, align 8
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load i16*, i16** %_M_finish, align 8
  %4 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIsSaIsEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  invoke void @_ZSt8_DestroyIPssEvT_S1_RSaIT0_E(i16* %1, i16* %3, %"class.std::allocator"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIsSaIsEED2Ev(%"struct.std::_Vector_base"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIsSaIsEED2Ev(%"struct.std::_Vector_base"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

declare dso_local i32 @mit_hrtf_get(i32*, i32*, i32, i16*, i16*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i16* @_ZNSt6vectorIsSaIsEE4dataEv(%"class.std::vector"* %this) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load i16*, i16** %_M_start, align 8
  %call = invoke i16* @_ZNKSt6vectorIsSaIsEE11_M_data_ptrIsEEPT_S4_(%"class.std::vector"* %this1, i16* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret i16* %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(2) i16* @_ZNSt6vectorIsSaIsEEixEm(%"class.std::vector"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load i16*, i16** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %2
  ret i16* %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicBase* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14CAmbisonicBase, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 1
  store i32 0, i32* %m_nOrder, align 8
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 2
  store i8 0, i8* %m_b3D, align 4
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 4
  store i32 0, i32* %m_nChannelCount, align 8
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 5
  store i8 0, i8* %m_bOpt, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN14CAmbisonicBase8GetOrderEv(%class.CAmbisonicBase* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_nOrder, align 8
  ret i32 %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @_ZN14CAmbisonicBase9GetHeightEv(%class.CAmbisonicBase* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 2
  %0 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %0 to i1
  ret i1 %tobool
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN14CAmbisonicBase15GetChannelCountEv(%class.CAmbisonicBase* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 4
  %0 = load i32, i32* %m_nChannelCount, align 8
  ret i32 %0
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nMisc.addr = alloca i32, align 4
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  %0 = load i32, i32* %nOrder.addr, align 4
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 1
  store i32 %0, i32* %m_nOrder, align 8
  %1 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %1 to i1
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 2
  %frombool2 = zext i1 %tobool to i8
  store i8 %frombool2, i8* %m_b3D, align 4
  %m_nOrder3 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 1
  %2 = load i32, i32* %m_nOrder3, align 8
  %m_b3D4 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 2
  %3 = load i8, i8* %m_b3D4, align 4
  %tobool5 = trunc i8 %3 to i1
  %call = call i32 @_Z17OrderToComponentsjb(i32 %2, i1 zeroext %tobool5)
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this1, i32 0, i32 4
  store i32 %call, i32* %m_nChannelCount, align 8
  ret i1 true
}

declare dso_local i32 @_Z17OrderToComponentsjb(i32, i1 zeroext) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CAmbisonicSource* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfCoeff) #3
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfOrderWeights) #3
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %m_polPosition2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition2, i32 0, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8
  %m_polPosition3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition3, i32 0, i32 1
  store float 0.000000e+00, float* %fElevation, align 4
  %m_polPosition4 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition4, i32 0, i32 2
  store float 1.000000e+00, float* %fDistance, align 8
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIfSaIfEEC2Ev(%"struct.std::_Vector_base.1"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nMisc.addr = alloca i32, align 4
  %success = alloca i8, align 1
  %ref.tmp = alloca float, align 4
  %ref.tmp5 = alloca float, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nMisc.addr, align 4
  %call = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %5 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %5, i32 0, i32 4
  %6 = load i32, i32* %m_nChannelCount, align 8
  %conv = zext i32 %6 to i64
  store float 0.000000e+00, float* %ref.tmp, align 4
  call void @_ZNSt6vectorIfSaIfEE6resizeEmRKf(%"class.std::vector.0"* %m_pfCoeff, i64 %conv, float* dereferenceable(4) %ref.tmp)
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %7 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %7, i32 0, i32 1
  %8 = load i32, i32* %m_nOrder, align 8
  %add = add i32 %8, 1
  %conv4 = zext i32 %add to i64
  store float 1.000000e+00, float* %ref.tmp5, align 4
  call void @_ZNSt6vectorIfSaIfEE6resizeEmRKf(%"class.std::vector.0"* %m_pfOrderWeights, i64 %conv4, float* dereferenceable(4) %ref.tmp5)
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load i1, i1* %retval, align 1
  ret i1 %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEE6resizeEmRKf(%"class.std::vector.0"* %this, i64 %__new_size, float* dereferenceable(4) %__x) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__new_size.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.48", align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__new_size, i64* %__new_size.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load i64, i64* %__new_size.addr, align 8
  %call = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call2 = call float* @_ZNSt6vectorIfSaIfEE3endEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0
  store float* %call2, float** %coerce.dive, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2IPfEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.48"* %agg.tmp, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp) #3
  %1 = load i64, i64* %__new_size.addr, align 8
  %call3 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %sub = sub i64 %1, %call3
  %2 = load float*, float** %__x.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %agg.tmp, i32 0, i32 0
  %3 = load float*, float** %coerce.dive4, align 8
  %call5 = call float* @_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EEmRS4_(%"class.std::vector.0"* %this1, float* %3, i64 %sub, float* dereferenceable(4) %2)
  %coerce.dive6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %coerce, i32 0, i32 0
  store float* %call5, float** %coerce.dive6, align 8
  br label %if.end10

if.else:                                          ; preds = %entry
  %4 = load i64, i64* %__new_size.addr, align 8
  %call7 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp8 = icmp ult i64 %4, %call7
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.else
  %5 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %6 = load float*, float** %_M_start, align 8
  %7 = load i64, i64* %__new_size.addr, align 8
  %add.ptr = getelementptr inbounds float, float* %6, i64 %7
  call void @_ZNSt6vectorIfSaIfEE15_M_erase_at_endEPf(%"class.std::vector.0"* %this1, float* %add.ptr) #3
  br label %if.end

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource5ResetEv(%class.CAmbisonicSource* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %fCosAzim = alloca float, align 4
  %fSinAzim = alloca float, align 4
  %fCosElev = alloca float, align 4
  %fSinElev = alloca float, align 4
  %fCos2Azim = alloca float, align 4
  %fSin2Azim = alloca float, align 4
  %fSin2Elev = alloca float, align 4
  %ni = alloca i32, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition, i32 0, i32 0
  %0 = load float, float* %fAzimuth, align 8
  %call = call float @cosf(float %0) #3
  store float %call, float* %fCosAzim, align 4
  %m_polPosition2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth3 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition2, i32 0, i32 0
  %1 = load float, float* %fAzimuth3, align 8
  %call4 = call float @sinf(float %1) #3
  store float %call4, float* %fSinAzim, align 4
  %m_polPosition5 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition5, i32 0, i32 1
  %2 = load float, float* %fElevation, align 4
  %call6 = call float @cosf(float %2) #3
  store float %call6, float* %fCosElev, align 4
  %m_polPosition7 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fElevation8 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition7, i32 0, i32 1
  %3 = load float, float* %fElevation8, align 4
  %call9 = call float @sinf(float %3) #3
  store float %call9, float* %fSinElev, align 4
  %m_polPosition10 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth11 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition10, i32 0, i32 0
  %4 = load float, float* %fAzimuth11, align 8
  %mul = fmul float 2.000000e+00, %4
  %call12 = call float @cosf(float %mul) #3
  store float %call12, float* %fCos2Azim, align 4
  %m_polPosition13 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth14 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition13, i32 0, i32 0
  %5 = load float, float* %fAzimuth14, align 8
  %mul15 = fmul float 2.000000e+00, %5
  %call16 = call float @sinf(float %mul15) #3
  store float %call16, float* %fSin2Azim, align 4
  %m_polPosition17 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fElevation18 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition17, i32 0, i32 1
  %6 = load float, float* %fElevation18, align 4
  %mul19 = fmul float 2.000000e+00, %6
  %call20 = call float @sinf(float %mul19) #3
  store float %call20, float* %fSin2Elev, align 4
  %7 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %7, i32 0, i32 2
  %8 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %8 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %9 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %9, i32 0, i32 1
  %10 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp uge i32 %10, 0
  br i1 %cmp, label %if.then21, label %if.end

if.then21:                                        ; preds = %if.then
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call22 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights, i64 0) #3
  %11 = load float, float* %call22, align 4
  %mul23 = fmul float 1.000000e+00, %11
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call24 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 0) #3
  store float %mul23, float* %call24, align 4
  br label %if.end

if.end:                                           ; preds = %if.then21, %if.then
  %12 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder25 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %12, i32 0, i32 1
  %13 = load i32, i32* %m_nOrder25, align 8
  %cmp26 = icmp uge i32 %13, 1
  br i1 %cmp26, label %if.then27, label %if.end45

if.then27:                                        ; preds = %if.end
  %14 = load float, float* %fSinAzim, align 4
  %15 = load float, float* %fCosElev, align 4
  %mul28 = fmul float %14, %15
  %m_pfOrderWeights29 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call30 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights29, i64 1) #3
  %16 = load float, float* %call30, align 4
  %mul31 = fmul float %mul28, %16
  %m_pfCoeff32 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call33 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff32, i64 1) #3
  store float %mul31, float* %call33, align 4
  %17 = load float, float* %fSinElev, align 4
  %m_pfOrderWeights34 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call35 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights34, i64 1) #3
  %18 = load float, float* %call35, align 4
  %mul36 = fmul float %17, %18
  %m_pfCoeff37 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call38 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff37, i64 2) #3
  store float %mul36, float* %call38, align 4
  %19 = load float, float* %fCosAzim, align 4
  %20 = load float, float* %fCosElev, align 4
  %mul39 = fmul float %19, %20
  %m_pfOrderWeights40 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call41 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights40, i64 1) #3
  %21 = load float, float* %call41, align 4
  %mul42 = fmul float %mul39, %21
  %m_pfCoeff43 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call44 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff43, i64 3) #3
  store float %mul42, float* %call44, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then27, %if.end
  %22 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder46 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %22, i32 0, i32 1
  %23 = load i32, i32* %m_nOrder46, align 8
  %cmp47 = icmp uge i32 %23, 2
  br i1 %cmp47, label %if.then48, label %if.end104

if.then48:                                        ; preds = %if.end45
  %call49 = call double @sqrt(double 3.000000e+00) #3
  %div = fdiv double %call49, 2.000000e+00
  %24 = load float, float* %fSin2Azim, align 4
  %25 = load float, float* %fCosElev, align 4
  %call50 = call float @powf(float %25, float 2.000000e+00) #3
  %mul51 = fmul float %24, %call50
  %conv = fpext float %mul51 to double
  %mul52 = fmul double %div, %conv
  %m_pfOrderWeights53 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call54 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights53, i64 2) #3
  %26 = load float, float* %call54, align 4
  %conv55 = fpext float %26 to double
  %mul56 = fmul double %mul52, %conv55
  %conv57 = fptrunc double %mul56 to float
  %m_pfCoeff58 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call59 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff58, i64 4) #3
  store float %conv57, float* %call59, align 4
  %call60 = call double @sqrt(double 3.000000e+00) #3
  %div61 = fdiv double %call60, 2.000000e+00
  %27 = load float, float* %fSinAzim, align 4
  %28 = load float, float* %fSin2Elev, align 4
  %mul62 = fmul float %27, %28
  %conv63 = fpext float %mul62 to double
  %mul64 = fmul double %div61, %conv63
  %m_pfOrderWeights65 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call66 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights65, i64 2) #3
  %29 = load float, float* %call66, align 4
  %conv67 = fpext float %29 to double
  %mul68 = fmul double %mul64, %conv67
  %conv69 = fptrunc double %mul68 to float
  %m_pfCoeff70 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call71 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff70, i64 5) #3
  store float %conv69, float* %call71, align 4
  %30 = load float, float* %fSinElev, align 4
  %call72 = call float @powf(float %30, float 2.000000e+00) #3
  %mul73 = fmul float 1.500000e+00, %call72
  %sub = fsub float %mul73, 5.000000e-01
  %m_pfOrderWeights74 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call75 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights74, i64 2) #3
  %31 = load float, float* %call75, align 4
  %mul76 = fmul float %sub, %31
  %m_pfCoeff77 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call78 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff77, i64 6) #3
  store float %mul76, float* %call78, align 4
  %call79 = call double @sqrt(double 3.000000e+00) #3
  %div80 = fdiv double %call79, 2.000000e+00
  %32 = load float, float* %fCosAzim, align 4
  %33 = load float, float* %fSin2Elev, align 4
  %mul81 = fmul float %32, %33
  %conv82 = fpext float %mul81 to double
  %mul83 = fmul double %div80, %conv82
  %m_pfOrderWeights84 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call85 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights84, i64 2) #3
  %34 = load float, float* %call85, align 4
  %conv86 = fpext float %34 to double
  %mul87 = fmul double %mul83, %conv86
  %conv88 = fptrunc double %mul87 to float
  %m_pfCoeff89 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call90 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff89, i64 7) #3
  store float %conv88, float* %call90, align 4
  %call91 = call double @sqrt(double 3.000000e+00) #3
  %div92 = fdiv double %call91, 2.000000e+00
  %35 = load float, float* %fCos2Azim, align 4
  %36 = load float, float* %fCosElev, align 4
  %call93 = call float @powf(float %36, float 2.000000e+00) #3
  %mul94 = fmul float %35, %call93
  %conv95 = fpext float %mul94 to double
  %mul96 = fmul double %div92, %conv95
  %m_pfOrderWeights97 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call98 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights97, i64 2) #3
  %37 = load float, float* %call98, align 4
  %conv99 = fpext float %37 to double
  %mul100 = fmul double %mul96, %conv99
  %conv101 = fptrunc double %mul100 to float
  %m_pfCoeff102 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call103 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff102, i64 8) #3
  store float %conv101, float* %call103, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.then48, %if.end45
  %38 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder105 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %38, i32 0, i32 1
  %39 = load i32, i32* %m_nOrder105, align 8
  %cmp106 = icmp uge i32 %39, 3
  br i1 %cmp106, label %if.then107, label %if.end208

if.then107:                                       ; preds = %if.end104
  %call108 = call double @sqrt(double 6.250000e-01) #3
  %m_polPosition109 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth110 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition109, i32 0, i32 0
  %40 = load float, float* %fAzimuth110, align 8
  %mul111 = fmul float 3.000000e+00, %40
  %call112 = call float @sinf(float %mul111) #3
  %41 = load float, float* %fCosElev, align 4
  %call113 = call float @powf(float %41, float 3.000000e+00) #3
  %mul114 = fmul float %call112, %call113
  %conv115 = fpext float %mul114 to double
  %mul116 = fmul double %call108, %conv115
  %m_pfOrderWeights117 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call118 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights117, i64 3) #3
  %42 = load float, float* %call118, align 4
  %conv119 = fpext float %42 to double
  %mul120 = fmul double %mul116, %conv119
  %conv121 = fptrunc double %mul120 to float
  %m_pfCoeff122 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call123 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff122, i64 9) #3
  store float %conv121, float* %call123, align 4
  %call124 = call double @sqrt(double 1.500000e+01) #3
  %div125 = fdiv double %call124, 2.000000e+00
  %43 = load float, float* %fSin2Azim, align 4
  %44 = load float, float* %fSinElev, align 4
  %mul126 = fmul float %43, %44
  %45 = load float, float* %fCosElev, align 4
  %call127 = call float @powf(float %45, float 2.000000e+00) #3
  %mul128 = fmul float %mul126, %call127
  %conv129 = fpext float %mul128 to double
  %mul130 = fmul double %div125, %conv129
  %m_pfOrderWeights131 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call132 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights131, i64 3) #3
  %46 = load float, float* %call132, align 4
  %conv133 = fpext float %46 to double
  %mul134 = fmul double %mul130, %conv133
  %conv135 = fptrunc double %mul134 to float
  %m_pfCoeff136 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call137 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff136, i64 10) #3
  store float %conv135, float* %call137, align 4
  %call138 = call double @sqrt(double 3.750000e-01) #3
  %47 = load float, float* %fSinAzim, align 4
  %48 = load float, float* %fCosElev, align 4
  %mul139 = fmul float %47, %48
  %49 = load float, float* %fSinElev, align 4
  %call140 = call float @powf(float %49, float 2.000000e+00) #3
  %mul141 = fmul float 5.000000e+00, %call140
  %sub142 = fsub float %mul141, 1.000000e+00
  %mul143 = fmul float %mul139, %sub142
  %conv144 = fpext float %mul143 to double
  %mul145 = fmul double %call138, %conv144
  %m_pfOrderWeights146 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call147 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights146, i64 3) #3
  %50 = load float, float* %call147, align 4
  %conv148 = fpext float %50 to double
  %mul149 = fmul double %mul145, %conv148
  %conv150 = fptrunc double %mul149 to float
  %m_pfCoeff151 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call152 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff151, i64 11) #3
  store float %conv150, float* %call152, align 4
  %51 = load float, float* %fSinElev, align 4
  %52 = load float, float* %fSinElev, align 4
  %call153 = call float @powf(float %52, float 2.000000e+00) #3
  %mul154 = fmul float 5.000000e+00, %call153
  %sub155 = fsub float %mul154, 3.000000e+00
  %mul156 = fmul float %51, %sub155
  %mul157 = fmul float %mul156, 5.000000e-01
  %m_pfOrderWeights158 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call159 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights158, i64 3) #3
  %53 = load float, float* %call159, align 4
  %mul160 = fmul float %mul157, %53
  %m_pfCoeff161 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call162 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff161, i64 12) #3
  store float %mul160, float* %call162, align 4
  %call163 = call double @sqrt(double 3.750000e-01) #3
  %54 = load float, float* %fCosAzim, align 4
  %55 = load float, float* %fCosElev, align 4
  %mul164 = fmul float %54, %55
  %56 = load float, float* %fSinElev, align 4
  %call165 = call float @powf(float %56, float 2.000000e+00) #3
  %mul166 = fmul float 5.000000e+00, %call165
  %sub167 = fsub float %mul166, 1.000000e+00
  %mul168 = fmul float %mul164, %sub167
  %conv169 = fpext float %mul168 to double
  %mul170 = fmul double %call163, %conv169
  %m_pfOrderWeights171 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call172 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights171, i64 3) #3
  %57 = load float, float* %call172, align 4
  %conv173 = fpext float %57 to double
  %mul174 = fmul double %mul170, %conv173
  %conv175 = fptrunc double %mul174 to float
  %m_pfCoeff176 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call177 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff176, i64 13) #3
  store float %conv175, float* %call177, align 4
  %call178 = call double @sqrt(double 1.500000e+01) #3
  %div179 = fdiv double %call178, 2.000000e+00
  %58 = load float, float* %fCos2Azim, align 4
  %59 = load float, float* %fSinElev, align 4
  %mul180 = fmul float %58, %59
  %60 = load float, float* %fCosElev, align 4
  %call181 = call float @powf(float %60, float 2.000000e+00) #3
  %mul182 = fmul float %mul180, %call181
  %conv183 = fpext float %mul182 to double
  %mul184 = fmul double %div179, %conv183
  %m_pfOrderWeights185 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call186 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights185, i64 3) #3
  %61 = load float, float* %call186, align 4
  %conv187 = fpext float %61 to double
  %mul188 = fmul double %mul184, %conv187
  %conv189 = fptrunc double %mul188 to float
  %m_pfCoeff190 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call191 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff190, i64 14) #3
  store float %conv189, float* %call191, align 4
  %call192 = call double @sqrt(double 6.250000e-01) #3
  %m_polPosition193 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth194 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition193, i32 0, i32 0
  %62 = load float, float* %fAzimuth194, align 8
  %mul195 = fmul float 3.000000e+00, %62
  %call196 = call float @cosf(float %mul195) #3
  %63 = load float, float* %fCosElev, align 4
  %call197 = call float @powf(float %63, float 3.000000e+00) #3
  %mul198 = fmul float %call196, %call197
  %conv199 = fpext float %mul198 to double
  %mul200 = fmul double %call192, %conv199
  %m_pfOrderWeights201 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call202 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights201, i64 3) #3
  %64 = load float, float* %call202, align 4
  %conv203 = fpext float %64 to double
  %mul204 = fmul double %mul200, %conv203
  %conv205 = fptrunc double %mul204 to float
  %m_pfCoeff206 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call207 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff206, i64 15) #3
  store float %conv205, float* %call207, align 4
  br label %if.end208

if.end208:                                        ; preds = %if.then107, %if.end104
  br label %if.end277

if.else:                                          ; preds = %entry
  %65 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder209 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %65, i32 0, i32 1
  %66 = load i32, i32* %m_nOrder209, align 8
  %cmp210 = icmp uge i32 %66, 0
  br i1 %cmp210, label %if.then211, label %if.end216

if.then211:                                       ; preds = %if.else
  %m_pfOrderWeights212 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call213 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights212, i64 0) #3
  %67 = load float, float* %call213, align 4
  %m_pfCoeff214 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call215 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff214, i64 0) #3
  store float %67, float* %call215, align 4
  br label %if.end216

if.end216:                                        ; preds = %if.then211, %if.else
  %68 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder217 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %68, i32 0, i32 1
  %69 = load i32, i32* %m_nOrder217, align 8
  %cmp218 = icmp uge i32 %69, 1
  br i1 %cmp218, label %if.then219, label %if.end232

if.then219:                                       ; preds = %if.end216
  %70 = load float, float* %fCosAzim, align 4
  %71 = load float, float* %fCosElev, align 4
  %mul220 = fmul float %70, %71
  %m_pfOrderWeights221 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call222 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights221, i64 1) #3
  %72 = load float, float* %call222, align 4
  %mul223 = fmul float %mul220, %72
  %m_pfCoeff224 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call225 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff224, i64 1) #3
  store float %mul223, float* %call225, align 4
  %73 = load float, float* %fSinAzim, align 4
  %74 = load float, float* %fCosElev, align 4
  %mul226 = fmul float %73, %74
  %m_pfOrderWeights227 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call228 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights227, i64 1) #3
  %75 = load float, float* %call228, align 4
  %mul229 = fmul float %mul226, %75
  %m_pfCoeff230 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call231 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff230, i64 2) #3
  store float %mul229, float* %call231, align 4
  br label %if.end232

if.end232:                                        ; preds = %if.then219, %if.end216
  %76 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder233 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %76, i32 0, i32 1
  %77 = load i32, i32* %m_nOrder233, align 8
  %cmp234 = icmp uge i32 %77, 2
  br i1 %cmp234, label %if.then235, label %if.end250

if.then235:                                       ; preds = %if.end232
  %78 = load float, float* %fCos2Azim, align 4
  %79 = load float, float* %fCosElev, align 4
  %call236 = call float @powf(float %79, float 2.000000e+00) #3
  %mul237 = fmul float %78, %call236
  %m_pfOrderWeights238 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call239 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights238, i64 2) #3
  %80 = load float, float* %call239, align 4
  %mul240 = fmul float %mul237, %80
  %m_pfCoeff241 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call242 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff241, i64 3) #3
  store float %mul240, float* %call242, align 4
  %81 = load float, float* %fSin2Azim, align 4
  %82 = load float, float* %fCosElev, align 4
  %call243 = call float @powf(float %82, float 2.000000e+00) #3
  %mul244 = fmul float %81, %call243
  %m_pfOrderWeights245 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call246 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights245, i64 2) #3
  %83 = load float, float* %call246, align 4
  %mul247 = fmul float %mul244, %83
  %m_pfCoeff248 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call249 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff248, i64 4) #3
  store float %mul247, float* %call249, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then235, %if.end232
  %84 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder251 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %84, i32 0, i32 1
  %85 = load i32, i32* %m_nOrder251, align 8
  %cmp252 = icmp uge i32 %85, 3
  br i1 %cmp252, label %if.then253, label %if.end276

if.then253:                                       ; preds = %if.end250
  %m_polPosition254 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth255 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition254, i32 0, i32 0
  %86 = load float, float* %fAzimuth255, align 8
  %mul256 = fmul float 3.000000e+00, %86
  %call257 = call float @cosf(float %mul256) #3
  %87 = load float, float* %fCosElev, align 4
  %call258 = call float @powf(float %87, float 3.000000e+00) #3
  %mul259 = fmul float %call257, %call258
  %m_pfOrderWeights260 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call261 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights260, i64 3) #3
  %88 = load float, float* %call261, align 4
  %mul262 = fmul float %mul259, %88
  %m_pfCoeff263 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call264 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff263, i64 5) #3
  store float %mul262, float* %call264, align 4
  %m_polPosition265 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %fAzimuth266 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition265, i32 0, i32 0
  %89 = load float, float* %fAzimuth266, align 8
  %mul267 = fmul float 3.000000e+00, %89
  %call268 = call float @sinf(float %mul267) #3
  %90 = load float, float* %fCosElev, align 4
  %call269 = call float @powf(float %90, float 3.000000e+00) #3
  %mul270 = fmul float %call268, %call269
  %m_pfOrderWeights271 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %call272 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights271, i64 3) #3
  %91 = load float, float* %call272, align 4
  %mul273 = fmul float %mul270, %91
  %m_pfCoeff274 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %call275 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff274, i64 6) #3
  store float %mul273, float* %call275, align 4
  br label %if.end276

if.end276:                                        ; preds = %if.then253, %if.end250
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.end208
  store i32 0, i32* %ni, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end277
  %92 = load i32, i32* %ni, align 4
  %93 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %93, i32 0, i32 4
  %94 = load i32, i32* %m_nChannelCount, align 8
  %cmp278 = icmp ult i32 %92, %94
  br i1 %cmp278, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 4
  %95 = load float, float* %m_fGain, align 4
  %m_pfCoeff279 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %96 = load i32, i32* %ni, align 4
  %conv280 = zext i32 %96 to i64
  %call281 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff279, i64 %conv280) #3
  %97 = load float, float* %call281, align 4
  %mul282 = fmul float %97, %95
  store float %mul282, float* %call281, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %98 = load i32, i32* %ni, align 4
  %inc = add i32 %98, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #2

; Function Attrs: nounwind
declare dso_local float @sinf(float) #2

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load float*, float** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds float, float* %1, i64 %2
  ret float* %add.ptr
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #2

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* %this, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) unnamed_addr #6 align 2 {
entry:
  %polPosition = alloca %struct.PolarPoint, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %polPosition.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %polPosition.coerce1, float* %1, align 4
  %2 = bitcast %struct.PolarPoint* %polPosition to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %4 = bitcast %struct.PolarPoint* %m_polPosition to i8*
  %5 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { <2 x float>, float } @_ZN16CAmbisonicSource11GetPositionEv(%class.CAmbisonicSource* %this) unnamed_addr #5 align 2 {
entry:
  %retval = alloca %struct.PolarPoint, align 4
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %tmp = alloca { <2 x float>, float }, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 3
  %0 = bitcast %struct.PolarPoint* %retval to i8*
  %1 = bitcast %struct.PolarPoint* %m_polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 8 %1, i64 12, i1 false)
  %2 = bitcast { <2 x float>, float }* %tmp to i8*
  %3 = bitcast %struct.PolarPoint* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 4 %3, i64 12, i1 false)
  %4 = load { <2 x float>, float }, { <2 x float>, float }* %tmp, align 8
  ret { <2 x float>, float } %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource14SetOrderWeightEjf(%class.CAmbisonicSource* %this, i32 %nOrder, float %fWeight) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %nOrder.addr = alloca i32, align 4
  %fWeight.addr = alloca float, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  store float %fWeight, float* %fWeight.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = load float, float* %fWeight.addr, align 4
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %1 = load i32, i32* %nOrder.addr, align 4
  %conv = zext i32 %1 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights, i64 %conv) #3
  store float %0, float* %call, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource17SetOrderWeightAllEf(%class.CAmbisonicSource* %this, float %fWeight) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %fWeight.addr = alloca float, align 4
  %niOrder = alloca i32, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store float %fWeight, float* %fWeight.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  store i32 0, i32* %niOrder, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niOrder, align 4
  %1 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 1
  %2 = load i32, i32* %m_nOrder, align 8
  %add = add i32 %2, 1
  %cmp = icmp ult i32 %0, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load float, float* %fWeight.addr, align 4
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %4 = load i32, i32* %niOrder, align 4
  %conv = zext i32 %4 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights, i64 %conv) #3
  store float %3, float* %call, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %niOrder, align 4
  %inc = add i32 %5, 1
  store i32 %inc, i32* %niOrder, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource14SetCoefficientEjf(%class.CAmbisonicSource* %this, i32 %nChannel, float %fCoeff) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %nChannel.addr = alloca i32, align 4
  %fCoeff.addr = alloca float, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store i32 %nChannel, i32* %nChannel.addr, align 4
  store float %fCoeff, float* %fCoeff.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = load float, float* %fCoeff.addr, align 4
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %1 = load i32, i32* %nChannel.addr, align 4
  %conv = zext i32 %1 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 %conv) #3
  store float %0, float* %call, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN16CAmbisonicSource14GetOrderWeightEj(%class.CAmbisonicSource* %this, i32 %nOrder) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %nOrder.addr = alloca i32, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  %0 = load i32, i32* %nOrder.addr, align 4
  %conv = zext i32 %0 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfOrderWeights, i64 %conv) #3
  %1 = load float, float* %call, align 4
  ret float %1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* %this, i32 %nChannel) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %nChannel.addr = alloca i32, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store i32 %nChannel, i32* %nChannel.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  %0 = load i32, i32* %nChannel.addr, align 4
  %conv = zext i32 %0 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 %conv) #3
  %1 = load float, float* %call, align 4
  ret float %1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicSource7SetGainEf(%class.CAmbisonicSource* %this, float %fGain) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  %fGain.addr = alloca float, align 4
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  store float %fGain, float* %fGain.addr, align 4
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = load float, float* %fGain.addr, align 4
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 4
  store float %0, float* %m_fGain, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN16CAmbisonicSource7GetGainEv(%class.CAmbisonicSource* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 4
  %0 = load float, float* %m_fGain, align 4
  ret float %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8CBFormatC2Ev(%class.CBFormat* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CBFormat* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfData) #3
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  call void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EEC2Ev(%"class.std::unique_ptr"* %m_ppfChannels) #3
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  store i32 0, i32* %m_nSamples, align 8
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  store i32 0, i32* %m_nDataLength, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EEC2Ev(%"class.std::unique_ptr"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  invoke void @_ZNSt5tupleIJPPfSt14default_deleteIA_S0_EEEC2Ev(%"class.std::tuple"* %_M_t)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN8CBFormat14GetSampleCountEv(%class.CBFormat* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_nSamples, align 8
  ret i32 %0
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleCount) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CBFormat*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nSampleCount.addr = alloca i32, align 4
  %success = alloca i8, align 1
  %niChannel = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nSampleCount, i32* %nSampleCount.addr, align 4
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nSampleCount.addr, align 4
  %call = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nSampleCount.addr, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  store i32 %5, i32* %m_nSamples, align 8
  %m_nSamples4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %6 = load i32, i32* %m_nSamples4, align 8
  %7 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %7, i32 0, i32 4
  %8 = load i32, i32* %m_nChannelCount, align 8
  %mul = mul i32 %6, %8
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  store i32 %mul, i32* %m_nDataLength, align 4
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  %m_nDataLength5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %9 = load i32, i32* %m_nDataLength5, align 4
  %conv = zext i32 %9 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %m_pfData, i64 %conv)
  %m_pfData6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  %call7 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfData6) #3
  %10 = bitcast float* %call7 to i8*
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %11 = load i32, i32* %m_nDataLength8, align 4
  %conv9 = zext i32 %11 to i64
  %mul10 = mul i64 %conv9, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %mul10, i1 false)
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %12 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount11 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %12, i32 0, i32 4
  %13 = load i32, i32* %m_nChannelCount11, align 8
  %conv12 = zext i32 %13 to i64
  %14 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv12, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %call13 = call i8* @_Znam(i64 %17) #18
  %18 = bitcast i8* %call13 to float**
  call void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_(%"class.std::unique_ptr"* %m_ppfChannels, float** %18) #3
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load i32, i32* %niChannel, align 4
  %20 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount14 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %20, i32 0, i32 4
  %21 = load i32, i32* %m_nChannelCount14, align 8
  %cmp = icmp ult i32 %19, %21
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pfData15 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  %22 = load i32, i32* %niChannel, align 4
  %m_nSamples16 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %23 = load i32, i32* %m_nSamples16, align 8
  %mul17 = mul i32 %22, %23
  %conv18 = zext i32 %mul17 to i64
  %call19 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfData15, i64 %conv18) #3
  %m_ppfChannels20 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %24 = load i32, i32* %niChannel, align 4
  %conv21 = zext i32 %24 to i64
  %call22 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels20, i64 %conv21)
  store float* %call19, float** %call22, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %niChannel, align 4
  %inc = add i32 %25, 1
  store i32 %inc, i32* %niChannel, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %for.end, %if.then
  %26 = load i1, i1* %retval, align 1
  ret i1 %26
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %this, i64 %__new_size) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__new_size.addr = alloca i64, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__new_size, i64* %__new_size.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load i64, i64* %__new_size.addr, align 8
  %call = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %__new_size.addr, align 8
  %call2 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %sub = sub i64 %1, %call2
  call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this1, i64 %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load i64, i64* %__new_size.addr, align 8
  %call3 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp4 = icmp ult i64 %2, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %3 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %4 = load float*, float** %_M_start, align 8
  %5 = load i64, i64* %__new_size.addr, align 8
  %add.ptr = getelementptr inbounds float, float* %4, i64 %5
  call void @_ZNSt6vectorIfSaIfEE15_M_erase_at_endEPf(%"class.std::vector.0"* %this1, float* %add.ptr) #3
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %this) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load float*, float** %_M_start, align 8
  %call = invoke float* @_ZNKSt6vectorIfSaIfEE11_M_data_ptrIfEEPT_S4_(%"class.std::vector.0"* %this1, float* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret float* %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_(%"class.std::unique_ptr"* %this, float** %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  %__p.addr = alloca float**, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  store float** %__p, float*** %__p.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float*** @_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple"* dereferenceable(8) %_M_t) #3
  call void @_ZSt4swapIPPfEvRT_S3_(float*** dereferenceable(8) %call, float*** dereferenceable(8) %__p.addr) #3
  %0 = load float**, float*** %__p.addr, align 8
  %cmp = icmp ne float** %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete"* @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr"* %this1) #3
  %1 = load float**, float*** %__p.addr, align 8
  invoke void @_ZNKSt14default_deleteIA_PfEclEPS0_(%"struct.std::default_delete"* %call2, float** %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znam(i64) #9

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %this, i64 %__i) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  %__i.addr = alloca i64, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  store i64 %__i, i64* %__i.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %call = call float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr"* %this1) #3
  %0 = load i64, i64* %__i.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %call, i64 %0
  ret float** %arrayidx
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8CBFormat5ResetEv(%class.CBFormat* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfData) #3
  %0 = bitcast float* %call to i8*
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %1 = load i32, i32* %m_nDataLength, align 4
  %conv = zext i32 %1 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8CBFormat7RefreshEv(%class.CBFormat* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8CBFormat12InsertStreamEPfjj(%class.CBFormat* %this, float* %pfData, i32 %nChannel, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %pfData.addr = alloca float*, align 8
  %nChannel.addr = alloca i32, align 4
  %nSamples.addr = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %pfData, float** %pfData.addr, align 8
  store i32 %nChannel, i32* %nChannel.addr, align 4
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %0 = load i32, i32* %nChannel.addr, align 4
  %conv = zext i32 %0 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %1 = load float*, float** %call, align 8
  %2 = bitcast float* %1 to i8*
  %3 = load float*, float** %pfData.addr, align 8
  %4 = bitcast float* %3 to i8*
  %5 = load i32, i32* %nSamples.addr, align 4
  %conv2 = zext i32 %5 to i64
  %mul = mul i64 %conv2, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %4, i64 %mul, i1 false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8CBFormat13ExtractStreamEPfjj(%class.CBFormat* %this, float* %pfData, i32 %nChannel, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %pfData.addr = alloca float*, align 8
  %nChannel.addr = alloca i32, align 4
  %nSamples.addr = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %pfData, float** %pfData.addr, align 8
  store i32 %nChannel, i32* %nChannel.addr, align 4
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = load float*, float** %pfData.addr, align 8
  %1 = bitcast float* %0 to i8*
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %2 = load i32, i32* %nChannel.addr, align 4
  %conv = zext i32 %2 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %3 = load float*, float** %call, align 8
  %4 = bitcast float* %3 to i8*
  %5 = load i32, i32* %nSamples.addr, align 4
  %conv2 = zext i32 %5 to i64
  %mul = mul i64 %conv2, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %4, i64 %mul, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8CBFormataSERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #5 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfData) #3
  %0 = bitcast float* %call to i8*
  %1 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_pfData2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %1, i32 0, i32 3
  %call3 = call float* @_ZNKSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfData2) #3
  %2 = bitcast float* %call3 to i8*
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %3 = load i32, i32* %m_nDataLength, align 4
  %conv = zext i32 %3 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %2, i64 %mul, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNKSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %this) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load float*, float** %_M_start, align 8
  %call = invoke float* @_ZNKSt6vectorIfSaIfEE11_M_data_ptrIfEEPT_S4_(%"class.std::vector.0"* %this1, float* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret float* %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @_ZN8CBFormateqERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #5 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %0, i32 0, i32 2
  %1 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %1 to i1
  %conv = zext i1 %tobool to i32
  %2 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %3 = bitcast %class.CBFormat* %2 to %class.CAmbisonicBase*
  %m_b3D2 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %3, i32 0, i32 2
  %4 = load i8, i8* %m_b3D2, align 4
  %tobool3 = trunc i8 %4 to i1
  %conv4 = zext i1 %tobool3 to i32
  %cmp = icmp eq i32 %conv, %conv4
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %5 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %5, i32 0, i32 1
  %6 = load i32, i32* %m_nOrder, align 8
  %7 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %8 = bitcast %class.CBFormat* %7 to %class.CAmbisonicBase*
  %m_nOrder5 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 1
  %9 = load i32, i32* %m_nOrder5, align 8
  %cmp6 = icmp eq i32 %6, %9
  br i1 %cmp6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %10 = load i32, i32* %m_nDataLength, align 4
  %11 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %11, i32 0, i32 2
  %12 = load i32, i32* %m_nDataLength8, align 4
  %cmp9 = icmp eq i32 %10, %12
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true7
  store i1 true, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.else, %if.then
  %13 = load i1, i1* %retval, align 1
  ret i1 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @_ZN8CBFormatneERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #5 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %0, i32 0, i32 2
  %1 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %1 to i1
  %conv = zext i1 %tobool to i32
  %2 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %3 = bitcast %class.CBFormat* %2 to %class.CAmbisonicBase*
  %m_b3D2 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %3, i32 0, i32 2
  %4 = load i8, i8* %m_b3D2, align 4
  %tobool3 = trunc i8 %4 to i1
  %conv4 = zext i1 %tobool3 to i32
  %cmp = icmp ne i32 %conv, %conv4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %5, i32 0, i32 1
  %6 = load i32, i32* %m_nOrder, align 8
  %7 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %8 = bitcast %class.CBFormat* %7 to %class.CAmbisonicBase*
  %m_nOrder5 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 1
  %9 = load i32, i32* %m_nOrder5, align 8
  %cmp6 = icmp ne i32 %6, %9
  br i1 %cmp6, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 2
  %10 = load i32, i32* %m_nDataLength, align 4
  %11 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %11, i32 0, i32 2
  %12 = load i32, i32* %m_nDataLength8, align 4
  %cmp9 = icmp ne i32 %10, %12
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %lor.lhs.false7
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.else, %if.then
  %13 = load i1, i1* %retval, align 1
  ret i1 %13
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %5, i32 0, i32 4
  %6 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %6 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %7 = load float*, float** %call, align 8
  %8 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %8 to i64
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom
  %9 = load float, float* %arrayidx, align 4
  %m_ppfChannels5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv6 = zext i32 %10 to i64
  %call7 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels5, i64 %conv6)
  %11 = load float*, float** %call7, align 8
  %12 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idxprom8
  %13 = load float, float* %arrayidx9, align 4
  %add = fadd float %13, %9
  store float %add, float* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %niSample, align 4
  %inc = add i32 %14, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %15 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %15, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %5, i32 0, i32 4
  %6 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %6 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %7 = load float*, float** %call, align 8
  %8 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %8 to i64
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom
  %9 = load float, float* %arrayidx, align 4
  %m_ppfChannels5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv6 = zext i32 %10 to i64
  %call7 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels5, i64 %conv6)
  %11 = load float*, float** %call7, align 8
  %12 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idxprom8
  %13 = load float, float* %arrayidx9, align 4
  %sub = fsub float %13, %9
  store float %sub, float* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %niSample, align 4
  %inc = add i32 %14, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %15 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %15, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %5, i32 0, i32 4
  %6 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %6 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %7 = load float*, float** %call, align 8
  %8 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %8 to i64
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom
  %9 = load float, float* %arrayidx, align 4
  %m_ppfChannels5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv6 = zext i32 %10 to i64
  %call7 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels5, i64 %conv6)
  %11 = load float*, float** %call7, align 8
  %12 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idxprom8
  %13 = load float, float* %arrayidx9, align 4
  %mul = fmul float %13, %9
  store float %mul, float* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %niSample, align 4
  %inc = add i32 %14, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %15 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %15, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKS_(%class.CBFormat* %this, %class.CBFormat* dereferenceable(64) %bf) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %bf.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store %class.CBFormat* %bf, %class.CBFormat** %bf.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load %class.CBFormat*, %class.CBFormat** %bf.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %5, i32 0, i32 4
  %6 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %6 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %7 = load float*, float** %call, align 8
  %8 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %8 to i64
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom
  %9 = load float, float* %arrayidx, align 4
  %m_ppfChannels5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv6 = zext i32 %10 to i64
  %call7 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels5, i64 %conv6)
  %11 = load float*, float** %call7, align 8
  %12 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idxprom8
  %13 = load float, float* %arrayidx9, align 4
  %div = fdiv float %13, %9
  store float %div, float* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %niSample, align 4
  %inc = add i32 %14, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %15 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %15, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKf(%class.CBFormat* %this, float* dereferenceable(4) %fValue) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %fValue.addr = alloca float*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %fValue, float** %fValue.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load float*, float** %fValue.addr, align 8
  %6 = load float, float* %5, align 4
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %7 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %7 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %8 = load float*, float** %call, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %10 = load float, float* %arrayidx, align 4
  %add = fadd float %10, %6
  store float %add, float* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %11 = load i32, i32* %niSample, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end
  %12 = load i32, i32* %niChannel, align 4
  %inc6 = add i32 %12, 1
  store i32 %inc6, i32* %niChannel, align 4
  br label %for.cond

for.end7:                                         ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKf(%class.CBFormat* %this, float* dereferenceable(4) %fValue) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %fValue.addr = alloca float*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %fValue, float** %fValue.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load float*, float** %fValue.addr, align 8
  %6 = load float, float* %5, align 4
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %7 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %7 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %8 = load float*, float** %call, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %10 = load float, float* %arrayidx, align 4
  %sub = fsub float %10, %6
  store float %sub, float* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %11 = load i32, i32* %niSample, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end
  %12 = load i32, i32* %niChannel, align 4
  %inc6 = add i32 %12, 1
  store i32 %inc6, i32* %niChannel, align 4
  br label %for.cond

for.end7:                                         ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKf(%class.CBFormat* %this, float* dereferenceable(4) %fValue) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %fValue.addr = alloca float*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %fValue, float** %fValue.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load float*, float** %fValue.addr, align 8
  %6 = load float, float* %5, align 4
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %7 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %7 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %8 = load float*, float** %call, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %10 = load float, float* %arrayidx, align 4
  %mul = fmul float %10, %6
  store float %mul, float* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %11 = load i32, i32* %niSample, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end
  %12 = load i32, i32* %niChannel, align 4
  %inc6 = add i32 %12, 1
  store i32 %inc6, i32* %niChannel, align 4
  br label %for.cond

for.end7:                                         ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline optnone uwtable
define dso_local dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKf(%class.CBFormat* %this, float* dereferenceable(4) %fValue) #4 align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  %fValue.addr = alloca float*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  store float* %fValue, float** %fValue.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSamples, align 8
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load float*, float** %fValue.addr, align 8
  %6 = load float, float* %5, align 4
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  %7 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %7 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv)
  %8 = load float*, float** %call, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom
  %10 = load float, float* %arrayidx, align 4
  %div = fdiv float %10, %6
  store float %div, float* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %11 = load i32, i32* %niSample, align 4
  %inc = add i32 %11, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc5

for.inc5:                                         ; preds = %for.end
  %12 = load i32, i32* %niChannel, align 4
  %inc6 = add i32 %12, 1
  store i32 %inc6, i32* %niChannel, align 4
  br label %for.cond

for.end7:                                         ; preds = %for.cond
  ret %class.CBFormat* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* %0)
  %1 = bitcast %class.CAmbisonicEncoder* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicEncoderD0Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  call void @_ZN17CAmbisonicEncoderD1Ev(%class.CAmbisonicEncoder* %this1) #3
  %0 = bitcast %class.CAmbisonicEncoder* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #10

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nMisc.addr = alloca i32, align 4
  %success = alloca i8, align 1
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicSource*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nMisc.addr, align 4
  %call = call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1
  ret i1 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoder* %this, float* %pfSrc, i32 %nSamples, %class.CBFormat* %pfDst) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoder*, align 8
  %pfSrc.addr = alloca float*, align 8
  %nSamples.addr = alloca i32, align 4
  %pfDst.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CAmbisonicEncoder* %this, %class.CAmbisonicEncoder** %this.addr, align 8
  store float* %pfSrc, float** %pfSrc.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  store %class.CBFormat* %pfDst, %class.CBFormat** %pfDst.addr, align 8
  %this1 = load %class.CAmbisonicEncoder*, %class.CAmbisonicEncoder** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32, i32* %niChannel, align 4
  %1 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %niSample, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %niSample, align 4
  %4 = load i32, i32* %nSamples.addr, align 4
  %cmp3 = icmp ult i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %5 = load float*, float** %pfSrc.addr, align 8
  %6 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %6 to i64
  %arrayidx = getelementptr inbounds float, float* %5, i64 %idxprom
  %7 = load float, float* %arrayidx, align 4
  %8 = bitcast %class.CAmbisonicEncoder* %this1 to %class.CAmbisonicSource*
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %8, i32 0, i32 1
  %9 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %9 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 %conv) #3
  %10 = load float, float* %call, align 4
  %mul = fmul float %7, %10
  %11 = load %class.CBFormat*, %class.CBFormat** %pfDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %11, i32 0, i32 4
  %12 = load i32, i32* %niChannel, align 4
  %conv5 = zext i32 %12 to i64
  %call6 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv5)
  %13 = load float*, float** %call6, align 8
  %14 = load i32, i32* %niSample, align 4
  %idxprom7 = zext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 %idxprom7
  store float %mul, float* %arrayidx8, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %15 = load i32, i32* %niSample, align 4
  %inc = add i32 %15, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %16 = load i32, i32* %niChannel, align 4
  %inc10 = add i32 %16, 1
  store i32 %inc10, i32* %niChannel, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicEncoder*
  call void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* %0)
  %1 = bitcast %class.CAmbisonicEncoderDist* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 1
  store i32 0, i32* %m_nSampleRate, align 8
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  store float 0.000000e+00, float* %m_fDelay, align 4
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  store i32 0, i32* %m_nDelay, align 8
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  store i32 0, i32* %m_nDelayBufferLength, align 4
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  store float* null, float** %m_pfDelayBuffer, align 8
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  store i32 0, i32* %m_nIn, align 8
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  store i32 0, i32* %m_nOutA, align 4
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  store i32 0, i32* %m_nOutB, align 8
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  store float 5.000000e+00, float* %m_fRoomRadius, align 4
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 10
  store float 0.000000e+00, float* %m_fInteriorGain, align 8
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 11
  store float 0.000000e+00, float* %m_fExteriorGain, align 4
  %2 = bitcast %class.CAmbisonicEncoderDist* %this1 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %2, align 8
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable, i64 2
  %3 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn, align 8
  %call = invoke zeroext i1 %3(%class.CAmbisonicEncoderDist* %this1, i32 1, i1 zeroext true, i32 44100)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicEncoder*
  call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %7) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoderDist* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8
  %tobool = icmp ne float* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_pfDelayBuffer2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %2 = load float*, float** %m_pfDelayBuffer2, align 8
  %isnull = icmp eq float* %2, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %3 = bitcast float* %2 to i8*
  call void @_ZdaPv(i8* %3) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  %4 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicEncoder*
  call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %4) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDistD0Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  call void @_ZN21CAmbisonicEncoderDistD1Ev(%class.CAmbisonicEncoderDist* %this1) #3
  %0 = bitcast %class.CAmbisonicEncoderDist* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN21CAmbisonicEncoderDist9ConfigureEjbj(%class.CAmbisonicEncoderDist* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nSampleRate.addr = alloca i32, align 4
  %success = alloca i8, align 1
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nSampleRate, i32* %nSampleRate.addr, align 4
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicEncoder*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %call = call zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %0, i32 %1, i1 zeroext %tobool, i32 0)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %3 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %3 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %nSampleRate.addr, align 4
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 1
  store i32 %4, i32* %m_nSampleRate, align 8
  %m_nSampleRate4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 1
  %5 = load i32, i32* %m_nSampleRate4, align 8
  %conv = uitofp i32 %5 to float
  %mul = fmul float 0x3FDBE82FA0000000, %conv
  %add = fadd float %mul, 5.000000e-01
  %conv5 = fptoui float %add to i32
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  store i32 %conv5, i32* %m_nDelayBufferLength, align 4
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %6 = load float*, float** %m_pfDelayBuffer, align 8
  %tobool6 = icmp ne float* %6, null
  br i1 %tobool6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %m_pfDelayBuffer8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %7 = load float*, float** %m_pfDelayBuffer8, align 8
  %isnull = icmp eq float* %7, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then7
  %8 = bitcast float* %7 to i8*
  call void @_ZdaPv(i8* %8) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %delete.end, %if.end
  %m_nDelayBufferLength10 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %9 = load i32, i32* %m_nDelayBufferLength10, align 4
  %conv11 = zext i32 %9 to i64
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv11, i64 4)
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 -1, i64 %12
  %call12 = call i8* @_Znam(i64 %13) #18
  %14 = bitcast i8* %call12 to float*
  %m_pfDelayBuffer13 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  store float* %14, float** %m_pfDelayBuffer13, align 8
  %15 = bitcast %class.CAmbisonicEncoderDist* %this1 to void (%class.CAmbisonicEncoderDist*)***
  %vtable = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %15, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable, i64 3
  %16 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn, align 8
  call void %16(%class.CAmbisonicEncoderDist* %this1)
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end9, %if.then
  %17 = load i1, i1* %retval, align 1
  ret i1 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDist5ResetEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %0 = load float*, float** %m_pfDelayBuffer, align 8
  %1 = bitcast float* %0 to i8*
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %2 = load i32, i32* %m_nDelayBufferLength, align 4
  %conv = zext i32 %2 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %3, i32 0, i32 3
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition, i32 0, i32 2
  %4 = load float, float* %fDistance, align 8
  %div = fdiv float %4, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 1
  %5 = load i32, i32* %m_nSampleRate, align 8
  %conv2 = uitofp i32 %5 to float
  %mul3 = fmul float %div, %conv2
  %add = fadd float %mul3, 5.000000e-01
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  store float %add, float* %m_fDelay, align 4
  %m_fDelay4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %6 = load float, float* %m_fDelay4, align 4
  %conv5 = fptosi float %6 to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8
  %m_nDelay6 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  %7 = load i32, i32* %m_nDelay6, align 8
  %conv7 = sitofp i32 %7 to float
  %m_fDelay8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %8 = load float, float* %m_fDelay8, align 4
  %sub = fsub float %8, %conv7
  store float %sub, float* %m_fDelay8, align 4
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  store i32 0, i32* %m_nIn, align 8
  %m_nIn9 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  %9 = load i32, i32* %m_nIn9, align 8
  %m_nDelay10 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  %10 = load i32, i32* %m_nDelay10, align 8
  %sub11 = sub nsw i32 %9, %10
  %m_nDelayBufferLength12 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %11 = load i32, i32* %m_nDelayBufferLength12, align 4
  %add13 = add i32 %sub11, %11
  %m_nDelayBufferLength14 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %12 = load i32, i32* %m_nDelayBufferLength14, align 4
  %rem = urem i32 %add13, %12
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4
  %m_nOutA15 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  %13 = load i32, i32* %m_nOutA15, align 4
  %add16 = add nsw i32 %13, 1
  %m_nDelayBufferLength17 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %14 = load i32, i32* %m_nDelayBufferLength17, align 4
  %rem18 = urem i32 %add16, %14
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  store i32 %rem18, i32* %m_nOutB, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDist7RefreshEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicEncoder*
  call void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* %0)
  %1 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %1, i32 0, i32 3
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition, i32 0, i32 2
  %2 = load float, float* %fDistance, align 8
  %conv = fpext float %2 to double
  %3 = call double @llvm.fabs.f64(double %conv)
  %div = fdiv double %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8
  %conv2 = uitofp i32 %4 to double
  %mul = fmul double %div, %conv2
  %conv3 = fptrunc double %mul to float
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  store float %conv3, float* %m_fDelay, align 4
  %m_fDelay4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %5 = load float, float* %m_fDelay4, align 4
  %conv5 = fptosi float %5 to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8
  %m_nDelay6 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  %6 = load i32, i32* %m_nDelay6, align 8
  %conv7 = sitofp i32 %6 to float
  %m_fDelay8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %7 = load float, float* %m_fDelay8, align 4
  %sub = fsub float %7, %conv7
  store float %sub, float* %m_fDelay8, align 4
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  %8 = load i32, i32* %m_nIn, align 8
  %m_nDelay9 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 3
  %9 = load i32, i32* %m_nDelay9, align 8
  %sub10 = sub nsw i32 %8, %9
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %10 = load i32, i32* %m_nDelayBufferLength, align 4
  %add = add i32 %sub10, %10
  %m_nDelayBufferLength11 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %11 = load i32, i32* %m_nDelayBufferLength11, align 4
  %rem = urem i32 %add, %11
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4
  %m_nOutA12 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  %12 = load i32, i32* %m_nOutA12, align 4
  %add13 = add nsw i32 %12, 1
  %m_nDelayBufferLength14 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %13 = load i32, i32* %m_nDelayBufferLength14, align 4
  %rem15 = urem i32 %add13, %13
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  store i32 %rem15, i32* %m_nOutB, align 8
  %14 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition16 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %14, i32 0, i32 3
  %fDistance17 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition16, i32 0, i32 2
  %15 = load float, float* %fDistance17, align 8
  %conv18 = fpext float %15 to double
  %16 = call double @llvm.fabs.f64(double %conv18)
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  %17 = load float, float* %m_fRoomRadius, align 4
  %conv19 = fpext float %17 to double
  %cmp = fcmp oge double %16, %conv19
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_fRoomRadius20 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  %18 = load float, float* %m_fRoomRadius20, align 4
  %conv21 = fpext float %18 to double
  %19 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition22 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %19, i32 0, i32 3
  %fDistance23 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition22, i32 0, i32 2
  %20 = load float, float* %fDistance23, align 8
  %conv24 = fpext float %20 to double
  %21 = call double @llvm.fabs.f64(double %conv24)
  %div25 = fdiv double %conv21, %21
  %div26 = fdiv double %div25, 2.000000e+00
  %conv27 = fptrunc double %div26 to float
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 10
  store float %conv27, float* %m_fInteriorGain, align 8
  %m_fInteriorGain28 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 10
  %22 = load float, float* %m_fInteriorGain28, align 8
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 11
  store float %22, float* %m_fExteriorGain, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %23 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition29 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %23, i32 0, i32 3
  %fDistance30 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition29, i32 0, i32 2
  %24 = load float, float* %fDistance30, align 8
  %conv31 = fpext float %24 to double
  %25 = call double @llvm.fabs.f64(double %conv31)
  %m_fRoomRadius32 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  %26 = load float, float* %m_fRoomRadius32, align 4
  %conv33 = fpext float %26 to double
  %div34 = fdiv double %25, %conv33
  %sub35 = fsub double 2.000000e+00, %div34
  %div36 = fdiv double %sub35, 2.000000e+00
  %conv37 = fptrunc double %div36 to float
  %m_fInteriorGain38 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 10
  store float %conv37, float* %m_fInteriorGain38, align 8
  %27 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_polPosition39 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %27, i32 0, i32 3
  %fDistance40 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %m_polPosition39, i32 0, i32 2
  %28 = load float, float* %fDistance40, align 8
  %conv41 = fpext float %28 to double
  %29 = call double @llvm.fabs.f64(double %conv41)
  %m_fRoomRadius42 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  %30 = load float, float* %m_fRoomRadius42, align 4
  %conv43 = fpext float %30 to double
  %div44 = fdiv double %29, %conv43
  %div45 = fdiv double %div44, 2.000000e+00
  %conv46 = fptrunc double %div45 to float
  %m_fExteriorGain47 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 11
  store float %conv46, float* %m_fExteriorGain47, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #8

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %this, float* %pfSrc, i32 %nSamples, %class.CBFormat* %pfDst) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  %pfSrc.addr = alloca float*, align 8
  %nSamples.addr = alloca i32, align 4
  %pfDst.addr = alloca %class.CBFormat*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  %fSrcSample = alloca float, align 4
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  store float* %pfSrc, float** %pfSrc.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  store %class.CBFormat* %pfDst, %class.CBFormat** %pfDst.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  store float 0.000000e+00, float* %fSrcSample, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc42, %entry
  %0 = load i32, i32* %niSample, align 4
  %1 = load i32, i32* %nSamples.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end44

for.body:                                         ; preds = %for.cond
  %2 = load float*, float** %pfSrc.addr, align 8
  %3 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom
  %4 = load float, float* %arrayidx, align 4
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %5 = load float*, float** %m_pfDelayBuffer, align 8
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  %6 = load i32, i32* %m_nIn, align 8
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 %idxprom2
  store float %4, float* %arrayidx3, align 4
  %m_pfDelayBuffer4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %7 = load float*, float** %m_pfDelayBuffer4, align 8
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  %8 = load i32, i32* %m_nOutA, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds float, float* %7, i64 %idxprom5
  %9 = load float, float* %arrayidx6, align 4
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %10 = load float, float* %m_fDelay, align 4
  %sub = fsub float 1.000000e+00, %10
  %mul = fmul float %9, %sub
  %m_pfDelayBuffer7 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 5
  %11 = load float*, float** %m_pfDelayBuffer7, align 8
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  %12 = load i32, i32* %m_nOutB, align 8
  %idxprom8 = sext i32 %12 to i64
  %arrayidx9 = getelementptr inbounds float, float* %11, i64 %idxprom8
  %13 = load float, float* %arrayidx9, align 4
  %m_fDelay10 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 2
  %14 = load float, float* %m_fDelay10, align 4
  %mul11 = fmul float %13, %14
  %add = fadd float %mul, %mul11
  store float %add, float* %fSrcSample, align 4
  %15 = load float, float* %fSrcSample, align 4
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 10
  %16 = load float, float* %m_fInteriorGain, align 8
  %mul12 = fmul float %15, %16
  %17 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %17, i32 0, i32 1
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 0) #3
  %18 = load float, float* %call, align 4
  %mul13 = fmul float %mul12, %18
  %19 = load %class.CBFormat*, %class.CBFormat** %pfDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i32 0, i32 4
  %call14 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 0)
  %20 = load float*, float** %call14, align 8
  %21 = load i32, i32* %niSample, align 4
  %idxprom15 = zext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds float, float* %20, i64 %idxprom15
  store float %mul13, float* %arrayidx16, align 4
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 11
  %22 = load float, float* %m_fExteriorGain, align 4
  %23 = load float, float* %fSrcSample, align 4
  %mul17 = fmul float %23, %22
  store float %mul17, float* %fSrcSample, align 4
  store i32 1, i32* %niChannel, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %niChannel, align 4
  %25 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %25, i32 0, i32 4
  %26 = load i32, i32* %m_nChannelCount, align 8
  %cmp19 = icmp ult i32 %24, %26
  br i1 %cmp19, label %for.body20, label %for.end

for.body20:                                       ; preds = %for.cond18
  %27 = load float, float* %fSrcSample, align 4
  %28 = bitcast %class.CAmbisonicEncoderDist* %this1 to %class.CAmbisonicSource*
  %m_pfCoeff21 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %28, i32 0, i32 1
  %29 = load i32, i32* %niChannel, align 4
  %conv = zext i32 %29 to i64
  %call22 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff21, i64 %conv) #3
  %30 = load float, float* %call22, align 4
  %mul23 = fmul float %27, %30
  %31 = load %class.CBFormat*, %class.CBFormat** %pfDst.addr, align 8
  %m_ppfChannels24 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %31, i32 0, i32 4
  %32 = load i32, i32* %niChannel, align 4
  %conv25 = zext i32 %32 to i64
  %call26 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels24, i64 %conv25)
  %33 = load float*, float** %call26, align 8
  %34 = load i32, i32* %niSample, align 4
  %idxprom27 = zext i32 %34 to i64
  %arrayidx28 = getelementptr inbounds float, float* %33, i64 %idxprom27
  store float %mul23, float* %arrayidx28, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body20
  %35 = load i32, i32* %niChannel, align 4
  %inc = add i32 %35, 1
  store i32 %inc, i32* %niChannel, align 4
  br label %for.cond18

for.end:                                          ; preds = %for.cond18
  %m_nIn29 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  %36 = load i32, i32* %m_nIn29, align 8
  %add30 = add nsw i32 %36, 1
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %37 = load i32, i32* %m_nDelayBufferLength, align 4
  %rem = urem i32 %add30, %37
  %m_nIn31 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 6
  store i32 %rem, i32* %m_nIn31, align 8
  %m_nOutA32 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  %38 = load i32, i32* %m_nOutA32, align 4
  %add33 = add nsw i32 %38, 1
  %m_nDelayBufferLength34 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %39 = load i32, i32* %m_nDelayBufferLength34, align 4
  %rem35 = urem i32 %add33, %39
  %m_nOutA36 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 7
  store i32 %rem35, i32* %m_nOutA36, align 4
  %m_nOutB37 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  %40 = load i32, i32* %m_nOutB37, align 8
  %add38 = add nsw i32 %40, 1
  %m_nDelayBufferLength39 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 4
  %41 = load i32, i32* %m_nDelayBufferLength39, align 4
  %rem40 = urem i32 %add38, %41
  %m_nOutB41 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 8
  store i32 %rem40, i32* %m_nOutB41, align 8
  br label %for.inc42

for.inc42:                                        ; preds = %for.end
  %42 = load i32, i32* %niSample, align 4
  %inc43 = add i32 %42, 1
  store i32 %inc43, i32* %niSample, align 4
  br label %for.cond

for.end44:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN21CAmbisonicEncoderDist13SetRoomRadiusEf(%class.CAmbisonicEncoderDist* %this, float %fRoomRadius) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  %fRoomRadius.addr = alloca float, align 4
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  store float %fRoomRadius, float* %fRoomRadius.addr, align 4
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %0 = load float, float* %fRoomRadius.addr, align 4
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  store float %0, float* %m_fRoomRadius, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN21CAmbisonicEncoderDist13GetRoomRadiusEv(%class.CAmbisonicEncoderDist* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicEncoderDist*, align 8
  store %class.CAmbisonicEncoderDist* %this, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %this1 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %this.addr, align 8
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this1, i32 0, i32 9
  %0 = load float, float* %m_fRoomRadius, align 4
  ret float %0
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CAmbisonicProcessor* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  invoke void @_ZN11OrientationC2Efff(%class.Orientation* %m_orientation, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  store float* null, float** %m_pfTempSample, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  store float* null, float** %m_pfScratchBufferA, align 8
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 4
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  store %struct.kiss_fft_cpx** null, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %m_pcpScratch, align 8
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  store float** null, float*** %m_pfOverlap, align 8
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  %5 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %5) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN11OrientationC2Efff(%class.Orientation* %this, float %fYaw, float %fPitch, float %fRoll) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.Orientation*, align 8
  %fYaw.addr = alloca float, align 4
  %fPitch.addr = alloca float, align 4
  %fRoll.addr = alloca float, align 4
  %fCosYaw = alloca float, align 4
  %fSinYaw = alloca float, align 4
  %fCosRoll = alloca float, align 4
  %fSinRoll = alloca float, align 4
  %fCosPitch = alloca float, align 4
  %fSinPitch = alloca float, align 4
  %r33 = alloca float, align 4
  %r32 = alloca float, align 4
  %r31 = alloca float, align 4
  %r23 = alloca float, align 4
  %r13 = alloca float, align 4
  store %class.Orientation* %this, %class.Orientation** %this.addr, align 8
  store float %fYaw, float* %fYaw.addr, align 4
  store float %fPitch, float* %fPitch.addr, align 4
  store float %fRoll, float* %fRoll.addr, align 4
  %this1 = load %class.Orientation*, %class.Orientation** %this.addr, align 8
  %fYaw2 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 0
  %0 = load float, float* %fYaw.addr, align 4
  store float %0, float* %fYaw2, align 4
  %fPitch3 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 1
  %1 = load float, float* %fPitch.addr, align 4
  store float %1, float* %fPitch3, align 4
  %fRoll4 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 2
  %2 = load float, float* %fRoll.addr, align 4
  store float %2, float* %fRoll4, align 4
  %3 = load float, float* %fYaw.addr, align 4
  %call = call float @cosf(float %3) #3
  store float %call, float* %fCosYaw, align 4
  %4 = load float, float* %fYaw.addr, align 4
  %call5 = call float @sinf(float %4) #3
  store float %call5, float* %fSinYaw, align 4
  %5 = load float, float* %fRoll.addr, align 4
  %call6 = call float @cosf(float %5) #3
  store float %call6, float* %fCosRoll, align 4
  %6 = load float, float* %fRoll.addr, align 4
  %call7 = call float @sinf(float %6) #3
  store float %call7, float* %fSinRoll, align 4
  %7 = load float, float* %fPitch.addr, align 4
  %call8 = call float @cosf(float %7) #3
  store float %call8, float* %fCosPitch, align 4
  %8 = load float, float* %fPitch.addr, align 4
  %call9 = call float @sinf(float %8) #3
  store float %call9, float* %fSinPitch, align 4
  %9 = load float, float* %fCosPitch, align 4
  %10 = load float, float* %fCosRoll, align 4
  %mul = fmul float %9, %10
  store float %mul, float* %r33, align 4
  %11 = load float, float* %r33, align 4
  %cmp = fcmp oeq float %11, 1.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %fBeta = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 4
  store float 0.000000e+00, float* %fBeta, align 4
  %fGamma = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 5
  store float 0.000000e+00, float* %fGamma, align 4
  %12 = load float, float* %fSinYaw, align 4
  %conv = fpext float %12 to double
  %13 = load float, float* %fCosYaw, align 4
  %conv10 = fpext float %13 to double
  %call11 = call double @atan2(double %conv, double %conv10) #3
  %conv12 = fptrunc double %call11 to float
  %fAlpha = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 3
  store float %conv12, float* %fAlpha, align 4
  br label %if.end48

if.else:                                          ; preds = %entry
  %14 = load float, float* %r33, align 4
  %cmp13 = fcmp oeq float %14, -1.000000e+00
  br i1 %cmp13, label %if.then14, label %if.else22

if.then14:                                        ; preds = %if.else
  %fBeta15 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 4
  store float 0x400921FB60000000, float* %fBeta15, align 4
  %fGamma16 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 5
  store float 0.000000e+00, float* %fGamma16, align 4
  %15 = load float, float* %fSinYaw, align 4
  %sub = fsub float -0.000000e+00, %15
  %conv17 = fpext float %sub to double
  %16 = load float, float* %fCosYaw, align 4
  %conv18 = fpext float %16 to double
  %call19 = call double @atan2(double %conv17, double %conv18) #3
  %conv20 = fptrunc double %call19 to float
  %fAlpha21 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 3
  store float %conv20, float* %fAlpha21, align 4
  br label %if.end

if.else22:                                        ; preds = %if.else
  %17 = load float, float* %fCosYaw, align 4
  %sub23 = fsub float -0.000000e+00, %17
  %18 = load float, float* %fSinRoll, align 4
  %mul24 = fmul float %sub23, %18
  %19 = load float, float* %fCosRoll, align 4
  %20 = load float, float* %fSinPitch, align 4
  %mul25 = fmul float %19, %20
  %21 = load float, float* %fSinYaw, align 4
  %mul26 = fmul float %mul25, %21
  %add = fadd float %mul24, %mul26
  store float %add, float* %r32, align 4
  %22 = load float, float* %fCosRoll, align 4
  %23 = load float, float* %fCosYaw, align 4
  %mul27 = fmul float %22, %23
  %24 = load float, float* %fSinPitch, align 4
  %mul28 = fmul float %mul27, %24
  %25 = load float, float* %fSinRoll, align 4
  %26 = load float, float* %fSinYaw, align 4
  %mul29 = fmul float %25, %26
  %add30 = fadd float %mul28, %mul29
  store float %add30, float* %r31, align 4
  %27 = load float, float* %r32, align 4
  %conv31 = fpext float %27 to double
  %28 = load float, float* %r31, align 4
  %conv32 = fpext float %28 to double
  %call33 = call double @atan2(double %conv31, double %conv32) #3
  %conv34 = fptrunc double %call33 to float
  %fAlpha35 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 3
  store float %conv34, float* %fAlpha35, align 4
  %29 = load float, float* %r33, align 4
  %conv36 = fpext float %29 to double
  %call37 = call double @acos(double %conv36) #3
  %conv38 = fptrunc double %call37 to float
  %fBeta39 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 4
  store float %conv38, float* %fBeta39, align 4
  %30 = load float, float* %fCosPitch, align 4
  %31 = load float, float* %fSinRoll, align 4
  %mul40 = fmul float %30, %31
  store float %mul40, float* %r23, align 4
  %32 = load float, float* %fSinPitch, align 4
  %sub41 = fsub float -0.000000e+00, %32
  store float %sub41, float* %r13, align 4
  %33 = load float, float* %r23, align 4
  %conv42 = fpext float %33 to double
  %34 = load float, float* %r13, align 4
  %sub43 = fsub float -0.000000e+00, %34
  %conv44 = fpext float %sub43 to double
  %call45 = call double @atan2(double %conv42, double %conv44) #3
  %conv46 = fptrunc double %call45 to float
  %fGamma47 = getelementptr inbounds %class.Orientation, %class.Orientation* %this1, i32 0, i32 5
  store float %conv46, float* %fGamma47, align 4
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then14
  br label %if.end48

if.end48:                                         ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %i = alloca i32, align 4
  %i44 = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicProcessor* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %1 = load float*, float** %m_pfTempSample, align 8
  %tobool = icmp ne float* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_pfTempSample2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %2 = load float*, float** %m_pfTempSample2, align 8
  %isnull = icmp eq float* %2, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %3 = bitcast float* %2 to i8*
  call void @_ZdaPv(i8* %3) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %4 = load float*, float** %m_pfScratchBufferA, align 8
  %tobool3 = icmp ne float* %4, null
  br i1 %tobool3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %m_pfScratchBufferA5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %5 = load float*, float** %m_pfScratchBufferA5, align 8
  %isnull6 = icmp eq float* %5, null
  br i1 %isnull6, label %delete.end8, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.then4
  %6 = bitcast float* %5 to i8*
  call void @_ZdaPv(i8* %6) #19
  br label %delete.end8

delete.end8:                                      ; preds = %delete.notnull7, %if.then4
  br label %if.end9

if.end9:                                          ; preds = %delete.end8, %if.end
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  %7 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8
  %tobool10 = icmp ne %struct.kiss_fftr_state* %7, null
  br i1 %tobool10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end9
  %m_pFFT_psych_cfg12 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  %8 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg12, align 8
  %9 = bitcast %struct.kiss_fftr_state* %8 to i8*
  call void @free(i8* %9) #3
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 4
  %10 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8
  %tobool14 = icmp ne %struct.kiss_fftr_state* %10, null
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end13
  %m_pIFFT_psych_cfg16 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 4
  %11 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg16, align 8
  %12 = bitcast %struct.kiss_fftr_state* %11 to i8*
  call void @free(i8* %12) #3
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %13 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8
  %tobool18 = icmp ne %struct.kiss_fft_cpx** %13, null
  br i1 %tobool18, label %if.then19, label %if.end34

if.then19:                                        ; preds = %if.end17
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then19
  %14 = load i32, i32* %i, align 4
  %15 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %15, i32 0, i32 1
  %16 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp ule i32 %14, %16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_ppcpPsychFilters20 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %17 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters20, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom = zext i32 %18 to i64
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %17, i64 %idxprom
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx, align 8
  %tobool21 = icmp ne %struct.kiss_fft_cpx* %19, null
  br i1 %tobool21, label %if.then22, label %if.end29

if.then22:                                        ; preds = %for.body
  %m_ppcpPsychFilters23 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %20 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters23, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom24 = zext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %20, i64 %idxprom24
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx25, align 8
  %isnull26 = icmp eq %struct.kiss_fft_cpx* %22, null
  br i1 %isnull26, label %delete.end28, label %delete.notnull27

delete.notnull27:                                 ; preds = %if.then22
  %23 = bitcast %struct.kiss_fft_cpx* %22 to i8*
  call void @_ZdaPv(i8* %23) #19
  br label %delete.end28

delete.end28:                                     ; preds = %delete.notnull27, %if.then22
  br label %if.end29

if.end29:                                         ; preds = %delete.end28, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end29
  %24 = load i32, i32* %i, align 4
  %inc = add i32 %24, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %m_ppcpPsychFilters30 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %25 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters30, align 8
  %isnull31 = icmp eq %struct.kiss_fft_cpx** %25, null
  br i1 %isnull31, label %delete.end33, label %delete.notnull32

delete.notnull32:                                 ; preds = %for.end
  %26 = bitcast %struct.kiss_fft_cpx** %25 to i8*
  call void @_ZdaPv(i8* %26) #19
  br label %delete.end33

delete.end33:                                     ; preds = %delete.notnull32, %for.end
  br label %if.end34

if.end34:                                         ; preds = %delete.end33, %if.end17
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %27 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8
  %tobool35 = icmp ne %struct.kiss_fft_cpx* %27, null
  br i1 %tobool35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %if.end34
  %m_pcpScratch37 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %28 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch37, align 8
  %isnull38 = icmp eq %struct.kiss_fft_cpx* %28, null
  br i1 %isnull38, label %delete.end40, label %delete.notnull39

delete.notnull39:                                 ; preds = %if.then36
  %29 = bitcast %struct.kiss_fft_cpx* %28 to i8*
  call void @_ZdaPv(i8* %29) #19
  br label %delete.end40

delete.end40:                                     ; preds = %delete.notnull39, %if.then36
  br label %if.end41

if.end41:                                         ; preds = %delete.end40, %if.end34
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %30 = load float**, float*** %m_pfOverlap, align 8
  %tobool42 = icmp ne float** %30, null
  br i1 %tobool42, label %if.then43, label %if.end67

if.then43:                                        ; preds = %if.end41
  store i32 0, i32* %i44, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc60, %if.then43
  %31 = load i32, i32* %i44, align 4
  %32 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %32, i32 0, i32 4
  %33 = load i32, i32* %m_nChannelCount, align 8
  %cmp46 = icmp ult i32 %31, %33
  br i1 %cmp46, label %for.body47, label %for.end62

for.body47:                                       ; preds = %for.cond45
  %m_pfOverlap48 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %34 = load float**, float*** %m_pfOverlap48, align 8
  %35 = load i32, i32* %i44, align 4
  %idxprom49 = zext i32 %35 to i64
  %arrayidx50 = getelementptr inbounds float*, float** %34, i64 %idxprom49
  %36 = load float*, float** %arrayidx50, align 8
  %tobool51 = icmp ne float* %36, null
  br i1 %tobool51, label %if.then52, label %if.end59

if.then52:                                        ; preds = %for.body47
  %m_pfOverlap53 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %37 = load float**, float*** %m_pfOverlap53, align 8
  %38 = load i32, i32* %i44, align 4
  %idxprom54 = zext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds float*, float** %37, i64 %idxprom54
  %39 = load float*, float** %arrayidx55, align 8
  %isnull56 = icmp eq float* %39, null
  br i1 %isnull56, label %delete.end58, label %delete.notnull57

delete.notnull57:                                 ; preds = %if.then52
  %40 = bitcast float* %39 to i8*
  call void @_ZdaPv(i8* %40) #19
  br label %delete.end58

delete.end58:                                     ; preds = %delete.notnull57, %if.then52
  br label %if.end59

if.end59:                                         ; preds = %delete.end58, %for.body47
  br label %for.inc60

for.inc60:                                        ; preds = %if.end59
  %41 = load i32, i32* %i44, align 4
  %inc61 = add i32 %41, 1
  store i32 %inc61, i32* %i44, align 4
  br label %for.cond45

for.end62:                                        ; preds = %for.cond45
  %m_pfOverlap63 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %42 = load float**, float*** %m_pfOverlap63, align 8
  %isnull64 = icmp eq float** %42, null
  br i1 %isnull64, label %delete.end66, label %delete.notnull65

delete.notnull65:                                 ; preds = %for.end62
  %43 = bitcast float** %42 to i8*
  call void @_ZdaPv(i8* %43) #19
  br label %delete.end66

delete.end66:                                     ; preds = %delete.notnull65, %for.end62
  br label %if.end67

if.end67:                                         ; preds = %delete.end66, %if.end41
  %44 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %44) #3
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessorD0Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  call void @_ZN19CAmbisonicProcessorD1Ev(%class.CAmbisonicProcessor* %this1) #3
  %0 = bitcast %class.CAmbisonicProcessor* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nBlockSize, i32 %nMisc) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nBlockSize.addr = alloca i32, align 4
  %nMisc.addr = alloca i32, align 4
  %success = alloca i8, align 1
  %nbTaps = alloca i32, align 4
  %i = alloca i32, align 4
  %i45 = alloca i32, align 4
  %pfPsychIR = alloca %"class.std::vector.7", align 8
  %i62 = alloca i32, align 4
  %ref.tmp = alloca float*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i_m = alloca i32, align 4
  %i85 = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nBlockSize, i32* %nBlockSize.addr, align 4
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nMisc.addr, align 4
  %call = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %5 = load float*, float** %m_pfTempSample, align 8
  %tobool4 = icmp ne float* %5, null
  br i1 %tobool4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %m_pfTempSample6 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %6 = load float*, float** %m_pfTempSample6, align 8
  %isnull = icmp eq float* %6, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then5
  %7 = bitcast float* %6 to i8*
  call void @_ZdaPv(i8* %7) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then5
  br label %if.end7

if.end7:                                          ; preds = %delete.end, %if.end
  %8 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 4
  %9 = load i32, i32* %m_nChannelCount, align 8
  %conv = zext i32 %9 to i64
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 4)
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 -1, i64 %12
  %call8 = call i8* @_Znam(i64 %13) #18
  %14 = bitcast i8* %call8 to float*
  %m_pfTempSample9 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  store float* %14, float** %m_pfTempSample9, align 8
  %m_pfTempSample10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %15 = load float*, float** %m_pfTempSample10, align 8
  %16 = bitcast float* %15 to i8*
  %17 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount11 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %17, i32 0, i32 4
  %18 = load i32, i32* %m_nChannelCount11, align 8
  %conv12 = zext i32 %18 to i64
  %mul = mul i64 %conv12, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 %mul, i1 false)
  %19 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %19, i32 0, i32 5
  store i8 1, i8* %m_bOpt, align 4
  store i32 101, i32* %nbTaps, align 4
  %20 = load i32, i32* %nBlockSize.addr, align 4
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  store i32 %20, i32* %m_nBlockSize, align 4
  %21 = load i32, i32* %nbTaps, align 4
  %m_nTaps = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  store i32 %21, i32* %m_nTaps, align 8
  %m_nBlockSize13 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %22 = load i32, i32* %m_nBlockSize13, align 4
  %m_nTaps14 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %23 = load i32, i32* %m_nTaps14, align 8
  %cmp = icmp ult i32 %22, %23
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end7
  %m_nBlockSize15 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %24 = load i32, i32* %m_nBlockSize15, align 4
  %sub = sub i32 %24, 1
  br label %cond.end

cond.false:                                       ; preds = %if.end7
  %m_nTaps16 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %25 = load i32, i32* %m_nTaps16, align 8
  %sub17 = sub i32 %25, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub17, %cond.false ]
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  store i32 %cond, i32* %m_nOverlapLength, align 4
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  store i32 1, i32* %m_nFFTSize, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %m_nFFTSize18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %26 = load i32, i32* %m_nFFTSize18, align 8
  %m_nBlockSize19 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %27 = load i32, i32* %m_nBlockSize19, align 4
  %m_nTaps20 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %28 = load i32, i32* %m_nTaps20, align 8
  %add = add i32 %27, %28
  %m_nOverlapLength21 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  %29 = load i32, i32* %m_nOverlapLength21, align 4
  %add22 = add i32 %add, %29
  %cmp23 = icmp ult i32 %26, %add22
  br i1 %cmp23, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %m_nFFTSize24 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %30 = load i32, i32* %m_nFFTSize24, align 8
  %shl = shl i32 %30, 1
  store i32 %shl, i32* %m_nFFTSize24, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %m_nFFTSize25 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %31 = load i32, i32* %m_nFFTSize25, align 8
  %div = udiv i32 %31, 2
  %add26 = add i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 11
  store i32 %add26, i32* %m_nFFTBins, align 8
  %m_nFFTSize27 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %32 = load i32, i32* %m_nFFTSize27, align 8
  %conv28 = uitofp i32 %32 to float
  %div29 = fdiv float 1.000000e+00, %conv28
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 12
  store float %div29, float* %m_fFFTScaler, align 4
  %33 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount30 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %33, i32 0, i32 4
  %34 = load i32, i32* %m_nChannelCount30, align 8
  %conv31 = zext i32 %34 to i64
  %35 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv31, i64 8)
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 -1, i64 %37
  %call32 = call i8* @_Znam(i64 %38) #18
  %39 = bitcast i8* %call32 to float**
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  store float** %39, float*** %m_pfOverlap, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %40 = load i32, i32* %i, align 4
  %41 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount33 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %41, i32 0, i32 4
  %42 = load i32, i32* %m_nChannelCount33, align 8
  %cmp34 = icmp ult i32 %40, %42
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_nOverlapLength35 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  %43 = load i32, i32* %m_nOverlapLength35, align 4
  %conv36 = zext i32 %43 to i64
  %44 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv36, i64 4)
  %45 = extractvalue { i64, i1 } %44, 1
  %46 = extractvalue { i64, i1 } %44, 0
  %47 = select i1 %45, i64 -1, i64 %46
  %call37 = call i8* @_Znam(i64 %47) #18
  %48 = bitcast i8* %call37 to float*
  %m_pfOverlap38 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %49 = load float**, float*** %m_pfOverlap38, align 8
  %50 = load i32, i32* %i, align 4
  %idxprom = zext i32 %50 to i64
  %arrayidx = getelementptr inbounds float*, float** %49, i64 %idxprom
  store float* %48, float** %arrayidx, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %i, align 4
  %inc = add i32 %51, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %m_nFFTSize39 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %52 = load i32, i32* %m_nFFTSize39, align 8
  %conv40 = zext i32 %52 to i64
  %53 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv40, i64 4)
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 -1, i64 %55
  %call41 = call i8* @_Znam(i64 %56) #18
  %57 = bitcast i8* %call41 to float*
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  store float* %57, float** %m_pfScratchBufferA, align 8
  %58 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %58, i32 0, i32 1
  %59 = load i32, i32* %m_nOrder, align 8
  %add42 = add i32 %59, 1
  %conv43 = zext i32 %add42 to i64
  %60 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv43, i64 8)
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = select i1 %61, i64 -1, i64 %62
  %call44 = call i8* @_Znam(i64 %63) #18
  %64 = bitcast i8* %call44 to %struct.kiss_fft_cpx**
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  store %struct.kiss_fft_cpx** %64, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8
  store i32 0, i32* %i45, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %for.end
  %65 = load i32, i32* %i45, align 4
  %66 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder47 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %66, i32 0, i32 1
  %67 = load i32, i32* %m_nOrder47, align 8
  %cmp48 = icmp ule i32 %65, %67
  br i1 %cmp48, label %for.body49, label %for.end58

for.body49:                                       ; preds = %for.cond46
  %m_nFFTBins50 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 11
  %68 = load i32, i32* %m_nFFTBins50, align 8
  %conv51 = zext i32 %68 to i64
  %69 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv51, i64 8)
  %70 = extractvalue { i64, i1 } %69, 1
  %71 = extractvalue { i64, i1 } %69, 0
  %72 = select i1 %70, i64 -1, i64 %71
  %call52 = call i8* @_Znam(i64 %72) #18
  %73 = bitcast i8* %call52 to %struct.kiss_fft_cpx*
  %m_ppcpPsychFilters53 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %74 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters53, align 8
  %75 = load i32, i32* %i45, align 4
  %idxprom54 = zext i32 %75 to i64
  %arrayidx55 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %74, i64 %idxprom54
  store %struct.kiss_fft_cpx* %73, %struct.kiss_fft_cpx** %arrayidx55, align 8
  br label %for.inc56

for.inc56:                                        ; preds = %for.body49
  %76 = load i32, i32* %i45, align 4
  %inc57 = add i32 %76, 1
  store i32 %inc57, i32* %i45, align 4
  br label %for.cond46

for.end58:                                        ; preds = %for.cond46
  %m_nFFTBins59 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 11
  %77 = load i32, i32* %m_nFFTBins59, align 8
  %conv60 = zext i32 %77 to i64
  %78 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv60, i64 8)
  %79 = extractvalue { i64, i1 } %78, 1
  %80 = extractvalue { i64, i1 } %78, 0
  %81 = select i1 %79, i64 -1, i64 %80
  %call61 = call i8* @_Znam(i64 %81) #18
  %82 = bitcast i8* %call61 to %struct.kiss_fft_cpx*
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  store %struct.kiss_fft_cpx* %82, %struct.kiss_fft_cpx** %m_pcpScratch, align 8
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev(%"class.std::vector.7"* %pfPsychIR) #3
  store i32 0, i32* %i62, align 4
  br label %for.cond63

for.cond63:                                       ; preds = %for.inc71, %for.end58
  %83 = load i32, i32* %i62, align 4
  %84 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder64 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %84, i32 0, i32 1
  %85 = load i32, i32* %m_nOrder64, align 8
  %cmp65 = icmp ule i32 %83, %85
  br i1 %cmp65, label %for.body66, label %for.end73

for.body66:                                       ; preds = %for.cond63
  %m_nTaps67 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %86 = load i32, i32* %m_nTaps67, align 8
  %conv68 = zext i32 %86 to i64
  %87 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv68, i64 4)
  %88 = extractvalue { i64, i1 } %87, 1
  %89 = extractvalue { i64, i1 } %87, 0
  %90 = select i1 %88, i64 -1, i64 %89
  %call69 = invoke i8* @_Znam(i64 %90) #18
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body66
  %91 = bitcast i8* %call69 to float*
  store float* %91, float** %ref.tmp, align 8
  invoke void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_(%"class.std::vector.7"* %pfPsychIR, float** dereferenceable(8) %ref.tmp)
          to label %invoke.cont70 unwind label %lpad

invoke.cont70:                                    ; preds = %invoke.cont
  br label %for.inc71

for.inc71:                                        ; preds = %invoke.cont70
  %92 = load i32, i32* %i62, align 4
  %inc72 = add i32 %92, 1
  store i32 %inc72, i32* %i62, align 4
  br label %for.cond63

lpad:                                             ; preds = %for.end181, %sw.bb163, %sw.bb149, %sw.bb135, %sw.bb120, %sw.bb106, %sw.bb, %invoke.cont76, %invoke.cont74, %for.end73, %invoke.cont, %for.body66
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %exn.slot, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %ehselector.slot, align 4
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* %pfPsychIR) #3
  br label %eh.resume

for.end73:                                        ; preds = %for.cond63
  %96 = bitcast %class.CAmbisonicProcessor* %this1 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %96, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 3
  %97 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  invoke void %97(%class.CAmbisonicProcessor* %this1)
          to label %invoke.cont74 unwind label %lpad

invoke.cont74:                                    ; preds = %for.end73
  %m_nFFTSize75 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %98 = load i32, i32* %m_nFFTSize75, align 8
  %call77 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %98, i32 0, i8* null, i64* null)
          to label %invoke.cont76 unwind label %lpad

invoke.cont76:                                    ; preds = %invoke.cont74
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  store %struct.kiss_fftr_state* %call77, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8
  %m_nFFTSize78 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %99 = load i32, i32* %m_nFFTSize78, align 8
  %call80 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %99, i32 1, i8* null, i64* null)
          to label %invoke.cont79 unwind label %lpad

invoke.cont79:                                    ; preds = %invoke.cont76
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 4
  store %struct.kiss_fftr_state* %call80, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8
  store i32 0, i32* %i_m, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc204, %invoke.cont79
  %100 = load i32, i32* %i_m, align 4
  %101 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder82 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %101, i32 0, i32 1
  %102 = load i32, i32* %m_nOrder82, align 8
  %cmp83 = icmp ule i32 %100, %102
  br i1 %cmp83, label %for.body84, label %for.end206

for.body84:                                       ; preds = %for.cond81
  store i32 0, i32* %i85, align 4
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc179, %for.body84
  %103 = load i32, i32* %i85, align 4
  %m_nTaps87 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %104 = load i32, i32* %m_nTaps87, align 8
  %cmp88 = icmp ult i32 %103, %104
  br i1 %cmp88, label %for.body89, label %for.end181

for.body89:                                       ; preds = %for.cond86
  %105 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %105, i32 0, i32 2
  %106 = load i8, i8* %m_b3D, align 4
  %tobool90 = trunc i8 %106 to i1
  br i1 %tobool90, label %if.then91, label %if.else

if.then91:                                        ; preds = %for.body89
  %107 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder92 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %107, i32 0, i32 1
  %108 = load i32, i32* %m_nOrder92, align 8
  switch i32 %108, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb106
    i32 3, label %sw.bb120
  ]

sw.bb:                                            ; preds = %if.then91
  %109 = load i32, i32* %i_m, align 4
  %idxprom93 = zext i32 %109 to i64
  %arrayidx94 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_3D, i64 0, i64 %idxprom93
  %110 = load i32, i32* %i85, align 4
  %idxprom95 = zext i32 %110 to i64
  %arrayidx96 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx94, i64 0, i64 %idxprom95
  %111 = load i16, i16* %arrayidx96, align 2
  %conv97 = sext i16 %111 to i32
  %conv98 = sitofp i32 %conv97 to float
  %mul99 = fmul float 2.000000e+00, %conv98
  %div100 = fdiv float %mul99, 3.276700e+04
  %112 = load i32, i32* %i_m, align 4
  %conv101 = zext i32 %112 to i64
  %call102 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv101) #3
  %113 = load i32, i32* %i85, align 4
  %conv103 = zext i32 %113 to i64
  %call105 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call102, i64 %conv103)
          to label %invoke.cont104 unwind label %lpad

invoke.cont104:                                   ; preds = %sw.bb
  store float %div100, float* %call105, align 4
  br label %sw.epilog

sw.bb106:                                         ; preds = %if.then91
  %114 = load i32, i32* %i_m, align 4
  %idxprom107 = zext i32 %114 to i64
  %arrayidx108 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_3D, i64 0, i64 %idxprom107
  %115 = load i32, i32* %i85, align 4
  %idxprom109 = zext i32 %115 to i64
  %arrayidx110 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx108, i64 0, i64 %idxprom109
  %116 = load i16, i16* %arrayidx110, align 2
  %conv111 = sext i16 %116 to i32
  %conv112 = sitofp i32 %conv111 to float
  %mul113 = fmul float 2.000000e+00, %conv112
  %div114 = fdiv float %mul113, 3.276700e+04
  %117 = load i32, i32* %i_m, align 4
  %conv115 = zext i32 %117 to i64
  %call116 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv115) #3
  %118 = load i32, i32* %i85, align 4
  %conv117 = zext i32 %118 to i64
  %call119 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call116, i64 %conv117)
          to label %invoke.cont118 unwind label %lpad

invoke.cont118:                                   ; preds = %sw.bb106
  store float %div114, float* %call119, align 4
  br label %sw.epilog

sw.bb120:                                         ; preds = %if.then91
  %119 = load i32, i32* %i_m, align 4
  %idxprom121 = zext i32 %119 to i64
  %arrayidx122 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* bitcast (<{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }>* @_ZL14third_order_3D to [4 x [101 x i16]]*), i64 0, i64 %idxprom121
  %120 = load i32, i32* %i85, align 4
  %idxprom123 = zext i32 %120 to i64
  %arrayidx124 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx122, i64 0, i64 %idxprom123
  %121 = load i16, i16* %arrayidx124, align 2
  %conv125 = sext i16 %121 to i32
  %conv126 = sitofp i32 %conv125 to float
  %mul127 = fmul float 2.000000e+00, %conv126
  %div128 = fdiv float %mul127, 3.276700e+04
  %122 = load i32, i32* %i_m, align 4
  %conv129 = zext i32 %122 to i64
  %call130 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv129) #3
  %123 = load i32, i32* %i85, align 4
  %conv131 = zext i32 %123 to i64
  %call133 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call130, i64 %conv131)
          to label %invoke.cont132 unwind label %lpad

invoke.cont132:                                   ; preds = %sw.bb120
  store float %div128, float* %call133, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then91, %invoke.cont132, %invoke.cont118, %invoke.cont104
  br label %if.end178

if.else:                                          ; preds = %for.body89
  %124 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder134 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %124, i32 0, i32 1
  %125 = load i32, i32* %m_nOrder134, align 8
  switch i32 %125, label %sw.epilog177 [
    i32 1, label %sw.bb135
    i32 2, label %sw.bb149
    i32 3, label %sw.bb163
  ]

sw.bb135:                                         ; preds = %if.else
  %126 = load i32, i32* %i_m, align 4
  %idxprom136 = zext i32 %126 to i64
  %arrayidx137 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_2D, i64 0, i64 %idxprom136
  %127 = load i32, i32* %i85, align 4
  %idxprom138 = zext i32 %127 to i64
  %arrayidx139 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx137, i64 0, i64 %idxprom138
  %128 = load i16, i16* %arrayidx139, align 2
  %conv140 = sext i16 %128 to i32
  %conv141 = sitofp i32 %conv140 to float
  %mul142 = fmul float 2.000000e+00, %conv141
  %div143 = fdiv float %mul142, 3.276700e+04
  %129 = load i32, i32* %i_m, align 4
  %conv144 = zext i32 %129 to i64
  %call145 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv144) #3
  %130 = load i32, i32* %i85, align 4
  %conv146 = zext i32 %130 to i64
  %call148 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call145, i64 %conv146)
          to label %invoke.cont147 unwind label %lpad

invoke.cont147:                                   ; preds = %sw.bb135
  store float %div143, float* %call148, align 4
  br label %sw.epilog177

sw.bb149:                                         ; preds = %if.else
  %131 = load i32, i32* %i_m, align 4
  %idxprom150 = zext i32 %131 to i64
  %arrayidx151 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_2D, i64 0, i64 %idxprom150
  %132 = load i32, i32* %i85, align 4
  %idxprom152 = zext i32 %132 to i64
  %arrayidx153 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx151, i64 0, i64 %idxprom152
  %133 = load i16, i16* %arrayidx153, align 2
  %conv154 = sext i16 %133 to i32
  %conv155 = sitofp i32 %conv154 to float
  %mul156 = fmul float 2.000000e+00, %conv155
  %div157 = fdiv float %mul156, 3.276700e+04
  %134 = load i32, i32* %i_m, align 4
  %conv158 = zext i32 %134 to i64
  %call159 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv158) #3
  %135 = load i32, i32* %i85, align 4
  %conv160 = zext i32 %135 to i64
  %call162 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call159, i64 %conv160)
          to label %invoke.cont161 unwind label %lpad

invoke.cont161:                                   ; preds = %sw.bb149
  store float %div157, float* %call162, align 4
  br label %sw.epilog177

sw.bb163:                                         ; preds = %if.else
  %136 = load i32, i32* %i_m, align 4
  %idxprom164 = zext i32 %136 to i64
  %arrayidx165 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* @_ZL14third_order_2D, i64 0, i64 %idxprom164
  %137 = load i32, i32* %i85, align 4
  %idxprom166 = zext i32 %137 to i64
  %arrayidx167 = getelementptr inbounds [101 x i16], [101 x i16]* %arrayidx165, i64 0, i64 %idxprom166
  %138 = load i16, i16* %arrayidx167, align 2
  %conv168 = sext i16 %138 to i32
  %conv169 = sitofp i32 %conv168 to float
  %mul170 = fmul float 2.000000e+00, %conv169
  %div171 = fdiv float %mul170, 3.276700e+04
  %139 = load i32, i32* %i_m, align 4
  %conv172 = zext i32 %139 to i64
  %call173 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv172) #3
  %140 = load i32, i32* %i85, align 4
  %conv174 = zext i32 %140 to i64
  %call176 = invoke dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %call173, i64 %conv174)
          to label %invoke.cont175 unwind label %lpad

invoke.cont175:                                   ; preds = %sw.bb163
  store float %div171, float* %call176, align 4
  br label %sw.epilog177

sw.epilog177:                                     ; preds = %if.else, %invoke.cont175, %invoke.cont161, %invoke.cont147
  br label %if.end178

if.end178:                                        ; preds = %sw.epilog177, %sw.epilog
  br label %for.inc179

for.inc179:                                       ; preds = %if.end178
  %141 = load i32, i32* %i85, align 4
  %inc180 = add i32 %141, 1
  store i32 %inc180, i32* %i85, align 4
  br label %for.cond86

for.end181:                                       ; preds = %for.cond86
  %m_pfScratchBufferA182 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %142 = load float*, float** %m_pfScratchBufferA182, align 8
  %143 = bitcast float* %142 to i8*
  %144 = load i32, i32* %i_m, align 4
  %conv183 = zext i32 %144 to i64
  %call184 = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %pfPsychIR, i64 %conv183) #3
  %call185 = call float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EE3getEv(%"class.std::unique_ptr.12"* %call184) #3
  %145 = bitcast float* %call185 to i8*
  %m_nTaps186 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %146 = load i32, i32* %m_nTaps186, align 8
  %conv187 = zext i32 %146 to i64
  %mul188 = mul i64 %conv187, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %145, i64 %mul188, i1 false)
  %m_pfScratchBufferA189 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %147 = load float*, float** %m_pfScratchBufferA189, align 8
  %m_nTaps190 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %148 = load i32, i32* %m_nTaps190, align 8
  %idxprom191 = zext i32 %148 to i64
  %arrayidx192 = getelementptr inbounds float, float* %147, i64 %idxprom191
  %149 = bitcast float* %arrayidx192 to i8*
  %m_nFFTSize193 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %150 = load i32, i32* %m_nFFTSize193, align 8
  %m_nTaps194 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 9
  %151 = load i32, i32* %m_nTaps194, align 8
  %sub195 = sub i32 %150, %151
  %conv196 = zext i32 %sub195 to i64
  %mul197 = mul i64 %conv196, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %149, i8 0, i64 %mul197, i1 false)
  %m_pFFT_psych_cfg198 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  %152 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg198, align 8
  %m_pfScratchBufferA199 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %153 = load float*, float** %m_pfScratchBufferA199, align 8
  %m_ppcpPsychFilters200 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %154 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters200, align 8
  %155 = load i32, i32* %i_m, align 4
  %idxprom201 = zext i32 %155 to i64
  %arrayidx202 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %154, i64 %idxprom201
  %156 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx202, align 8
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %152, float* %153, %struct.kiss_fft_cpx* %156)
          to label %invoke.cont203 unwind label %lpad

invoke.cont203:                                   ; preds = %for.end181
  br label %for.inc204

for.inc204:                                       ; preds = %invoke.cont203
  %157 = load i32, i32* %i_m, align 4
  %inc205 = add i32 %157, 1
  store i32 %inc205, i32* %i_m, align 4
  br label %for.cond81

for.end206:                                       ; preds = %for.cond81
  store i1 true, i1* %retval, align 1
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* %pfPsychIR) #3
  br label %return

return:                                           ; preds = %for.end206, %if.then
  %158 = load i1, i1* %retval, align 1
  ret i1 %158

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val207 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val207
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev(%"class.std::vector.7"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.8"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12emplace_backIJPfEEEvDpOT_(%"class.std::vector.7"* %this, float** dereferenceable(8) %__args) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  %__args.addr = alloca float**, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  store float** %__args, float*** %__args.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %2, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %3 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8
  %cmp = icmp ne %"class.std::unique_ptr.12"* %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %4, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl3 to %"class.std::allocator.9"*
  %6 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  %7 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish5, align 8
  %8 = load float**, float*** %__args.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %8) #3
  call void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE9constructIS4_JPfEEEvRS5_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %5, %"class.std::unique_ptr.12"* %7, float** dereferenceable(8) %call)
  %9 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %9, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish7, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %10, i32 1
  store %"class.std::unique_ptr.12"* %incdec.ptr, %"class.std::unique_ptr.12"** %_M_finish7, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load float**, float*** %__args.addr, align 8
  %call8 = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %11) #3
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_(%"class.std::vector.7"* %this1, float** dereferenceable(8) %call8)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare dso_local %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEixEm(%"class.std::vector.7"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %1, i64 %2
  ret %"class.std::unique_ptr.12"* %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %this, i64 %__i) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__i.addr = alloca i64, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  store i64 %__i, i64* %__i.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %call = call float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EE3getEv(%"class.std::unique_ptr.12"* %this1) #3
  %0 = load i64, i64* %__i.addr, align 8
  %arrayidx = getelementptr inbounds float, float* %call, i64 %0
  ret float* %arrayidx
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EE3getEv(%"class.std::unique_ptr.12"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_(%"class.std::tuple.13"* dereferenceable(8) %_M_t) #3
  %0 = load float*, float** %call, align 8
  ret float* %0
}

declare dso_local void @kiss_fftr(%struct.kiss_fftr_state*, float*, %struct.kiss_fft_cpx*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8
  %2 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish, align 8
  %4 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %call = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %4) #3
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E(%"class.std::unique_ptr.12"* %1, %"class.std::unique_ptr.12"* %3, %"class.std::allocator.9"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"struct.std::_Vector_base.8"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"struct.std::_Vector_base.8"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor5ResetEv(%class.CAmbisonicProcessor* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %i = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1, i32 0, i32 4
  %2 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %3 = load float**, float*** %m_pfOverlap, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds float*, float** %3, i64 %idxprom
  %5 = load float*, float** %arrayidx, align 8
  %6 = bitcast float* %5 to i8*
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  %7 = load i32, i32* %m_nOverlapLength, align 4
  %conv = zext i32 %7 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 %mul, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor7RefreshEv(%class.CAmbisonicProcessor* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation, i32 0, i32 3
  %0 = load float, float* %fAlpha, align 4
  %call = call float @cosf(float %0) #3
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  store float %call, float* %m_fCosAlpha, align 8
  %m_orientation2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha3 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation2, i32 0, i32 3
  %1 = load float, float* %fAlpha3, align 4
  %call4 = call float @sinf(float %1) #3
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  store float %call4, float* %m_fSinAlpha, align 4
  %m_orientation5 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation5, i32 0, i32 4
  %2 = load float, float* %fBeta, align 8
  %call6 = call float @cosf(float %2) #3
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  store float %call6, float* %m_fCosBeta, align 8
  %m_orientation7 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta8 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation7, i32 0, i32 4
  %3 = load float, float* %fBeta8, align 8
  %call9 = call float @sinf(float %3) #3
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  store float %call9, float* %m_fSinBeta, align 4
  %m_orientation10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation10, i32 0, i32 5
  %4 = load float, float* %fGamma, align 4
  %call11 = call float @cosf(float %4) #3
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  store float %call11, float* %m_fCosGamma, align 8
  %m_orientation12 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma13 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation12, i32 0, i32 5
  %5 = load float, float* %fGamma13, align 4
  %call14 = call float @sinf(float %5) #3
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  store float %call14, float* %m_fSinGamma, align 4
  %m_orientation15 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha16 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation15, i32 0, i32 3
  %6 = load float, float* %fAlpha16, align 4
  %mul = fmul float 2.000000e+00, %6
  %call17 = call float @cosf(float %mul) #3
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 21
  store float %call17, float* %m_fCos2Alpha, align 8
  %m_orientation18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha19 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation18, i32 0, i32 3
  %7 = load float, float* %fAlpha19, align 4
  %mul20 = fmul float 2.000000e+00, %7
  %call21 = call float @sinf(float %mul20) #3
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 22
  store float %call21, float* %m_fSin2Alpha, align 4
  %m_orientation22 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta23 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation22, i32 0, i32 4
  %8 = load float, float* %fBeta23, align 8
  %mul24 = fmul float 2.000000e+00, %8
  %call25 = call float @cosf(float %mul24) #3
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  store float %call25, float* %m_fCos2Beta, align 8
  %m_orientation26 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta27 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation26, i32 0, i32 4
  %9 = load float, float* %fBeta27, align 8
  %mul28 = fmul float 2.000000e+00, %9
  %call29 = call float @sinf(float %mul28) #3
  %m_fSin2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 24
  store float %call29, float* %m_fSin2Beta, align 4
  %m_orientation30 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma31 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation30, i32 0, i32 5
  %10 = load float, float* %fGamma31, align 4
  %mul32 = fmul float 2.000000e+00, %10
  %call33 = call float @cosf(float %mul32) #3
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 25
  store float %call33, float* %m_fCos2Gamma, align 8
  %m_orientation34 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma35 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation34, i32 0, i32 5
  %11 = load float, float* %fGamma35, align 4
  %mul36 = fmul float 2.000000e+00, %11
  %call37 = call float @sinf(float %mul36) #3
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 26
  store float %call37, float* %m_fSin2Gamma, align 4
  %m_orientation38 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha39 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation38, i32 0, i32 3
  %12 = load float, float* %fAlpha39, align 4
  %mul40 = fmul float 3.000000e+00, %12
  %call41 = call float @cosf(float %mul40) #3
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 27
  store float %call41, float* %m_fCos3Alpha, align 8
  %m_orientation42 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fAlpha43 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation42, i32 0, i32 3
  %13 = load float, float* %fAlpha43, align 4
  %mul44 = fmul float 3.000000e+00, %13
  %call45 = call float @sinf(float %mul44) #3
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 28
  store float %call45, float* %m_fSin3Alpha, align 4
  %m_orientation46 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta47 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation46, i32 0, i32 4
  %14 = load float, float* %fBeta47, align 8
  %mul48 = fmul float 3.000000e+00, %14
  %call49 = call float @cosf(float %mul48) #3
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 29
  store float %call49, float* %m_fCos3Beta, align 8
  %m_orientation50 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fBeta51 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation50, i32 0, i32 4
  %15 = load float, float* %fBeta51, align 8
  %mul52 = fmul float 3.000000e+00, %15
  %call53 = call float @sinf(float %mul52) #3
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 30
  store float %call53, float* %m_fSin3Beta, align 4
  %m_orientation54 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma55 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation54, i32 0, i32 5
  %16 = load float, float* %fGamma55, align 4
  %mul56 = fmul float 3.000000e+00, %16
  %call57 = call float @cosf(float %mul56) #3
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 31
  store float %call57, float* %m_fCos3Gamma, align 8
  %m_orientation58 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %fGamma59 = getelementptr inbounds %class.Orientation, %class.Orientation* %m_orientation58, i32 0, i32 5
  %17 = load float, float* %fGamma59, align 4
  %mul60 = fmul float 3.000000e+00, %17
  %call61 = call float @sinf(float %mul60) #3
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 32
  store float %call61, float* %m_fSin3Gamma, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* %this, %class.Orientation* byval(%class.Orientation) align 8 %orientation) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %0 = bitcast %class.Orientation* %m_orientation to i8*
  %1 = bitcast %class.Orientation* %orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 4 %1, i64 24, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor14GetOrientationEv(%class.Orientation* noalias sret %agg.result, %class.CAmbisonicProcessor* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 1
  %0 = bitcast %class.Orientation* %agg.result to i8*
  %1 = bitcast %class.Orientation* %m_orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %0, i32 0, i32 5
  %1 = load i8, i8* %m_bOpt, align 4
  %tobool = trunc i8 %1 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %3 = load i32, i32* %nSamples.addr, align 4
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* %this1, %class.CBFormat* %2, i32 %3)
  br label %if.end

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 1
  %5 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp uge i32 %5, 1
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %6 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %7 = load i32, i32* %nSamples.addr, align 4
  call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this1, %class.CBFormat* %6, i32 %7)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder4 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 1
  %9 = load i32, i32* %m_nOrder4, align 8
  %cmp5 = icmp uge i32 %9, 2
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  %10 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %11 = load i32, i32* %nSamples.addr, align 4
  call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this1, %class.CBFormat* %10, i32 %11)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end3
  %12 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nOrder8 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %12, i32 0, i32 1
  %13 = load i32, i32* %m_nOrder8, align 8
  %cmp9 = icmp uge i32 %13, 3
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  %14 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %15 = load i32, i32* %nSamples.addr, align 4
  call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this1, %class.CBFormat* %14, i32 %15)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %cpTemp = alloca %struct.kiss_fft_cpx, align 4
  %iChannelOrder = alloca i32, align 4
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  %ni68 = alloca i32, align 4
  %ni87 = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  store i32 0, i32* %iChannelOrder, align 4
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %0 = load float*, float** %m_pfScratchBufferA, align 8
  %1 = bitcast float* %0 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %2 = load i32, i32* %m_nFFTSize, align 8
  %conv = zext i32 %2 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc114, %entry
  %3 = load i32, i32* %niChannel, align 4
  %4 = bitcast %class.CAmbisonicProcessor* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %for.body, label %for.end116

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %niChannel, align 4
  %conv2 = uitofp i32 %6 to double
  %call = call double @sqrt(double %conv2) #3
  %conv3 = fptosi double %call to i32
  store i32 %conv3, i32* %iChannelOrder, align 4
  %m_pfScratchBufferA4 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %7 = load float*, float** %m_pfScratchBufferA4, align 8
  %8 = bitcast float* %7 to i8*
  %9 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %9, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv5 = zext i32 %10 to i64
  %call6 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv5)
  %11 = load float*, float** %call6, align 8
  %12 = bitcast float* %11 to i8*
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %13 = load i32, i32* %m_nBlockSize, align 4
  %conv7 = zext i32 %13 to i64
  %mul8 = mul i64 %conv7, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %12, i64 %mul8, i1 false)
  %m_pfScratchBufferA9 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %14 = load float*, float** %m_pfScratchBufferA9, align 8
  %m_nBlockSize10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %15 = load i32, i32* %m_nBlockSize10, align 4
  %idxprom = zext i32 %15 to i64
  %arrayidx = getelementptr inbounds float, float* %14, i64 %idxprom
  %16 = bitcast float* %arrayidx to i8*
  %m_nFFTSize11 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %17 = load i32, i32* %m_nFFTSize11, align 8
  %m_nBlockSize12 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %18 = load i32, i32* %m_nBlockSize12, align 4
  %sub = sub i32 %17, %18
  %conv13 = zext i32 %sub to i64
  %mul14 = mul i64 %conv13, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 %mul14, i1 false)
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 3
  %19 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8
  %m_pfScratchBufferA15 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %20 = load float*, float** %m_pfScratchBufferA15, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %21 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8
  call void @kiss_fftr(%struct.kiss_fftr_state* %19, float* %20, %struct.kiss_fft_cpx* %21)
  store i32 0, i32* %ni, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc, %for.body
  %22 = load i32, i32* %ni, align 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 11
  %23 = load i32, i32* %m_nFFTBins, align 8
  %cmp17 = icmp ult i32 %22, %23
  br i1 %cmp17, label %for.body18, label %for.end

for.body18:                                       ; preds = %for.cond16
  %m_pcpScratch19 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %24 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch19, align 8
  %25 = load i32, i32* %ni, align 4
  %idxprom20 = zext i32 %25 to i64
  %arrayidx21 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %24, i64 %idxprom20
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx21, i32 0, i32 0
  %26 = load float, float* %r, align 4
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %27 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8
  %28 = load i32, i32* %iChannelOrder, align 4
  %idxprom22 = zext i32 %28 to i64
  %arrayidx23 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %27, i64 %idxprom22
  %29 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx23, align 8
  %30 = load i32, i32* %ni, align 4
  %idxprom24 = zext i32 %30 to i64
  %arrayidx25 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %29, i64 %idxprom24
  %r26 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx25, i32 0, i32 0
  %31 = load float, float* %r26, align 4
  %mul27 = fmul float %26, %31
  %m_pcpScratch28 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %32 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch28, align 8
  %33 = load i32, i32* %ni, align 4
  %idxprom29 = zext i32 %33 to i64
  %arrayidx30 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %32, i64 %idxprom29
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx30, i32 0, i32 1
  %34 = load float, float* %i, align 4
  %m_ppcpPsychFilters31 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %35 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters31, align 8
  %36 = load i32, i32* %iChannelOrder, align 4
  %idxprom32 = zext i32 %36 to i64
  %arrayidx33 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %35, i64 %idxprom32
  %37 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx33, align 8
  %38 = load i32, i32* %ni, align 4
  %idxprom34 = zext i32 %38 to i64
  %arrayidx35 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %37, i64 %idxprom34
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx35, i32 0, i32 1
  %39 = load float, float* %i36, align 4
  %mul37 = fmul float %34, %39
  %sub38 = fsub float %mul27, %mul37
  %r39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 0
  store float %sub38, float* %r39, align 4
  %m_pcpScratch40 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %40 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch40, align 8
  %41 = load i32, i32* %ni, align 4
  %idxprom41 = zext i32 %41 to i64
  %arrayidx42 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %40, i64 %idxprom41
  %r43 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx42, i32 0, i32 0
  %42 = load float, float* %r43, align 4
  %m_ppcpPsychFilters44 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %43 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters44, align 8
  %44 = load i32, i32* %iChannelOrder, align 4
  %idxprom45 = zext i32 %44 to i64
  %arrayidx46 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %43, i64 %idxprom45
  %45 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx46, align 8
  %46 = load i32, i32* %ni, align 4
  %idxprom47 = zext i32 %46 to i64
  %arrayidx48 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %45, i64 %idxprom47
  %i49 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx48, i32 0, i32 1
  %47 = load float, float* %i49, align 4
  %mul50 = fmul float %42, %47
  %m_pcpScratch51 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %48 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch51, align 8
  %49 = load i32, i32* %ni, align 4
  %idxprom52 = zext i32 %49 to i64
  %arrayidx53 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %48, i64 %idxprom52
  %i54 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx53, i32 0, i32 1
  %50 = load float, float* %i54, align 4
  %m_ppcpPsychFilters55 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 13
  %51 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters55, align 8
  %52 = load i32, i32* %iChannelOrder, align 4
  %idxprom56 = zext i32 %52 to i64
  %arrayidx57 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %51, i64 %idxprom56
  %53 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx57, align 8
  %54 = load i32, i32* %ni, align 4
  %idxprom58 = zext i32 %54 to i64
  %arrayidx59 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %53, i64 %idxprom58
  %r60 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %arrayidx59, i32 0, i32 0
  %55 = load float, float* %r60, align 4
  %mul61 = fmul float %50, %55
  %add = fadd float %mul50, %mul61
  %i62 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 1
  store float %add, float* %i62, align 4
  %m_pcpScratch63 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %56 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch63, align 8
  %57 = load i32, i32* %ni, align 4
  %idxprom64 = zext i32 %57 to i64
  %arrayidx65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %56, i64 %idxprom64
  %58 = bitcast %struct.kiss_fft_cpx* %arrayidx65 to i8*
  %59 = bitcast %struct.kiss_fft_cpx* %cpTemp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body18
  %60 = load i32, i32* %ni, align 4
  %inc = add i32 %60, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond16

for.end:                                          ; preds = %for.cond16
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 4
  %61 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8
  %m_pcpScratch66 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 14
  %62 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch66, align 8
  %m_pfScratchBufferA67 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %63 = load float*, float** %m_pfScratchBufferA67, align 8
  call void @kiss_fftri(%struct.kiss_fftr_state* %61, %struct.kiss_fft_cpx* %62, float* %63)
  store i32 0, i32* %ni68, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc77, %for.end
  %64 = load i32, i32* %ni68, align 4
  %m_nFFTSize70 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 7
  %65 = load i32, i32* %m_nFFTSize70, align 8
  %cmp71 = icmp ult i32 %64, %65
  br i1 %cmp71, label %for.body72, label %for.end79

for.body72:                                       ; preds = %for.cond69
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 12
  %66 = load float, float* %m_fFFTScaler, align 4
  %m_pfScratchBufferA73 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %67 = load float*, float** %m_pfScratchBufferA73, align 8
  %68 = load i32, i32* %ni68, align 4
  %idxprom74 = zext i32 %68 to i64
  %arrayidx75 = getelementptr inbounds float, float* %67, i64 %idxprom74
  %69 = load float, float* %arrayidx75, align 4
  %mul76 = fmul float %69, %66
  store float %mul76, float* %arrayidx75, align 4
  br label %for.inc77

for.inc77:                                        ; preds = %for.body72
  %70 = load i32, i32* %ni68, align 4
  %inc78 = add i32 %70, 1
  store i32 %inc78, i32* %ni68, align 4
  br label %for.cond69

for.end79:                                        ; preds = %for.cond69
  %71 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels80 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %71, i32 0, i32 4
  %72 = load i32, i32* %niChannel, align 4
  %conv81 = zext i32 %72 to i64
  %call82 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels80, i64 %conv81)
  %73 = load float*, float** %call82, align 8
  %74 = bitcast float* %73 to i8*
  %m_pfScratchBufferA83 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %75 = load float*, float** %m_pfScratchBufferA83, align 8
  %76 = bitcast float* %75 to i8*
  %m_nBlockSize84 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %77 = load i32, i32* %m_nBlockSize84, align 4
  %conv85 = zext i32 %77 to i64
  %mul86 = mul i64 %conv85, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %76, i64 %mul86, i1 false)
  store i32 0, i32* %ni87, align 4
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc101, %for.end79
  %78 = load i32, i32* %ni87, align 4
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  %79 = load i32, i32* %m_nOverlapLength, align 4
  %cmp89 = icmp ult i32 %78, %79
  br i1 %cmp89, label %for.body90, label %for.end103

for.body90:                                       ; preds = %for.cond88
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %80 = load float**, float*** %m_pfOverlap, align 8
  %81 = load i32, i32* %niChannel, align 4
  %idxprom91 = zext i32 %81 to i64
  %arrayidx92 = getelementptr inbounds float*, float** %80, i64 %idxprom91
  %82 = load float*, float** %arrayidx92, align 8
  %83 = load i32, i32* %ni87, align 4
  %idxprom93 = zext i32 %83 to i64
  %arrayidx94 = getelementptr inbounds float, float* %82, i64 %idxprom93
  %84 = load float, float* %arrayidx94, align 4
  %85 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %85, i32 0, i32 4
  %86 = load i32, i32* %niChannel, align 4
  %conv96 = zext i32 %86 to i64
  %call97 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels95, i64 %conv96)
  %87 = load float*, float** %call97, align 8
  %88 = load i32, i32* %ni87, align 4
  %idxprom98 = zext i32 %88 to i64
  %arrayidx99 = getelementptr inbounds float, float* %87, i64 %idxprom98
  %89 = load float, float* %arrayidx99, align 4
  %add100 = fadd float %89, %84
  store float %add100, float* %arrayidx99, align 4
  br label %for.inc101

for.inc101:                                       ; preds = %for.body90
  %90 = load i32, i32* %ni87, align 4
  %inc102 = add i32 %90, 1
  store i32 %inc102, i32* %ni87, align 4
  br label %for.cond88

for.end103:                                       ; preds = %for.cond88
  %m_pfOverlap104 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 6
  %91 = load float**, float*** %m_pfOverlap104, align 8
  %92 = load i32, i32* %niChannel, align 4
  %idxprom105 = zext i32 %92 to i64
  %arrayidx106 = getelementptr inbounds float*, float** %91, i64 %idxprom105
  %93 = load float*, float** %arrayidx106, align 8
  %94 = bitcast float* %93 to i8*
  %m_pfScratchBufferA107 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 5
  %95 = load float*, float** %m_pfScratchBufferA107, align 8
  %m_nBlockSize108 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 8
  %96 = load i32, i32* %m_nBlockSize108, align 4
  %idxprom109 = zext i32 %96 to i64
  %arrayidx110 = getelementptr inbounds float, float* %95, i64 %idxprom109
  %97 = bitcast float* %arrayidx110 to i8*
  %m_nOverlapLength111 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 10
  %98 = load i32, i32* %m_nOverlapLength111, align 4
  %conv112 = zext i32 %98 to i64
  %mul113 = mul i64 %conv112, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %97, i64 %mul113, i1 false)
  br label %for.inc114

for.inc114:                                       ; preds = %for.end103
  %99 = load i32, i32* %niChannel, align 4
  %inc115 = add i32 %99, 1
  store i32 %inc115, i32* %niChannel, align 4
  br label %for.cond

for.end116:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %niSample = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSample, align 4
  %1 = load i32, i32* %nSamples.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %2, i32 0, i32 4
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 3)
  %3 = load float*, float** %call, align 8
  %4 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  %5 = load float, float* %arrayidx, align 4
  %sub = fsub float -0.000000e+00, %5
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %6 = load float, float* %m_fSinAlpha, align 4
  %mul = fmul float %sub, %6
  %7 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %7, i32 0, i32 4
  %call3 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels2, i64 1)
  %8 = load float*, float** %call3, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom4 = zext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 %idxprom4
  %10 = load float, float* %arrayidx5, align 4
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %11 = load float, float* %m_fCosAlpha, align 8
  %mul6 = fmul float %10, %11
  %add = fadd float %mul, %mul6
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %12 = load float*, float** %m_pfTempSample, align 8
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1
  store float %add, float* %arrayidx7, align 4
  %13 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %13, i32 0, i32 4
  %call9 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels8, i64 2)
  %14 = load float*, float** %call9, align 8
  %15 = load i32, i32* %niSample, align 4
  %idxprom10 = zext i32 %15 to i64
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 %idxprom10
  %16 = load float, float* %arrayidx11, align 4
  %m_pfTempSample12 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %17 = load float*, float** %m_pfTempSample12, align 8
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 2
  store float %16, float* %arrayidx13, align 4
  %18 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels14 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %18, i32 0, i32 4
  %call15 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels14, i64 3)
  %19 = load float*, float** %call15, align 8
  %20 = load i32, i32* %niSample, align 4
  %idxprom16 = zext i32 %20 to i64
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 %idxprom16
  %21 = load float, float* %arrayidx17, align 4
  %m_fCosAlpha18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %22 = load float, float* %m_fCosAlpha18, align 8
  %mul19 = fmul float %21, %22
  %23 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels20 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %23, i32 0, i32 4
  %call21 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels20, i64 1)
  %24 = load float*, float** %call21, align 8
  %25 = load i32, i32* %niSample, align 4
  %idxprom22 = zext i32 %25 to i64
  %arrayidx23 = getelementptr inbounds float, float* %24, i64 %idxprom22
  %26 = load float, float* %arrayidx23, align 4
  %m_fSinAlpha24 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %27 = load float, float* %m_fSinAlpha24, align 4
  %mul25 = fmul float %26, %27
  %add26 = fadd float %mul19, %mul25
  %m_pfTempSample27 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %28 = load float*, float** %m_pfTempSample27, align 8
  %arrayidx28 = getelementptr inbounds float, float* %28, i64 3
  store float %add26, float* %arrayidx28, align 4
  %m_pfTempSample29 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %29 = load float*, float** %m_pfTempSample29, align 8
  %arrayidx30 = getelementptr inbounds float, float* %29, i64 1
  %30 = load float, float* %arrayidx30, align 4
  %31 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels31 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %31, i32 0, i32 4
  %call32 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels31, i64 1)
  %32 = load float*, float** %call32, align 8
  %33 = load i32, i32* %niSample, align 4
  %idxprom33 = zext i32 %33 to i64
  %arrayidx34 = getelementptr inbounds float, float* %32, i64 %idxprom33
  store float %30, float* %arrayidx34, align 4
  %m_pfTempSample35 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %34 = load float*, float** %m_pfTempSample35, align 8
  %arrayidx36 = getelementptr inbounds float, float* %34, i64 2
  %35 = load float, float* %arrayidx36, align 4
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %36 = load float, float* %m_fCosBeta, align 8
  %mul37 = fmul float %35, %36
  %m_pfTempSample38 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %37 = load float*, float** %m_pfTempSample38, align 8
  %arrayidx39 = getelementptr inbounds float, float* %37, i64 3
  %38 = load float, float* %arrayidx39, align 4
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %39 = load float, float* %m_fSinBeta, align 4
  %mul40 = fmul float %38, %39
  %add41 = fadd float %mul37, %mul40
  %40 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels42 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %40, i32 0, i32 4
  %call43 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels42, i64 2)
  %41 = load float*, float** %call43, align 8
  %42 = load i32, i32* %niSample, align 4
  %idxprom44 = zext i32 %42 to i64
  %arrayidx45 = getelementptr inbounds float, float* %41, i64 %idxprom44
  store float %add41, float* %arrayidx45, align 4
  %m_pfTempSample46 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %43 = load float*, float** %m_pfTempSample46, align 8
  %arrayidx47 = getelementptr inbounds float, float* %43, i64 3
  %44 = load float, float* %arrayidx47, align 4
  %m_fCosBeta48 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %45 = load float, float* %m_fCosBeta48, align 8
  %mul49 = fmul float %44, %45
  %m_pfTempSample50 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %46 = load float*, float** %m_pfTempSample50, align 8
  %arrayidx51 = getelementptr inbounds float, float* %46, i64 2
  %47 = load float, float* %arrayidx51, align 4
  %m_fSinBeta52 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %48 = load float, float* %m_fSinBeta52, align 4
  %mul53 = fmul float %47, %48
  %sub54 = fsub float %mul49, %mul53
  %49 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels55 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %49, i32 0, i32 4
  %call56 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels55, i64 3)
  %50 = load float*, float** %call56, align 8
  %51 = load i32, i32* %niSample, align 4
  %idxprom57 = zext i32 %51 to i64
  %arrayidx58 = getelementptr inbounds float, float* %50, i64 %idxprom57
  store float %sub54, float* %arrayidx58, align 4
  %52 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels59 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %52, i32 0, i32 4
  %call60 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels59, i64 3)
  %53 = load float*, float** %call60, align 8
  %54 = load i32, i32* %niSample, align 4
  %idxprom61 = zext i32 %54 to i64
  %arrayidx62 = getelementptr inbounds float, float* %53, i64 %idxprom61
  %55 = load float, float* %arrayidx62, align 4
  %sub63 = fsub float -0.000000e+00, %55
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %56 = load float, float* %m_fSinGamma, align 4
  %mul64 = fmul float %sub63, %56
  %57 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels65 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %57, i32 0, i32 4
  %call66 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels65, i64 1)
  %58 = load float*, float** %call66, align 8
  %59 = load i32, i32* %niSample, align 4
  %idxprom67 = zext i32 %59 to i64
  %arrayidx68 = getelementptr inbounds float, float* %58, i64 %idxprom67
  %60 = load float, float* %arrayidx68, align 4
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %61 = load float, float* %m_fCosGamma, align 8
  %mul69 = fmul float %60, %61
  %add70 = fadd float %mul64, %mul69
  %m_pfTempSample71 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %62 = load float*, float** %m_pfTempSample71, align 8
  %arrayidx72 = getelementptr inbounds float, float* %62, i64 1
  store float %add70, float* %arrayidx72, align 4
  %63 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels73 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %63, i32 0, i32 4
  %call74 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels73, i64 2)
  %64 = load float*, float** %call74, align 8
  %65 = load i32, i32* %niSample, align 4
  %idxprom75 = zext i32 %65 to i64
  %arrayidx76 = getelementptr inbounds float, float* %64, i64 %idxprom75
  %66 = load float, float* %arrayidx76, align 4
  %m_pfTempSample77 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %67 = load float*, float** %m_pfTempSample77, align 8
  %arrayidx78 = getelementptr inbounds float, float* %67, i64 2
  store float %66, float* %arrayidx78, align 4
  %68 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels79 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %68, i32 0, i32 4
  %call80 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels79, i64 3)
  %69 = load float*, float** %call80, align 8
  %70 = load i32, i32* %niSample, align 4
  %idxprom81 = zext i32 %70 to i64
  %arrayidx82 = getelementptr inbounds float, float* %69, i64 %idxprom81
  %71 = load float, float* %arrayidx82, align 4
  %m_fCosGamma83 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %72 = load float, float* %m_fCosGamma83, align 8
  %mul84 = fmul float %71, %72
  %73 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels85 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %73, i32 0, i32 4
  %call86 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels85, i64 1)
  %74 = load float*, float** %call86, align 8
  %75 = load i32, i32* %niSample, align 4
  %idxprom87 = zext i32 %75 to i64
  %arrayidx88 = getelementptr inbounds float, float* %74, i64 %idxprom87
  %76 = load float, float* %arrayidx88, align 4
  %m_fSinGamma89 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %77 = load float, float* %m_fSinGamma89, align 4
  %mul90 = fmul float %76, %77
  %add91 = fadd float %mul84, %mul90
  %m_pfTempSample92 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %78 = load float*, float** %m_pfTempSample92, align 8
  %arrayidx93 = getelementptr inbounds float, float* %78, i64 3
  store float %add91, float* %arrayidx93, align 4
  %m_pfTempSample94 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %79 = load float*, float** %m_pfTempSample94, align 8
  %arrayidx95 = getelementptr inbounds float, float* %79, i64 3
  %80 = load float, float* %arrayidx95, align 4
  %81 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels96 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %81, i32 0, i32 4
  %call97 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels96, i64 3)
  %82 = load float*, float** %call97, align 8
  %83 = load i32, i32* %niSample, align 4
  %idxprom98 = zext i32 %83 to i64
  %arrayidx99 = getelementptr inbounds float, float* %82, i64 %idxprom98
  store float %80, float* %arrayidx99, align 4
  %m_pfTempSample100 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %84 = load float*, float** %m_pfTempSample100, align 8
  %arrayidx101 = getelementptr inbounds float, float* %84, i64 1
  %85 = load float, float* %arrayidx101, align 4
  %86 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels102 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %86, i32 0, i32 4
  %call103 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels102, i64 1)
  %87 = load float*, float** %call103, align 8
  %88 = load i32, i32* %niSample, align 4
  %idxprom104 = zext i32 %88 to i64
  %arrayidx105 = getelementptr inbounds float, float* %87, i64 %idxprom104
  store float %85, float* %arrayidx105, align 4
  %m_pfTempSample106 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %89 = load float*, float** %m_pfTempSample106, align 8
  %arrayidx107 = getelementptr inbounds float, float* %89, i64 2
  %90 = load float, float* %arrayidx107, align 4
  %91 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels108 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %91, i32 0, i32 4
  %call109 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels108, i64 2)
  %92 = load float*, float** %call109, align 8
  %93 = load i32, i32* %niSample, align 4
  %idxprom110 = zext i32 %93 to i64
  %arrayidx111 = getelementptr inbounds float, float* %92, i64 %idxprom110
  store float %90, float* %arrayidx111, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %94 = load i32, i32* %niSample, align 4
  %inc = add i32 %94, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %fSqrt3 = alloca float, align 4
  %niSample = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %call = call double @sqrt(double 3.000000e+00) #3
  %conv = fptrunc double %call to float
  store float %conv, float* %fSqrt3, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSample, align 4
  %1 = load i32, i32* %nSamples.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %2, i32 0, i32 4
  %call2 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 8)
  %3 = load float*, float** %call2, align 8
  %4 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  %5 = load float, float* %arrayidx, align 4
  %sub = fsub float -0.000000e+00, %5
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 22
  %6 = load float, float* %m_fSin2Alpha, align 4
  %mul = fmul float %sub, %6
  %7 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels3 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %7, i32 0, i32 4
  %call4 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels3, i64 4)
  %8 = load float*, float** %call4, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom5 = zext i32 %9 to i64
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %idxprom5
  %10 = load float, float* %arrayidx6, align 4
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 21
  %11 = load float, float* %m_fCos2Alpha, align 8
  %mul7 = fmul float %10, %11
  %add = fadd float %mul, %mul7
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %12 = load float*, float** %m_pfTempSample, align 8
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 4
  store float %add, float* %arrayidx8, align 4
  %13 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels9 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %13, i32 0, i32 4
  %call10 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels9, i64 7)
  %14 = load float*, float** %call10, align 8
  %15 = load i32, i32* %niSample, align 4
  %idxprom11 = zext i32 %15 to i64
  %arrayidx12 = getelementptr inbounds float, float* %14, i64 %idxprom11
  %16 = load float, float* %arrayidx12, align 4
  %sub13 = fsub float -0.000000e+00, %16
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %17 = load float, float* %m_fSinAlpha, align 4
  %mul14 = fmul float %sub13, %17
  %18 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels15 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %18, i32 0, i32 4
  %call16 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels15, i64 5)
  %19 = load float*, float** %call16, align 8
  %20 = load i32, i32* %niSample, align 4
  %idxprom17 = zext i32 %20 to i64
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 %idxprom17
  %21 = load float, float* %arrayidx18, align 4
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %22 = load float, float* %m_fCosAlpha, align 8
  %mul19 = fmul float %21, %22
  %add20 = fadd float %mul14, %mul19
  %m_pfTempSample21 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %23 = load float*, float** %m_pfTempSample21, align 8
  %arrayidx22 = getelementptr inbounds float, float* %23, i64 5
  store float %add20, float* %arrayidx22, align 4
  %24 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels23 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %24, i32 0, i32 4
  %call24 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels23, i64 6)
  %25 = load float*, float** %call24, align 8
  %26 = load i32, i32* %niSample, align 4
  %idxprom25 = zext i32 %26 to i64
  %arrayidx26 = getelementptr inbounds float, float* %25, i64 %idxprom25
  %27 = load float, float* %arrayidx26, align 4
  %m_pfTempSample27 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %28 = load float*, float** %m_pfTempSample27, align 8
  %arrayidx28 = getelementptr inbounds float, float* %28, i64 6
  store float %27, float* %arrayidx28, align 4
  %29 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels29 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %29, i32 0, i32 4
  %call30 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels29, i64 7)
  %30 = load float*, float** %call30, align 8
  %31 = load i32, i32* %niSample, align 4
  %idxprom31 = zext i32 %31 to i64
  %arrayidx32 = getelementptr inbounds float, float* %30, i64 %idxprom31
  %32 = load float, float* %arrayidx32, align 4
  %m_fCosAlpha33 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %33 = load float, float* %m_fCosAlpha33, align 8
  %mul34 = fmul float %32, %33
  %34 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels35 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %34, i32 0, i32 4
  %call36 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels35, i64 5)
  %35 = load float*, float** %call36, align 8
  %36 = load i32, i32* %niSample, align 4
  %idxprom37 = zext i32 %36 to i64
  %arrayidx38 = getelementptr inbounds float, float* %35, i64 %idxprom37
  %37 = load float, float* %arrayidx38, align 4
  %m_fSinAlpha39 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %38 = load float, float* %m_fSinAlpha39, align 4
  %mul40 = fmul float %37, %38
  %add41 = fadd float %mul34, %mul40
  %m_pfTempSample42 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %39 = load float*, float** %m_pfTempSample42, align 8
  %arrayidx43 = getelementptr inbounds float, float* %39, i64 7
  store float %add41, float* %arrayidx43, align 4
  %40 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels44 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %40, i32 0, i32 4
  %call45 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels44, i64 8)
  %41 = load float*, float** %call45, align 8
  %42 = load i32, i32* %niSample, align 4
  %idxprom46 = zext i32 %42 to i64
  %arrayidx47 = getelementptr inbounds float, float* %41, i64 %idxprom46
  %43 = load float, float* %arrayidx47, align 4
  %m_fCos2Alpha48 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 21
  %44 = load float, float* %m_fCos2Alpha48, align 8
  %mul49 = fmul float %43, %44
  %45 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels50 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %45, i32 0, i32 4
  %call51 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels50, i64 4)
  %46 = load float*, float** %call51, align 8
  %47 = load i32, i32* %niSample, align 4
  %idxprom52 = zext i32 %47 to i64
  %arrayidx53 = getelementptr inbounds float, float* %46, i64 %idxprom52
  %48 = load float, float* %arrayidx53, align 4
  %m_fSin2Alpha54 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 22
  %49 = load float, float* %m_fSin2Alpha54, align 4
  %mul55 = fmul float %48, %49
  %add56 = fadd float %mul49, %mul55
  %m_pfTempSample57 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %50 = load float*, float** %m_pfTempSample57, align 8
  %arrayidx58 = getelementptr inbounds float, float* %50, i64 8
  store float %add56, float* %arrayidx58, align 4
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %51 = load float, float* %m_fSinBeta, align 4
  %sub59 = fsub float -0.000000e+00, %51
  %m_pfTempSample60 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %52 = load float*, float** %m_pfTempSample60, align 8
  %arrayidx61 = getelementptr inbounds float, float* %52, i64 5
  %53 = load float, float* %arrayidx61, align 4
  %mul62 = fmul float %sub59, %53
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %54 = load float, float* %m_fCosBeta, align 8
  %m_pfTempSample63 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %55 = load float*, float** %m_pfTempSample63, align 8
  %arrayidx64 = getelementptr inbounds float, float* %55, i64 4
  %56 = load float, float* %arrayidx64, align 4
  %mul65 = fmul float %54, %56
  %add66 = fadd float %mul62, %mul65
  %57 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels67 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %57, i32 0, i32 4
  %call68 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels67, i64 4)
  %58 = load float*, float** %call68, align 8
  %59 = load i32, i32* %niSample, align 4
  %idxprom69 = zext i32 %59 to i64
  %arrayidx70 = getelementptr inbounds float, float* %58, i64 %idxprom69
  store float %add66, float* %arrayidx70, align 4
  %m_fCosBeta71 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %60 = load float, float* %m_fCosBeta71, align 8
  %sub72 = fsub float -0.000000e+00, %60
  %m_pfTempSample73 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %61 = load float*, float** %m_pfTempSample73, align 8
  %arrayidx74 = getelementptr inbounds float, float* %61, i64 5
  %62 = load float, float* %arrayidx74, align 4
  %mul75 = fmul float %sub72, %62
  %m_fSinBeta76 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %63 = load float, float* %m_fSinBeta76, align 4
  %m_pfTempSample77 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %64 = load float*, float** %m_pfTempSample77, align 8
  %arrayidx78 = getelementptr inbounds float, float* %64, i64 4
  %65 = load float, float* %arrayidx78, align 4
  %mul79 = fmul float %63, %65
  %add80 = fadd float %mul75, %mul79
  %66 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels81 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %66, i32 0, i32 4
  %call82 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels81, i64 5)
  %67 = load float*, float** %call82, align 8
  %68 = load i32, i32* %niSample, align 4
  %idxprom83 = zext i32 %68 to i64
  %arrayidx84 = getelementptr inbounds float, float* %67, i64 %idxprom83
  store float %add80, float* %arrayidx84, align 4
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %69 = load float, float* %m_fCos2Beta, align 8
  %mul85 = fmul float 7.500000e-01, %69
  %add86 = fadd float %mul85, 2.500000e-01
  %m_pfTempSample87 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %70 = load float*, float** %m_pfTempSample87, align 8
  %arrayidx88 = getelementptr inbounds float, float* %70, i64 6
  %71 = load float, float* %arrayidx88, align 4
  %mul89 = fmul float %add86, %71
  %conv90 = fpext float %mul89 to double
  %72 = load float, float* %fSqrt3, align 4
  %conv91 = fpext float %72 to double
  %mul92 = fmul double 5.000000e-01, %conv91
  %m_fSinBeta93 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %73 = load float, float* %m_fSinBeta93, align 4
  %conv94 = fpext float %73 to double
  %call95 = call double @pow(double %conv94, double 2.000000e+00) #3
  %mul96 = fmul double %mul92, %call95
  %m_pfTempSample97 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %74 = load float*, float** %m_pfTempSample97, align 8
  %arrayidx98 = getelementptr inbounds float, float* %74, i64 8
  %75 = load float, float* %arrayidx98, align 4
  %conv99 = fpext float %75 to double
  %mul100 = fmul double %mul96, %conv99
  %add101 = fadd double %conv90, %mul100
  %76 = load float, float* %fSqrt3, align 4
  %m_fSinBeta102 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %77 = load float, float* %m_fSinBeta102, align 4
  %mul103 = fmul float %76, %77
  %m_fCosBeta104 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %78 = load float, float* %m_fCosBeta104, align 8
  %mul105 = fmul float %mul103, %78
  %m_pfTempSample106 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %79 = load float*, float** %m_pfTempSample106, align 8
  %arrayidx107 = getelementptr inbounds float, float* %79, i64 7
  %80 = load float, float* %arrayidx107, align 4
  %mul108 = fmul float %mul105, %80
  %conv109 = fpext float %mul108 to double
  %add110 = fadd double %add101, %conv109
  %conv111 = fptrunc double %add110 to float
  %81 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels112 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %81, i32 0, i32 4
  %call113 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels112, i64 6)
  %82 = load float*, float** %call113, align 8
  %83 = load i32, i32* %niSample, align 4
  %idxprom114 = zext i32 %83 to i64
  %arrayidx115 = getelementptr inbounds float, float* %82, i64 %idxprom114
  store float %conv111, float* %arrayidx115, align 4
  %m_fCos2Beta116 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %84 = load float, float* %m_fCos2Beta116, align 8
  %m_pfTempSample117 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %85 = load float*, float** %m_pfTempSample117, align 8
  %arrayidx118 = getelementptr inbounds float, float* %85, i64 7
  %86 = load float, float* %arrayidx118, align 4
  %mul119 = fmul float %84, %86
  %87 = load float, float* %fSqrt3, align 4
  %m_fCosBeta120 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %88 = load float, float* %m_fCosBeta120, align 8
  %mul121 = fmul float %87, %88
  %m_fSinBeta122 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %89 = load float, float* %m_fSinBeta122, align 4
  %mul123 = fmul float %mul121, %89
  %m_pfTempSample124 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %90 = load float*, float** %m_pfTempSample124, align 8
  %arrayidx125 = getelementptr inbounds float, float* %90, i64 6
  %91 = load float, float* %arrayidx125, align 4
  %mul126 = fmul float %mul123, %91
  %sub127 = fsub float %mul119, %mul126
  %m_fCosBeta128 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %92 = load float, float* %m_fCosBeta128, align 8
  %m_fSinBeta129 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %93 = load float, float* %m_fSinBeta129, align 4
  %mul130 = fmul float %92, %93
  %m_pfTempSample131 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %94 = load float*, float** %m_pfTempSample131, align 8
  %arrayidx132 = getelementptr inbounds float, float* %94, i64 8
  %95 = load float, float* %arrayidx132, align 4
  %mul133 = fmul float %mul130, %95
  %add134 = fadd float %sub127, %mul133
  %96 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels135 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %96, i32 0, i32 4
  %call136 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels135, i64 7)
  %97 = load float*, float** %call136, align 8
  %98 = load i32, i32* %niSample, align 4
  %idxprom137 = zext i32 %98 to i64
  %arrayidx138 = getelementptr inbounds float, float* %97, i64 %idxprom137
  store float %add134, float* %arrayidx138, align 4
  %m_fCos2Beta139 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %99 = load float, float* %m_fCos2Beta139, align 8
  %mul140 = fmul float 2.500000e-01, %99
  %add141 = fadd float %mul140, 7.500000e-01
  %m_pfTempSample142 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %100 = load float*, float** %m_pfTempSample142, align 8
  %arrayidx143 = getelementptr inbounds float, float* %100, i64 8
  %101 = load float, float* %arrayidx143, align 4
  %mul144 = fmul float %add141, %101
  %m_fCosBeta145 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %102 = load float, float* %m_fCosBeta145, align 8
  %m_fSinBeta146 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %103 = load float, float* %m_fSinBeta146, align 4
  %mul147 = fmul float %102, %103
  %m_pfTempSample148 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %104 = load float*, float** %m_pfTempSample148, align 8
  %arrayidx149 = getelementptr inbounds float, float* %104, i64 7
  %105 = load float, float* %arrayidx149, align 4
  %mul150 = fmul float %mul147, %105
  %sub151 = fsub float %mul144, %mul150
  %conv152 = fpext float %sub151 to double
  %106 = load float, float* %fSqrt3, align 4
  %conv153 = fpext float %106 to double
  %mul154 = fmul double 5.000000e-01, %conv153
  %m_fSinBeta155 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %107 = load float, float* %m_fSinBeta155, align 4
  %conv156 = fpext float %107 to double
  %call157 = call double @pow(double %conv156, double 2.000000e+00) #3
  %mul158 = fmul double %mul154, %call157
  %m_pfTempSample159 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %108 = load float*, float** %m_pfTempSample159, align 8
  %arrayidx160 = getelementptr inbounds float, float* %108, i64 6
  %109 = load float, float* %arrayidx160, align 4
  %conv161 = fpext float %109 to double
  %mul162 = fmul double %mul158, %conv161
  %add163 = fadd double %conv152, %mul162
  %conv164 = fptrunc double %add163 to float
  %110 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels165 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %110, i32 0, i32 4
  %call166 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels165, i64 8)
  %111 = load float*, float** %call166, align 8
  %112 = load i32, i32* %niSample, align 4
  %idxprom167 = zext i32 %112 to i64
  %arrayidx168 = getelementptr inbounds float, float* %111, i64 %idxprom167
  store float %conv164, float* %arrayidx168, align 4
  %113 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels169 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %113, i32 0, i32 4
  %call170 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels169, i64 8)
  %114 = load float*, float** %call170, align 8
  %115 = load i32, i32* %niSample, align 4
  %idxprom171 = zext i32 %115 to i64
  %arrayidx172 = getelementptr inbounds float, float* %114, i64 %idxprom171
  %116 = load float, float* %arrayidx172, align 4
  %sub173 = fsub float -0.000000e+00, %116
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 26
  %117 = load float, float* %m_fSin2Gamma, align 4
  %mul174 = fmul float %sub173, %117
  %118 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels175 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %118, i32 0, i32 4
  %call176 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels175, i64 4)
  %119 = load float*, float** %call176, align 8
  %120 = load i32, i32* %niSample, align 4
  %idxprom177 = zext i32 %120 to i64
  %arrayidx178 = getelementptr inbounds float, float* %119, i64 %idxprom177
  %121 = load float, float* %arrayidx178, align 4
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 25
  %122 = load float, float* %m_fCos2Gamma, align 8
  %mul179 = fmul float %121, %122
  %add180 = fadd float %mul174, %mul179
  %m_pfTempSample181 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %123 = load float*, float** %m_pfTempSample181, align 8
  %arrayidx182 = getelementptr inbounds float, float* %123, i64 4
  store float %add180, float* %arrayidx182, align 4
  %124 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels183 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %124, i32 0, i32 4
  %call184 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels183, i64 7)
  %125 = load float*, float** %call184, align 8
  %126 = load i32, i32* %niSample, align 4
  %idxprom185 = zext i32 %126 to i64
  %arrayidx186 = getelementptr inbounds float, float* %125, i64 %idxprom185
  %127 = load float, float* %arrayidx186, align 4
  %sub187 = fsub float -0.000000e+00, %127
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %128 = load float, float* %m_fSinGamma, align 4
  %mul188 = fmul float %sub187, %128
  %129 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels189 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %129, i32 0, i32 4
  %call190 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels189, i64 5)
  %130 = load float*, float** %call190, align 8
  %131 = load i32, i32* %niSample, align 4
  %idxprom191 = zext i32 %131 to i64
  %arrayidx192 = getelementptr inbounds float, float* %130, i64 %idxprom191
  %132 = load float, float* %arrayidx192, align 4
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %133 = load float, float* %m_fCosGamma, align 8
  %mul193 = fmul float %132, %133
  %add194 = fadd float %mul188, %mul193
  %m_pfTempSample195 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %134 = load float*, float** %m_pfTempSample195, align 8
  %arrayidx196 = getelementptr inbounds float, float* %134, i64 5
  store float %add194, float* %arrayidx196, align 4
  %135 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels197 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %135, i32 0, i32 4
  %call198 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels197, i64 6)
  %136 = load float*, float** %call198, align 8
  %137 = load i32, i32* %niSample, align 4
  %idxprom199 = zext i32 %137 to i64
  %arrayidx200 = getelementptr inbounds float, float* %136, i64 %idxprom199
  %138 = load float, float* %arrayidx200, align 4
  %m_pfTempSample201 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %139 = load float*, float** %m_pfTempSample201, align 8
  %arrayidx202 = getelementptr inbounds float, float* %139, i64 6
  store float %138, float* %arrayidx202, align 4
  %140 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels203 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %140, i32 0, i32 4
  %call204 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels203, i64 7)
  %141 = load float*, float** %call204, align 8
  %142 = load i32, i32* %niSample, align 4
  %idxprom205 = zext i32 %142 to i64
  %arrayidx206 = getelementptr inbounds float, float* %141, i64 %idxprom205
  %143 = load float, float* %arrayidx206, align 4
  %m_fCosGamma207 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %144 = load float, float* %m_fCosGamma207, align 8
  %mul208 = fmul float %143, %144
  %145 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels209 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %145, i32 0, i32 4
  %call210 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels209, i64 5)
  %146 = load float*, float** %call210, align 8
  %147 = load i32, i32* %niSample, align 4
  %idxprom211 = zext i32 %147 to i64
  %arrayidx212 = getelementptr inbounds float, float* %146, i64 %idxprom211
  %148 = load float, float* %arrayidx212, align 4
  %m_fSinGamma213 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %149 = load float, float* %m_fSinGamma213, align 4
  %mul214 = fmul float %148, %149
  %add215 = fadd float %mul208, %mul214
  %m_pfTempSample216 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %150 = load float*, float** %m_pfTempSample216, align 8
  %arrayidx217 = getelementptr inbounds float, float* %150, i64 7
  store float %add215, float* %arrayidx217, align 4
  %151 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels218 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %151, i32 0, i32 4
  %call219 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels218, i64 8)
  %152 = load float*, float** %call219, align 8
  %153 = load i32, i32* %niSample, align 4
  %idxprom220 = zext i32 %153 to i64
  %arrayidx221 = getelementptr inbounds float, float* %152, i64 %idxprom220
  %154 = load float, float* %arrayidx221, align 4
  %m_fCos2Gamma222 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 25
  %155 = load float, float* %m_fCos2Gamma222, align 8
  %mul223 = fmul float %154, %155
  %156 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels224 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %156, i32 0, i32 4
  %call225 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels224, i64 4)
  %157 = load float*, float** %call225, align 8
  %158 = load i32, i32* %niSample, align 4
  %idxprom226 = zext i32 %158 to i64
  %arrayidx227 = getelementptr inbounds float, float* %157, i64 %idxprom226
  %159 = load float, float* %arrayidx227, align 4
  %m_fSin2Gamma228 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 26
  %160 = load float, float* %m_fSin2Gamma228, align 4
  %mul229 = fmul float %159, %160
  %add230 = fadd float %mul223, %mul229
  %m_pfTempSample231 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %161 = load float*, float** %m_pfTempSample231, align 8
  %arrayidx232 = getelementptr inbounds float, float* %161, i64 8
  store float %add230, float* %arrayidx232, align 4
  %m_pfTempSample233 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %162 = load float*, float** %m_pfTempSample233, align 8
  %arrayidx234 = getelementptr inbounds float, float* %162, i64 6
  %163 = load float, float* %arrayidx234, align 4
  %164 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels235 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %164, i32 0, i32 4
  %call236 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels235, i64 6)
  %165 = load float*, float** %call236, align 8
  %166 = load i32, i32* %niSample, align 4
  %idxprom237 = zext i32 %166 to i64
  %arrayidx238 = getelementptr inbounds float, float* %165, i64 %idxprom237
  store float %163, float* %arrayidx238, align 4
  %m_pfTempSample239 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %167 = load float*, float** %m_pfTempSample239, align 8
  %arrayidx240 = getelementptr inbounds float, float* %167, i64 7
  %168 = load float, float* %arrayidx240, align 4
  %169 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels241 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %169, i32 0, i32 4
  %call242 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels241, i64 7)
  %170 = load float*, float** %call242, align 8
  %171 = load i32, i32* %niSample, align 4
  %idxprom243 = zext i32 %171 to i64
  %arrayidx244 = getelementptr inbounds float, float* %170, i64 %idxprom243
  store float %168, float* %arrayidx244, align 4
  %m_pfTempSample245 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %172 = load float*, float** %m_pfTempSample245, align 8
  %arrayidx246 = getelementptr inbounds float, float* %172, i64 5
  %173 = load float, float* %arrayidx246, align 4
  %174 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels247 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %174, i32 0, i32 4
  %call248 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels247, i64 5)
  %175 = load float*, float** %call248, align 8
  %176 = load i32, i32* %niSample, align 4
  %idxprom249 = zext i32 %176 to i64
  %arrayidx250 = getelementptr inbounds float, float* %175, i64 %idxprom249
  store float %173, float* %arrayidx250, align 4
  %m_pfTempSample251 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %177 = load float*, float** %m_pfTempSample251, align 8
  %arrayidx252 = getelementptr inbounds float, float* %177, i64 8
  %178 = load float, float* %arrayidx252, align 4
  %179 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels253 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %179, i32 0, i32 4
  %call254 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels253, i64 8)
  %180 = load float*, float** %call254, align 8
  %181 = load i32, i32* %niSample, align 4
  %idxprom255 = zext i32 %181 to i64
  %arrayidx256 = getelementptr inbounds float, float* %180, i64 %idxprom255
  store float %178, float* %arrayidx256, align 4
  %m_pfTempSample257 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %182 = load float*, float** %m_pfTempSample257, align 8
  %arrayidx258 = getelementptr inbounds float, float* %182, i64 4
  %183 = load float, float* %arrayidx258, align 4
  %184 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels259 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %184, i32 0, i32 4
  %call260 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels259, i64 4)
  %185 = load float*, float** %call260, align 8
  %186 = load i32, i32* %niSample, align 4
  %idxprom261 = zext i32 %186 to i64
  %arrayidx262 = getelementptr inbounds float, float* %185, i64 %idxprom261
  store float %183, float* %arrayidx262, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %187 = load i32, i32* %niSample, align 4
  %inc = add i32 %187, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicProcessor*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %fSqrt3_2 = alloca float, align 4
  %fSqrt15 = alloca float, align 4
  %fSqrt5_2 = alloca float, align 4
  %niSample = alloca i32, align 4
  store %class.CAmbisonicProcessor* %this, %class.CAmbisonicProcessor** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %this.addr, align 8
  %call = call double @sqrt(double 1.500000e+00) #3
  %conv = fptrunc double %call to float
  store float %conv, float* %fSqrt3_2, align 4
  %call2 = call double @sqrt(double 1.500000e+01) #3
  %conv3 = fptrunc double %call2 to float
  store float %conv3, float* %fSqrt15, align 4
  %call4 = call double @sqrt(double 2.500000e+00) #3
  %conv5 = fptrunc double %call4 to float
  store float %conv5, float* %fSqrt5_2, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSample, align 4
  %1 = load i32, i32* %nSamples.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %2, i32 0, i32 4
  %call6 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 15)
  %3 = load float*, float** %call6, align 8
  %4 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  %5 = load float, float* %arrayidx, align 4
  %sub = fsub float -0.000000e+00, %5
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 28
  %6 = load float, float* %m_fSin3Alpha, align 4
  %mul = fmul float %sub, %6
  %7 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %7, i32 0, i32 4
  %call8 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels7, i64 9)
  %8 = load float*, float** %call8, align 8
  %9 = load i32, i32* %niSample, align 4
  %idxprom9 = zext i32 %9 to i64
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 %idxprom9
  %10 = load float, float* %arrayidx10, align 4
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 27
  %11 = load float, float* %m_fCos3Alpha, align 8
  %mul11 = fmul float %10, %11
  %add = fadd float %mul, %mul11
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %12 = load float*, float** %m_pfTempSample, align 8
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 9
  store float %add, float* %arrayidx12, align 4
  %13 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels13 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %13, i32 0, i32 4
  %call14 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels13, i64 14)
  %14 = load float*, float** %call14, align 8
  %15 = load i32, i32* %niSample, align 4
  %idxprom15 = zext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds float, float* %14, i64 %idxprom15
  %16 = load float, float* %arrayidx16, align 4
  %sub17 = fsub float -0.000000e+00, %16
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 22
  %17 = load float, float* %m_fSin2Alpha, align 4
  %mul18 = fmul float %sub17, %17
  %18 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels19 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %18, i32 0, i32 4
  %call20 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels19, i64 10)
  %19 = load float*, float** %call20, align 8
  %20 = load i32, i32* %niSample, align 4
  %idxprom21 = zext i32 %20 to i64
  %arrayidx22 = getelementptr inbounds float, float* %19, i64 %idxprom21
  %21 = load float, float* %arrayidx22, align 4
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 21
  %22 = load float, float* %m_fCos2Alpha, align 8
  %mul23 = fmul float %21, %22
  %add24 = fadd float %mul18, %mul23
  %m_pfTempSample25 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %23 = load float*, float** %m_pfTempSample25, align 8
  %arrayidx26 = getelementptr inbounds float, float* %23, i64 10
  store float %add24, float* %arrayidx26, align 4
  %24 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels27 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %24, i32 0, i32 4
  %call28 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels27, i64 13)
  %25 = load float*, float** %call28, align 8
  %26 = load i32, i32* %niSample, align 4
  %idxprom29 = zext i32 %26 to i64
  %arrayidx30 = getelementptr inbounds float, float* %25, i64 %idxprom29
  %27 = load float, float* %arrayidx30, align 4
  %sub31 = fsub float -0.000000e+00, %27
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %28 = load float, float* %m_fSinAlpha, align 4
  %mul32 = fmul float %sub31, %28
  %29 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels33 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %29, i32 0, i32 4
  %call34 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels33, i64 11)
  %30 = load float*, float** %call34, align 8
  %31 = load i32, i32* %niSample, align 4
  %idxprom35 = zext i32 %31 to i64
  %arrayidx36 = getelementptr inbounds float, float* %30, i64 %idxprom35
  %32 = load float, float* %arrayidx36, align 4
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %33 = load float, float* %m_fCosAlpha, align 8
  %mul37 = fmul float %32, %33
  %add38 = fadd float %mul32, %mul37
  %m_pfTempSample39 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %34 = load float*, float** %m_pfTempSample39, align 8
  %arrayidx40 = getelementptr inbounds float, float* %34, i64 11
  store float %add38, float* %arrayidx40, align 4
  %35 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels41 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %35, i32 0, i32 4
  %call42 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels41, i64 12)
  %36 = load float*, float** %call42, align 8
  %37 = load i32, i32* %niSample, align 4
  %idxprom43 = zext i32 %37 to i64
  %arrayidx44 = getelementptr inbounds float, float* %36, i64 %idxprom43
  %38 = load float, float* %arrayidx44, align 4
  %m_pfTempSample45 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %39 = load float*, float** %m_pfTempSample45, align 8
  %arrayidx46 = getelementptr inbounds float, float* %39, i64 12
  store float %38, float* %arrayidx46, align 4
  %40 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels47 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %40, i32 0, i32 4
  %call48 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels47, i64 13)
  %41 = load float*, float** %call48, align 8
  %42 = load i32, i32* %niSample, align 4
  %idxprom49 = zext i32 %42 to i64
  %arrayidx50 = getelementptr inbounds float, float* %41, i64 %idxprom49
  %43 = load float, float* %arrayidx50, align 4
  %m_fCosAlpha51 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 15
  %44 = load float, float* %m_fCosAlpha51, align 8
  %mul52 = fmul float %43, %44
  %45 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels53 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %45, i32 0, i32 4
  %call54 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels53, i64 11)
  %46 = load float*, float** %call54, align 8
  %47 = load i32, i32* %niSample, align 4
  %idxprom55 = zext i32 %47 to i64
  %arrayidx56 = getelementptr inbounds float, float* %46, i64 %idxprom55
  %48 = load float, float* %arrayidx56, align 4
  %m_fSinAlpha57 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 16
  %49 = load float, float* %m_fSinAlpha57, align 4
  %mul58 = fmul float %48, %49
  %add59 = fadd float %mul52, %mul58
  %m_pfTempSample60 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %50 = load float*, float** %m_pfTempSample60, align 8
  %arrayidx61 = getelementptr inbounds float, float* %50, i64 13
  store float %add59, float* %arrayidx61, align 4
  %51 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels62 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %51, i32 0, i32 4
  %call63 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels62, i64 14)
  %52 = load float*, float** %call63, align 8
  %53 = load i32, i32* %niSample, align 4
  %idxprom64 = zext i32 %53 to i64
  %arrayidx65 = getelementptr inbounds float, float* %52, i64 %idxprom64
  %54 = load float, float* %arrayidx65, align 4
  %m_fCos2Alpha66 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 21
  %55 = load float, float* %m_fCos2Alpha66, align 8
  %mul67 = fmul float %54, %55
  %56 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels68 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %56, i32 0, i32 4
  %call69 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels68, i64 10)
  %57 = load float*, float** %call69, align 8
  %58 = load i32, i32* %niSample, align 4
  %idxprom70 = zext i32 %58 to i64
  %arrayidx71 = getelementptr inbounds float, float* %57, i64 %idxprom70
  %59 = load float, float* %arrayidx71, align 4
  %m_fSin2Alpha72 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 22
  %60 = load float, float* %m_fSin2Alpha72, align 4
  %mul73 = fmul float %59, %60
  %add74 = fadd float %mul67, %mul73
  %m_pfTempSample75 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %61 = load float*, float** %m_pfTempSample75, align 8
  %arrayidx76 = getelementptr inbounds float, float* %61, i64 14
  store float %add74, float* %arrayidx76, align 4
  %62 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels77 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %62, i32 0, i32 4
  %call78 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels77, i64 15)
  %63 = load float*, float** %call78, align 8
  %64 = load i32, i32* %niSample, align 4
  %idxprom79 = zext i32 %64 to i64
  %arrayidx80 = getelementptr inbounds float, float* %63, i64 %idxprom79
  %65 = load float, float* %arrayidx80, align 4
  %m_fCos3Alpha81 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 27
  %66 = load float, float* %m_fCos3Alpha81, align 8
  %mul82 = fmul float %65, %66
  %67 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels83 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %67, i32 0, i32 4
  %call84 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels83, i64 9)
  %68 = load float*, float** %call84, align 8
  %69 = load i32, i32* %niSample, align 4
  %idxprom85 = zext i32 %69 to i64
  %arrayidx86 = getelementptr inbounds float, float* %68, i64 %idxprom85
  %70 = load float, float* %arrayidx86, align 4
  %m_fSin3Alpha87 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 28
  %71 = load float, float* %m_fSin3Alpha87, align 4
  %mul88 = fmul float %70, %71
  %add89 = fadd float %mul82, %mul88
  %m_pfTempSample90 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %72 = load float*, float** %m_pfTempSample90, align 8
  %arrayidx91 = getelementptr inbounds float, float* %72, i64 15
  store float %add89, float* %arrayidx91, align 4
  %m_pfTempSample92 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %73 = load float*, float** %m_pfTempSample92, align 8
  %arrayidx93 = getelementptr inbounds float, float* %73, i64 9
  %74 = load float, float* %arrayidx93, align 4
  %mul94 = fmul float 1.250000e-01, %74
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %75 = load float, float* %m_fCos2Beta, align 8
  %mul95 = fmul float 3.000000e+00, %75
  %add96 = fadd float 5.000000e+00, %mul95
  %mul97 = fmul float %mul94, %add96
  %76 = load float, float* %fSqrt3_2, align 4
  %m_pfTempSample98 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %77 = load float*, float** %m_pfTempSample98, align 8
  %arrayidx99 = getelementptr inbounds float, float* %77, i64 10
  %78 = load float, float* %arrayidx99, align 4
  %mul100 = fmul float %76, %78
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %79 = load float, float* %m_fCosBeta, align 8
  %mul101 = fmul float %mul100, %79
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %80 = load float, float* %m_fSinBeta, align 4
  %mul102 = fmul float %mul101, %80
  %sub103 = fsub float %mul97, %mul102
  %conv104 = fpext float %sub103 to double
  %81 = load float, float* %fSqrt15, align 4
  %mul105 = fmul float 2.500000e-01, %81
  %m_pfTempSample106 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %82 = load float*, float** %m_pfTempSample106, align 8
  %arrayidx107 = getelementptr inbounds float, float* %82, i64 11
  %83 = load float, float* %arrayidx107, align 4
  %mul108 = fmul float %mul105, %83
  %conv109 = fpext float %mul108 to double
  %m_fSinBeta110 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %84 = load float, float* %m_fSinBeta110, align 4
  %conv111 = fpext float %84 to double
  %call112 = call double @pow(double %conv111, double 2.000000e+00) #3
  %mul113 = fmul double %conv109, %call112
  %add114 = fadd double %conv104, %mul113
  %conv115 = fptrunc double %add114 to float
  %85 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels116 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %85, i32 0, i32 4
  %call117 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels116, i64 9)
  %86 = load float*, float** %call117, align 8
  %87 = load i32, i32* %niSample, align 4
  %idxprom118 = zext i32 %87 to i64
  %arrayidx119 = getelementptr inbounds float, float* %86, i64 %idxprom118
  store float %conv115, float* %arrayidx119, align 4
  %m_pfTempSample120 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %88 = load float*, float** %m_pfTempSample120, align 8
  %arrayidx121 = getelementptr inbounds float, float* %88, i64 10
  %89 = load float, float* %arrayidx121, align 4
  %m_fCos2Beta122 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %90 = load float, float* %m_fCos2Beta122, align 8
  %mul123 = fmul float %89, %90
  %91 = load float, float* %fSqrt5_2, align 4
  %m_pfTempSample124 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %92 = load float*, float** %m_pfTempSample124, align 8
  %arrayidx125 = getelementptr inbounds float, float* %92, i64 11
  %93 = load float, float* %arrayidx125, align 4
  %mul126 = fmul float %91, %93
  %m_fCosBeta127 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %94 = load float, float* %m_fCosBeta127, align 8
  %mul128 = fmul float %mul126, %94
  %m_fSinBeta129 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %95 = load float, float* %m_fSinBeta129, align 4
  %mul130 = fmul float %mul128, %95
  %sub131 = fsub float %mul123, %mul130
  %96 = load float, float* %fSqrt3_2, align 4
  %m_pfTempSample132 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %97 = load float*, float** %m_pfTempSample132, align 8
  %arrayidx133 = getelementptr inbounds float, float* %97, i64 9
  %98 = load float, float* %arrayidx133, align 4
  %mul134 = fmul float %96, %98
  %m_fCosBeta135 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %99 = load float, float* %m_fCosBeta135, align 8
  %mul136 = fmul float %mul134, %99
  %m_fSinBeta137 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %100 = load float, float* %m_fSinBeta137, align 4
  %mul138 = fmul float %mul136, %100
  %add139 = fadd float %sub131, %mul138
  %101 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels140 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %101, i32 0, i32 4
  %call141 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels140, i64 10)
  %102 = load float*, float** %call141, align 8
  %103 = load i32, i32* %niSample, align 4
  %idxprom142 = zext i32 %103 to i64
  %arrayidx143 = getelementptr inbounds float, float* %102, i64 %idxprom142
  store float %add139, float* %arrayidx143, align 4
  %m_pfTempSample144 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %104 = load float*, float** %m_pfTempSample144, align 8
  %arrayidx145 = getelementptr inbounds float, float* %104, i64 11
  %105 = load float, float* %arrayidx145, align 4
  %mul146 = fmul float 1.250000e-01, %105
  %m_fCos2Beta147 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %106 = load float, float* %m_fCos2Beta147, align 8
  %mul148 = fmul float 5.000000e+00, %106
  %add149 = fadd float 3.000000e+00, %mul148
  %mul150 = fmul float %mul146, %add149
  %107 = load float, float* %fSqrt5_2, align 4
  %m_pfTempSample151 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %108 = load float*, float** %m_pfTempSample151, align 8
  %arrayidx152 = getelementptr inbounds float, float* %108, i64 10
  %109 = load float, float* %arrayidx152, align 4
  %mul153 = fmul float %107, %109
  %m_fCosBeta154 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %110 = load float, float* %m_fCosBeta154, align 8
  %mul155 = fmul float %mul153, %110
  %m_fSinBeta156 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %111 = load float, float* %m_fSinBeta156, align 4
  %mul157 = fmul float %mul155, %111
  %sub158 = fsub float %mul150, %mul157
  %conv159 = fpext float %sub158 to double
  %112 = load float, float* %fSqrt15, align 4
  %mul160 = fmul float 2.500000e-01, %112
  %m_pfTempSample161 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %113 = load float*, float** %m_pfTempSample161, align 8
  %arrayidx162 = getelementptr inbounds float, float* %113, i64 9
  %114 = load float, float* %arrayidx162, align 4
  %mul163 = fmul float %mul160, %114
  %conv164 = fpext float %mul163 to double
  %m_fSinBeta165 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %115 = load float, float* %m_fSinBeta165, align 4
  %conv166 = fpext float %115 to double
  %call167 = call double @pow(double %conv166, double 2.000000e+00) #3
  %mul168 = fmul double %conv164, %call167
  %add169 = fadd double %conv159, %mul168
  %conv170 = fptrunc double %add169 to float
  %116 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels171 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %116, i32 0, i32 4
  %call172 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels171, i64 11)
  %117 = load float*, float** %call172, align 8
  %118 = load i32, i32* %niSample, align 4
  %idxprom173 = zext i32 %118 to i64
  %arrayidx174 = getelementptr inbounds float, float* %117, i64 %idxprom173
  store float %conv170, float* %arrayidx174, align 4
  %m_pfTempSample175 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %119 = load float*, float** %m_pfTempSample175, align 8
  %arrayidx176 = getelementptr inbounds float, float* %119, i64 12
  %120 = load float, float* %arrayidx176, align 4
  %mul177 = fmul float 2.500000e-01, %120
  %m_fCosBeta178 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %121 = load float, float* %m_fCosBeta178, align 8
  %mul179 = fmul float %mul177, %121
  %m_fCos2Beta180 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %122 = load float, float* %m_fCos2Beta180, align 8
  %mul181 = fmul float 1.500000e+01, %122
  %add182 = fadd float -1.000000e+00, %mul181
  %mul183 = fmul float %mul179, %add182
  %conv184 = fpext float %mul183 to double
  %123 = load float, float* %fSqrt15, align 4
  %mul185 = fmul float 5.000000e-01, %123
  %m_pfTempSample186 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %124 = load float*, float** %m_pfTempSample186, align 8
  %arrayidx187 = getelementptr inbounds float, float* %124, i64 14
  %125 = load float, float* %arrayidx187, align 4
  %mul188 = fmul float %mul185, %125
  %m_fCosBeta189 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %126 = load float, float* %m_fCosBeta189, align 8
  %mul190 = fmul float %mul188, %126
  %conv191 = fpext float %mul190 to double
  %m_fSinBeta192 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %127 = load float, float* %m_fSinBeta192, align 4
  %conv193 = fpext float %127 to double
  %call194 = call double @pow(double %conv193, double 2.000000e+00) #3
  %mul195 = fmul double %conv191, %call194
  %add196 = fadd double %conv184, %mul195
  %128 = load float, float* %fSqrt5_2, align 4
  %mul197 = fmul float 5.000000e-01, %128
  %m_pfTempSample198 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %129 = load float*, float** %m_pfTempSample198, align 8
  %arrayidx199 = getelementptr inbounds float, float* %129, i64 15
  %130 = load float, float* %arrayidx199, align 4
  %mul200 = fmul float %mul197, %130
  %conv201 = fpext float %mul200 to double
  %m_fSinBeta202 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %131 = load float, float* %m_fSinBeta202, align 4
  %conv203 = fpext float %131 to double
  %call204 = call double @pow(double %conv203, double 3.000000e+00) #3
  %mul205 = fmul double %conv201, %call204
  %add206 = fadd double %add196, %mul205
  %132 = load float, float* %fSqrt3_2, align 4
  %mul207 = fmul float 1.250000e-01, %132
  %m_pfTempSample208 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %133 = load float*, float** %m_pfTempSample208, align 8
  %arrayidx209 = getelementptr inbounds float, float* %133, i64 13
  %134 = load float, float* %arrayidx209, align 4
  %mul210 = fmul float %mul207, %134
  %m_fSinBeta211 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %135 = load float, float* %m_fSinBeta211, align 4
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 30
  %136 = load float, float* %m_fSin3Beta, align 4
  %mul212 = fmul float 5.000000e+00, %136
  %add213 = fadd float %135, %mul212
  %mul214 = fmul float %mul210, %add213
  %conv215 = fpext float %mul214 to double
  %add216 = fadd double %add206, %conv215
  %conv217 = fptrunc double %add216 to float
  %137 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels218 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %137, i32 0, i32 4
  %call219 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels218, i64 12)
  %138 = load float*, float** %call219, align 8
  %139 = load i32, i32* %niSample, align 4
  %idxprom220 = zext i32 %139 to i64
  %arrayidx221 = getelementptr inbounds float, float* %138, i64 %idxprom220
  store float %conv217, float* %arrayidx221, align 4
  %m_pfTempSample222 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %140 = load float*, float** %m_pfTempSample222, align 8
  %arrayidx223 = getelementptr inbounds float, float* %140, i64 13
  %141 = load float, float* %arrayidx223, align 4
  %mul224 = fmul float 6.250000e-02, %141
  %m_fCosBeta225 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %142 = load float, float* %m_fCosBeta225, align 8
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 29
  %143 = load float, float* %m_fCos3Beta, align 8
  %mul226 = fmul float 1.500000e+01, %143
  %add227 = fadd float %142, %mul226
  %mul228 = fmul float %mul224, %add227
  %144 = load float, float* %fSqrt5_2, align 4
  %mul229 = fmul float 2.500000e-01, %144
  %m_pfTempSample230 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %145 = load float*, float** %m_pfTempSample230, align 8
  %arrayidx231 = getelementptr inbounds float, float* %145, i64 14
  %146 = load float, float* %arrayidx231, align 4
  %mul232 = fmul float %mul229, %146
  %m_fCos2Beta233 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %147 = load float, float* %m_fCos2Beta233, align 8
  %mul234 = fmul float 3.000000e+00, %147
  %add235 = fadd float 1.000000e+00, %mul234
  %mul236 = fmul float %mul232, %add235
  %m_fSinBeta237 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %148 = load float, float* %m_fSinBeta237, align 4
  %mul238 = fmul float %mul236, %148
  %add239 = fadd float %mul228, %mul238
  %conv240 = fpext float %add239 to double
  %149 = load float, float* %fSqrt15, align 4
  %mul241 = fmul float 2.500000e-01, %149
  %m_pfTempSample242 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %150 = load float*, float** %m_pfTempSample242, align 8
  %arrayidx243 = getelementptr inbounds float, float* %150, i64 15
  %151 = load float, float* %arrayidx243, align 4
  %mul244 = fmul float %mul241, %151
  %m_fCosBeta245 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %152 = load float, float* %m_fCosBeta245, align 8
  %mul246 = fmul float %mul244, %152
  %conv247 = fpext float %mul246 to double
  %m_fSinBeta248 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %153 = load float, float* %m_fSinBeta248, align 4
  %conv249 = fpext float %153 to double
  %call250 = call double @pow(double %conv249, double 2.000000e+00) #3
  %mul251 = fmul double %conv247, %call250
  %add252 = fadd double %conv240, %mul251
  %154 = load float, float* %fSqrt3_2, align 4
  %conv253 = fpext float %154 to double
  %mul254 = fmul double 1.250000e-01, %conv253
  %m_pfTempSample255 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %155 = load float*, float** %m_pfTempSample255, align 8
  %arrayidx256 = getelementptr inbounds float, float* %155, i64 12
  %156 = load float, float* %arrayidx256, align 4
  %conv257 = fpext float %156 to double
  %mul258 = fmul double %mul254, %conv257
  %m_fSinBeta259 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %157 = load float, float* %m_fSinBeta259, align 4
  %m_fSin3Beta260 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 30
  %158 = load float, float* %m_fSin3Beta260, align 4
  %mul261 = fmul float 5.000000e+00, %158
  %add262 = fadd float %157, %mul261
  %conv263 = fpext float %add262 to double
  %mul264 = fmul double %mul258, %conv263
  %sub265 = fsub double %add252, %mul264
  %conv266 = fptrunc double %sub265 to float
  %159 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels267 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %159, i32 0, i32 4
  %call268 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels267, i64 13)
  %160 = load float*, float** %call268, align 8
  %161 = load i32, i32* %niSample, align 4
  %idxprom269 = zext i32 %161 to i64
  %arrayidx270 = getelementptr inbounds float, float* %160, i64 %idxprom269
  store float %conv266, float* %arrayidx270, align 4
  %m_pfTempSample271 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %162 = load float*, float** %m_pfTempSample271, align 8
  %arrayidx272 = getelementptr inbounds float, float* %162, i64 14
  %163 = load float, float* %arrayidx272, align 4
  %mul273 = fmul float 1.250000e-01, %163
  %m_fCosBeta274 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %164 = load float, float* %m_fCosBeta274, align 8
  %mul275 = fmul float 5.000000e+00, %164
  %m_fCos3Beta276 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 29
  %165 = load float, float* %m_fCos3Beta276, align 8
  %mul277 = fmul float 3.000000e+00, %165
  %add278 = fadd float %mul275, %mul277
  %mul279 = fmul float %mul273, %add278
  %166 = load float, float* %fSqrt3_2, align 4
  %mul280 = fmul float 2.500000e-01, %166
  %m_pfTempSample281 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %167 = load float*, float** %m_pfTempSample281, align 8
  %arrayidx282 = getelementptr inbounds float, float* %167, i64 15
  %168 = load float, float* %arrayidx282, align 4
  %mul283 = fmul float %mul280, %168
  %m_fCos2Beta284 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %169 = load float, float* %m_fCos2Beta284, align 8
  %add285 = fadd float 3.000000e+00, %169
  %mul286 = fmul float %mul283, %add285
  %m_fSinBeta287 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %170 = load float, float* %m_fSinBeta287, align 4
  %mul288 = fmul float %mul286, %170
  %add289 = fadd float %mul279, %mul288
  %conv290 = fpext float %add289 to double
  %171 = load float, float* %fSqrt15, align 4
  %mul291 = fmul float 5.000000e-01, %171
  %m_pfTempSample292 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %172 = load float*, float** %m_pfTempSample292, align 8
  %arrayidx293 = getelementptr inbounds float, float* %172, i64 12
  %173 = load float, float* %arrayidx293, align 4
  %mul294 = fmul float %mul291, %173
  %m_fCosBeta295 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %174 = load float, float* %m_fCosBeta295, align 8
  %mul296 = fmul float %mul294, %174
  %conv297 = fpext float %mul296 to double
  %m_fSinBeta298 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %175 = load float, float* %m_fSinBeta298, align 4
  %conv299 = fpext float %175 to double
  %call300 = call double @pow(double %conv299, double 2.000000e+00) #3
  %mul301 = fmul double %conv297, %call300
  %add302 = fadd double %conv290, %mul301
  %176 = load float, float* %fSqrt5_2, align 4
  %conv303 = fpext float %176 to double
  %mul304 = fmul double 1.250000e-01, %conv303
  %m_pfTempSample305 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %177 = load float*, float** %m_pfTempSample305, align 8
  %arrayidx306 = getelementptr inbounds float, float* %177, i64 13
  %178 = load float, float* %arrayidx306, align 4
  %conv307 = fpext float %178 to double
  %mul308 = fmul double %mul304, %conv307
  %m_fSinBeta309 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %179 = load float, float* %m_fSinBeta309, align 4
  %m_fSin3Beta310 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 30
  %180 = load float, float* %m_fSin3Beta310, align 4
  %mul311 = fmul float 3.000000e+00, %180
  %sub312 = fsub float %179, %mul311
  %conv313 = fpext float %sub312 to double
  %mul314 = fmul double %mul308, %conv313
  %add315 = fadd double %add302, %mul314
  %conv316 = fptrunc double %add315 to float
  %181 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels317 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %181, i32 0, i32 4
  %call318 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels317, i64 14)
  %182 = load float*, float** %call318, align 8
  %183 = load i32, i32* %niSample, align 4
  %idxprom319 = zext i32 %183 to i64
  %arrayidx320 = getelementptr inbounds float, float* %182, i64 %idxprom319
  store float %conv316, float* %arrayidx320, align 4
  %m_pfTempSample321 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %184 = load float*, float** %m_pfTempSample321, align 8
  %arrayidx322 = getelementptr inbounds float, float* %184, i64 15
  %185 = load float, float* %arrayidx322, align 4
  %mul323 = fmul float 6.250000e-02, %185
  %m_fCosBeta324 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %186 = load float, float* %m_fCosBeta324, align 8
  %mul325 = fmul float 1.500000e+01, %186
  %m_fCos3Beta326 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 29
  %187 = load float, float* %m_fCos3Beta326, align 8
  %add327 = fadd float %mul325, %187
  %mul328 = fmul float %mul323, %add327
  %188 = load float, float* %fSqrt3_2, align 4
  %mul329 = fmul float 2.500000e-01, %188
  %m_pfTempSample330 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %189 = load float*, float** %m_pfTempSample330, align 8
  %arrayidx331 = getelementptr inbounds float, float* %189, i64 14
  %190 = load float, float* %arrayidx331, align 4
  %mul332 = fmul float %mul329, %190
  %m_fCos2Beta333 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 23
  %191 = load float, float* %m_fCos2Beta333, align 8
  %add334 = fadd float 3.000000e+00, %191
  %mul335 = fmul float %mul332, %add334
  %m_fSinBeta336 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %192 = load float, float* %m_fSinBeta336, align 4
  %mul337 = fmul float %mul335, %192
  %sub338 = fsub float %mul328, %mul337
  %conv339 = fpext float %sub338 to double
  %193 = load float, float* %fSqrt15, align 4
  %mul340 = fmul float 2.500000e-01, %193
  %m_pfTempSample341 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %194 = load float*, float** %m_pfTempSample341, align 8
  %arrayidx342 = getelementptr inbounds float, float* %194, i64 13
  %195 = load float, float* %arrayidx342, align 4
  %mul343 = fmul float %mul340, %195
  %m_fCosBeta344 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 17
  %196 = load float, float* %m_fCosBeta344, align 8
  %mul345 = fmul float %mul343, %196
  %conv346 = fpext float %mul345 to double
  %m_fSinBeta347 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %197 = load float, float* %m_fSinBeta347, align 4
  %conv348 = fpext float %197 to double
  %call349 = call double @pow(double %conv348, double 2.000000e+00) #3
  %mul350 = fmul double %conv346, %call349
  %add351 = fadd double %conv339, %mul350
  %198 = load float, float* %fSqrt5_2, align 4
  %conv352 = fpext float %198 to double
  %mul353 = fmul double 5.000000e-01, %conv352
  %m_pfTempSample354 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %199 = load float*, float** %m_pfTempSample354, align 8
  %arrayidx355 = getelementptr inbounds float, float* %199, i64 12
  %200 = load float, float* %arrayidx355, align 4
  %conv356 = fpext float %200 to double
  %mul357 = fmul double %mul353, %conv356
  %m_fSinBeta358 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 18
  %201 = load float, float* %m_fSinBeta358, align 4
  %conv359 = fpext float %201 to double
  %call360 = call double @pow(double %conv359, double 3.000000e+00) #3
  %mul361 = fmul double %mul357, %call360
  %sub362 = fsub double %add351, %mul361
  %conv363 = fptrunc double %sub362 to float
  %202 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels364 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %202, i32 0, i32 4
  %call365 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels364, i64 15)
  %203 = load float*, float** %call365, align 8
  %204 = load i32, i32* %niSample, align 4
  %idxprom366 = zext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds float, float* %203, i64 %idxprom366
  store float %conv363, float* %arrayidx367, align 4
  %205 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels368 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %205, i32 0, i32 4
  %call369 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels368, i64 15)
  %206 = load float*, float** %call369, align 8
  %207 = load i32, i32* %niSample, align 4
  %idxprom370 = zext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds float, float* %206, i64 %idxprom370
  %208 = load float, float* %arrayidx371, align 4
  %sub372 = fsub float -0.000000e+00, %208
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 32
  %209 = load float, float* %m_fSin3Gamma, align 4
  %mul373 = fmul float %sub372, %209
  %210 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels374 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %210, i32 0, i32 4
  %call375 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels374, i64 9)
  %211 = load float*, float** %call375, align 8
  %212 = load i32, i32* %niSample, align 4
  %idxprom376 = zext i32 %212 to i64
  %arrayidx377 = getelementptr inbounds float, float* %211, i64 %idxprom376
  %213 = load float, float* %arrayidx377, align 4
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 31
  %214 = load float, float* %m_fCos3Gamma, align 8
  %mul378 = fmul float %213, %214
  %add379 = fadd float %mul373, %mul378
  %m_pfTempSample380 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %215 = load float*, float** %m_pfTempSample380, align 8
  %arrayidx381 = getelementptr inbounds float, float* %215, i64 9
  store float %add379, float* %arrayidx381, align 4
  %216 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels382 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %216, i32 0, i32 4
  %call383 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels382, i64 14)
  %217 = load float*, float** %call383, align 8
  %218 = load i32, i32* %niSample, align 4
  %idxprom384 = zext i32 %218 to i64
  %arrayidx385 = getelementptr inbounds float, float* %217, i64 %idxprom384
  %219 = load float, float* %arrayidx385, align 4
  %sub386 = fsub float -0.000000e+00, %219
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 26
  %220 = load float, float* %m_fSin2Gamma, align 4
  %mul387 = fmul float %sub386, %220
  %221 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels388 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %221, i32 0, i32 4
  %call389 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels388, i64 10)
  %222 = load float*, float** %call389, align 8
  %223 = load i32, i32* %niSample, align 4
  %idxprom390 = zext i32 %223 to i64
  %arrayidx391 = getelementptr inbounds float, float* %222, i64 %idxprom390
  %224 = load float, float* %arrayidx391, align 4
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 25
  %225 = load float, float* %m_fCos2Gamma, align 8
  %mul392 = fmul float %224, %225
  %add393 = fadd float %mul387, %mul392
  %m_pfTempSample394 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %226 = load float*, float** %m_pfTempSample394, align 8
  %arrayidx395 = getelementptr inbounds float, float* %226, i64 10
  store float %add393, float* %arrayidx395, align 4
  %227 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels396 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %227, i32 0, i32 4
  %call397 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels396, i64 13)
  %228 = load float*, float** %call397, align 8
  %229 = load i32, i32* %niSample, align 4
  %idxprom398 = zext i32 %229 to i64
  %arrayidx399 = getelementptr inbounds float, float* %228, i64 %idxprom398
  %230 = load float, float* %arrayidx399, align 4
  %sub400 = fsub float -0.000000e+00, %230
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %231 = load float, float* %m_fSinGamma, align 4
  %mul401 = fmul float %sub400, %231
  %232 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels402 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %232, i32 0, i32 4
  %call403 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels402, i64 11)
  %233 = load float*, float** %call403, align 8
  %234 = load i32, i32* %niSample, align 4
  %idxprom404 = zext i32 %234 to i64
  %arrayidx405 = getelementptr inbounds float, float* %233, i64 %idxprom404
  %235 = load float, float* %arrayidx405, align 4
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %236 = load float, float* %m_fCosGamma, align 8
  %mul406 = fmul float %235, %236
  %add407 = fadd float %mul401, %mul406
  %m_pfTempSample408 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %237 = load float*, float** %m_pfTempSample408, align 8
  %arrayidx409 = getelementptr inbounds float, float* %237, i64 11
  store float %add407, float* %arrayidx409, align 4
  %238 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels410 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %238, i32 0, i32 4
  %call411 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels410, i64 12)
  %239 = load float*, float** %call411, align 8
  %240 = load i32, i32* %niSample, align 4
  %idxprom412 = zext i32 %240 to i64
  %arrayidx413 = getelementptr inbounds float, float* %239, i64 %idxprom412
  %241 = load float, float* %arrayidx413, align 4
  %m_pfTempSample414 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %242 = load float*, float** %m_pfTempSample414, align 8
  %arrayidx415 = getelementptr inbounds float, float* %242, i64 12
  store float %241, float* %arrayidx415, align 4
  %243 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels416 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %243, i32 0, i32 4
  %call417 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels416, i64 13)
  %244 = load float*, float** %call417, align 8
  %245 = load i32, i32* %niSample, align 4
  %idxprom418 = zext i32 %245 to i64
  %arrayidx419 = getelementptr inbounds float, float* %244, i64 %idxprom418
  %246 = load float, float* %arrayidx419, align 4
  %m_fCosGamma420 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 19
  %247 = load float, float* %m_fCosGamma420, align 8
  %mul421 = fmul float %246, %247
  %248 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels422 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %248, i32 0, i32 4
  %call423 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels422, i64 11)
  %249 = load float*, float** %call423, align 8
  %250 = load i32, i32* %niSample, align 4
  %idxprom424 = zext i32 %250 to i64
  %arrayidx425 = getelementptr inbounds float, float* %249, i64 %idxprom424
  %251 = load float, float* %arrayidx425, align 4
  %m_fSinGamma426 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 20
  %252 = load float, float* %m_fSinGamma426, align 4
  %mul427 = fmul float %251, %252
  %add428 = fadd float %mul421, %mul427
  %m_pfTempSample429 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %253 = load float*, float** %m_pfTempSample429, align 8
  %arrayidx430 = getelementptr inbounds float, float* %253, i64 13
  store float %add428, float* %arrayidx430, align 4
  %254 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels431 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %254, i32 0, i32 4
  %call432 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels431, i64 14)
  %255 = load float*, float** %call432, align 8
  %256 = load i32, i32* %niSample, align 4
  %idxprom433 = zext i32 %256 to i64
  %arrayidx434 = getelementptr inbounds float, float* %255, i64 %idxprom433
  %257 = load float, float* %arrayidx434, align 4
  %m_fCos2Gamma435 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 25
  %258 = load float, float* %m_fCos2Gamma435, align 8
  %mul436 = fmul float %257, %258
  %259 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels437 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %259, i32 0, i32 4
  %call438 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels437, i64 10)
  %260 = load float*, float** %call438, align 8
  %261 = load i32, i32* %niSample, align 4
  %idxprom439 = zext i32 %261 to i64
  %arrayidx440 = getelementptr inbounds float, float* %260, i64 %idxprom439
  %262 = load float, float* %arrayidx440, align 4
  %m_fSin2Gamma441 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 26
  %263 = load float, float* %m_fSin2Gamma441, align 4
  %mul442 = fmul float %262, %263
  %add443 = fadd float %mul436, %mul442
  %m_pfTempSample444 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %264 = load float*, float** %m_pfTempSample444, align 8
  %arrayidx445 = getelementptr inbounds float, float* %264, i64 14
  store float %add443, float* %arrayidx445, align 4
  %265 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels446 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %265, i32 0, i32 4
  %call447 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels446, i64 15)
  %266 = load float*, float** %call447, align 8
  %267 = load i32, i32* %niSample, align 4
  %idxprom448 = zext i32 %267 to i64
  %arrayidx449 = getelementptr inbounds float, float* %266, i64 %idxprom448
  %268 = load float, float* %arrayidx449, align 4
  %m_fCos3Gamma450 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 31
  %269 = load float, float* %m_fCos3Gamma450, align 8
  %mul451 = fmul float %268, %269
  %270 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels452 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %270, i32 0, i32 4
  %call453 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels452, i64 9)
  %271 = load float*, float** %call453, align 8
  %272 = load i32, i32* %niSample, align 4
  %idxprom454 = zext i32 %272 to i64
  %arrayidx455 = getelementptr inbounds float, float* %271, i64 %idxprom454
  %273 = load float, float* %arrayidx455, align 4
  %m_fSin3Gamma456 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 32
  %274 = load float, float* %m_fSin3Gamma456, align 4
  %mul457 = fmul float %273, %274
  %add458 = fadd float %mul451, %mul457
  %m_pfTempSample459 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %275 = load float*, float** %m_pfTempSample459, align 8
  %arrayidx460 = getelementptr inbounds float, float* %275, i64 15
  store float %add458, float* %arrayidx460, align 4
  %m_pfTempSample461 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %276 = load float*, float** %m_pfTempSample461, align 8
  %arrayidx462 = getelementptr inbounds float, float* %276, i64 9
  %277 = load float, float* %arrayidx462, align 4
  %278 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels463 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %278, i32 0, i32 4
  %call464 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels463, i64 9)
  %279 = load float*, float** %call464, align 8
  %280 = load i32, i32* %niSample, align 4
  %idxprom465 = zext i32 %280 to i64
  %arrayidx466 = getelementptr inbounds float, float* %279, i64 %idxprom465
  store float %277, float* %arrayidx466, align 4
  %m_pfTempSample467 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %281 = load float*, float** %m_pfTempSample467, align 8
  %arrayidx468 = getelementptr inbounds float, float* %281, i64 10
  %282 = load float, float* %arrayidx468, align 4
  %283 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels469 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %283, i32 0, i32 4
  %call470 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels469, i64 10)
  %284 = load float*, float** %call470, align 8
  %285 = load i32, i32* %niSample, align 4
  %idxprom471 = zext i32 %285 to i64
  %arrayidx472 = getelementptr inbounds float, float* %284, i64 %idxprom471
  store float %282, float* %arrayidx472, align 4
  %m_pfTempSample473 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %286 = load float*, float** %m_pfTempSample473, align 8
  %arrayidx474 = getelementptr inbounds float, float* %286, i64 11
  %287 = load float, float* %arrayidx474, align 4
  %288 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels475 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %288, i32 0, i32 4
  %call476 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels475, i64 11)
  %289 = load float*, float** %call476, align 8
  %290 = load i32, i32* %niSample, align 4
  %idxprom477 = zext i32 %290 to i64
  %arrayidx478 = getelementptr inbounds float, float* %289, i64 %idxprom477
  store float %287, float* %arrayidx478, align 4
  %m_pfTempSample479 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %291 = load float*, float** %m_pfTempSample479, align 8
  %arrayidx480 = getelementptr inbounds float, float* %291, i64 12
  %292 = load float, float* %arrayidx480, align 4
  %293 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels481 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %293, i32 0, i32 4
  %call482 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels481, i64 12)
  %294 = load float*, float** %call482, align 8
  %295 = load i32, i32* %niSample, align 4
  %idxprom483 = zext i32 %295 to i64
  %arrayidx484 = getelementptr inbounds float, float* %294, i64 %idxprom483
  store float %292, float* %arrayidx484, align 4
  %m_pfTempSample485 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %296 = load float*, float** %m_pfTempSample485, align 8
  %arrayidx486 = getelementptr inbounds float, float* %296, i64 13
  %297 = load float, float* %arrayidx486, align 4
  %298 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels487 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %298, i32 0, i32 4
  %call488 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels487, i64 13)
  %299 = load float*, float** %call488, align 8
  %300 = load i32, i32* %niSample, align 4
  %idxprom489 = zext i32 %300 to i64
  %arrayidx490 = getelementptr inbounds float, float* %299, i64 %idxprom489
  store float %297, float* %arrayidx490, align 4
  %m_pfTempSample491 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %301 = load float*, float** %m_pfTempSample491, align 8
  %arrayidx492 = getelementptr inbounds float, float* %301, i64 14
  %302 = load float, float* %arrayidx492, align 4
  %303 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels493 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %303, i32 0, i32 4
  %call494 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels493, i64 14)
  %304 = load float*, float** %call494, align 8
  %305 = load i32, i32* %niSample, align 4
  %idxprom495 = zext i32 %305 to i64
  %arrayidx496 = getelementptr inbounds float, float* %304, i64 %idxprom495
  store float %302, float* %arrayidx496, align 4
  %m_pfTempSample497 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this1, i32 0, i32 2
  %306 = load float*, float** %m_pfTempSample497, align 8
  %arrayidx498 = getelementptr inbounds float, float* %306, i64 15
  %307 = load float, float* %arrayidx498, align 4
  %308 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels499 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %308, i32 0, i32 4
  %call500 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels499, i64 15)
  %309 = load float*, float** %call500, align 8
  %310 = load i32, i32* %niSample, align 4
  %idxprom501 = zext i32 %310 to i64
  %arrayidx502 = getelementptr inbounds float, float* %309, i64 %idxprom501
  store float %307, float* %arrayidx502, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %311 = load i32, i32* %niSample, align 4
  %inc = add i32 %311, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #2

declare dso_local void @kiss_fftri(%struct.kiss_fftr_state*, %struct.kiss_fft_cpx*, float*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicSpeakerC2Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* %0)
  %1 = bitcast %class.CAmbisonicSpeaker* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicSpeakerD0Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %this1) #3
  %0 = bitcast %class.CAmbisonicSpeaker* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN17CAmbisonicSpeaker9ConfigureEjbj(%class.CAmbisonicSpeaker* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nMisc.addr = alloca i32, align 4
  %success = alloca i8, align 1
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nMisc.addr, align 4
  %call = call zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1
  ret i1 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicSpeaker7RefreshEv(%class.CAmbisonicSpeaker* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* %this, %class.CBFormat* %pBFSrc, i32 %nSamples, float* %pfDst) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSpeaker*, align 8
  %pBFSrc.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %pfDst.addr = alloca float*, align 8
  %niChannel = alloca i32, align 4
  %niSample = alloca i32, align 4
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %coeff = alloca float, align 4
  %coeff17 = alloca float, align 4
  store %class.CAmbisonicSpeaker* %this, %class.CAmbisonicSpeaker** %this.addr, align 8
  store %class.CBFormat* %pBFSrc, %class.CBFormat** %pBFSrc.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  store float* %pfDst, float** %pfDst.addr, align 8
  %this1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %this.addr, align 8
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSample, align 4
  %0 = load float*, float** %pfDst.addr, align 8
  %1 = bitcast float* %0 to i8*
  %2 = load i32, i32* %nSamples.addr, align 4
  %conv = zext i32 %2 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc32, %entry
  %3 = load i32, i32* %niChannel, align 4
  %4 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %for.body, label %for.end34

for.body:                                         ; preds = %for.cond
  %6 = load %class.CBFormat*, %class.CBFormat** %pBFSrc.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %6, i32 0, i32 4
  %7 = load i32, i32* %niChannel, align 4
  %conv2 = zext i32 %7 to i64
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv2)
  %8 = load float*, float** %call, align 8
  store float* %8, float** %in, align 8
  %9 = load float*, float** %pfDst.addr, align 8
  store float* %9, float** %out, align 8
  %10 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %10, i32 0, i32 2
  %11 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %11 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %12 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %12, i32 0, i32 1
  %13 = load i32, i32* %niChannel, align 4
  %conv3 = zext i32 %13 to i64
  %call4 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff, i64 %conv3) #3
  %14 = load float, float* %call4, align 4
  %conv5 = fpext float %14 to double
  %15 = load i32, i32* %niChannel, align 4
  %conv6 = uitofp i32 %15 to double
  %call7 = call double @sqrt(double %conv6) #3
  %16 = call double @llvm.floor.f64(double %call7)
  %mul8 = fmul double 2.000000e+00, %16
  %add = fadd double %mul8, 1.000000e+00
  %mul9 = fmul double %conv5, %add
  %conv10 = fptrunc double %mul9 to float
  store float %conv10, float* %coeff, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc, %if.then
  %17 = load i32, i32* %niSample, align 4
  %18 = load i32, i32* %nSamples.addr, align 4
  %cmp12 = icmp ult i32 %17, %18
  br i1 %cmp12, label %for.body13, label %for.end

for.body13:                                       ; preds = %for.cond11
  %19 = load float*, float** %in, align 8
  %incdec.ptr = getelementptr inbounds float, float* %19, i32 1
  store float* %incdec.ptr, float** %in, align 8
  %20 = load float, float* %19, align 4
  %21 = load float, float* %coeff, align 4
  %mul14 = fmul float %20, %21
  %22 = load float*, float** %out, align 8
  %incdec.ptr15 = getelementptr inbounds float, float* %22, i32 1
  store float* %incdec.ptr15, float** %out, align 8
  %23 = load float, float* %22, align 4
  %add16 = fadd float %23, %mul14
  store float %add16, float* %22, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body13
  %24 = load i32, i32* %niSample, align 4
  %inc = add i32 %24, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond11

for.end:                                          ; preds = %for.cond11
  br label %if.end

if.else:                                          ; preds = %for.body
  %25 = bitcast %class.CAmbisonicSpeaker* %this1 to %class.CAmbisonicSource*
  %m_pfCoeff18 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %25, i32 0, i32 1
  %26 = load i32, i32* %niChannel, align 4
  %conv19 = zext i32 %26 to i64
  %call20 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfCoeff18, i64 %conv19) #3
  %27 = load float, float* %call20, align 4
  %mul21 = fmul float %27, 2.000000e+00
  store float %mul21, float* %coeff17, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc29, %if.else
  %28 = load i32, i32* %niSample, align 4
  %29 = load i32, i32* %nSamples.addr, align 4
  %cmp23 = icmp ult i32 %28, %29
  br i1 %cmp23, label %for.body24, label %for.end31

for.body24:                                       ; preds = %for.cond22
  %30 = load float*, float** %in, align 8
  %incdec.ptr25 = getelementptr inbounds float, float* %30, i32 1
  store float* %incdec.ptr25, float** %in, align 8
  %31 = load float, float* %30, align 4
  %32 = load float, float* %coeff17, align 4
  %mul26 = fmul float %31, %32
  %33 = load float*, float** %out, align 8
  %incdec.ptr27 = getelementptr inbounds float, float* %33, i32 1
  store float* %incdec.ptr27, float** %out, align 8
  %34 = load float, float* %33, align 4
  %add28 = fadd float %34, %mul26
  store float %add28, float* %33, align 4
  br label %for.inc29

for.inc29:                                        ; preds = %for.body24
  %35 = load i32, i32* %niSample, align 4
  %inc30 = add i32 %35, 1
  store i32 %inc30, i32* %niSample, align 4
  br label %for.cond22

for.end31:                                        ; preds = %for.cond22
  br label %if.end

if.end:                                           ; preds = %for.end31, %for.end
  br label %for.inc32

for.inc32:                                        ; preds = %if.end
  %36 = load i32, i32* %niChannel, align 4
  %inc33 = add i32 %36, 1
  store i32 %inc33, i32* %niChannel, align 4
  br label %for.cond

for.end34:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoderC2Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CAmbisonicDecoder* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 1
  store i32 0, i32* %m_nSpeakerSetUp, align 8
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 0, i32* %m_nSpeakers, align 4
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* null, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicDecoder* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %tobool = icmp ne %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_pAmbSpeakers2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %2 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers2, align 8
  %isnull = icmp eq %class.CAmbisonicSpeaker* %2, null
  br i1 %isnull, label %delete.end4, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %3 = bitcast %class.CAmbisonicSpeaker* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 -8
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %2, i64 %6
  %arraydestroy.isempty = icmp eq %class.CAmbisonicSpeaker* %2, %delete.end
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %delete.notnull
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %delete.end, %delete.notnull ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element) #3
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %2
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %arraydestroy.body, %delete.notnull
  call void @_ZdaPv(i8* %4) #19
  br label %delete.end4

delete.end4:                                      ; preds = %arraydestroy.done3, %if.then
  br label %if.end

if.end:                                           ; preds = %delete.end4, %entry
  %7 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %7) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoderD0Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  call void @_ZN17CAmbisonicDecoderD1Ev(%class.CAmbisonicDecoder* %this1) #3
  %0 = bitcast %class.CAmbisonicDecoder* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSpeakerSetUp, i32 %nSpeakers) #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nSpeakerSetUp.addr = alloca i32, align 4
  %nSpeakers.addr = alloca i32, align 4
  %success = alloca i8, align 1
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nSpeakerSetUp, i32* %nSpeakerSetUp.addr, align 4
  store i32 %nSpeakers, i32* %nSpeakers.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nSpeakerSetUp.addr, align 4
  %call = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nSpeakerSetUp.addr, align 4
  %6 = load i32, i32* %nSpeakers.addr, align 4
  call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this1, i32 %5, i32 %6)
  %7 = bitcast %class.CAmbisonicDecoder* %this1 to void (%class.CAmbisonicDecoder*)***
  %vtable = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %7, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable, i64 4
  %8 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn, align 8
  call void %8(%class.CAmbisonicDecoder* %this1)
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %9 = load i1, i1* %retval, align 1
  ret i1 %9
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers) #11 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeakerSetUp.addr = alloca i32, align 4
  %nSpeakers.addr = alloca i32, align 4
  %polPosition = alloca %struct.PolarPoint, align 4
  %niSpeaker = alloca i32, align 4
  %fSpeakerGain = alloca float, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %agg.tmp = alloca %struct.PolarPoint, align 4
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp85 = alloca %struct.PolarPoint, align 4
  %agg.tmp85.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp100 = alloca %struct.PolarPoint, align 4
  %agg.tmp100.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp137 = alloca %struct.PolarPoint, align 4
  %agg.tmp137.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp152 = alloca %struct.PolarPoint, align 4
  %agg.tmp152.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp167 = alloca %struct.PolarPoint, align 4
  %agg.tmp167.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp204 = alloca %struct.PolarPoint, align 4
  %agg.tmp204.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp219 = alloca %struct.PolarPoint, align 4
  %agg.tmp219.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp234 = alloca %struct.PolarPoint, align 4
  %agg.tmp234.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp249 = alloca %struct.PolarPoint, align 4
  %agg.tmp249.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp286 = alloca %struct.PolarPoint, align 4
  %agg.tmp286.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp301 = alloca %struct.PolarPoint, align 4
  %agg.tmp301.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp316 = alloca %struct.PolarPoint, align 4
  %agg.tmp316.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp331 = alloca %struct.PolarPoint, align 4
  %agg.tmp331.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp346 = alloca %struct.PolarPoint, align 4
  %agg.tmp346.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp392 = alloca %struct.PolarPoint, align 4
  %agg.tmp392.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp444 = alloca %struct.PolarPoint, align 4
  %agg.tmp444.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp496 = alloca %struct.PolarPoint, align 4
  %agg.tmp496.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp548 = alloca %struct.PolarPoint, align 4
  %agg.tmp548.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp600 = alloca %struct.PolarPoint, align 4
  %agg.tmp600.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp652 = alloca %struct.PolarPoint, align 4
  %agg.tmp652.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp708 = alloca %struct.PolarPoint, align 4
  %agg.tmp708.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp745 = alloca %struct.PolarPoint, align 4
  %agg.tmp745.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp787 = alloca %struct.PolarPoint, align 4
  %agg.tmp787.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp802 = alloca %struct.PolarPoint, align 4
  %agg.tmp802.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp819 = alloca %struct.PolarPoint, align 4
  %agg.tmp819.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp834 = alloca %struct.PolarPoint, align 4
  %agg.tmp834.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp849 = alloca %struct.PolarPoint, align 4
  %agg.tmp849.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp864 = alloca %struct.PolarPoint, align 4
  %agg.tmp864.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp881 = alloca %struct.PolarPoint, align 4
  %agg.tmp881.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp896 = alloca %struct.PolarPoint, align 4
  %agg.tmp896.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp913 = alloca %struct.PolarPoint, align 4
  %agg.tmp913.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp928 = alloca %struct.PolarPoint, align 4
  %agg.tmp928.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp943 = alloca %struct.PolarPoint, align 4
  %agg.tmp943.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp958 = alloca %struct.PolarPoint, align 4
  %agg.tmp958.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp975 = alloca %struct.PolarPoint, align 4
  %agg.tmp975.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp990 = alloca %struct.PolarPoint, align 4
  %agg.tmp990.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1007 = alloca %struct.PolarPoint, align 4
  %agg.tmp1007.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1022 = alloca %struct.PolarPoint, align 4
  %agg.tmp1022.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1037 = alloca %struct.PolarPoint, align 4
  %agg.tmp1037.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1052 = alloca %struct.PolarPoint, align 4
  %agg.tmp1052.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1069 = alloca %struct.PolarPoint, align 4
  %agg.tmp1069.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1084 = alloca %struct.PolarPoint, align 4
  %agg.tmp1084.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1138 = alloca %struct.PolarPoint, align 4
  %agg.tmp1138.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1175 = alloca %struct.PolarPoint, align 4
  %agg.tmp1175.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1223 = alloca %struct.PolarPoint, align 4
  %agg.tmp1223.coerce = alloca { <2 x float>, float }, align 4
  %agg.tmp1260 = alloca %struct.PolarPoint, align 4
  %agg.tmp1260.coerce = alloca { <2 x float>, float }, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeakerSetUp, i32* %nSpeakerSetUp.addr, align 4
  store i32 %nSpeakers, i32* %nSpeakers.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %0 = load i32, i32* %nSpeakerSetUp.addr, align 4
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 1
  store i32 %0, i32* %m_nSpeakerSetUp, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %tobool = icmp ne %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_pAmbSpeakers2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %2 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers2, align 8
  %isnull = icmp eq %class.CAmbisonicSpeaker* %2, null
  br i1 %isnull, label %delete.end4, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %3 = bitcast %class.CAmbisonicSpeaker* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 -8
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %2, i64 %6
  %arraydestroy.isempty = icmp eq %class.CAmbisonicSpeaker* %2, %delete.end
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %delete.notnull
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %delete.end, %delete.notnull ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element) #3
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %2
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %arraydestroy.body, %delete.notnull
  call void @_ZdaPv(i8* %4) #19
  br label %delete.end4

delete.end4:                                      ; preds = %arraydestroy.done3, %if.then
  br label %if.end

if.end:                                           ; preds = %delete.end4, %entry
  %7 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 bitcast (%struct.PolarPoint* @__const._ZN17CAmbisonicDecoder12SpeakerSetUpEij.polPosition to i8*), i64 12, i1 false)
  store i32 0, i32* %niSpeaker, align 4
  store float 0.000000e+00, float* %fSpeakerGain, align 4
  %m_nSpeakerSetUp5 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 1
  %8 = load i32, i32* %m_nSpeakerSetUp5, align 8
  switch i32 %8, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
    i32 1, label %sw.bb52
    i32 2, label %sw.bb103
    i32 3, label %sw.bb170
    i32 4, label %sw.bb252
    i32 5, label %sw.bb349
    i32 6, label %sw.bb398
    i32 7, label %sw.bb450
    i32 8, label %sw.bb502
    i32 9, label %sw.bb554
    i32 10, label %sw.bb606
    i32 11, label %sw.bb658
    i32 12, label %sw.bb751
    i32 13, label %sw.bb1087
    i32 14, label %sw.bb1181
  ]

sw.bb:                                            ; preds = %if.end
  %9 = load i32, i32* %nSpeakers.addr, align 4
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 %9, i32* %m_nSpeakers, align 4
  %m_nSpeakers6 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %10 = load i32, i32* %m_nSpeakers6, align 4
  %conv = zext i32 %10 to i64
  %11 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 88)
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = or i1 %12, %15
  %17 = extractvalue { i64, i1 } %14, 0
  %18 = select i1 %16, i64 -1, i64 %17
  %call = call i8* @_Znam(i64 %18) #18
  %19 = bitcast i8* %call to i64*
  store i64 %conv, i64* %19, align 16
  %20 = getelementptr inbounds i8, i8* %call, i64 8
  %21 = bitcast i8* %20 to %class.CAmbisonicSpeaker*
  %isempty = icmp eq i64 %conv, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %sw.bb
  %arrayctor.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %21, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont, %new.ctorloop
  %arrayctor.cur = phi %class.CAmbisonicSpeaker* [ %21, %new.ctorloop ], [ %arrayctor.next, %invoke.cont ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %arrayctor.loop
  %arrayctor.next = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %sw.bb, %invoke.cont
  %m_pAmbSpeakers13 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %21, %class.CAmbisonicSpeaker** %m_pAmbSpeakers13, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %arrayctor.cont
  %22 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers14 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %23 = load i32, i32* %m_nSpeakers14, align 4
  %cmp = icmp ult i32 %22, %23
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pAmbSpeakers15 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %24 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers15, align 8
  %25 = load i32, i32* %niSpeaker, align 4
  %idxprom = zext i32 %25 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %24, i64 %idxprom
  %26 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %26, i32 0, i32 1
  %27 = load i32, i32* %m_nOrder, align 8
  %28 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %28, i32 0, i32 2
  %29 = load i8, i8* %m_b3D, align 4
  %tobool16 = trunc i8 %29 to i1
  %30 = bitcast %class.CAmbisonicSpeaker* %arrayidx to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %30, align 8
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable, i64 2
  %31 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn, align 8
  %call17 = call zeroext i1 %31(%class.CAmbisonicSpeaker* %arrayidx, i32 %27, i1 zeroext %tobool16, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %niSpeaker, align 4
  %inc = add i32 %32, 1
  store i32 %inc, i32* %niSpeaker, align 4
  br label %for.cond

lpad:                                             ; preds = %arrayctor.loop
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %exn.slot, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %ehselector.slot, align 4
  %arraydestroy.isempty7 = icmp eq %class.CAmbisonicSpeaker* %21, %arrayctor.cur
  br i1 %arraydestroy.isempty7, label %arraydestroy.done12, label %arraydestroy.body8

arraydestroy.body8:                               ; preds = %arraydestroy.body8, %lpad
  %arraydestroy.elementPast9 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur, %lpad ], [ %arraydestroy.element10, %arraydestroy.body8 ]
  %arraydestroy.element10 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast9, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element10) #3
  %arraydestroy.done11 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element10, %21
  br i1 %arraydestroy.done11, label %arraydestroy.done12, label %arraydestroy.body8

arraydestroy.done12:                              ; preds = %arraydestroy.body8, %lpad
  call void @_ZdaPv(i8* %call) #19
  br label %eh.resume

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %m_nSpeakers19 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 1, i32* %m_nSpeakers19, align 4
  %m_nSpeakers20 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %36 = load i32, i32* %m_nSpeakers20, align 4
  %conv21 = zext i32 %36 to i64
  %37 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv21, i64 88)
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %39, i64 8)
  %41 = extractvalue { i64, i1 } %40, 1
  %42 = or i1 %38, %41
  %43 = extractvalue { i64, i1 } %40, 0
  %44 = select i1 %42, i64 -1, i64 %43
  %call22 = call i8* @_Znam(i64 %44) #18
  %45 = bitcast i8* %call22 to i64*
  store i64 %conv21, i64* %45, align 16
  %46 = getelementptr inbounds i8, i8* %call22, i64 8
  %47 = bitcast i8* %46 to %class.CAmbisonicSpeaker*
  %isempty23 = icmp eq i64 %conv21, 0
  br i1 %isempty23, label %arrayctor.cont38, label %new.ctorloop24

new.ctorloop24:                                   ; preds = %sw.bb18
  %arrayctor.end25 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %47, i64 %conv21
  br label %arrayctor.loop26

arrayctor.loop26:                                 ; preds = %invoke.cont29, %new.ctorloop24
  %arrayctor.cur27 = phi %class.CAmbisonicSpeaker* [ %47, %new.ctorloop24 ], [ %arrayctor.next36, %invoke.cont29 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur27)
          to label %invoke.cont29 unwind label %lpad28

invoke.cont29:                                    ; preds = %arrayctor.loop26
  %arrayctor.next36 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur27, i64 1
  %arrayctor.done37 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next36, %arrayctor.end25
  br i1 %arrayctor.done37, label %arrayctor.cont38, label %arrayctor.loop26

arrayctor.cont38:                                 ; preds = %sw.bb18, %invoke.cont29
  %m_pAmbSpeakers39 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %47, %class.CAmbisonicSpeaker** %m_pAmbSpeakers39, align 8
  %m_pAmbSpeakers40 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %48 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers40, align 8
  %arrayidx41 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %48, i64 0
  %49 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder42 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %49, i32 0, i32 1
  %50 = load i32, i32* %m_nOrder42, align 8
  %51 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D43 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %51, i32 0, i32 2
  %52 = load i8, i8* %m_b3D43, align 4
  %tobool44 = trunc i8 %52 to i1
  %53 = bitcast %class.CAmbisonicSpeaker* %arrayidx41 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable45 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %53, align 8
  %vfn46 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable45, i64 2
  %54 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn46, align 8
  %call47 = call zeroext i1 %54(%class.CAmbisonicSpeaker* %arrayidx41, i32 %50, i1 zeroext %tobool44, i32 0)
  %m_pAmbSpeakers48 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %55 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers48, align 8
  %arrayidx49 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %55, i64 0
  %56 = bitcast %class.CAmbisonicSpeaker* %arrayidx49 to %class.CAmbisonicSource*
  %57 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  %58 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 12, i1 false)
  %59 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*
  %60 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 12, i1 false)
  %61 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0
  %62 = load <2 x float>, <2 x float>* %61, align 4
  %63 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1
  %64 = load float, float* %63, align 4
  %65 = bitcast %class.CAmbisonicSource* %56 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable50 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %65, align 8
  %vfn51 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable50, i64 5
  %66 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn51, align 8
  call void %66(%class.CAmbisonicSource* %56, <2 x float> %62, float %64)
  br label %sw.epilog

lpad28:                                           ; preds = %arrayctor.loop26
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %exn.slot, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %ehselector.slot, align 4
  %arraydestroy.isempty30 = icmp eq %class.CAmbisonicSpeaker* %47, %arrayctor.cur27
  br i1 %arraydestroy.isempty30, label %arraydestroy.done35, label %arraydestroy.body31

arraydestroy.body31:                              ; preds = %arraydestroy.body31, %lpad28
  %arraydestroy.elementPast32 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur27, %lpad28 ], [ %arraydestroy.element33, %arraydestroy.body31 ]
  %arraydestroy.element33 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast32, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element33) #3
  %arraydestroy.done34 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element33, %47
  br i1 %arraydestroy.done34, label %arraydestroy.done35, label %arraydestroy.body31

arraydestroy.done35:                              ; preds = %arraydestroy.body31, %lpad28
  call void @_ZdaPv(i8* %call22) #19
  br label %eh.resume

sw.bb52:                                          ; preds = %if.end
  %m_nSpeakers53 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 2, i32* %m_nSpeakers53, align 4
  %m_nSpeakers54 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %70 = load i32, i32* %m_nSpeakers54, align 4
  %conv55 = zext i32 %70 to i64
  %71 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv55, i64 88)
  %72 = extractvalue { i64, i1 } %71, 1
  %73 = extractvalue { i64, i1 } %71, 0
  %74 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %73, i64 8)
  %75 = extractvalue { i64, i1 } %74, 1
  %76 = or i1 %72, %75
  %77 = extractvalue { i64, i1 } %74, 0
  %78 = select i1 %76, i64 -1, i64 %77
  %call56 = call i8* @_Znam(i64 %78) #18
  %79 = bitcast i8* %call56 to i64*
  store i64 %conv55, i64* %79, align 16
  %80 = getelementptr inbounds i8, i8* %call56, i64 8
  %81 = bitcast i8* %80 to %class.CAmbisonicSpeaker*
  %isempty57 = icmp eq i64 %conv55, 0
  br i1 %isempty57, label %arrayctor.cont72, label %new.ctorloop58

new.ctorloop58:                                   ; preds = %sw.bb52
  %arrayctor.end59 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %81, i64 %conv55
  br label %arrayctor.loop60

arrayctor.loop60:                                 ; preds = %invoke.cont63, %new.ctorloop58
  %arrayctor.cur61 = phi %class.CAmbisonicSpeaker* [ %81, %new.ctorloop58 ], [ %arrayctor.next70, %invoke.cont63 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur61)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %arrayctor.loop60
  %arrayctor.next70 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur61, i64 1
  %arrayctor.done71 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next70, %arrayctor.end59
  br i1 %arrayctor.done71, label %arrayctor.cont72, label %arrayctor.loop60

arrayctor.cont72:                                 ; preds = %sw.bb52, %invoke.cont63
  %m_pAmbSpeakers73 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %81, %class.CAmbisonicSpeaker** %m_pAmbSpeakers73, align 8
  %call74 = call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call74, float* %fAzimuth, align 4
  %m_pAmbSpeakers75 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %82 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers75, align 8
  %arrayidx76 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %82, i64 0
  %83 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder77 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %83, i32 0, i32 1
  %84 = load i32, i32* %m_nOrder77, align 8
  %85 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D78 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %85, i32 0, i32 2
  %86 = load i8, i8* %m_b3D78, align 4
  %tobool79 = trunc i8 %86 to i1
  %87 = bitcast %class.CAmbisonicSpeaker* %arrayidx76 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable80 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %87, align 8
  %vfn81 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable80, i64 2
  %88 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn81, align 8
  %call82 = call zeroext i1 %88(%class.CAmbisonicSpeaker* %arrayidx76, i32 %84, i1 zeroext %tobool79, i32 0)
  %m_pAmbSpeakers83 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %89 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers83, align 8
  %arrayidx84 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %89, i64 0
  %90 = bitcast %class.CAmbisonicSpeaker* %arrayidx84 to %class.CAmbisonicSource*
  %91 = bitcast %struct.PolarPoint* %agg.tmp85 to i8*
  %92 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 12, i1 false)
  %93 = bitcast { <2 x float>, float }* %agg.tmp85.coerce to i8*
  %94 = bitcast %struct.PolarPoint* %agg.tmp85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 12, i1 false)
  %95 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp85.coerce, i32 0, i32 0
  %96 = load <2 x float>, <2 x float>* %95, align 4
  %97 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp85.coerce, i32 0, i32 1
  %98 = load float, float* %97, align 4
  %99 = bitcast %class.CAmbisonicSource* %90 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable86 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %99, align 8
  %vfn87 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable86, i64 5
  %100 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn87, align 8
  call void %100(%class.CAmbisonicSource* %90, <2 x float> %96, float %98)
  %call88 = call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %fAzimuth89 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call88, float* %fAzimuth89, align 4
  %m_pAmbSpeakers90 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %101 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers90, align 8
  %arrayidx91 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %101, i64 1
  %102 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder92 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %102, i32 0, i32 1
  %103 = load i32, i32* %m_nOrder92, align 8
  %104 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D93 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %104, i32 0, i32 2
  %105 = load i8, i8* %m_b3D93, align 4
  %tobool94 = trunc i8 %105 to i1
  %106 = bitcast %class.CAmbisonicSpeaker* %arrayidx91 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable95 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %106, align 8
  %vfn96 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable95, i64 2
  %107 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn96, align 8
  %call97 = call zeroext i1 %107(%class.CAmbisonicSpeaker* %arrayidx91, i32 %103, i1 zeroext %tobool94, i32 0)
  %m_pAmbSpeakers98 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %108 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers98, align 8
  %arrayidx99 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %108, i64 1
  %109 = bitcast %class.CAmbisonicSpeaker* %arrayidx99 to %class.CAmbisonicSource*
  %110 = bitcast %struct.PolarPoint* %agg.tmp100 to i8*
  %111 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 12, i1 false)
  %112 = bitcast { <2 x float>, float }* %agg.tmp100.coerce to i8*
  %113 = bitcast %struct.PolarPoint* %agg.tmp100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 12, i1 false)
  %114 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp100.coerce, i32 0, i32 0
  %115 = load <2 x float>, <2 x float>* %114, align 4
  %116 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp100.coerce, i32 0, i32 1
  %117 = load float, float* %116, align 4
  %118 = bitcast %class.CAmbisonicSource* %109 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable101 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %118, align 8
  %vfn102 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable101, i64 5
  %119 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn102, align 8
  call void %119(%class.CAmbisonicSource* %109, <2 x float> %115, float %117)
  br label %sw.epilog

lpad62:                                           ; preds = %arrayctor.loop60
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %exn.slot, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %ehselector.slot, align 4
  %arraydestroy.isempty64 = icmp eq %class.CAmbisonicSpeaker* %81, %arrayctor.cur61
  br i1 %arraydestroy.isempty64, label %arraydestroy.done69, label %arraydestroy.body65

arraydestroy.body65:                              ; preds = %arraydestroy.body65, %lpad62
  %arraydestroy.elementPast66 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur61, %lpad62 ], [ %arraydestroy.element67, %arraydestroy.body65 ]
  %arraydestroy.element67 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast66, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element67) #3
  %arraydestroy.done68 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element67, %81
  br i1 %arraydestroy.done68, label %arraydestroy.done69, label %arraydestroy.body65

arraydestroy.done69:                              ; preds = %arraydestroy.body65, %lpad62
  call void @_ZdaPv(i8* %call56) #19
  br label %eh.resume

sw.bb103:                                         ; preds = %if.end
  %m_nSpeakers104 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 3, i32* %m_nSpeakers104, align 4
  %m_nSpeakers105 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %123 = load i32, i32* %m_nSpeakers105, align 4
  %conv106 = zext i32 %123 to i64
  %124 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv106, i64 88)
  %125 = extractvalue { i64, i1 } %124, 1
  %126 = extractvalue { i64, i1 } %124, 0
  %127 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 8)
  %128 = extractvalue { i64, i1 } %127, 1
  %129 = or i1 %125, %128
  %130 = extractvalue { i64, i1 } %127, 0
  %131 = select i1 %129, i64 -1, i64 %130
  %call107 = call i8* @_Znam(i64 %131) #18
  %132 = bitcast i8* %call107 to i64*
  store i64 %conv106, i64* %132, align 16
  %133 = getelementptr inbounds i8, i8* %call107, i64 8
  %134 = bitcast i8* %133 to %class.CAmbisonicSpeaker*
  %isempty108 = icmp eq i64 %conv106, 0
  br i1 %isempty108, label %arrayctor.cont123, label %new.ctorloop109

new.ctorloop109:                                  ; preds = %sw.bb103
  %arrayctor.end110 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %134, i64 %conv106
  br label %arrayctor.loop111

arrayctor.loop111:                                ; preds = %invoke.cont114, %new.ctorloop109
  %arrayctor.cur112 = phi %class.CAmbisonicSpeaker* [ %134, %new.ctorloop109 ], [ %arrayctor.next121, %invoke.cont114 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur112)
          to label %invoke.cont114 unwind label %lpad113

invoke.cont114:                                   ; preds = %arrayctor.loop111
  %arrayctor.next121 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur112, i64 1
  %arrayctor.done122 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next121, %arrayctor.end110
  br i1 %arrayctor.done122, label %arrayctor.cont123, label %arrayctor.loop111

arrayctor.cont123:                                ; preds = %sw.bb103, %invoke.cont114
  %m_pAmbSpeakers124 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %134, %class.CAmbisonicSpeaker** %m_pAmbSpeakers124, align 8
  %call125 = call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %fAzimuth126 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call125, float* %fAzimuth126, align 4
  %m_pAmbSpeakers127 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %135 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers127, align 8
  %arrayidx128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %135, i64 0
  %136 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder129 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %136, i32 0, i32 1
  %137 = load i32, i32* %m_nOrder129, align 8
  %138 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D130 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %138, i32 0, i32 2
  %139 = load i8, i8* %m_b3D130, align 4
  %tobool131 = trunc i8 %139 to i1
  %140 = bitcast %class.CAmbisonicSpeaker* %arrayidx128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %140, align 8
  %vfn133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable132, i64 2
  %141 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn133, align 8
  %call134 = call zeroext i1 %141(%class.CAmbisonicSpeaker* %arrayidx128, i32 %137, i1 zeroext %tobool131, i32 0)
  %m_pAmbSpeakers135 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %142 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers135, align 8
  %arrayidx136 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %142, i64 0
  %143 = bitcast %class.CAmbisonicSpeaker* %arrayidx136 to %class.CAmbisonicSource*
  %144 = bitcast %struct.PolarPoint* %agg.tmp137 to i8*
  %145 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 12, i1 false)
  %146 = bitcast { <2 x float>, float }* %agg.tmp137.coerce to i8*
  %147 = bitcast %struct.PolarPoint* %agg.tmp137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 12, i1 false)
  %148 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp137.coerce, i32 0, i32 0
  %149 = load <2 x float>, <2 x float>* %148, align 4
  %150 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp137.coerce, i32 0, i32 1
  %151 = load float, float* %150, align 4
  %152 = bitcast %class.CAmbisonicSource* %143 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable138 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %152, align 8
  %vfn139 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable138, i64 5
  %153 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn139, align 8
  call void %153(%class.CAmbisonicSource* %143, <2 x float> %149, float %151)
  %call140 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fAzimuth141 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call140, float* %fAzimuth141, align 4
  %m_pAmbSpeakers142 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %154 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers142, align 8
  %arrayidx143 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %154, i64 1
  %155 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder144 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %155, i32 0, i32 1
  %156 = load i32, i32* %m_nOrder144, align 8
  %157 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D145 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %157, i32 0, i32 2
  %158 = load i8, i8* %m_b3D145, align 4
  %tobool146 = trunc i8 %158 to i1
  %159 = bitcast %class.CAmbisonicSpeaker* %arrayidx143 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable147 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %159, align 8
  %vfn148 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable147, i64 2
  %160 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn148, align 8
  %call149 = call zeroext i1 %160(%class.CAmbisonicSpeaker* %arrayidx143, i32 %156, i1 zeroext %tobool146, i32 0)
  %m_pAmbSpeakers150 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %161 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers150, align 8
  %arrayidx151 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %161, i64 1
  %162 = bitcast %class.CAmbisonicSpeaker* %arrayidx151 to %class.CAmbisonicSource*
  %163 = bitcast %struct.PolarPoint* %agg.tmp152 to i8*
  %164 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 12, i1 false)
  %165 = bitcast { <2 x float>, float }* %agg.tmp152.coerce to i8*
  %166 = bitcast %struct.PolarPoint* %agg.tmp152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 12, i1 false)
  %167 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp152.coerce, i32 0, i32 0
  %168 = load <2 x float>, <2 x float>* %167, align 4
  %169 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp152.coerce, i32 0, i32 1
  %170 = load float, float* %169, align 4
  %171 = bitcast %class.CAmbisonicSource* %162 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable153 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %171, align 8
  %vfn154 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable153, i64 5
  %172 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn154, align 8
  call void %172(%class.CAmbisonicSource* %162, <2 x float> %168, float %170)
  %call155 = call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %fAzimuth156 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call155, float* %fAzimuth156, align 4
  %m_pAmbSpeakers157 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %173 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers157, align 8
  %arrayidx158 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %173, i64 2
  %174 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder159 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %174, i32 0, i32 1
  %175 = load i32, i32* %m_nOrder159, align 8
  %176 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D160 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %176, i32 0, i32 2
  %177 = load i8, i8* %m_b3D160, align 4
  %tobool161 = trunc i8 %177 to i1
  %178 = bitcast %class.CAmbisonicSpeaker* %arrayidx158 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %178, align 8
  %vfn163 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable162, i64 2
  %179 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn163, align 8
  %call164 = call zeroext i1 %179(%class.CAmbisonicSpeaker* %arrayidx158, i32 %175, i1 zeroext %tobool161, i32 0)
  %m_pAmbSpeakers165 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %180 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers165, align 8
  %arrayidx166 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %180, i64 2
  %181 = bitcast %class.CAmbisonicSpeaker* %arrayidx166 to %class.CAmbisonicSource*
  %182 = bitcast %struct.PolarPoint* %agg.tmp167 to i8*
  %183 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %183, i64 12, i1 false)
  %184 = bitcast { <2 x float>, float }* %agg.tmp167.coerce to i8*
  %185 = bitcast %struct.PolarPoint* %agg.tmp167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* align 4 %185, i64 12, i1 false)
  %186 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp167.coerce, i32 0, i32 0
  %187 = load <2 x float>, <2 x float>* %186, align 4
  %188 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp167.coerce, i32 0, i32 1
  %189 = load float, float* %188, align 4
  %190 = bitcast %class.CAmbisonicSource* %181 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable168 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %190, align 8
  %vfn169 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable168, i64 5
  %191 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn169, align 8
  call void %191(%class.CAmbisonicSource* %181, <2 x float> %187, float %189)
  br label %sw.epilog

lpad113:                                          ; preds = %arrayctor.loop111
  %192 = landingpad { i8*, i32 }
          cleanup
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %exn.slot, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %ehselector.slot, align 4
  %arraydestroy.isempty115 = icmp eq %class.CAmbisonicSpeaker* %134, %arrayctor.cur112
  br i1 %arraydestroy.isempty115, label %arraydestroy.done120, label %arraydestroy.body116

arraydestroy.body116:                             ; preds = %arraydestroy.body116, %lpad113
  %arraydestroy.elementPast117 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur112, %lpad113 ], [ %arraydestroy.element118, %arraydestroy.body116 ]
  %arraydestroy.element118 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast117, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element118) #3
  %arraydestroy.done119 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element118, %134
  br i1 %arraydestroy.done119, label %arraydestroy.done120, label %arraydestroy.body116

arraydestroy.done120:                             ; preds = %arraydestroy.body116, %lpad113
  call void @_ZdaPv(i8* %call107) #19
  br label %eh.resume

sw.bb170:                                         ; preds = %if.end
  %m_nSpeakers171 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 4, i32* %m_nSpeakers171, align 4
  %m_nSpeakers172 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %195 = load i32, i32* %m_nSpeakers172, align 4
  %conv173 = zext i32 %195 to i64
  %196 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv173, i64 88)
  %197 = extractvalue { i64, i1 } %196, 1
  %198 = extractvalue { i64, i1 } %196, 0
  %199 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %198, i64 8)
  %200 = extractvalue { i64, i1 } %199, 1
  %201 = or i1 %197, %200
  %202 = extractvalue { i64, i1 } %199, 0
  %203 = select i1 %201, i64 -1, i64 %202
  %call174 = call i8* @_Znam(i64 %203) #18
  %204 = bitcast i8* %call174 to i64*
  store i64 %conv173, i64* %204, align 16
  %205 = getelementptr inbounds i8, i8* %call174, i64 8
  %206 = bitcast i8* %205 to %class.CAmbisonicSpeaker*
  %isempty175 = icmp eq i64 %conv173, 0
  br i1 %isempty175, label %arrayctor.cont190, label %new.ctorloop176

new.ctorloop176:                                  ; preds = %sw.bb170
  %arrayctor.end177 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %206, i64 %conv173
  br label %arrayctor.loop178

arrayctor.loop178:                                ; preds = %invoke.cont181, %new.ctorloop176
  %arrayctor.cur179 = phi %class.CAmbisonicSpeaker* [ %206, %new.ctorloop176 ], [ %arrayctor.next188, %invoke.cont181 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur179)
          to label %invoke.cont181 unwind label %lpad180

invoke.cont181:                                   ; preds = %arrayctor.loop178
  %arrayctor.next188 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur179, i64 1
  %arrayctor.done189 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next188, %arrayctor.end177
  br i1 %arrayctor.done189, label %arrayctor.cont190, label %arrayctor.loop178

arrayctor.cont190:                                ; preds = %sw.bb170, %invoke.cont181
  %m_pAmbSpeakers191 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %206, %class.CAmbisonicSpeaker** %m_pAmbSpeakers191, align 8
  %call192 = call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %fAzimuth193 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call192, float* %fAzimuth193, align 4
  %m_pAmbSpeakers194 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %207 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers194, align 8
  %arrayidx195 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %207, i64 0
  %208 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder196 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %208, i32 0, i32 1
  %209 = load i32, i32* %m_nOrder196, align 8
  %210 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D197 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %210, i32 0, i32 2
  %211 = load i8, i8* %m_b3D197, align 4
  %tobool198 = trunc i8 %211 to i1
  %212 = bitcast %class.CAmbisonicSpeaker* %arrayidx195 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable199 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %212, align 8
  %vfn200 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable199, i64 2
  %213 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn200, align 8
  %call201 = call zeroext i1 %213(%class.CAmbisonicSpeaker* %arrayidx195, i32 %209, i1 zeroext %tobool198, i32 0)
  %m_pAmbSpeakers202 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %214 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers202, align 8
  %arrayidx203 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %214, i64 0
  %215 = bitcast %class.CAmbisonicSpeaker* %arrayidx203 to %class.CAmbisonicSource*
  %216 = bitcast %struct.PolarPoint* %agg.tmp204 to i8*
  %217 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 12, i1 false)
  %218 = bitcast { <2 x float>, float }* %agg.tmp204.coerce to i8*
  %219 = bitcast %struct.PolarPoint* %agg.tmp204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false)
  %220 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp204.coerce, i32 0, i32 0
  %221 = load <2 x float>, <2 x float>* %220, align 4
  %222 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp204.coerce, i32 0, i32 1
  %223 = load float, float* %222, align 4
  %224 = bitcast %class.CAmbisonicSource* %215 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable205 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %224, align 8
  %vfn206 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable205, i64 5
  %225 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn206, align 8
  call void %225(%class.CAmbisonicSource* %215, <2 x float> %221, float %223)
  %call207 = call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %fAzimuth208 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call207, float* %fAzimuth208, align 4
  %m_pAmbSpeakers209 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %226 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers209, align 8
  %arrayidx210 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %226, i64 1
  %227 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder211 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %227, i32 0, i32 1
  %228 = load i32, i32* %m_nOrder211, align 8
  %229 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D212 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %229, i32 0, i32 2
  %230 = load i8, i8* %m_b3D212, align 4
  %tobool213 = trunc i8 %230 to i1
  %231 = bitcast %class.CAmbisonicSpeaker* %arrayidx210 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable214 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %231, align 8
  %vfn215 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable214, i64 2
  %232 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn215, align 8
  %call216 = call zeroext i1 %232(%class.CAmbisonicSpeaker* %arrayidx210, i32 %228, i1 zeroext %tobool213, i32 0)
  %m_pAmbSpeakers217 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %233 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers217, align 8
  %arrayidx218 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %233, i64 1
  %234 = bitcast %class.CAmbisonicSpeaker* %arrayidx218 to %class.CAmbisonicSource*
  %235 = bitcast %struct.PolarPoint* %agg.tmp219 to i8*
  %236 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %235, i8* align 4 %236, i64 12, i1 false)
  %237 = bitcast { <2 x float>, float }* %agg.tmp219.coerce to i8*
  %238 = bitcast %struct.PolarPoint* %agg.tmp219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %237, i8* align 4 %238, i64 12, i1 false)
  %239 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp219.coerce, i32 0, i32 0
  %240 = load <2 x float>, <2 x float>* %239, align 4
  %241 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp219.coerce, i32 0, i32 1
  %242 = load float, float* %241, align 4
  %243 = bitcast %class.CAmbisonicSource* %234 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable220 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %243, align 8
  %vfn221 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable220, i64 5
  %244 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn221, align 8
  call void %244(%class.CAmbisonicSource* %234, <2 x float> %240, float %242)
  %call222 = call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %fAzimuth223 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call222, float* %fAzimuth223, align 4
  %m_pAmbSpeakers224 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %245 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers224, align 8
  %arrayidx225 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %245, i64 2
  %246 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder226 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %246, i32 0, i32 1
  %247 = load i32, i32* %m_nOrder226, align 8
  %248 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D227 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %248, i32 0, i32 2
  %249 = load i8, i8* %m_b3D227, align 4
  %tobool228 = trunc i8 %249 to i1
  %250 = bitcast %class.CAmbisonicSpeaker* %arrayidx225 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %250, align 8
  %vfn230 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable229, i64 2
  %251 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn230, align 8
  %call231 = call zeroext i1 %251(%class.CAmbisonicSpeaker* %arrayidx225, i32 %247, i1 zeroext %tobool228, i32 0)
  %m_pAmbSpeakers232 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %252 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers232, align 8
  %arrayidx233 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %252, i64 2
  %253 = bitcast %class.CAmbisonicSpeaker* %arrayidx233 to %class.CAmbisonicSource*
  %254 = bitcast %struct.PolarPoint* %agg.tmp234 to i8*
  %255 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %254, i8* align 4 %255, i64 12, i1 false)
  %256 = bitcast { <2 x float>, float }* %agg.tmp234.coerce to i8*
  %257 = bitcast %struct.PolarPoint* %agg.tmp234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 12, i1 false)
  %258 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp234.coerce, i32 0, i32 0
  %259 = load <2 x float>, <2 x float>* %258, align 4
  %260 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp234.coerce, i32 0, i32 1
  %261 = load float, float* %260, align 4
  %262 = bitcast %class.CAmbisonicSource* %253 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable235 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %262, align 8
  %vfn236 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable235, i64 5
  %263 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn236, align 8
  call void %263(%class.CAmbisonicSource* %253, <2 x float> %259, float %261)
  %call237 = call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %fAzimuth238 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call237, float* %fAzimuth238, align 4
  %m_pAmbSpeakers239 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %264 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers239, align 8
  %arrayidx240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %264, i64 3
  %265 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder241 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %265, i32 0, i32 1
  %266 = load i32, i32* %m_nOrder241, align 8
  %267 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D242 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %267, i32 0, i32 2
  %268 = load i8, i8* %m_b3D242, align 4
  %tobool243 = trunc i8 %268 to i1
  %269 = bitcast %class.CAmbisonicSpeaker* %arrayidx240 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable244 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %269, align 8
  %vfn245 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable244, i64 2
  %270 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn245, align 8
  %call246 = call zeroext i1 %270(%class.CAmbisonicSpeaker* %arrayidx240, i32 %266, i1 zeroext %tobool243, i32 0)
  %m_pAmbSpeakers247 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %271 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers247, align 8
  %arrayidx248 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %271, i64 3
  %272 = bitcast %class.CAmbisonicSpeaker* %arrayidx248 to %class.CAmbisonicSource*
  %273 = bitcast %struct.PolarPoint* %agg.tmp249 to i8*
  %274 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %273, i8* align 4 %274, i64 12, i1 false)
  %275 = bitcast { <2 x float>, float }* %agg.tmp249.coerce to i8*
  %276 = bitcast %struct.PolarPoint* %agg.tmp249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* align 4 %276, i64 12, i1 false)
  %277 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp249.coerce, i32 0, i32 0
  %278 = load <2 x float>, <2 x float>* %277, align 4
  %279 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp249.coerce, i32 0, i32 1
  %280 = load float, float* %279, align 4
  %281 = bitcast %class.CAmbisonicSource* %272 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable250 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %281, align 8
  %vfn251 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable250, i64 5
  %282 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn251, align 8
  call void %282(%class.CAmbisonicSource* %272, <2 x float> %278, float %280)
  br label %sw.epilog

lpad180:                                          ; preds = %arrayctor.loop178
  %283 = landingpad { i8*, i32 }
          cleanup
  %284 = extractvalue { i8*, i32 } %283, 0
  store i8* %284, i8** %exn.slot, align 8
  %285 = extractvalue { i8*, i32 } %283, 1
  store i32 %285, i32* %ehselector.slot, align 4
  %arraydestroy.isempty182 = icmp eq %class.CAmbisonicSpeaker* %206, %arrayctor.cur179
  br i1 %arraydestroy.isempty182, label %arraydestroy.done187, label %arraydestroy.body183

arraydestroy.body183:                             ; preds = %arraydestroy.body183, %lpad180
  %arraydestroy.elementPast184 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur179, %lpad180 ], [ %arraydestroy.element185, %arraydestroy.body183 ]
  %arraydestroy.element185 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast184, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element185) #3
  %arraydestroy.done186 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element185, %206
  br i1 %arraydestroy.done186, label %arraydestroy.done187, label %arraydestroy.body183

arraydestroy.done187:                             ; preds = %arraydestroy.body183, %lpad180
  call void @_ZdaPv(i8* %call174) #19
  br label %eh.resume

sw.bb252:                                         ; preds = %if.end
  %m_nSpeakers253 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 5, i32* %m_nSpeakers253, align 4
  %m_nSpeakers254 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %286 = load i32, i32* %m_nSpeakers254, align 4
  %conv255 = zext i32 %286 to i64
  %287 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv255, i64 88)
  %288 = extractvalue { i64, i1 } %287, 1
  %289 = extractvalue { i64, i1 } %287, 0
  %290 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %289, i64 8)
  %291 = extractvalue { i64, i1 } %290, 1
  %292 = or i1 %288, %291
  %293 = extractvalue { i64, i1 } %290, 0
  %294 = select i1 %292, i64 -1, i64 %293
  %call256 = call i8* @_Znam(i64 %294) #18
  %295 = bitcast i8* %call256 to i64*
  store i64 %conv255, i64* %295, align 16
  %296 = getelementptr inbounds i8, i8* %call256, i64 8
  %297 = bitcast i8* %296 to %class.CAmbisonicSpeaker*
  %isempty257 = icmp eq i64 %conv255, 0
  br i1 %isempty257, label %arrayctor.cont272, label %new.ctorloop258

new.ctorloop258:                                  ; preds = %sw.bb252
  %arrayctor.end259 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %297, i64 %conv255
  br label %arrayctor.loop260

arrayctor.loop260:                                ; preds = %invoke.cont263, %new.ctorloop258
  %arrayctor.cur261 = phi %class.CAmbisonicSpeaker* [ %297, %new.ctorloop258 ], [ %arrayctor.next270, %invoke.cont263 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur261)
          to label %invoke.cont263 unwind label %lpad262

invoke.cont263:                                   ; preds = %arrayctor.loop260
  %arrayctor.next270 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur261, i64 1
  %arrayctor.done271 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next270, %arrayctor.end259
  br i1 %arrayctor.done271, label %arrayctor.cont272, label %arrayctor.loop260

arrayctor.cont272:                                ; preds = %sw.bb252, %invoke.cont263
  %m_pAmbSpeakers273 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %297, %class.CAmbisonicSpeaker** %m_pAmbSpeakers273, align 8
  %call274 = call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %fAzimuth275 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call274, float* %fAzimuth275, align 4
  %m_pAmbSpeakers276 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %298 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers276, align 8
  %arrayidx277 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %298, i64 0
  %299 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder278 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %299, i32 0, i32 1
  %300 = load i32, i32* %m_nOrder278, align 8
  %301 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D279 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %301, i32 0, i32 2
  %302 = load i8, i8* %m_b3D279, align 4
  %tobool280 = trunc i8 %302 to i1
  %303 = bitcast %class.CAmbisonicSpeaker* %arrayidx277 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable281 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %303, align 8
  %vfn282 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable281, i64 2
  %304 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn282, align 8
  %call283 = call zeroext i1 %304(%class.CAmbisonicSpeaker* %arrayidx277, i32 %300, i1 zeroext %tobool280, i32 0)
  %m_pAmbSpeakers284 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %305 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers284, align 8
  %arrayidx285 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %305, i64 0
  %306 = bitcast %class.CAmbisonicSpeaker* %arrayidx285 to %class.CAmbisonicSource*
  %307 = bitcast %struct.PolarPoint* %agg.tmp286 to i8*
  %308 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %308, i64 12, i1 false)
  %309 = bitcast { <2 x float>, float }* %agg.tmp286.coerce to i8*
  %310 = bitcast %struct.PolarPoint* %agg.tmp286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %310, i64 12, i1 false)
  %311 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp286.coerce, i32 0, i32 0
  %312 = load <2 x float>, <2 x float>* %311, align 4
  %313 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp286.coerce, i32 0, i32 1
  %314 = load float, float* %313, align 4
  %315 = bitcast %class.CAmbisonicSource* %306 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable287 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %315, align 8
  %vfn288 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable287, i64 5
  %316 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn288, align 8
  call void %316(%class.CAmbisonicSource* %306, <2 x float> %312, float %314)
  %call289 = call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %fAzimuth290 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call289, float* %fAzimuth290, align 4
  %m_pAmbSpeakers291 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %317 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers291, align 8
  %arrayidx292 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %317, i64 1
  %318 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder293 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %318, i32 0, i32 1
  %319 = load i32, i32* %m_nOrder293, align 8
  %320 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D294 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %320, i32 0, i32 2
  %321 = load i8, i8* %m_b3D294, align 4
  %tobool295 = trunc i8 %321 to i1
  %322 = bitcast %class.CAmbisonicSpeaker* %arrayidx292 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable296 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %322, align 8
  %vfn297 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable296, i64 2
  %323 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn297, align 8
  %call298 = call zeroext i1 %323(%class.CAmbisonicSpeaker* %arrayidx292, i32 %319, i1 zeroext %tobool295, i32 0)
  %m_pAmbSpeakers299 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %324 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers299, align 8
  %arrayidx300 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %324, i64 1
  %325 = bitcast %class.CAmbisonicSpeaker* %arrayidx300 to %class.CAmbisonicSource*
  %326 = bitcast %struct.PolarPoint* %agg.tmp301 to i8*
  %327 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %326, i8* align 4 %327, i64 12, i1 false)
  %328 = bitcast { <2 x float>, float }* %agg.tmp301.coerce to i8*
  %329 = bitcast %struct.PolarPoint* %agg.tmp301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %328, i8* align 4 %329, i64 12, i1 false)
  %330 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp301.coerce, i32 0, i32 0
  %331 = load <2 x float>, <2 x float>* %330, align 4
  %332 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp301.coerce, i32 0, i32 1
  %333 = load float, float* %332, align 4
  %334 = bitcast %class.CAmbisonicSource* %325 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable302 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %334, align 8
  %vfn303 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable302, i64 5
  %335 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn303, align 8
  call void %335(%class.CAmbisonicSource* %325, <2 x float> %331, float %333)
  %call304 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fAzimuth305 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call304, float* %fAzimuth305, align 4
  %m_pAmbSpeakers306 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %336 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers306, align 8
  %arrayidx307 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %336, i64 2
  %337 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder308 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %337, i32 0, i32 1
  %338 = load i32, i32* %m_nOrder308, align 8
  %339 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D309 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %339, i32 0, i32 2
  %340 = load i8, i8* %m_b3D309, align 4
  %tobool310 = trunc i8 %340 to i1
  %341 = bitcast %class.CAmbisonicSpeaker* %arrayidx307 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable311 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %341, align 8
  %vfn312 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable311, i64 2
  %342 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn312, align 8
  %call313 = call zeroext i1 %342(%class.CAmbisonicSpeaker* %arrayidx307, i32 %338, i1 zeroext %tobool310, i32 0)
  %m_pAmbSpeakers314 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %343 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers314, align 8
  %arrayidx315 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %343, i64 2
  %344 = bitcast %class.CAmbisonicSpeaker* %arrayidx315 to %class.CAmbisonicSource*
  %345 = bitcast %struct.PolarPoint* %agg.tmp316 to i8*
  %346 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 12, i1 false)
  %347 = bitcast { <2 x float>, float }* %agg.tmp316.coerce to i8*
  %348 = bitcast %struct.PolarPoint* %agg.tmp316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %347, i8* align 4 %348, i64 12, i1 false)
  %349 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp316.coerce, i32 0, i32 0
  %350 = load <2 x float>, <2 x float>* %349, align 4
  %351 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp316.coerce, i32 0, i32 1
  %352 = load float, float* %351, align 4
  %353 = bitcast %class.CAmbisonicSource* %344 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable317 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %353, align 8
  %vfn318 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable317, i64 5
  %354 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn318, align 8
  call void %354(%class.CAmbisonicSource* %344, <2 x float> %350, float %352)
  %call319 = call float @_Z16DegreesToRadiansf(float 1.100000e+02)
  %fAzimuth320 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call319, float* %fAzimuth320, align 4
  %m_pAmbSpeakers321 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %355 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers321, align 8
  %arrayidx322 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %355, i64 3
  %356 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder323 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %356, i32 0, i32 1
  %357 = load i32, i32* %m_nOrder323, align 8
  %358 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D324 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %358, i32 0, i32 2
  %359 = load i8, i8* %m_b3D324, align 4
  %tobool325 = trunc i8 %359 to i1
  %360 = bitcast %class.CAmbisonicSpeaker* %arrayidx322 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable326 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %360, align 8
  %vfn327 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable326, i64 2
  %361 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn327, align 8
  %call328 = call zeroext i1 %361(%class.CAmbisonicSpeaker* %arrayidx322, i32 %357, i1 zeroext %tobool325, i32 0)
  %m_pAmbSpeakers329 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %362 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers329, align 8
  %arrayidx330 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %362, i64 3
  %363 = bitcast %class.CAmbisonicSpeaker* %arrayidx330 to %class.CAmbisonicSource*
  %364 = bitcast %struct.PolarPoint* %agg.tmp331 to i8*
  %365 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %364, i8* align 4 %365, i64 12, i1 false)
  %366 = bitcast { <2 x float>, float }* %agg.tmp331.coerce to i8*
  %367 = bitcast %struct.PolarPoint* %agg.tmp331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %366, i8* align 4 %367, i64 12, i1 false)
  %368 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp331.coerce, i32 0, i32 0
  %369 = load <2 x float>, <2 x float>* %368, align 4
  %370 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp331.coerce, i32 0, i32 1
  %371 = load float, float* %370, align 4
  %372 = bitcast %class.CAmbisonicSource* %363 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable332 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %372, align 8
  %vfn333 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable332, i64 5
  %373 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn333, align 8
  call void %373(%class.CAmbisonicSource* %363, <2 x float> %369, float %371)
  %call334 = call float @_Z16DegreesToRadiansf(float -1.100000e+02)
  %fAzimuth335 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call334, float* %fAzimuth335, align 4
  %m_pAmbSpeakers336 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %374 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers336, align 8
  %arrayidx337 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %374, i64 4
  %375 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder338 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %375, i32 0, i32 1
  %376 = load i32, i32* %m_nOrder338, align 8
  %377 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D339 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %377, i32 0, i32 2
  %378 = load i8, i8* %m_b3D339, align 4
  %tobool340 = trunc i8 %378 to i1
  %379 = bitcast %class.CAmbisonicSpeaker* %arrayidx337 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable341 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %379, align 8
  %vfn342 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable341, i64 2
  %380 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn342, align 8
  %call343 = call zeroext i1 %380(%class.CAmbisonicSpeaker* %arrayidx337, i32 %376, i1 zeroext %tobool340, i32 0)
  %m_pAmbSpeakers344 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %381 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers344, align 8
  %arrayidx345 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %381, i64 4
  %382 = bitcast %class.CAmbisonicSpeaker* %arrayidx345 to %class.CAmbisonicSource*
  %383 = bitcast %struct.PolarPoint* %agg.tmp346 to i8*
  %384 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %383, i8* align 4 %384, i64 12, i1 false)
  %385 = bitcast { <2 x float>, float }* %agg.tmp346.coerce to i8*
  %386 = bitcast %struct.PolarPoint* %agg.tmp346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %385, i8* align 4 %386, i64 12, i1 false)
  %387 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp346.coerce, i32 0, i32 0
  %388 = load <2 x float>, <2 x float>* %387, align 4
  %389 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp346.coerce, i32 0, i32 1
  %390 = load float, float* %389, align 4
  %391 = bitcast %class.CAmbisonicSource* %382 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable347 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %391, align 8
  %vfn348 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable347, i64 5
  %392 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn348, align 8
  call void %392(%class.CAmbisonicSource* %382, <2 x float> %388, float %390)
  br label %sw.epilog

lpad262:                                          ; preds = %arrayctor.loop260
  %393 = landingpad { i8*, i32 }
          cleanup
  %394 = extractvalue { i8*, i32 } %393, 0
  store i8* %394, i8** %exn.slot, align 8
  %395 = extractvalue { i8*, i32 } %393, 1
  store i32 %395, i32* %ehselector.slot, align 4
  %arraydestroy.isempty264 = icmp eq %class.CAmbisonicSpeaker* %297, %arrayctor.cur261
  br i1 %arraydestroy.isempty264, label %arraydestroy.done269, label %arraydestroy.body265

arraydestroy.body265:                             ; preds = %arraydestroy.body265, %lpad262
  %arraydestroy.elementPast266 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur261, %lpad262 ], [ %arraydestroy.element267, %arraydestroy.body265 ]
  %arraydestroy.element267 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast266, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element267) #3
  %arraydestroy.done268 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element267, %297
  br i1 %arraydestroy.done268, label %arraydestroy.done269, label %arraydestroy.body265

arraydestroy.done269:                             ; preds = %arraydestroy.body265, %lpad262
  call void @_ZdaPv(i8* %call256) #19
  br label %eh.resume

sw.bb349:                                         ; preds = %if.end
  %m_nSpeakers350 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 5, i32* %m_nSpeakers350, align 4
  %m_nSpeakers351 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %396 = load i32, i32* %m_nSpeakers351, align 4
  %conv352 = zext i32 %396 to i64
  %397 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv352, i64 88)
  %398 = extractvalue { i64, i1 } %397, 1
  %399 = extractvalue { i64, i1 } %397, 0
  %400 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %399, i64 8)
  %401 = extractvalue { i64, i1 } %400, 1
  %402 = or i1 %398, %401
  %403 = extractvalue { i64, i1 } %400, 0
  %404 = select i1 %402, i64 -1, i64 %403
  %call353 = call i8* @_Znam(i64 %404) #18
  %405 = bitcast i8* %call353 to i64*
  store i64 %conv352, i64* %405, align 16
  %406 = getelementptr inbounds i8, i8* %call353, i64 8
  %407 = bitcast i8* %406 to %class.CAmbisonicSpeaker*
  %isempty354 = icmp eq i64 %conv352, 0
  br i1 %isempty354, label %arrayctor.cont369, label %new.ctorloop355

new.ctorloop355:                                  ; preds = %sw.bb349
  %arrayctor.end356 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %407, i64 %conv352
  br label %arrayctor.loop357

arrayctor.loop357:                                ; preds = %invoke.cont360, %new.ctorloop355
  %arrayctor.cur358 = phi %class.CAmbisonicSpeaker* [ %407, %new.ctorloop355 ], [ %arrayctor.next367, %invoke.cont360 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur358)
          to label %invoke.cont360 unwind label %lpad359

invoke.cont360:                                   ; preds = %arrayctor.loop357
  %arrayctor.next367 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur358, i64 1
  %arrayctor.done368 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next367, %arrayctor.end356
  br i1 %arrayctor.done368, label %arrayctor.cont369, label %arrayctor.loop357

arrayctor.cont369:                                ; preds = %sw.bb349, %invoke.cont360
  %m_pAmbSpeakers370 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %407, %class.CAmbisonicSpeaker** %m_pAmbSpeakers370, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond371

for.cond371:                                      ; preds = %for.inc395, %arrayctor.cont369
  %408 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers372 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %409 = load i32, i32* %m_nSpeakers372, align 4
  %cmp373 = icmp ult i32 %408, %409
  br i1 %cmp373, label %for.body374, label %for.end397

for.body374:                                      ; preds = %for.cond371
  %410 = load i32, i32* %niSpeaker, align 4
  %conv375 = uitofp i32 %410 to float
  %mul = fmul float %conv375, 3.600000e+02
  %m_nSpeakers376 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %411 = load i32, i32* %m_nSpeakers376, align 4
  %conv377 = uitofp i32 %411 to float
  %div = fdiv float %mul, %conv377
  %call378 = call float @_Z16DegreesToRadiansf(float %div)
  %sub = fsub float -0.000000e+00, %call378
  %fAzimuth379 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub, float* %fAzimuth379, align 4
  %m_pAmbSpeakers380 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %412 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers380, align 8
  %413 = load i32, i32* %niSpeaker, align 4
  %idxprom381 = zext i32 %413 to i64
  %arrayidx382 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %412, i64 %idxprom381
  %414 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder383 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %414, i32 0, i32 1
  %415 = load i32, i32* %m_nOrder383, align 8
  %416 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D384 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %416, i32 0, i32 2
  %417 = load i8, i8* %m_b3D384, align 4
  %tobool385 = trunc i8 %417 to i1
  %418 = bitcast %class.CAmbisonicSpeaker* %arrayidx382 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable386 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %418, align 8
  %vfn387 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable386, i64 2
  %419 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn387, align 8
  %call388 = call zeroext i1 %419(%class.CAmbisonicSpeaker* %arrayidx382, i32 %415, i1 zeroext %tobool385, i32 0)
  %m_pAmbSpeakers389 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %420 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers389, align 8
  %421 = load i32, i32* %niSpeaker, align 4
  %idxprom390 = zext i32 %421 to i64
  %arrayidx391 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %420, i64 %idxprom390
  %422 = bitcast %class.CAmbisonicSpeaker* %arrayidx391 to %class.CAmbisonicSource*
  %423 = bitcast %struct.PolarPoint* %agg.tmp392 to i8*
  %424 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %423, i8* align 4 %424, i64 12, i1 false)
  %425 = bitcast { <2 x float>, float }* %agg.tmp392.coerce to i8*
  %426 = bitcast %struct.PolarPoint* %agg.tmp392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %425, i8* align 4 %426, i64 12, i1 false)
  %427 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp392.coerce, i32 0, i32 0
  %428 = load <2 x float>, <2 x float>* %427, align 4
  %429 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp392.coerce, i32 0, i32 1
  %430 = load float, float* %429, align 4
  %431 = bitcast %class.CAmbisonicSource* %422 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable393 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %431, align 8
  %vfn394 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable393, i64 5
  %432 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn394, align 8
  call void %432(%class.CAmbisonicSource* %422, <2 x float> %428, float %430)
  br label %for.inc395

for.inc395:                                       ; preds = %for.body374
  %433 = load i32, i32* %niSpeaker, align 4
  %inc396 = add i32 %433, 1
  store i32 %inc396, i32* %niSpeaker, align 4
  br label %for.cond371

lpad359:                                          ; preds = %arrayctor.loop357
  %434 = landingpad { i8*, i32 }
          cleanup
  %435 = extractvalue { i8*, i32 } %434, 0
  store i8* %435, i8** %exn.slot, align 8
  %436 = extractvalue { i8*, i32 } %434, 1
  store i32 %436, i32* %ehselector.slot, align 4
  %arraydestroy.isempty361 = icmp eq %class.CAmbisonicSpeaker* %407, %arrayctor.cur358
  br i1 %arraydestroy.isempty361, label %arraydestroy.done366, label %arraydestroy.body362

arraydestroy.body362:                             ; preds = %arraydestroy.body362, %lpad359
  %arraydestroy.elementPast363 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur358, %lpad359 ], [ %arraydestroy.element364, %arraydestroy.body362 ]
  %arraydestroy.element364 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast363, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element364) #3
  %arraydestroy.done365 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element364, %407
  br i1 %arraydestroy.done365, label %arraydestroy.done366, label %arraydestroy.body362

arraydestroy.done366:                             ; preds = %arraydestroy.body362, %lpad359
  call void @_ZdaPv(i8* %call353) #19
  br label %eh.resume

for.end397:                                       ; preds = %for.cond371
  br label %sw.epilog

sw.bb398:                                         ; preds = %if.end
  %m_nSpeakers399 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 6, i32* %m_nSpeakers399, align 4
  %m_nSpeakers400 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %437 = load i32, i32* %m_nSpeakers400, align 4
  %conv401 = zext i32 %437 to i64
  %438 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv401, i64 88)
  %439 = extractvalue { i64, i1 } %438, 1
  %440 = extractvalue { i64, i1 } %438, 0
  %441 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %440, i64 8)
  %442 = extractvalue { i64, i1 } %441, 1
  %443 = or i1 %439, %442
  %444 = extractvalue { i64, i1 } %441, 0
  %445 = select i1 %443, i64 -1, i64 %444
  %call402 = call i8* @_Znam(i64 %445) #18
  %446 = bitcast i8* %call402 to i64*
  store i64 %conv401, i64* %446, align 16
  %447 = getelementptr inbounds i8, i8* %call402, i64 8
  %448 = bitcast i8* %447 to %class.CAmbisonicSpeaker*
  %isempty403 = icmp eq i64 %conv401, 0
  br i1 %isempty403, label %arrayctor.cont418, label %new.ctorloop404

new.ctorloop404:                                  ; preds = %sw.bb398
  %arrayctor.end405 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %448, i64 %conv401
  br label %arrayctor.loop406

arrayctor.loop406:                                ; preds = %invoke.cont409, %new.ctorloop404
  %arrayctor.cur407 = phi %class.CAmbisonicSpeaker* [ %448, %new.ctorloop404 ], [ %arrayctor.next416, %invoke.cont409 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur407)
          to label %invoke.cont409 unwind label %lpad408

invoke.cont409:                                   ; preds = %arrayctor.loop406
  %arrayctor.next416 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur407, i64 1
  %arrayctor.done417 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next416, %arrayctor.end405
  br i1 %arrayctor.done417, label %arrayctor.cont418, label %arrayctor.loop406

arrayctor.cont418:                                ; preds = %sw.bb398, %invoke.cont409
  %m_pAmbSpeakers419 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %448, %class.CAmbisonicSpeaker** %m_pAmbSpeakers419, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond420

for.cond420:                                      ; preds = %for.inc447, %arrayctor.cont418
  %449 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers421 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %450 = load i32, i32* %m_nSpeakers421, align 4
  %cmp422 = icmp ult i32 %449, %450
  br i1 %cmp422, label %for.body423, label %for.end449

for.body423:                                      ; preds = %for.cond420
  %451 = load i32, i32* %niSpeaker, align 4
  %conv424 = uitofp i32 %451 to float
  %mul425 = fmul float %conv424, 3.600000e+02
  %m_nSpeakers426 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %452 = load i32, i32* %m_nSpeakers426, align 4
  %conv427 = uitofp i32 %452 to float
  %div428 = fdiv float %mul425, %conv427
  %add = fadd float %div428, 3.000000e+01
  %call429 = call float @_Z16DegreesToRadiansf(float %add)
  %sub430 = fsub float -0.000000e+00, %call429
  %fAzimuth431 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub430, float* %fAzimuth431, align 4
  %m_pAmbSpeakers432 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %453 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers432, align 8
  %454 = load i32, i32* %niSpeaker, align 4
  %idxprom433 = zext i32 %454 to i64
  %arrayidx434 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %453, i64 %idxprom433
  %455 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder435 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %455, i32 0, i32 1
  %456 = load i32, i32* %m_nOrder435, align 8
  %457 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D436 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %457, i32 0, i32 2
  %458 = load i8, i8* %m_b3D436, align 4
  %tobool437 = trunc i8 %458 to i1
  %459 = bitcast %class.CAmbisonicSpeaker* %arrayidx434 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable438 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %459, align 8
  %vfn439 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable438, i64 2
  %460 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn439, align 8
  %call440 = call zeroext i1 %460(%class.CAmbisonicSpeaker* %arrayidx434, i32 %456, i1 zeroext %tobool437, i32 0)
  %m_pAmbSpeakers441 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %461 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers441, align 8
  %462 = load i32, i32* %niSpeaker, align 4
  %idxprom442 = zext i32 %462 to i64
  %arrayidx443 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %461, i64 %idxprom442
  %463 = bitcast %class.CAmbisonicSpeaker* %arrayidx443 to %class.CAmbisonicSource*
  %464 = bitcast %struct.PolarPoint* %agg.tmp444 to i8*
  %465 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %464, i8* align 4 %465, i64 12, i1 false)
  %466 = bitcast { <2 x float>, float }* %agg.tmp444.coerce to i8*
  %467 = bitcast %struct.PolarPoint* %agg.tmp444 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %466, i8* align 4 %467, i64 12, i1 false)
  %468 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp444.coerce, i32 0, i32 0
  %469 = load <2 x float>, <2 x float>* %468, align 4
  %470 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp444.coerce, i32 0, i32 1
  %471 = load float, float* %470, align 4
  %472 = bitcast %class.CAmbisonicSource* %463 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable445 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %472, align 8
  %vfn446 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable445, i64 5
  %473 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn446, align 8
  call void %473(%class.CAmbisonicSource* %463, <2 x float> %469, float %471)
  br label %for.inc447

for.inc447:                                       ; preds = %for.body423
  %474 = load i32, i32* %niSpeaker, align 4
  %inc448 = add i32 %474, 1
  store i32 %inc448, i32* %niSpeaker, align 4
  br label %for.cond420

lpad408:                                          ; preds = %arrayctor.loop406
  %475 = landingpad { i8*, i32 }
          cleanup
  %476 = extractvalue { i8*, i32 } %475, 0
  store i8* %476, i8** %exn.slot, align 8
  %477 = extractvalue { i8*, i32 } %475, 1
  store i32 %477, i32* %ehselector.slot, align 4
  %arraydestroy.isempty410 = icmp eq %class.CAmbisonicSpeaker* %448, %arrayctor.cur407
  br i1 %arraydestroy.isempty410, label %arraydestroy.done415, label %arraydestroy.body411

arraydestroy.body411:                             ; preds = %arraydestroy.body411, %lpad408
  %arraydestroy.elementPast412 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur407, %lpad408 ], [ %arraydestroy.element413, %arraydestroy.body411 ]
  %arraydestroy.element413 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast412, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element413) #3
  %arraydestroy.done414 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element413, %448
  br i1 %arraydestroy.done414, label %arraydestroy.done415, label %arraydestroy.body411

arraydestroy.done415:                             ; preds = %arraydestroy.body411, %lpad408
  call void @_ZdaPv(i8* %call402) #19
  br label %eh.resume

for.end449:                                       ; preds = %for.cond420
  br label %sw.epilog

sw.bb450:                                         ; preds = %if.end
  %m_nSpeakers451 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 6, i32* %m_nSpeakers451, align 4
  %m_nSpeakers452 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %478 = load i32, i32* %m_nSpeakers452, align 4
  %conv453 = zext i32 %478 to i64
  %479 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv453, i64 88)
  %480 = extractvalue { i64, i1 } %479, 1
  %481 = extractvalue { i64, i1 } %479, 0
  %482 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %481, i64 8)
  %483 = extractvalue { i64, i1 } %482, 1
  %484 = or i1 %480, %483
  %485 = extractvalue { i64, i1 } %482, 0
  %486 = select i1 %484, i64 -1, i64 %485
  %call454 = call i8* @_Znam(i64 %486) #18
  %487 = bitcast i8* %call454 to i64*
  store i64 %conv453, i64* %487, align 16
  %488 = getelementptr inbounds i8, i8* %call454, i64 8
  %489 = bitcast i8* %488 to %class.CAmbisonicSpeaker*
  %isempty455 = icmp eq i64 %conv453, 0
  br i1 %isempty455, label %arrayctor.cont470, label %new.ctorloop456

new.ctorloop456:                                  ; preds = %sw.bb450
  %arrayctor.end457 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %489, i64 %conv453
  br label %arrayctor.loop458

arrayctor.loop458:                                ; preds = %invoke.cont461, %new.ctorloop456
  %arrayctor.cur459 = phi %class.CAmbisonicSpeaker* [ %489, %new.ctorloop456 ], [ %arrayctor.next468, %invoke.cont461 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur459)
          to label %invoke.cont461 unwind label %lpad460

invoke.cont461:                                   ; preds = %arrayctor.loop458
  %arrayctor.next468 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur459, i64 1
  %arrayctor.done469 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next468, %arrayctor.end457
  br i1 %arrayctor.done469, label %arrayctor.cont470, label %arrayctor.loop458

arrayctor.cont470:                                ; preds = %sw.bb450, %invoke.cont461
  %m_pAmbSpeakers471 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %489, %class.CAmbisonicSpeaker** %m_pAmbSpeakers471, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond472

for.cond472:                                      ; preds = %for.inc499, %arrayctor.cont470
  %490 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers473 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %491 = load i32, i32* %m_nSpeakers473, align 4
  %cmp474 = icmp ult i32 %490, %491
  br i1 %cmp474, label %for.body475, label %for.end501

for.body475:                                      ; preds = %for.cond472
  %492 = load i32, i32* %niSpeaker, align 4
  %conv476 = uitofp i32 %492 to float
  %mul477 = fmul float %conv476, 3.600000e+02
  %m_nSpeakers478 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %493 = load i32, i32* %m_nSpeakers478, align 4
  %conv479 = uitofp i32 %493 to float
  %div480 = fdiv float %mul477, %conv479
  %call481 = call float @_Z16DegreesToRadiansf(float %div480)
  %sub482 = fsub float -0.000000e+00, %call481
  %fAzimuth483 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub482, float* %fAzimuth483, align 4
  %m_pAmbSpeakers484 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %494 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers484, align 8
  %495 = load i32, i32* %niSpeaker, align 4
  %idxprom485 = zext i32 %495 to i64
  %arrayidx486 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %494, i64 %idxprom485
  %496 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder487 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %496, i32 0, i32 1
  %497 = load i32, i32* %m_nOrder487, align 8
  %498 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D488 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %498, i32 0, i32 2
  %499 = load i8, i8* %m_b3D488, align 4
  %tobool489 = trunc i8 %499 to i1
  %500 = bitcast %class.CAmbisonicSpeaker* %arrayidx486 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable490 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %500, align 8
  %vfn491 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable490, i64 2
  %501 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn491, align 8
  %call492 = call zeroext i1 %501(%class.CAmbisonicSpeaker* %arrayidx486, i32 %497, i1 zeroext %tobool489, i32 0)
  %m_pAmbSpeakers493 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %502 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers493, align 8
  %503 = load i32, i32* %niSpeaker, align 4
  %idxprom494 = zext i32 %503 to i64
  %arrayidx495 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %502, i64 %idxprom494
  %504 = bitcast %class.CAmbisonicSpeaker* %arrayidx495 to %class.CAmbisonicSource*
  %505 = bitcast %struct.PolarPoint* %agg.tmp496 to i8*
  %506 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %505, i8* align 4 %506, i64 12, i1 false)
  %507 = bitcast { <2 x float>, float }* %agg.tmp496.coerce to i8*
  %508 = bitcast %struct.PolarPoint* %agg.tmp496 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %507, i8* align 4 %508, i64 12, i1 false)
  %509 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp496.coerce, i32 0, i32 0
  %510 = load <2 x float>, <2 x float>* %509, align 4
  %511 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp496.coerce, i32 0, i32 1
  %512 = load float, float* %511, align 4
  %513 = bitcast %class.CAmbisonicSource* %504 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable497 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %513, align 8
  %vfn498 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable497, i64 5
  %514 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn498, align 8
  call void %514(%class.CAmbisonicSource* %504, <2 x float> %510, float %512)
  br label %for.inc499

for.inc499:                                       ; preds = %for.body475
  %515 = load i32, i32* %niSpeaker, align 4
  %inc500 = add i32 %515, 1
  store i32 %inc500, i32* %niSpeaker, align 4
  br label %for.cond472

lpad460:                                          ; preds = %arrayctor.loop458
  %516 = landingpad { i8*, i32 }
          cleanup
  %517 = extractvalue { i8*, i32 } %516, 0
  store i8* %517, i8** %exn.slot, align 8
  %518 = extractvalue { i8*, i32 } %516, 1
  store i32 %518, i32* %ehselector.slot, align 4
  %arraydestroy.isempty462 = icmp eq %class.CAmbisonicSpeaker* %489, %arrayctor.cur459
  br i1 %arraydestroy.isempty462, label %arraydestroy.done467, label %arraydestroy.body463

arraydestroy.body463:                             ; preds = %arraydestroy.body463, %lpad460
  %arraydestroy.elementPast464 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur459, %lpad460 ], [ %arraydestroy.element465, %arraydestroy.body463 ]
  %arraydestroy.element465 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast464, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element465) #3
  %arraydestroy.done466 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element465, %489
  br i1 %arraydestroy.done466, label %arraydestroy.done467, label %arraydestroy.body463

arraydestroy.done467:                             ; preds = %arraydestroy.body463, %lpad460
  call void @_ZdaPv(i8* %call454) #19
  br label %eh.resume

for.end501:                                       ; preds = %for.cond472
  br label %sw.epilog

sw.bb502:                                         ; preds = %if.end
  %m_nSpeakers503 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 8, i32* %m_nSpeakers503, align 4
  %m_nSpeakers504 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %519 = load i32, i32* %m_nSpeakers504, align 4
  %conv505 = zext i32 %519 to i64
  %520 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv505, i64 88)
  %521 = extractvalue { i64, i1 } %520, 1
  %522 = extractvalue { i64, i1 } %520, 0
  %523 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %522, i64 8)
  %524 = extractvalue { i64, i1 } %523, 1
  %525 = or i1 %521, %524
  %526 = extractvalue { i64, i1 } %523, 0
  %527 = select i1 %525, i64 -1, i64 %526
  %call506 = call i8* @_Znam(i64 %527) #18
  %528 = bitcast i8* %call506 to i64*
  store i64 %conv505, i64* %528, align 16
  %529 = getelementptr inbounds i8, i8* %call506, i64 8
  %530 = bitcast i8* %529 to %class.CAmbisonicSpeaker*
  %isempty507 = icmp eq i64 %conv505, 0
  br i1 %isempty507, label %arrayctor.cont522, label %new.ctorloop508

new.ctorloop508:                                  ; preds = %sw.bb502
  %arrayctor.end509 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %530, i64 %conv505
  br label %arrayctor.loop510

arrayctor.loop510:                                ; preds = %invoke.cont513, %new.ctorloop508
  %arrayctor.cur511 = phi %class.CAmbisonicSpeaker* [ %530, %new.ctorloop508 ], [ %arrayctor.next520, %invoke.cont513 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur511)
          to label %invoke.cont513 unwind label %lpad512

invoke.cont513:                                   ; preds = %arrayctor.loop510
  %arrayctor.next520 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur511, i64 1
  %arrayctor.done521 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next520, %arrayctor.end509
  br i1 %arrayctor.done521, label %arrayctor.cont522, label %arrayctor.loop510

arrayctor.cont522:                                ; preds = %sw.bb502, %invoke.cont513
  %m_pAmbSpeakers523 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %530, %class.CAmbisonicSpeaker** %m_pAmbSpeakers523, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond524

for.cond524:                                      ; preds = %for.inc551, %arrayctor.cont522
  %531 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers525 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %532 = load i32, i32* %m_nSpeakers525, align 4
  %cmp526 = icmp ult i32 %531, %532
  br i1 %cmp526, label %for.body527, label %for.end553

for.body527:                                      ; preds = %for.cond524
  %533 = load i32, i32* %niSpeaker, align 4
  %conv528 = uitofp i32 %533 to float
  %mul529 = fmul float %conv528, 3.600000e+02
  %m_nSpeakers530 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %534 = load i32, i32* %m_nSpeakers530, align 4
  %conv531 = uitofp i32 %534 to float
  %div532 = fdiv float %mul529, %conv531
  %call533 = call float @_Z16DegreesToRadiansf(float %div532)
  %sub534 = fsub float -0.000000e+00, %call533
  %fAzimuth535 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub534, float* %fAzimuth535, align 4
  %m_pAmbSpeakers536 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %535 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers536, align 8
  %536 = load i32, i32* %niSpeaker, align 4
  %idxprom537 = zext i32 %536 to i64
  %arrayidx538 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %535, i64 %idxprom537
  %537 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder539 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %537, i32 0, i32 1
  %538 = load i32, i32* %m_nOrder539, align 8
  %539 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D540 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %539, i32 0, i32 2
  %540 = load i8, i8* %m_b3D540, align 4
  %tobool541 = trunc i8 %540 to i1
  %541 = bitcast %class.CAmbisonicSpeaker* %arrayidx538 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable542 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %541, align 8
  %vfn543 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable542, i64 2
  %542 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn543, align 8
  %call544 = call zeroext i1 %542(%class.CAmbisonicSpeaker* %arrayidx538, i32 %538, i1 zeroext %tobool541, i32 0)
  %m_pAmbSpeakers545 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %543 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers545, align 8
  %544 = load i32, i32* %niSpeaker, align 4
  %idxprom546 = zext i32 %544 to i64
  %arrayidx547 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %543, i64 %idxprom546
  %545 = bitcast %class.CAmbisonicSpeaker* %arrayidx547 to %class.CAmbisonicSource*
  %546 = bitcast %struct.PolarPoint* %agg.tmp548 to i8*
  %547 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %546, i8* align 4 %547, i64 12, i1 false)
  %548 = bitcast { <2 x float>, float }* %agg.tmp548.coerce to i8*
  %549 = bitcast %struct.PolarPoint* %agg.tmp548 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %548, i8* align 4 %549, i64 12, i1 false)
  %550 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp548.coerce, i32 0, i32 0
  %551 = load <2 x float>, <2 x float>* %550, align 4
  %552 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp548.coerce, i32 0, i32 1
  %553 = load float, float* %552, align 4
  %554 = bitcast %class.CAmbisonicSource* %545 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable549 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %554, align 8
  %vfn550 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable549, i64 5
  %555 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn550, align 8
  call void %555(%class.CAmbisonicSource* %545, <2 x float> %551, float %553)
  br label %for.inc551

for.inc551:                                       ; preds = %for.body527
  %556 = load i32, i32* %niSpeaker, align 4
  %inc552 = add i32 %556, 1
  store i32 %inc552, i32* %niSpeaker, align 4
  br label %for.cond524

lpad512:                                          ; preds = %arrayctor.loop510
  %557 = landingpad { i8*, i32 }
          cleanup
  %558 = extractvalue { i8*, i32 } %557, 0
  store i8* %558, i8** %exn.slot, align 8
  %559 = extractvalue { i8*, i32 } %557, 1
  store i32 %559, i32* %ehselector.slot, align 4
  %arraydestroy.isempty514 = icmp eq %class.CAmbisonicSpeaker* %530, %arrayctor.cur511
  br i1 %arraydestroy.isempty514, label %arraydestroy.done519, label %arraydestroy.body515

arraydestroy.body515:                             ; preds = %arraydestroy.body515, %lpad512
  %arraydestroy.elementPast516 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur511, %lpad512 ], [ %arraydestroy.element517, %arraydestroy.body515 ]
  %arraydestroy.element517 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast516, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element517) #3
  %arraydestroy.done518 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element517, %530
  br i1 %arraydestroy.done518, label %arraydestroy.done519, label %arraydestroy.body515

arraydestroy.done519:                             ; preds = %arraydestroy.body515, %lpad512
  call void @_ZdaPv(i8* %call506) #19
  br label %eh.resume

for.end553:                                       ; preds = %for.cond524
  br label %sw.epilog

sw.bb554:                                         ; preds = %if.end
  %m_nSpeakers555 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 10, i32* %m_nSpeakers555, align 4
  %m_nSpeakers556 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %560 = load i32, i32* %m_nSpeakers556, align 4
  %conv557 = zext i32 %560 to i64
  %561 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv557, i64 88)
  %562 = extractvalue { i64, i1 } %561, 1
  %563 = extractvalue { i64, i1 } %561, 0
  %564 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %563, i64 8)
  %565 = extractvalue { i64, i1 } %564, 1
  %566 = or i1 %562, %565
  %567 = extractvalue { i64, i1 } %564, 0
  %568 = select i1 %566, i64 -1, i64 %567
  %call558 = call i8* @_Znam(i64 %568) #18
  %569 = bitcast i8* %call558 to i64*
  store i64 %conv557, i64* %569, align 16
  %570 = getelementptr inbounds i8, i8* %call558, i64 8
  %571 = bitcast i8* %570 to %class.CAmbisonicSpeaker*
  %isempty559 = icmp eq i64 %conv557, 0
  br i1 %isempty559, label %arrayctor.cont574, label %new.ctorloop560

new.ctorloop560:                                  ; preds = %sw.bb554
  %arrayctor.end561 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %571, i64 %conv557
  br label %arrayctor.loop562

arrayctor.loop562:                                ; preds = %invoke.cont565, %new.ctorloop560
  %arrayctor.cur563 = phi %class.CAmbisonicSpeaker* [ %571, %new.ctorloop560 ], [ %arrayctor.next572, %invoke.cont565 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur563)
          to label %invoke.cont565 unwind label %lpad564

invoke.cont565:                                   ; preds = %arrayctor.loop562
  %arrayctor.next572 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur563, i64 1
  %arrayctor.done573 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next572, %arrayctor.end561
  br i1 %arrayctor.done573, label %arrayctor.cont574, label %arrayctor.loop562

arrayctor.cont574:                                ; preds = %sw.bb554, %invoke.cont565
  %m_pAmbSpeakers575 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %571, %class.CAmbisonicSpeaker** %m_pAmbSpeakers575, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond576

for.cond576:                                      ; preds = %for.inc603, %arrayctor.cont574
  %572 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers577 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %573 = load i32, i32* %m_nSpeakers577, align 4
  %cmp578 = icmp ult i32 %572, %573
  br i1 %cmp578, label %for.body579, label %for.end605

for.body579:                                      ; preds = %for.cond576
  %574 = load i32, i32* %niSpeaker, align 4
  %conv580 = uitofp i32 %574 to float
  %mul581 = fmul float %conv580, 3.600000e+02
  %m_nSpeakers582 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %575 = load i32, i32* %m_nSpeakers582, align 4
  %conv583 = uitofp i32 %575 to float
  %div584 = fdiv float %mul581, %conv583
  %call585 = call float @_Z16DegreesToRadiansf(float %div584)
  %sub586 = fsub float -0.000000e+00, %call585
  %fAzimuth587 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub586, float* %fAzimuth587, align 4
  %m_pAmbSpeakers588 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %576 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers588, align 8
  %577 = load i32, i32* %niSpeaker, align 4
  %idxprom589 = zext i32 %577 to i64
  %arrayidx590 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %576, i64 %idxprom589
  %578 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder591 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %578, i32 0, i32 1
  %579 = load i32, i32* %m_nOrder591, align 8
  %580 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D592 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %580, i32 0, i32 2
  %581 = load i8, i8* %m_b3D592, align 4
  %tobool593 = trunc i8 %581 to i1
  %582 = bitcast %class.CAmbisonicSpeaker* %arrayidx590 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable594 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %582, align 8
  %vfn595 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable594, i64 2
  %583 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn595, align 8
  %call596 = call zeroext i1 %583(%class.CAmbisonicSpeaker* %arrayidx590, i32 %579, i1 zeroext %tobool593, i32 0)
  %m_pAmbSpeakers597 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %584 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers597, align 8
  %585 = load i32, i32* %niSpeaker, align 4
  %idxprom598 = zext i32 %585 to i64
  %arrayidx599 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %584, i64 %idxprom598
  %586 = bitcast %class.CAmbisonicSpeaker* %arrayidx599 to %class.CAmbisonicSource*
  %587 = bitcast %struct.PolarPoint* %agg.tmp600 to i8*
  %588 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %587, i8* align 4 %588, i64 12, i1 false)
  %589 = bitcast { <2 x float>, float }* %agg.tmp600.coerce to i8*
  %590 = bitcast %struct.PolarPoint* %agg.tmp600 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %589, i8* align 4 %590, i64 12, i1 false)
  %591 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp600.coerce, i32 0, i32 0
  %592 = load <2 x float>, <2 x float>* %591, align 4
  %593 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp600.coerce, i32 0, i32 1
  %594 = load float, float* %593, align 4
  %595 = bitcast %class.CAmbisonicSource* %586 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable601 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %595, align 8
  %vfn602 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable601, i64 5
  %596 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn602, align 8
  call void %596(%class.CAmbisonicSource* %586, <2 x float> %592, float %594)
  br label %for.inc603

for.inc603:                                       ; preds = %for.body579
  %597 = load i32, i32* %niSpeaker, align 4
  %inc604 = add i32 %597, 1
  store i32 %inc604, i32* %niSpeaker, align 4
  br label %for.cond576

lpad564:                                          ; preds = %arrayctor.loop562
  %598 = landingpad { i8*, i32 }
          cleanup
  %599 = extractvalue { i8*, i32 } %598, 0
  store i8* %599, i8** %exn.slot, align 8
  %600 = extractvalue { i8*, i32 } %598, 1
  store i32 %600, i32* %ehselector.slot, align 4
  %arraydestroy.isempty566 = icmp eq %class.CAmbisonicSpeaker* %571, %arrayctor.cur563
  br i1 %arraydestroy.isempty566, label %arraydestroy.done571, label %arraydestroy.body567

arraydestroy.body567:                             ; preds = %arraydestroy.body567, %lpad564
  %arraydestroy.elementPast568 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur563, %lpad564 ], [ %arraydestroy.element569, %arraydestroy.body567 ]
  %arraydestroy.element569 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast568, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element569) #3
  %arraydestroy.done570 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element569, %571
  br i1 %arraydestroy.done570, label %arraydestroy.done571, label %arraydestroy.body567

arraydestroy.done571:                             ; preds = %arraydestroy.body567, %lpad564
  call void @_ZdaPv(i8* %call558) #19
  br label %eh.resume

for.end605:                                       ; preds = %for.cond576
  br label %sw.epilog

sw.bb606:                                         ; preds = %if.end
  %m_nSpeakers607 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 12, i32* %m_nSpeakers607, align 4
  %m_nSpeakers608 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %601 = load i32, i32* %m_nSpeakers608, align 4
  %conv609 = zext i32 %601 to i64
  %602 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv609, i64 88)
  %603 = extractvalue { i64, i1 } %602, 1
  %604 = extractvalue { i64, i1 } %602, 0
  %605 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %604, i64 8)
  %606 = extractvalue { i64, i1 } %605, 1
  %607 = or i1 %603, %606
  %608 = extractvalue { i64, i1 } %605, 0
  %609 = select i1 %607, i64 -1, i64 %608
  %call610 = call i8* @_Znam(i64 %609) #18
  %610 = bitcast i8* %call610 to i64*
  store i64 %conv609, i64* %610, align 16
  %611 = getelementptr inbounds i8, i8* %call610, i64 8
  %612 = bitcast i8* %611 to %class.CAmbisonicSpeaker*
  %isempty611 = icmp eq i64 %conv609, 0
  br i1 %isempty611, label %arrayctor.cont626, label %new.ctorloop612

new.ctorloop612:                                  ; preds = %sw.bb606
  %arrayctor.end613 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %612, i64 %conv609
  br label %arrayctor.loop614

arrayctor.loop614:                                ; preds = %invoke.cont617, %new.ctorloop612
  %arrayctor.cur615 = phi %class.CAmbisonicSpeaker* [ %612, %new.ctorloop612 ], [ %arrayctor.next624, %invoke.cont617 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur615)
          to label %invoke.cont617 unwind label %lpad616

invoke.cont617:                                   ; preds = %arrayctor.loop614
  %arrayctor.next624 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur615, i64 1
  %arrayctor.done625 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next624, %arrayctor.end613
  br i1 %arrayctor.done625, label %arrayctor.cont626, label %arrayctor.loop614

arrayctor.cont626:                                ; preds = %sw.bb606, %invoke.cont617
  %m_pAmbSpeakers627 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %612, %class.CAmbisonicSpeaker** %m_pAmbSpeakers627, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond628

for.cond628:                                      ; preds = %for.inc655, %arrayctor.cont626
  %613 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers629 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %614 = load i32, i32* %m_nSpeakers629, align 4
  %cmp630 = icmp ult i32 %613, %614
  br i1 %cmp630, label %for.body631, label %for.end657

for.body631:                                      ; preds = %for.cond628
  %615 = load i32, i32* %niSpeaker, align 4
  %conv632 = uitofp i32 %615 to float
  %mul633 = fmul float %conv632, 3.600000e+02
  %m_nSpeakers634 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %616 = load i32, i32* %m_nSpeakers634, align 4
  %conv635 = uitofp i32 %616 to float
  %div636 = fdiv float %mul633, %conv635
  %call637 = call float @_Z16DegreesToRadiansf(float %div636)
  %sub638 = fsub float -0.000000e+00, %call637
  %fAzimuth639 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub638, float* %fAzimuth639, align 4
  %m_pAmbSpeakers640 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %617 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers640, align 8
  %618 = load i32, i32* %niSpeaker, align 4
  %idxprom641 = zext i32 %618 to i64
  %arrayidx642 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %617, i64 %idxprom641
  %619 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder643 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %619, i32 0, i32 1
  %620 = load i32, i32* %m_nOrder643, align 8
  %621 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D644 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %621, i32 0, i32 2
  %622 = load i8, i8* %m_b3D644, align 4
  %tobool645 = trunc i8 %622 to i1
  %623 = bitcast %class.CAmbisonicSpeaker* %arrayidx642 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable646 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %623, align 8
  %vfn647 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable646, i64 2
  %624 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn647, align 8
  %call648 = call zeroext i1 %624(%class.CAmbisonicSpeaker* %arrayidx642, i32 %620, i1 zeroext %tobool645, i32 0)
  %m_pAmbSpeakers649 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %625 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers649, align 8
  %626 = load i32, i32* %niSpeaker, align 4
  %idxprom650 = zext i32 %626 to i64
  %arrayidx651 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %625, i64 %idxprom650
  %627 = bitcast %class.CAmbisonicSpeaker* %arrayidx651 to %class.CAmbisonicSource*
  %628 = bitcast %struct.PolarPoint* %agg.tmp652 to i8*
  %629 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %628, i8* align 4 %629, i64 12, i1 false)
  %630 = bitcast { <2 x float>, float }* %agg.tmp652.coerce to i8*
  %631 = bitcast %struct.PolarPoint* %agg.tmp652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %630, i8* align 4 %631, i64 12, i1 false)
  %632 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp652.coerce, i32 0, i32 0
  %633 = load <2 x float>, <2 x float>* %632, align 4
  %634 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp652.coerce, i32 0, i32 1
  %635 = load float, float* %634, align 4
  %636 = bitcast %class.CAmbisonicSource* %627 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable653 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %636, align 8
  %vfn654 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable653, i64 5
  %637 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn654, align 8
  call void %637(%class.CAmbisonicSource* %627, <2 x float> %633, float %635)
  br label %for.inc655

for.inc655:                                       ; preds = %for.body631
  %638 = load i32, i32* %niSpeaker, align 4
  %inc656 = add i32 %638, 1
  store i32 %inc656, i32* %niSpeaker, align 4
  br label %for.cond628

lpad616:                                          ; preds = %arrayctor.loop614
  %639 = landingpad { i8*, i32 }
          cleanup
  %640 = extractvalue { i8*, i32 } %639, 0
  store i8* %640, i8** %exn.slot, align 8
  %641 = extractvalue { i8*, i32 } %639, 1
  store i32 %641, i32* %ehselector.slot, align 4
  %arraydestroy.isempty618 = icmp eq %class.CAmbisonicSpeaker* %612, %arrayctor.cur615
  br i1 %arraydestroy.isempty618, label %arraydestroy.done623, label %arraydestroy.body619

arraydestroy.body619:                             ; preds = %arraydestroy.body619, %lpad616
  %arraydestroy.elementPast620 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur615, %lpad616 ], [ %arraydestroy.element621, %arraydestroy.body619 ]
  %arraydestroy.element621 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast620, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element621) #3
  %arraydestroy.done622 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element621, %612
  br i1 %arraydestroy.done622, label %arraydestroy.done623, label %arraydestroy.body619

arraydestroy.done623:                             ; preds = %arraydestroy.body619, %lpad616
  call void @_ZdaPv(i8* %call610) #19
  br label %eh.resume

for.end657:                                       ; preds = %for.cond628
  br label %sw.epilog

sw.bb658:                                         ; preds = %if.end
  %m_nSpeakers659 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 8, i32* %m_nSpeakers659, align 4
  %m_nSpeakers660 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %642 = load i32, i32* %m_nSpeakers660, align 4
  %conv661 = zext i32 %642 to i64
  %643 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv661, i64 88)
  %644 = extractvalue { i64, i1 } %643, 1
  %645 = extractvalue { i64, i1 } %643, 0
  %646 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %645, i64 8)
  %647 = extractvalue { i64, i1 } %646, 1
  %648 = or i1 %644, %647
  %649 = extractvalue { i64, i1 } %646, 0
  %650 = select i1 %648, i64 -1, i64 %649
  %call662 = call i8* @_Znam(i64 %650) #18
  %651 = bitcast i8* %call662 to i64*
  store i64 %conv661, i64* %651, align 16
  %652 = getelementptr inbounds i8, i8* %call662, i64 8
  %653 = bitcast i8* %652 to %class.CAmbisonicSpeaker*
  %isempty663 = icmp eq i64 %conv661, 0
  br i1 %isempty663, label %arrayctor.cont678, label %new.ctorloop664

new.ctorloop664:                                  ; preds = %sw.bb658
  %arrayctor.end665 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %653, i64 %conv661
  br label %arrayctor.loop666

arrayctor.loop666:                                ; preds = %invoke.cont669, %new.ctorloop664
  %arrayctor.cur667 = phi %class.CAmbisonicSpeaker* [ %653, %new.ctorloop664 ], [ %arrayctor.next676, %invoke.cont669 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur667)
          to label %invoke.cont669 unwind label %lpad668

invoke.cont669:                                   ; preds = %arrayctor.loop666
  %arrayctor.next676 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur667, i64 1
  %arrayctor.done677 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next676, %arrayctor.end665
  br i1 %arrayctor.done677, label %arrayctor.cont678, label %arrayctor.loop666

arrayctor.cont678:                                ; preds = %sw.bb658, %invoke.cont669
  %m_pAmbSpeakers679 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %653, %class.CAmbisonicSpeaker** %m_pAmbSpeakers679, align 8
  %call680 = call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call680, float* %fElevation, align 4
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond681

for.cond681:                                      ; preds = %for.inc711, %arrayctor.cont678
  %654 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers682 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %655 = load i32, i32* %m_nSpeakers682, align 4
  %div683 = udiv i32 %655, 2
  %cmp684 = icmp ult i32 %654, %div683
  br i1 %cmp684, label %for.body685, label %for.end713

for.body685:                                      ; preds = %for.cond681
  %656 = load i32, i32* %niSpeaker, align 4
  %conv686 = uitofp i32 %656 to float
  %mul687 = fmul float %conv686, 3.600000e+02
  %m_nSpeakers688 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %657 = load i32, i32* %m_nSpeakers688, align 4
  %div689 = udiv i32 %657, 2
  %conv690 = uitofp i32 %div689 to float
  %div691 = fdiv float %mul687, %conv690
  %add692 = fadd float %div691, 4.500000e+01
  %call693 = call float @_Z16DegreesToRadiansf(float %add692)
  %sub694 = fsub float -0.000000e+00, %call693
  %fAzimuth695 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub694, float* %fAzimuth695, align 4
  %m_pAmbSpeakers696 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %658 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers696, align 8
  %659 = load i32, i32* %niSpeaker, align 4
  %idxprom697 = zext i32 %659 to i64
  %arrayidx698 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %658, i64 %idxprom697
  %660 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder699 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %660, i32 0, i32 1
  %661 = load i32, i32* %m_nOrder699, align 8
  %662 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D700 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %662, i32 0, i32 2
  %663 = load i8, i8* %m_b3D700, align 4
  %tobool701 = trunc i8 %663 to i1
  %664 = bitcast %class.CAmbisonicSpeaker* %arrayidx698 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable702 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %664, align 8
  %vfn703 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable702, i64 2
  %665 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn703, align 8
  %call704 = call zeroext i1 %665(%class.CAmbisonicSpeaker* %arrayidx698, i32 %661, i1 zeroext %tobool701, i32 0)
  %m_pAmbSpeakers705 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %666 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers705, align 8
  %667 = load i32, i32* %niSpeaker, align 4
  %idxprom706 = zext i32 %667 to i64
  %arrayidx707 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %666, i64 %idxprom706
  %668 = bitcast %class.CAmbisonicSpeaker* %arrayidx707 to %class.CAmbisonicSource*
  %669 = bitcast %struct.PolarPoint* %agg.tmp708 to i8*
  %670 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %669, i8* align 4 %670, i64 12, i1 false)
  %671 = bitcast { <2 x float>, float }* %agg.tmp708.coerce to i8*
  %672 = bitcast %struct.PolarPoint* %agg.tmp708 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %671, i8* align 4 %672, i64 12, i1 false)
  %673 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp708.coerce, i32 0, i32 0
  %674 = load <2 x float>, <2 x float>* %673, align 4
  %675 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp708.coerce, i32 0, i32 1
  %676 = load float, float* %675, align 4
  %677 = bitcast %class.CAmbisonicSource* %668 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable709 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %677, align 8
  %vfn710 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable709, i64 5
  %678 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn710, align 8
  call void %678(%class.CAmbisonicSource* %668, <2 x float> %674, float %676)
  br label %for.inc711

for.inc711:                                       ; preds = %for.body685
  %679 = load i32, i32* %niSpeaker, align 4
  %inc712 = add i32 %679, 1
  store i32 %inc712, i32* %niSpeaker, align 4
  br label %for.cond681

lpad668:                                          ; preds = %arrayctor.loop666
  %680 = landingpad { i8*, i32 }
          cleanup
  %681 = extractvalue { i8*, i32 } %680, 0
  store i8* %681, i8** %exn.slot, align 8
  %682 = extractvalue { i8*, i32 } %680, 1
  store i32 %682, i32* %ehselector.slot, align 4
  %arraydestroy.isempty670 = icmp eq %class.CAmbisonicSpeaker* %653, %arrayctor.cur667
  br i1 %arraydestroy.isempty670, label %arraydestroy.done675, label %arraydestroy.body671

arraydestroy.body671:                             ; preds = %arraydestroy.body671, %lpad668
  %arraydestroy.elementPast672 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur667, %lpad668 ], [ %arraydestroy.element673, %arraydestroy.body671 ]
  %arraydestroy.element673 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast672, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element673) #3
  %arraydestroy.done674 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element673, %653
  br i1 %arraydestroy.done674, label %arraydestroy.done675, label %arraydestroy.body671

arraydestroy.done675:                             ; preds = %arraydestroy.body671, %lpad668
  call void @_ZdaPv(i8* %call662) #19
  br label %eh.resume

for.end713:                                       ; preds = %for.cond681
  %call714 = call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %fElevation715 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call714, float* %fElevation715, align 4
  %m_nSpeakers716 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %683 = load i32, i32* %m_nSpeakers716, align 4
  %div717 = udiv i32 %683, 2
  store i32 %div717, i32* %niSpeaker, align 4
  br label %for.cond718

for.cond718:                                      ; preds = %for.inc748, %for.end713
  %684 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers719 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %685 = load i32, i32* %m_nSpeakers719, align 4
  %cmp720 = icmp ult i32 %684, %685
  br i1 %cmp720, label %for.body721, label %for.end750

for.body721:                                      ; preds = %for.cond718
  %686 = load i32, i32* %niSpeaker, align 4
  %sub722 = sub i32 %686, 4
  %conv723 = uitofp i32 %sub722 to float
  %mul724 = fmul float %conv723, 3.600000e+02
  %m_nSpeakers725 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %687 = load i32, i32* %m_nSpeakers725, align 4
  %div726 = udiv i32 %687, 2
  %conv727 = uitofp i32 %div726 to float
  %div728 = fdiv float %mul724, %conv727
  %add729 = fadd float %div728, 4.500000e+01
  %call730 = call float @_Z16DegreesToRadiansf(float %add729)
  %sub731 = fsub float -0.000000e+00, %call730
  %fAzimuth732 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub731, float* %fAzimuth732, align 4
  %m_pAmbSpeakers733 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %688 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers733, align 8
  %689 = load i32, i32* %niSpeaker, align 4
  %idxprom734 = zext i32 %689 to i64
  %arrayidx735 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %688, i64 %idxprom734
  %690 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder736 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %690, i32 0, i32 1
  %691 = load i32, i32* %m_nOrder736, align 8
  %692 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D737 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %692, i32 0, i32 2
  %693 = load i8, i8* %m_b3D737, align 4
  %tobool738 = trunc i8 %693 to i1
  %694 = bitcast %class.CAmbisonicSpeaker* %arrayidx735 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable739 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %694, align 8
  %vfn740 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable739, i64 2
  %695 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn740, align 8
  %call741 = call zeroext i1 %695(%class.CAmbisonicSpeaker* %arrayidx735, i32 %691, i1 zeroext %tobool738, i32 0)
  %m_pAmbSpeakers742 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %696 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers742, align 8
  %697 = load i32, i32* %niSpeaker, align 4
  %idxprom743 = zext i32 %697 to i64
  %arrayidx744 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %696, i64 %idxprom743
  %698 = bitcast %class.CAmbisonicSpeaker* %arrayidx744 to %class.CAmbisonicSource*
  %699 = bitcast %struct.PolarPoint* %agg.tmp745 to i8*
  %700 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %699, i8* align 4 %700, i64 12, i1 false)
  %701 = bitcast { <2 x float>, float }* %agg.tmp745.coerce to i8*
  %702 = bitcast %struct.PolarPoint* %agg.tmp745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %701, i8* align 4 %702, i64 12, i1 false)
  %703 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp745.coerce, i32 0, i32 0
  %704 = load <2 x float>, <2 x float>* %703, align 4
  %705 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp745.coerce, i32 0, i32 1
  %706 = load float, float* %705, align 4
  %707 = bitcast %class.CAmbisonicSource* %698 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable746 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %707, align 8
  %vfn747 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable746, i64 5
  %708 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn747, align 8
  call void %708(%class.CAmbisonicSource* %698, <2 x float> %704, float %706)
  br label %for.inc748

for.inc748:                                       ; preds = %for.body721
  %709 = load i32, i32* %niSpeaker, align 4
  %inc749 = add i32 %709, 1
  store i32 %inc749, i32* %niSpeaker, align 4
  br label %for.cond718

for.end750:                                       ; preds = %for.cond718
  br label %sw.epilog

sw.bb751:                                         ; preds = %if.end
  %m_nSpeakers752 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 20, i32* %m_nSpeakers752, align 4
  %m_nSpeakers753 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %710 = load i32, i32* %m_nSpeakers753, align 4
  %conv754 = zext i32 %710 to i64
  %711 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv754, i64 88)
  %712 = extractvalue { i64, i1 } %711, 1
  %713 = extractvalue { i64, i1 } %711, 0
  %714 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %713, i64 8)
  %715 = extractvalue { i64, i1 } %714, 1
  %716 = or i1 %712, %715
  %717 = extractvalue { i64, i1 } %714, 0
  %718 = select i1 %716, i64 -1, i64 %717
  %call755 = call i8* @_Znam(i64 %718) #18
  %719 = bitcast i8* %call755 to i64*
  store i64 %conv754, i64* %719, align 16
  %720 = getelementptr inbounds i8, i8* %call755, i64 8
  %721 = bitcast i8* %720 to %class.CAmbisonicSpeaker*
  %isempty756 = icmp eq i64 %conv754, 0
  br i1 %isempty756, label %arrayctor.cont771, label %new.ctorloop757

new.ctorloop757:                                  ; preds = %sw.bb751
  %arrayctor.end758 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %721, i64 %conv754
  br label %arrayctor.loop759

arrayctor.loop759:                                ; preds = %invoke.cont762, %new.ctorloop757
  %arrayctor.cur760 = phi %class.CAmbisonicSpeaker* [ %721, %new.ctorloop757 ], [ %arrayctor.next769, %invoke.cont762 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur760)
          to label %invoke.cont762 unwind label %lpad761

invoke.cont762:                                   ; preds = %arrayctor.loop759
  %arrayctor.next769 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur760, i64 1
  %arrayctor.done770 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next769, %arrayctor.end758
  br i1 %arrayctor.done770, label %arrayctor.cont771, label %arrayctor.loop759

arrayctor.cont771:                                ; preds = %sw.bb751, %invoke.cont762
  %m_pAmbSpeakers772 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %721, %class.CAmbisonicSpeaker** %m_pAmbSpeakers772, align 8
  %call773 = call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %fElevation774 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call773, float* %fElevation774, align 4
  %call775 = call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %fAzimuth776 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call775, float* %fAzimuth776, align 4
  %m_pAmbSpeakers777 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %722 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers777, align 8
  %arrayidx778 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %722, i64 0
  %723 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder779 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %723, i32 0, i32 1
  %724 = load i32, i32* %m_nOrder779, align 8
  %725 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D780 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %725, i32 0, i32 2
  %726 = load i8, i8* %m_b3D780, align 4
  %tobool781 = trunc i8 %726 to i1
  %727 = bitcast %class.CAmbisonicSpeaker* %arrayidx778 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable782 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %727, align 8
  %vfn783 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable782, i64 2
  %728 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn783, align 8
  %call784 = call zeroext i1 %728(%class.CAmbisonicSpeaker* %arrayidx778, i32 %724, i1 zeroext %tobool781, i32 0)
  %m_pAmbSpeakers785 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %729 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers785, align 8
  %arrayidx786 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %729, i64 0
  %730 = bitcast %class.CAmbisonicSpeaker* %arrayidx786 to %class.CAmbisonicSource*
  %731 = bitcast %struct.PolarPoint* %agg.tmp787 to i8*
  %732 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %731, i8* align 4 %732, i64 12, i1 false)
  %733 = bitcast { <2 x float>, float }* %agg.tmp787.coerce to i8*
  %734 = bitcast %struct.PolarPoint* %agg.tmp787 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %733, i8* align 4 %734, i64 12, i1 false)
  %735 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp787.coerce, i32 0, i32 0
  %736 = load <2 x float>, <2 x float>* %735, align 4
  %737 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp787.coerce, i32 0, i32 1
  %738 = load float, float* %737, align 4
  %739 = bitcast %class.CAmbisonicSource* %730 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable788 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %739, align 8
  %vfn789 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable788, i64 5
  %740 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn789, align 8
  call void %740(%class.CAmbisonicSource* %730, <2 x float> %736, float %738)
  %call790 = call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %fAzimuth791 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call790, float* %fAzimuth791, align 4
  %m_pAmbSpeakers792 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %741 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers792, align 8
  %arrayidx793 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %741, i64 1
  %742 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder794 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %742, i32 0, i32 1
  %743 = load i32, i32* %m_nOrder794, align 8
  %744 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D795 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %744, i32 0, i32 2
  %745 = load i8, i8* %m_b3D795, align 4
  %tobool796 = trunc i8 %745 to i1
  %746 = bitcast %class.CAmbisonicSpeaker* %arrayidx793 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable797 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %746, align 8
  %vfn798 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable797, i64 2
  %747 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn798, align 8
  %call799 = call zeroext i1 %747(%class.CAmbisonicSpeaker* %arrayidx793, i32 %743, i1 zeroext %tobool796, i32 0)
  %m_pAmbSpeakers800 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %748 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers800, align 8
  %arrayidx801 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %748, i64 1
  %749 = bitcast %class.CAmbisonicSpeaker* %arrayidx801 to %class.CAmbisonicSource*
  %750 = bitcast %struct.PolarPoint* %agg.tmp802 to i8*
  %751 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %750, i8* align 4 %751, i64 12, i1 false)
  %752 = bitcast { <2 x float>, float }* %agg.tmp802.coerce to i8*
  %753 = bitcast %struct.PolarPoint* %agg.tmp802 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %752, i8* align 4 %753, i64 12, i1 false)
  %754 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp802.coerce, i32 0, i32 0
  %755 = load <2 x float>, <2 x float>* %754, align 4
  %756 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp802.coerce, i32 0, i32 1
  %757 = load float, float* %756, align 4
  %758 = bitcast %class.CAmbisonicSource* %749 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable803 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %758, align 8
  %vfn804 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable803, i64 5
  %759 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn804, align 8
  call void %759(%class.CAmbisonicSource* %749, <2 x float> %755, float %757)
  %call805 = call float @_Z16DegreesToRadiansf(float 0xC041A66660000000)
  %fElevation806 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call805, float* %fElevation806, align 4
  %call807 = call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %fAzimuth808 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call807, float* %fAzimuth808, align 4
  %m_pAmbSpeakers809 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %760 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers809, align 8
  %arrayidx810 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %760, i64 2
  %761 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder811 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %761, i32 0, i32 1
  %762 = load i32, i32* %m_nOrder811, align 8
  %763 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D812 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %763, i32 0, i32 2
  %764 = load i8, i8* %m_b3D812, align 4
  %tobool813 = trunc i8 %764 to i1
  %765 = bitcast %class.CAmbisonicSpeaker* %arrayidx810 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable814 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %765, align 8
  %vfn815 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable814, i64 2
  %766 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn815, align 8
  %call816 = call zeroext i1 %766(%class.CAmbisonicSpeaker* %arrayidx810, i32 %762, i1 zeroext %tobool813, i32 0)
  %m_pAmbSpeakers817 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %767 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers817, align 8
  %arrayidx818 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %767, i64 2
  %768 = bitcast %class.CAmbisonicSpeaker* %arrayidx818 to %class.CAmbisonicSource*
  %769 = bitcast %struct.PolarPoint* %agg.tmp819 to i8*
  %770 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %769, i8* align 4 %770, i64 12, i1 false)
  %771 = bitcast { <2 x float>, float }* %agg.tmp819.coerce to i8*
  %772 = bitcast %struct.PolarPoint* %agg.tmp819 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %771, i8* align 4 %772, i64 12, i1 false)
  %773 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp819.coerce, i32 0, i32 0
  %774 = load <2 x float>, <2 x float>* %773, align 4
  %775 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp819.coerce, i32 0, i32 1
  %776 = load float, float* %775, align 4
  %777 = bitcast %class.CAmbisonicSource* %768 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable820 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %777, align 8
  %vfn821 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable820, i64 5
  %778 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn821, align 8
  call void %778(%class.CAmbisonicSource* %768, <2 x float> %774, float %776)
  %call822 = call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %fAzimuth823 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call822, float* %fAzimuth823, align 4
  %m_pAmbSpeakers824 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %779 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers824, align 8
  %arrayidx825 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %779, i64 3
  %780 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder826 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %780, i32 0, i32 1
  %781 = load i32, i32* %m_nOrder826, align 8
  %782 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D827 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %782, i32 0, i32 2
  %783 = load i8, i8* %m_b3D827, align 4
  %tobool828 = trunc i8 %783 to i1
  %784 = bitcast %class.CAmbisonicSpeaker* %arrayidx825 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable829 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %784, align 8
  %vfn830 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable829, i64 2
  %785 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn830, align 8
  %call831 = call zeroext i1 %785(%class.CAmbisonicSpeaker* %arrayidx825, i32 %781, i1 zeroext %tobool828, i32 0)
  %m_pAmbSpeakers832 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %786 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers832, align 8
  %arrayidx833 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %786, i64 3
  %787 = bitcast %class.CAmbisonicSpeaker* %arrayidx833 to %class.CAmbisonicSource*
  %788 = bitcast %struct.PolarPoint* %agg.tmp834 to i8*
  %789 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %788, i8* align 4 %789, i64 12, i1 false)
  %790 = bitcast { <2 x float>, float }* %agg.tmp834.coerce to i8*
  %791 = bitcast %struct.PolarPoint* %agg.tmp834 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %790, i8* align 4 %791, i64 12, i1 false)
  %792 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp834.coerce, i32 0, i32 0
  %793 = load <2 x float>, <2 x float>* %792, align 4
  %794 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp834.coerce, i32 0, i32 1
  %795 = load float, float* %794, align 4
  %796 = bitcast %class.CAmbisonicSource* %787 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable835 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %796, align 8
  %vfn836 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable835, i64 5
  %797 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn836, align 8
  call void %797(%class.CAmbisonicSource* %787, <2 x float> %793, float %795)
  %call837 = call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %fAzimuth838 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call837, float* %fAzimuth838, align 4
  %m_pAmbSpeakers839 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %798 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers839, align 8
  %arrayidx840 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %798, i64 4
  %799 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder841 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %799, i32 0, i32 1
  %800 = load i32, i32* %m_nOrder841, align 8
  %801 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D842 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %801, i32 0, i32 2
  %802 = load i8, i8* %m_b3D842, align 4
  %tobool843 = trunc i8 %802 to i1
  %803 = bitcast %class.CAmbisonicSpeaker* %arrayidx840 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable844 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %803, align 8
  %vfn845 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable844, i64 2
  %804 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn845, align 8
  %call846 = call zeroext i1 %804(%class.CAmbisonicSpeaker* %arrayidx840, i32 %800, i1 zeroext %tobool843, i32 0)
  %m_pAmbSpeakers847 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %805 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers847, align 8
  %arrayidx848 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %805, i64 4
  %806 = bitcast %class.CAmbisonicSpeaker* %arrayidx848 to %class.CAmbisonicSource*
  %807 = bitcast %struct.PolarPoint* %agg.tmp849 to i8*
  %808 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %807, i8* align 4 %808, i64 12, i1 false)
  %809 = bitcast { <2 x float>, float }* %agg.tmp849.coerce to i8*
  %810 = bitcast %struct.PolarPoint* %agg.tmp849 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %809, i8* align 4 %810, i64 12, i1 false)
  %811 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp849.coerce, i32 0, i32 0
  %812 = load <2 x float>, <2 x float>* %811, align 4
  %813 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp849.coerce, i32 0, i32 1
  %814 = load float, float* %813, align 4
  %815 = bitcast %class.CAmbisonicSource* %806 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable850 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %815, align 8
  %vfn851 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable850, i64 5
  %816 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn851, align 8
  call void %816(%class.CAmbisonicSource* %806, <2 x float> %812, float %814)
  %call852 = call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %fAzimuth853 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call852, float* %fAzimuth853, align 4
  %m_pAmbSpeakers854 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %817 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers854, align 8
  %arrayidx855 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %817, i64 5
  %818 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder856 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %818, i32 0, i32 1
  %819 = load i32, i32* %m_nOrder856, align 8
  %820 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D857 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %820, i32 0, i32 2
  %821 = load i8, i8* %m_b3D857, align 4
  %tobool858 = trunc i8 %821 to i1
  %822 = bitcast %class.CAmbisonicSpeaker* %arrayidx855 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable859 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %822, align 8
  %vfn860 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable859, i64 2
  %823 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn860, align 8
  %call861 = call zeroext i1 %823(%class.CAmbisonicSpeaker* %arrayidx855, i32 %819, i1 zeroext %tobool858, i32 0)
  %m_pAmbSpeakers862 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %824 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers862, align 8
  %arrayidx863 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %824, i64 5
  %825 = bitcast %class.CAmbisonicSpeaker* %arrayidx863 to %class.CAmbisonicSource*
  %826 = bitcast %struct.PolarPoint* %agg.tmp864 to i8*
  %827 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %826, i8* align 4 %827, i64 12, i1 false)
  %828 = bitcast { <2 x float>, float }* %agg.tmp864.coerce to i8*
  %829 = bitcast %struct.PolarPoint* %agg.tmp864 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %828, i8* align 4 %829, i64 12, i1 false)
  %830 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp864.coerce, i32 0, i32 0
  %831 = load <2 x float>, <2 x float>* %830, align 4
  %832 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp864.coerce, i32 0, i32 1
  %833 = load float, float* %832, align 4
  %834 = bitcast %class.CAmbisonicSource* %825 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable865 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %834, align 8
  %vfn866 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable865, i64 5
  %835 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn866, align 8
  call void %835(%class.CAmbisonicSource* %825, <2 x float> %831, float %833)
  %call867 = call float @_Z16DegreesToRadiansf(float 0xC034E66660000000)
  %fElevation868 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call867, float* %fElevation868, align 4
  %call869 = call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %fAzimuth870 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call869, float* %fAzimuth870, align 4
  %m_pAmbSpeakers871 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %836 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers871, align 8
  %arrayidx872 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %836, i64 6
  %837 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder873 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %837, i32 0, i32 1
  %838 = load i32, i32* %m_nOrder873, align 8
  %839 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D874 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %839, i32 0, i32 2
  %840 = load i8, i8* %m_b3D874, align 4
  %tobool875 = trunc i8 %840 to i1
  %841 = bitcast %class.CAmbisonicSpeaker* %arrayidx872 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable876 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %841, align 8
  %vfn877 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable876, i64 2
  %842 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn877, align 8
  %call878 = call zeroext i1 %842(%class.CAmbisonicSpeaker* %arrayidx872, i32 %838, i1 zeroext %tobool875, i32 0)
  %m_pAmbSpeakers879 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %843 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers879, align 8
  %arrayidx880 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %843, i64 6
  %844 = bitcast %class.CAmbisonicSpeaker* %arrayidx880 to %class.CAmbisonicSource*
  %845 = bitcast %struct.PolarPoint* %agg.tmp881 to i8*
  %846 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %845, i8* align 4 %846, i64 12, i1 false)
  %847 = bitcast { <2 x float>, float }* %agg.tmp881.coerce to i8*
  %848 = bitcast %struct.PolarPoint* %agg.tmp881 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %847, i8* align 4 %848, i64 12, i1 false)
  %849 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp881.coerce, i32 0, i32 0
  %850 = load <2 x float>, <2 x float>* %849, align 4
  %851 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp881.coerce, i32 0, i32 1
  %852 = load float, float* %851, align 4
  %853 = bitcast %class.CAmbisonicSource* %844 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable882 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %853, align 8
  %vfn883 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable882, i64 5
  %854 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn883, align 8
  call void %854(%class.CAmbisonicSource* %844, <2 x float> %850, float %852)
  %call884 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fAzimuth885 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call884, float* %fAzimuth885, align 4
  %m_pAmbSpeakers886 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %855 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers886, align 8
  %arrayidx887 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %855, i64 7
  %856 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder888 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %856, i32 0, i32 1
  %857 = load i32, i32* %m_nOrder888, align 8
  %858 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D889 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %858, i32 0, i32 2
  %859 = load i8, i8* %m_b3D889, align 4
  %tobool890 = trunc i8 %859 to i1
  %860 = bitcast %class.CAmbisonicSpeaker* %arrayidx887 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable891 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %860, align 8
  %vfn892 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable891, i64 2
  %861 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn892, align 8
  %call893 = call zeroext i1 %861(%class.CAmbisonicSpeaker* %arrayidx887, i32 %857, i1 zeroext %tobool890, i32 0)
  %m_pAmbSpeakers894 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %862 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers894, align 8
  %arrayidx895 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %862, i64 7
  %863 = bitcast %class.CAmbisonicSpeaker* %arrayidx895 to %class.CAmbisonicSource*
  %864 = bitcast %struct.PolarPoint* %agg.tmp896 to i8*
  %865 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %864, i8* align 4 %865, i64 12, i1 false)
  %866 = bitcast { <2 x float>, float }* %agg.tmp896.coerce to i8*
  %867 = bitcast %struct.PolarPoint* %agg.tmp896 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %866, i8* align 4 %867, i64 12, i1 false)
  %868 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp896.coerce, i32 0, i32 0
  %869 = load <2 x float>, <2 x float>* %868, align 4
  %870 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp896.coerce, i32 0, i32 1
  %871 = load float, float* %870, align 4
  %872 = bitcast %class.CAmbisonicSource* %863 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable897 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %872, align 8
  %vfn898 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable897, i64 5
  %873 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn898, align 8
  call void %873(%class.CAmbisonicSource* %863, <2 x float> %869, float %871)
  %call899 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fElevation900 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call899, float* %fElevation900, align 4
  %call901 = call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %fAzimuth902 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call901, float* %fAzimuth902, align 4
  %m_pAmbSpeakers903 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %874 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers903, align 8
  %arrayidx904 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %874, i64 8
  %875 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder905 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %875, i32 0, i32 1
  %876 = load i32, i32* %m_nOrder905, align 8
  %877 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D906 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %877, i32 0, i32 2
  %878 = load i8, i8* %m_b3D906, align 4
  %tobool907 = trunc i8 %878 to i1
  %879 = bitcast %class.CAmbisonicSpeaker* %arrayidx904 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable908 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %879, align 8
  %vfn909 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable908, i64 2
  %880 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn909, align 8
  %call910 = call zeroext i1 %880(%class.CAmbisonicSpeaker* %arrayidx904, i32 %876, i1 zeroext %tobool907, i32 0)
  %m_pAmbSpeakers911 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %881 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers911, align 8
  %arrayidx912 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %881, i64 8
  %882 = bitcast %class.CAmbisonicSpeaker* %arrayidx912 to %class.CAmbisonicSource*
  %883 = bitcast %struct.PolarPoint* %agg.tmp913 to i8*
  %884 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %883, i8* align 4 %884, i64 12, i1 false)
  %885 = bitcast { <2 x float>, float }* %agg.tmp913.coerce to i8*
  %886 = bitcast %struct.PolarPoint* %agg.tmp913 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %885, i8* align 4 %886, i64 12, i1 false)
  %887 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp913.coerce, i32 0, i32 0
  %888 = load <2 x float>, <2 x float>* %887, align 4
  %889 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp913.coerce, i32 0, i32 1
  %890 = load float, float* %889, align 4
  %891 = bitcast %class.CAmbisonicSource* %882 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable914 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %891, align 8
  %vfn915 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable914, i64 5
  %892 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn915, align 8
  call void %892(%class.CAmbisonicSource* %882, <2 x float> %888, float %890)
  %call916 = call float @_Z16DegreesToRadiansf(float 0x405BB999A0000000)
  %fAzimuth917 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call916, float* %fAzimuth917, align 4
  %m_pAmbSpeakers918 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %893 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers918, align 8
  %arrayidx919 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %893, i64 9
  %894 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder920 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %894, i32 0, i32 1
  %895 = load i32, i32* %m_nOrder920, align 8
  %896 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D921 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %896, i32 0, i32 2
  %897 = load i8, i8* %m_b3D921, align 4
  %tobool922 = trunc i8 %897 to i1
  %898 = bitcast %class.CAmbisonicSpeaker* %arrayidx919 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable923 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %898, align 8
  %vfn924 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable923, i64 2
  %899 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn924, align 8
  %call925 = call zeroext i1 %899(%class.CAmbisonicSpeaker* %arrayidx919, i32 %895, i1 zeroext %tobool922, i32 0)
  %m_pAmbSpeakers926 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %900 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers926, align 8
  %arrayidx927 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %900, i64 9
  %901 = bitcast %class.CAmbisonicSpeaker* %arrayidx927 to %class.CAmbisonicSource*
  %902 = bitcast %struct.PolarPoint* %agg.tmp928 to i8*
  %903 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %902, i8* align 4 %903, i64 12, i1 false)
  %904 = bitcast { <2 x float>, float }* %agg.tmp928.coerce to i8*
  %905 = bitcast %struct.PolarPoint* %agg.tmp928 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %904, i8* align 4 %905, i64 12, i1 false)
  %906 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp928.coerce, i32 0, i32 0
  %907 = load <2 x float>, <2 x float>* %906, align 4
  %908 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp928.coerce, i32 0, i32 1
  %909 = load float, float* %908, align 4
  %910 = bitcast %class.CAmbisonicSource* %901 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable929 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %910, align 8
  %vfn930 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable929, i64 5
  %911 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn930, align 8
  call void %911(%class.CAmbisonicSource* %901, <2 x float> %907, float %909)
  %call931 = call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %fAzimuth932 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call931, float* %fAzimuth932, align 4
  %m_pAmbSpeakers933 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %912 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers933, align 8
  %arrayidx934 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %912, i64 10
  %913 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder935 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %913, i32 0, i32 1
  %914 = load i32, i32* %m_nOrder935, align 8
  %915 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D936 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %915, i32 0, i32 2
  %916 = load i8, i8* %m_b3D936, align 4
  %tobool937 = trunc i8 %916 to i1
  %917 = bitcast %class.CAmbisonicSpeaker* %arrayidx934 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable938 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %917, align 8
  %vfn939 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable938, i64 2
  %918 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn939, align 8
  %call940 = call zeroext i1 %918(%class.CAmbisonicSpeaker* %arrayidx934, i32 %914, i1 zeroext %tobool937, i32 0)
  %m_pAmbSpeakers941 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %919 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers941, align 8
  %arrayidx942 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %919, i64 10
  %920 = bitcast %class.CAmbisonicSpeaker* %arrayidx942 to %class.CAmbisonicSource*
  %921 = bitcast %struct.PolarPoint* %agg.tmp943 to i8*
  %922 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %921, i8* align 4 %922, i64 12, i1 false)
  %923 = bitcast { <2 x float>, float }* %agg.tmp943.coerce to i8*
  %924 = bitcast %struct.PolarPoint* %agg.tmp943 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %923, i8* align 4 %924, i64 12, i1 false)
  %925 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp943.coerce, i32 0, i32 0
  %926 = load <2 x float>, <2 x float>* %925, align 4
  %927 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp943.coerce, i32 0, i32 1
  %928 = load float, float* %927, align 4
  %929 = bitcast %class.CAmbisonicSource* %920 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable944 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %929, align 8
  %vfn945 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable944, i64 5
  %930 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn945, align 8
  call void %930(%class.CAmbisonicSource* %920, <2 x float> %926, float %928)
  %call946 = call float @_Z16DegreesToRadiansf(float 0xC05BB999A0000000)
  %fAzimuth947 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call946, float* %fAzimuth947, align 4
  %m_pAmbSpeakers948 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %931 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers948, align 8
  %arrayidx949 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %931, i64 11
  %932 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder950 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %932, i32 0, i32 1
  %933 = load i32, i32* %m_nOrder950, align 8
  %934 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D951 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %934, i32 0, i32 2
  %935 = load i8, i8* %m_b3D951, align 4
  %tobool952 = trunc i8 %935 to i1
  %936 = bitcast %class.CAmbisonicSpeaker* %arrayidx949 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable953 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %936, align 8
  %vfn954 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable953, i64 2
  %937 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn954, align 8
  %call955 = call zeroext i1 %937(%class.CAmbisonicSpeaker* %arrayidx949, i32 %933, i1 zeroext %tobool952, i32 0)
  %m_pAmbSpeakers956 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %938 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers956, align 8
  %arrayidx957 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %938, i64 11
  %939 = bitcast %class.CAmbisonicSpeaker* %arrayidx957 to %class.CAmbisonicSource*
  %940 = bitcast %struct.PolarPoint* %agg.tmp958 to i8*
  %941 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %940, i8* align 4 %941, i64 12, i1 false)
  %942 = bitcast { <2 x float>, float }* %agg.tmp958.coerce to i8*
  %943 = bitcast %struct.PolarPoint* %agg.tmp958 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %942, i8* align 4 %943, i64 12, i1 false)
  %944 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp958.coerce, i32 0, i32 0
  %945 = load <2 x float>, <2 x float>* %944, align 4
  %946 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp958.coerce, i32 0, i32 1
  %947 = load float, float* %946, align 4
  %948 = bitcast %class.CAmbisonicSource* %939 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable959 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %948, align 8
  %vfn960 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable959, i64 5
  %949 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn960, align 8
  call void %949(%class.CAmbisonicSource* %939, <2 x float> %945, float %947)
  %call961 = call float @_Z16DegreesToRadiansf(float 0x4034E66660000000)
  %fElevation962 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call961, float* %fElevation962, align 4
  %call963 = call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %fAzimuth964 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call963, float* %fAzimuth964, align 4
  %m_pAmbSpeakers965 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %950 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers965, align 8
  %arrayidx966 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %950, i64 12
  %951 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder967 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %951, i32 0, i32 1
  %952 = load i32, i32* %m_nOrder967, align 8
  %953 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D968 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %953, i32 0, i32 2
  %954 = load i8, i8* %m_b3D968, align 4
  %tobool969 = trunc i8 %954 to i1
  %955 = bitcast %class.CAmbisonicSpeaker* %arrayidx966 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable970 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %955, align 8
  %vfn971 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable970, i64 2
  %956 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn971, align 8
  %call972 = call zeroext i1 %956(%class.CAmbisonicSpeaker* %arrayidx966, i32 %952, i1 zeroext %tobool969, i32 0)
  %m_pAmbSpeakers973 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %957 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers973, align 8
  %arrayidx974 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %957, i64 12
  %958 = bitcast %class.CAmbisonicSpeaker* %arrayidx974 to %class.CAmbisonicSource*
  %959 = bitcast %struct.PolarPoint* %agg.tmp975 to i8*
  %960 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %959, i8* align 4 %960, i64 12, i1 false)
  %961 = bitcast { <2 x float>, float }* %agg.tmp975.coerce to i8*
  %962 = bitcast %struct.PolarPoint* %agg.tmp975 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %961, i8* align 4 %962, i64 12, i1 false)
  %963 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp975.coerce, i32 0, i32 0
  %964 = load <2 x float>, <2 x float>* %963, align 4
  %965 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp975.coerce, i32 0, i32 1
  %966 = load float, float* %965, align 4
  %967 = bitcast %class.CAmbisonicSource* %958 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable976 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %967, align 8
  %vfn977 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable976, i64 5
  %968 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn977, align 8
  call void %968(%class.CAmbisonicSource* %958, <2 x float> %964, float %966)
  %call978 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fAzimuth979 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call978, float* %fAzimuth979, align 4
  %m_pAmbSpeakers980 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %969 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers980, align 8
  %arrayidx981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %969, i64 13
  %970 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder982 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %970, i32 0, i32 1
  %971 = load i32, i32* %m_nOrder982, align 8
  %972 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D983 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %972, i32 0, i32 2
  %973 = load i8, i8* %m_b3D983, align 4
  %tobool984 = trunc i8 %973 to i1
  %974 = bitcast %class.CAmbisonicSpeaker* %arrayidx981 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable985 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %974, align 8
  %vfn986 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable985, i64 2
  %975 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn986, align 8
  %call987 = call zeroext i1 %975(%class.CAmbisonicSpeaker* %arrayidx981, i32 %971, i1 zeroext %tobool984, i32 0)
  %m_pAmbSpeakers988 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %976 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers988, align 8
  %arrayidx989 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %976, i64 13
  %977 = bitcast %class.CAmbisonicSpeaker* %arrayidx989 to %class.CAmbisonicSource*
  %978 = bitcast %struct.PolarPoint* %agg.tmp990 to i8*
  %979 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %978, i8* align 4 %979, i64 12, i1 false)
  %980 = bitcast { <2 x float>, float }* %agg.tmp990.coerce to i8*
  %981 = bitcast %struct.PolarPoint* %agg.tmp990 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %980, i8* align 4 %981, i64 12, i1 false)
  %982 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp990.coerce, i32 0, i32 0
  %983 = load <2 x float>, <2 x float>* %982, align 4
  %984 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp990.coerce, i32 0, i32 1
  %985 = load float, float* %984, align 4
  %986 = bitcast %class.CAmbisonicSource* %977 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable991 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %986, align 8
  %vfn992 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable991, i64 5
  %987 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn992, align 8
  call void %987(%class.CAmbisonicSource* %977, <2 x float> %983, float %985)
  %call993 = call float @_Z16DegreesToRadiansf(float 0x4041A66660000000)
  %fElevation994 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call993, float* %fElevation994, align 4
  %call995 = call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %fAzimuth996 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call995, float* %fAzimuth996, align 4
  %m_pAmbSpeakers997 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %988 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers997, align 8
  %arrayidx998 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %988, i64 14
  %989 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder999 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %989, i32 0, i32 1
  %990 = load i32, i32* %m_nOrder999, align 8
  %991 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1000 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %991, i32 0, i32 2
  %992 = load i8, i8* %m_b3D1000, align 4
  %tobool1001 = trunc i8 %992 to i1
  %993 = bitcast %class.CAmbisonicSpeaker* %arrayidx998 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1002 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %993, align 8
  %vfn1003 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1002, i64 2
  %994 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1003, align 8
  %call1004 = call zeroext i1 %994(%class.CAmbisonicSpeaker* %arrayidx998, i32 %990, i1 zeroext %tobool1001, i32 0)
  %m_pAmbSpeakers1005 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %995 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1005, align 8
  %arrayidx1006 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %995, i64 14
  %996 = bitcast %class.CAmbisonicSpeaker* %arrayidx1006 to %class.CAmbisonicSource*
  %997 = bitcast %struct.PolarPoint* %agg.tmp1007 to i8*
  %998 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %997, i8* align 4 %998, i64 12, i1 false)
  %999 = bitcast { <2 x float>, float }* %agg.tmp1007.coerce to i8*
  %1000 = bitcast %struct.PolarPoint* %agg.tmp1007 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %999, i8* align 4 %1000, i64 12, i1 false)
  %1001 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1007.coerce, i32 0, i32 0
  %1002 = load <2 x float>, <2 x float>* %1001, align 4
  %1003 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1007.coerce, i32 0, i32 1
  %1004 = load float, float* %1003, align 4
  %1005 = bitcast %class.CAmbisonicSource* %996 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1008 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1005, align 8
  %vfn1009 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1008, i64 5
  %1006 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1009, align 8
  call void %1006(%class.CAmbisonicSource* %996, <2 x float> %1002, float %1004)
  %call1010 = call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %fAzimuth1011 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1010, float* %fAzimuth1011, align 4
  %m_pAmbSpeakers1012 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1007 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1012, align 8
  %arrayidx1013 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1007, i64 15
  %1008 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1014 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1008, i32 0, i32 1
  %1009 = load i32, i32* %m_nOrder1014, align 8
  %1010 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1015 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1010, i32 0, i32 2
  %1011 = load i8, i8* %m_b3D1015, align 4
  %tobool1016 = trunc i8 %1011 to i1
  %1012 = bitcast %class.CAmbisonicSpeaker* %arrayidx1013 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1017 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1012, align 8
  %vfn1018 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1017, i64 2
  %1013 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1018, align 8
  %call1019 = call zeroext i1 %1013(%class.CAmbisonicSpeaker* %arrayidx1013, i32 %1009, i1 zeroext %tobool1016, i32 0)
  %m_pAmbSpeakers1020 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1014 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1020, align 8
  %arrayidx1021 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1014, i64 15
  %1015 = bitcast %class.CAmbisonicSpeaker* %arrayidx1021 to %class.CAmbisonicSource*
  %1016 = bitcast %struct.PolarPoint* %agg.tmp1022 to i8*
  %1017 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1016, i8* align 4 %1017, i64 12, i1 false)
  %1018 = bitcast { <2 x float>, float }* %agg.tmp1022.coerce to i8*
  %1019 = bitcast %struct.PolarPoint* %agg.tmp1022 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1018, i8* align 4 %1019, i64 12, i1 false)
  %1020 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1022.coerce, i32 0, i32 0
  %1021 = load <2 x float>, <2 x float>* %1020, align 4
  %1022 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1022.coerce, i32 0, i32 1
  %1023 = load float, float* %1022, align 4
  %1024 = bitcast %class.CAmbisonicSource* %1015 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1023 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1024, align 8
  %vfn1024 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1023, i64 5
  %1025 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1024, align 8
  call void %1025(%class.CAmbisonicSource* %1015, <2 x float> %1021, float %1023)
  %call1025 = call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %fAzimuth1026 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1025, float* %fAzimuth1026, align 4
  %m_pAmbSpeakers1027 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1026 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1027, align 8
  %arrayidx1028 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1026, i64 16
  %1027 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1029 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1027, i32 0, i32 1
  %1028 = load i32, i32* %m_nOrder1029, align 8
  %1029 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1030 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1029, i32 0, i32 2
  %1030 = load i8, i8* %m_b3D1030, align 4
  %tobool1031 = trunc i8 %1030 to i1
  %1031 = bitcast %class.CAmbisonicSpeaker* %arrayidx1028 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1032 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1031, align 8
  %vfn1033 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1032, i64 2
  %1032 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1033, align 8
  %call1034 = call zeroext i1 %1032(%class.CAmbisonicSpeaker* %arrayidx1028, i32 %1028, i1 zeroext %tobool1031, i32 0)
  %m_pAmbSpeakers1035 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1033 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1035, align 8
  %arrayidx1036 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1033, i64 16
  %1034 = bitcast %class.CAmbisonicSpeaker* %arrayidx1036 to %class.CAmbisonicSource*
  %1035 = bitcast %struct.PolarPoint* %agg.tmp1037 to i8*
  %1036 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1035, i8* align 4 %1036, i64 12, i1 false)
  %1037 = bitcast { <2 x float>, float }* %agg.tmp1037.coerce to i8*
  %1038 = bitcast %struct.PolarPoint* %agg.tmp1037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1037, i8* align 4 %1038, i64 12, i1 false)
  %1039 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1037.coerce, i32 0, i32 0
  %1040 = load <2 x float>, <2 x float>* %1039, align 4
  %1041 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1037.coerce, i32 0, i32 1
  %1042 = load float, float* %1041, align 4
  %1043 = bitcast %class.CAmbisonicSource* %1034 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1038 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1043, align 8
  %vfn1039 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1038, i64 5
  %1044 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1039, align 8
  call void %1044(%class.CAmbisonicSource* %1034, <2 x float> %1040, float %1042)
  %call1040 = call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %fAzimuth1041 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1040, float* %fAzimuth1041, align 4
  %m_pAmbSpeakers1042 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1045 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1042, align 8
  %arrayidx1043 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1045, i64 17
  %1046 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1044 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1046, i32 0, i32 1
  %1047 = load i32, i32* %m_nOrder1044, align 8
  %1048 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1045 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1048, i32 0, i32 2
  %1049 = load i8, i8* %m_b3D1045, align 4
  %tobool1046 = trunc i8 %1049 to i1
  %1050 = bitcast %class.CAmbisonicSpeaker* %arrayidx1043 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1047 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1050, align 8
  %vfn1048 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1047, i64 2
  %1051 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1048, align 8
  %call1049 = call zeroext i1 %1051(%class.CAmbisonicSpeaker* %arrayidx1043, i32 %1047, i1 zeroext %tobool1046, i32 0)
  %m_pAmbSpeakers1050 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1052 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1050, align 8
  %arrayidx1051 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1052, i64 17
  %1053 = bitcast %class.CAmbisonicSpeaker* %arrayidx1051 to %class.CAmbisonicSource*
  %1054 = bitcast %struct.PolarPoint* %agg.tmp1052 to i8*
  %1055 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1054, i8* align 4 %1055, i64 12, i1 false)
  %1056 = bitcast { <2 x float>, float }* %agg.tmp1052.coerce to i8*
  %1057 = bitcast %struct.PolarPoint* %agg.tmp1052 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1056, i8* align 4 %1057, i64 12, i1 false)
  %1058 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1052.coerce, i32 0, i32 0
  %1059 = load <2 x float>, <2 x float>* %1058, align 4
  %1060 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1052.coerce, i32 0, i32 1
  %1061 = load float, float* %1060, align 4
  %1062 = bitcast %class.CAmbisonicSource* %1053 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1053 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1062, align 8
  %vfn1054 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1053, i64 5
  %1063 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1054, align 8
  call void %1063(%class.CAmbisonicSource* %1053, <2 x float> %1059, float %1061)
  %call1055 = call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %fElevation1056 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call1055, float* %fElevation1056, align 4
  %call1057 = call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %fAzimuth1058 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1057, float* %fAzimuth1058, align 4
  %m_pAmbSpeakers1059 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1064 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1059, align 8
  %arrayidx1060 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1064, i64 18
  %1065 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1061 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1065, i32 0, i32 1
  %1066 = load i32, i32* %m_nOrder1061, align 8
  %1067 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1062 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1067, i32 0, i32 2
  %1068 = load i8, i8* %m_b3D1062, align 4
  %tobool1063 = trunc i8 %1068 to i1
  %1069 = bitcast %class.CAmbisonicSpeaker* %arrayidx1060 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1064 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1069, align 8
  %vfn1065 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1064, i64 2
  %1070 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1065, align 8
  %call1066 = call zeroext i1 %1070(%class.CAmbisonicSpeaker* %arrayidx1060, i32 %1066, i1 zeroext %tobool1063, i32 0)
  %m_pAmbSpeakers1067 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1071 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1067, align 8
  %arrayidx1068 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1071, i64 18
  %1072 = bitcast %class.CAmbisonicSpeaker* %arrayidx1068 to %class.CAmbisonicSource*
  %1073 = bitcast %struct.PolarPoint* %agg.tmp1069 to i8*
  %1074 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1073, i8* align 4 %1074, i64 12, i1 false)
  %1075 = bitcast { <2 x float>, float }* %agg.tmp1069.coerce to i8*
  %1076 = bitcast %struct.PolarPoint* %agg.tmp1069 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1075, i8* align 4 %1076, i64 12, i1 false)
  %1077 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1069.coerce, i32 0, i32 0
  %1078 = load <2 x float>, <2 x float>* %1077, align 4
  %1079 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1069.coerce, i32 0, i32 1
  %1080 = load float, float* %1079, align 4
  %1081 = bitcast %class.CAmbisonicSource* %1072 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1070 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1081, align 8
  %vfn1071 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1070, i64 5
  %1082 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1071, align 8
  call void %1082(%class.CAmbisonicSource* %1072, <2 x float> %1078, float %1080)
  %call1072 = call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %fAzimuth1073 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1072, float* %fAzimuth1073, align 4
  %m_pAmbSpeakers1074 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1083 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1074, align 8
  %arrayidx1075 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1083, i64 19
  %1084 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1076 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1084, i32 0, i32 1
  %1085 = load i32, i32* %m_nOrder1076, align 8
  %1086 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1077 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1086, i32 0, i32 2
  %1087 = load i8, i8* %m_b3D1077, align 4
  %tobool1078 = trunc i8 %1087 to i1
  %1088 = bitcast %class.CAmbisonicSpeaker* %arrayidx1075 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1079 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1088, align 8
  %vfn1080 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1079, i64 2
  %1089 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1080, align 8
  %call1081 = call zeroext i1 %1089(%class.CAmbisonicSpeaker* %arrayidx1075, i32 %1085, i1 zeroext %tobool1078, i32 0)
  %m_pAmbSpeakers1082 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1090 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1082, align 8
  %arrayidx1083 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1090, i64 19
  %1091 = bitcast %class.CAmbisonicSpeaker* %arrayidx1083 to %class.CAmbisonicSource*
  %1092 = bitcast %struct.PolarPoint* %agg.tmp1084 to i8*
  %1093 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1092, i8* align 4 %1093, i64 12, i1 false)
  %1094 = bitcast { <2 x float>, float }* %agg.tmp1084.coerce to i8*
  %1095 = bitcast %struct.PolarPoint* %agg.tmp1084 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1094, i8* align 4 %1095, i64 12, i1 false)
  %1096 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1084.coerce, i32 0, i32 0
  %1097 = load <2 x float>, <2 x float>* %1096, align 4
  %1098 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1084.coerce, i32 0, i32 1
  %1099 = load float, float* %1098, align 4
  %1100 = bitcast %class.CAmbisonicSource* %1091 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1085 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1100, align 8
  %vfn1086 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1085, i64 5
  %1101 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1086, align 8
  call void %1101(%class.CAmbisonicSource* %1091, <2 x float> %1097, float %1099)
  br label %sw.epilog

lpad761:                                          ; preds = %arrayctor.loop759
  %1102 = landingpad { i8*, i32 }
          cleanup
  %1103 = extractvalue { i8*, i32 } %1102, 0
  store i8* %1103, i8** %exn.slot, align 8
  %1104 = extractvalue { i8*, i32 } %1102, 1
  store i32 %1104, i32* %ehselector.slot, align 4
  %arraydestroy.isempty763 = icmp eq %class.CAmbisonicSpeaker* %721, %arrayctor.cur760
  br i1 %arraydestroy.isempty763, label %arraydestroy.done768, label %arraydestroy.body764

arraydestroy.body764:                             ; preds = %arraydestroy.body764, %lpad761
  %arraydestroy.elementPast765 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur760, %lpad761 ], [ %arraydestroy.element766, %arraydestroy.body764 ]
  %arraydestroy.element766 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast765, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element766) #3
  %arraydestroy.done767 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element766, %721
  br i1 %arraydestroy.done767, label %arraydestroy.done768, label %arraydestroy.body764

arraydestroy.done768:                             ; preds = %arraydestroy.body764, %lpad761
  call void @_ZdaPv(i8* %call755) #19
  br label %eh.resume

sw.bb1087:                                        ; preds = %if.end
  %m_nSpeakers1088 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 8, i32* %m_nSpeakers1088, align 4
  %m_nSpeakers1089 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1105 = load i32, i32* %m_nSpeakers1089, align 4
  %conv1090 = zext i32 %1105 to i64
  %1106 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv1090, i64 88)
  %1107 = extractvalue { i64, i1 } %1106, 1
  %1108 = extractvalue { i64, i1 } %1106, 0
  %1109 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1108, i64 8)
  %1110 = extractvalue { i64, i1 } %1109, 1
  %1111 = or i1 %1107, %1110
  %1112 = extractvalue { i64, i1 } %1109, 0
  %1113 = select i1 %1111, i64 -1, i64 %1112
  %call1091 = call i8* @_Znam(i64 %1113) #18
  %1114 = bitcast i8* %call1091 to i64*
  store i64 %conv1090, i64* %1114, align 16
  %1115 = getelementptr inbounds i8, i8* %call1091, i64 8
  %1116 = bitcast i8* %1115 to %class.CAmbisonicSpeaker*
  %isempty1092 = icmp eq i64 %conv1090, 0
  br i1 %isempty1092, label %arrayctor.cont1107, label %new.ctorloop1093

new.ctorloop1093:                                 ; preds = %sw.bb1087
  %arrayctor.end1094 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1116, i64 %conv1090
  br label %arrayctor.loop1095

arrayctor.loop1095:                               ; preds = %invoke.cont1098, %new.ctorloop1093
  %arrayctor.cur1096 = phi %class.CAmbisonicSpeaker* [ %1116, %new.ctorloop1093 ], [ %arrayctor.next1105, %invoke.cont1098 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur1096)
          to label %invoke.cont1098 unwind label %lpad1097

invoke.cont1098:                                  ; preds = %arrayctor.loop1095
  %arrayctor.next1105 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur1096, i64 1
  %arrayctor.done1106 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next1105, %arrayctor.end1094
  br i1 %arrayctor.done1106, label %arrayctor.cont1107, label %arrayctor.loop1095

arrayctor.cont1107:                               ; preds = %sw.bb1087, %invoke.cont1098
  %m_pAmbSpeakers1108 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %1116, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1108, align 8
  %call1109 = call float @_Z16DegreesToRadiansf(float 0x40419999A0000000)
  %fElevation1110 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call1109, float* %fElevation1110, align 4
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond1111

for.cond1111:                                     ; preds = %for.inc1141, %arrayctor.cont1107
  %1117 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers1112 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1118 = load i32, i32* %m_nSpeakers1112, align 4
  %div1113 = udiv i32 %1118, 2
  %cmp1114 = icmp ult i32 %1117, %div1113
  br i1 %cmp1114, label %for.body1115, label %for.end1143

for.body1115:                                     ; preds = %for.cond1111
  %1119 = load i32, i32* %niSpeaker, align 4
  %conv1116 = uitofp i32 %1119 to float
  %mul1117 = fmul float %conv1116, 3.600000e+02
  %m_nSpeakers1118 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1120 = load i32, i32* %m_nSpeakers1118, align 4
  %div1119 = udiv i32 %1120, 2
  %conv1120 = uitofp i32 %div1119 to float
  %div1121 = fdiv float %mul1117, %conv1120
  %add1122 = fadd float %div1121, 4.500000e+01
  %call1123 = call float @_Z16DegreesToRadiansf(float %add1122)
  %sub1124 = fsub float -0.000000e+00, %call1123
  %fAzimuth1125 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub1124, float* %fAzimuth1125, align 4
  %m_pAmbSpeakers1126 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1121 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1126, align 8
  %1122 = load i32, i32* %niSpeaker, align 4
  %idxprom1127 = zext i32 %1122 to i64
  %arrayidx1128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1121, i64 %idxprom1127
  %1123 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1129 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1123, i32 0, i32 1
  %1124 = load i32, i32* %m_nOrder1129, align 8
  %1125 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1130 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1125, i32 0, i32 2
  %1126 = load i8, i8* %m_b3D1130, align 4
  %tobool1131 = trunc i8 %1126 to i1
  %1127 = bitcast %class.CAmbisonicSpeaker* %arrayidx1128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1127, align 8
  %vfn1133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1132, i64 2
  %1128 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1133, align 8
  %call1134 = call zeroext i1 %1128(%class.CAmbisonicSpeaker* %arrayidx1128, i32 %1124, i1 zeroext %tobool1131, i32 0)
  %m_pAmbSpeakers1135 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1129 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1135, align 8
  %1130 = load i32, i32* %niSpeaker, align 4
  %idxprom1136 = zext i32 %1130 to i64
  %arrayidx1137 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1129, i64 %idxprom1136
  %1131 = bitcast %class.CAmbisonicSpeaker* %arrayidx1137 to %class.CAmbisonicSource*
  %1132 = bitcast %struct.PolarPoint* %agg.tmp1138 to i8*
  %1133 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1132, i8* align 4 %1133, i64 12, i1 false)
  %1134 = bitcast { <2 x float>, float }* %agg.tmp1138.coerce to i8*
  %1135 = bitcast %struct.PolarPoint* %agg.tmp1138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1134, i8* align 4 %1135, i64 12, i1 false)
  %1136 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1138.coerce, i32 0, i32 0
  %1137 = load <2 x float>, <2 x float>* %1136, align 4
  %1138 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1138.coerce, i32 0, i32 1
  %1139 = load float, float* %1138, align 4
  %1140 = bitcast %class.CAmbisonicSource* %1131 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1139 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1140, align 8
  %vfn1140 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1139, i64 5
  %1141 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1140, align 8
  call void %1141(%class.CAmbisonicSource* %1131, <2 x float> %1137, float %1139)
  br label %for.inc1141

for.inc1141:                                      ; preds = %for.body1115
  %1142 = load i32, i32* %niSpeaker, align 4
  %inc1142 = add i32 %1142, 1
  store i32 %inc1142, i32* %niSpeaker, align 4
  br label %for.cond1111

lpad1097:                                         ; preds = %arrayctor.loop1095
  %1143 = landingpad { i8*, i32 }
          cleanup
  %1144 = extractvalue { i8*, i32 } %1143, 0
  store i8* %1144, i8** %exn.slot, align 8
  %1145 = extractvalue { i8*, i32 } %1143, 1
  store i32 %1145, i32* %ehselector.slot, align 4
  %arraydestroy.isempty1099 = icmp eq %class.CAmbisonicSpeaker* %1116, %arrayctor.cur1096
  br i1 %arraydestroy.isempty1099, label %arraydestroy.done1104, label %arraydestroy.body1100

arraydestroy.body1100:                            ; preds = %arraydestroy.body1100, %lpad1097
  %arraydestroy.elementPast1101 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur1096, %lpad1097 ], [ %arraydestroy.element1102, %arraydestroy.body1100 ]
  %arraydestroy.element1102 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast1101, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element1102) #3
  %arraydestroy.done1103 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element1102, %1116
  br i1 %arraydestroy.done1103, label %arraydestroy.done1104, label %arraydestroy.body1100

arraydestroy.done1104:                            ; preds = %arraydestroy.body1100, %lpad1097
  call void @_ZdaPv(i8* %call1091) #19
  br label %eh.resume

for.end1143:                                      ; preds = %for.cond1111
  %call1144 = call float @_Z16DegreesToRadiansf(float 0xC0419999A0000000)
  %fElevation1145 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float %call1144, float* %fElevation1145, align 4
  %m_nSpeakers1146 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1146 = load i32, i32* %m_nSpeakers1146, align 4
  %div1147 = udiv i32 %1146, 2
  store i32 %div1147, i32* %niSpeaker, align 4
  br label %for.cond1148

for.cond1148:                                     ; preds = %for.inc1178, %for.end1143
  %1147 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers1149 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1148 = load i32, i32* %m_nSpeakers1149, align 4
  %cmp1150 = icmp ult i32 %1147, %1148
  br i1 %cmp1150, label %for.body1151, label %for.end1180

for.body1151:                                     ; preds = %for.cond1148
  %1149 = load i32, i32* %niSpeaker, align 4
  %sub1152 = sub i32 %1149, 4
  %conv1153 = uitofp i32 %sub1152 to float
  %mul1154 = fmul float %conv1153, 3.600000e+02
  %m_nSpeakers1155 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1150 = load i32, i32* %m_nSpeakers1155, align 4
  %div1156 = udiv i32 %1150, 2
  %conv1157 = uitofp i32 %div1156 to float
  %div1158 = fdiv float %mul1154, %conv1157
  %add1159 = fadd float %div1158, 4.500000e+01
  %call1160 = call float @_Z16DegreesToRadiansf(float %add1159)
  %sub1161 = fsub float -0.000000e+00, %call1160
  %fAzimuth1162 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %sub1161, float* %fAzimuth1162, align 4
  %m_pAmbSpeakers1163 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1151 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1163, align 8
  %1152 = load i32, i32* %niSpeaker, align 4
  %idxprom1164 = zext i32 %1152 to i64
  %arrayidx1165 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1151, i64 %idxprom1164
  %1153 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1166 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1153, i32 0, i32 1
  %1154 = load i32, i32* %m_nOrder1166, align 8
  %1155 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1167 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1155, i32 0, i32 2
  %1156 = load i8, i8* %m_b3D1167, align 4
  %tobool1168 = trunc i8 %1156 to i1
  %1157 = bitcast %class.CAmbisonicSpeaker* %arrayidx1165 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1169 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1157, align 8
  %vfn1170 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1169, i64 2
  %1158 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1170, align 8
  %call1171 = call zeroext i1 %1158(%class.CAmbisonicSpeaker* %arrayidx1165, i32 %1154, i1 zeroext %tobool1168, i32 0)
  %m_pAmbSpeakers1172 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1159 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1172, align 8
  %1160 = load i32, i32* %niSpeaker, align 4
  %idxprom1173 = zext i32 %1160 to i64
  %arrayidx1174 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1159, i64 %idxprom1173
  %1161 = bitcast %class.CAmbisonicSpeaker* %arrayidx1174 to %class.CAmbisonicSource*
  %1162 = bitcast %struct.PolarPoint* %agg.tmp1175 to i8*
  %1163 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1162, i8* align 4 %1163, i64 12, i1 false)
  %1164 = bitcast { <2 x float>, float }* %agg.tmp1175.coerce to i8*
  %1165 = bitcast %struct.PolarPoint* %agg.tmp1175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1164, i8* align 4 %1165, i64 12, i1 false)
  %1166 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1175.coerce, i32 0, i32 0
  %1167 = load <2 x float>, <2 x float>* %1166, align 4
  %1168 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1175.coerce, i32 0, i32 1
  %1169 = load float, float* %1168, align 4
  %1170 = bitcast %class.CAmbisonicSource* %1161 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1176 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1170, align 8
  %vfn1177 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1176, i64 5
  %1171 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1177, align 8
  call void %1171(%class.CAmbisonicSource* %1161, <2 x float> %1167, float %1169)
  br label %for.inc1178

for.inc1178:                                      ; preds = %for.body1151
  %1172 = load i32, i32* %niSpeaker, align 4
  %inc1179 = add i32 %1172, 1
  store i32 %inc1179, i32* %niSpeaker, align 4
  br label %for.cond1148

for.end1180:                                      ; preds = %for.cond1148
  br label %sw.epilog

sw.bb1181:                                        ; preds = %if.end
  %m_nSpeakers1182 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 17, i32* %m_nSpeakers1182, align 4
  %m_nSpeakers1183 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1173 = load i32, i32* %m_nSpeakers1183, align 4
  %conv1184 = zext i32 %1173 to i64
  %1174 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv1184, i64 88)
  %1175 = extractvalue { i64, i1 } %1174, 1
  %1176 = extractvalue { i64, i1 } %1174, 0
  %1177 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1176, i64 8)
  %1178 = extractvalue { i64, i1 } %1177, 1
  %1179 = or i1 %1175, %1178
  %1180 = extractvalue { i64, i1 } %1177, 0
  %1181 = select i1 %1179, i64 -1, i64 %1180
  %call1185 = call i8* @_Znam(i64 %1181) #18
  %1182 = bitcast i8* %call1185 to i64*
  store i64 %conv1184, i64* %1182, align 16
  %1183 = getelementptr inbounds i8, i8* %call1185, i64 8
  %1184 = bitcast i8* %1183 to %class.CAmbisonicSpeaker*
  %isempty1186 = icmp eq i64 %conv1184, 0
  br i1 %isempty1186, label %arrayctor.cont1201, label %new.ctorloop1187

new.ctorloop1187:                                 ; preds = %sw.bb1181
  %arrayctor.end1188 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1184, i64 %conv1184
  br label %arrayctor.loop1189

arrayctor.loop1189:                               ; preds = %invoke.cont1192, %new.ctorloop1187
  %arrayctor.cur1190 = phi %class.CAmbisonicSpeaker* [ %1184, %new.ctorloop1187 ], [ %arrayctor.next1199, %invoke.cont1192 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur1190)
          to label %invoke.cont1192 unwind label %lpad1191

invoke.cont1192:                                  ; preds = %arrayctor.loop1189
  %arrayctor.next1199 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur1190, i64 1
  %arrayctor.done1200 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next1199, %arrayctor.end1188
  br i1 %arrayctor.done1200, label %arrayctor.cont1201, label %arrayctor.loop1189

arrayctor.cont1201:                               ; preds = %sw.bb1181, %invoke.cont1192
  %m_pAmbSpeakers1202 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %1184, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1202, align 8
  %fAzimuth1203 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float 0.000000e+00, float* %fAzimuth1203, align 4
  %fElevation1204 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 1
  store float 0.000000e+00, float* %fElevation1204, align 4
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 2
  store float 1.000000e+00, float* %fDistance, align 4
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond1205

for.cond1205:                                     ; preds = %for.inc1226, %arrayctor.cont1201
  %1185 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers1206 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1186 = load i32, i32* %m_nSpeakers1206, align 4
  %cmp1207 = icmp ult i32 %1185, %1186
  br i1 %cmp1207, label %for.body1208, label %for.end1228

for.body1208:                                     ; preds = %for.cond1205
  %call1209 = call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %fAzimuth1210 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %polPosition, i32 0, i32 0
  store float %call1209, float* %fAzimuth1210, align 4
  %m_pAmbSpeakers1211 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1187 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1211, align 8
  %1188 = load i32, i32* %niSpeaker, align 4
  %idxprom1212 = zext i32 %1188 to i64
  %arrayidx1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1187, i64 %idxprom1212
  %1189 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1214 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1189, i32 0, i32 1
  %1190 = load i32, i32* %m_nOrder1214, align 8
  %1191 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1215 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1191, i32 0, i32 2
  %1192 = load i8, i8* %m_b3D1215, align 4
  %tobool1216 = trunc i8 %1192 to i1
  %1193 = bitcast %class.CAmbisonicSpeaker* %arrayidx1213 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1217 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1193, align 8
  %vfn1218 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1217, i64 2
  %1194 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1218, align 8
  %call1219 = call zeroext i1 %1194(%class.CAmbisonicSpeaker* %arrayidx1213, i32 %1190, i1 zeroext %tobool1216, i32 0)
  %m_pAmbSpeakers1220 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1195 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1220, align 8
  %1196 = load i32, i32* %niSpeaker, align 4
  %idxprom1221 = zext i32 %1196 to i64
  %arrayidx1222 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1195, i64 %idxprom1221
  %1197 = bitcast %class.CAmbisonicSpeaker* %arrayidx1222 to %class.CAmbisonicSource*
  %1198 = bitcast %struct.PolarPoint* %agg.tmp1223 to i8*
  %1199 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1198, i8* align 4 %1199, i64 12, i1 false)
  %1200 = bitcast { <2 x float>, float }* %agg.tmp1223.coerce to i8*
  %1201 = bitcast %struct.PolarPoint* %agg.tmp1223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1200, i8* align 4 %1201, i64 12, i1 false)
  %1202 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1223.coerce, i32 0, i32 0
  %1203 = load <2 x float>, <2 x float>* %1202, align 4
  %1204 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1223.coerce, i32 0, i32 1
  %1205 = load float, float* %1204, align 4
  %1206 = bitcast %class.CAmbisonicSource* %1197 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1206, align 8
  %vfn1225 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1224, i64 5
  %1207 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1225, align 8
  call void %1207(%class.CAmbisonicSource* %1197, <2 x float> %1203, float %1205)
  br label %for.inc1226

for.inc1226:                                      ; preds = %for.body1208
  %1208 = load i32, i32* %niSpeaker, align 4
  %inc1227 = add i32 %1208, 1
  store i32 %inc1227, i32* %niSpeaker, align 4
  br label %for.cond1205

lpad1191:                                         ; preds = %arrayctor.loop1189
  %1209 = landingpad { i8*, i32 }
          cleanup
  %1210 = extractvalue { i8*, i32 } %1209, 0
  store i8* %1210, i8** %exn.slot, align 8
  %1211 = extractvalue { i8*, i32 } %1209, 1
  store i32 %1211, i32* %ehselector.slot, align 4
  %arraydestroy.isempty1193 = icmp eq %class.CAmbisonicSpeaker* %1184, %arrayctor.cur1190
  br i1 %arraydestroy.isempty1193, label %arraydestroy.done1198, label %arraydestroy.body1194

arraydestroy.body1194:                            ; preds = %arraydestroy.body1194, %lpad1191
  %arraydestroy.elementPast1195 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur1190, %lpad1191 ], [ %arraydestroy.element1196, %arraydestroy.body1194 ]
  %arraydestroy.element1196 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast1195, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element1196) #3
  %arraydestroy.done1197 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element1196, %1184
  br i1 %arraydestroy.done1197, label %arraydestroy.done1198, label %arraydestroy.body1194

arraydestroy.done1198:                            ; preds = %arraydestroy.body1194, %lpad1191
  call void @_ZdaPv(i8* %call1185) #19
  br label %eh.resume

for.end1228:                                      ; preds = %for.cond1205
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %m_nSpeakers1229 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  store i32 1, i32* %m_nSpeakers1229, align 4
  %m_nSpeakers1230 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1212 = load i32, i32* %m_nSpeakers1230, align 4
  %conv1231 = zext i32 %1212 to i64
  %1213 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv1231, i64 88)
  %1214 = extractvalue { i64, i1 } %1213, 1
  %1215 = extractvalue { i64, i1 } %1213, 0
  %1216 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %1215, i64 8)
  %1217 = extractvalue { i64, i1 } %1216, 1
  %1218 = or i1 %1214, %1217
  %1219 = extractvalue { i64, i1 } %1216, 0
  %1220 = select i1 %1218, i64 -1, i64 %1219
  %call1232 = call i8* @_Znam(i64 %1220) #18
  %1221 = bitcast i8* %call1232 to i64*
  store i64 %conv1231, i64* %1221, align 16
  %1222 = getelementptr inbounds i8, i8* %call1232, i64 8
  %1223 = bitcast i8* %1222 to %class.CAmbisonicSpeaker*
  %isempty1233 = icmp eq i64 %conv1231, 0
  br i1 %isempty1233, label %arrayctor.cont1248, label %new.ctorloop1234

new.ctorloop1234:                                 ; preds = %sw.default
  %arrayctor.end1235 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1223, i64 %conv1231
  br label %arrayctor.loop1236

arrayctor.loop1236:                               ; preds = %invoke.cont1239, %new.ctorloop1234
  %arrayctor.cur1237 = phi %class.CAmbisonicSpeaker* [ %1223, %new.ctorloop1234 ], [ %arrayctor.next1246, %invoke.cont1239 ]
  invoke void @_ZN17CAmbisonicSpeakerC1Ev(%class.CAmbisonicSpeaker* %arrayctor.cur1237)
          to label %invoke.cont1239 unwind label %lpad1238

invoke.cont1239:                                  ; preds = %arrayctor.loop1236
  %arrayctor.next1246 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur1237, i64 1
  %arrayctor.done1247 = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next1246, %arrayctor.end1235
  br i1 %arrayctor.done1247, label %arrayctor.cont1248, label %arrayctor.loop1236

arrayctor.cont1248:                               ; preds = %sw.default, %invoke.cont1239
  %m_pAmbSpeakers1249 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  store %class.CAmbisonicSpeaker* %1223, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1249, align 8
  %m_pAmbSpeakers1250 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1224 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1250, align 8
  %arrayidx1251 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1224, i64 0
  %1225 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_nOrder1252 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1225, i32 0, i32 1
  %1226 = load i32, i32* %m_nOrder1252, align 8
  %1227 = bitcast %class.CAmbisonicDecoder* %this1 to %class.CAmbisonicBase*
  %m_b3D1253 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %1227, i32 0, i32 2
  %1228 = load i8, i8* %m_b3D1253, align 4
  %tobool1254 = trunc i8 %1228 to i1
  %1229 = bitcast %class.CAmbisonicSpeaker* %arrayidx1251 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1255 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1229, align 8
  %vfn1256 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1255, i64 2
  %1230 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1256, align 8
  %call1257 = call zeroext i1 %1230(%class.CAmbisonicSpeaker* %arrayidx1251, i32 %1226, i1 zeroext %tobool1254, i32 0)
  %m_pAmbSpeakers1258 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1231 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1258, align 8
  %arrayidx1259 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1231, i64 0
  %1232 = bitcast %class.CAmbisonicSpeaker* %arrayidx1259 to %class.CAmbisonicSource*
  %1233 = bitcast %struct.PolarPoint* %agg.tmp1260 to i8*
  %1234 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1233, i8* align 4 %1234, i64 12, i1 false)
  %1235 = bitcast { <2 x float>, float }* %agg.tmp1260.coerce to i8*
  %1236 = bitcast %struct.PolarPoint* %agg.tmp1260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1235, i8* align 4 %1236, i64 12, i1 false)
  %1237 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1260.coerce, i32 0, i32 0
  %1238 = load <2 x float>, <2 x float>* %1237, align 4
  %1239 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp1260.coerce, i32 0, i32 1
  %1240 = load float, float* %1239, align 4
  %1241 = bitcast %class.CAmbisonicSource* %1232 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1261 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1241, align 8
  %vfn1262 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1261, i64 5
  %1242 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1262, align 8
  call void %1242(%class.CAmbisonicSource* %1232, <2 x float> %1238, float %1240)
  br label %sw.epilog

lpad1238:                                         ; preds = %arrayctor.loop1236
  %1243 = landingpad { i8*, i32 }
          cleanup
  %1244 = extractvalue { i8*, i32 } %1243, 0
  store i8* %1244, i8** %exn.slot, align 8
  %1245 = extractvalue { i8*, i32 } %1243, 1
  store i32 %1245, i32* %ehselector.slot, align 4
  %arraydestroy.isempty1240 = icmp eq %class.CAmbisonicSpeaker* %1223, %arrayctor.cur1237
  br i1 %arraydestroy.isempty1240, label %arraydestroy.done1245, label %arraydestroy.body1241

arraydestroy.body1241:                            ; preds = %arraydestroy.body1241, %lpad1238
  %arraydestroy.elementPast1242 = phi %class.CAmbisonicSpeaker* [ %arrayctor.cur1237, %lpad1238 ], [ %arraydestroy.element1243, %arraydestroy.body1241 ]
  %arraydestroy.element1243 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast1242, i64 -1
  call void @_ZN17CAmbisonicSpeakerD1Ev(%class.CAmbisonicSpeaker* %arraydestroy.element1243) #3
  %arraydestroy.done1244 = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element1243, %1223
  br i1 %arraydestroy.done1244, label %arraydestroy.done1245, label %arraydestroy.body1241

arraydestroy.done1245:                            ; preds = %arraydestroy.body1241, %lpad1238
  call void @_ZdaPv(i8* %call1232) #19
  br label %eh.resume

sw.epilog:                                        ; preds = %arrayctor.cont1248, %for.end1228, %for.end1180, %arrayctor.cont771, %for.end750, %for.end657, %for.end605, %for.end553, %for.end501, %for.end449, %for.end397, %arrayctor.cont272, %arrayctor.cont190, %arrayctor.cont123, %arrayctor.cont72, %arrayctor.cont38, %for.end
  %m_nSpeakers1263 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1246 = load i32, i32* %m_nSpeakers1263, align 4
  %conv1264 = uitofp i32 %1246 to float
  %call1265 = call float @sqrtf(float %conv1264) #3
  %div1266 = fdiv float 1.000000e+00, %call1265
  store float %div1266, float* %fSpeakerGain, align 4
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond1267

for.cond1267:                                     ; preds = %for.inc1276, %sw.epilog
  %1247 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers1268 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1248 = load i32, i32* %m_nSpeakers1268, align 4
  %cmp1269 = icmp ult i32 %1247, %1248
  br i1 %cmp1269, label %for.body1270, label %for.end1278

for.body1270:                                     ; preds = %for.cond1267
  %m_pAmbSpeakers1271 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %1249 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers1271, align 8
  %1250 = load i32, i32* %niSpeaker, align 4
  %idxprom1272 = zext i32 %1250 to i64
  %arrayidx1273 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1249, i64 %idxprom1272
  %1251 = bitcast %class.CAmbisonicSpeaker* %arrayidx1273 to %class.CAmbisonicSource*
  %1252 = load float, float* %fSpeakerGain, align 4
  %1253 = bitcast %class.CAmbisonicSource* %1251 to void (%class.CAmbisonicSource*, float)***
  %vtable1274 = load void (%class.CAmbisonicSource*, float)**, void (%class.CAmbisonicSource*, float)*** %1253, align 8
  %vfn1275 = getelementptr inbounds void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vtable1274, i64 12
  %1254 = load void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vfn1275, align 8
  call void %1254(%class.CAmbisonicSource* %1251, float %1252)
  br label %for.inc1276

for.inc1276:                                      ; preds = %for.body1270
  %1255 = load i32, i32* %niSpeaker, align 4
  %inc1277 = add i32 %1255, 1
  store i32 %inc1277, i32* %niSpeaker, align 4
  br label %for.cond1267

for.end1278:                                      ; preds = %for.cond1267
  ret void

eh.resume:                                        ; preds = %arraydestroy.done1245, %arraydestroy.done1198, %arraydestroy.done1104, %arraydestroy.done768, %arraydestroy.done675, %arraydestroy.done623, %arraydestroy.done571, %arraydestroy.done519, %arraydestroy.done467, %arraydestroy.done415, %arraydestroy.done366, %arraydestroy.done269, %arraydestroy.done187, %arraydestroy.done120, %arraydestroy.done69, %arraydestroy.done35, %arraydestroy.done12
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1279 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1279
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder5ResetEv(%class.CAmbisonicDecoder* %this) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %niSpeaker = alloca i32, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1 = load i32, i32* %m_nSpeakers, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %2 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %3 = load i32, i32* %niSpeaker, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %2, i64 %idxprom
  %4 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %5 = bitcast %class.CAmbisonicSource* %4 to void (%class.CAmbisonicSource*)***
  %vtable = load void (%class.CAmbisonicSource*)**, void (%class.CAmbisonicSource*)*** %5, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vtable, i64 3
  %6 = load void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vfn, align 8
  call void %6(%class.CAmbisonicSource* %4)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %niSpeaker, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %niSpeaker, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* %this) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %niSpeaker = alloca i32, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1 = load i32, i32* %m_nSpeakers, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %2 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %3 = load i32, i32* %niSpeaker, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %2, i64 %idxprom
  %4 = bitcast %class.CAmbisonicSpeaker* %arrayidx to void (%class.CAmbisonicSpeaker*)***
  %vtable = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %4, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn, align 8
  call void %5(%class.CAmbisonicSpeaker* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %niSpeaker, align 4
  %inc = add i32 %6, 1
  store i32 %inc, i32* %niSpeaker, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf(%class.CAmbisonicDecoder* %this, %class.CBFormat* %pBFSrc, i32 %nSamples, float** %ppfDst) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %pBFSrc.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %ppfDst.addr = alloca float**, align 8
  %niSpeaker = alloca i32, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store %class.CBFormat* %pBFSrc, %class.CBFormat** %pBFSrc.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  store float** %ppfDst, float*** %ppfDst.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %niSpeaker, align 4
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %1 = load i32, i32* %m_nSpeakers, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %2 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %3 = load i32, i32* %niSpeaker, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %2, i64 %idxprom
  %4 = load %class.CBFormat*, %class.CBFormat** %pBFSrc.addr, align 8
  %5 = load i32, i32* %nSamples.addr, align 4
  %6 = load float**, float*** %ppfDst.addr, align 8
  %7 = load i32, i32* %niSpeaker, align 4
  %idxprom2 = zext i32 %7 to i64
  %arrayidx3 = getelementptr inbounds float*, float** %6, i64 %idxprom2
  %8 = load float*, float** %arrayidx3, align 8
  call void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* %arrayidx, %class.CBFormat* %4, i32 %5, float* %8)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %niSpeaker, align 4
  %inc = add i32 %9, 1
  store i32 %inc, i32* %niSpeaker, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN17CAmbisonicDecoder15GetSpeakerSetUpEv(%class.CAmbisonicDecoder* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_nSpeakerSetUp, align 8
  ret i32 %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4
  ret i32 %0
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint(%class.CAmbisonicDecoder* %this, i32 %nSpeaker, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) #11 align 2 {
entry:
  %polPosition = alloca %struct.PolarPoint, align 4
  %coerce = alloca { <2 x float>, float }, align 4
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %agg.tmp = alloca %struct.PolarPoint, align 4
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  %0 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 0
  store <2 x float> %polPosition.coerce0, <2 x float>* %0, align 4
  %1 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %coerce, i32 0, i32 1
  store float %polPosition.coerce1, float* %1, align 4
  %2 = bitcast %struct.PolarPoint* %polPosition to i8*
  %3 = bitcast { <2 x float>, float }* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12, i1 false)
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %4 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %5 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %5 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %4, i64 %idxprom
  %6 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %7 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  %8 = bitcast %struct.PolarPoint* %polPosition to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 12, i1 false)
  %9 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*
  %10 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 12, i1 false)
  %11 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = bitcast %class.CAmbisonicSource* %6 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %15, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %16 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  call void %16(%class.CAmbisonicSource* %6, <2 x float> %12, float %14)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* %this, i32 %nSpeaker) #4 align 2 {
entry:
  %retval = alloca %struct.PolarPoint, align 4
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %tmp2 = alloca { <2 x float>, float }, align 8
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %1 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %3 = bitcast %class.CAmbisonicSource* %2 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %3, align 8
  %vfn = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable, i64 6
  %4 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn, align 8
  %call = call { <2 x float>, float } %4(%class.CAmbisonicSource* %2)
  store { <2 x float>, float } %call, { <2 x float>, float }* %tmp, align 8
  %5 = bitcast { <2 x float>, float }* %tmp to i8*
  %6 = bitcast %struct.PolarPoint* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %5, i64 12, i1 false)
  %7 = bitcast { <2 x float>, float }* %tmp2 to i8*
  %8 = bitcast %struct.PolarPoint* %retval to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 12, i1 false)
  %9 = load { <2 x float>, float }, { <2 x float>, float }* %tmp2, align 8
  ret { <2 x float>, float } %9
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder14SetOrderWeightEjjf(%class.CAmbisonicDecoder* %this, i32 %nSpeaker, i32 %nOrder, float %fWeight) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %nOrder.addr = alloca i32, align 4
  %fWeight.addr = alloca float, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  store i32 %nOrder, i32* %nOrder.addr, align 4
  store float %fWeight, float* %fWeight.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %1 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %3 = load i32, i32* %nOrder.addr, align 4
  %4 = load float, float* %fWeight.addr, align 4
  %5 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %5, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 7
  %6 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  call void %6(%class.CAmbisonicSource* %2, i32 %3, float %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local float @_ZN17CAmbisonicDecoder14GetOrderWeightEjj(%class.CAmbisonicDecoder* %this, i32 %nSpeaker, i32 %nOrder) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %nOrder.addr = alloca i32, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %1 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %3 = load i32, i32* %nOrder.addr, align 4
  %4 = bitcast %class.CAmbisonicSource* %2 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %4, align 8
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 10
  %5 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = call float %5(%class.CAmbisonicSource* %2, i32 %3)
  ret float %call
}

; Function Attrs: noinline optnone uwtable
define dso_local float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* %this, i32 %nSpeaker, i32 %nChannel) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %nChannel.addr = alloca i32, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  store i32 %nChannel, i32* %nChannel.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %1 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %3 = load i32, i32* %nChannel.addr, align 4
  %4 = bitcast %class.CAmbisonicSource* %2 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %4, align 8
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 11
  %5 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = call float %5(%class.CAmbisonicSource* %2, i32 %3)
  ret float %call
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN17CAmbisonicDecoder14SetCoefficientEjjf(%class.CAmbisonicDecoder* %this, i32 %nSpeaker, i32 %nChannel, float %fCoeff) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicDecoder*, align 8
  %nSpeaker.addr = alloca i32, align 4
  %nChannel.addr = alloca i32, align 4
  %fCoeff.addr = alloca float, align 4
  store %class.CAmbisonicDecoder* %this, %class.CAmbisonicDecoder** %this.addr, align 8
  store i32 %nSpeaker, i32* %nSpeaker.addr, align 4
  store i32 %nChannel, i32* %nChannel.addr, align 4
  store float %fCoeff, float* %fCoeff.addr, align 4
  %this1 = load %class.CAmbisonicDecoder*, %class.CAmbisonicDecoder** %this.addr, align 8
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this1, i32 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8
  %1 = load i32, i32* %nSpeaker.addr, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to %class.CAmbisonicSource*
  %3 = load i32, i32* %nChannel.addr, align 4
  %4 = load float, float* %fCoeff.addr, align 4
  %5 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %5, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 9
  %6 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  call void %6(%class.CAmbisonicSource* %2, i32 %3, float %4)
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

declare dso_local float @_Z16DegreesToRadiansf(float) #1

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #2

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN16CAmbisonicZoomerC2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CAmbisonicZoomer* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 1
  invoke void @_ZN17CAmbisonicDecoderC1Ev(%class.CAmbisonicDecoder* %m_AmbDecoderFront)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2Ev(%"class.std::unique_ptr.12"* %m_AmbEncoderFront) #3
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2Ev(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted) #3
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 4
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2Ev(%"class.std::unique_ptr.12"* %a_m) #3
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  store float 0.000000e+00, float* %m_fZoom, align 8
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  %5 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %5) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2Ev(%"class.std::unique_ptr.12"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  invoke void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2Ev(%"class.std::tuple.13"* %_M_t)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #4 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nMisc.addr = alloca i32, align 4
  %success = alloca i8, align 1
  %iOrder = alloca i32, align 4
  %iDegree = alloca i32, align 4
  %iChannel = alloca i32, align 4
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nMisc, i32* %nMisc.addr, align 4
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %1 = load i32, i32* %nOrder.addr, align 4
  %2 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %2 to i1
  %3 = load i32, i32* %nMisc.addr, align 4
  %call = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %0, i32 %1, i1 zeroext %tobool, i32 %3)
  %frombool2 = zext i1 %call to i8
  store i8 %frombool2, i8* %success, align 1
  %4 = load i8, i8* %success, align 1
  %tobool3 = trunc i8 %4 to i1
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 1
  %5 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %5, i32 0, i32 1
  %6 = load i32, i32* %m_nOrder, align 8
  %call4 = call zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %m_AmbDecoderFront, i32 %6, i1 zeroext true, i32 0, i32 1)
  %m_AmbDecoderFront5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 1
  call void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* %m_AmbDecoderFront5)
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 6
  store float 0.000000e+00, float* %m_fZoomRed, align 4
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %7 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %7, i32 0, i32 4
  %8 = load i32, i32* %m_nChannelCount, align 8
  %conv = zext i32 %8 to i64
  %9 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 4)
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 -1, i64 %11
  %call6 = call i8* @_Znam(i64 %12) #18
  %13 = bitcast i8* %call6 to float*
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf(%"class.std::unique_ptr.12"* %m_AmbEncoderFront, float* %13) #3
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  %14 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount7 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %14, i32 0, i32 4
  %15 = load i32, i32* %m_nChannelCount7, align 8
  %conv8 = zext i32 %15 to i64
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv8, i64 4)
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 -1, i64 %18
  %call9 = call i8* @_Znam(i64 %19) #18
  %20 = bitcast i8* %call9 to float*
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, float* %20) #3
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 4
  %21 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder10 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %21, i32 0, i32 1
  %22 = load i32, i32* %m_nOrder10, align 8
  %add = add i32 %22, 1
  %conv11 = zext i32 %add to i64
  %23 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv11, i64 4)
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = select i1 %24, i64 -1, i64 %25
  %call12 = call i8* @_Znam(i64 %26) #18
  %27 = bitcast i8* %call12 to float*
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf(%"class.std::unique_ptr.12"* %a_m, float* %27) #3
  store i32 0, i32* %iOrder, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %28 = load i32, i32* %iOrder, align 4
  %29 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder13 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %29, i32 0, i32 1
  %30 = load i32, i32* %m_nOrder13, align 8
  %add14 = add i32 %30, 1
  %cmp = icmp ult i32 %28, %add14
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %iOrder, align 4
  %mul = mul i32 2, %31
  %add15 = add i32 %mul, 1
  %conv16 = uitofp i32 %add15 to float
  %32 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder17 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %32, i32 0, i32 1
  %33 = load i32, i32* %m_nOrder17, align 8
  %call18 = call float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* %this1, i32 %33)
  %mul19 = fmul float %conv16, %call18
  %34 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder20 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %34, i32 0, i32 1
  %35 = load i32, i32* %m_nOrder20, align 8
  %add21 = add i32 %35, 1
  %call22 = call float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* %this1, i32 %add21)
  %mul23 = fmul float %mul19, %call22
  %36 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder24 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %36, i32 0, i32 1
  %37 = load i32, i32* %m_nOrder24, align 8
  %38 = load i32, i32* %iOrder, align 4
  %add25 = add i32 %37, %38
  %add26 = add i32 %add25, 1
  %call27 = call float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* %this1, i32 %add26)
  %39 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nOrder28 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %39, i32 0, i32 1
  %40 = load i32, i32* %m_nOrder28, align 8
  %41 = load i32, i32* %iOrder, align 4
  %sub = sub i32 %40, %41
  %call29 = call float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* %this1, i32 %sub)
  %mul30 = fmul float %call27, %call29
  %div = fdiv float %mul23, %mul30
  %a_m31 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 4
  %42 = load i32, i32* %iOrder, align 4
  %conv32 = zext i32 %42 to i64
  %call33 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %a_m31, i64 %conv32)
  store float %div, float* %call33, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %iOrder, align 4
  %inc = add i32 %43, 1
  store i32 %inc, i32* %iOrder, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %iDegree, align 4
  store i32 0, i32* %iChannel, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc64, %for.end
  %44 = load i32, i32* %iChannel, align 4
  %45 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount35 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %45, i32 0, i32 4
  %46 = load i32, i32* %m_nChannelCount35, align 8
  %cmp36 = icmp ult i32 %44, %46
  br i1 %cmp36, label %for.body37, label %for.end66

for.body37:                                       ; preds = %for.cond34
  %m_AmbDecoderFront38 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 1
  %47 = load i32, i32* %iChannel, align 4
  %call39 = call float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* %m_AmbDecoderFront38, i32 0, i32 %47)
  %m_AmbEncoderFront40 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %48 = load i32, i32* %iChannel, align 4
  %conv41 = zext i32 %48 to i64
  %call42 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront40, i64 %conv41)
  store float %call39, float* %call42, align 4
  %49 = load i32, i32* %iChannel, align 4
  %conv43 = uitofp i32 %49 to double
  %call44 = call double @sqrt(double %conv43) #3
  %50 = call double @llvm.floor.f64(double %call44)
  %conv45 = fptosi double %50 to i32
  store i32 %conv45, i32* %iDegree, align 4
  %m_AmbEncoderFront46 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %51 = load i32, i32* %iChannel, align 4
  %conv47 = zext i32 %51 to i64
  %call48 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront46, i64 %conv47)
  %52 = load float, float* %call48, align 4
  %a_m49 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 4
  %53 = load i32, i32* %iDegree, align 4
  %conv50 = zext i32 %53 to i64
  %call51 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %a_m49, i64 %conv50)
  %54 = load float, float* %call51, align 4
  %mul52 = fmul float %52, %54
  %m_AmbEncoderFront_weighted53 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  %55 = load i32, i32* %iChannel, align 4
  %conv54 = zext i32 %55 to i64
  %call55 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted53, i64 %conv54)
  store float %mul52, float* %call55, align 4
  %m_AmbEncoderFront56 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %56 = load i32, i32* %iChannel, align 4
  %conv57 = zext i32 %56 to i64
  %call58 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront56, i64 %conv57)
  %57 = load float, float* %call58, align 4
  %m_AmbEncoderFront_weighted59 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  %58 = load i32, i32* %iChannel, align 4
  %conv60 = zext i32 %58 to i64
  %call61 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted59, i64 %conv60)
  %59 = load float, float* %call61, align 4
  %mul62 = fmul float %57, %59
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 7
  %60 = load float, float* %m_AmbFrontMic, align 8
  %add63 = fadd float %60, %mul62
  store float %add63, float* %m_AmbFrontMic, align 8
  br label %for.inc64

for.inc64:                                        ; preds = %for.body37
  %61 = load i32, i32* %iChannel, align 4
  %inc65 = add i32 %61, 1
  store i32 %inc65, i32* %iChannel, align 4
  br label %for.cond34

for.end66:                                        ; preds = %for.cond34
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %for.end66, %if.then
  %62 = load i1, i1* %retval, align 1
  ret i1 %62
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf(%"class.std::unique_ptr.12"* %this, float* %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__p.addr = alloca float*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  store float* %__p, float** %__p.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %_M_t) #3
  call void @_ZSt4swapIPfEvRT_S2_(float** dereferenceable(8) %call, float** dereferenceable(8) %__p.addr) #3
  %0 = load float*, float** %__p.addr, align 8
  %cmp = icmp ne float* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE11get_deleterEv(%"class.std::unique_ptr.12"* %this1) #3
  %1 = load float*, float** %__p.addr, align 8
  invoke void @_ZNKSt14default_deleteIA_fEclEPf(%"struct.std::default_delete.17"* %call2, float* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* %this, i32 %M) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  %M.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  store i32 %M, i32* %M.addr, align 4
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  store i32 1, i32* %ret, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %M.addr, align 4
  %cmp = icmp ule i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %ret, align 4
  %mul = mul i32 %3, %2
  store i32 %mul, i32* %ret, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* %ret, align 4
  %conv = uitofp i32 %5 to float
  ret float %conv
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicZoomer5ResetEv(%class.CAmbisonicZoomer* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN16CAmbisonicZoomer7RefreshEv(%class.CAmbisonicZoomer* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %0 = load float, float* %m_fZoom, align 8
  %m_fZoom2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %1 = load float, float* %m_fZoom2, align 8
  %mul = fmul float %0, %1
  %sub = fsub float 1.000000e+00, %mul
  %call = call float @sqrtf(float %sub) #3
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 6
  store float %call, float* %m_fZoomRed, align 4
  %m_fZoom3 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %2 = load float, float* %m_fZoom3, align 8
  %sub4 = fsub float 1.000000e+00, %2
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 8
  store float %sub4, float* %m_fZoomBlend, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* %this, float %fZoom) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  %fZoom.addr = alloca float, align 4
  %ref.tmp = alloca float, align 4
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  store float %fZoom, float* %fZoom.addr, align 4
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  store float 0x3FEFAE1480000000, float* %ref.tmp, align 4
  %call = call dereferenceable(4) float* @_ZSt3minIfERKT_S2_S2_(float* dereferenceable(4) %fZoom.addr, float* dereferenceable(4) %ref.tmp)
  %0 = load float, float* %call, align 4
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  store float %0, float* %m_fZoom, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(4) float* @_ZSt3minIfERKT_S2_S2_(float* dereferenceable(4) %__a, float* dereferenceable(4) %__b) #5 comdat {
entry:
  %retval = alloca float*, align 8
  %__a.addr = alloca float*, align 8
  %__b.addr = alloca float*, align 8
  store float* %__a, float** %__a.addr, align 8
  store float* %__b, float** %__b.addr, align 8
  %0 = load float*, float** %__b.addr, align 8
  %1 = load float, float* %0, align 4
  %2 = load float*, float** %__a.addr, align 8
  %3 = load float, float* %2, align 4
  %cmp = fcmp olt float %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load float*, float** %__b.addr, align 8
  store float* %4, float** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load float*, float** %__a.addr, align 8
  store float* %5, float** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load float*, float** %retval, align 8
  ret float* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @_ZN16CAmbisonicZoomer7GetZoomEv(%class.CAmbisonicZoomer* %this) #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %0 = load float, float* %m_fZoom, align 8
  ret float %0
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  %pBFSrcDst.addr = alloca %class.CBFormat*, align 8
  %nSamples.addr = alloca i32, align 4
  %niSample = alloca i32, align 4
  %fMic = alloca float, align 4
  %iChannel = alloca i32, align 4
  %iChannel7 = alloca i32, align 4
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  store %class.CBFormat* %pBFSrcDst, %class.CBFormat** %pBFSrcDst.addr, align 8
  store i32 %nSamples, i32* %nSamples.addr, align 4
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %0 = load i32, i32* %niSample, align 4
  %1 = load i32, i32* %nSamples.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  store float 0.000000e+00, float* %fMic, align 4
  store i32 0, i32* %iChannel, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %iChannel, align 4
  %3 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %3, i32 0, i32 4
  %4 = load i32, i32* %m_nChannelCount, align 8
  %cmp3 = icmp ult i32 %2, %4
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  %5 = load i32, i32* %iChannel, align 4
  %conv = zext i32 %5 to i64
  %call = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, i64 %conv)
  %6 = load float, float* %call, align 4
  %7 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %7, i32 0, i32 4
  %8 = load i32, i32* %iChannel, align 4
  %conv5 = zext i32 %8 to i64
  %call6 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv5)
  %9 = load float*, float** %call6, align 8
  %10 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %10 to i64
  %arrayidx = getelementptr inbounds float, float* %9, i64 %idxprom
  %11 = load float, float* %arrayidx, align 4
  %mul = fmul float %6, %11
  %12 = load float, float* %fMic, align 4
  %add = fadd float %12, %mul
  store float %add, float* %fMic, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %13 = load i32, i32* %iChannel, align 4
  %inc = add i32 %13, 1
  store i32 %inc, i32* %iChannel, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  store i32 0, i32* %iChannel7, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc50, %for.end
  %14 = load i32, i32* %iChannel7, align 4
  %15 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount9 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %15, i32 0, i32 4
  %16 = load i32, i32* %m_nChannelCount9, align 8
  %cmp10 = icmp ult i32 %14, %16
  br i1 %cmp10, label %for.body11, label %for.end52

for.body11:                                       ; preds = %for.cond8
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %17 = load i32, i32* %iChannel7, align 4
  %conv12 = zext i32 %17 to i64
  %call13 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront, i64 %conv12)
  %18 = load float, float* %call13, align 4
  %call14 = call float @_ZSt3absf(float %18)
  %conv15 = fpext float %call14 to double
  %cmp16 = fcmp ogt double %conv15, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp16, label %if.then, label %if.else

if.then:                                          ; preds = %for.body11
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 8
  %19 = load float, float* %m_fZoomBlend, align 4
  %20 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels17 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %20, i32 0, i32 4
  %21 = load i32, i32* %iChannel7, align 4
  %conv18 = zext i32 %21 to i64
  %call19 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels17, i64 %conv18)
  %22 = load float*, float** %call19, align 8
  %23 = load i32, i32* %niSample, align 4
  %idxprom20 = zext i32 %23 to i64
  %arrayidx21 = getelementptr inbounds float, float* %22, i64 %idxprom20
  %24 = load float, float* %arrayidx21, align 4
  %mul22 = fmul float %19, %24
  %m_AmbEncoderFront23 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  %25 = load i32, i32* %iChannel7, align 4
  %conv24 = zext i32 %25 to i64
  %call25 = call dereferenceable(4) float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EEixEm(%"class.std::unique_ptr.12"* %m_AmbEncoderFront23, i64 %conv24)
  %26 = load float, float* %call25, align 4
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %27 = load float, float* %m_fZoom, align 8
  %mul26 = fmul float %26, %27
  %28 = load float, float* %fMic, align 4
  %mul27 = fmul float %mul26, %28
  %add28 = fadd float %mul22, %mul27
  %m_fZoomBlend29 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 8
  %29 = load float, float* %m_fZoomBlend29, align 4
  %m_fZoom30 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 5
  %30 = load float, float* %m_fZoom30, align 8
  %call31 = call float @_ZSt4fabsf(float %30)
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 7
  %31 = load float, float* %m_AmbFrontMic, align 8
  %mul32 = fmul float %call31, %31
  %add33 = fadd float %29, %mul32
  %div = fdiv float %add28, %add33
  %32 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels34 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %32, i32 0, i32 4
  %33 = load i32, i32* %iChannel7, align 4
  %conv35 = zext i32 %33 to i64
  %call36 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels34, i64 %conv35)
  %34 = load float*, float** %call36, align 8
  %35 = load i32, i32* %niSample, align 4
  %idxprom37 = zext i32 %35 to i64
  %arrayidx38 = getelementptr inbounds float, float* %34, i64 %idxprom37
  store float %div, float* %arrayidx38, align 4
  br label %if.end

if.else:                                          ; preds = %for.body11
  %36 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels39 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %36, i32 0, i32 4
  %37 = load i32, i32* %iChannel7, align 4
  %conv40 = zext i32 %37 to i64
  %call41 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels39, i64 %conv40)
  %38 = load float*, float** %call41, align 8
  %39 = load i32, i32* %niSample, align 4
  %idxprom42 = zext i32 %39 to i64
  %arrayidx43 = getelementptr inbounds float, float* %38, i64 %idxprom42
  %40 = load float, float* %arrayidx43, align 4
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 6
  %41 = load float, float* %m_fZoomRed, align 4
  %mul44 = fmul float %40, %41
  %42 = load %class.CBFormat*, %class.CBFormat** %pBFSrcDst.addr, align 8
  %m_ppfChannels45 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %42, i32 0, i32 4
  %43 = load i32, i32* %iChannel7, align 4
  %conv46 = zext i32 %43 to i64
  %call47 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels45, i64 %conv46)
  %44 = load float*, float** %call47, align 8
  %45 = load i32, i32* %niSample, align 4
  %idxprom48 = zext i32 %45 to i64
  %arrayidx49 = getelementptr inbounds float, float* %44, i64 %idxprom48
  store float %mul44, float* %arrayidx49, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc50

for.inc50:                                        ; preds = %if.end
  %46 = load i32, i32* %iChannel7, align 4
  %inc51 = add i32 %46, 1
  store i32 %inc51, i32* %iChannel7, align 4
  br label %for.cond8

for.end52:                                        ; preds = %for.cond8
  br label %for.inc53

for.inc53:                                        ; preds = %for.end52
  %47 = load i32, i32* %niSample, align 4
  %inc54 = add i32 %47, 1
  store i32 %inc54, i32* %niSample, align 4
  br label %for.cond

for.end55:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float @_ZSt3absf(float %__x) #5 comdat {
entry:
  %__x.addr = alloca float, align 4
  store float %__x, float* %__x.addr, align 4
  %0 = load float, float* %__x.addr, align 4
  %1 = call float @llvm.fabs.f32(float %0)
  ret float %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float @_ZSt4fabsf(float %__x) #5 comdat {
entry:
  %__x.addr = alloca float, align 4
  store float %__x, float* %__x.addr, align 4
  %0 = load float, float* %__x.addr, align 4
  %1 = call float @llvm.fabs.f32(float %0)
  ret float %1
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %ref.tmp = alloca void (i8*)*, align 8
  %ref.tmp2 = alloca void (i8*)*, align 8
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* %0)
  %1 = bitcast %class.CAmbisonicBinauralizer* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  invoke void @_ZN17CAmbisonicDecoderC1Ev(%class.CAmbisonicDecoder* %m_AmbDecoder)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  store void (i8*)* @free, void (i8*)** %ref.tmp, align 8
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEEC2EPS0_OS3_(%"class.std::unique_ptr.20"* %m_pFFT_cfg, %struct.kiss_fftr_state* null, void (i8*)** dereferenceable(8) %ref.tmp) #3
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 9
  store void (i8*)* @free, void (i8*)** %ref.tmp2, align 8
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEEC2EPS0_OS3_(%"class.std::unique_ptr.20"* %m_pIFFT_cfg, %struct.kiss_fftr_state* null, void (i8*)** dereferenceable(8) %ref.tmp2) #3
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %array.begin = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i32 0, i32 0
  %arrayctor.end = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %array.begin, i64 2
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %arrayctor.loop, %invoke.cont
  %arrayctor.cur = phi %"class.std::vector.26"* [ %array.begin, %invoke.cont ], [ %arrayctor.next, %arrayctor.loop ]
  call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev(%"class.std::vector.26"* %arrayctor.cur) #3
  %arrayctor.next = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.std::vector.26"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %arrayctor.loop
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2Ev(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %m_pfScratchBufferC) #3
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %array.begin3 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i32 0, i32 0
  %arrayctor.end4 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %array.begin3, i64 2
  br label %arrayctor.loop5

arrayctor.loop5:                                  ; preds = %arrayctor.loop5, %arrayctor.cont
  %arrayctor.cur6 = phi %"class.std::vector.0"* [ %array.begin3, %arrayctor.cont ], [ %arrayctor.next7, %arrayctor.loop5 ]
  call void @_ZNSt6vectorIfSaIfEEC2Ev(%"class.std::vector.0"* %arrayctor.cur6) #3
  %arrayctor.next7 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayctor.cur6, i64 1
  %arrayctor.done8 = icmp eq %"class.std::vector.0"* %arrayctor.next7, %arrayctor.end4
  br i1 %arrayctor.done8, label %arrayctor.cont9, label %arrayctor.loop5

arrayctor.cont9:                                  ; preds = %arrayctor.loop5
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  store i32 0, i32* %m_nBlockSize, align 8
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  store i32 0, i32* %m_nTaps, align 4
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  store i32 0, i32* %m_nFFTSize, align 8
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  store i32 0, i32* %m_nFFTBins, align 4
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 6
  store float 0.000000e+00, float* %m_fFFTScaler, align 8
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  store i32 0, i32* %m_nOverlapLength, align 4
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  %5 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %5) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val10 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEEC2EPS0_OS3_(%"class.std::unique_ptr.20"* %this, %struct.kiss_fftr_state* %__p, void (i8*)** dereferenceable(8) %__d) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.20"*, align 8
  %__p.addr = alloca %struct.kiss_fftr_state*, align 8
  %__d.addr = alloca void (i8*)**, align 8
  store %"class.std::unique_ptr.20"* %this, %"class.std::unique_ptr.20"** %this.addr, align 8
  store %struct.kiss_fftr_state* %__p, %struct.kiss_fftr_state** %__p.addr, align 8
  store void (i8*)** %__d, void (i8*)*** %__d.addr, align 8
  %this1 = load %"class.std::unique_ptr.20"*, %"class.std::unique_ptr.20"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fftr_state** dereferenceable(8) %__p.addr) #3
  %0 = load void (i8*)**, void (i8*)*** %__d.addr, align 8
  %call2 = call dereferenceable(8) void (i8*)** @_ZSt4moveIRPFvPvEEONSt16remove_referenceIT_E4typeEOS5_(void (i8*)** dereferenceable(8) %0) #3
  invoke void @_ZNSt5tupleIJP15kiss_fftr_statePFvPvEEEC2IS1_S4_vEEOT_OT0_(%"class.std::tuple.21"* %_M_t, %struct.kiss_fftr_state** dereferenceable(8) %call, void (i8*)** dereferenceable(8) %call2)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev(%"class.std::vector.26"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.27"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2Ev(%"class.std::unique_ptr.31"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  invoke void @_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev(%"class.std::tuple.32"* %_M_t)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate, i32 %nBlockSize, i32* dereferenceable(4) %tailLength, %"class.std::__cxx11::basic_string"* %HRTFPath) unnamed_addr #11 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %nSampleRate.addr = alloca i32, align 4
  %nBlockSize.addr = alloca i32, align 4
  %tailLength.addr = alloca i32*, align 8
  %niEar = alloca i32, align 4
  %niChannel = alloca i32, align 4
  %niSpeaker = alloca i32, align 4
  %niTap = alloca i32, align 4
  %p_hrtf = alloca %class.HRTF*, align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %nSpeakers = alloca i32, align 4
  %pfHRTF = alloca [2 x float*], align 16
  %ppfAccumulator = alloca [2 x float**], align 16
  %position = alloca %struct.PolarPoint, align 4
  %tmp = alloca { <2 x float>, float }, align 8
  %b_found = alloca i8, align 1
  %fCoefficient = alloca float, align 4
  %fMax = alloca float, align 4
  %myEncoder = alloca %class.CAmbisonicEncoder, align 8
  %position90 = alloca %struct.PolarPoint, align 4
  %agg.tmp131 = alloca %struct.PolarPoint, align 4
  %agg.tmp131.coerce = alloca { <2 x float>, float }, align 4
  %pfLeftEar90 = alloca float*, align 8
  %val = alloca float, align 4
  %fUpperSample = alloca float, align 4
  %fScaler = alloca float, align 4
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  store i32 %nSampleRate, i32* %nSampleRate.addr, align 4
  store i32 %nBlockSize, i32* %nBlockSize.addr, align 4
  store i32* %tailLength, i32** %tailLength.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store i32 0, i32* %niEar, align 4
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %niSpeaker, align 4
  store i32 0, i32* %niTap, align 4
  %0 = load i32, i32* %nSampleRate.addr, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* %agg.tmp, %"class.std::__cxx11::basic_string"* dereferenceable(32) %HRTFPath)
  %call = invoke %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this1, i32 %0, %"class.std::__cxx11::basic_string"* %agg.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  store %class.HRTF* %call, %class.HRTF** %p_hrtf, align 8
  %1 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %cmp = icmp eq %class.HRTF* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  store i1 false, i1* %retval, align 1
  br label %return

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont
  %5 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %call2 = call i32 @_ZN4HRTF10getHRTFLenEv(%class.HRTF* %5)
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  store i32 %call2, i32* %m_nTaps, align 4
  %6 = load i32*, i32** %tailLength.addr, align 8
  store i32 %call2, i32* %6, align 4
  %7 = load i32, i32* %nBlockSize.addr, align 4
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  store i32 %7, i32* %m_nBlockSize, align 8
  %m_nBlockSize3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %8 = load i32, i32* %m_nBlockSize3, align 8
  %m_nTaps4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %9 = load i32, i32* %m_nTaps4, align 4
  %cmp5 = icmp ult i32 %8, %9
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %m_nBlockSize6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %10 = load i32, i32* %m_nBlockSize6, align 8
  %sub = sub i32 %10, 1
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %m_nTaps7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %11 = load i32, i32* %m_nTaps7, align 4
  %sub8 = sub i32 %11, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub8, %cond.false ]
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  store i32 %cond, i32* %m_nOverlapLength, align 4
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  store i32 1, i32* %m_nFFTSize, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %m_nFFTSize9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %12 = load i32, i32* %m_nFFTSize9, align 8
  %m_nBlockSize10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %13 = load i32, i32* %m_nBlockSize10, align 8
  %m_nTaps11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %14 = load i32, i32* %m_nTaps11, align 4
  %add = add i32 %13, %14
  %m_nOverlapLength12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %15 = load i32, i32* %m_nOverlapLength12, align 4
  %add13 = add i32 %add, %15
  %cmp14 = icmp ult i32 %12, %add13
  br i1 %cmp14, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %m_nFFTSize15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %16 = load i32, i32* %m_nFFTSize15, align 8
  %shl = shl i32 %16, 1
  store i32 %shl, i32* %m_nFFTSize15, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %m_nFFTSize16 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %17 = load i32, i32* %m_nFFTSize16, align 8
  %div = udiv i32 %17, 2
  %add17 = add i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  store i32 %add17, i32* %m_nFFTBins, align 4
  %m_nFFTSize18 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %18 = load i32, i32* %m_nFFTSize18, align 8
  %conv = uitofp i32 %18 to float
  %div19 = fdiv float 1.000000e+00, %conv
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 6
  store float %div19, float* %m_fFFTScaler, align 8
  %19 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %20 = load i32, i32* %nOrder.addr, align 4
  %21 = load i8, i8* %b3D.addr, align 1
  %tobool = trunc i8 %21 to i1
  %call20 = call zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* %19, i32 %20, i1 zeroext %tobool, i32 0)
  %22 = bitcast %class.CAmbisonicBinauralizer* %this1 to void (%class.CAmbisonicBinauralizer*)***
  %vtable = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %22, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable, i64 6
  %23 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn, align 8
  call void %23(%class.CAmbisonicBinauralizer* %this1)
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  %call21 = call i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* %m_AmbDecoder)
  store i32 %call21, i32* %nSpeakers, align 4
  %24 = bitcast %class.CAmbisonicBinauralizer* %this1 to void (%class.CAmbisonicBinauralizer*)***
  %vtable22 = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %24, align 8
  %vfn23 = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable22, i64 7
  %25 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn23, align 8
  call void %25(%class.CAmbisonicBinauralizer* %this1)
  store i32 0, i32* %niEar, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %26 = load i32, i32* %niEar, align 4
  %cmp24 = icmp ult i32 %26, 2
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %m_nTaps25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %27 = load i32, i32* %m_nTaps25, align 4
  %conv26 = zext i32 %27 to i64
  %28 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv26, i64 4)
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 -1, i64 %30
  %call27 = call i8* @_Znam(i64 %31) #18
  %32 = bitcast i8* %call27 to float*
  %33 = load i32, i32* %niEar, align 4
  %idxprom = zext i32 %33 to i64
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 %idxprom
  store float* %32, float** %arrayidx, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %niEar, align 4
  %inc = add i32 %34, 1
  store i32 %inc, i32* %niEar, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %niEar, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc49, %for.end
  %35 = load i32, i32* %niEar, align 4
  %cmp29 = icmp ult i32 %35, 2
  br i1 %cmp29, label %for.body30, label %for.end51

for.body30:                                       ; preds = %for.cond28
  %36 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %36, i32 0, i32 4
  %37 = load i32, i32* %m_nChannelCount, align 8
  %conv31 = zext i32 %37 to i64
  %38 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv31, i64 8)
  %39 = extractvalue { i64, i1 } %38, 1
  %40 = extractvalue { i64, i1 } %38, 0
  %41 = select i1 %39, i64 -1, i64 %40
  %call32 = call i8* @_Znam(i64 %41) #18
  %42 = bitcast i8* %call32 to float**
  %43 = load i32, i32* %niEar, align 4
  %idxprom33 = zext i32 %43 to i64
  %arrayidx34 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom33
  store float** %42, float*** %arrayidx34, align 8
  store i32 0, i32* %niChannel, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc46, %for.body30
  %44 = load i32, i32* %niChannel, align 4
  %45 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount36 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %45, i32 0, i32 4
  %46 = load i32, i32* %m_nChannelCount36, align 8
  %cmp37 = icmp ult i32 %44, %46
  br i1 %cmp37, label %for.body38, label %for.end48

for.body38:                                       ; preds = %for.cond35
  %m_nTaps39 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %47 = load i32, i32* %m_nTaps39, align 4
  %conv40 = zext i32 %47 to i64
  %48 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv40, i64 4)
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 -1, i64 %50
  %call41 = call i8* @_Znam(i64 %51) #18
  %52 = bitcast i8* %call41 to float*
  %53 = bitcast float* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 %51, i1 false)
  %54 = load i32, i32* %niEar, align 4
  %idxprom42 = zext i32 %54 to i64
  %arrayidx43 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom42
  %55 = load float**, float*** %arrayidx43, align 8
  %56 = load i32, i32* %niChannel, align 4
  %idxprom44 = zext i32 %56 to i64
  %arrayidx45 = getelementptr inbounds float*, float** %55, i64 %idxprom44
  store float* %52, float** %arrayidx45, align 8
  br label %for.inc46

for.inc46:                                        ; preds = %for.body38
  %57 = load i32, i32* %niChannel, align 4
  %inc47 = add i32 %57, 1
  store i32 %inc47, i32* %niChannel, align 4
  br label %for.cond35

for.end48:                                        ; preds = %for.cond35
  br label %for.inc49

for.inc49:                                        ; preds = %for.end48
  %58 = load i32, i32* %niEar, align 4
  %inc50 = add i32 %58, 1
  store i32 %inc50, i32* %niEar, align 4
  br label %for.cond28

for.end51:                                        ; preds = %for.cond28
  store i32 0, i32* %niChannel, align 4
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc119, %for.end51
  %59 = load i32, i32* %niChannel, align 4
  %60 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount53 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %60, i32 0, i32 4
  %61 = load i32, i32* %m_nChannelCount53, align 8
  %cmp54 = icmp ult i32 %59, %61
  br i1 %cmp54, label %for.body55, label %for.end121

for.body55:                                       ; preds = %for.cond52
  store i32 0, i32* %niSpeaker, align 4
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc116, %for.body55
  %62 = load i32, i32* %niSpeaker, align 4
  %63 = load i32, i32* %nSpeakers, align 4
  %cmp57 = icmp ult i32 %62, %63
  br i1 %cmp57, label %for.body58, label %for.end118

for.body58:                                       ; preds = %for.cond56
  %m_AmbDecoder59 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  %64 = load i32, i32* %niSpeaker, align 4
  %call60 = call { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* %m_AmbDecoder59, i32 %64)
  store { <2 x float>, float } %call60, { <2 x float>, float }* %tmp, align 8
  %65 = bitcast { <2 x float>, float }* %tmp to i8*
  %66 = bitcast %struct.PolarPoint* %position to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 8 %65, i64 12, i1 false)
  %67 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 0
  %68 = load float, float* %fAzimuth, align 4
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 1
  %69 = load float, float* %fElevation, align 4
  %arraydecay = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %70 = bitcast %class.HRTF* %67 to i1 (%class.HRTF*, float, float, float**)***
  %vtable61 = load i1 (%class.HRTF*, float, float, float**)**, i1 (%class.HRTF*, float, float, float**)*** %70, align 8
  %vfn62 = getelementptr inbounds i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vtable61, i64 2
  %71 = load i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vfn62, align 8
  %call63 = call zeroext i1 %71(%class.HRTF* %67, float %68, float %69, float** %arraydecay)
  %frombool64 = zext i1 %call63 to i8
  store i8 %frombool64, i8* %b_found, align 1
  %72 = load i8, i8* %b_found, align 1
  %tobool65 = trunc i8 %72 to i1
  br i1 %tobool65, label %if.end67, label %if.then66

if.then66:                                        ; preds = %for.body58
  store i1 false, i1* %retval, align 1
  br label %return

if.end67:                                         ; preds = %for.body58
  %m_AmbDecoder68 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  %73 = load i32, i32* %niSpeaker, align 4
  %74 = load i32, i32* %niChannel, align 4
  %call69 = call float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* %m_AmbDecoder68, i32 %73, i32 %74)
  %conv70 = fpext float %call69 to double
  %75 = load i32, i32* %niChannel, align 4
  %conv71 = uitofp i32 %75 to double
  %call72 = call double @sqrt(double %conv71) #3
  %76 = call double @llvm.floor.f64(double %call72)
  %mul = fmul double 2.000000e+00, %76
  %add73 = fadd double %mul, 1.000000e+00
  %mul74 = fmul double %conv70, %add73
  %conv75 = fptrunc double %mul74 to float
  store float %conv75, float* %fCoefficient, align 4
  store i32 0, i32* %niTap, align 4
  br label %for.cond76

for.cond76:                                       ; preds = %for.inc88, %if.end67
  %77 = load i32, i32* %niTap, align 4
  %m_nTaps77 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %78 = load i32, i32* %m_nTaps77, align 4
  %cmp78 = icmp ult i32 %77, %78
  br i1 %cmp78, label %for.body79, label %for.end90

for.body79:                                       ; preds = %for.cond76
  %79 = load float, float* %fCoefficient, align 4
  %arrayidx80 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %80 = load float*, float** %arrayidx80, align 16
  %81 = load i32, i32* %niTap, align 4
  %idxprom81 = zext i32 %81 to i64
  %arrayidx82 = getelementptr inbounds float, float* %80, i64 %idxprom81
  %82 = load float, float* %arrayidx82, align 4
  %mul83 = fmul float %82, %79
  store float %mul83, float* %arrayidx82, align 4
  %83 = load float, float* %fCoefficient, align 4
  %arrayidx84 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %84 = load float*, float** %arrayidx84, align 8
  %85 = load i32, i32* %niTap, align 4
  %idxprom85 = zext i32 %85 to i64
  %arrayidx86 = getelementptr inbounds float, float* %84, i64 %idxprom85
  %86 = load float, float* %arrayidx86, align 4
  %mul87 = fmul float %86, %83
  store float %mul87, float* %arrayidx86, align 4
  br label %for.inc88

for.inc88:                                        ; preds = %for.body79
  %87 = load i32, i32* %niTap, align 4
  %inc89 = add i32 %87, 1
  store i32 %inc89, i32* %niTap, align 4
  br label %for.cond76

for.end90:                                        ; preds = %for.cond76
  store i32 0, i32* %niTap, align 4
  br label %for.cond91

for.cond91:                                       ; preds = %for.inc113, %for.end90
  %88 = load i32, i32* %niTap, align 4
  %m_nTaps92 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %89 = load i32, i32* %m_nTaps92, align 4
  %cmp93 = icmp ult i32 %88, %89
  br i1 %cmp93, label %for.body94, label %for.end115

for.body94:                                       ; preds = %for.cond91
  %arrayidx95 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %90 = load float*, float** %arrayidx95, align 16
  %91 = load i32, i32* %niTap, align 4
  %idxprom96 = zext i32 %91 to i64
  %arrayidx97 = getelementptr inbounds float, float* %90, i64 %idxprom96
  %92 = load float, float* %arrayidx97, align 4
  %arrayidx98 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 0
  %93 = load float**, float*** %arrayidx98, align 16
  %94 = load i32, i32* %niChannel, align 4
  %idxprom99 = zext i32 %94 to i64
  %arrayidx100 = getelementptr inbounds float*, float** %93, i64 %idxprom99
  %95 = load float*, float** %arrayidx100, align 8
  %96 = load i32, i32* %niTap, align 4
  %idxprom101 = zext i32 %96 to i64
  %arrayidx102 = getelementptr inbounds float, float* %95, i64 %idxprom101
  %97 = load float, float* %arrayidx102, align 4
  %add103 = fadd float %97, %92
  store float %add103, float* %arrayidx102, align 4
  %arrayidx104 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %98 = load float*, float** %arrayidx104, align 8
  %99 = load i32, i32* %niTap, align 4
  %idxprom105 = zext i32 %99 to i64
  %arrayidx106 = getelementptr inbounds float, float* %98, i64 %idxprom105
  %100 = load float, float* %arrayidx106, align 4
  %arrayidx107 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 1
  %101 = load float**, float*** %arrayidx107, align 8
  %102 = load i32, i32* %niChannel, align 4
  %idxprom108 = zext i32 %102 to i64
  %arrayidx109 = getelementptr inbounds float*, float** %101, i64 %idxprom108
  %103 = load float*, float** %arrayidx109, align 8
  %104 = load i32, i32* %niTap, align 4
  %idxprom110 = zext i32 %104 to i64
  %arrayidx111 = getelementptr inbounds float, float* %103, i64 %idxprom110
  %105 = load float, float* %arrayidx111, align 4
  %add112 = fadd float %105, %100
  store float %add112, float* %arrayidx111, align 4
  br label %for.inc113

for.inc113:                                       ; preds = %for.body94
  %106 = load i32, i32* %niTap, align 4
  %inc114 = add i32 %106, 1
  store i32 %inc114, i32* %niTap, align 4
  br label %for.cond91

for.end115:                                       ; preds = %for.cond91
  br label %for.inc116

for.inc116:                                       ; preds = %for.end115
  %107 = load i32, i32* %niSpeaker, align 4
  %inc117 = add i32 %107, 1
  store i32 %inc117, i32* %niSpeaker, align 4
  br label %for.cond56

for.end118:                                       ; preds = %for.cond56
  br label %for.inc119

for.inc119:                                       ; preds = %for.end118
  %108 = load i32, i32* %niChannel, align 4
  %inc120 = add i32 %108, 1
  store i32 %inc120, i32* %niChannel, align 4
  br label %for.cond52

for.end121:                                       ; preds = %for.cond52
  %109 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %isnull = icmp eq %class.HRTF* %109, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %for.end121
  %110 = bitcast %class.HRTF* %109 to void (%class.HRTF*)***
  %vtable122 = load void (%class.HRTF*)**, void (%class.HRTF*)*** %110, align 8
  %vfn123 = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable122, i64 1
  %111 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn123, align 8
  call void %111(%class.HRTF* %109) #3
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %for.end121
  store float 0.000000e+00, float* %fMax, align 4
  call void @_ZN17CAmbisonicEncoderC1Ev(%class.CAmbisonicEncoder* %myEncoder)
  %112 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %112, i32 0, i32 1
  %113 = load i32, i32* %m_nOrder, align 8
  %call126 = invoke zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %myEncoder, i32 %113, i1 zeroext true, i32 0)
          to label %invoke.cont125 unwind label %lpad124

invoke.cont125:                                   ; preds = %delete.end
  %call128 = invoke float @_Z16DegreesToRadiansf(float 9.000000e+01)
          to label %invoke.cont127 unwind label %lpad124

invoke.cont127:                                   ; preds = %invoke.cont125
  %fAzimuth129 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position90, i32 0, i32 0
  store float %call128, float* %fAzimuth129, align 4
  %fElevation130 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position90, i32 0, i32 1
  store float 0.000000e+00, float* %fElevation130, align 4
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position90, i32 0, i32 2
  store float 5.000000e+00, float* %fDistance, align 4
  %114 = bitcast %class.CAmbisonicEncoder* %myEncoder to %class.CAmbisonicSource*
  %115 = bitcast %struct.PolarPoint* %agg.tmp131 to i8*
  %116 = bitcast %struct.PolarPoint* %position90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %116, i64 12, i1 false)
  %117 = bitcast { <2 x float>, float }* %agg.tmp131.coerce to i8*
  %118 = bitcast %struct.PolarPoint* %agg.tmp131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 12, i1 false)
  %119 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp131.coerce, i32 0, i32 0
  %120 = load <2 x float>, <2 x float>* %119, align 4
  %121 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp131.coerce, i32 0, i32 1
  %122 = load float, float* %121, align 4
  invoke void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* %114, <2 x float> %120, float %122)
          to label %invoke.cont132 unwind label %lpad124

invoke.cont132:                                   ; preds = %invoke.cont127
  invoke void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* %myEncoder)
          to label %invoke.cont133 unwind label %lpad124

invoke.cont133:                                   ; preds = %invoke.cont132
  %m_nTaps134 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %123 = load i32, i32* %m_nTaps134, align 4
  %conv135 = zext i32 %123 to i64
  %124 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv135, i64 4)
  %125 = extractvalue { i64, i1 } %124, 1
  %126 = extractvalue { i64, i1 } %124, 0
  %127 = select i1 %125, i64 -1, i64 %126
  %call137 = invoke i8* @_Znam(i64 %127) #18
          to label %invoke.cont136 unwind label %lpad124

invoke.cont136:                                   ; preds = %invoke.cont133
  %128 = bitcast i8* %call137 to float*
  %129 = bitcast float* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 %127, i1 false)
  store float* %128, float** %pfLeftEar90, align 8
  store i32 0, i32* %niChannel, align 4
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc160, %invoke.cont136
  %130 = load i32, i32* %niChannel, align 4
  %131 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount139 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %131, i32 0, i32 4
  %132 = load i32, i32* %m_nChannelCount139, align 8
  %cmp140 = icmp ult i32 %130, %132
  br i1 %cmp140, label %for.body141, label %for.end162

for.body141:                                      ; preds = %for.cond138
  store i32 0, i32* %niTap, align 4
  br label %for.cond142

for.cond142:                                      ; preds = %for.inc157, %for.body141
  %133 = load i32, i32* %niTap, align 4
  %m_nTaps143 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %134 = load i32, i32* %m_nTaps143, align 4
  %cmp144 = icmp ult i32 %133, %134
  br i1 %cmp144, label %for.body145, label %for.end159

for.body145:                                      ; preds = %for.cond142
  %135 = bitcast %class.CAmbisonicEncoder* %myEncoder to %class.CAmbisonicSource*
  %136 = load i32, i32* %niChannel, align 4
  %call147 = invoke float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* %135, i32 %136)
          to label %invoke.cont146 unwind label %lpad124

invoke.cont146:                                   ; preds = %for.body145
  %arrayidx148 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 0
  %137 = load float**, float*** %arrayidx148, align 16
  %138 = load i32, i32* %niChannel, align 4
  %idxprom149 = zext i32 %138 to i64
  %arrayidx150 = getelementptr inbounds float*, float** %137, i64 %idxprom149
  %139 = load float*, float** %arrayidx150, align 8
  %140 = load i32, i32* %niTap, align 4
  %idxprom151 = zext i32 %140 to i64
  %arrayidx152 = getelementptr inbounds float, float* %139, i64 %idxprom151
  %141 = load float, float* %arrayidx152, align 4
  %mul153 = fmul float %call147, %141
  %142 = load float*, float** %pfLeftEar90, align 8
  %143 = load i32, i32* %niTap, align 4
  %idxprom154 = zext i32 %143 to i64
  %arrayidx155 = getelementptr inbounds float, float* %142, i64 %idxprom154
  %144 = load float, float* %arrayidx155, align 4
  %add156 = fadd float %144, %mul153
  store float %add156, float* %arrayidx155, align 4
  br label %for.inc157

for.inc157:                                       ; preds = %invoke.cont146
  %145 = load i32, i32* %niTap, align 4
  %inc158 = add i32 %145, 1
  store i32 %inc158, i32* %niTap, align 4
  br label %for.cond142

lpad124:                                          ; preds = %for.body214, %for.body145, %invoke.cont133, %invoke.cont132, %invoke.cont127, %invoke.cont125, %delete.end
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = extractvalue { i8*, i32 } %146, 0
  store i8* %147, i8** %exn.slot, align 8
  %148 = extractvalue { i8*, i32 } %146, 1
  store i32 %148, i32* %ehselector.slot, align 4
  call void @_ZN17CAmbisonicEncoderD1Ev(%class.CAmbisonicEncoder* %myEncoder) #3
  br label %eh.resume

for.end159:                                       ; preds = %for.cond142
  br label %for.inc160

for.inc160:                                       ; preds = %for.end159
  %149 = load i32, i32* %niChannel, align 4
  %inc161 = add i32 %149, 1
  store i32 %inc161, i32* %niChannel, align 4
  br label %for.cond138

for.end162:                                       ; preds = %for.cond138
  store i32 0, i32* %niTap, align 4
  br label %for.cond163

for.cond163:                                      ; preds = %for.inc176, %for.end162
  %150 = load i32, i32* %niTap, align 4
  %m_nTaps164 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %151 = load i32, i32* %m_nTaps164, align 4
  %cmp165 = icmp ult i32 %150, %151
  br i1 %cmp165, label %for.body166, label %for.end178

for.body166:                                      ; preds = %for.cond163
  %152 = load float*, float** %pfLeftEar90, align 8
  %153 = load i32, i32* %niTap, align 4
  %idxprom167 = zext i32 %153 to i64
  %arrayidx168 = getelementptr inbounds float, float* %152, i64 %idxprom167
  %154 = load float, float* %arrayidx168, align 4
  %conv169 = fpext float %154 to double
  %155 = call double @llvm.fabs.f64(double %conv169)
  %conv170 = fptrunc double %155 to float
  store float %conv170, float* %val, align 4
  %156 = load float, float* %val, align 4
  %157 = load float, float* %fMax, align 4
  %cmp171 = fcmp ogt float %156, %157
  br i1 %cmp171, label %cond.true172, label %cond.false173

cond.true172:                                     ; preds = %for.body166
  %158 = load float, float* %val, align 4
  br label %cond.end174

cond.false173:                                    ; preds = %for.body166
  %159 = load float, float* %fMax, align 4
  br label %cond.end174

cond.end174:                                      ; preds = %cond.false173, %cond.true172
  %cond175 = phi float [ %158, %cond.true172 ], [ %159, %cond.false173 ]
  store float %cond175, float* %fMax, align 4
  br label %for.inc176

for.inc176:                                       ; preds = %cond.end174
  %160 = load i32, i32* %niTap, align 4
  %inc177 = add i32 %160, 1
  store i32 %inc177, i32* %niTap, align 4
  br label %for.cond163

for.end178:                                       ; preds = %for.cond163
  store float 1.000000e+00, float* %fUpperSample, align 4
  %161 = load float, float* %fUpperSample, align 4
  %162 = load float, float* %fMax, align 4
  %div179 = fdiv float %161, %162
  store float %div179, float* %fScaler, align 4
  %163 = load float, float* %fScaler, align 4
  %mul180 = fmul float %163, 0x3FD6666660000000
  store float %mul180, float* %fScaler, align 4
  store i32 0, i32* %niEar, align 4
  br label %for.cond181

for.cond181:                                      ; preds = %for.inc205, %for.end178
  %164 = load i32, i32* %niEar, align 4
  %cmp182 = icmp ult i32 %164, 2
  br i1 %cmp182, label %for.body183, label %for.end207

for.body183:                                      ; preds = %for.cond181
  store i32 0, i32* %niChannel, align 4
  br label %for.cond184

for.cond184:                                      ; preds = %for.inc202, %for.body183
  %165 = load i32, i32* %niChannel, align 4
  %166 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount185 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %166, i32 0, i32 4
  %167 = load i32, i32* %m_nChannelCount185, align 8
  %cmp186 = icmp ult i32 %165, %167
  br i1 %cmp186, label %for.body187, label %for.end204

for.body187:                                      ; preds = %for.cond184
  store i32 0, i32* %niTap, align 4
  br label %for.cond188

for.cond188:                                      ; preds = %for.inc199, %for.body187
  %168 = load i32, i32* %niTap, align 4
  %m_nTaps189 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %169 = load i32, i32* %m_nTaps189, align 4
  %cmp190 = icmp ult i32 %168, %169
  br i1 %cmp190, label %for.body191, label %for.end201

for.body191:                                      ; preds = %for.cond188
  %170 = load float, float* %fScaler, align 4
  %171 = load i32, i32* %niEar, align 4
  %idxprom192 = zext i32 %171 to i64
  %arrayidx193 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom192
  %172 = load float**, float*** %arrayidx193, align 8
  %173 = load i32, i32* %niChannel, align 4
  %idxprom194 = zext i32 %173 to i64
  %arrayidx195 = getelementptr inbounds float*, float** %172, i64 %idxprom194
  %174 = load float*, float** %arrayidx195, align 8
  %175 = load i32, i32* %niTap, align 4
  %idxprom196 = zext i32 %175 to i64
  %arrayidx197 = getelementptr inbounds float, float* %174, i64 %idxprom196
  %176 = load float, float* %arrayidx197, align 4
  %mul198 = fmul float %176, %170
  store float %mul198, float* %arrayidx197, align 4
  br label %for.inc199

for.inc199:                                       ; preds = %for.body191
  %177 = load i32, i32* %niTap, align 4
  %inc200 = add i32 %177, 1
  store i32 %inc200, i32* %niTap, align 4
  br label %for.cond188

for.end201:                                       ; preds = %for.cond188
  br label %for.inc202

for.inc202:                                       ; preds = %for.end201
  %178 = load i32, i32* %niChannel, align 4
  %inc203 = add i32 %178, 1
  store i32 %inc203, i32* %niChannel, align 4
  br label %for.cond184

for.end204:                                       ; preds = %for.cond184
  br label %for.inc205

for.inc205:                                       ; preds = %for.end204
  %179 = load i32, i32* %niEar, align 4
  %inc206 = add i32 %179, 1
  store i32 %inc206, i32* %niEar, align 4
  br label %for.cond181

for.end207:                                       ; preds = %for.cond181
  store i32 0, i32* %niEar, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc244, %for.end207
  %180 = load i32, i32* %niEar, align 4
  %cmp209 = icmp ult i32 %180, 2
  br i1 %cmp209, label %for.body210, label %for.end246

for.body210:                                      ; preds = %for.cond208
  store i32 0, i32* %niChannel, align 4
  br label %for.cond211

for.cond211:                                      ; preds = %for.inc241, %for.body210
  %181 = load i32, i32* %niChannel, align 4
  %182 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount212 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %182, i32 0, i32 4
  %183 = load i32, i32* %m_nChannelCount212, align 8
  %cmp213 = icmp ult i32 %181, %183
  br i1 %cmp213, label %for.body214, label %for.end243

for.body214:                                      ; preds = %for.cond211
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call215 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %184 = bitcast float* %call215 to i8*
  %185 = load i32, i32* %niEar, align 4
  %idxprom216 = zext i32 %185 to i64
  %arrayidx217 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom216
  %186 = load float**, float*** %arrayidx217, align 8
  %187 = load i32, i32* %niChannel, align 4
  %idxprom218 = zext i32 %187 to i64
  %arrayidx219 = getelementptr inbounds float*, float** %186, i64 %idxprom218
  %188 = load float*, float** %arrayidx219, align 8
  %189 = bitcast float* %188 to i8*
  %m_nTaps220 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %190 = load i32, i32* %m_nTaps220, align 4
  %conv221 = zext i32 %190 to i64
  %mul222 = mul i64 %conv221, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* align 4 %189, i64 %mul222, i1 false)
  %m_pfScratchBufferA223 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %m_nTaps224 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %191 = load i32, i32* %m_nTaps224, align 4
  %conv225 = zext i32 %191 to i64
  %call226 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA223, i64 %conv225) #3
  %192 = bitcast float* %call226 to i8*
  %m_nFFTSize227 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %193 = load i32, i32* %m_nFFTSize227, align 8
  %m_nTaps228 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 3
  %194 = load i32, i32* %m_nTaps228, align 4
  %sub229 = sub i32 %193, %194
  %conv230 = zext i32 %sub229 to i64
  %mul231 = mul i64 %conv230, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %192, i8 0, i64 %mul231, i1 false)
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  %call232 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pFFT_cfg) #3
  %m_pfScratchBufferA233 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call234 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA233) #3
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %195 = load i32, i32* %niEar, align 4
  %idxprom235 = zext i32 %195 to i64
  %arrayidx236 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i64 0, i64 %idxprom235
  %196 = load i32, i32* %niChannel, align 4
  %conv237 = zext i32 %196 to i64
  %call238 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx236, i64 %conv237) #3
  %call239 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %call238) #3
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %call232, float* %call234, %struct.kiss_fft_cpx* %call239)
          to label %invoke.cont240 unwind label %lpad124

invoke.cont240:                                   ; preds = %for.body214
  br label %for.inc241

for.inc241:                                       ; preds = %invoke.cont240
  %197 = load i32, i32* %niChannel, align 4
  %inc242 = add i32 %197, 1
  store i32 %inc242, i32* %niChannel, align 4
  br label %for.cond211

for.end243:                                       ; preds = %for.cond211
  br label %for.inc244

for.inc244:                                       ; preds = %for.end243
  %198 = load i32, i32* %niEar, align 4
  %inc245 = add i32 %198, 1
  store i32 %inc245, i32* %niEar, align 4
  br label %for.cond208

for.end246:                                       ; preds = %for.cond208
  store i32 0, i32* %niEar, align 4
  br label %for.cond247

for.cond247:                                      ; preds = %for.inc255, %for.end246
  %199 = load i32, i32* %niEar, align 4
  %cmp248 = icmp ult i32 %199, 2
  br i1 %cmp248, label %for.body249, label %for.end257

for.body249:                                      ; preds = %for.cond247
  %200 = load i32, i32* %niEar, align 4
  %idxprom250 = zext i32 %200 to i64
  %arrayidx251 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 %idxprom250
  %201 = load float*, float** %arrayidx251, align 8
  %isnull252 = icmp eq float* %201, null
  br i1 %isnull252, label %delete.end254, label %delete.notnull253

delete.notnull253:                                ; preds = %for.body249
  %202 = bitcast float* %201 to i8*
  call void @_ZdaPv(i8* %202) #19
  br label %delete.end254

delete.end254:                                    ; preds = %delete.notnull253, %for.body249
  br label %for.inc255

for.inc255:                                       ; preds = %delete.end254
  %203 = load i32, i32* %niEar, align 4
  %inc256 = add i32 %203, 1
  store i32 %inc256, i32* %niEar, align 4
  br label %for.cond247

for.end257:                                       ; preds = %for.cond247
  store i32 0, i32* %niEar, align 4
  br label %for.cond258

for.cond258:                                      ; preds = %for.inc280, %for.end257
  %204 = load i32, i32* %niEar, align 4
  %cmp259 = icmp ult i32 %204, 2
  br i1 %cmp259, label %for.body260, label %for.end282

for.body260:                                      ; preds = %for.cond258
  store i32 0, i32* %niChannel, align 4
  br label %for.cond261

for.cond261:                                      ; preds = %for.inc272, %for.body260
  %205 = load i32, i32* %niChannel, align 4
  %206 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount262 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %206, i32 0, i32 4
  %207 = load i32, i32* %m_nChannelCount262, align 8
  %cmp263 = icmp ult i32 %205, %207
  br i1 %cmp263, label %for.body264, label %for.end274

for.body264:                                      ; preds = %for.cond261
  %208 = load i32, i32* %niEar, align 4
  %idxprom265 = zext i32 %208 to i64
  %arrayidx266 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom265
  %209 = load float**, float*** %arrayidx266, align 8
  %210 = load i32, i32* %niChannel, align 4
  %idxprom267 = zext i32 %210 to i64
  %arrayidx268 = getelementptr inbounds float*, float** %209, i64 %idxprom267
  %211 = load float*, float** %arrayidx268, align 8
  %isnull269 = icmp eq float* %211, null
  br i1 %isnull269, label %delete.end271, label %delete.notnull270

delete.notnull270:                                ; preds = %for.body264
  %212 = bitcast float* %211 to i8*
  call void @_ZdaPv(i8* %212) #19
  br label %delete.end271

delete.end271:                                    ; preds = %delete.notnull270, %for.body264
  br label %for.inc272

for.inc272:                                       ; preds = %delete.end271
  %213 = load i32, i32* %niChannel, align 4
  %inc273 = add i32 %213, 1
  store i32 %inc273, i32* %niChannel, align 4
  br label %for.cond261

for.end274:                                       ; preds = %for.cond261
  %214 = load i32, i32* %niEar, align 4
  %idxprom275 = zext i32 %214 to i64
  %arrayidx276 = getelementptr inbounds [2 x float**], [2 x float**]* %ppfAccumulator, i64 0, i64 %idxprom275
  %215 = load float**, float*** %arrayidx276, align 8
  %isnull277 = icmp eq float** %215, null
  br i1 %isnull277, label %delete.end279, label %delete.notnull278

delete.notnull278:                                ; preds = %for.end274
  %216 = bitcast float** %215 to i8*
  call void @_ZdaPv(i8* %216) #19
  br label %delete.end279

delete.end279:                                    ; preds = %delete.notnull278, %for.end274
  br label %for.inc280

for.inc280:                                       ; preds = %delete.end279
  %217 = load i32, i32* %niEar, align 4
  %inc281 = add i32 %217, 1
  store i32 %inc281, i32* %niEar, align 4
  br label %for.cond258

for.end282:                                       ; preds = %for.cond258
  %218 = load float*, float** %pfLeftEar90, align 8
  %isnull283 = icmp eq float* %218, null
  br i1 %isnull283, label %delete.end285, label %delete.notnull284

delete.notnull284:                                ; preds = %for.end282
  %219 = bitcast float* %218 to i8*
  call void @_ZdaPv(i8* %219) #19
  br label %delete.end285

delete.end285:                                    ; preds = %delete.notnull284, %for.end282
  store i1 true, i1* %retval, align 1
  call void @_ZN17CAmbisonicEncoderD1Ev(%class.CAmbisonicEncoder* %myEncoder) #3
  br label %return

return:                                           ; preds = %delete.end285, %if.then66, %if.then
  %220 = load i1, i1* %retval, align 1
  ret i1 %220

eh.resume:                                        ; preds = %lpad124, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val286 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val286
}

; Function Attrs: noinline optnone uwtable
define dso_local %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* %HRTFPath) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca %class.HRTF*, align 8
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %nSampleRate.addr = alloca i32, align 4
  %p_hrtf = alloca %class.HRTF*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store i32 %nSampleRate, i32* %nSampleRate.addr, align 4
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store %class.HRTF* null, %class.HRTF** %p_hrtf, align 8
  %call = call i8* @_Znwm(i64 16) #18
  %0 = bitcast i8* %call to %class.MIT_HRTF*
  %1 = load i32, i32* %nSampleRate.addr, align 4
  invoke void @_ZN8MIT_HRTFC1Ej(%class.MIT_HRTF* %0, i32 %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %2 = bitcast %class.MIT_HRTF* %0 to %class.HRTF*
  store %class.HRTF* %2, %class.HRTF** %p_hrtf, align 8
  %3 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %cmp = icmp eq %class.HRTF* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  store %class.HRTF* null, %class.HRTF** %retval, align 8
  br label %return

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #19
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont
  %7 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %call2 = call zeroext i1 @_ZN4HRTF8isLoadedEv(%class.HRTF* %7)
  br i1 %call2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  %8 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  %isnull = icmp eq %class.HRTF* %8, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then3
  %9 = bitcast %class.HRTF* %8 to void (%class.HRTF*)***
  %vtable = load void (%class.HRTF*)**, void (%class.HRTF*)*** %9, align 8
  %vfn = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable, i64 1
  %10 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn, align 8
  call void %10(%class.HRTF* %8) #3
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then3
  store %class.HRTF* null, %class.HRTF** %retval, align 8
  br label %return

if.end4:                                          ; preds = %if.end
  %11 = load %class.HRTF*, %class.HRTF** %p_hrtf, align 8
  store %class.HRTF* %11, %class.HRTF** %retval, align 8
  br label %return

return:                                           ; preds = %if.end4, %delete.end, %if.then
  %12 = load %class.HRTF*, %class.HRTF** %retval, align 8
  ret %class.HRTF* %12

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i32 @_ZN4HRTF10getHRTFLenEv(%class.HRTF* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %class.HRTF*, align 8
  store %class.HRTF* %this, %class.HRTF** %this.addr, align 8
  %this1 = load %class.HRTF*, %class.HRTF** %this.addr, align 8
  %i_len = getelementptr inbounds %class.HRTF, %class.HRTF* %this1, i32 0, i32 2
  %0 = load i32, i32* %i_len, align 4
  ret i32 %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.20"*, align 8
  store %"class.std::unique_ptr.20"* %this, %"class.std::unique_ptr.20"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.20"*, %"class.std::unique_ptr.20"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple.21"* dereferenceable(16) %_M_t) #3
  %0 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %call, align 8
  ret %struct.kiss_fftr_state* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %1, i64 %2
  ret %"class.std::unique_ptr.31"* %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple.32"* dereferenceable(8) %_M_t) #3
  %0 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %call, align 8
  ret %struct.kiss_fft_cpx* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizer5ResetEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i64 0, i64 0
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx) #3
  %0 = bitcast float* %call to i8*
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %1 = load i32, i32* %m_nOverlapLength, align 4
  %conv = zext i32 %1 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  %m_pfOverlap2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx3 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap2, i64 0, i64 1
  %call4 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx3) #3
  %2 = bitcast float* %call4 to i8*
  %m_nOverlapLength5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %3 = load i32, i32* %m_nOverlapLength5, align 4
  %conv6 = zext i32 %3 to i64
  %mul7 = mul i64 %conv6, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 %mul7, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizer7RefreshEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %this, %class.CBFormat* %pBFSrc, float** %ppfDst) #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %pBFSrc.addr = alloca %class.CBFormat*, align 8
  %ppfDst.addr = alloca float**, align 8
  %niEar = alloca i32, align 4
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  %cpTemp = alloca %struct.kiss_fft_cpx, align 4
  %bLowCPU = alloca i8, align 1
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store %class.CBFormat* %pBFSrc, %class.CBFormat** %pBFSrc.addr, align 8
  store float** %ppfDst, float*** %ppfDst.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  store i32 0, i32* %niEar, align 4
  store i32 0, i32* %niChannel, align 4
  store i32 0, i32* %ni, align 4
  store i8 0, i8* %bLowCPU, align 1
  %0 = load i8, i8* %bLowCPU, align 1
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.else202

if.then:                                          ; preds = %entry
  store i32 0, i32* %niEar, align 4
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %1 = bitcast float* %call to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8
  %conv = zext i32 %2 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %call2 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferC) #3
  %3 = bitcast float* %call2 to i8*
  %m_nFFTSize3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %4 = load i32, i32* %m_nFFTSize3, align 8
  %conv4 = zext i32 %4 to i64
  %mul5 = mul i64 %conv4, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul5, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc130, %if.then
  %5 = load i32, i32* %niChannel, align 4
  %6 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %6, i32 0, i32 4
  %7 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %5, %7
  br i1 %cmp, label %for.body, label %for.end132

for.body:                                         ; preds = %for.cond
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call6 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  %8 = bitcast float* %call6 to i8*
  %9 = load %class.CBFormat*, %class.CBFormat** %pBFSrc.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %9, i32 0, i32 4
  %10 = load i32, i32* %niChannel, align 4
  %conv7 = zext i32 %10 to i64
  %call8 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv7)
  %11 = load float*, float** %call8, align 8
  %12 = bitcast float* %11 to i8*
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %13 = load i32, i32* %m_nBlockSize, align 8
  %conv9 = zext i32 %13 to i64
  %mul10 = mul i64 %conv9, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %12, i64 %mul10, i1 false)
  %m_pfScratchBufferB11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %m_nBlockSize12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %14 = load i32, i32* %m_nBlockSize12, align 8
  %conv13 = zext i32 %14 to i64
  %call14 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB11, i64 %conv13) #3
  %15 = bitcast float* %call14 to i8*
  %m_nFFTSize15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %16 = load i32, i32* %m_nFFTSize15, align 8
  %m_nBlockSize16 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %17 = load i32, i32* %m_nBlockSize16, align 8
  %sub = sub i32 %16, %17
  %conv17 = zext i32 %sub to i64
  %mul18 = mul i64 %conv17, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 %mul18, i1 false)
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  %call19 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pFFT_cfg) #3
  %m_pfScratchBufferB20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call21 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB20) #3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %call22 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  call void @kiss_fftr(%struct.kiss_fftr_state* %call19, float* %call21, %struct.kiss_fft_cpx* %call22)
  store i32 0, i32* %ni, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %ni, align 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  %19 = load i32, i32* %m_nFFTBins, align 4
  %cmp24 = icmp ult i32 %18, %19
  br i1 %cmp24, label %for.body25, label %for.end

for.body25:                                       ; preds = %for.cond23
  %m_pcpScratch26 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %20 = load i32, i32* %ni, align 4
  %conv27 = zext i32 %20 to i64
  %call28 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch26, i64 %conv27)
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call28, i32 0, i32 0
  %21 = load float, float* %r, align 4
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %22 = load i32, i32* %niEar, align 4
  %idxprom = zext i32 %22 to i64
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i64 0, i64 %idxprom
  %23 = load i32, i32* %niChannel, align 4
  %conv29 = zext i32 %23 to i64
  %call30 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx, i64 %conv29) #3
  %24 = load i32, i32* %ni, align 4
  %conv31 = zext i32 %24 to i64
  %call32 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call30, i64 %conv31)
  %r33 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call32, i32 0, i32 0
  %25 = load float, float* %r33, align 4
  %mul34 = fmul float %21, %25
  %m_pcpScratch35 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %26 = load i32, i32* %ni, align 4
  %conv36 = zext i32 %26 to i64
  %call37 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch35, i64 %conv36)
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call37, i32 0, i32 1
  %27 = load float, float* %i, align 4
  %m_ppcpFilters38 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %28 = load i32, i32* %niEar, align 4
  %idxprom39 = zext i32 %28 to i64
  %arrayidx40 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters38, i64 0, i64 %idxprom39
  %29 = load i32, i32* %niChannel, align 4
  %conv41 = zext i32 %29 to i64
  %call42 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx40, i64 %conv41) #3
  %30 = load i32, i32* %ni, align 4
  %conv43 = zext i32 %30 to i64
  %call44 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call42, i64 %conv43)
  %i45 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call44, i32 0, i32 1
  %31 = load float, float* %i45, align 4
  %mul46 = fmul float %27, %31
  %sub47 = fsub float %mul34, %mul46
  %r48 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 0
  store float %sub47, float* %r48, align 4
  %m_pcpScratch49 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %32 = load i32, i32* %ni, align 4
  %conv50 = zext i32 %32 to i64
  %call51 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch49, i64 %conv50)
  %r52 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call51, i32 0, i32 0
  %33 = load float, float* %r52, align 4
  %m_ppcpFilters53 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %34 = load i32, i32* %niEar, align 4
  %idxprom54 = zext i32 %34 to i64
  %arrayidx55 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters53, i64 0, i64 %idxprom54
  %35 = load i32, i32* %niChannel, align 4
  %conv56 = zext i32 %35 to i64
  %call57 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx55, i64 %conv56) #3
  %36 = load i32, i32* %ni, align 4
  %conv58 = zext i32 %36 to i64
  %call59 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call57, i64 %conv58)
  %i60 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call59, i32 0, i32 1
  %37 = load float, float* %i60, align 4
  %mul61 = fmul float %33, %37
  %m_pcpScratch62 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %38 = load i32, i32* %ni, align 4
  %conv63 = zext i32 %38 to i64
  %call64 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch62, i64 %conv63)
  %i65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call64, i32 0, i32 1
  %39 = load float, float* %i65, align 4
  %m_ppcpFilters66 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %40 = load i32, i32* %niEar, align 4
  %idxprom67 = zext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters66, i64 0, i64 %idxprom67
  %41 = load i32, i32* %niChannel, align 4
  %conv69 = zext i32 %41 to i64
  %call70 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx68, i64 %conv69) #3
  %42 = load i32, i32* %ni, align 4
  %conv71 = zext i32 %42 to i64
  %call72 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call70, i64 %conv71)
  %r73 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call72, i32 0, i32 0
  %43 = load float, float* %r73, align 4
  %mul74 = fmul float %39, %43
  %add = fadd float %mul61, %mul74
  %i75 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 1
  store float %add, float* %i75, align 4
  %m_pcpScratch76 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %44 = load i32, i32* %ni, align 4
  %conv77 = zext i32 %44 to i64
  %call78 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch76, i64 %conv77)
  %45 = bitcast %struct.kiss_fft_cpx* %call78 to i8*
  %46 = bitcast %struct.kiss_fft_cpx* %cpTemp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body25
  %47 = load i32, i32* %ni, align 4
  %inc = add i32 %47, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond23

for.end:                                          ; preds = %for.cond23
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 9
  %call79 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pIFFT_cfg) #3
  %m_pcpScratch80 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %call81 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch80) #3
  %m_pfScratchBufferB82 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call83 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB82) #3
  call void @kiss_fftri(%struct.kiss_fftr_state* %call79, %struct.kiss_fft_cpx* %call81, float* %call83)
  store i32 0, i32* %ni, align 4
  br label %for.cond84

for.cond84:                                       ; preds = %for.inc95, %for.end
  %48 = load i32, i32* %ni, align 4
  %m_nFFTSize85 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %49 = load i32, i32* %m_nFFTSize85, align 8
  %cmp86 = icmp ult i32 %48, %49
  br i1 %cmp86, label %for.body87, label %for.end97

for.body87:                                       ; preds = %for.cond84
  %m_pfScratchBufferB88 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %50 = load i32, i32* %ni, align 4
  %conv89 = zext i32 %50 to i64
  %call90 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB88, i64 %conv89) #3
  %51 = load float, float* %call90, align 4
  %m_pfScratchBufferA91 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %52 = load i32, i32* %ni, align 4
  %conv92 = zext i32 %52 to i64
  %call93 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA91, i64 %conv92) #3
  %53 = load float, float* %call93, align 4
  %add94 = fadd float %53, %51
  store float %add94, float* %call93, align 4
  br label %for.inc95

for.inc95:                                        ; preds = %for.body87
  %54 = load i32, i32* %ni, align 4
  %inc96 = add i32 %54, 1
  store i32 %inc96, i32* %ni, align 4
  br label %for.cond84

for.end97:                                        ; preds = %for.cond84
  store i32 0, i32* %ni, align 4
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc127, %for.end97
  %55 = load i32, i32* %ni, align 4
  %m_nFFTSize99 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %56 = load i32, i32* %m_nFFTSize99, align 8
  %cmp100 = icmp ult i32 %55, %56
  br i1 %cmp100, label %for.body101, label %for.end129

for.body101:                                      ; preds = %for.cond98
  %57 = load i32, i32* %niChannel, align 4
  %cmp102 = icmp eq i32 %57, 1
  br i1 %cmp102, label %if.then112, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body101
  %58 = load i32, i32* %niChannel, align 4
  %cmp103 = icmp eq i32 %58, 4
  br i1 %cmp103, label %if.then112, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %lor.lhs.false
  %59 = load i32, i32* %niChannel, align 4
  %cmp105 = icmp eq i32 %59, 5
  br i1 %cmp105, label %if.then112, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %lor.lhs.false104
  %60 = load i32, i32* %niChannel, align 4
  %cmp107 = icmp eq i32 %60, 9
  br i1 %cmp107, label %if.then112, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false106
  %61 = load i32, i32* %niChannel, align 4
  %cmp109 = icmp eq i32 %61, 10
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false108
  %62 = load i32, i32* %niChannel, align 4
  %cmp111 = icmp eq i32 %62, 11
  br i1 %cmp111, label %if.then112, label %if.else

if.then112:                                       ; preds = %lor.lhs.false110, %lor.lhs.false108, %lor.lhs.false106, %lor.lhs.false104, %lor.lhs.false, %for.body101
  %m_pfScratchBufferB113 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %63 = load i32, i32* %ni, align 4
  %conv114 = zext i32 %63 to i64
  %call115 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB113, i64 %conv114) #3
  %64 = load float, float* %call115, align 4
  %m_pfScratchBufferC116 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %65 = load i32, i32* %ni, align 4
  %conv117 = zext i32 %65 to i64
  %call118 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferC116, i64 %conv117) #3
  %66 = load float, float* %call118, align 4
  %sub119 = fsub float %66, %64
  store float %sub119, float* %call118, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false110
  %m_pfScratchBufferB120 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %67 = load i32, i32* %ni, align 4
  %conv121 = zext i32 %67 to i64
  %call122 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB120, i64 %conv121) #3
  %68 = load float, float* %call122, align 4
  %m_pfScratchBufferC123 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %69 = load i32, i32* %ni, align 4
  %conv124 = zext i32 %69 to i64
  %call125 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferC123, i64 %conv124) #3
  %70 = load float, float* %call125, align 4
  %add126 = fadd float %70, %68
  store float %add126, float* %call125, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then112
  br label %for.inc127

for.inc127:                                       ; preds = %if.end
  %71 = load i32, i32* %ni, align 4
  %inc128 = add i32 %71, 1
  store i32 %inc128, i32* %ni, align 4
  br label %for.cond98

for.end129:                                       ; preds = %for.cond98
  br label %for.inc130

for.inc130:                                       ; preds = %for.end129
  %72 = load i32, i32* %niChannel, align 4
  %inc131 = add i32 %72, 1
  store i32 %inc131, i32* %niChannel, align 4
  br label %for.cond

for.end132:                                       ; preds = %for.cond
  store i32 0, i32* %ni, align 4
  br label %for.cond133

for.cond133:                                      ; preds = %for.inc146, %for.end132
  %73 = load i32, i32* %ni, align 4
  %m_nFFTSize134 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %74 = load i32, i32* %m_nFFTSize134, align 8
  %cmp135 = icmp ult i32 %73, %74
  br i1 %cmp135, label %for.body136, label %for.end148

for.body136:                                      ; preds = %for.cond133
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 6
  %75 = load float, float* %m_fFFTScaler, align 8
  %m_pfScratchBufferA137 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %76 = load i32, i32* %ni, align 4
  %conv138 = zext i32 %76 to i64
  %call139 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA137, i64 %conv138) #3
  %77 = load float, float* %call139, align 4
  %mul140 = fmul float %77, %75
  store float %mul140, float* %call139, align 4
  %m_fFFTScaler141 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 6
  %78 = load float, float* %m_fFFTScaler141, align 8
  %m_pfScratchBufferC142 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %79 = load i32, i32* %ni, align 4
  %conv143 = zext i32 %79 to i64
  %call144 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferC142, i64 %conv143) #3
  %80 = load float, float* %call144, align 4
  %mul145 = fmul float %80, %78
  store float %mul145, float* %call144, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body136
  %81 = load i32, i32* %ni, align 4
  %inc147 = add i32 %81, 1
  store i32 %inc147, i32* %ni, align 4
  br label %for.cond133

for.end148:                                       ; preds = %for.cond133
  %82 = load float**, float*** %ppfDst.addr, align 8
  %arrayidx149 = getelementptr inbounds float*, float** %82, i64 0
  %83 = load float*, float** %arrayidx149, align 8
  %84 = bitcast float* %83 to i8*
  %m_pfScratchBufferA150 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call151 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA150) #3
  %85 = bitcast float* %call151 to i8*
  %m_nBlockSize152 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %86 = load i32, i32* %m_nBlockSize152, align 8
  %conv153 = zext i32 %86 to i64
  %mul154 = mul i64 %conv153, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 %mul154, i1 false)
  %87 = load float**, float*** %ppfDst.addr, align 8
  %arrayidx155 = getelementptr inbounds float*, float** %87, i64 1
  %88 = load float*, float** %arrayidx155, align 8
  %89 = bitcast float* %88 to i8*
  %m_pfScratchBufferC156 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %call157 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferC156) #3
  %90 = bitcast float* %call157 to i8*
  %m_nBlockSize158 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %91 = load i32, i32* %m_nBlockSize158, align 8
  %conv159 = zext i32 %91 to i64
  %mul160 = mul i64 %conv159, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 %mul160, i1 false)
  store i32 0, i32* %ni, align 4
  br label %for.cond161

for.cond161:                                      ; preds = %for.inc179, %for.end148
  %92 = load i32, i32* %ni, align 4
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %93 = load i32, i32* %m_nOverlapLength, align 4
  %cmp162 = icmp ult i32 %92, %93
  br i1 %cmp162, label %for.body163, label %for.end181

for.body163:                                      ; preds = %for.cond161
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx164 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i64 0, i64 0
  %94 = load i32, i32* %ni, align 4
  %conv165 = zext i32 %94 to i64
  %call166 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %arrayidx164, i64 %conv165) #3
  %95 = load float, float* %call166, align 4
  %96 = load float**, float*** %ppfDst.addr, align 8
  %arrayidx167 = getelementptr inbounds float*, float** %96, i64 0
  %97 = load float*, float** %arrayidx167, align 8
  %98 = load i32, i32* %ni, align 4
  %idxprom168 = zext i32 %98 to i64
  %arrayidx169 = getelementptr inbounds float, float* %97, i64 %idxprom168
  %99 = load float, float* %arrayidx169, align 4
  %add170 = fadd float %99, %95
  store float %add170, float* %arrayidx169, align 4
  %m_pfOverlap171 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx172 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap171, i64 0, i64 1
  %100 = load i32, i32* %ni, align 4
  %conv173 = zext i32 %100 to i64
  %call174 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %arrayidx172, i64 %conv173) #3
  %101 = load float, float* %call174, align 4
  %102 = load float**, float*** %ppfDst.addr, align 8
  %arrayidx175 = getelementptr inbounds float*, float** %102, i64 1
  %103 = load float*, float** %arrayidx175, align 8
  %104 = load i32, i32* %ni, align 4
  %idxprom176 = zext i32 %104 to i64
  %arrayidx177 = getelementptr inbounds float, float* %103, i64 %idxprom176
  %105 = load float, float* %arrayidx177, align 4
  %add178 = fadd float %105, %101
  store float %add178, float* %arrayidx177, align 4
  br label %for.inc179

for.inc179:                                       ; preds = %for.body163
  %106 = load i32, i32* %ni, align 4
  %inc180 = add i32 %106, 1
  store i32 %inc180, i32* %ni, align 4
  br label %for.cond161

for.end181:                                       ; preds = %for.cond161
  %m_pfOverlap182 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx183 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap182, i64 0, i64 0
  %call184 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx183) #3
  %107 = bitcast float* %call184 to i8*
  %m_pfScratchBufferA185 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %m_nBlockSize186 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %108 = load i32, i32* %m_nBlockSize186, align 8
  %conv187 = zext i32 %108 to i64
  %call188 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA185, i64 %conv187) #3
  %109 = bitcast float* %call188 to i8*
  %m_nOverlapLength189 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %110 = load i32, i32* %m_nOverlapLength189, align 4
  %conv190 = zext i32 %110 to i64
  %mul191 = mul i64 %conv190, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %mul191, i1 false)
  %m_pfOverlap192 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx193 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap192, i64 0, i64 1
  %call194 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx193) #3
  %111 = bitcast float* %call194 to i8*
  %m_pfScratchBufferC195 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %m_nBlockSize196 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %112 = load i32, i32* %m_nBlockSize196, align 8
  %conv197 = zext i32 %112 to i64
  %call198 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferC195, i64 %conv197) #3
  %113 = bitcast float* %call198 to i8*
  %m_nOverlapLength199 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %114 = load i32, i32* %m_nOverlapLength199, align 4
  %conv200 = zext i32 %114 to i64
  %mul201 = mul i64 %conv200, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %113, i64 %mul201, i1 false)
  br label %if.end377

if.else202:                                       ; preds = %entry
  store i32 0, i32* %niEar, align 4
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc374, %if.else202
  %115 = load i32, i32* %niEar, align 4
  %cmp204 = icmp ult i32 %115, 2
  br i1 %cmp204, label %for.body205, label %for.end376

for.body205:                                      ; preds = %for.cond203
  %m_pfScratchBufferA206 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call207 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA206) #3
  %116 = bitcast float* %call207 to i8*
  %m_nFFTSize208 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %117 = load i32, i32* %m_nFFTSize208, align 8
  %conv209 = zext i32 %117 to i64
  %mul210 = mul i64 %conv209, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 %mul210, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond211

for.cond211:                                      ; preds = %for.inc324, %for.body205
  %118 = load i32, i32* %niChannel, align 4
  %119 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount212 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %119, i32 0, i32 4
  %120 = load i32, i32* %m_nChannelCount212, align 8
  %cmp213 = icmp ult i32 %118, %120
  br i1 %cmp213, label %for.body214, label %for.end326

for.body214:                                      ; preds = %for.cond211
  %m_pfScratchBufferB215 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call216 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB215) #3
  %121 = bitcast float* %call216 to i8*
  %122 = load %class.CBFormat*, %class.CBFormat** %pBFSrc.addr, align 8
  %m_ppfChannels217 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %122, i32 0, i32 4
  %123 = load i32, i32* %niChannel, align 4
  %conv218 = zext i32 %123 to i64
  %call219 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels217, i64 %conv218)
  %124 = load float*, float** %call219, align 8
  %125 = bitcast float* %124 to i8*
  %m_nBlockSize220 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %126 = load i32, i32* %m_nBlockSize220, align 8
  %conv221 = zext i32 %126 to i64
  %mul222 = mul i64 %conv221, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %125, i64 %mul222, i1 false)
  %m_pfScratchBufferB223 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %m_nBlockSize224 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %127 = load i32, i32* %m_nBlockSize224, align 8
  %conv225 = zext i32 %127 to i64
  %call226 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB223, i64 %conv225) #3
  %128 = bitcast float* %call226 to i8*
  %m_nFFTSize227 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %129 = load i32, i32* %m_nFFTSize227, align 8
  %m_nBlockSize228 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %130 = load i32, i32* %m_nBlockSize228, align 8
  %sub229 = sub i32 %129, %130
  %conv230 = zext i32 %sub229 to i64
  %mul231 = mul i64 %conv230, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %128, i8 0, i64 %mul231, i1 false)
  %m_pFFT_cfg232 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  %call233 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pFFT_cfg232) #3
  %m_pfScratchBufferB234 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call235 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB234) #3
  %m_pcpScratch236 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %call237 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch236) #3
  call void @kiss_fftr(%struct.kiss_fftr_state* %call233, float* %call235, %struct.kiss_fft_cpx* %call237)
  store i32 0, i32* %ni, align 4
  br label %for.cond238

for.cond238:                                      ; preds = %for.inc301, %for.body214
  %131 = load i32, i32* %ni, align 4
  %m_nFFTBins239 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  %132 = load i32, i32* %m_nFFTBins239, align 4
  %cmp240 = icmp ult i32 %131, %132
  br i1 %cmp240, label %for.body241, label %for.end303

for.body241:                                      ; preds = %for.cond238
  %m_pcpScratch242 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %133 = load i32, i32* %ni, align 4
  %conv243 = zext i32 %133 to i64
  %call244 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch242, i64 %conv243)
  %r245 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call244, i32 0, i32 0
  %134 = load float, float* %r245, align 4
  %m_ppcpFilters246 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %135 = load i32, i32* %niEar, align 4
  %idxprom247 = zext i32 %135 to i64
  %arrayidx248 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters246, i64 0, i64 %idxprom247
  %136 = load i32, i32* %niChannel, align 4
  %conv249 = zext i32 %136 to i64
  %call250 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx248, i64 %conv249) #3
  %137 = load i32, i32* %ni, align 4
  %conv251 = zext i32 %137 to i64
  %call252 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call250, i64 %conv251)
  %r253 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call252, i32 0, i32 0
  %138 = load float, float* %r253, align 4
  %mul254 = fmul float %134, %138
  %m_pcpScratch255 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %139 = load i32, i32* %ni, align 4
  %conv256 = zext i32 %139 to i64
  %call257 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch255, i64 %conv256)
  %i258 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call257, i32 0, i32 1
  %140 = load float, float* %i258, align 4
  %m_ppcpFilters259 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %141 = load i32, i32* %niEar, align 4
  %idxprom260 = zext i32 %141 to i64
  %arrayidx261 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters259, i64 0, i64 %idxprom260
  %142 = load i32, i32* %niChannel, align 4
  %conv262 = zext i32 %142 to i64
  %call263 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx261, i64 %conv262) #3
  %143 = load i32, i32* %ni, align 4
  %conv264 = zext i32 %143 to i64
  %call265 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call263, i64 %conv264)
  %i266 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call265, i32 0, i32 1
  %144 = load float, float* %i266, align 4
  %mul267 = fmul float %140, %144
  %sub268 = fsub float %mul254, %mul267
  %r269 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 0
  store float %sub268, float* %r269, align 4
  %m_pcpScratch270 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %145 = load i32, i32* %ni, align 4
  %conv271 = zext i32 %145 to i64
  %call272 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch270, i64 %conv271)
  %r273 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call272, i32 0, i32 0
  %146 = load float, float* %r273, align 4
  %m_ppcpFilters274 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %147 = load i32, i32* %niEar, align 4
  %idxprom275 = zext i32 %147 to i64
  %arrayidx276 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters274, i64 0, i64 %idxprom275
  %148 = load i32, i32* %niChannel, align 4
  %conv277 = zext i32 %148 to i64
  %call278 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx276, i64 %conv277) #3
  %149 = load i32, i32* %ni, align 4
  %conv279 = zext i32 %149 to i64
  %call280 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call278, i64 %conv279)
  %i281 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call280, i32 0, i32 1
  %150 = load float, float* %i281, align 4
  %mul282 = fmul float %146, %150
  %m_pcpScratch283 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %151 = load i32, i32* %ni, align 4
  %conv284 = zext i32 %151 to i64
  %call285 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch283, i64 %conv284)
  %i286 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call285, i32 0, i32 1
  %152 = load float, float* %i286, align 4
  %m_ppcpFilters287 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %153 = load i32, i32* %niEar, align 4
  %idxprom288 = zext i32 %153 to i64
  %arrayidx289 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters287, i64 0, i64 %idxprom288
  %154 = load i32, i32* %niChannel, align 4
  %conv290 = zext i32 %154 to i64
  %call291 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx289, i64 %conv290) #3
  %155 = load i32, i32* %ni, align 4
  %conv292 = zext i32 %155 to i64
  %call293 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call291, i64 %conv292)
  %r294 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call293, i32 0, i32 0
  %156 = load float, float* %r294, align 4
  %mul295 = fmul float %152, %156
  %add296 = fadd float %mul282, %mul295
  %i297 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 1
  store float %add296, float* %i297, align 4
  %m_pcpScratch298 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %157 = load i32, i32* %ni, align 4
  %conv299 = zext i32 %157 to i64
  %call300 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch298, i64 %conv299)
  %158 = bitcast %struct.kiss_fft_cpx* %call300 to i8*
  %159 = bitcast %struct.kiss_fft_cpx* %cpTemp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %158, i8* align 4 %159, i64 8, i1 false)
  br label %for.inc301

for.inc301:                                       ; preds = %for.body241
  %160 = load i32, i32* %ni, align 4
  %inc302 = add i32 %160, 1
  store i32 %inc302, i32* %ni, align 4
  br label %for.cond238

for.end303:                                       ; preds = %for.cond238
  %m_pIFFT_cfg304 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 9
  %call305 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pIFFT_cfg304) #3
  %m_pcpScratch306 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %call307 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch306) #3
  %m_pfScratchBufferB308 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %call309 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB308) #3
  call void @kiss_fftri(%struct.kiss_fftr_state* %call305, %struct.kiss_fft_cpx* %call307, float* %call309)
  store i32 0, i32* %ni, align 4
  br label %for.cond310

for.cond310:                                      ; preds = %for.inc321, %for.end303
  %161 = load i32, i32* %ni, align 4
  %m_nFFTSize311 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %162 = load i32, i32* %m_nFFTSize311, align 8
  %cmp312 = icmp ult i32 %161, %162
  br i1 %cmp312, label %for.body313, label %for.end323

for.body313:                                      ; preds = %for.cond310
  %m_pfScratchBufferB314 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %163 = load i32, i32* %ni, align 4
  %conv315 = zext i32 %163 to i64
  %call316 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB314, i64 %conv315) #3
  %164 = load float, float* %call316, align 4
  %m_pfScratchBufferA317 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %165 = load i32, i32* %ni, align 4
  %conv318 = zext i32 %165 to i64
  %call319 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA317, i64 %conv318) #3
  %166 = load float, float* %call319, align 4
  %add320 = fadd float %166, %164
  store float %add320, float* %call319, align 4
  br label %for.inc321

for.inc321:                                       ; preds = %for.body313
  %167 = load i32, i32* %ni, align 4
  %inc322 = add i32 %167, 1
  store i32 %inc322, i32* %ni, align 4
  br label %for.cond310

for.end323:                                       ; preds = %for.cond310
  br label %for.inc324

for.inc324:                                       ; preds = %for.end323
  %168 = load i32, i32* %niChannel, align 4
  %inc325 = add i32 %168, 1
  store i32 %inc325, i32* %niChannel, align 4
  br label %for.cond211

for.end326:                                       ; preds = %for.cond211
  store i32 0, i32* %ni, align 4
  br label %for.cond327

for.cond327:                                      ; preds = %for.inc336, %for.end326
  %169 = load i32, i32* %ni, align 4
  %m_nFFTSize328 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %170 = load i32, i32* %m_nFFTSize328, align 8
  %cmp329 = icmp ult i32 %169, %170
  br i1 %cmp329, label %for.body330, label %for.end338

for.body330:                                      ; preds = %for.cond327
  %m_fFFTScaler331 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 6
  %171 = load float, float* %m_fFFTScaler331, align 8
  %m_pfScratchBufferA332 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %172 = load i32, i32* %ni, align 4
  %conv333 = zext i32 %172 to i64
  %call334 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA332, i64 %conv333) #3
  %173 = load float, float* %call334, align 4
  %mul335 = fmul float %173, %171
  store float %mul335, float* %call334, align 4
  br label %for.inc336

for.inc336:                                       ; preds = %for.body330
  %174 = load i32, i32* %ni, align 4
  %inc337 = add i32 %174, 1
  store i32 %inc337, i32* %ni, align 4
  br label %for.cond327

for.end338:                                       ; preds = %for.cond327
  %175 = load float**, float*** %ppfDst.addr, align 8
  %176 = load i32, i32* %niEar, align 4
  %idxprom339 = zext i32 %176 to i64
  %arrayidx340 = getelementptr inbounds float*, float** %175, i64 %idxprom339
  %177 = load float*, float** %arrayidx340, align 8
  %178 = bitcast float* %177 to i8*
  %m_pfScratchBufferA341 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %call342 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA341) #3
  %179 = bitcast float* %call342 to i8*
  %m_nBlockSize343 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %180 = load i32, i32* %m_nBlockSize343, align 8
  %conv344 = zext i32 %180 to i64
  %mul345 = mul i64 %conv344, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 %mul345, i1 false)
  store i32 0, i32* %ni, align 4
  br label %for.cond346

for.cond346:                                      ; preds = %for.inc360, %for.end338
  %181 = load i32, i32* %ni, align 4
  %m_nOverlapLength347 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %182 = load i32, i32* %m_nOverlapLength347, align 4
  %cmp348 = icmp ult i32 %181, %182
  br i1 %cmp348, label %for.body349, label %for.end362

for.body349:                                      ; preds = %for.cond346
  %m_pfOverlap350 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %183 = load i32, i32* %niEar, align 4
  %idxprom351 = zext i32 %183 to i64
  %arrayidx352 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap350, i64 0, i64 %idxprom351
  %184 = load i32, i32* %ni, align 4
  %conv353 = zext i32 %184 to i64
  %call354 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %arrayidx352, i64 %conv353) #3
  %185 = load float, float* %call354, align 4
  %186 = load float**, float*** %ppfDst.addr, align 8
  %187 = load i32, i32* %niEar, align 4
  %idxprom355 = zext i32 %187 to i64
  %arrayidx356 = getelementptr inbounds float*, float** %186, i64 %idxprom355
  %188 = load float*, float** %arrayidx356, align 8
  %189 = load i32, i32* %ni, align 4
  %idxprom357 = zext i32 %189 to i64
  %arrayidx358 = getelementptr inbounds float, float* %188, i64 %idxprom357
  %190 = load float, float* %arrayidx358, align 4
  %add359 = fadd float %190, %185
  store float %add359, float* %arrayidx358, align 4
  br label %for.inc360

for.inc360:                                       ; preds = %for.body349
  %191 = load i32, i32* %ni, align 4
  %inc361 = add i32 %191, 1
  store i32 %inc361, i32* %ni, align 4
  br label %for.cond346

for.end362:                                       ; preds = %for.cond346
  %m_pfOverlap363 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %192 = load i32, i32* %niEar, align 4
  %idxprom364 = zext i32 %192 to i64
  %arrayidx365 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap363, i64 0, i64 %idxprom364
  %call366 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx365) #3
  %193 = bitcast float* %call366 to i8*
  %m_pfScratchBufferA367 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %m_nBlockSize368 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 2
  %194 = load i32, i32* %m_nBlockSize368, align 8
  %conv369 = zext i32 %194 to i64
  %call370 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA367, i64 %conv369) #3
  %195 = bitcast float* %call370 to i8*
  %m_nOverlapLength371 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %196 = load i32, i32* %m_nOverlapLength371, align 4
  %conv372 = zext i32 %196 to i64
  %mul373 = mul i64 %conv372, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %195, i64 %mul373, i1 false)
  br label %for.inc374

for.inc374:                                       ; preds = %for.end362
  %197 = load i32, i32* %niEar, align 4
  %inc375 = add i32 %197, 1
  store i32 %inc375, i32* %niEar, align 4
  br label %for.cond203

for.end376:                                       ; preds = %for.cond203
  br label %if.end377

if.end377:                                        ; preds = %for.end376, %for.end181
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %this, i64 %__i) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__i.addr = alloca i64, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  store i64 %__i, i64* %__i.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %call = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %this1) #3
  %0 = load i64, i64* %__i.addr, align 8
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call, i64 %0
  ret %struct.kiss_fft_cpx* %arrayidx
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %nSpeakerSetUp = alloca i32, align 4
  %nSpeakers = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %0, i32 0, i32 1
  %1 = load i32, i32* %m_nOrder, align 8
  %2 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %2, i32 0, i32 2
  %3 = load i8, i8* %m_b3D, align 4
  %tobool = trunc i8 %3 to i1
  %call = call i32 @_Z15OrderToSpeakersjb(i32 %1, i1 zeroext %tobool)
  store i32 %call, i32* %nSpeakers, align 4
  %4 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nOrder2 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 1
  %5 = load i32, i32* %m_nOrder2, align 8
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %call4 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call3, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 13, i32* %nSpeakerSetUp, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %call5 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0))
  %call6 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call5, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 12, i32* %nSpeakerSetUp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  %6 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nOrder7 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %6, i32 0, i32 1
  %7 = load i32, i32* %m_nOrder7, align 8
  %8 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_b3D8 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 2
  %9 = load i8, i8* %m_b3D8, align 4
  %tobool9 = trunc i8 %9 to i1
  %10 = load i32, i32* %nSpeakerSetUp, align 4
  %11 = load i32, i32* %nSpeakers, align 4
  %call10 = call zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %m_AmbDecoder, i32 %7, i1 zeroext %tobool9, i32 %10, i32 %11)
  %m_AmbDecoder11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  call void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* %m_AmbDecoder11)
  ret void
}

declare dso_local i32 @_Z15OrderToSpeakersjb(i32, i1 zeroext) #1

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4HRTF8isLoadedEv(%class.HRTF* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %class.HRTF*, align 8
  store %class.HRTF* %this, %class.HRTF** %this.addr, align 8
  %this1 = load %class.HRTF*, %class.HRTF** %this.addr, align 8
  %i_len = getelementptr inbounds %class.HRTF, %class.HRTF* %this1, i32 0, i32 2
  %0 = load i32, i32* %i_len, align 4
  %cmp = icmp ne i32 %0, 0
  ret i1 %cmp
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #4 align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %niEar = alloca i32, align 4
  %niChannel = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %0 = load i32, i32* %m_nFFTSize, align 8
  %conv = zext i32 %0 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %m_pfScratchBufferA, i64 %conv)
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  %m_nFFTSize2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %1 = load i32, i32* %m_nFFTSize2, align 8
  %conv3 = zext i32 %1 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %m_pfScratchBufferB, i64 %conv3)
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  %m_nFFTSize4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %2 = load i32, i32* %m_nFFTSize4, align 8
  %conv5 = zext i32 %2 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %m_pfScratchBufferC, i64 %conv5)
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i64 0, i64 0
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %3 = load i32, i32* %m_nOverlapLength, align 4
  %conv6 = zext i32 %3 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %arrayidx, i64 %conv6)
  %m_pfOverlap7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %arrayidx8 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap7, i64 0, i64 1
  %m_nOverlapLength9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 7
  %4 = load i32, i32* %m_nOverlapLength9, align 4
  %conv10 = zext i32 %4 to i64
  call void @_ZNSt6vectorIfSaIfEE6resizeEm(%"class.std::vector.0"* %arrayidx8, i64 %conv10)
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  %m_nFFTSize11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %5 = load i32, i32* %m_nFFTSize11, align 8
  %call = call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %5, i32 0, i8* null, i64* null)
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_(%"class.std::unique_ptr.20"* %m_pFFT_cfg, %struct.kiss_fftr_state* %call) #3
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 9
  %m_nFFTSize12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 4
  %6 = load i32, i32* %m_nFFTSize12, align 8
  %call13 = call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %6, i32 1, i8* null, i64* null)
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_(%"class.std::unique_ptr.20"* %m_pIFFT_cfg, %struct.kiss_fftr_state* %call13) #3
  store i32 0, i32* %niEar, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc27, %entry
  %7 = load i32, i32* %niEar, align 4
  %cmp = icmp ult i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end29

for.body:                                         ; preds = %for.cond
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %8 = load i32, i32* %niEar, align 4
  %idxprom = zext i32 %8 to i64
  %arrayidx14 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i64 0, i64 %idxprom
  %9 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %9, i32 0, i32 4
  %10 = load i32, i32* %m_nChannelCount, align 8
  %conv15 = zext i32 %10 to i64
  call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm(%"class.std::vector.26"* %arrayidx14, i64 %conv15)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %niChannel, align 4
  %12 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  %m_nChannelCount17 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %12, i32 0, i32 4
  %13 = load i32, i32* %m_nChannelCount17, align 8
  %cmp18 = icmp ult i32 %11, %13
  br i1 %cmp18, label %for.body19, label %for.end

for.body19:                                       ; preds = %for.cond16
  %m_ppcpFilters20 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %14 = load i32, i32* %niEar, align 4
  %idxprom21 = zext i32 %14 to i64
  %arrayidx22 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters20, i64 0, i64 %idxprom21
  %15 = load i32, i32* %niChannel, align 4
  %conv23 = zext i32 %15 to i64
  %call24 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx22, i64 %conv23) #3
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  %16 = load i32, i32* %m_nFFTBins, align 4
  %conv25 = zext i32 %16 to i64
  %17 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv25, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %call26 = call i8* @_Znam(i64 %20) #18
  %21 = bitcast i8* %call26 to %struct.kiss_fft_cpx*
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_(%"class.std::unique_ptr.31"* %call24, %struct.kiss_fft_cpx* %21) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body19
  %22 = load i32, i32* %niChannel, align 4
  %inc = add i32 %22, 1
  store i32 %inc, i32* %niChannel, align 4
  br label %for.cond16

for.end:                                          ; preds = %for.cond16
  br label %for.inc27

for.inc27:                                        ; preds = %for.end
  %23 = load i32, i32* %niEar, align 4
  %inc28 = add i32 %23, 1
  store i32 %inc28, i32* %niEar, align 4
  br label %for.cond

for.end29:                                        ; preds = %for.cond
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  %m_nFFTBins30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 5
  %24 = load i32, i32* %m_nFFTBins30, align 4
  %conv31 = zext i32 %24 to i64
  %25 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv31, i64 8)
  %26 = extractvalue { i64, i1 } %25, 1
  %27 = extractvalue { i64, i1 } %25, 0
  %28 = select i1 %26, i64 -1, i64 %27
  %call32 = call i8* @_Znam(i64 %28) #18
  %29 = bitcast i8* %call32 to %struct.kiss_fft_cpx*
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_(%"class.std::unique_ptr.31"* %m_pcpScratch, %struct.kiss_fft_cpx* %29) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_(%"class.std::unique_ptr.20"* %this, %struct.kiss_fftr_state* %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.20"*, align 8
  %__p.addr = alloca %struct.kiss_fftr_state*, align 8
  store %"class.std::unique_ptr.20"* %this, %"class.std::unique_ptr.20"** %this.addr, align 8
  store %struct.kiss_fftr_state* %__p, %struct.kiss_fftr_state** %__p.addr, align 8
  %this1 = load %"class.std::unique_ptr.20"*, %"class.std::unique_ptr.20"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.21"* dereferenceable(16) %_M_t) #3
  call void @_ZSt4swapIP15kiss_fftr_stateEvRT_S3_(%struct.kiss_fftr_state** dereferenceable(8) %call, %struct.kiss_fftr_state** dereferenceable(8) %__p.addr) #3
  %0 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %__p.addr, align 8
  %cmp = icmp ne %struct.kiss_fftr_state* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(8) void (i8*)** @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE11get_deleterEv(%"class.std::unique_ptr.20"* %this1) #3
  %1 = load void (i8*)*, void (i8*)** %call2, align 8
  %2 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %__p.addr, align 8
  %3 = bitcast %struct.kiss_fftr_state* %2 to i8*
  invoke void %1(i8* %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm(%"class.std::vector.26"* %this, i64 %__new_size) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %__new_size.addr = alloca i64, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  store i64 %__new_size, i64* %__new_size.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = load i64, i64* %__new_size.addr, align 8
  %call = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %__new_size.addr, align 8
  %call2 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %sub = sub i64 %1, %call2
  call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* %this1, i64 %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load i64, i64* %__new_size.addr, align 8
  %call3 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %cmp4 = icmp ult i64 %2, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %3 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %3, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %5 = load i64, i64* %__new_size.addr, align 8
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %4, i64 %5
  call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector.26"* %this1, %"class.std::unique_ptr.31"* %add.ptr) #3
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_(%"class.std::unique_ptr.31"* %this, %struct.kiss_fft_cpx* %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__p.addr = alloca %struct.kiss_fft_cpx*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  store %struct.kiss_fft_cpx* %__p, %struct.kiss_fft_cpx** %__p.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %_M_t) #3
  call void @_ZSt4swapIP12kiss_fft_cpxEvRT_S3_(%struct.kiss_fft_cpx** dereferenceable(8) %call, %struct.kiss_fft_cpx** dereferenceable(8) %__p.addr) #3
  %0 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %__p.addr, align 8
  %cmp = icmp ne %struct.kiss_fft_cpx* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr.31"* %this1) #3
  %1 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %__p.addr, align 8
  invoke void @_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_(%"struct.std::default_delete.36"* %call2, %struct.kiss_fft_cpx* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* %this, %"class.std::__cxx11::basic_string"* %srcFilename, i32 %nOrder, i1 zeroext %b3D) unnamed_addr #11 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  %nOrder.addr = alloca i32, align 4
  %b3D.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %temp = alloca [44 x i8], align 16
  %ok = alloca i8, align 1
  %agg.tmp = alloca %struct.PolarPoint, align 4
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  store %"class.ILLIXR_AUDIO::Sound"* %this, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  store i32 %nOrder, i32* %nOrder.addr, align 4
  %frombool = zext i1 %b3D to i8
  store i8 %frombool, i8* %b3D.addr, align 1
  %this1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 5
  store float 1.000000e+00, float* %amp, align 4
  %call = call i8* @_Znwm(i64 528) #18
  %0 = bitcast i8* %call to %"class.std::basic_fstream"*
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"* %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %srcFilename, i32 8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 0
  store %"class.std::basic_fstream"* %0, %"class.std::basic_fstream"** %srcFile, align 8
  %srcFile2 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 0
  %1 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile2, align 8
  %2 = bitcast %"class.std::basic_fstream"* %1 to %"class.std::basic_istream"*
  %arraydecay = getelementptr inbounds [44 x i8], [44 x i8]* %temp, i64 0, i64 0
  %call3 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %2, i8* %arraydecay, i64 44)
  %call4 = call i8* @_Znwm(i64 64) #18
  %3 = bitcast i8* %call4 to %class.CBFormat*
  invoke void @_ZN8CBFormatC1Ev(%class.CBFormat* %3)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %invoke.cont
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  store %class.CBFormat* %3, %class.CBFormat** %BFormat, align 8
  %BFormat7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat7, align 8
  %5 = load i32, i32* %nOrder.addr, align 4
  %6 = bitcast %class.CBFormat* %4 to i1 (%class.CBFormat*, i32, i1, i32)***
  %vtable = load i1 (%class.CBFormat*, i32, i1, i32)**, i1 (%class.CBFormat*, i32, i1, i32)*** %6, align 8
  %vfn = getelementptr inbounds i1 (%class.CBFormat*, i32, i1, i32)*, i1 (%class.CBFormat*, i32, i1, i32)** %vtable, i64 2
  %7 = load i1 (%class.CBFormat*, i32, i1, i32)*, i1 (%class.CBFormat*, i32, i1, i32)** %vfn, align 8
  %call8 = call zeroext i1 %7(%class.CBFormat* %4, i32 %5, i1 zeroext true, i32 1024)
  %frombool9 = zext i1 %call8 to i8
  store i8 %frombool9, i8* %ok, align 1
  %BFormat10 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  %8 = load %class.CBFormat*, %class.CBFormat** %BFormat10, align 8
  %9 = bitcast %class.CBFormat* %8 to void (%class.CBFormat*)***
  %vtable11 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %9, align 8
  %vfn12 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable11, i64 4
  %10 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn12, align 8
  call void %10(%class.CBFormat* %8)
  %call13 = call i8* @_Znwm(i64 136) #18
  %11 = bitcast i8* %call13 to %class.CAmbisonicEncoderDist*
  invoke void @_ZN21CAmbisonicEncoderDistC1Ev(%class.CAmbisonicEncoderDist* %11)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont6
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  store %class.CAmbisonicEncoderDist* %11, %class.CAmbisonicEncoderDist** %BEncoder, align 8
  %BEncoder16 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %12 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder16, align 8
  %13 = load i32, i32* %nOrder.addr, align 4
  %14 = bitcast %class.CAmbisonicEncoderDist* %12 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable17 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %14, align 8
  %vfn18 = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable17, i64 2
  %15 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn18, align 8
  %call19 = call zeroext i1 %15(%class.CAmbisonicEncoderDist* %12, i32 %13, i1 zeroext true, i32 48000)
  %conv = zext i1 %call19 to i32
  %16 = load i8, i8* %ok, align 1
  %tobool = trunc i8 %16 to i1
  %conv20 = zext i1 %tobool to i32
  %and = and i32 %conv20, %conv
  %tobool21 = icmp ne i32 %and, 0
  %frombool22 = zext i1 %tobool21 to i8
  store i8 %frombool22, i8* %ok, align 1
  %BEncoder23 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %17 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder23, align 8
  %18 = bitcast %class.CAmbisonicEncoderDist* %17 to void (%class.CAmbisonicEncoderDist*)***
  %vtable24 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %18, align 8
  %vfn25 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable24, i64 4
  %19 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn25, align 8
  call void %19(%class.CAmbisonicEncoderDist* %17)
  %srcPos26 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos26, i32 0, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8
  %srcPos27 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos27, i32 0, i32 1
  store float 0.000000e+00, float* %fElevation, align 4
  %srcPos28 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos28, i32 0, i32 2
  store float 0.000000e+00, float* %fDistance, align 8
  %BEncoder29 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %20 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder29, align 8
  %21 = bitcast %class.CAmbisonicEncoderDist* %20 to %class.CAmbisonicSource*
  %srcPos30 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %22 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  %23 = bitcast %struct.PolarPoint* %srcPos30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 8 %23, i64 12, i1 false)
  %24 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*
  %25 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 12, i1 false)
  %26 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = bitcast %class.CAmbisonicSource* %21 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable31 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %30, align 8
  %vfn32 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable31, i64 5
  %31 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn32, align 8
  call void %31(%class.CAmbisonicSource* %21, <2 x float> %27, float %29)
  %BEncoder33 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %32 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder33, align 8
  %33 = bitcast %class.CAmbisonicEncoderDist* %32 to void (%class.CAmbisonicEncoderDist*)***
  %vtable34 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %33, align 8
  %vfn35 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable34, i64 4
  %34 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn35, align 8
  call void %34(%class.CAmbisonicEncoderDist* %32)
  ret void

lpad:                                             ; preds = %entry
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %exn.slot, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #19
  br label %eh.resume

lpad5:                                            ; preds = %invoke.cont
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %exn.slot, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call4) #19
  br label %eh.resume

lpad14:                                           ; preds = %invoke.cont6
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %exn.slot, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call13) #19
  br label %eh.resume

eh.resume:                                        ; preds = %lpad14, %lpad5, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val36 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val36
}

declare dso_local void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #1

declare dso_local dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) #1

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* %this, %struct.PolarPoint* dereferenceable(12) %pos) #11 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  %pos.addr = alloca %struct.PolarPoint*, align 8
  %agg.tmp = alloca %struct.PolarPoint, align 4
  %agg.tmp.coerce = alloca { <2 x float>, float }, align 4
  store %"class.ILLIXR_AUDIO::Sound"* %this, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  store %struct.PolarPoint* %pos, %struct.PolarPoint** %pos.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %0 = load %struct.PolarPoint*, %struct.PolarPoint** %pos.addr, align 8
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %0, i32 0, i32 0
  %1 = load float, float* %fAzimuth, align 4
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fAzimuth2 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos, i32 0, i32 0
  store float %1, float* %fAzimuth2, align 8
  %2 = load %struct.PolarPoint*, %struct.PolarPoint** %pos.addr, align 8
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %2, i32 0, i32 1
  %3 = load float, float* %fElevation, align 4
  %srcPos3 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fElevation4 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos3, i32 0, i32 1
  store float %3, float* %fElevation4, align 4
  %4 = load %struct.PolarPoint*, %struct.PolarPoint** %pos.addr, align 8
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %4, i32 0, i32 2
  %5 = load float, float* %fDistance, align 4
  %srcPos5 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %fDistance6 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %srcPos5, i32 0, i32 2
  store float %5, float* %fDistance6, align 8
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %6 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8
  %7 = bitcast %class.CAmbisonicEncoderDist* %6 to %class.CAmbisonicSource*
  %srcPos7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 4
  %8 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  %9 = bitcast %struct.PolarPoint* %srcPos7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 12, i1 false)
  %10 = bitcast { <2 x float>, float }* %agg.tmp.coerce to i8*
  %11 = bitcast %struct.PolarPoint* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 12, i1 false)
  %12 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 0
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds { <2 x float>, float }, { <2 x float>, float }* %agg.tmp.coerce, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = bitcast %class.CAmbisonicSource* %7 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %16, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %17 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  call void %17(%class.CAmbisonicSource* %7, <2 x float> %13, float %15)
  %BEncoder8 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %18 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder8, align 8
  %19 = bitcast %class.CAmbisonicEncoderDist* %18 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %19, align 8
  %vfn10 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9, i64 4
  %20 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10, align 8
  call void %20(%class.CAmbisonicEncoderDist* %18)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf(%"class.ILLIXR_AUDIO::Sound"* %this, float %ampScale) #5 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  %ampScale.addr = alloca float, align 4
  store %"class.ILLIXR_AUDIO::Sound"* %this, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  store float %ampScale, float* %ampScale.addr, align 4
  %this1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %0 = load float, float* %ampScale.addr, align 4
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 5
  store float %0, float* %amp, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* %this) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  %sampleTemp = alloca [1024 x i16], align 16
  %i = alloca i32, align 4
  store %"class.ILLIXR_AUDIO::Sound"* %this, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8
  %1 = bitcast %"class.std::basic_fstream"* %0 to %"class.std::basic_istream"*
  %arraydecay = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 0
  %2 = bitcast i16* %arraydecay to i8*
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %1, i8* %2, i64 2048)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %3, 1024
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 5
  %4 = load float, float* %amp, align 4
  %conv = fpext float %4 to double
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %idxprom
  %6 = load i16, i16* %arrayidx, align 2
  %conv2 = sext i16 %6 to i32
  %conv3 = sitofp i32 %conv2 to double
  %div = fdiv double %conv3, 3.276700e+04
  %mul = fmul double %conv, %div
  %conv4 = fptrunc double %mul to float
  %sample = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 1
  %7 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [1024 x float], [1024 x float]* %sample, i64 0, i64 %idxprom5
  store float %conv4, float* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %9 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8
  %sample7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 1
  %arraydecay8 = getelementptr inbounds [1024 x float], [1024 x float]* %sample7, i64 0, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  %10 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %9, float* %arraydecay8, i32 1024, %class.CBFormat* %10)
  %BFormat9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  %11 = load %class.CBFormat*, %class.CBFormat** %BFormat9, align 8
  ret %class.CBFormat* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO5SoundD2Ev(%"class.ILLIXR_AUDIO::Sound"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  store %"class.ILLIXR_AUDIO::Sound"* %this, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %this.addr, align 8
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv(%"class.std::basic_fstream"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %srcFile2 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 0
  %1 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile2, align 8
  %isnull = icmp eq %"class.std::basic_fstream"* %1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont
  %2 = bitcast %"class.std::basic_fstream"* %1 to void (%"class.std::basic_fstream"*)***
  %vtable = load void (%"class.std::basic_fstream"*)**, void (%"class.std::basic_fstream"*)*** %2, align 8
  %vfn = getelementptr inbounds void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vtable, i64 1
  %3 = load void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vfn, align 8
  call void %3(%"class.std::basic_fstream"* %1) #3
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %invoke.cont
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8
  %isnull3 = icmp eq %class.CBFormat* %4, null
  br i1 %isnull3, label %delete.end7, label %delete.notnull4

delete.notnull4:                                  ; preds = %delete.end
  %5 = bitcast %class.CBFormat* %4 to void (%class.CBFormat*)***
  %vtable5 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %5, align 8
  %vfn6 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable5, i64 1
  %6 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn6, align 8
  call void %6(%class.CBFormat* %4) #3
  br label %delete.end7

delete.end7:                                      ; preds = %delete.notnull4, %delete.end
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this1, i32 0, i32 3
  %7 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8
  %isnull8 = icmp eq %class.CAmbisonicEncoderDist* %7, null
  br i1 %isnull8, label %delete.end12, label %delete.notnull9

delete.notnull9:                                  ; preds = %delete.end7
  %8 = bitcast %class.CAmbisonicEncoderDist* %7 to void (%class.CAmbisonicEncoderDist*)***
  %vtable10 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %8, align 8
  %vfn11 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable10, i64 1
  %9 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn11, align 8
  call void %9(%class.CAmbisonicEncoderDist* %7) #3
  br label %delete.end12

delete.end12:                                     ; preds = %delete.notnull9, %delete.end7
  ret void

terminate.lpad:                                   ; preds = %entry
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #17
  unreachable
}

declare dso_local void @_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv(%"class.std::basic_fstream"*) #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #12 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #17
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.std::__cxx11::basic_string"* %outputFilePath, i32 %procTypeIn) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %procTypeIn.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %temp = alloca i32, align 4
  %ok = alloca i8, align 1
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %agg.tmp19 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp20 = alloca %"class.std::allocator.39", align 1
  %cleanup.cond = alloca i1, align 1
  %cleanup.cond23 = alloca i1, align 1
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store i32 %procTypeIn, i32* %procTypeIn.addr, align 4
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %0 = load i32, i32* %procTypeIn.addr, align 4
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  store i32 %0, i32* %processType, align 8
  %processType2 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %1 = load i32, i32* %processType2, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i8* @_Znwm(i64 512) #18
  %2 = bitcast i8* %call to %"class.std::basic_ofstream"*
  %call3 = invoke i32 @_ZStorSt13_Ios_OpenmodeS_(i32 16, i32 4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"* %2, %"class.std::__cxx11::basic_string"* dereferenceable(32) %outputFilePath, i32 %call3)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %invoke.cont
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 2
  store %"class.std::basic_ofstream"* %2, %"class.std::basic_ofstream"** %outputFile, align 8
  call void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* %this1)
  br label %if.end

lpad:                                             ; preds = %invoke.cont, %if.then
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #19
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont4, %entry
  %call5 = call i8* @_Znwm(i64 24) #18
  %6 = bitcast i8* %call5 to %"class.std::vector.43"*
  call void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev(%"class.std::vector.43"* %6) #3
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  store %"class.std::vector.43"* %6, %"class.std::vector.43"** %soundSrcs, align 8
  %call6 = call i8* @_Znwm(i64 296) #18
  %7 = bitcast i8* %call6 to %class.CAmbisonicBinauralizer*
  invoke void @_ZN22CAmbisonicBinauralizerC1Ev(%class.CAmbisonicBinauralizer* %7)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %if.end
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 3
  store %class.CAmbisonicBinauralizer* %7, %class.CAmbisonicBinauralizer** %decoder0, align 8
  %call9 = call i8* @_Znwm(i64 296) #18
  %8 = bitcast i8* %call9 to %class.CAmbisonicBinauralizer*
  invoke void @_ZN22CAmbisonicBinauralizerC1Ev(%class.CAmbisonicBinauralizer* %8)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %invoke.cont8
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 4
  store %class.CAmbisonicBinauralizer* %8, %class.CAmbisonicBinauralizer** %decoder1, align 8
  %decoder012 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 3
  %9 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder012, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  store i1 false, i1* %cleanup.cond, align 1
  store i1 false, i1* %cleanup.cond23, align 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %invoke.cont11
  %10 = bitcast %class.CAmbisonicBinauralizer* %9 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %10, align 8
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable, i64 5
  %11 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn, align 8
  %call17 = invoke zeroext i1 %11(%class.CAmbisonicBinauralizer* %9, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* %agg.tmp)
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont14
  br i1 %call17, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %invoke.cont16
  %decoder118 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 4
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder118, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp20) #3
  store i1 true, i1* %cleanup.cond, align 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp20)
          to label %invoke.cont22 unwind label %lpad21

invoke.cont22:                                    ; preds = %land.rhs
  store i1 true, i1* %cleanup.cond23, align 1
  %13 = bitcast %class.CAmbisonicBinauralizer* %12 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable24 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %13, align 8
  %vfn25 = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable24, i64 5
  %14 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn25, align 8
  %call28 = invoke zeroext i1 %14(%class.CAmbisonicBinauralizer* %12, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* %agg.tmp19)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %invoke.cont22
  br label %land.end

land.end:                                         ; preds = %invoke.cont27, %invoke.cont16
  %15 = phi i1 [ false, %invoke.cont16 ], [ %call28, %invoke.cont27 ]
  %cleanup.is_active = load i1, i1* %cleanup.cond23, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %land.end
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp19) #3
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %land.end
  %cleanup.is_active32 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active32, label %cleanup.action33, label %cleanup.done34

cleanup.action33:                                 ; preds = %cleanup.done
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp20) #3
  br label %cleanup.done34

cleanup.done34:                                   ; preds = %cleanup.action33, %cleanup.done
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  %frombool = zext i1 %15 to i8
  store i8 %frombool, i8* %ok, align 1
  %16 = load i8, i8* %ok, align 1
  %tobool = trunc i8 %16 to i1
  br i1 %tobool, label %if.end42, label %if.then40

if.then40:                                        ; preds = %cleanup.done34
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end42

lpad7:                                            ; preds = %if.end
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call6) #19
  br label %eh.resume

lpad10:                                           ; preds = %invoke.cont8
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %exn.slot, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call9) #19
  br label %eh.resume

lpad13:                                           ; preds = %invoke.cont11
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %exn.slot, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %ehselector.slot, align 4
  br label %ehcleanup39

lpad15:                                           ; preds = %invoke.cont14
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  br label %ehcleanup38

lpad21:                                           ; preds = %land.rhs
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %exn.slot, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad26:                                           ; preds = %invoke.cont22
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %exn.slot, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %ehselector.slot, align 4
  %cleanup.is_active29 = load i1, i1* %cleanup.cond23, align 1
  br i1 %cleanup.is_active29, label %cleanup.action30, label %cleanup.done31

cleanup.action30:                                 ; preds = %lpad26
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp19) #3
  br label %cleanup.done31

cleanup.done31:                                   ; preds = %cleanup.action30, %lpad26
  br label %ehcleanup

ehcleanup:                                        ; preds = %cleanup.done31, %lpad21
  %cleanup.is_active35 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active35, label %cleanup.action36, label %cleanup.done37

cleanup.action36:                                 ; preds = %ehcleanup
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp20) #3
  br label %cleanup.done37

cleanup.done37:                                   ; preds = %cleanup.action36, %ehcleanup
  br label %ehcleanup38

ehcleanup38:                                      ; preds = %cleanup.done37, %lpad15
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  br label %ehcleanup39

ehcleanup39:                                      ; preds = %ehcleanup38, %lpad13
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  br label %eh.resume

if.end42:                                         ; preds = %if.then40, %cleanup.done34
  %call43 = call i8* @_Znwm(i64 200) #18
  %35 = bitcast i8* %call43 to %class.CAmbisonicProcessor*
  invoke void @_ZN19CAmbisonicProcessorC1Ev(%class.CAmbisonicProcessor* %35)
          to label %invoke.cont45 unwind label %lpad44

invoke.cont45:                                    ; preds = %if.end42
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  store %class.CAmbisonicProcessor* %35, %class.CAmbisonicProcessor** %rotator, align 8
  %rotator47 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  %36 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator47, align 8
  %call48 = call zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %36, i32 3, i1 zeroext true, i32 1024, i32 0)
  %call49 = call i8* @_Znwm(i64 104) #18
  %37 = bitcast i8* %call49 to %class.CAmbisonicZoomer*
  invoke void @_ZN16CAmbisonicZoomerC1Ev(%class.CAmbisonicZoomer* %37)
          to label %invoke.cont51 unwind label %lpad50

invoke.cont51:                                    ; preds = %invoke.cont45
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  store %class.CAmbisonicZoomer* %37, %class.CAmbisonicZoomer** %zoomer, align 8
  %zoomer53 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  %38 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer53, align 8
  %39 = bitcast %class.CAmbisonicZoomer* %38 to i1 (%class.CAmbisonicZoomer*, i32, i1, i32)***
  %vtable54 = load i1 (%class.CAmbisonicZoomer*, i32, i1, i32)**, i1 (%class.CAmbisonicZoomer*, i32, i1, i32)*** %39, align 8
  %vfn55 = getelementptr inbounds i1 (%class.CAmbisonicZoomer*, i32, i1, i32)*, i1 (%class.CAmbisonicZoomer*, i32, i1, i32)** %vtable54, i64 2
  %40 = load i1 (%class.CAmbisonicZoomer*, i32, i1, i32)*, i1 (%class.CAmbisonicZoomer*, i32, i1, i32)** %vfn55, align 8
  %call56 = call zeroext i1 %40(%class.CAmbisonicZoomer* %38, i32 3, i1 zeroext true, i32 0)
  ret void

lpad44:                                           ; preds = %if.end42
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %exn.slot, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call43) #19
  br label %eh.resume

lpad50:                                           ; preds = %invoke.cont45
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %exn.slot, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call49) #19
  br label %eh.resume

eh.resume:                                        ; preds = %lpad50, %lpad44, %ehcleanup39, %lpad10, %lpad7, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val57 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val57
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i32 @_ZStorSt13_Ios_OpenmodeS_(i32 %__a, i32 %__b) #5 comdat {
entry:
  %__a.addr = alloca i32, align 4
  %__b.addr = alloca i32, align 4
  store i32 %__a, i32* %__a.addr, align 4
  store i32 %__b, i32* %__b.addr, align 4
  %0 = load i32, i32* %__a.addr, align 4
  %1 = load i32, i32* %__b.addr, align 4
  %or = or i32 %0, %1
  ret i32 %or
}

declare dso_local void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #1

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* %this) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %wavh = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 1
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  call void @_ZN12ILLIXR_AUDIO11WAVHeader_tC2Ev(%"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh) #3
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 2
  %0 = load %"class.std::basic_ofstream"*, %"class.std::basic_ofstream"** %outputFile, align 8
  %1 = bitcast %"class.std::basic_ofstream"* %0 to %"class.std::basic_ostream"*
  %2 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to i8*
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %1, i8* %2, i64 44)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev(%"class.std::vector.43"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  invoke void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev(%"struct.std::_Vector_base.44"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #17
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator.39"*) unnamed_addr #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator.39"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator.39"*) unnamed_addr #2

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %soundIdx = alloca i32, align 4
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %0 = load i32, i32* %processType, align 8
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 2
  %1 = load %"class.std::basic_ofstream"*, %"class.std::basic_ofstream"** %outputFile, align 8
  %2 = bitcast %"class.std::basic_ofstream"* %1 to i8*
  call void @free(i8* %2) #3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %soundIdx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %soundIdx, align 4
  %conv = zext i32 %3 to i64
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %4 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8
  %call = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %4) #3
  %cmp2 = icmp ult i64 %conv, %call
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %soundSrcs3 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %5 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs3, align 8
  %6 = load i32, i32* %soundIdx, align 4
  %conv4 = zext i32 %6 to i64
  %call5 = call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.43"* %5, i64 %conv4) #3
  %7 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call5, align 8
  %8 = bitcast %"class.ILLIXR_AUDIO::Sound"* %7 to i8*
  call void @free(i8* %8) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %soundIdx, align 4
  %inc = add i32 %9, 1
  store i32 %inc, i32* %soundIdx, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %soundSrcs6 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %10 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs6, align 8
  %11 = bitcast %"class.std::vector.43"* %10 to i8*
  call void @free(i8* %11) #3
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 3
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8
  %13 = bitcast %class.CAmbisonicBinauralizer* %12 to i8*
  call void @free(i8* %13) #3
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 4
  %14 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8
  %15 = bitcast %class.CAmbisonicBinauralizer* %14 to i8*
  call void @free(i8* %15) #3
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  %16 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8
  %17 = bitcast %class.CAmbisonicProcessor* %16 to i8*
  call void @free(i8* %17) #3
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  %18 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8
  %19 = bitcast %class.CAmbisonicZoomer* %18 to i8*
  call void @free(i8* %19) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.43"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %1, i64 %2
  ret %"class.ILLIXR_AUDIO::Sound"** %add.ptr
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* %this) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %inSound = alloca %"class.ILLIXR_AUDIO::Sound"*, align 8
  %position = alloca %struct.PolarPoint, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %cleanup.isactive = alloca i1, align 1
  %agg.tmp6 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp7 = alloca %"class.std::allocator.39", align 1
  %cleanup.isactive12 = alloca i1, align 1
  %i = alloca i32, align 4
  %agg.tmp25 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp26 = alloca %"class.std::allocator.39", align 1
  %cleanup.isactive31 = alloca i1, align 1
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %0 = load i32, i32* %processType, align 8
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i8* @_Znwm(i64 4136) #18
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %call to %"class.ILLIXR_AUDIO::Sound"*
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* %1, %"class.std::__cxx11::basic_string"* %agg.tmp, i32 3, i1 zeroext true)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  store %"class.ILLIXR_AUDIO::Sound"* %1, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  %fAzimuth = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 0
  store float 0xBFB99999A0000000, float* %fAzimuth, align 4
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 1
  store float 0x3FF91EB860000000, float* %fElevation, align 4
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 2
  store float 1.000000e+00, float* %fDistance, align 4
  %2 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* %2, %struct.PolarPoint* dereferenceable(12) %position)
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %3 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8
  call void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_(%"class.std::vector.43"* %3, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %inSound)
  %call5 = call i8* @_Znwm(i64 4136) #18
  store i1 true, i1* %cleanup.isactive12, align 1
  %4 = bitcast i8* %call5 to %"class.ILLIXR_AUDIO::Sound"*
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp7) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp7)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %invoke.cont3
  invoke void @_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* %4, %"class.std::__cxx11::basic_string"* %agg.tmp6, i32 3, i1 zeroext true)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %invoke.cont9
  store i1 false, i1* %cleanup.isactive12, align 1
  store %"class.ILLIXR_AUDIO::Sound"* %4, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp6) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp7) #3
  %fAzimuth19 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 0
  store float 1.000000e+00, float* %fAzimuth19, align 4
  %fElevation20 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 1
  store float 0.000000e+00, float* %fElevation20, align 4
  %fDistance21 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 2
  store float 5.000000e+00, float* %fDistance21, align 4
  %5 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* %5, %struct.PolarPoint* dereferenceable(12) %position)
  %soundSrcs22 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %6 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs22, align 8
  call void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_(%"class.std::vector.43"* %6, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %inSound)
  br label %if.end

lpad:                                             ; preds = %if.then
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @_ZdlPv(i8* %call) #19
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

lpad8:                                            ; preds = %invoke.cont3
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %exn.slot, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %ehselector.slot, align 4
  br label %ehcleanup14

lpad10:                                           ; preds = %invoke.cont9
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp6) #3
  br label %ehcleanup14

ehcleanup14:                                      ; preds = %lpad10, %lpad8
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp7) #3
  %cleanup.is_active16 = load i1, i1* %cleanup.isactive12, align 1
  br i1 %cleanup.is_active16, label %cleanup.action17, label %cleanup.done18

cleanup.action17:                                 ; preds = %ehcleanup14
  call void @_ZdlPv(i8* %call5) #19
  br label %cleanup.done18

cleanup.done18:                                   ; preds = %cleanup.action17, %ehcleanup14
  br label %eh.resume

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %19 = load i32, i32* %i, align 4
  %cmp23 = icmp ult i32 %19, 16
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call24 = call i8* @_Znwm(i64 4136) #18
  store i1 true, i1* %cleanup.isactive31, align 1
  %20 = bitcast i8* %call24 to %"class.ILLIXR_AUDIO::Sound"*
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp26) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp25, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp26)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %for.body
  invoke void @_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* %20, %"class.std::__cxx11::basic_string"* %agg.tmp25, i32 3, i1 zeroext true)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont28
  store i1 false, i1* %cleanup.isactive31, align 1
  store %"class.ILLIXR_AUDIO::Sound"* %20, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp25) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp26) #3
  %21 = load i32, i32* %i, align 4
  %conv = uitofp i32 %21 to double
  %mul = fmul double -1.000000e-01, %conv
  %conv38 = fptrunc double %mul to float
  %fAzimuth39 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 0
  store float %conv38, float* %fAzimuth39, align 4
  %22 = load i32, i32* %i, align 4
  %conv40 = uitofp i32 %22 to double
  %mul41 = fmul double 1.570000e+00, %conv40
  %conv42 = fptrunc double %mul41 to float
  %fElevation43 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 1
  store float %conv42, float* %fElevation43, align 4
  %23 = load i32, i32* %i, align 4
  %mul44 = mul i32 1, %23
  %conv45 = uitofp i32 %mul44 to float
  %fDistance46 = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %position, i32 0, i32 2
  store float %conv45, float* %fDistance46, align 4
  %24 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %inSound, align 8
  call void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* %24, %struct.PolarPoint* dereferenceable(12) %position)
  %soundSrcs47 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %25 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs47, align 8
  call void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_(%"class.std::vector.43"* %25, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %inSound)
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont30
  %26 = load i32, i32* %i, align 4
  %inc = add i32 %26, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

lpad27:                                           ; preds = %for.body
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %exn.slot, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %ehselector.slot, align 4
  br label %ehcleanup33

lpad29:                                           ; preds = %invoke.cont28
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %exn.slot, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp25) #3
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %lpad29, %lpad27
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp26) #3
  %cleanup.is_active35 = load i1, i1* %cleanup.isactive31, align 1
  br i1 %cleanup.is_active35, label %cleanup.action36, label %cleanup.done37

cleanup.action36:                                 ; preds = %ehcleanup33
  call void @_ZdlPv(i8* %call24) #19
  br label %cleanup.done37

cleanup.done37:                                   ; preds = %cleanup.action36, %ehcleanup33
  br label %eh.resume

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %invoke.cont11
  ret void

eh.resume:                                        ; preds = %cleanup.done37, %cleanup.done18, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val48 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val48
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_(%"class.std::vector.43"* %this, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %__x) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  %__x.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__x, %"class.ILLIXR_AUDIO::Sound"*** %__x.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %2, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %3 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage, align 8
  %cmp = icmp ne %"class.ILLIXR_AUDIO::Sound"** %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %4, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl3 to %"class.std::allocator.45"*
  %6 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %6, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  %7 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish5, align 8
  %8 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__x.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.45"* dereferenceable(1) %5, %"class.ILLIXR_AUDIO::Sound"** %7, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %8)
  %9 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %9, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish7, align 8
  %incdec.ptr = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %10, i32 1
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish7, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__x.addr, align 8
  call void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_(%"class.std::vector.43"* %this1, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio12processBlockEv(%"class.ILLIXR_AUDIO::ABAudio"* %this) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %resultSample = alloca float**, align 8
  %sumBF = alloca %class.CBFormat, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %call = call i8* @_Znam(i64 16) #18
  %0 = bitcast i8* %call to float**
  store float** %0, float*** %resultSample, align 8
  %call2 = call i8* @_Znam(i64 4096) #18
  %1 = bitcast i8* %call2 to float*
  %2 = load float**, float*** %resultSample, align 8
  %arrayidx = getelementptr inbounds float*, float** %2, i64 0
  store float* %1, float** %arrayidx, align 8
  %call3 = call i8* @_Znam(i64 4096) #18
  %3 = bitcast i8* %call3 to float*
  %4 = load float**, float*** %resultSample, align 8
  %arrayidx4 = getelementptr inbounds float*, float** %4, i64 1
  store float* %3, float** %arrayidx4, align 8
  call void @_ZN8CBFormatC1Ev(%class.CBFormat* %sumBF)
  %call5 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %sumBF, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %5 = load i32, i32* %processType, align 8
  %cmp = icmp ne i32 %5, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* %this1, %class.CBFormat* dereferenceable(64) %sumBF)
          to label %invoke.cont6 unwind label %lpad

invoke.cont6:                                     ; preds = %if.then
  br label %if.end

lpad:                                             ; preds = %if.then16, %invoke.cont11, %invoke.cont10, %if.then9, %if.then, %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZN8CBFormatD2Ev(%class.CBFormat* %sumBF) #3
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont6, %invoke.cont
  %processType7 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %9 = load i32, i32* %processType7, align 8
  %cmp8 = icmp ne i32 %9, 1
  br i1 %cmp8, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.end
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* %this1, %class.CBFormat* dereferenceable(64) %sumBF)
          to label %invoke.cont10 unwind label %lpad

invoke.cont10:                                    ; preds = %if.then9
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 3
  %10 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8
  %11 = load float**, float*** %resultSample, align 8
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %10, %class.CBFormat* %sumBF, float** %11)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont10
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 4
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8
  %13 = load float**, float*** %resultSample, align 8
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %12, %class.CBFormat* %sumBF, float** %13)
          to label %invoke.cont12 unwind label %lpad

invoke.cont12:                                    ; preds = %invoke.cont11
  br label %if.end13

if.end13:                                         ; preds = %invoke.cont12, %if.end
  %processType14 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 0
  %14 = load i32, i32* %processType14, align 8
  %cmp15 = icmp eq i32 %14, 0
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end13
  %15 = load float**, float*** %resultSample, align 8
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* %this1, float** %15)
          to label %invoke.cont17 unwind label %lpad

invoke.cont17:                                    ; preds = %if.then16
  br label %if.end18

if.end18:                                         ; preds = %invoke.cont17, %if.end13
  %16 = load float**, float*** %resultSample, align 8
  %arrayidx19 = getelementptr inbounds float*, float** %16, i64 0
  %17 = load float*, float** %arrayidx19, align 8
  %isnull = icmp eq float* %17, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end18
  %18 = bitcast float* %17 to i8*
  call void @_ZdaPv(i8* %18) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end18
  %19 = load float**, float*** %resultSample, align 8
  %arrayidx20 = getelementptr inbounds float*, float** %19, i64 1
  %20 = load float*, float** %arrayidx20, align 8
  %isnull21 = icmp eq float* %20, null
  br i1 %isnull21, label %delete.end23, label %delete.notnull22

delete.notnull22:                                 ; preds = %delete.end
  %21 = bitcast float* %20 to i8*
  call void @_ZdaPv(i8* %21) #19
  br label %delete.end23

delete.end23:                                     ; preds = %delete.notnull22, %delete.end
  %22 = load float**, float*** %resultSample, align 8
  %isnull24 = icmp eq float** %22, null
  br i1 %isnull24, label %delete.end26, label %delete.notnull25

delete.notnull25:                                 ; preds = %delete.end23
  %23 = bitcast float** %22 to i8*
  call void @_ZdaPv(i8* %23) #19
  br label %delete.end26

delete.end26:                                     ; preds = %delete.notnull25, %delete.end23
  call void @_ZN8CBFormatD2Ev(%class.CBFormat* %sumBF) #3
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val27 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val27
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* %this, %class.CBFormat* dereferenceable(64) %sumBF) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %tempBF = alloca %class.CBFormat*, align 8
  %soundIdx = alloca i32, align 4
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store i32 0, i32* %soundIdx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %soundIdx, align 4
  %conv = zext i32 %0 to i64
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8
  %call = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %1) #3
  %cmp = icmp ult i64 %conv, %call
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %soundSrcs2 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 1
  %2 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs2, align 8
  %3 = load i32, i32* %soundIdx, align 4
  %conv3 = zext i32 %3 to i64
  %call4 = call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.43"* %2, i64 %conv3) #3
  %4 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call4, align 8
  %call5 = call %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* %4)
  store %class.CBFormat* %call5, %class.CBFormat** %tempBF, align 8
  %5 = load i32, i32* %soundIdx, align 4
  %cmp6 = icmp eq i32 %5, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load %class.CBFormat*, %class.CBFormat** %tempBF, align 8
  %7 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  call void @_ZN8CBFormataSERKS_(%class.CBFormat* %7, %class.CBFormat* dereferenceable(64) %6)
  br label %if.end

if.else:                                          ; preds = %for.body
  %8 = load %class.CBFormat*, %class.CBFormat** %tempBF, align 8
  %9 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %call7 = call dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* %9, %class.CBFormat* dereferenceable(64) %8)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %soundIdx, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* %soundIdx, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* %this, %class.CBFormat* dereferenceable(64) %sumBF) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  call void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* %this1)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  call void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* %0, %class.CBFormat* %1, i32 1024)
  call void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* %this1)
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  %2 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8
  %3 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  call void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* %2, %class.CBFormat* %3, i32 1024)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* %this, float** %resultSample) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %resultSample.addr = alloca float**, align 8
  %sampleIdx = alloca i32, align 4
  %ref.tmp = alloca float, align 4
  %ref.tmp3 = alloca float, align 4
  %ref.tmp11 = alloca float, align 4
  %ref.tmp13 = alloca float, align 4
  %tempSample0 = alloca i16, align 2
  %tempSample1 = alloca i16, align 2
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store float** %resultSample, float*** %resultSample.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  store i32 0, i32* %sampleIdx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %sampleIdx, align 4
  %cmp = icmp slt i32 %0, 1024
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load float**, float*** %resultSample.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %1, i64 0
  %2 = load float*, float** %arrayidx, align 8
  %3 = load i32, i32* %sampleIdx, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 %idxprom
  store float 1.000000e+00, float* %ref.tmp, align 4
  %call = call dereferenceable(4) float* @_ZSt3minIfERKT_S2_S2_(float* dereferenceable(4) %arrayidx2, float* dereferenceable(4) %ref.tmp)
  store float -1.000000e+00, float* %ref.tmp3, align 4
  %call4 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %call, float* dereferenceable(4) %ref.tmp3)
  %4 = load float, float* %call4, align 4
  %5 = load float**, float*** %resultSample.addr, align 8
  %arrayidx5 = getelementptr inbounds float*, float** %5, i64 0
  %6 = load float*, float** %arrayidx5, align 8
  %7 = load i32, i32* %sampleIdx, align 4
  %idxprom6 = sext i32 %7 to i64
  %arrayidx7 = getelementptr inbounds float, float* %6, i64 %idxprom6
  store float %4, float* %arrayidx7, align 4
  %8 = load float**, float*** %resultSample.addr, align 8
  %arrayidx8 = getelementptr inbounds float*, float** %8, i64 1
  %9 = load float*, float** %arrayidx8, align 8
  %10 = load i32, i32* %sampleIdx, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %idxprom9
  store float 1.000000e+00, float* %ref.tmp11, align 4
  %call12 = call dereferenceable(4) float* @_ZSt3minIfERKT_S2_S2_(float* dereferenceable(4) %arrayidx10, float* dereferenceable(4) %ref.tmp11)
  store float -1.000000e+00, float* %ref.tmp13, align 4
  %call14 = call dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %call12, float* dereferenceable(4) %ref.tmp13)
  %11 = load float, float* %call14, align 4
  %12 = load float**, float*** %resultSample.addr, align 8
  %arrayidx15 = getelementptr inbounds float*, float** %12, i64 1
  %13 = load float*, float** %arrayidx15, align 8
  %14 = load i32, i32* %sampleIdx, align 4
  %idxprom16 = sext i32 %14 to i64
  %arrayidx17 = getelementptr inbounds float, float* %13, i64 %idxprom16
  store float %11, float* %arrayidx17, align 4
  %15 = load float**, float*** %resultSample.addr, align 8
  %arrayidx18 = getelementptr inbounds float*, float** %15, i64 0
  %16 = load float*, float** %arrayidx18, align 8
  %17 = load i32, i32* %sampleIdx, align 4
  %idxprom19 = sext i32 %17 to i64
  %arrayidx20 = getelementptr inbounds float, float* %16, i64 %idxprom19
  %18 = load float, float* %arrayidx20, align 4
  %conv = fpext float %18 to double
  %div = fdiv double %conv, 1.000000e+00
  %mul = fmul double %div, 3.276700e+04
  %conv21 = fptosi double %mul to i16
  store i16 %conv21, i16* %tempSample0, align 2
  %19 = load float**, float*** %resultSample.addr, align 8
  %arrayidx22 = getelementptr inbounds float*, float** %19, i64 1
  %20 = load float*, float** %arrayidx22, align 8
  %21 = load i32, i32* %sampleIdx, align 4
  %idxprom23 = sext i32 %21 to i64
  %arrayidx24 = getelementptr inbounds float, float* %20, i64 %idxprom23
  %22 = load float, float* %arrayidx24, align 4
  %conv25 = fpext float %22 to double
  %div26 = fdiv double %conv25, 1.000000e+00
  %mul27 = fmul double %div26, 3.276700e+04
  %conv28 = fptosi double %mul27 to i16
  store i16 %conv28, i16* %tempSample1, align 2
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 2
  %23 = load %"class.std::basic_ofstream"*, %"class.std::basic_ofstream"** %outputFile, align 8
  %24 = bitcast %"class.std::basic_ofstream"* %23 to %"class.std::basic_ostream"*
  %25 = bitcast i16* %tempSample0 to i8*
  %call29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %24, i8* %25, i64 2)
  %outputFile30 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 2
  %26 = load %"class.std::basic_ofstream"*, %"class.std::basic_ofstream"** %outputFile30, align 8
  %27 = bitcast %"class.std::basic_ofstream"* %26 to %"class.std::basic_ostream"*
  %28 = bitcast i16* %tempSample1 to i8*
  %call31 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %27, i8* %28, i64 2)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %sampleIdx, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %sampleIdx, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN8CBFormatD2Ev(%class.CBFormat* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  %0 = bitcast %class.CBFormat* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 4
  call void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev(%"class.std::unique_ptr"* %m_ppfChannels) #3
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfData) #3
  %1 = bitcast %class.CBFormat* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %1) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* %this) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %head = alloca %class.Orientation, align 4
  %agg.tmp = alloca %class.Orientation, align 8
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4
  %1 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4
  %conv = sitofp i32 %1 to double
  %mul = fmul double 1.000000e+00, %conv
  %div = fdiv double %mul, 1.500000e+03
  %mul2 = fmul double %div, 3.140000e+00
  %mul3 = fmul double %mul2, 2.000000e+00
  %conv4 = fptrunc double %mul3 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* %head, float 0.000000e+00, float 0.000000e+00, float %conv4)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8
  %3 = bitcast %class.Orientation* %agg.tmp to i8*
  %4 = bitcast %class.Orientation* %head to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 24, i1 false)
  call void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* %2, %class.Orientation* byval(%class.Orientation) align 8 %agg.tmp)
  %rotator5 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 5
  %5 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator5, align 8
  %6 = bitcast %class.CAmbisonicProcessor* %5 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %6, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %7(%class.CAmbisonicProcessor* %5)
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* %this) #4 align 2 {
entry:
  %this.addr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  store %"class.ILLIXR_AUDIO::ABAudio"* %this, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %this1 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %this.addr, align 8
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8
  %2 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4
  %div = sdiv i32 %2, 100
  %conv = sitofp i32 %div to float
  %call = call float @sinf(float %conv) #3
  call void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* %1, float %call)
  %zoomer2 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this1, i32 0, i32 6
  %3 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer2, align 8
  %4 = bitcast %class.CAmbisonicZoomer* %3 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %4, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  call void %5(%class.CAmbisonicZoomer* %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(4) float* @_ZSt3maxIfERKT_S2_S2_(float* dereferenceable(4) %__a, float* dereferenceable(4) %__b) #5 comdat {
entry:
  %retval = alloca float*, align 8
  %__a.addr = alloca float*, align 8
  %__b.addr = alloca float*, align 8
  store float* %__a, float** %__a.addr, align 8
  store float* %__b, float** %__b.addr, align 8
  %0 = load float*, float** %__a.addr, align 8
  %1 = load float, float* %0, align 4
  %2 = load float*, float** %__b.addr, align 8
  %3 = load float, float* %2, align 4
  %cmp = fcmp olt float %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load float*, float** %__b.addr, align 8
  store float* %4, float** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load float*, float** %__a.addr, align 8
  store float* %5, float** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load float*, float** %retval, align 8
  ret float* %6
}

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN12ILLIXR_AUDIO11WAVHeader_tC2Ev(%"struct.ILLIXR_AUDIO::WAVHeader_t"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t"*, align 8
  store %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this, %"struct.ILLIXR_AUDIO::WAVHeader_t"** %this.addr, align 8
  %this1 = load %"struct.ILLIXR_AUDIO::WAVHeader_t"*, %"struct.ILLIXR_AUDIO::WAVHeader_t"** %this.addr, align 8
  %sGroupID = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 0
  store i32 1179011410, i32* %sGroupID, align 1
  %dwFileLength = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 1
  store i32 48000000, i32* %dwFileLength, align 1
  %sRiffType = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 2
  store i32 1163280727, i32* %sRiffType, align 1
  %subchunkID = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 3
  store i32 544501094, i32* %subchunkID, align 1
  %subchunksize = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 4
  store i32 16, i32* %subchunksize, align 1
  %audioFormat = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 5
  store i16 1, i16* %audioFormat, align 1
  %NumChannels = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 6
  store i16 2, i16* %NumChannels, align 1
  %SampleRate = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 7
  store i32 48000, i32* %SampleRate, align 1
  %byteRate = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 8
  store i32 192000, i32* %byteRate, align 1
  %BlockAlign = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 9
  store i16 4, i16* %BlockAlign, align 1
  %BitsPerSample = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 10
  store i16 16, i16* %BitsPerSample, align 1
  %dataChunkID = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 11
  store i32 1635017060, i32* %dataChunkID, align 1
  %dataChunkSize = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %this1, i32 0, i32 12
  store i32 48000000, i32* %dataChunkSize, align 1
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @rotatorSet_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator) #4 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %head = alloca %class.Orientation, align 4
  %agg.tmp = alloca %class.Orientation, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicProcessor* %0, i32 1, %class.CAmbisonicProcessor* %1) #3
  %2 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4
  %3 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4
  %conv = sitofp i32 %3 to double
  %mul = fmul double 1.000000e+00, %conv
  %div = fdiv double %mul, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %5 = bitcast %class.Orientation* %agg.tmp to i8*
  %6 = bitcast %class.Orientation* %head to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 24, i1 false)
  call void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* %4, %class.Orientation* byval(%class.Orientation) align 8 %agg.tmp)
  %7 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %8 = bitcast %class.CAmbisonicProcessor* %7 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %8, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %9 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %9(%class.CAmbisonicProcessor* %7)
  %10 = load i64, i64* %bytes_rotator.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %10) #3
  ret void
}

; Function Attrs: nounwind
declare dso_local void @__hpvm__hint(i32) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__attributes(i32, ...) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__return(i32, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperRotatorSet_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %rotateSetNode = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicProcessor* %0, i32 1, %class.CAmbisonicProcessor* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64)* @rotatorSet_fxp) #3
  store i8* %call, i8** %rotateSetNode, align 8
  %2 = load i8*, i8** %rotateSetNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %rotateSetNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %rotateSetNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @__hpvm__createNodeND(i32, ...) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__bindIn(i8*, i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__bindOut(i8*, i32, i32, i32) #2

; Function Attrs: noinline optnone uwtable
define dso_local void @psychoFilter_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) #4 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %3 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %4 = load float**, float*** %channelpart1.addr, align 8
  %5 = load float**, float*** %channelpart2.addr, align 8
  %6 = load float**, float*** %channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, %class.CBFormat* %1, i32 5, %class.CAmbisonicProcessor* %2, %class.CBFormat* %3, float** %4, float** %5, float** %6) #3
  %7 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %8 = bitcast %class.CAmbisonicProcessor* %7 to %class.CAmbisonicBase*
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %8, i32 0, i32 5
  %9 = load i8, i8* %m_bOpt, align 4
  %tobool = trunc i8 %9 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %10 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %11 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %12 = load i32, i32* %nSample.addr, align 4
  call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* %10, %class.CBFormat* %11, i32 %12)
  br label %if.end

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* %nSample.addr, align 4
  %cmp = icmp ult i32 %13, %14
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %15, i32 0, i32 4
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 3)
  %16 = load float*, float** %call, align 8
  %17 = load i32, i32* %i, align 4
  %idxprom = sext i32 %17 to i64
  %arrayidx = getelementptr inbounds float, float* %16, i64 %idxprom
  %18 = load float, float* %arrayidx, align 4
  %19 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx1 = getelementptr inbounds float*, float** %19, i64 0
  %20 = load float*, float** %arrayidx1, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %21 to i64
  %arrayidx3 = getelementptr inbounds float, float* %20, i64 %idxprom2
  store float %18, float* %arrayidx3, align 4
  %22 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %22, i32 0, i32 4
  %call5 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels4, i64 1)
  %23 = load float*, float** %call5, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %24 to i64
  %arrayidx7 = getelementptr inbounds float, float* %23, i64 %idxprom6
  %25 = load float, float* %arrayidx7, align 4
  %26 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx8 = getelementptr inbounds float*, float** %26, i64 1
  %27 = load float*, float** %arrayidx8, align 8
  %28 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %28 to i64
  %arrayidx10 = getelementptr inbounds float, float* %27, i64 %idxprom9
  store float %25, float* %arrayidx10, align 4
  %29 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels11 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %29, i32 0, i32 4
  %call12 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels11, i64 2)
  %30 = load float*, float** %call12, align 8
  %31 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %31 to i64
  %arrayidx14 = getelementptr inbounds float, float* %30, i64 %idxprom13
  %32 = load float, float* %arrayidx14, align 4
  %33 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx15 = getelementptr inbounds float*, float** %33, i64 2
  %34 = load float*, float** %arrayidx15, align 8
  %35 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %35 to i64
  %arrayidx17 = getelementptr inbounds float, float* %34, i64 %idxprom16
  store float %32, float* %arrayidx17, align 4
  %36 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels18 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %36, i32 0, i32 4
  %call19 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels18, i64 6)
  %37 = load float*, float** %call19, align 8
  %38 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %38 to i64
  %arrayidx21 = getelementptr inbounds float, float* %37, i64 %idxprom20
  %39 = load float, float* %arrayidx21, align 4
  %40 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx22 = getelementptr inbounds float*, float** %40, i64 0
  %41 = load float*, float** %arrayidx22, align 8
  %42 = load i32, i32* %i, align 4
  %idxprom23 = sext i32 %42 to i64
  %arrayidx24 = getelementptr inbounds float, float* %41, i64 %idxprom23
  store float %39, float* %arrayidx24, align 4
  %43 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels25 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %43, i32 0, i32 4
  %call26 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels25, i64 7)
  %44 = load float*, float** %call26, align 8
  %45 = load i32, i32* %i, align 4
  %idxprom27 = sext i32 %45 to i64
  %arrayidx28 = getelementptr inbounds float, float* %44, i64 %idxprom27
  %46 = load float, float* %arrayidx28, align 4
  %47 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx29 = getelementptr inbounds float*, float** %47, i64 1
  %48 = load float*, float** %arrayidx29, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %49 to i64
  %arrayidx31 = getelementptr inbounds float, float* %48, i64 %idxprom30
  store float %46, float* %arrayidx31, align 4
  %50 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels32 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %50, i32 0, i32 4
  %call33 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels32, i64 5)
  %51 = load float*, float** %call33, align 8
  %52 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %52 to i64
  %arrayidx35 = getelementptr inbounds float, float* %51, i64 %idxprom34
  %53 = load float, float* %arrayidx35, align 4
  %54 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx36 = getelementptr inbounds float*, float** %54, i64 2
  %55 = load float*, float** %arrayidx36, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom37 = sext i32 %56 to i64
  %arrayidx38 = getelementptr inbounds float, float* %55, i64 %idxprom37
  store float %53, float* %arrayidx38, align 4
  %57 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels39 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %57, i32 0, i32 4
  %call40 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels39, i64 8)
  %58 = load float*, float** %call40, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom41 = sext i32 %59 to i64
  %arrayidx42 = getelementptr inbounds float, float* %58, i64 %idxprom41
  %60 = load float, float* %arrayidx42, align 4
  %61 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx43 = getelementptr inbounds float*, float** %61, i64 3
  %62 = load float*, float** %arrayidx43, align 8
  %63 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %63 to i64
  %arrayidx45 = getelementptr inbounds float, float* %62, i64 %idxprom44
  store float %60, float* %arrayidx45, align 4
  %64 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels46 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %64, i32 0, i32 4
  %call47 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels46, i64 4)
  %65 = load float*, float** %call47, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom48 = sext i32 %66 to i64
  %arrayidx49 = getelementptr inbounds float, float* %65, i64 %idxprom48
  %67 = load float, float* %arrayidx49, align 4
  %68 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx50 = getelementptr inbounds float*, float** %68, i64 4
  %69 = load float*, float** %arrayidx50, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %70 to i64
  %arrayidx52 = getelementptr inbounds float, float* %69, i64 %idxprom51
  store float %67, float* %arrayidx52, align 4
  %71 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels53 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %71, i32 0, i32 4
  %call54 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels53, i64 9)
  %72 = load float*, float** %call54, align 8
  %73 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %73 to i64
  %arrayidx56 = getelementptr inbounds float, float* %72, i64 %idxprom55
  %74 = load float, float* %arrayidx56, align 4
  %75 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx57 = getelementptr inbounds float*, float** %75, i64 0
  %76 = load float*, float** %arrayidx57, align 8
  %77 = load i32, i32* %i, align 4
  %idxprom58 = sext i32 %77 to i64
  %arrayidx59 = getelementptr inbounds float, float* %76, i64 %idxprom58
  store float %74, float* %arrayidx59, align 4
  %78 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels60 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %78, i32 0, i32 4
  %call61 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels60, i64 10)
  %79 = load float*, float** %call61, align 8
  %80 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %80 to i64
  %arrayidx63 = getelementptr inbounds float, float* %79, i64 %idxprom62
  %81 = load float, float* %arrayidx63, align 4
  %82 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx64 = getelementptr inbounds float*, float** %82, i64 1
  %83 = load float*, float** %arrayidx64, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %84 to i64
  %arrayidx66 = getelementptr inbounds float, float* %83, i64 %idxprom65
  store float %81, float* %arrayidx66, align 4
  %85 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels67 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %85, i32 0, i32 4
  %call68 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels67, i64 11)
  %86 = load float*, float** %call68, align 8
  %87 = load i32, i32* %i, align 4
  %idxprom69 = sext i32 %87 to i64
  %arrayidx70 = getelementptr inbounds float, float* %86, i64 %idxprom69
  %88 = load float, float* %arrayidx70, align 4
  %89 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx71 = getelementptr inbounds float*, float** %89, i64 2
  %90 = load float*, float** %arrayidx71, align 8
  %91 = load i32, i32* %i, align 4
  %idxprom72 = sext i32 %91 to i64
  %arrayidx73 = getelementptr inbounds float, float* %90, i64 %idxprom72
  store float %88, float* %arrayidx73, align 4
  %92 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels74 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %92, i32 0, i32 4
  %call75 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels74, i64 12)
  %93 = load float*, float** %call75, align 8
  %94 = load i32, i32* %i, align 4
  %idxprom76 = sext i32 %94 to i64
  %arrayidx77 = getelementptr inbounds float, float* %93, i64 %idxprom76
  %95 = load float, float* %arrayidx77, align 4
  %96 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx78 = getelementptr inbounds float*, float** %96, i64 3
  %97 = load float*, float** %arrayidx78, align 8
  %98 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %98 to i64
  %arrayidx80 = getelementptr inbounds float, float* %97, i64 %idxprom79
  store float %95, float* %arrayidx80, align 4
  %99 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels81 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %99, i32 0, i32 4
  %call82 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels81, i64 13)
  %100 = load float*, float** %call82, align 8
  %101 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %101 to i64
  %arrayidx84 = getelementptr inbounds float, float* %100, i64 %idxprom83
  %102 = load float, float* %arrayidx84, align 4
  %103 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx85 = getelementptr inbounds float*, float** %103, i64 4
  %104 = load float*, float** %arrayidx85, align 8
  %105 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %105 to i64
  %arrayidx87 = getelementptr inbounds float, float* %104, i64 %idxprom86
  store float %102, float* %arrayidx87, align 4
  %106 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels88 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %106, i32 0, i32 4
  %call89 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels88, i64 14)
  %107 = load float*, float** %call89, align 8
  %108 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %108 to i64
  %arrayidx91 = getelementptr inbounds float, float* %107, i64 %idxprom90
  %109 = load float, float* %arrayidx91, align 4
  %110 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx92 = getelementptr inbounds float*, float** %110, i64 5
  %111 = load float*, float** %arrayidx92, align 8
  %112 = load i32, i32* %i, align 4
  %idxprom93 = sext i32 %112 to i64
  %arrayidx94 = getelementptr inbounds float, float* %111, i64 %idxprom93
  store float %109, float* %arrayidx94, align 4
  %113 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %113, i32 0, i32 4
  %call96 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels95, i64 15)
  %114 = load float*, float** %call96, align 8
  %115 = load i32, i32* %i, align 4
  %idxprom97 = sext i32 %115 to i64
  %arrayidx98 = getelementptr inbounds float, float* %114, i64 %idxprom97
  %116 = load float, float* %arrayidx98, align 4
  %117 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx99 = getelementptr inbounds float*, float** %117, i64 6
  %118 = load float*, float** %arrayidx99, align 8
  %119 = load i32, i32* %i, align 4
  %idxprom100 = sext i32 %119 to i64
  %arrayidx101 = getelementptr inbounds float, float* %118, i64 %idxprom100
  store float %116, float* %arrayidx101, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %120 = load i32, i32* %i, align 4
  %inc = add nsw i32 %120, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %121 = load i64, i64* %bytes_rotator.addr, align 8
  %122 = load i64, i64* %bytes_rotator.addr, align 8
  %123 = load i64, i64* %bytes_rotator.addr, align 8
  %124 = load i64, i64* %bytes_sumBF.addr, align 8
  %125 = load i64, i64* %bytes_channelpart1.addr, align 8
  %126 = load i64, i64* %bytes_channelpart2.addr, align 8
  %127 = load i64, i64* %bytes_channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 7, i64 %121, i64 %122, i64 %123, i64 %124, i64 %125, i64 %126, i64 %127) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperPsychoFilter_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %psychoNode = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %3 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %4 = load float**, float*** %channelpart1.addr, align 8
  %5 = load float**, float*** %channelpart2.addr, align 8
  %6 = load float**, float*** %channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, %class.CBFormat* %1, i32 5, %class.CAmbisonicProcessor* %2, %class.CBFormat* %3, float** %4, float** %5, float** %6) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @psychoFilter_fxp) #3
  store i8* %call, i8** %psychoNode, align 8
  %7 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %7, i32 0, i32 0, i32 0) #3
  %8 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %8, i32 1, i32 1, i32 0) #3
  %9 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %9, i32 2, i32 2, i32 0) #3
  %10 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %10, i32 3, i32 3, i32 0) #3
  %11 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %11, i32 4, i32 4, i32 0) #3
  %12 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %12, i32 5, i32 5, i32 0) #3
  %13 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %13, i32 6, i32 6, i32 0) #3
  %14 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %14, i32 7, i32 7, i32 0) #3
  %15 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %15, i32 8, i32 8, i32 0) #3
  %16 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %16, i32 9, i32 9, i32 0) #3
  %17 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindIn(i8* %17, i32 10, i32 10, i32 0) #3
  %18 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %18, i32 0, i32 0, i32 0) #3
  %19 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %19, i32 1, i32 1, i32 0) #3
  %20 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %20, i32 2, i32 2, i32 0) #3
  %21 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %21, i32 3, i32 3, i32 0) #3
  %22 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %22, i32 4, i32 4, i32 0) #3
  %23 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %23, i32 5, i32 5, i32 0) #3
  %24 = load i8*, i8** %psychoNode, align 8
  call void @__hpvm__bindOut(i8* %24, i32 6, i32 6, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rotateOrder1_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %niSample = alloca i32, align 4
  %valueY = alloca float, align 4
  %valueZ = alloca float, align 4
  %valueX = alloca float, align 4
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart1.addr, align 8
  %2 = load float**, float*** %channelpart1.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %3 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %4 = bitcast %class.CAmbisonicProcessor* %3 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 1
  %5 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp uge i32 %5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %niSample, align 4
  %7 = load i32, i32* %nSample.addr, align 4
  %cmp1 = icmp ult i32 %6, %7
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %8, i64 0
  %9 = load float*, float** %arrayidx, align 8
  %10 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %10 to i64
  %arrayidx2 = getelementptr inbounds float, float* %9, i64 %idxprom
  %11 = load float, float* %arrayidx2, align 4
  %sub = fsub float -0.000000e+00, %11
  %12 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %12, i32 0, i32 16
  %13 = load float, float* %m_fSinAlpha, align 4
  %mul = fmul float %sub, %13
  %14 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx3 = getelementptr inbounds float*, float** %14, i64 1
  %15 = load float*, float** %arrayidx3, align 8
  %16 = load i32, i32* %niSample, align 4
  %idxprom4 = zext i32 %16 to i64
  %arrayidx5 = getelementptr inbounds float, float* %15, i64 %idxprom4
  %17 = load float, float* %arrayidx5, align 4
  %18 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %18, i32 0, i32 15
  %19 = load float, float* %m_fCosAlpha, align 8
  %mul6 = fmul float %17, %19
  %add = fadd float %mul, %mul6
  store float %add, float* %valueY, align 4
  %20 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx7 = getelementptr inbounds float*, float** %20, i64 2
  %21 = load float*, float** %arrayidx7, align 8
  %22 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %22 to i64
  %arrayidx9 = getelementptr inbounds float, float* %21, i64 %idxprom8
  %23 = load float, float* %arrayidx9, align 4
  store float %23, float* %valueZ, align 4
  %24 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx10 = getelementptr inbounds float*, float** %24, i64 0
  %25 = load float*, float** %arrayidx10, align 8
  %26 = load i32, i32* %niSample, align 4
  %idxprom11 = zext i32 %26 to i64
  %arrayidx12 = getelementptr inbounds float, float* %25, i64 %idxprom11
  %27 = load float, float* %arrayidx12, align 4
  %28 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha13 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %28, i32 0, i32 15
  %29 = load float, float* %m_fCosAlpha13, align 8
  %mul14 = fmul float %27, %29
  %30 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx15 = getelementptr inbounds float*, float** %30, i64 1
  %31 = load float*, float** %arrayidx15, align 8
  %32 = load i32, i32* %niSample, align 4
  %idxprom16 = zext i32 %32 to i64
  %arrayidx17 = getelementptr inbounds float, float* %31, i64 %idxprom16
  %33 = load float, float* %arrayidx17, align 4
  %34 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %34, i32 0, i32 16
  %35 = load float, float* %m_fSinAlpha18, align 4
  %mul19 = fmul float %33, %35
  %add20 = fadd float %mul14, %mul19
  store float %add20, float* %valueX, align 4
  %36 = load float, float* %valueY, align 4
  %37 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx21 = getelementptr inbounds float*, float** %37, i64 1
  %38 = load float*, float** %arrayidx21, align 8
  %39 = load i32, i32* %niSample, align 4
  %idxprom22 = zext i32 %39 to i64
  %arrayidx23 = getelementptr inbounds float, float* %38, i64 %idxprom22
  store float %36, float* %arrayidx23, align 4
  %40 = load float, float* %valueZ, align 4
  %41 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %41, i32 0, i32 17
  %42 = load float, float* %m_fCosBeta, align 8
  %mul24 = fmul float %40, %42
  %43 = load float, float* %valueX, align 4
  %44 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %44, i32 0, i32 18
  %45 = load float, float* %m_fSinBeta, align 4
  %mul25 = fmul float %43, %45
  %add26 = fadd float %mul24, %mul25
  %46 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx27 = getelementptr inbounds float*, float** %46, i64 2
  %47 = load float*, float** %arrayidx27, align 8
  %48 = load i32, i32* %niSample, align 4
  %idxprom28 = zext i32 %48 to i64
  %arrayidx29 = getelementptr inbounds float, float* %47, i64 %idxprom28
  store float %add26, float* %arrayidx29, align 4
  %49 = load float, float* %valueX, align 4
  %50 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta30 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %50, i32 0, i32 17
  %51 = load float, float* %m_fCosBeta30, align 8
  %mul31 = fmul float %49, %51
  %52 = load float, float* %valueZ, align 4
  %53 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta32 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %53, i32 0, i32 18
  %54 = load float, float* %m_fSinBeta32, align 4
  %mul33 = fmul float %52, %54
  %add34 = fadd float %mul31, %mul33
  %55 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx35 = getelementptr inbounds float*, float** %55, i64 0
  %56 = load float*, float** %arrayidx35, align 8
  %57 = load i32, i32* %niSample, align 4
  %idxprom36 = zext i32 %57 to i64
  %arrayidx37 = getelementptr inbounds float, float* %56, i64 %idxprom36
  store float %add34, float* %arrayidx37, align 4
  %58 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx38 = getelementptr inbounds float*, float** %58, i64 0
  %59 = load float*, float** %arrayidx38, align 8
  %60 = load i32, i32* %niSample, align 4
  %idxprom39 = zext i32 %60 to i64
  %arrayidx40 = getelementptr inbounds float, float* %59, i64 %idxprom39
  %61 = load float, float* %arrayidx40, align 4
  %sub41 = fsub float -0.000000e+00, %61
  %62 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %62, i32 0, i32 20
  %63 = load float, float* %m_fSinGamma, align 4
  %mul42 = fmul float %sub41, %63
  %64 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx43 = getelementptr inbounds float*, float** %64, i64 1
  %65 = load float*, float** %arrayidx43, align 8
  %66 = load i32, i32* %niSample, align 4
  %idxprom44 = zext i32 %66 to i64
  %arrayidx45 = getelementptr inbounds float, float* %65, i64 %idxprom44
  %67 = load float, float* %arrayidx45, align 4
  %68 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %68, i32 0, i32 19
  %69 = load float, float* %m_fCosGamma, align 8
  %mul46 = fmul float %67, %69
  %add47 = fadd float %mul42, %mul46
  store float %add47, float* %valueY, align 4
  %70 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx48 = getelementptr inbounds float*, float** %70, i64 2
  %71 = load float*, float** %arrayidx48, align 8
  %72 = load i32, i32* %niSample, align 4
  %idxprom49 = zext i32 %72 to i64
  %arrayidx50 = getelementptr inbounds float, float* %71, i64 %idxprom49
  %73 = load float, float* %arrayidx50, align 4
  store float %73, float* %valueZ, align 4
  %74 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx51 = getelementptr inbounds float*, float** %74, i64 0
  %75 = load float*, float** %arrayidx51, align 8
  %76 = load i32, i32* %niSample, align 4
  %idxprom52 = zext i32 %76 to i64
  %arrayidx53 = getelementptr inbounds float, float* %75, i64 %idxprom52
  %77 = load float, float* %arrayidx53, align 4
  %78 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma54 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %78, i32 0, i32 19
  %79 = load float, float* %m_fCosGamma54, align 8
  %mul55 = fmul float %77, %79
  %80 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx56 = getelementptr inbounds float*, float** %80, i64 1
  %81 = load float*, float** %arrayidx56, align 8
  %82 = load i32, i32* %niSample, align 4
  %idxprom57 = zext i32 %82 to i64
  %arrayidx58 = getelementptr inbounds float, float* %81, i64 %idxprom57
  %83 = load float, float* %arrayidx58, align 4
  %84 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma59 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %84, i32 0, i32 20
  %85 = load float, float* %m_fSinGamma59, align 4
  %mul60 = fmul float %83, %85
  %add61 = fadd float %mul55, %mul60
  store float %add61, float* %valueX, align 4
  %86 = load float, float* %valueX, align 4
  %87 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx62 = getelementptr inbounds float*, float** %87, i64 0
  %88 = load float*, float** %arrayidx62, align 8
  %89 = load i32, i32* %niSample, align 4
  %idxprom63 = zext i32 %89 to i64
  %arrayidx64 = getelementptr inbounds float, float* %88, i64 %idxprom63
  store float %86, float* %arrayidx64, align 4
  %90 = load float, float* %valueY, align 4
  %91 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx65 = getelementptr inbounds float*, float** %91, i64 1
  %92 = load float*, float** %arrayidx65, align 8
  %93 = load i32, i32* %niSample, align 4
  %idxprom66 = zext i32 %93 to i64
  %arrayidx67 = getelementptr inbounds float, float* %92, i64 %idxprom66
  store float %90, float* %arrayidx67, align 4
  %94 = load float, float* %valueZ, align 4
  %95 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx68 = getelementptr inbounds float*, float** %95, i64 2
  %96 = load float*, float** %arrayidx68, align 8
  %97 = load i32, i32* %niSample, align 4
  %idxprom69 = zext i32 %97 to i64
  %arrayidx70 = getelementptr inbounds float, float* %96, i64 %idxprom69
  store float %94, float* %arrayidx70, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %98 = load i32, i32* %niSample, align 4
  %inc = add i32 %98, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %99 = load i64, i64* %bytes_channelpart1.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %99) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperRotateOrder1_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %ro1Node = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart1.addr, align 8
  %2 = load float**, float*** %channelpart1.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder1_fxp) #3
  store i8* %call, i8** %ro1Node, align 8
  %3 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindIn(i8* %7, i32 4, i32 4, i32 0) #3
  %8 = load i8*, i8** %ro1Node, align 8
  call void @__hpvm__bindOut(i8* %8, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rotateOrder2_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart2, i64 %bytes_channelpart2) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %fSqrt3 = alloca float, align 4
  %niSample = alloca i32, align 4
  %valueV = alloca float, align 4
  %valueT = alloca float, align 4
  %valueR = alloca float, align 4
  %valueS = alloca float, align 4
  %valueU = alloca float, align 4
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart2.addr, align 8
  %2 = load float**, float*** %channelpart2.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %3 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %4 = bitcast %class.CAmbisonicProcessor* %3 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 1
  %5 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp uge i32 %5, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call double @sqrt(double 3.000000e+00) #3
  %conv = fptrunc double %call to float
  store float %conv, float* %fSqrt3, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %niSample, align 4
  %7 = load i32, i32* %nSample.addr, align 4
  %cmp1 = icmp ult i32 %6, %7
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %8, i64 3
  %9 = load float*, float** %arrayidx, align 8
  %10 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %10 to i64
  %arrayidx2 = getelementptr inbounds float, float* %9, i64 %idxprom
  %11 = load float, float* %arrayidx2, align 4
  %sub = fsub float -0.000000e+00, %11
  %12 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %12, i32 0, i32 22
  %13 = load float, float* %m_fSin2Alpha, align 4
  %mul = fmul float %sub, %13
  %14 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx3 = getelementptr inbounds float*, float** %14, i64 4
  %15 = load float*, float** %arrayidx3, align 8
  %16 = load i32, i32* %niSample, align 4
  %idxprom4 = zext i32 %16 to i64
  %arrayidx5 = getelementptr inbounds float, float* %15, i64 %idxprom4
  %17 = load float, float* %arrayidx5, align 4
  %18 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %18, i32 0, i32 21
  %19 = load float, float* %m_fCos2Alpha, align 8
  %mul6 = fmul float %17, %19
  %add = fadd float %mul, %mul6
  store float %add, float* %valueV, align 4
  %20 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx7 = getelementptr inbounds float*, float** %20, i64 1
  %21 = load float*, float** %arrayidx7, align 8
  %22 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %22 to i64
  %arrayidx9 = getelementptr inbounds float, float* %21, i64 %idxprom8
  %23 = load float, float* %arrayidx9, align 4
  %sub10 = fsub float -0.000000e+00, %23
  %24 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %24, i32 0, i32 16
  %25 = load float, float* %m_fSinAlpha, align 4
  %mul11 = fmul float %sub10, %25
  %26 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx12 = getelementptr inbounds float*, float** %26, i64 2
  %27 = load float*, float** %arrayidx12, align 8
  %28 = load i32, i32* %niSample, align 4
  %idxprom13 = zext i32 %28 to i64
  %arrayidx14 = getelementptr inbounds float, float* %27, i64 %idxprom13
  %29 = load float, float* %arrayidx14, align 4
  %30 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %30, i32 0, i32 15
  %31 = load float, float* %m_fCosAlpha, align 8
  %mul15 = fmul float %29, %31
  %add16 = fadd float %mul11, %mul15
  store float %add16, float* %valueT, align 4
  %32 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx17 = getelementptr inbounds float*, float** %32, i64 0
  %33 = load float*, float** %arrayidx17, align 8
  %34 = load i32, i32* %niSample, align 4
  %idxprom18 = zext i32 %34 to i64
  %arrayidx19 = getelementptr inbounds float, float* %33, i64 %idxprom18
  %35 = load float, float* %arrayidx19, align 4
  store float %35, float* %valueR, align 4
  %36 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx20 = getelementptr inbounds float*, float** %36, i64 1
  %37 = load float*, float** %arrayidx20, align 8
  %38 = load i32, i32* %niSample, align 4
  %idxprom21 = zext i32 %38 to i64
  %arrayidx22 = getelementptr inbounds float, float* %37, i64 %idxprom21
  %39 = load float, float* %arrayidx22, align 4
  %40 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha23 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %40, i32 0, i32 15
  %41 = load float, float* %m_fCosAlpha23, align 8
  %mul24 = fmul float %39, %41
  %42 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx25 = getelementptr inbounds float*, float** %42, i64 2
  %43 = load float*, float** %arrayidx25, align 8
  %44 = load i32, i32* %niSample, align 4
  %idxprom26 = zext i32 %44 to i64
  %arrayidx27 = getelementptr inbounds float, float* %43, i64 %idxprom26
  %45 = load float, float* %arrayidx27, align 4
  %46 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha28 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %46, i32 0, i32 16
  %47 = load float, float* %m_fSinAlpha28, align 4
  %mul29 = fmul float %45, %47
  %add30 = fadd float %mul24, %mul29
  store float %add30, float* %valueS, align 4
  %48 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx31 = getelementptr inbounds float*, float** %48, i64 3
  %49 = load float*, float** %arrayidx31, align 8
  %50 = load i32, i32* %niSample, align 4
  %idxprom32 = zext i32 %50 to i64
  %arrayidx33 = getelementptr inbounds float, float* %49, i64 %idxprom32
  %51 = load float, float* %arrayidx33, align 4
  %52 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Alpha34 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %52, i32 0, i32 21
  %53 = load float, float* %m_fCos2Alpha34, align 8
  %mul35 = fmul float %51, %53
  %54 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx36 = getelementptr inbounds float*, float** %54, i64 4
  %55 = load float*, float** %arrayidx36, align 8
  %56 = load i32, i32* %niSample, align 4
  %idxprom37 = zext i32 %56 to i64
  %arrayidx38 = getelementptr inbounds float, float* %55, i64 %idxprom37
  %57 = load float, float* %arrayidx38, align 4
  %58 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Alpha39 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %58, i32 0, i32 22
  %59 = load float, float* %m_fSin2Alpha39, align 4
  %mul40 = fmul float %57, %59
  %add41 = fadd float %mul35, %mul40
  store float %add41, float* %valueU, align 4
  %60 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %60, i32 0, i32 18
  %61 = load float, float* %m_fSinBeta, align 4
  %sub42 = fsub float -0.000000e+00, %61
  %62 = load float, float* %valueT, align 4
  %mul43 = fmul float %sub42, %62
  %63 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %63, i32 0, i32 17
  %64 = load float, float* %m_fCosBeta, align 8
  %65 = load float, float* %valueV, align 4
  %mul44 = fmul float %64, %65
  %add45 = fadd float %mul43, %mul44
  %66 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx46 = getelementptr inbounds float*, float** %66, i64 4
  %67 = load float*, float** %arrayidx46, align 8
  %68 = load i32, i32* %niSample, align 4
  %idxprom47 = zext i32 %68 to i64
  %arrayidx48 = getelementptr inbounds float, float* %67, i64 %idxprom47
  store float %add45, float* %arrayidx48, align 4
  %69 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta49 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %69, i32 0, i32 17
  %70 = load float, float* %m_fCosBeta49, align 8
  %sub50 = fsub float -0.000000e+00, %70
  %71 = load float, float* %valueT, align 4
  %mul51 = fmul float %sub50, %71
  %72 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta52 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %72, i32 0, i32 18
  %73 = load float, float* %m_fSinBeta52, align 4
  %74 = load float, float* %valueV, align 4
  %mul53 = fmul float %73, %74
  %add54 = fadd float %mul51, %mul53
  %75 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx55 = getelementptr inbounds float*, float** %75, i64 2
  %76 = load float*, float** %arrayidx55, align 8
  %77 = load i32, i32* %niSample, align 4
  %idxprom56 = zext i32 %77 to i64
  %arrayidx57 = getelementptr inbounds float, float* %76, i64 %idxprom56
  store float %add54, float* %arrayidx57, align 4
  %78 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %78, i32 0, i32 23
  %79 = load float, float* %m_fCos2Beta, align 8
  %mul58 = fmul float 7.500000e-01, %79
  %add59 = fadd float %mul58, 2.500000e-01
  %80 = load float, float* %valueR, align 4
  %mul60 = fmul float %add59, %80
  %conv61 = fpext float %mul60 to double
  %81 = load float, float* %fSqrt3, align 4
  %conv62 = fpext float %81 to double
  %mul63 = fmul double 5.000000e-01, %conv62
  %82 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta64 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %82, i32 0, i32 18
  %83 = load float, float* %m_fSinBeta64, align 4
  %conv65 = fpext float %83 to double
  %call66 = call double @pow(double %conv65, double 2.000000e+00) #3
  %mul67 = fmul double %mul63, %call66
  %84 = load float, float* %valueU, align 4
  %conv68 = fpext float %84 to double
  %mul69 = fmul double %mul67, %conv68
  %add70 = fadd double %conv61, %mul69
  %85 = load float, float* %fSqrt3, align 4
  %86 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta71 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %86, i32 0, i32 18
  %87 = load float, float* %m_fSinBeta71, align 4
  %mul72 = fmul float %85, %87
  %88 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta73 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %88, i32 0, i32 17
  %89 = load float, float* %m_fCosBeta73, align 8
  %mul74 = fmul float %mul72, %89
  %90 = load float, float* %valueS, align 4
  %mul75 = fmul float %mul74, %90
  %conv76 = fpext float %mul75 to double
  %add77 = fadd double %add70, %conv76
  %conv78 = fptrunc double %add77 to float
  %91 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx79 = getelementptr inbounds float*, float** %91, i64 0
  %92 = load float*, float** %arrayidx79, align 8
  %93 = load i32, i32* %niSample, align 4
  %idxprom80 = zext i32 %93 to i64
  %arrayidx81 = getelementptr inbounds float, float* %92, i64 %idxprom80
  store float %conv78, float* %arrayidx81, align 4
  %94 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta82 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %94, i32 0, i32 23
  %95 = load float, float* %m_fCos2Beta82, align 8
  %96 = load float, float* %valueS, align 4
  %mul83 = fmul float %95, %96
  %97 = load float, float* %fSqrt3, align 4
  %98 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta84 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %98, i32 0, i32 17
  %99 = load float, float* %m_fCosBeta84, align 8
  %mul85 = fmul float %97, %99
  %100 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta86 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %100, i32 0, i32 18
  %101 = load float, float* %m_fSinBeta86, align 4
  %mul87 = fmul float %mul85, %101
  %102 = load float, float* %valueR, align 4
  %mul88 = fmul float %mul87, %102
  %sub89 = fsub float %mul83, %mul88
  %103 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta90 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %103, i32 0, i32 17
  %104 = load float, float* %m_fCosBeta90, align 8
  %105 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta91 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %105, i32 0, i32 18
  %106 = load float, float* %m_fSinBeta91, align 4
  %mul92 = fmul float %104, %106
  %107 = load float, float* %valueU, align 4
  %mul93 = fmul float %mul92, %107
  %add94 = fadd float %sub89, %mul93
  %108 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx95 = getelementptr inbounds float*, float** %108, i64 1
  %109 = load float*, float** %arrayidx95, align 8
  %110 = load i32, i32* %niSample, align 4
  %idxprom96 = zext i32 %110 to i64
  %arrayidx97 = getelementptr inbounds float, float* %109, i64 %idxprom96
  store float %add94, float* %arrayidx97, align 4
  %111 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta98 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %111, i32 0, i32 23
  %112 = load float, float* %m_fCos2Beta98, align 8
  %mul99 = fmul float 2.500000e-01, %112
  %add100 = fadd float %mul99, 7.500000e-01
  %113 = load float, float* %valueU, align 4
  %mul101 = fmul float %add100, %113
  %114 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta102 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %114, i32 0, i32 17
  %115 = load float, float* %m_fCosBeta102, align 8
  %116 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta103 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %116, i32 0, i32 18
  %117 = load float, float* %m_fSinBeta103, align 4
  %mul104 = fmul float %115, %117
  %118 = load float, float* %valueS, align 4
  %mul105 = fmul float %mul104, %118
  %sub106 = fsub float %mul101, %mul105
  %conv107 = fpext float %sub106 to double
  %119 = load float, float* %fSqrt3, align 4
  %conv108 = fpext float %119 to double
  %mul109 = fmul double 5.000000e-01, %conv108
  %120 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta110 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %120, i32 0, i32 18
  %121 = load float, float* %m_fSinBeta110, align 4
  %conv111 = fpext float %121 to double
  %call112 = call double @pow(double %conv111, double 2.000000e+00) #3
  %mul113 = fmul double %mul109, %call112
  %122 = load float, float* %valueR, align 4
  %conv114 = fpext float %122 to double
  %mul115 = fmul double %mul113, %conv114
  %add116 = fadd double %conv107, %mul115
  %conv117 = fptrunc double %add116 to float
  %123 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx118 = getelementptr inbounds float*, float** %123, i64 3
  %124 = load float*, float** %arrayidx118, align 8
  %125 = load i32, i32* %niSample, align 4
  %idxprom119 = zext i32 %125 to i64
  %arrayidx120 = getelementptr inbounds float, float* %124, i64 %idxprom119
  store float %conv117, float* %arrayidx120, align 4
  %126 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx121 = getelementptr inbounds float*, float** %126, i64 3
  %127 = load float*, float** %arrayidx121, align 8
  %128 = load i32, i32* %niSample, align 4
  %idxprom122 = zext i32 %128 to i64
  %arrayidx123 = getelementptr inbounds float, float* %127, i64 %idxprom122
  %129 = load float, float* %arrayidx123, align 4
  %sub124 = fsub float -0.000000e+00, %129
  %130 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %130, i32 0, i32 26
  %131 = load float, float* %m_fSin2Gamma, align 4
  %mul125 = fmul float %sub124, %131
  %132 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx126 = getelementptr inbounds float*, float** %132, i64 4
  %133 = load float*, float** %arrayidx126, align 8
  %134 = load i32, i32* %niSample, align 4
  %idxprom127 = zext i32 %134 to i64
  %arrayidx128 = getelementptr inbounds float, float* %133, i64 %idxprom127
  %135 = load float, float* %arrayidx128, align 4
  %136 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %136, i32 0, i32 25
  %137 = load float, float* %m_fCos2Gamma, align 8
  %mul129 = fmul float %135, %137
  %add130 = fadd float %mul125, %mul129
  store float %add130, float* %valueV, align 4
  %138 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx131 = getelementptr inbounds float*, float** %138, i64 1
  %139 = load float*, float** %arrayidx131, align 8
  %140 = load i32, i32* %niSample, align 4
  %idxprom132 = zext i32 %140 to i64
  %arrayidx133 = getelementptr inbounds float, float* %139, i64 %idxprom132
  %141 = load float, float* %arrayidx133, align 4
  %sub134 = fsub float -0.000000e+00, %141
  %142 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %142, i32 0, i32 20
  %143 = load float, float* %m_fSinGamma, align 4
  %mul135 = fmul float %sub134, %143
  %144 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx136 = getelementptr inbounds float*, float** %144, i64 2
  %145 = load float*, float** %arrayidx136, align 8
  %146 = load i32, i32* %niSample, align 4
  %idxprom137 = zext i32 %146 to i64
  %arrayidx138 = getelementptr inbounds float, float* %145, i64 %idxprom137
  %147 = load float, float* %arrayidx138, align 4
  %148 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %148, i32 0, i32 19
  %149 = load float, float* %m_fCosGamma, align 8
  %mul139 = fmul float %147, %149
  %add140 = fadd float %mul135, %mul139
  store float %add140, float* %valueT, align 4
  %150 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx141 = getelementptr inbounds float*, float** %150, i64 0
  %151 = load float*, float** %arrayidx141, align 8
  %152 = load i32, i32* %niSample, align 4
  %idxprom142 = zext i32 %152 to i64
  %arrayidx143 = getelementptr inbounds float, float* %151, i64 %idxprom142
  %153 = load float, float* %arrayidx143, align 4
  store float %153, float* %valueR, align 4
  %154 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx144 = getelementptr inbounds float*, float** %154, i64 1
  %155 = load float*, float** %arrayidx144, align 8
  %156 = load i32, i32* %niSample, align 4
  %idxprom145 = zext i32 %156 to i64
  %arrayidx146 = getelementptr inbounds float, float* %155, i64 %idxprom145
  %157 = load float, float* %arrayidx146, align 4
  %158 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma147 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %158, i32 0, i32 19
  %159 = load float, float* %m_fCosGamma147, align 8
  %mul148 = fmul float %157, %159
  %160 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx149 = getelementptr inbounds float*, float** %160, i64 2
  %161 = load float*, float** %arrayidx149, align 8
  %162 = load i32, i32* %niSample, align 4
  %idxprom150 = zext i32 %162 to i64
  %arrayidx151 = getelementptr inbounds float, float* %161, i64 %idxprom150
  %163 = load float, float* %arrayidx151, align 4
  %164 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma152 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %164, i32 0, i32 20
  %165 = load float, float* %m_fSinGamma152, align 4
  %mul153 = fmul float %163, %165
  %add154 = fadd float %mul148, %mul153
  store float %add154, float* %valueS, align 4
  %166 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx155 = getelementptr inbounds float*, float** %166, i64 3
  %167 = load float*, float** %arrayidx155, align 8
  %168 = load i32, i32* %niSample, align 4
  %idxprom156 = zext i32 %168 to i64
  %arrayidx157 = getelementptr inbounds float, float* %167, i64 %idxprom156
  %169 = load float, float* %arrayidx157, align 4
  %170 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Gamma158 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %170, i32 0, i32 25
  %171 = load float, float* %m_fCos2Gamma158, align 8
  %mul159 = fmul float %169, %171
  %172 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx160 = getelementptr inbounds float*, float** %172, i64 4
  %173 = load float*, float** %arrayidx160, align 8
  %174 = load i32, i32* %niSample, align 4
  %idxprom161 = zext i32 %174 to i64
  %arrayidx162 = getelementptr inbounds float, float* %173, i64 %idxprom161
  %175 = load float, float* %arrayidx162, align 4
  %176 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Gamma163 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %176, i32 0, i32 26
  %177 = load float, float* %m_fSin2Gamma163, align 4
  %mul164 = fmul float %175, %177
  %add165 = fadd float %mul159, %mul164
  store float %add165, float* %valueU, align 4
  %178 = load float, float* %valueR, align 4
  %179 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx166 = getelementptr inbounds float*, float** %179, i64 0
  %180 = load float*, float** %arrayidx166, align 8
  %181 = load i32, i32* %niSample, align 4
  %idxprom167 = zext i32 %181 to i64
  %arrayidx168 = getelementptr inbounds float, float* %180, i64 %idxprom167
  store float %178, float* %arrayidx168, align 4
  %182 = load float, float* %valueS, align 4
  %183 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx169 = getelementptr inbounds float*, float** %183, i64 1
  %184 = load float*, float** %arrayidx169, align 8
  %185 = load i32, i32* %niSample, align 4
  %idxprom170 = zext i32 %185 to i64
  %arrayidx171 = getelementptr inbounds float, float* %184, i64 %idxprom170
  store float %182, float* %arrayidx171, align 4
  %186 = load float, float* %valueT, align 4
  %187 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx172 = getelementptr inbounds float*, float** %187, i64 2
  %188 = load float*, float** %arrayidx172, align 8
  %189 = load i32, i32* %niSample, align 4
  %idxprom173 = zext i32 %189 to i64
  %arrayidx174 = getelementptr inbounds float, float* %188, i64 %idxprom173
  store float %186, float* %arrayidx174, align 4
  %190 = load float, float* %valueU, align 4
  %191 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx175 = getelementptr inbounds float*, float** %191, i64 3
  %192 = load float*, float** %arrayidx175, align 8
  %193 = load i32, i32* %niSample, align 4
  %idxprom176 = zext i32 %193 to i64
  %arrayidx177 = getelementptr inbounds float, float* %192, i64 %idxprom176
  store float %190, float* %arrayidx177, align 4
  %194 = load float, float* %valueV, align 4
  %195 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx178 = getelementptr inbounds float*, float** %195, i64 4
  %196 = load float*, float** %arrayidx178, align 8
  %197 = load i32, i32* %niSample, align 4
  %idxprom179 = zext i32 %197 to i64
  %arrayidx180 = getelementptr inbounds float, float* %196, i64 %idxprom179
  store float %194, float* %arrayidx180, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %198 = load i32, i32* %niSample, align 4
  %inc = add i32 %198, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %199 = load i64, i64* %bytes_channelpart2.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %199) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperRotateOrder2_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart2, i64 %bytes_channelpart2) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %ro2Node = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart2.addr, align 8
  %2 = load float**, float*** %channelpart2.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder2_fxp) #3
  store i8* %call, i8** %ro2Node, align 8
  %3 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindIn(i8* %7, i32 4, i32 4, i32 0) #3
  %8 = load i8*, i8** %ro2Node, align 8
  call void @__hpvm__bindOut(i8* %8, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rotateOrder3_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart3, i64 %bytes_channelpart3) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %fSqrt3_2 = alloca float, align 4
  %fSqrt15 = alloca float, align 4
  %fSqrt5_2 = alloca float, align 4
  %niSample = alloca i32, align 4
  %valueQ = alloca float, align 4
  %valueO = alloca float, align 4
  %valueM = alloca float, align 4
  %valueK = alloca float, align 4
  %valueL = alloca float, align 4
  %valueN = alloca float, align 4
  %valueP = alloca float, align 4
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart3.addr, align 8
  %2 = load float**, float*** %channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %3 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %4 = bitcast %class.CAmbisonicProcessor* %3 to %class.CAmbisonicBase*
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 1
  %5 = load i32, i32* %m_nOrder, align 8
  %cmp = icmp uge i32 %5, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call double @sqrt(double 1.500000e+00) #3
  %conv = fptrunc double %call to float
  store float %conv, float* %fSqrt3_2, align 4
  %call1 = call double @sqrt(double 1.500000e+01) #3
  %conv2 = fptrunc double %call1 to float
  store float %conv2, float* %fSqrt15, align 4
  %call3 = call double @sqrt(double 2.500000e+00) #3
  %conv4 = fptrunc double %call3 to float
  store float %conv4, float* %fSqrt5_2, align 4
  store i32 0, i32* %niSample, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %niSample, align 4
  %7 = load i32, i32* %nSample.addr, align 4
  %cmp5 = icmp ult i32 %6, %7
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %8, i64 6
  %9 = load float*, float** %arrayidx, align 8
  %10 = load i32, i32* %niSample, align 4
  %idxprom = zext i32 %10 to i64
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom
  %11 = load float, float* %arrayidx6, align 4
  %sub = fsub float -0.000000e+00, %11
  %12 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %12, i32 0, i32 28
  %13 = load float, float* %m_fSin3Alpha, align 4
  %mul = fmul float %sub, %13
  %14 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx7 = getelementptr inbounds float*, float** %14, i64 0
  %15 = load float*, float** %arrayidx7, align 8
  %16 = load i32, i32* %niSample, align 4
  %idxprom8 = zext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds float, float* %15, i64 %idxprom8
  %17 = load float, float* %arrayidx9, align 4
  %18 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %18, i32 0, i32 27
  %19 = load float, float* %m_fCos3Alpha, align 8
  %mul10 = fmul float %17, %19
  %add = fadd float %mul, %mul10
  store float %add, float* %valueQ, align 4
  %20 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx11 = getelementptr inbounds float*, float** %20, i64 5
  %21 = load float*, float** %arrayidx11, align 8
  %22 = load i32, i32* %niSample, align 4
  %idxprom12 = zext i32 %22 to i64
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 %idxprom12
  %23 = load float, float* %arrayidx13, align 4
  %sub14 = fsub float -0.000000e+00, %23
  %24 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %24, i32 0, i32 22
  %25 = load float, float* %m_fSin2Alpha, align 4
  %mul15 = fmul float %sub14, %25
  %26 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx16 = getelementptr inbounds float*, float** %26, i64 1
  %27 = load float*, float** %arrayidx16, align 8
  %28 = load i32, i32* %niSample, align 4
  %idxprom17 = zext i32 %28 to i64
  %arrayidx18 = getelementptr inbounds float, float* %27, i64 %idxprom17
  %29 = load float, float* %arrayidx18, align 4
  %30 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %30, i32 0, i32 21
  %31 = load float, float* %m_fCos2Alpha, align 8
  %mul19 = fmul float %29, %31
  %add20 = fadd float %mul15, %mul19
  store float %add20, float* %valueO, align 4
  %32 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx21 = getelementptr inbounds float*, float** %32, i64 4
  %33 = load float*, float** %arrayidx21, align 8
  %34 = load i32, i32* %niSample, align 4
  %idxprom22 = zext i32 %34 to i64
  %arrayidx23 = getelementptr inbounds float, float* %33, i64 %idxprom22
  %35 = load float, float* %arrayidx23, align 4
  %sub24 = fsub float -0.000000e+00, %35
  %36 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %36, i32 0, i32 16
  %37 = load float, float* %m_fSinAlpha, align 4
  %mul25 = fmul float %sub24, %37
  %38 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx26 = getelementptr inbounds float*, float** %38, i64 2
  %39 = load float*, float** %arrayidx26, align 8
  %40 = load i32, i32* %niSample, align 4
  %idxprom27 = zext i32 %40 to i64
  %arrayidx28 = getelementptr inbounds float, float* %39, i64 %idxprom27
  %41 = load float, float* %arrayidx28, align 4
  %42 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %42, i32 0, i32 15
  %43 = load float, float* %m_fCosAlpha, align 8
  %mul29 = fmul float %41, %43
  %add30 = fadd float %mul25, %mul29
  store float %add30, float* %valueM, align 4
  %44 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx31 = getelementptr inbounds float*, float** %44, i64 3
  %45 = load float*, float** %arrayidx31, align 8
  %46 = load i32, i32* %niSample, align 4
  %idxprom32 = zext i32 %46 to i64
  %arrayidx33 = getelementptr inbounds float, float* %45, i64 %idxprom32
  %47 = load float, float* %arrayidx33, align 4
  store float %47, float* %valueK, align 4
  %48 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx34 = getelementptr inbounds float*, float** %48, i64 4
  %49 = load float*, float** %arrayidx34, align 8
  %50 = load i32, i32* %niSample, align 4
  %idxprom35 = zext i32 %50 to i64
  %arrayidx36 = getelementptr inbounds float, float* %49, i64 %idxprom35
  %51 = load float, float* %arrayidx36, align 4
  %52 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosAlpha37 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %52, i32 0, i32 15
  %53 = load float, float* %m_fCosAlpha37, align 8
  %mul38 = fmul float %51, %53
  %54 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx39 = getelementptr inbounds float*, float** %54, i64 2
  %55 = load float*, float** %arrayidx39, align 8
  %56 = load i32, i32* %niSample, align 4
  %idxprom40 = zext i32 %56 to i64
  %arrayidx41 = getelementptr inbounds float, float* %55, i64 %idxprom40
  %57 = load float, float* %arrayidx41, align 4
  %58 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinAlpha42 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %58, i32 0, i32 16
  %59 = load float, float* %m_fSinAlpha42, align 4
  %mul43 = fmul float %57, %59
  %add44 = fadd float %mul38, %mul43
  store float %add44, float* %valueL, align 4
  %60 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx45 = getelementptr inbounds float*, float** %60, i64 5
  %61 = load float*, float** %arrayidx45, align 8
  %62 = load i32, i32* %niSample, align 4
  %idxprom46 = zext i32 %62 to i64
  %arrayidx47 = getelementptr inbounds float, float* %61, i64 %idxprom46
  %63 = load float, float* %arrayidx47, align 4
  %64 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Alpha48 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %64, i32 0, i32 21
  %65 = load float, float* %m_fCos2Alpha48, align 8
  %mul49 = fmul float %63, %65
  %66 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx50 = getelementptr inbounds float*, float** %66, i64 1
  %67 = load float*, float** %arrayidx50, align 8
  %68 = load i32, i32* %niSample, align 4
  %idxprom51 = zext i32 %68 to i64
  %arrayidx52 = getelementptr inbounds float, float* %67, i64 %idxprom51
  %69 = load float, float* %arrayidx52, align 4
  %70 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Alpha53 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %70, i32 0, i32 22
  %71 = load float, float* %m_fSin2Alpha53, align 4
  %mul54 = fmul float %69, %71
  %add55 = fadd float %mul49, %mul54
  store float %add55, float* %valueN, align 4
  %72 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx56 = getelementptr inbounds float*, float** %72, i64 6
  %73 = load float*, float** %arrayidx56, align 8
  %74 = load i32, i32* %niSample, align 4
  %idxprom57 = zext i32 %74 to i64
  %arrayidx58 = getelementptr inbounds float, float* %73, i64 %idxprom57
  %75 = load float, float* %arrayidx58, align 4
  %76 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Alpha59 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %76, i32 0, i32 27
  %77 = load float, float* %m_fCos3Alpha59, align 8
  %mul60 = fmul float %75, %77
  %78 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx61 = getelementptr inbounds float*, float** %78, i64 0
  %79 = load float*, float** %arrayidx61, align 8
  %80 = load i32, i32* %niSample, align 4
  %idxprom62 = zext i32 %80 to i64
  %arrayidx63 = getelementptr inbounds float, float* %79, i64 %idxprom62
  %81 = load float, float* %arrayidx63, align 4
  %82 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Alpha64 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %82, i32 0, i32 28
  %83 = load float, float* %m_fSin3Alpha64, align 4
  %mul65 = fmul float %81, %83
  %add66 = fadd float %mul60, %mul65
  store float %add66, float* %valueP, align 4
  %84 = load float, float* %valueQ, align 4
  %mul67 = fmul float 1.250000e-01, %84
  %85 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %85, i32 0, i32 23
  %86 = load float, float* %m_fCos2Beta, align 8
  %mul68 = fmul float 3.000000e+00, %86
  %add69 = fadd float 5.000000e+00, %mul68
  %mul70 = fmul float %mul67, %add69
  %87 = load float, float* %fSqrt3_2, align 4
  %88 = load float, float* %valueO, align 4
  %mul71 = fmul float %87, %88
  %89 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %89, i32 0, i32 17
  %90 = load float, float* %m_fCosBeta, align 8
  %mul72 = fmul float %mul71, %90
  %91 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %91, i32 0, i32 18
  %92 = load float, float* %m_fSinBeta, align 4
  %mul73 = fmul float %mul72, %92
  %sub74 = fsub float %mul70, %mul73
  %conv75 = fpext float %sub74 to double
  %93 = load float, float* %fSqrt15, align 4
  %mul76 = fmul float 2.500000e-01, %93
  %94 = load float, float* %valueM, align 4
  %mul77 = fmul float %mul76, %94
  %conv78 = fpext float %mul77 to double
  %95 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta79 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %95, i32 0, i32 18
  %96 = load float, float* %m_fSinBeta79, align 4
  %conv80 = fpext float %96 to double
  %call81 = call double @pow(double %conv80, double 2.000000e+00) #3
  %mul82 = fmul double %conv78, %call81
  %add83 = fadd double %conv75, %mul82
  %conv84 = fptrunc double %add83 to float
  %97 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx85 = getelementptr inbounds float*, float** %97, i64 0
  %98 = load float*, float** %arrayidx85, align 8
  %99 = load i32, i32* %niSample, align 4
  %idxprom86 = zext i32 %99 to i64
  %arrayidx87 = getelementptr inbounds float, float* %98, i64 %idxprom86
  store float %conv84, float* %arrayidx87, align 4
  %100 = load float, float* %valueO, align 4
  %101 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta88 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %101, i32 0, i32 23
  %102 = load float, float* %m_fCos2Beta88, align 8
  %mul89 = fmul float %100, %102
  %103 = load float, float* %fSqrt5_2, align 4
  %104 = load float, float* %valueM, align 4
  %mul90 = fmul float %103, %104
  %105 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta91 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %105, i32 0, i32 17
  %106 = load float, float* %m_fCosBeta91, align 8
  %mul92 = fmul float %mul90, %106
  %107 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta93 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %107, i32 0, i32 18
  %108 = load float, float* %m_fSinBeta93, align 4
  %mul94 = fmul float %mul92, %108
  %sub95 = fsub float %mul89, %mul94
  %109 = load float, float* %fSqrt3_2, align 4
  %110 = load float, float* %valueQ, align 4
  %mul96 = fmul float %109, %110
  %111 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta97 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %111, i32 0, i32 17
  %112 = load float, float* %m_fCosBeta97, align 8
  %mul98 = fmul float %mul96, %112
  %113 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta99 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %113, i32 0, i32 18
  %114 = load float, float* %m_fSinBeta99, align 4
  %mul100 = fmul float %mul98, %114
  %add101 = fadd float %sub95, %mul100
  %115 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx102 = getelementptr inbounds float*, float** %115, i64 1
  %116 = load float*, float** %arrayidx102, align 8
  %117 = load i32, i32* %niSample, align 4
  %idxprom103 = zext i32 %117 to i64
  %arrayidx104 = getelementptr inbounds float, float* %116, i64 %idxprom103
  store float %add101, float* %arrayidx104, align 4
  %118 = load float, float* %valueM, align 4
  %mul105 = fmul float 1.250000e-01, %118
  %119 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta106 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %119, i32 0, i32 23
  %120 = load float, float* %m_fCos2Beta106, align 8
  %mul107 = fmul float 5.000000e+00, %120
  %add108 = fadd float 3.000000e+00, %mul107
  %mul109 = fmul float %mul105, %add108
  %121 = load float, float* %fSqrt5_2, align 4
  %122 = load float, float* %valueO, align 4
  %mul110 = fmul float %121, %122
  %123 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta111 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %123, i32 0, i32 17
  %124 = load float, float* %m_fCosBeta111, align 8
  %mul112 = fmul float %mul110, %124
  %125 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta113 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %125, i32 0, i32 18
  %126 = load float, float* %m_fSinBeta113, align 4
  %mul114 = fmul float %mul112, %126
  %sub115 = fsub float %mul109, %mul114
  %conv116 = fpext float %sub115 to double
  %127 = load float, float* %fSqrt15, align 4
  %mul117 = fmul float 2.500000e-01, %127
  %128 = load float, float* %valueQ, align 4
  %mul118 = fmul float %mul117, %128
  %conv119 = fpext float %mul118 to double
  %129 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta120 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %129, i32 0, i32 18
  %130 = load float, float* %m_fSinBeta120, align 4
  %conv121 = fpext float %130 to double
  %call122 = call double @pow(double %conv121, double 2.000000e+00) #3
  %mul123 = fmul double %conv119, %call122
  %add124 = fadd double %conv116, %mul123
  %conv125 = fptrunc double %add124 to float
  %131 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx126 = getelementptr inbounds float*, float** %131, i64 2
  %132 = load float*, float** %arrayidx126, align 8
  %133 = load i32, i32* %niSample, align 4
  %idxprom127 = zext i32 %133 to i64
  %arrayidx128 = getelementptr inbounds float, float* %132, i64 %idxprom127
  store float %conv125, float* %arrayidx128, align 4
  %134 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx129 = getelementptr inbounds float*, float** %134, i64 0
  %135 = load float*, float** %arrayidx129, align 8
  %136 = load i32, i32* %niSample, align 4
  %idxprom130 = zext i32 %136 to i64
  %arrayidx131 = getelementptr inbounds float, float* %135, i64 %idxprom130
  store float %conv125, float* %arrayidx131, align 4
  %137 = load float, float* %valueK, align 4
  %mul132 = fmul float 2.500000e-01, %137
  %138 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta133 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %138, i32 0, i32 17
  %139 = load float, float* %m_fCosBeta133, align 8
  %mul134 = fmul float %mul132, %139
  %140 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta135 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %140, i32 0, i32 23
  %141 = load float, float* %m_fCos2Beta135, align 8
  %mul136 = fmul float 1.500000e+01, %141
  %add137 = fadd float -1.000000e+00, %mul136
  %mul138 = fmul float %mul134, %add137
  %conv139 = fpext float %mul138 to double
  %142 = load float, float* %fSqrt15, align 4
  %mul140 = fmul float 5.000000e-01, %142
  %143 = load float, float* %valueN, align 4
  %mul141 = fmul float %mul140, %143
  %144 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta142 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %144, i32 0, i32 17
  %145 = load float, float* %m_fCosBeta142, align 8
  %mul143 = fmul float %mul141, %145
  %conv144 = fpext float %mul143 to double
  %146 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta145 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %146, i32 0, i32 18
  %147 = load float, float* %m_fSinBeta145, align 4
  %conv146 = fpext float %147 to double
  %call147 = call double @pow(double %conv146, double 2.000000e+00) #3
  %mul148 = fmul double %conv144, %call147
  %add149 = fadd double %conv139, %mul148
  %148 = load float, float* %fSqrt5_2, align 4
  %mul150 = fmul float 5.000000e-01, %148
  %149 = load float, float* %valueP, align 4
  %mul151 = fmul float %mul150, %149
  %conv152 = fpext float %mul151 to double
  %150 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta153 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %150, i32 0, i32 18
  %151 = load float, float* %m_fSinBeta153, align 4
  %conv154 = fpext float %151 to double
  %call155 = call double @pow(double %conv154, double 3.000000e+00) #3
  %mul156 = fmul double %conv152, %call155
  %add157 = fadd double %add149, %mul156
  %152 = load float, float* %fSqrt3_2, align 4
  %mul158 = fmul float 1.250000e-01, %152
  %153 = load float, float* %valueL, align 4
  %mul159 = fmul float %mul158, %153
  %154 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta160 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %154, i32 0, i32 18
  %155 = load float, float* %m_fSinBeta160, align 4
  %156 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %156, i32 0, i32 30
  %157 = load float, float* %m_fSin3Beta, align 4
  %mul161 = fmul float 5.000000e+00, %157
  %add162 = fadd float %155, %mul161
  %mul163 = fmul float %mul159, %add162
  %conv164 = fpext float %mul163 to double
  %add165 = fadd double %add157, %conv164
  %conv166 = fptrunc double %add165 to float
  %158 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx167 = getelementptr inbounds float*, float** %158, i64 3
  %159 = load float*, float** %arrayidx167, align 8
  %160 = load i32, i32* %niSample, align 4
  %idxprom168 = zext i32 %160 to i64
  %arrayidx169 = getelementptr inbounds float, float* %159, i64 %idxprom168
  store float %conv166, float* %arrayidx169, align 4
  %161 = load float, float* %valueL, align 4
  %mul170 = fmul float 6.250000e-02, %161
  %162 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta171 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %162, i32 0, i32 17
  %163 = load float, float* %m_fCosBeta171, align 8
  %164 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %164, i32 0, i32 29
  %165 = load float, float* %m_fCos3Beta, align 8
  %mul172 = fmul float 1.500000e+01, %165
  %add173 = fadd float %163, %mul172
  %mul174 = fmul float %mul170, %add173
  %166 = load float, float* %fSqrt5_2, align 4
  %mul175 = fmul float 2.500000e-01, %166
  %167 = load float, float* %valueN, align 4
  %mul176 = fmul float %mul175, %167
  %168 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta177 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %168, i32 0, i32 23
  %169 = load float, float* %m_fCos2Beta177, align 8
  %mul178 = fmul float 3.000000e+00, %169
  %add179 = fadd float 1.000000e+00, %mul178
  %mul180 = fmul float %mul176, %add179
  %170 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta181 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %170, i32 0, i32 18
  %171 = load float, float* %m_fSinBeta181, align 4
  %mul182 = fmul float %mul180, %171
  %add183 = fadd float %mul174, %mul182
  %conv184 = fpext float %add183 to double
  %172 = load float, float* %fSqrt15, align 4
  %mul185 = fmul float 2.500000e-01, %172
  %173 = load float, float* %valueP, align 4
  %mul186 = fmul float %mul185, %173
  %174 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta187 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %174, i32 0, i32 17
  %175 = load float, float* %m_fCosBeta187, align 8
  %mul188 = fmul float %mul186, %175
  %conv189 = fpext float %mul188 to double
  %176 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta190 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %176, i32 0, i32 18
  %177 = load float, float* %m_fSinBeta190, align 4
  %conv191 = fpext float %177 to double
  %call192 = call double @pow(double %conv191, double 2.000000e+00) #3
  %mul193 = fmul double %conv189, %call192
  %add194 = fadd double %conv184, %mul193
  %178 = load float, float* %fSqrt3_2, align 4
  %conv195 = fpext float %178 to double
  %mul196 = fmul double 1.250000e-01, %conv195
  %179 = load float, float* %valueK, align 4
  %conv197 = fpext float %179 to double
  %mul198 = fmul double %mul196, %conv197
  %180 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta199 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %180, i32 0, i32 18
  %181 = load float, float* %m_fSinBeta199, align 4
  %182 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Beta200 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %182, i32 0, i32 30
  %183 = load float, float* %m_fSin3Beta200, align 4
  %mul201 = fmul float 5.000000e+00, %183
  %add202 = fadd float %181, %mul201
  %conv203 = fpext float %add202 to double
  %mul204 = fmul double %mul198, %conv203
  %sub205 = fsub double %add194, %mul204
  %conv206 = fptrunc double %sub205 to float
  %184 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx207 = getelementptr inbounds float*, float** %184, i64 4
  %185 = load float*, float** %arrayidx207, align 8
  %186 = load i32, i32* %niSample, align 4
  %idxprom208 = zext i32 %186 to i64
  %arrayidx209 = getelementptr inbounds float, float* %185, i64 %idxprom208
  store float %conv206, float* %arrayidx209, align 4
  %187 = load float, float* %valueN, align 4
  %mul210 = fmul float 1.250000e-01, %187
  %188 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta211 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %188, i32 0, i32 17
  %189 = load float, float* %m_fCosBeta211, align 8
  %mul212 = fmul float 5.000000e+00, %189
  %190 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Beta213 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %190, i32 0, i32 29
  %191 = load float, float* %m_fCos3Beta213, align 8
  %mul214 = fmul float 3.000000e+00, %191
  %add215 = fadd float %mul212, %mul214
  %mul216 = fmul float %mul210, %add215
  %192 = load float, float* %fSqrt3_2, align 4
  %mul217 = fmul float 2.500000e-01, %192
  %193 = load float, float* %valueP, align 4
  %mul218 = fmul float %mul217, %193
  %194 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta219 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %194, i32 0, i32 23
  %195 = load float, float* %m_fCos2Beta219, align 8
  %add220 = fadd float 3.000000e+00, %195
  %mul221 = fmul float %mul218, %add220
  %196 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta222 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %196, i32 0, i32 18
  %197 = load float, float* %m_fSinBeta222, align 4
  %mul223 = fmul float %mul221, %197
  %add224 = fadd float %mul216, %mul223
  %conv225 = fpext float %add224 to double
  %198 = load float, float* %fSqrt15, align 4
  %mul226 = fmul float 5.000000e-01, %198
  %199 = load float, float* %valueK, align 4
  %mul227 = fmul float %mul226, %199
  %200 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta228 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %200, i32 0, i32 17
  %201 = load float, float* %m_fCosBeta228, align 8
  %mul229 = fmul float %mul227, %201
  %conv230 = fpext float %mul229 to double
  %202 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta231 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %202, i32 0, i32 18
  %203 = load float, float* %m_fSinBeta231, align 4
  %conv232 = fpext float %203 to double
  %call233 = call double @pow(double %conv232, double 2.000000e+00) #3
  %mul234 = fmul double %conv230, %call233
  %add235 = fadd double %conv225, %mul234
  %204 = load float, float* %fSqrt5_2, align 4
  %conv236 = fpext float %204 to double
  %mul237 = fmul double 1.250000e-01, %conv236
  %205 = load float, float* %valueL, align 4
  %conv238 = fpext float %205 to double
  %mul239 = fmul double %mul237, %conv238
  %206 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta240 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %206, i32 0, i32 18
  %207 = load float, float* %m_fSinBeta240, align 4
  %208 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Beta241 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %208, i32 0, i32 30
  %209 = load float, float* %m_fSin3Beta241, align 4
  %mul242 = fmul float 3.000000e+00, %209
  %sub243 = fsub float %207, %mul242
  %conv244 = fpext float %sub243 to double
  %mul245 = fmul double %mul239, %conv244
  %add246 = fadd double %add235, %mul245
  %conv247 = fptrunc double %add246 to float
  %210 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx248 = getelementptr inbounds float*, float** %210, i64 5
  %211 = load float*, float** %arrayidx248, align 8
  %212 = load i32, i32* %niSample, align 4
  %idxprom249 = zext i32 %212 to i64
  %arrayidx250 = getelementptr inbounds float, float* %211, i64 %idxprom249
  store float %conv247, float* %arrayidx250, align 4
  %213 = load float, float* %valueP, align 4
  %mul251 = fmul float 6.250000e-02, %213
  %214 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta252 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %214, i32 0, i32 17
  %215 = load float, float* %m_fCosBeta252, align 8
  %mul253 = fmul float 1.500000e+01, %215
  %216 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Beta254 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %216, i32 0, i32 29
  %217 = load float, float* %m_fCos3Beta254, align 8
  %add255 = fadd float %mul253, %217
  %mul256 = fmul float %mul251, %add255
  %218 = load float, float* %fSqrt3_2, align 4
  %mul257 = fmul float 2.500000e-01, %218
  %219 = load float, float* %valueN, align 4
  %mul258 = fmul float %mul257, %219
  %220 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Beta259 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %220, i32 0, i32 23
  %221 = load float, float* %m_fCos2Beta259, align 8
  %add260 = fadd float 3.000000e+00, %221
  %mul261 = fmul float %mul258, %add260
  %222 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta262 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %222, i32 0, i32 18
  %223 = load float, float* %m_fSinBeta262, align 4
  %mul263 = fmul float %mul261, %223
  %sub264 = fsub float %mul256, %mul263
  %conv265 = fpext float %sub264 to double
  %224 = load float, float* %fSqrt15, align 4
  %mul266 = fmul float 2.500000e-01, %224
  %225 = load float, float* %valueL, align 4
  %mul267 = fmul float %mul266, %225
  %226 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosBeta268 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %226, i32 0, i32 17
  %227 = load float, float* %m_fCosBeta268, align 8
  %mul269 = fmul float %mul267, %227
  %conv270 = fpext float %mul269 to double
  %228 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta271 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %228, i32 0, i32 18
  %229 = load float, float* %m_fSinBeta271, align 4
  %conv272 = fpext float %229 to double
  %call273 = call double @pow(double %conv272, double 2.000000e+00) #3
  %mul274 = fmul double %conv270, %call273
  %add275 = fadd double %conv265, %mul274
  %230 = load float, float* %fSqrt5_2, align 4
  %conv276 = fpext float %230 to double
  %mul277 = fmul double 5.000000e-01, %conv276
  %231 = load float, float* %valueK, align 4
  %conv278 = fpext float %231 to double
  %mul279 = fmul double %mul277, %conv278
  %232 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinBeta280 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %232, i32 0, i32 18
  %233 = load float, float* %m_fSinBeta280, align 4
  %conv281 = fpext float %233 to double
  %call282 = call double @pow(double %conv281, double 3.000000e+00) #3
  %mul283 = fmul double %mul279, %call282
  %sub284 = fsub double %add275, %mul283
  %conv285 = fptrunc double %sub284 to float
  %234 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx286 = getelementptr inbounds float*, float** %234, i64 6
  %235 = load float*, float** %arrayidx286, align 8
  %236 = load i32, i32* %niSample, align 4
  %idxprom287 = zext i32 %236 to i64
  %arrayidx288 = getelementptr inbounds float, float* %235, i64 %idxprom287
  store float %conv285, float* %arrayidx288, align 4
  %237 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx289 = getelementptr inbounds float*, float** %237, i64 6
  %238 = load float*, float** %arrayidx289, align 8
  %239 = load i32, i32* %niSample, align 4
  %idxprom290 = zext i32 %239 to i64
  %arrayidx291 = getelementptr inbounds float, float* %238, i64 %idxprom290
  %240 = load float, float* %arrayidx291, align 4
  %sub292 = fsub float -0.000000e+00, %240
  %241 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %241, i32 0, i32 32
  %242 = load float, float* %m_fSin3Gamma, align 4
  %mul293 = fmul float %sub292, %242
  %243 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx294 = getelementptr inbounds float*, float** %243, i64 0
  %244 = load float*, float** %arrayidx294, align 8
  %245 = load i32, i32* %niSample, align 4
  %idxprom295 = zext i32 %245 to i64
  %arrayidx296 = getelementptr inbounds float, float* %244, i64 %idxprom295
  %246 = load float, float* %arrayidx296, align 4
  %247 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %247, i32 0, i32 31
  %248 = load float, float* %m_fCos3Gamma, align 8
  %mul297 = fmul float %246, %248
  %add298 = fadd float %mul293, %mul297
  store float %add298, float* %valueQ, align 4
  %249 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx299 = getelementptr inbounds float*, float** %249, i64 5
  %250 = load float*, float** %arrayidx299, align 8
  %251 = load i32, i32* %niSample, align 4
  %idxprom300 = zext i32 %251 to i64
  %arrayidx301 = getelementptr inbounds float, float* %250, i64 %idxprom300
  %252 = load float, float* %arrayidx301, align 4
  %sub302 = fsub float -0.000000e+00, %252
  %253 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %253, i32 0, i32 26
  %254 = load float, float* %m_fSin2Gamma, align 4
  %mul303 = fmul float %sub302, %254
  %255 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx304 = getelementptr inbounds float*, float** %255, i64 1
  %256 = load float*, float** %arrayidx304, align 8
  %257 = load i32, i32* %niSample, align 4
  %idxprom305 = zext i32 %257 to i64
  %arrayidx306 = getelementptr inbounds float, float* %256, i64 %idxprom305
  %258 = load float, float* %arrayidx306, align 4
  %259 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %259, i32 0, i32 25
  %260 = load float, float* %m_fCos2Gamma, align 8
  %mul307 = fmul float %258, %260
  %add308 = fadd float %mul303, %mul307
  store float %add308, float* %valueO, align 4
  %261 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx309 = getelementptr inbounds float*, float** %261, i64 4
  %262 = load float*, float** %arrayidx309, align 8
  %263 = load i32, i32* %niSample, align 4
  %idxprom310 = zext i32 %263 to i64
  %arrayidx311 = getelementptr inbounds float, float* %262, i64 %idxprom310
  %264 = load float, float* %arrayidx311, align 4
  %sub312 = fsub float -0.000000e+00, %264
  %265 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %265, i32 0, i32 20
  %266 = load float, float* %m_fSinGamma, align 4
  %mul313 = fmul float %sub312, %266
  %267 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx314 = getelementptr inbounds float*, float** %267, i64 2
  %268 = load float*, float** %arrayidx314, align 8
  %269 = load i32, i32* %niSample, align 4
  %idxprom315 = zext i32 %269 to i64
  %arrayidx316 = getelementptr inbounds float, float* %268, i64 %idxprom315
  %270 = load float, float* %arrayidx316, align 4
  %271 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %271, i32 0, i32 19
  %272 = load float, float* %m_fCosGamma, align 8
  %mul317 = fmul float %270, %272
  %add318 = fadd float %mul313, %mul317
  store float %add318, float* %valueM, align 4
  %273 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx319 = getelementptr inbounds float*, float** %273, i64 3
  %274 = load float*, float** %arrayidx319, align 8
  %275 = load i32, i32* %niSample, align 4
  %idxprom320 = zext i32 %275 to i64
  %arrayidx321 = getelementptr inbounds float, float* %274, i64 %idxprom320
  %276 = load float, float* %arrayidx321, align 4
  store float %276, float* %valueK, align 4
  %277 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx322 = getelementptr inbounds float*, float** %277, i64 4
  %278 = load float*, float** %arrayidx322, align 8
  %279 = load i32, i32* %niSample, align 4
  %idxprom323 = zext i32 %279 to i64
  %arrayidx324 = getelementptr inbounds float, float* %278, i64 %idxprom323
  %280 = load float, float* %arrayidx324, align 4
  %281 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCosGamma325 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %281, i32 0, i32 19
  %282 = load float, float* %m_fCosGamma325, align 8
  %mul326 = fmul float %280, %282
  %283 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx327 = getelementptr inbounds float*, float** %283, i64 2
  %284 = load float*, float** %arrayidx327, align 8
  %285 = load i32, i32* %niSample, align 4
  %idxprom328 = zext i32 %285 to i64
  %arrayidx329 = getelementptr inbounds float, float* %284, i64 %idxprom328
  %286 = load float, float* %arrayidx329, align 4
  %287 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSinGamma330 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %287, i32 0, i32 20
  %288 = load float, float* %m_fSinGamma330, align 4
  %mul331 = fmul float %286, %288
  %add332 = fadd float %mul326, %mul331
  store float %add332, float* %valueL, align 4
  %289 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx333 = getelementptr inbounds float*, float** %289, i64 5
  %290 = load float*, float** %arrayidx333, align 8
  %291 = load i32, i32* %niSample, align 4
  %idxprom334 = zext i32 %291 to i64
  %arrayidx335 = getelementptr inbounds float, float* %290, i64 %idxprom334
  %292 = load float, float* %arrayidx335, align 4
  %293 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos2Gamma336 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %293, i32 0, i32 25
  %294 = load float, float* %m_fCos2Gamma336, align 8
  %mul337 = fmul float %292, %294
  %295 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx338 = getelementptr inbounds float*, float** %295, i64 1
  %296 = load float*, float** %arrayidx338, align 8
  %297 = load i32, i32* %niSample, align 4
  %idxprom339 = zext i32 %297 to i64
  %arrayidx340 = getelementptr inbounds float, float* %296, i64 %idxprom339
  %298 = load float, float* %arrayidx340, align 4
  %299 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin2Gamma341 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %299, i32 0, i32 26
  %300 = load float, float* %m_fSin2Gamma341, align 4
  %mul342 = fmul float %298, %300
  %add343 = fadd float %mul337, %mul342
  store float %add343, float* %valueN, align 4
  %301 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx344 = getelementptr inbounds float*, float** %301, i64 6
  %302 = load float*, float** %arrayidx344, align 8
  %303 = load i32, i32* %niSample, align 4
  %idxprom345 = zext i32 %303 to i64
  %arrayidx346 = getelementptr inbounds float, float* %302, i64 %idxprom345
  %304 = load float, float* %arrayidx346, align 4
  %305 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fCos3Gamma347 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %305, i32 0, i32 31
  %306 = load float, float* %m_fCos3Gamma347, align 8
  %mul348 = fmul float %304, %306
  %307 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx349 = getelementptr inbounds float*, float** %307, i64 0
  %308 = load float*, float** %arrayidx349, align 8
  %309 = load i32, i32* %niSample, align 4
  %idxprom350 = zext i32 %309 to i64
  %arrayidx351 = getelementptr inbounds float, float* %308, i64 %idxprom350
  %310 = load float, float* %arrayidx351, align 4
  %311 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %m_fSin3Gamma352 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %311, i32 0, i32 32
  %312 = load float, float* %m_fSin3Gamma352, align 4
  %mul353 = fmul float %310, %312
  %add354 = fadd float %mul348, %mul353
  store float %add354, float* %valueP, align 4
  %313 = load float, float* %valueQ, align 4
  %314 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx355 = getelementptr inbounds float*, float** %314, i64 0
  %315 = load float*, float** %arrayidx355, align 8
  %316 = load i32, i32* %niSample, align 4
  %idxprom356 = zext i32 %316 to i64
  %arrayidx357 = getelementptr inbounds float, float* %315, i64 %idxprom356
  store float %313, float* %arrayidx357, align 4
  %317 = load float, float* %valueO, align 4
  %318 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx358 = getelementptr inbounds float*, float** %318, i64 1
  %319 = load float*, float** %arrayidx358, align 8
  %320 = load i32, i32* %niSample, align 4
  %idxprom359 = zext i32 %320 to i64
  %arrayidx360 = getelementptr inbounds float, float* %319, i64 %idxprom359
  store float %317, float* %arrayidx360, align 4
  %321 = load float, float* %valueM, align 4
  %322 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx361 = getelementptr inbounds float*, float** %322, i64 2
  %323 = load float*, float** %arrayidx361, align 8
  %324 = load i32, i32* %niSample, align 4
  %idxprom362 = zext i32 %324 to i64
  %arrayidx363 = getelementptr inbounds float, float* %323, i64 %idxprom362
  store float %321, float* %arrayidx363, align 4
  %325 = load float, float* %valueK, align 4
  %326 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx364 = getelementptr inbounds float*, float** %326, i64 3
  %327 = load float*, float** %arrayidx364, align 8
  %328 = load i32, i32* %niSample, align 4
  %idxprom365 = zext i32 %328 to i64
  %arrayidx366 = getelementptr inbounds float, float* %327, i64 %idxprom365
  store float %325, float* %arrayidx366, align 4
  %329 = load float, float* %valueL, align 4
  %330 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx367 = getelementptr inbounds float*, float** %330, i64 4
  %331 = load float*, float** %arrayidx367, align 8
  %332 = load i32, i32* %niSample, align 4
  %idxprom368 = zext i32 %332 to i64
  %arrayidx369 = getelementptr inbounds float, float* %331, i64 %idxprom368
  store float %329, float* %arrayidx369, align 4
  %333 = load float, float* %valueN, align 4
  %334 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx370 = getelementptr inbounds float*, float** %334, i64 5
  %335 = load float*, float** %arrayidx370, align 8
  %336 = load i32, i32* %niSample, align 4
  %idxprom371 = zext i32 %336 to i64
  %arrayidx372 = getelementptr inbounds float, float* %335, i64 %idxprom371
  store float %333, float* %arrayidx372, align 4
  %337 = load float, float* %valueP, align 4
  %338 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx373 = getelementptr inbounds float*, float** %338, i64 6
  %339 = load float*, float** %arrayidx373, align 8
  %340 = load i32, i32* %niSample, align 4
  %idxprom374 = zext i32 %340 to i64
  %arrayidx375 = getelementptr inbounds float, float* %339, i64 %idxprom374
  store float %337, float* %arrayidx375, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %341 = load i32, i32* %niSample, align 4
  %inc = add i32 %341, 1
  store i32 %inc, i32* %niSample, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %342 = load i64, i64* %bytes_channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %342) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperRotateOrder3_fxp(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, i32 %nSample, float** %channelpart3, i64 %bytes_channelpart3) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %ro3Node = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load float**, float*** %channelpart3.addr, align 8
  %2 = load float**, float*** %channelpart3.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicProcessor* %0, float** %1, i32 1, float** %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder3_fxp) #3
  store i8* %call, i8** %ro3Node, align 8
  %3 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindIn(i8* %7, i32 4, i32 4, i32 0) #3
  %8 = load i8*, i8** %ro3Node, align 8
  call void @__hpvm__bindOut(i8* %8, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @zoomSet_fxp(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer) #4 {
entry:
  %zoomer.addr = alloca %class.CAmbisonicZoomer*, align 8
  %bytes_zoomer.addr = alloca i64, align 8
  store %class.CAmbisonicZoomer* %zoomer, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  store i64 %bytes_zoomer, i64* %bytes_zoomer.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicZoomer* %0, i32 1, %class.CAmbisonicZoomer* %1) #3
  %2 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4
  %3 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %4 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4
  %div = sdiv i32 %4, 100
  %conv = sitofp i32 %div to float
  %call = call float @sinf(float %conv) #3
  call void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* %3, float %call)
  %5 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %6 = bitcast %class.CAmbisonicZoomer* %5 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  call void %7(%class.CAmbisonicZoomer* %5)
  %8 = load i64, i64* %bytes_zoomer.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %8) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperZoomSet_fxp(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer) #5 {
entry:
  %zoomer.addr = alloca %class.CAmbisonicZoomer*, align 8
  %bytes_zoomer.addr = alloca i64, align 8
  %zsNode = alloca i8*, align 8
  store %class.CAmbisonicZoomer* %zoomer, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  store i64 %bytes_zoomer, i64* %bytes_zoomer.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicZoomer* %0, i32 1, %class.CAmbisonicZoomer* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicZoomer*, i64)* @zoomSet_fxp) #3
  store i8* %call, i8** %zsNode, align 8
  %2 = load i8*, i8** %zsNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %zsNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %zsNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @zoomProcess_fxp(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) #4 {
entry:
  %zoomer.addr = alloca %class.CAmbisonicZoomer*, align 8
  %bytes_zoomer.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %class.CAmbisonicZoomer* %zoomer, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  store i64 %bytes_zoomer, i64* %bytes_zoomer.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load float**, float*** %channelpart1.addr, align 8
  %3 = load float**, float*** %channelpart2.addr, align 8
  %4 = load float**, float*** %channelpart3.addr, align 8
  %5 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 5, %class.CAmbisonicZoomer* %0, %class.CBFormat* %1, float** %2, float** %3, float** %4, i32 1, %class.CBFormat* %5) #3
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %nSample.addr, align 4
  %cmp = icmp ult i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx = getelementptr inbounds float*, float** %8, i64 0
  %9 = load float*, float** %arrayidx, align 8
  %10 = load i32, i32* %i, align 4
  %idxprom = zext i32 %10 to i64
  %arrayidx1 = getelementptr inbounds float, float* %9, i64 %idxprom
  %11 = load float, float* %arrayidx1, align 4
  %12 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %12, i32 0, i32 4
  %call = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 3)
  %13 = load float*, float** %call, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom2 = zext i32 %14 to i64
  %arrayidx3 = getelementptr inbounds float, float* %13, i64 %idxprom2
  store float %11, float* %arrayidx3, align 4
  %15 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx4 = getelementptr inbounds float*, float** %15, i64 1
  %16 = load float*, float** %arrayidx4, align 8
  %17 = load i32, i32* %i, align 4
  %idxprom5 = zext i32 %17 to i64
  %arrayidx6 = getelementptr inbounds float, float* %16, i64 %idxprom5
  %18 = load float, float* %arrayidx6, align 4
  %19 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %19, i32 0, i32 4
  %call8 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels7, i64 1)
  %20 = load float*, float** %call8, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom9 = zext i32 %21 to i64
  %arrayidx10 = getelementptr inbounds float, float* %20, i64 %idxprom9
  store float %18, float* %arrayidx10, align 4
  %22 = load float**, float*** %channelpart1.addr, align 8
  %arrayidx11 = getelementptr inbounds float*, float** %22, i64 2
  %23 = load float*, float** %arrayidx11, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom12 = zext i32 %24 to i64
  %arrayidx13 = getelementptr inbounds float, float* %23, i64 %idxprom12
  %25 = load float, float* %arrayidx13, align 4
  %26 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels14 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i32 0, i32 4
  %call15 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels14, i64 2)
  %27 = load float*, float** %call15, align 8
  %28 = load i32, i32* %i, align 4
  %idxprom16 = zext i32 %28 to i64
  %arrayidx17 = getelementptr inbounds float, float* %27, i64 %idxprom16
  store float %25, float* %arrayidx17, align 4
  %29 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx18 = getelementptr inbounds float*, float** %29, i64 0
  %30 = load float*, float** %arrayidx18, align 8
  %31 = load i32, i32* %i, align 4
  %idxprom19 = zext i32 %31 to i64
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 %idxprom19
  %32 = load float, float* %arrayidx20, align 4
  %33 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %33, i32 0, i32 4
  %call22 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels21, i64 6)
  %34 = load float*, float** %call22, align 8
  %35 = load i32, i32* %i, align 4
  %idxprom23 = zext i32 %35 to i64
  %arrayidx24 = getelementptr inbounds float, float* %34, i64 %idxprom23
  store float %32, float* %arrayidx24, align 4
  %36 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx25 = getelementptr inbounds float*, float** %36, i64 1
  %37 = load float*, float** %arrayidx25, align 8
  %38 = load i32, i32* %i, align 4
  %idxprom26 = zext i32 %38 to i64
  %arrayidx27 = getelementptr inbounds float, float* %37, i64 %idxprom26
  %39 = load float, float* %arrayidx27, align 4
  %40 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels28 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %40, i32 0, i32 4
  %call29 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels28, i64 7)
  %41 = load float*, float** %call29, align 8
  %42 = load i32, i32* %i, align 4
  %idxprom30 = zext i32 %42 to i64
  %arrayidx31 = getelementptr inbounds float, float* %41, i64 %idxprom30
  store float %39, float* %arrayidx31, align 4
  %43 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx32 = getelementptr inbounds float*, float** %43, i64 2
  %44 = load float*, float** %arrayidx32, align 8
  %45 = load i32, i32* %i, align 4
  %idxprom33 = zext i32 %45 to i64
  %arrayidx34 = getelementptr inbounds float, float* %44, i64 %idxprom33
  %46 = load float, float* %arrayidx34, align 4
  %47 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels35 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %47, i32 0, i32 4
  %call36 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels35, i64 5)
  %48 = load float*, float** %call36, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom37 = zext i32 %49 to i64
  %arrayidx38 = getelementptr inbounds float, float* %48, i64 %idxprom37
  store float %46, float* %arrayidx38, align 4
  %50 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx39 = getelementptr inbounds float*, float** %50, i64 3
  %51 = load float*, float** %arrayidx39, align 8
  %52 = load i32, i32* %i, align 4
  %idxprom40 = zext i32 %52 to i64
  %arrayidx41 = getelementptr inbounds float, float* %51, i64 %idxprom40
  %53 = load float, float* %arrayidx41, align 4
  %54 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels42 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %54, i32 0, i32 4
  %call43 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels42, i64 8)
  %55 = load float*, float** %call43, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom44 = zext i32 %56 to i64
  %arrayidx45 = getelementptr inbounds float, float* %55, i64 %idxprom44
  store float %53, float* %arrayidx45, align 4
  %57 = load float**, float*** %channelpart2.addr, align 8
  %arrayidx46 = getelementptr inbounds float*, float** %57, i64 4
  %58 = load float*, float** %arrayidx46, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom47 = zext i32 %59 to i64
  %arrayidx48 = getelementptr inbounds float, float* %58, i64 %idxprom47
  %60 = load float, float* %arrayidx48, align 4
  %61 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels49 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %61, i32 0, i32 4
  %call50 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels49, i64 4)
  %62 = load float*, float** %call50, align 8
  %63 = load i32, i32* %i, align 4
  %idxprom51 = zext i32 %63 to i64
  %arrayidx52 = getelementptr inbounds float, float* %62, i64 %idxprom51
  store float %60, float* %arrayidx52, align 4
  %64 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx53 = getelementptr inbounds float*, float** %64, i64 0
  %65 = load float*, float** %arrayidx53, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom54 = zext i32 %66 to i64
  %arrayidx55 = getelementptr inbounds float, float* %65, i64 %idxprom54
  %67 = load float, float* %arrayidx55, align 4
  %68 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels56 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %68, i32 0, i32 4
  %call57 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels56, i64 9)
  %69 = load float*, float** %call57, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom58 = zext i32 %70 to i64
  %arrayidx59 = getelementptr inbounds float, float* %69, i64 %idxprom58
  store float %67, float* %arrayidx59, align 4
  %71 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx60 = getelementptr inbounds float*, float** %71, i64 1
  %72 = load float*, float** %arrayidx60, align 8
  %73 = load i32, i32* %i, align 4
  %idxprom61 = zext i32 %73 to i64
  %arrayidx62 = getelementptr inbounds float, float* %72, i64 %idxprom61
  %74 = load float, float* %arrayidx62, align 4
  %75 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels63 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %75, i32 0, i32 4
  %call64 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels63, i64 10)
  %76 = load float*, float** %call64, align 8
  %77 = load i32, i32* %i, align 4
  %idxprom65 = zext i32 %77 to i64
  %arrayidx66 = getelementptr inbounds float, float* %76, i64 %idxprom65
  store float %74, float* %arrayidx66, align 4
  %78 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx67 = getelementptr inbounds float*, float** %78, i64 2
  %79 = load float*, float** %arrayidx67, align 8
  %80 = load i32, i32* %i, align 4
  %idxprom68 = zext i32 %80 to i64
  %arrayidx69 = getelementptr inbounds float, float* %79, i64 %idxprom68
  %81 = load float, float* %arrayidx69, align 4
  %82 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels70 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %82, i32 0, i32 4
  %call71 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels70, i64 11)
  %83 = load float*, float** %call71, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom72 = zext i32 %84 to i64
  %arrayidx73 = getelementptr inbounds float, float* %83, i64 %idxprom72
  store float %81, float* %arrayidx73, align 4
  %85 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx74 = getelementptr inbounds float*, float** %85, i64 3
  %86 = load float*, float** %arrayidx74, align 8
  %87 = load i32, i32* %i, align 4
  %idxprom75 = zext i32 %87 to i64
  %arrayidx76 = getelementptr inbounds float, float* %86, i64 %idxprom75
  %88 = load float, float* %arrayidx76, align 4
  %89 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels77 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %89, i32 0, i32 4
  %call78 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels77, i64 12)
  %90 = load float*, float** %call78, align 8
  %91 = load i32, i32* %i, align 4
  %idxprom79 = zext i32 %91 to i64
  %arrayidx80 = getelementptr inbounds float, float* %90, i64 %idxprom79
  store float %88, float* %arrayidx80, align 4
  %92 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx81 = getelementptr inbounds float*, float** %92, i64 4
  %93 = load float*, float** %arrayidx81, align 8
  %94 = load i32, i32* %i, align 4
  %idxprom82 = zext i32 %94 to i64
  %arrayidx83 = getelementptr inbounds float, float* %93, i64 %idxprom82
  %95 = load float, float* %arrayidx83, align 4
  %96 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels84 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %96, i32 0, i32 4
  %call85 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels84, i64 13)
  %97 = load float*, float** %call85, align 8
  %98 = load i32, i32* %i, align 4
  %idxprom86 = zext i32 %98 to i64
  %arrayidx87 = getelementptr inbounds float, float* %97, i64 %idxprom86
  store float %95, float* %arrayidx87, align 4
  %99 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx88 = getelementptr inbounds float*, float** %99, i64 5
  %100 = load float*, float** %arrayidx88, align 8
  %101 = load i32, i32* %i, align 4
  %idxprom89 = zext i32 %101 to i64
  %arrayidx90 = getelementptr inbounds float, float* %100, i64 %idxprom89
  %102 = load float, float* %arrayidx90, align 4
  %103 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels91 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %103, i32 0, i32 4
  %call92 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels91, i64 14)
  %104 = load float*, float** %call92, align 8
  %105 = load i32, i32* %i, align 4
  %idxprom93 = zext i32 %105 to i64
  %arrayidx94 = getelementptr inbounds float, float* %104, i64 %idxprom93
  store float %102, float* %arrayidx94, align 4
  %106 = load float**, float*** %channelpart3.addr, align 8
  %arrayidx95 = getelementptr inbounds float*, float** %106, i64 6
  %107 = load float*, float** %arrayidx95, align 8
  %108 = load i32, i32* %i, align 4
  %idxprom96 = zext i32 %108 to i64
  %arrayidx97 = getelementptr inbounds float, float* %107, i64 %idxprom96
  %109 = load float, float* %arrayidx97, align 4
  %110 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels98 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %110, i32 0, i32 4
  %call99 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels98, i64 15)
  %111 = load float*, float** %call99, align 8
  %112 = load i32, i32* %i, align 4
  %idxprom100 = zext i32 %112 to i64
  %arrayidx101 = getelementptr inbounds float, float* %111, i64 %idxprom100
  store float %109, float* %arrayidx101, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %113 = load i32, i32* %i, align 4
  %inc = add i32 %113, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %114 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %115 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %116 = load i32, i32* %nSample.addr, align 4
  call void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* %114, %class.CBFormat* %115, i32 %116)
  %117 = load i64, i64* %bytes_sumBF.addr, align 8
  %118 = load i64, i64* %bytes_sumBF.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 2, i64 %117, i64 %118) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperZoomProcess_fxp(%class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3) #5 {
entry:
  %zoomer.addr = alloca %class.CAmbisonicZoomer*, align 8
  %bytes_zoomer.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %zpNode = alloca i8*, align 8
  store %class.CAmbisonicZoomer* %zoomer, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  store i64 %bytes_zoomer, i64* %bytes_zoomer.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  call void @__hpvm__hint(i32 2) #3
  %0 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load float**, float*** %channelpart1.addr, align 8
  %3 = load float**, float*** %channelpart2.addr, align 8
  %4 = load float**, float*** %channelpart3.addr, align 8
  %5 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 5, %class.CAmbisonicZoomer* %0, %class.CBFormat* %1, float** %2, float** %3, float** %4, i32 1, %class.CBFormat* %5) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @zoomProcess_fxp) #3
  store i8* %call, i8** %zpNode, align 8
  %6 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %6, i32 0, i32 0, i32 0) #3
  %7 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %7, i32 1, i32 1, i32 0) #3
  %8 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %8, i32 2, i32 2, i32 0) #3
  %9 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %9, i32 3, i32 3, i32 0) #3
  %10 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %10, i32 4, i32 4, i32 0) #3
  %11 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %11, i32 5, i32 5, i32 0) #3
  %12 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %12, i32 6, i32 6, i32 0) #3
  %13 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %13, i32 7, i32 7, i32 0) #3
  %14 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %14, i32 8, i32 8, i32 0) #3
  %15 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %15, i32 9, i32 9, i32 0) #3
  %16 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindIn(i8* %16, i32 10, i32 10, i32 0) #3
  %17 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindOut(i8* %17, i32 0, i32 0, i32 0) #3
  %18 = load i8*, i8** %zpNode, align 8
  call void @__hpvm__bindOut(i8* %18, i32 1, i32 1, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @setAndFFT_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %niChannel = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, %class.CBFormat* %1, i32 1, %class.CAmbisonicBinauralizer* %2) #3
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %3, i32 0, i32 12
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %4 = bitcast float* %call to i8*
  %5 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %5, i32 0, i32 4
  %6 = load i32, i32* %m_nFFTSize, align 8
  %conv = zext i32 %6 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %niChannel, align 4
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %9 = bitcast %class.CAmbisonicBinauralizer* %8 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %9, i32 0, i32 4
  %10 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %7, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %11, i32 0, i32 13
  %call1 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  %12 = bitcast float* %call1 to i8*
  %13 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %13, i32 0, i32 4
  %14 = load i32, i32* %niChannel, align 4
  %conv2 = zext i32 %14 to i64
  %call3 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv2)
  %15 = load float*, float** %call3, align 8
  %16 = bitcast float* %15 to i8*
  %17 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %17, i32 0, i32 2
  %18 = load i32, i32* %m_nBlockSize, align 8
  %conv4 = zext i32 %18 to i64
  %mul5 = mul i64 %conv4, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %16, i64 %mul5, i1 false)
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 13
  %20 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %20, i32 0, i32 2
  %21 = load i32, i32* %m_nBlockSize7, align 8
  %conv8 = zext i32 %21 to i64
  %call9 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB6, i64 %conv8) #3
  %22 = bitcast float* %call9 to i8*
  %23 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %23, i32 0, i32 4
  %24 = load i32, i32* %m_nFFTSize10, align 8
  %25 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %25, i32 0, i32 2
  %26 = load i32, i32* %m_nBlockSize11, align 8
  %sub = sub i32 %24, %26
  %conv12 = zext i32 %sub to i64
  %mul13 = mul i64 %conv12, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 %mul13, i1 false)
  %27 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %27, i32 0, i32 8
  %call14 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pFFT_cfg) #3
  %28 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %28, i32 0, i32 13
  %call16 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB15) #3
  %29 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %29, i32 0, i32 11
  %call17 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  call void @kiss_fftr(%struct.kiss_fftr_state* %call14, float* %call16, %struct.kiss_fft_cpx* %call17)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %niChannel, align 4
  %inc = add i32 %30, 1
  store i32 %inc, i32* %niChannel, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %31) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperSetAndFFT_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %sfftlNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, %class.CBFormat* %1, i32 1, %class.CAmbisonicBinauralizer* %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_left_fxp) #3
  store i8* %call, i8** %sfftlNode, align 8
  %3 = load i8*, i8** %sfftlNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %sfftlNode, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %sfftlNode, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %sfftlNode, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %sfftlNode, align 8
  call void @__hpvm__bindOut(i8* %7, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @setAndFFT_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %niChannel = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, %class.CBFormat* %1, i32 1, %class.CAmbisonicBinauralizer* %2) #3
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %3, i32 0, i32 12
  %call = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %4 = bitcast float* %call to i8*
  %5 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %5, i32 0, i32 4
  %6 = load i32, i32* %m_nFFTSize, align 8
  %conv = zext i32 %6 to i64
  %mul = mul i64 %conv, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %niChannel, align 4
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %9 = bitcast %class.CAmbisonicBinauralizer* %8 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %9, i32 0, i32 4
  %10 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %7, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %11, i32 0, i32 13
  %call1 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  %12 = bitcast float* %call1 to i8*
  %13 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %13, i32 0, i32 4
  %14 = load i32, i32* %niChannel, align 4
  %conv2 = zext i32 %14 to i64
  %call3 = call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* %m_ppfChannels, i64 %conv2)
  %15 = load float*, float** %call3, align 8
  %16 = bitcast float* %15 to i8*
  %17 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %17, i32 0, i32 2
  %18 = load i32, i32* %m_nBlockSize, align 8
  %conv4 = zext i32 %18 to i64
  %mul5 = mul i64 %conv4, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %16, i64 %mul5, i1 false)
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 13
  %20 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %20, i32 0, i32 2
  %21 = load i32, i32* %m_nBlockSize7, align 8
  %conv8 = zext i32 %21 to i64
  %call9 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB6, i64 %conv8) #3
  %22 = bitcast float* %call9 to i8*
  %23 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize10 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %23, i32 0, i32 4
  %24 = load i32, i32* %m_nFFTSize10, align 8
  %25 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %25, i32 0, i32 2
  %26 = load i32, i32* %m_nBlockSize11, align 8
  %sub = sub i32 %24, %26
  %conv12 = zext i32 %sub to i64
  %mul13 = mul i64 %conv12, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 %mul13, i1 false)
  %27 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %27, i32 0, i32 8
  %call14 = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pFFT_cfg) #3
  %28 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %28, i32 0, i32 13
  %call16 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB15) #3
  %29 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %29, i32 0, i32 11
  %call17 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  call void @kiss_fftr(%struct.kiss_fftr_state* %call14, float* %call16, %struct.kiss_fft_cpx* %call17)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %niChannel, align 4
  %inc = add i32 %30, 1
  store i32 %inc, i32* %niChannel, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %31) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperSetAndFFT_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, %class.CBFormat* %sumBF, i64 %bytes_sumBF) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %sfftrNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, %class.CBFormat* %1, i32 1, %class.CAmbisonicBinauralizer* %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_right_fxp) #3
  store i8* %call, i8** %sfftrNode, align 8
  %3 = load i8*, i8** %sfftrNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %sfftrNode, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %sfftrNode, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %sfftrNode, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %sfftrNode, align 8
  call void @__hpvm__bindOut(i8* %7, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @FIR_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %cpTemp = alloca %struct.kiss_fft_cpx, align 4
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc49, %entry
  %2 = load i32, i32* %niChannel, align 4
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %4 = bitcast %class.CAmbisonicBinauralizer* %3 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %2, %5
  br i1 %cmp, label %for.body, label %for.end51

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ni, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %ni, align 4
  %7 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %7, i32 0, i32 5
  %8 = load i32, i32* %m_nFFTBins, align 4
  %cmp2 = icmp ult i32 %6, %8
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %9 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %9, i32 0, i32 11
  %10 = load i32, i32* %ni, align 4
  %conv = sext i32 %10 to i64
  %call = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch, i64 %conv)
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call, i32 0, i32 0
  %11 = load float, float* %r, align 4
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %12, i32 0, i32 10
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i64 0, i64 0
  %13 = load i32, i32* %niChannel, align 4
  %conv4 = zext i32 %13 to i64
  %call5 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx, i64 %conv4) #3
  %14 = load i32, i32* %ni, align 4
  %conv6 = sext i32 %14 to i64
  %call7 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call5, i64 %conv6)
  %r8 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call7, i32 0, i32 0
  %15 = load float, float* %r8, align 4
  %mul = fmul float %11, %15
  %16 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %16, i32 0, i32 11
  %17 = load i32, i32* %ni, align 4
  %conv10 = sext i32 %17 to i64
  %call11 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch9, i64 %conv10)
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call11, i32 0, i32 1
  %18 = load float, float* %i, align 4
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 10
  %arrayidx13 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters12, i64 0, i64 0
  %20 = load i32, i32* %niChannel, align 4
  %conv14 = zext i32 %20 to i64
  %call15 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx13, i64 %conv14) #3
  %21 = load i32, i32* %ni, align 4
  %conv16 = sext i32 %21 to i64
  %call17 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call15, i64 %conv16)
  %i18 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call17, i32 0, i32 1
  %22 = load float, float* %i18, align 4
  %mul19 = fmul float %18, %22
  %sub = fsub float %mul, %mul19
  %r20 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 0
  store float %sub, float* %r20, align 4
  %23 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %23, i32 0, i32 11
  %24 = load i32, i32* %ni, align 4
  %conv22 = sext i32 %24 to i64
  %call23 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch21, i64 %conv22)
  %r24 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call23, i32 0, i32 0
  %25 = load float, float* %r24, align 4
  %26 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %26, i32 0, i32 10
  %arrayidx26 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters25, i64 0, i64 0
  %27 = load i32, i32* %niChannel, align 4
  %conv27 = zext i32 %27 to i64
  %call28 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx26, i64 %conv27) #3
  %28 = load i32, i32* %ni, align 4
  %conv29 = sext i32 %28 to i64
  %call30 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call28, i64 %conv29)
  %i31 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call30, i32 0, i32 1
  %29 = load float, float* %i31, align 4
  %mul32 = fmul float %25, %29
  %30 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch33 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %30, i32 0, i32 11
  %31 = load i32, i32* %ni, align 4
  %conv34 = sext i32 %31 to i64
  %call35 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch33, i64 %conv34)
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call35, i32 0, i32 1
  %32 = load float, float* %i36, align 4
  %33 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters37 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %33, i32 0, i32 10
  %arrayidx38 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters37, i64 0, i64 0
  %34 = load i32, i32* %niChannel, align 4
  %conv39 = zext i32 %34 to i64
  %call40 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx38, i64 %conv39) #3
  %35 = load i32, i32* %ni, align 4
  %conv41 = sext i32 %35 to i64
  %call42 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call40, i64 %conv41)
  %r43 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call42, i32 0, i32 0
  %36 = load float, float* %r43, align 4
  %mul44 = fmul float %32, %36
  %add = fadd float %mul32, %mul44
  %i45 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 1
  store float %add, float* %i45, align 4
  %37 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch46 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %37, i32 0, i32 11
  %38 = load i32, i32* %ni, align 4
  %conv47 = sext i32 %38 to i64
  %call48 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch46, i64 %conv47)
  %39 = bitcast %struct.kiss_fft_cpx* %call48 to i8*
  %40 = bitcast %struct.kiss_fft_cpx* %cpTemp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %41 = load i32, i32* %ni, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc49

for.inc49:                                        ; preds = %for.end
  %42 = load i32, i32* %niChannel, align 4
  %inc50 = add i32 %42, 1
  store i32 %inc50, i32* %niChannel, align 4
  br label %for.cond

for.end51:                                        ; preds = %for.cond
  %43 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %43) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperFIR_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %firlNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @FIR_left_fxp) #3
  store i8* %call, i8** %firlNode, align 8
  %2 = load i8*, i8** %firlNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %firlNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %firlNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @FIR_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %cpTemp = alloca %struct.kiss_fft_cpx, align 4
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc49, %entry
  %2 = load i32, i32* %niChannel, align 4
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %4 = bitcast %class.CAmbisonicBinauralizer* %3 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %2, %5
  br i1 %cmp, label %for.body, label %for.end51

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ni, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %ni, align 4
  %7 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %7, i32 0, i32 5
  %8 = load i32, i32* %m_nFFTBins, align 4
  %cmp2 = icmp ult i32 %6, %8
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %9 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %9, i32 0, i32 11
  %10 = load i32, i32* %ni, align 4
  %conv = sext i32 %10 to i64
  %call = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch, i64 %conv)
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call, i32 0, i32 0
  %11 = load float, float* %r, align 4
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %12, i32 0, i32 10
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i64 0, i64 1
  %13 = load i32, i32* %niChannel, align 4
  %conv4 = zext i32 %13 to i64
  %call5 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx, i64 %conv4) #3
  %14 = load i32, i32* %ni, align 4
  %conv6 = sext i32 %14 to i64
  %call7 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call5, i64 %conv6)
  %r8 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call7, i32 0, i32 0
  %15 = load float, float* %r8, align 4
  %mul = fmul float %11, %15
  %16 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %16, i32 0, i32 11
  %17 = load i32, i32* %ni, align 4
  %conv10 = sext i32 %17 to i64
  %call11 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch9, i64 %conv10)
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call11, i32 0, i32 1
  %18 = load float, float* %i, align 4
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 10
  %arrayidx13 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters12, i64 0, i64 1
  %20 = load i32, i32* %niChannel, align 4
  %conv14 = zext i32 %20 to i64
  %call15 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx13, i64 %conv14) #3
  %21 = load i32, i32* %ni, align 4
  %conv16 = sext i32 %21 to i64
  %call17 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call15, i64 %conv16)
  %i18 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call17, i32 0, i32 1
  %22 = load float, float* %i18, align 4
  %mul19 = fmul float %18, %22
  %sub = fsub float %mul, %mul19
  %r20 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 0
  store float %sub, float* %r20, align 4
  %23 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch21 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %23, i32 0, i32 11
  %24 = load i32, i32* %ni, align 4
  %conv22 = sext i32 %24 to i64
  %call23 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch21, i64 %conv22)
  %r24 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call23, i32 0, i32 0
  %25 = load float, float* %r24, align 4
  %26 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters25 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %26, i32 0, i32 10
  %arrayidx26 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters25, i64 0, i64 1
  %27 = load i32, i32* %niChannel, align 4
  %conv27 = zext i32 %27 to i64
  %call28 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx26, i64 %conv27) #3
  %28 = load i32, i32* %ni, align 4
  %conv29 = sext i32 %28 to i64
  %call30 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call28, i64 %conv29)
  %i31 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call30, i32 0, i32 1
  %29 = load float, float* %i31, align 4
  %mul32 = fmul float %25, %29
  %30 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch33 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %30, i32 0, i32 11
  %31 = load i32, i32* %ni, align 4
  %conv34 = sext i32 %31 to i64
  %call35 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch33, i64 %conv34)
  %i36 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call35, i32 0, i32 1
  %32 = load float, float* %i36, align 4
  %33 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_ppcpFilters37 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %33, i32 0, i32 10
  %arrayidx38 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters37, i64 0, i64 1
  %34 = load i32, i32* %niChannel, align 4
  %conv39 = zext i32 %34 to i64
  %call40 = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEixEm(%"class.std::vector.26"* %arrayidx38, i64 %conv39) #3
  %35 = load i32, i32* %ni, align 4
  %conv41 = sext i32 %35 to i64
  %call42 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %call40, i64 %conv41)
  %r43 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %call42, i32 0, i32 0
  %36 = load float, float* %r43, align 4
  %mul44 = fmul float %32, %36
  %add = fadd float %mul32, %mul44
  %i45 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %cpTemp, i32 0, i32 1
  store float %add, float* %i45, align 4
  %37 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch46 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %37, i32 0, i32 11
  %38 = load i32, i32* %ni, align 4
  %conv47 = sext i32 %38 to i64
  %call48 = call dereferenceable(8) %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr.31"* %m_pcpScratch46, i64 %conv47)
  %39 = bitcast %struct.kiss_fft_cpx* %call48 to i8*
  %40 = bitcast %struct.kiss_fft_cpx* %cpTemp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %41 = load i32, i32* %ni, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc49

for.inc49:                                        ; preds = %for.end
  %42 = load i32, i32* %niChannel, align 4
  %inc50 = add i32 %42, 1
  store i32 %inc50, i32* %niChannel, align 4
  br label %for.cond

for.end51:                                        ; preds = %for.cond
  %43 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %43) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperFIR_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %firrNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @FIR_right_fxp) #3
  store i8* %call, i8** %firrNode, align 8
  %2 = load i8*, i8** %firrNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %firrNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %firrNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @IFFT_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %2 = load i32, i32* %niChannel, align 4
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %4 = bitcast %class.CAmbisonicBinauralizer* %3 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %2, %5
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %6 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %6, i32 0, i32 9
  %call = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pIFFT_cfg) #3
  %7 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %7, i32 0, i32 11
  %call1 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %8, i32 0, i32 13
  %call2 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  call void @kiss_fftri(%struct.kiss_fftr_state* %call, %struct.kiss_fft_cpx* %call1, float* %call2)
  store i32 0, i32* %ni, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %ni, align 4
  %10 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %10, i32 0, i32 4
  %11 = load i32, i32* %m_nFFTSize, align 8
  %cmp4 = icmp ult i32 %9, %11
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %12, i32 0, i32 13
  %13 = load i32, i32* %ni, align 4
  %conv = zext i32 %13 to i64
  %call7 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB6, i64 %conv) #3
  %14 = load float, float* %call7, align 4
  %15 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %15, i32 0, i32 12
  %16 = load i32, i32* %ni, align 4
  %conv8 = zext i32 %16 to i64
  %call9 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA, i64 %conv8) #3
  %17 = load float, float* %call9, align 4
  %add = fadd float %17, %14
  store float %add, float* %call9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body5
  %18 = load i32, i32* %ni, align 4
  %inc = add i32 %18, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %19 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %19, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %20 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %20) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperIFFT_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %ifftlNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @IFFT_left_fxp) #3
  store i8* %call, i8** %ifftlNode, align 8
  %2 = load i8*, i8** %ifftlNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %ifftlNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %ifftlNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @IFFT_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #4 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %niChannel = alloca i32, align 4
  %ni = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  store i32 0, i32* %niChannel, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %2 = load i32, i32* %niChannel, align 4
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %4 = bitcast %class.CAmbisonicBinauralizer* %3 to %class.CAmbisonicBase*
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nChannelCount, align 8
  %cmp = icmp ult i32 %2, %5
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  %6 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %6, i32 0, i32 9
  %call = call %struct.kiss_fftr_state* @_ZNKSt10unique_ptrI15kiss_fftr_statePFvPvEE3getEv(%"class.std::unique_ptr.20"* %m_pIFFT_cfg) #3
  %7 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %7, i32 0, i32 11
  %call1 = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %8, i32 0, i32 13
  %call2 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  call void @kiss_fftri(%struct.kiss_fftr_state* %call, %struct.kiss_fft_cpx* %call1, float* %call2)
  store i32 0, i32* %ni, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %ni, align 4
  %10 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %10, i32 0, i32 4
  %11 = load i32, i32* %m_nFFTSize, align 8
  %cmp4 = icmp ult i32 %9, %11
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3
  %12 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferB6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %12, i32 0, i32 13
  %13 = load i32, i32* %ni, align 4
  %conv = zext i32 %13 to i64
  %call7 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferB6, i64 %conv) #3
  %14 = load float, float* %call7, align 4
  %15 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %15, i32 0, i32 12
  %16 = load i32, i32* %ni, align 4
  %conv8 = zext i32 %16 to i64
  %call9 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA, i64 %conv8) #3
  %17 = load float, float* %call9, align 4
  %add = fadd float %17, %14
  store float %add, float* %call9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body5
  %18 = load i32, i32* %ni, align 4
  %inc = add i32 %18, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %19 = load i32, i32* %niChannel, align 4
  %inc11 = add i32 %19, 1
  store i32 %inc11, i32* %niChannel, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %20 = load i64, i64* %bytes_decoder.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %20) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperIFFT_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %ifftrNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 1, %class.CAmbisonicBinauralizer* %0, i32 1, %class.CAmbisonicBinauralizer* %1) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @IFFT_right_fxp) #3
  store i8* %call, i8** %ifftrNode, align 8
  %2 = load i8*, i8** %ifftrNode, align 8
  call void @__hpvm__bindIn(i8* %2, i32 0, i32 0, i32 0) #3
  %3 = load i8*, i8** %ifftrNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 1, i32 1, i32 0) #3
  %4 = load i8*, i8** %ifftrNode, align 8
  call void @__hpvm__bindOut(i8* %4, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @overlap_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %resultSample0.addr = alloca float*, align 8
  %bytes_resultSample0.addr = alloca i64, align 8
  %ni = alloca i32, align 4
  %ni5 = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store float* %resultSample0, float** %resultSample0.addr, align 8
  store i64 %bytes_resultSample0, i64* %bytes_resultSample0.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load float*, float** %resultSample0.addr, align 8
  %2 = load float*, float** %resultSample0.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, float* %1, i32 1, float* %2) #3
  store i32 0, i32* %ni, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %ni, align 4
  %4 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nFFTSize, align 8
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %6, i32 0, i32 6
  %7 = load float, float* %m_fFFTScaler, align 8
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %8, i32 0, i32 12
  %9 = load i32, i32* %ni, align 4
  %conv = sext i32 %9 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA, i64 %conv) #3
  %10 = load float, float* %call, align 4
  %mul = fmul float %10, %7
  store float %mul, float* %call, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %ni, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load float*, float** %resultSample0.addr, align 8
  %13 = bitcast float* %12 to i8*
  %14 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %14, i32 0, i32 12
  %call2 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA1) #3
  %15 = bitcast float* %call2 to i8*
  %16 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %16, i32 0, i32 2
  %17 = load i32, i32* %m_nBlockSize, align 8
  %conv3 = zext i32 %17 to i64
  %mul4 = mul i64 %conv3, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %15, i64 %mul4, i1 false)
  store i32 0, i32* %ni5, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc12, %for.end
  %18 = load i32, i32* %ni5, align 4
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 7
  %20 = load i32, i32* %m_nOverlapLength, align 4
  %cmp7 = icmp ult i32 %18, %20
  br i1 %cmp7, label %for.body8, label %for.end14

for.body8:                                        ; preds = %for.cond6
  %21 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %21, i32 0, i32 15
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i64 0, i64 0
  %22 = load i32, i32* %ni5, align 4
  %conv9 = sext i32 %22 to i64
  %call10 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %arrayidx, i64 %conv9) #3
  %23 = load float, float* %call10, align 4
  %24 = load float*, float** %resultSample0.addr, align 8
  %25 = load i32, i32* %ni5, align 4
  %idxprom = sext i32 %25 to i64
  %arrayidx11 = getelementptr inbounds float, float* %24, i64 %idxprom
  %26 = load float, float* %arrayidx11, align 4
  %add = fadd float %26, %23
  store float %add, float* %arrayidx11, align 4
  br label %for.inc12

for.inc12:                                        ; preds = %for.body8
  %27 = load i32, i32* %ni5, align 4
  %inc13 = add nsw i32 %27, 1
  store i32 %inc13, i32* %ni5, align 4
  br label %for.cond6

for.end14:                                        ; preds = %for.cond6
  %28 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfOverlap15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %28, i32 0, i32 15
  %arrayidx16 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap15, i64 0, i64 0
  %call17 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx16) #3
  %29 = bitcast float* %call17 to i8*
  %30 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA18 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %30, i32 0, i32 12
  %31 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize19 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %31, i32 0, i32 2
  %32 = load i32, i32* %m_nBlockSize19, align 8
  %conv20 = zext i32 %32 to i64
  %call21 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA18, i64 %conv20) #3
  %33 = bitcast float* %call21 to i8*
  %34 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nOverlapLength22 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %34, i32 0, i32 7
  %35 = load i32, i32* %m_nOverlapLength22, align 4
  %conv23 = zext i32 %35 to i64
  %mul24 = mul i64 %conv23, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %33, i64 %mul24, i1 false)
  %36 = load i64, i64* %bytes_resultSample0.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %36) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperOverlap_left_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample0, i64 %bytes_resultSample0) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %resultSample0.addr = alloca float*, align 8
  %bytes_resultSample0.addr = alloca i64, align 8
  %overLeftNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store float* %resultSample0, float** %resultSample0.addr, align 8
  store i64 %bytes_resultSample0, i64* %bytes_resultSample0.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load float*, float** %resultSample0.addr, align 8
  %2 = load float*, float** %resultSample0.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, float* %1, i32 1, float* %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_left_fxp) #3
  store i8* %call, i8** %overLeftNode, align 8
  %3 = load i8*, i8** %overLeftNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %overLeftNode, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %overLeftNode, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %overLeftNode, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %overLeftNode, align 8
  call void @__hpvm__bindOut(i8* %7, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @overlap_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %resultSample1.addr = alloca float*, align 8
  %bytes_resultSample1.addr = alloca i64, align 8
  %ni = alloca i32, align 4
  %ni5 = alloca i32, align 4
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store float* %resultSample1, float** %resultSample1.addr, align 8
  store i64 %bytes_resultSample1, i64* %bytes_resultSample1.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load float*, float** %resultSample1.addr, align 8
  %2 = load float*, float** %resultSample1.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, float* %1, i32 1, float* %2) #3
  store i32 0, i32* %ni, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %ni, align 4
  %4 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %4, i32 0, i32 4
  %5 = load i32, i32* %m_nFFTSize, align 8
  %cmp = icmp ult i32 %3, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %6, i32 0, i32 6
  %7 = load float, float* %m_fFFTScaler, align 8
  %8 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %8, i32 0, i32 12
  %9 = load i32, i32* %ni, align 4
  %conv = sext i32 %9 to i64
  %call = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA, i64 %conv) #3
  %10 = load float, float* %call, align 4
  %mul = fmul float %10, %7
  store float %mul, float* %call, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %ni, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %ni, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load float*, float** %resultSample1.addr, align 8
  %13 = bitcast float* %12 to i8*
  %14 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %14, i32 0, i32 12
  %call2 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %m_pfScratchBufferA1) #3
  %15 = bitcast float* %call2 to i8*
  %16 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %16, i32 0, i32 2
  %17 = load i32, i32* %m_nBlockSize, align 8
  %conv3 = zext i32 %17 to i64
  %mul4 = mul i64 %conv3, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %15, i64 %mul4, i1 false)
  store i32 0, i32* %ni5, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc12, %for.end
  %18 = load i32, i32* %ni5, align 4
  %19 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %19, i32 0, i32 7
  %20 = load i32, i32* %m_nOverlapLength, align 4
  %cmp7 = icmp ult i32 %18, %20
  br i1 %cmp7, label %for.body8, label %for.end14

for.body8:                                        ; preds = %for.cond6
  %21 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %21, i32 0, i32 15
  %arrayidx = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i64 0, i64 0
  %22 = load i32, i32* %ni5, align 4
  %conv9 = sext i32 %22 to i64
  %call10 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %arrayidx, i64 %conv9) #3
  %23 = load float, float* %call10, align 4
  %24 = load float*, float** %resultSample1.addr, align 8
  %25 = load i32, i32* %ni5, align 4
  %idxprom = sext i32 %25 to i64
  %arrayidx11 = getelementptr inbounds float, float* %24, i64 %idxprom
  %26 = load float, float* %arrayidx11, align 4
  %add = fadd float %26, %23
  store float %add, float* %arrayidx11, align 4
  br label %for.inc12

for.inc12:                                        ; preds = %for.body8
  %27 = load i32, i32* %ni5, align 4
  %inc13 = add nsw i32 %27, 1
  store i32 %inc13, i32* %ni5, align 4
  br label %for.cond6

for.end14:                                        ; preds = %for.cond6
  %28 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfOverlap15 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %28, i32 0, i32 15
  %arrayidx16 = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap15, i64 0, i64 1
  %call17 = call float* @_ZNSt6vectorIfSaIfEE4dataEv(%"class.std::vector.0"* %arrayidx16) #3
  %29 = bitcast float* %call17 to i8*
  %30 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_pfScratchBufferA18 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %30, i32 0, i32 12
  %31 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nBlockSize19 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %31, i32 0, i32 2
  %32 = load i32, i32* %m_nBlockSize19, align 8
  %conv20 = zext i32 %32 to i64
  %call21 = call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector.0"* %m_pfScratchBufferA18, i64 %conv20) #3
  %33 = bitcast float* %call21 to i8*
  %34 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %m_nOverlapLength22 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %34, i32 0, i32 7
  %35 = load i32, i32* %m_nOverlapLength22, align 4
  %conv23 = zext i32 %35 to i64
  %mul24 = mul i64 %conv23, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %33, i64 %mul24, i1 false)
  %36 = load i64, i64* %bytes_resultSample1.addr, align 8
  call void (i32, ...) @__hpvm__return(i32 1, i64 %36) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wrapperOverlap_right_fxp(%class.CAmbisonicBinauralizer* %decoder, i64 %bytes_decoder, float* %resultSample1, i64 %bytes_resultSample1) #5 {
entry:
  %decoder.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder.addr = alloca i64, align 8
  %resultSample1.addr = alloca float*, align 8
  %bytes_resultSample1.addr = alloca i64, align 8
  %overRightNode = alloca i8*, align 8
  store %class.CAmbisonicBinauralizer* %decoder, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  store i64 %bytes_decoder, i64* %bytes_decoder.addr, align 8
  store float* %resultSample1, float** %resultSample1.addr, align 8
  store i64 %bytes_resultSample1, i64* %bytes_resultSample1.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder.addr, align 8
  %1 = load float*, float** %resultSample1.addr, align 8
  %2 = load float*, float** %resultSample1.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 2, %class.CAmbisonicBinauralizer* %0, float* %1, i32 1, float* %2) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_right_fxp) #3
  store i8* %call, i8** %overRightNode, align 8
  %3 = load i8*, i8** %overRightNode, align 8
  call void @__hpvm__bindIn(i8* %3, i32 0, i32 0, i32 0) #3
  %4 = load i8*, i8** %overRightNode, align 8
  call void @__hpvm__bindIn(i8* %4, i32 1, i32 1, i32 0) #3
  %5 = load i8*, i8** %overRightNode, align 8
  call void @__hpvm__bindIn(i8* %5, i32 2, i32 2, i32 0) #3
  %6 = load i8*, i8** %overRightNode, align 8
  call void @__hpvm__bindIn(i8* %6, i32 3, i32 3, i32 0) #3
  %7 = load i8*, i8** %overRightNode, align 8
  call void @__hpvm__bindOut(i8* %7, i32 0, i32 0, i32 0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @audioDecoding(%class.CAmbisonicProcessor* %rotator, i64 %bytes_rotator, %class.CBFormat* %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* %decoder0, i64 %bytes_decoder0, float* %resultSample0, i64 %bytes_resultSample0, i32 %nSample, float** %channelpart1, i64 %bytes_channelpart1, float** %channelpart2, i64 %bytes_channelpart2, float** %channelpart3, i64 %bytes_channelpart3, %class.CAmbisonicBinauralizer* %decoder1, i64 %bytes_decoder1, float* %resultSample1, i64 %bytes_resultSample1) #5 {
entry:
  %rotator.addr = alloca %class.CAmbisonicProcessor*, align 8
  %bytes_rotator.addr = alloca i64, align 8
  %sumBF.addr = alloca %class.CBFormat*, align 8
  %bytes_sumBF.addr = alloca i64, align 8
  %zoomer.addr = alloca %class.CAmbisonicZoomer*, align 8
  %bytes_zoomer.addr = alloca i64, align 8
  %decoder0.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder0.addr = alloca i64, align 8
  %resultSample0.addr = alloca float*, align 8
  %bytes_resultSample0.addr = alloca i64, align 8
  %nSample.addr = alloca i32, align 4
  %channelpart1.addr = alloca float**, align 8
  %bytes_channelpart1.addr = alloca i64, align 8
  %channelpart2.addr = alloca float**, align 8
  %bytes_channelpart2.addr = alloca i64, align 8
  %channelpart3.addr = alloca float**, align 8
  %bytes_channelpart3.addr = alloca i64, align 8
  %decoder1.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  %bytes_decoder1.addr = alloca i64, align 8
  %resultSample1.addr = alloca float*, align 8
  %bytes_resultSample1.addr = alloca i64, align 8
  %rotatorSetNode = alloca i8*, align 8
  %psychoFilterNode = alloca i8*, align 8
  %rotateOrder1Node = alloca i8*, align 8
  %rotateOrder2Node = alloca i8*, align 8
  %rotateOrder3Node = alloca i8*, align 8
  %zoomSetNode = alloca i8*, align 8
  %zoomProcessNode = alloca i8*, align 8
  %setAndFFT_LeftNode = alloca i8*, align 8
  %setAndFFT_RightNode = alloca i8*, align 8
  %FIR_LeftNode = alloca i8*, align 8
  %FIR_RightNode = alloca i8*, align 8
  %IFFT_LeftNode = alloca i8*, align 8
  %IFFT_RightNode = alloca i8*, align 8
  %overlap_LeftNode = alloca i8*, align 8
  %overlap_RightNode = alloca i8*, align 8
  store %class.CAmbisonicProcessor* %rotator, %class.CAmbisonicProcessor** %rotator.addr, align 8
  store i64 %bytes_rotator, i64* %bytes_rotator.addr, align 8
  store %class.CBFormat* %sumBF, %class.CBFormat** %sumBF.addr, align 8
  store i64 %bytes_sumBF, i64* %bytes_sumBF.addr, align 8
  store %class.CAmbisonicZoomer* %zoomer, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  store i64 %bytes_zoomer, i64* %bytes_zoomer.addr, align 8
  store %class.CAmbisonicBinauralizer* %decoder0, %class.CAmbisonicBinauralizer** %decoder0.addr, align 8
  store i64 %bytes_decoder0, i64* %bytes_decoder0.addr, align 8
  store float* %resultSample0, float** %resultSample0.addr, align 8
  store i64 %bytes_resultSample0, i64* %bytes_resultSample0.addr, align 8
  store i32 %nSample, i32* %nSample.addr, align 4
  store float** %channelpart1, float*** %channelpart1.addr, align 8
  store i64 %bytes_channelpart1, i64* %bytes_channelpart1.addr, align 8
  store float** %channelpart2, float*** %channelpart2.addr, align 8
  store i64 %bytes_channelpart2, i64* %bytes_channelpart2.addr, align 8
  store float** %channelpart3, float*** %channelpart3.addr, align 8
  store i64 %bytes_channelpart3, i64* %bytes_channelpart3.addr, align 8
  store %class.CAmbisonicBinauralizer* %decoder1, %class.CAmbisonicBinauralizer** %decoder1.addr, align 8
  store i64 %bytes_decoder1, i64* %bytes_decoder1.addr, align 8
  store float* %resultSample1, float** %resultSample1.addr, align 8
  store i64 %bytes_resultSample1, i64* %bytes_resultSample1.addr, align 8
  call void @__hpvm__hint(i32 1) #3
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator.addr, align 8
  %1 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %2 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %3 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0.addr, align 8
  %4 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1.addr, align 8
  %5 = load float*, float** %resultSample0.addr, align 8
  %6 = load float*, float** %resultSample1.addr, align 8
  %7 = load %class.CBFormat*, %class.CBFormat** %sumBF.addr, align 8
  %8 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer.addr, align 8
  %9 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0.addr, align 8
  %10 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1.addr, align 8
  %11 = load float*, float** %resultSample0.addr, align 8
  %12 = load float*, float** %resultSample1.addr, align 8
  call void (i32, ...) @__hpvm__attributes(i32 7, %class.CAmbisonicProcessor* %0, %class.CBFormat* %1, %class.CAmbisonicZoomer* %2, %class.CAmbisonicBinauralizer* %3, %class.CAmbisonicBinauralizer* %4, float* %5, float* %6, i32 6, %class.CBFormat* %7, %class.CAmbisonicZoomer* %8, %class.CAmbisonicBinauralizer* %9, %class.CAmbisonicBinauralizer* %10, float* %11, float* %12) #3
  %call = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64)* @wrapperRotatorSet_fxp) #3
  store i8* %call, i8** %rotatorSetNode, align 8
  %call1 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperPsychoFilter_fxp) #3
  store i8* %call1, i8** %psychoFilterNode, align 8
  %call2 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder1_fxp) #3
  store i8* %call2, i8** %rotateOrder1Node, align 8
  %call3 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder2_fxp) #3
  store i8* %call3, i8** %rotateOrder2Node, align 8
  %call4 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder3_fxp) #3
  store i8* %call4, i8** %rotateOrder3Node, align 8
  %call5 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicZoomer*, i64)* @wrapperZoomSet_fxp) #3
  store i8* %call5, i8** %zoomSetNode, align 8
  %call6 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperZoomProcess_fxp) #3
  store i8* %call6, i8** %zoomProcessNode, align 8
  %call7 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_left_fxp) #3
  store i8* %call7, i8** %setAndFFT_LeftNode, align 8
  %call8 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_right_fxp) #3
  store i8* %call8, i8** %setAndFFT_RightNode, align 8
  %call9 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_left_fxp) #3
  store i8* %call9, i8** %FIR_LeftNode, align 8
  %call10 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_right_fxp) #3
  store i8* %call10, i8** %FIR_RightNode, align 8
  %call11 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_left_fxp) #3
  store i8* %call11, i8** %IFFT_LeftNode, align 8
  %call12 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_right_fxp) #3
  store i8* %call12, i8** %IFFT_RightNode, align 8
  %call13 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_left_fxp) #3
  store i8* %call13, i8** %overlap_LeftNode, align 8
  %call14 = call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_right_fxp) #3
  store i8* %call14, i8** %overlap_RightNode, align 8
  %13 = load i8*, i8** %rotatorSetNode, align 8
  call void @__hpvm__bindIn(i8* %13, i32 0, i32 0, i32 0) #3
  %14 = load i8*, i8** %rotatorSetNode, align 8
  call void @__hpvm__bindIn(i8* %14, i32 1, i32 1, i32 0) #3
  %15 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %15, i32 0, i32 0, i32 0) #3
  %16 = load i8*, i8** %rotatorSetNode, align 8
  %17 = load i8*, i8** %psychoFilterNode, align 8
  %call15 = call i8* @__hpvm__edge(i8* %16, i8* %17, i32 1, i32 0, i32 1, i32 0) #3
  %18 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %18, i32 2, i32 2, i32 0) #3
  %19 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %19, i32 3, i32 3, i32 0) #3
  %20 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %20, i32 10, i32 4, i32 0) #3
  %21 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %21, i32 11, i32 5, i32 0) #3
  %22 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %22, i32 12, i32 6, i32 0) #3
  %23 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %23, i32 13, i32 7, i32 0) #3
  %24 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %24, i32 14, i32 8, i32 0) #3
  %25 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %25, i32 15, i32 9, i32 0) #3
  %26 = load i8*, i8** %psychoFilterNode, align 8
  call void @__hpvm__bindIn(i8* %26, i32 16, i32 10, i32 0) #3
  %27 = load i8*, i8** %rotateOrder1Node, align 8
  call void @__hpvm__bindIn(i8* %27, i32 0, i32 0, i32 0) #3
  %28 = load i8*, i8** %psychoFilterNode, align 8
  %29 = load i8*, i8** %rotateOrder1Node, align 8
  %call16 = call i8* @__hpvm__edge(i8* %28, i8* %29, i32 1, i32 0, i32 1, i32 0) #3
  %30 = load i8*, i8** %rotateOrder1Node, align 8
  call void @__hpvm__bindIn(i8* %30, i32 10, i32 2, i32 0) #3
  %31 = load i8*, i8** %rotateOrder1Node, align 8
  call void @__hpvm__bindIn(i8* %31, i32 11, i32 3, i32 0) #3
  %32 = load i8*, i8** %psychoFilterNode, align 8
  %33 = load i8*, i8** %rotateOrder1Node, align 8
  %call17 = call i8* @__hpvm__edge(i8* %32, i8* %33, i32 1, i32 4, i32 4, i32 0) #3
  %34 = load i8*, i8** %rotateOrder2Node, align 8
  call void @__hpvm__bindIn(i8* %34, i32 0, i32 0, i32 0) #3
  %35 = load i8*, i8** %psychoFilterNode, align 8
  %36 = load i8*, i8** %rotateOrder2Node, align 8
  %call18 = call i8* @__hpvm__edge(i8* %35, i8* %36, i32 1, i32 1, i32 1, i32 0) #3
  %37 = load i8*, i8** %rotateOrder2Node, align 8
  call void @__hpvm__bindIn(i8* %37, i32 10, i32 2, i32 0) #3
  %38 = load i8*, i8** %rotateOrder2Node, align 8
  call void @__hpvm__bindIn(i8* %38, i32 13, i32 3, i32 0) #3
  %39 = load i8*, i8** %psychoFilterNode, align 8
  %40 = load i8*, i8** %rotateOrder2Node, align 8
  %call19 = call i8* @__hpvm__edge(i8* %39, i8* %40, i32 1, i32 5, i32 4, i32 0) #3
  %41 = load i8*, i8** %rotateOrder3Node, align 8
  call void @__hpvm__bindIn(i8* %41, i32 0, i32 0, i32 0) #3
  %42 = load i8*, i8** %psychoFilterNode, align 8
  %43 = load i8*, i8** %rotateOrder3Node, align 8
  %call20 = call i8* @__hpvm__edge(i8* %42, i8* %43, i32 1, i32 2, i32 1, i32 0) #3
  %44 = load i8*, i8** %rotateOrder3Node, align 8
  call void @__hpvm__bindIn(i8* %44, i32 10, i32 2, i32 0) #3
  %45 = load i8*, i8** %rotateOrder3Node, align 8
  call void @__hpvm__bindIn(i8* %45, i32 15, i32 3, i32 0) #3
  %46 = load i8*, i8** %psychoFilterNode, align 8
  %47 = load i8*, i8** %rotateOrder3Node, align 8
  %call21 = call i8* @__hpvm__edge(i8* %46, i8* %47, i32 1, i32 6, i32 4, i32 0) #3
  %48 = load i8*, i8** %zoomSetNode, align 8
  call void @__hpvm__bindIn(i8* %48, i32 4, i32 0, i32 0) #3
  %49 = load i8*, i8** %zoomSetNode, align 8
  call void @__hpvm__bindIn(i8* %49, i32 5, i32 1, i32 0) #3
  %50 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %50, i32 4, i32 0, i32 0) #3
  %51 = load i8*, i8** %zoomSetNode, align 8
  %52 = load i8*, i8** %zoomProcessNode, align 8
  %call22 = call i8* @__hpvm__edge(i8* %51, i8* %52, i32 1, i32 0, i32 1, i32 0) #3
  %53 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %53, i32 2, i32 2, i32 0) #3
  %54 = load i8*, i8** %psychoFilterNode, align 8
  %55 = load i8*, i8** %zoomProcessNode, align 8
  %call23 = call i8* @__hpvm__edge(i8* %54, i8* %55, i32 1, i32 3, i32 3, i32 0) #3
  %56 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %56, i32 10, i32 4, i32 0) #3
  %57 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %57, i32 11, i32 5, i32 0) #3
  %58 = load i8*, i8** %rotateOrder1Node, align 8
  %59 = load i8*, i8** %zoomProcessNode, align 8
  %call24 = call i8* @__hpvm__edge(i8* %58, i8* %59, i32 1, i32 0, i32 6, i32 0) #3
  %60 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %60, i32 13, i32 7, i32 0) #3
  %61 = load i8*, i8** %rotateOrder2Node, align 8
  %62 = load i8*, i8** %zoomProcessNode, align 8
  %call25 = call i8* @__hpvm__edge(i8* %61, i8* %62, i32 1, i32 0, i32 8, i32 0) #3
  %63 = load i8*, i8** %zoomProcessNode, align 8
  call void @__hpvm__bindIn(i8* %63, i32 15, i32 9, i32 0) #3
  %64 = load i8*, i8** %rotateOrder3Node, align 8
  %65 = load i8*, i8** %zoomProcessNode, align 8
  %call26 = call i8* @__hpvm__edge(i8* %64, i8* %65, i32 1, i32 0, i32 10, i32 0) #3
  %66 = load i8*, i8** %setAndFFT_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %66, i32 6, i32 0, i32 0) #3
  %67 = load i8*, i8** %setAndFFT_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %67, i32 7, i32 1, i32 0) #3
  %68 = load i8*, i8** %setAndFFT_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %68, i32 2, i32 2, i32 0) #3
  %69 = load i8*, i8** %zoomProcessNode, align 8
  %70 = load i8*, i8** %setAndFFT_LeftNode, align 8
  %call27 = call i8* @__hpvm__edge(i8* %69, i8* %70, i32 1, i32 0, i32 3, i32 0) #3
  %71 = load i8*, i8** %setAndFFT_RightNode, align 8
  call void @__hpvm__bindIn(i8* %71, i32 17, i32 0, i32 0) #3
  %72 = load i8*, i8** %setAndFFT_RightNode, align 8
  call void @__hpvm__bindIn(i8* %72, i32 18, i32 1, i32 0) #3
  %73 = load i8*, i8** %setAndFFT_RightNode, align 8
  call void @__hpvm__bindIn(i8* %73, i32 2, i32 2, i32 0) #3
  %74 = load i8*, i8** %zoomProcessNode, align 8
  %75 = load i8*, i8** %setAndFFT_RightNode, align 8
  %call28 = call i8* @__hpvm__edge(i8* %74, i8* %75, i32 1, i32 1, i32 3, i32 0) #3
  %76 = load i8*, i8** %FIR_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %76, i32 6, i32 0, i32 0) #3
  %77 = load i8*, i8** %setAndFFT_LeftNode, align 8
  %78 = load i8*, i8** %FIR_LeftNode, align 8
  %call29 = call i8* @__hpvm__edge(i8* %77, i8* %78, i32 1, i32 0, i32 1, i32 0) #3
  %79 = load i8*, i8** %FIR_RightNode, align 8
  call void @__hpvm__bindIn(i8* %79, i32 17, i32 0, i32 0) #3
  %80 = load i8*, i8** %setAndFFT_RightNode, align 8
  %81 = load i8*, i8** %FIR_RightNode, align 8
  %call30 = call i8* @__hpvm__edge(i8* %80, i8* %81, i32 1, i32 0, i32 1, i32 0) #3
  %82 = load i8*, i8** %IFFT_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %82, i32 6, i32 0, i32 0) #3
  %83 = load i8*, i8** %FIR_LeftNode, align 8
  %84 = load i8*, i8** %IFFT_LeftNode, align 8
  %call31 = call i8* @__hpvm__edge(i8* %83, i8* %84, i32 1, i32 0, i32 1, i32 0) #3
  %85 = load i8*, i8** %IFFT_RightNode, align 8
  call void @__hpvm__bindIn(i8* %85, i32 17, i32 0, i32 0) #3
  %86 = load i8*, i8** %FIR_RightNode, align 8
  %87 = load i8*, i8** %IFFT_RightNode, align 8
  %call32 = call i8* @__hpvm__edge(i8* %86, i8* %87, i32 1, i32 0, i32 1, i32 0) #3
  %88 = load i8*, i8** %overlap_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %88, i32 6, i32 0, i32 0) #3
  %89 = load i8*, i8** %IFFT_LeftNode, align 8
  %90 = load i8*, i8** %overlap_LeftNode, align 8
  %call33 = call i8* @__hpvm__edge(i8* %89, i8* %90, i32 1, i32 0, i32 1, i32 0) #3
  %91 = load i8*, i8** %overlap_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %91, i32 8, i32 2, i32 0) #3
  %92 = load i8*, i8** %overlap_LeftNode, align 8
  call void @__hpvm__bindIn(i8* %92, i32 9, i32 3, i32 0) #3
  %93 = load i8*, i8** %overlap_RightNode, align 8
  call void @__hpvm__bindIn(i8* %93, i32 17, i32 0, i32 0) #3
  %94 = load i8*, i8** %IFFT_RightNode, align 8
  %95 = load i8*, i8** %overlap_RightNode, align 8
  %call34 = call i8* @__hpvm__edge(i8* %94, i8* %95, i32 1, i32 0, i32 1, i32 0) #3
  %96 = load i8*, i8** %overlap_RightNode, align 8
  call void @__hpvm__bindIn(i8* %96, i32 19, i32 2, i32 0) #3
  %97 = load i8*, i8** %overlap_RightNode, align 8
  call void @__hpvm__bindIn(i8* %97, i32 20, i32 3, i32 0) #3
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @__hpvm__edge(i8*, i8*, i32, i32, i32, i32) #2

; Function Attrs: noinline norecurse optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #13 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %numBlocks = alloca i32, align 4
  %audio = alloca %"class.ILLIXR_AUDIO::ABAudio", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %audioAddr = alloca %"class.ILLIXR_AUDIO::ABAudio"*, align 8
  %resultSample0 = alloca float*, align 8
  %resultSample1 = alloca float*, align 8
  %sumBF = alloca %class.CBFormat*, align 8
  %channelpart1 = alloca float**, align 8
  %channelpart2 = alloca float**, align 8
  %channelpart3 = alloca float**, align 8
  %bytes_rotator = alloca i64, align 8
  %bytes_sumBF = alloca i64, align 8
  %bytes_zoomer = alloca i64, align 8
  %bytes_decoder0 = alloca i64, align 8
  %bytes_decoder1 = alloca i64, align 8
  %bytes_resultSample0 = alloca i64, align 8
  %bytes_resultSample1 = alloca i64, align 8
  %bytes_channelpart1 = alloca i64, align 8
  %bytes_channelpart2 = alloca i64, align 8
  %bytes_channelpart3 = alloca i64, align 8
  %arg = alloca %struct.RootArg*, align 8
  %i = alloca i32, align 4
  %DFG = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load i32, i32* %argc.addr, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  %1 = load i8**, i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0
  %2 = load i8*, i8** %arrayidx, align 8
  %call1 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %call, i8* %2)
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %call1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0))
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0))
  %call4 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9, i64 0, i64 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8**, i8*** %argv.addr, align 8
  %arrayidx5 = getelementptr inbounds i8*, i8** %3, i64 1
  %4 = load i8*, i8** %arrayidx5, align 8
  %call6 = call i32 @atoi(i8* %4) #20
  store i32 %call6, i32* %numBlocks, align 4
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.tmp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator.39"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end
  invoke void @_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* %audio, %"class.std::__cxx11::basic_string"* %agg.tmp, i32 2)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* %audio)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont8
  store %"class.ILLIXR_AUDIO::ABAudio"* %audio, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %call12 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont11 unwind label %lpad9

invoke.cont11:                                    ; preds = %invoke.cont10
  %5 = bitcast i8* %call12 to float*
  store float* %5, float** %resultSample0, align 8
  %call14 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont13 unwind label %lpad9

invoke.cont13:                                    ; preds = %invoke.cont11
  %6 = bitcast i8* %call14 to float*
  store float* %6, float** %resultSample1, align 8
  %call16 = invoke i8* @_Znwm(i64 64) #18
          to label %invoke.cont15 unwind label %lpad9

invoke.cont15:                                    ; preds = %invoke.cont13
  %7 = bitcast i8* %call16 to %class.CBFormat*
  invoke void @_ZN8CBFormatC1Ev(%class.CBFormat* %7)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont15
  store %class.CBFormat* %7, %class.CBFormat** %sumBF, align 8
  %8 = load %class.CBFormat*, %class.CBFormat** %sumBF, align 8
  %9 = bitcast %class.CBFormat* %8 to i1 (%class.CBFormat*, i32, i1, i32)***
  %vtable = load i1 (%class.CBFormat*, i32, i1, i32)**, i1 (%class.CBFormat*, i32, i1, i32)*** %9, align 8
  %vfn = getelementptr inbounds i1 (%class.CBFormat*, i32, i1, i32)*, i1 (%class.CBFormat*, i32, i1, i32)** %vtable, i64 2
  %10 = load i1 (%class.CBFormat*, i32, i1, i32)*, i1 (%class.CBFormat*, i32, i1, i32)** %vfn, align 8
  %call21 = invoke zeroext i1 %10(%class.CBFormat* %8, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont20 unwind label %lpad9

invoke.cont20:                                    ; preds = %invoke.cont18
  %call23 = invoke i8* @_Znam(i64 24) #18
          to label %invoke.cont22 unwind label %lpad9

invoke.cont22:                                    ; preds = %invoke.cont20
  %11 = bitcast i8* %call23 to float**
  store float** %11, float*** %channelpart1, align 8
  %call25 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont24 unwind label %lpad9

invoke.cont24:                                    ; preds = %invoke.cont22
  %12 = bitcast i8* %call25 to float*
  %13 = load float**, float*** %channelpart1, align 8
  %arrayidx26 = getelementptr inbounds float*, float** %13, i64 0
  store float* %12, float** %arrayidx26, align 8
  %call28 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont27 unwind label %lpad9

invoke.cont27:                                    ; preds = %invoke.cont24
  %14 = bitcast i8* %call28 to float*
  %15 = load float**, float*** %channelpart1, align 8
  %arrayidx29 = getelementptr inbounds float*, float** %15, i64 1
  store float* %14, float** %arrayidx29, align 8
  %call31 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont30 unwind label %lpad9

invoke.cont30:                                    ; preds = %invoke.cont27
  %16 = bitcast i8* %call31 to float*
  %17 = load float**, float*** %channelpart1, align 8
  %arrayidx32 = getelementptr inbounds float*, float** %17, i64 2
  store float* %16, float** %arrayidx32, align 8
  %call34 = invoke i8* @_Znam(i64 40) #18
          to label %invoke.cont33 unwind label %lpad9

invoke.cont33:                                    ; preds = %invoke.cont30
  %18 = bitcast i8* %call34 to float**
  store float** %18, float*** %channelpart2, align 8
  %call36 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont35 unwind label %lpad9

invoke.cont35:                                    ; preds = %invoke.cont33
  %19 = bitcast i8* %call36 to float*
  %20 = load float**, float*** %channelpart2, align 8
  %arrayidx37 = getelementptr inbounds float*, float** %20, i64 0
  store float* %19, float** %arrayidx37, align 8
  %call39 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont38 unwind label %lpad9

invoke.cont38:                                    ; preds = %invoke.cont35
  %21 = bitcast i8* %call39 to float*
  %22 = load float**, float*** %channelpart2, align 8
  %arrayidx40 = getelementptr inbounds float*, float** %22, i64 1
  store float* %21, float** %arrayidx40, align 8
  %call42 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont41 unwind label %lpad9

invoke.cont41:                                    ; preds = %invoke.cont38
  %23 = bitcast i8* %call42 to float*
  %24 = load float**, float*** %channelpart2, align 8
  %arrayidx43 = getelementptr inbounds float*, float** %24, i64 2
  store float* %23, float** %arrayidx43, align 8
  %call45 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont44 unwind label %lpad9

invoke.cont44:                                    ; preds = %invoke.cont41
  %25 = bitcast i8* %call45 to float*
  %26 = load float**, float*** %channelpart2, align 8
  %arrayidx46 = getelementptr inbounds float*, float** %26, i64 3
  store float* %25, float** %arrayidx46, align 8
  %call48 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont47 unwind label %lpad9

invoke.cont47:                                    ; preds = %invoke.cont44
  %27 = bitcast i8* %call48 to float*
  %28 = load float**, float*** %channelpart2, align 8
  %arrayidx49 = getelementptr inbounds float*, float** %28, i64 4
  store float* %27, float** %arrayidx49, align 8
  %call51 = invoke i8* @_Znam(i64 56) #18
          to label %invoke.cont50 unwind label %lpad9

invoke.cont50:                                    ; preds = %invoke.cont47
  %29 = bitcast i8* %call51 to float**
  store float** %29, float*** %channelpart3, align 8
  %call53 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont52 unwind label %lpad9

invoke.cont52:                                    ; preds = %invoke.cont50
  %30 = bitcast i8* %call53 to float*
  %31 = load float**, float*** %channelpart3, align 8
  %arrayidx54 = getelementptr inbounds float*, float** %31, i64 0
  store float* %30, float** %arrayidx54, align 8
  %call56 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont55 unwind label %lpad9

invoke.cont55:                                    ; preds = %invoke.cont52
  %32 = bitcast i8* %call56 to float*
  %33 = load float**, float*** %channelpart3, align 8
  %arrayidx57 = getelementptr inbounds float*, float** %33, i64 1
  store float* %32, float** %arrayidx57, align 8
  %call59 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont58 unwind label %lpad9

invoke.cont58:                                    ; preds = %invoke.cont55
  %34 = bitcast i8* %call59 to float*
  %35 = load float**, float*** %channelpart3, align 8
  %arrayidx60 = getelementptr inbounds float*, float** %35, i64 2
  store float* %34, float** %arrayidx60, align 8
  %call62 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont61 unwind label %lpad9

invoke.cont61:                                    ; preds = %invoke.cont58
  %36 = bitcast i8* %call62 to float*
  %37 = load float**, float*** %channelpart3, align 8
  %arrayidx63 = getelementptr inbounds float*, float** %37, i64 3
  store float* %36, float** %arrayidx63, align 8
  %call65 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont64 unwind label %lpad9

invoke.cont64:                                    ; preds = %invoke.cont61
  %38 = bitcast i8* %call65 to float*
  %39 = load float**, float*** %channelpart3, align 8
  %arrayidx66 = getelementptr inbounds float*, float** %39, i64 4
  store float* %38, float** %arrayidx66, align 8
  %call68 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont67 unwind label %lpad9

invoke.cont67:                                    ; preds = %invoke.cont64
  %40 = bitcast i8* %call68 to float*
  %41 = load float**, float*** %channelpart3, align 8
  %arrayidx69 = getelementptr inbounds float*, float** %41, i64 5
  store float* %40, float** %arrayidx69, align 8
  %call71 = invoke i8* @_Znam(i64 4096) #18
          to label %invoke.cont70 unwind label %lpad9

invoke.cont70:                                    ; preds = %invoke.cont67
  %42 = bitcast i8* %call71 to float*
  %43 = load float**, float*** %channelpart3, align 8
  %arrayidx72 = getelementptr inbounds float*, float** %43, i64 6
  store float* %42, float** %arrayidx72, align 8
  call void @__hpvm__init() #3
  store i64 200, i64* %bytes_rotator, align 8
  store i64 64, i64* %bytes_sumBF, align 8
  store i64 104, i64* %bytes_zoomer, align 8
  store i64 296, i64* %bytes_decoder0, align 8
  store i64 296, i64* %bytes_decoder1, align 8
  store i64 4096, i64* %bytes_resultSample0, align 8
  store i64 4096, i64* %bytes_resultSample1, align 8
  store i64 12288, i64* %bytes_channelpart1, align 8
  store i64 20480, i64* %bytes_channelpart2, align 8
  store i64 28672, i64* %bytes_channelpart3, align 8
  %call73 = call noalias i8* @malloc(i64 164) #3
  %44 = bitcast i8* %call73 to %struct.RootArg*
  store %struct.RootArg* %44, %struct.RootArg** %arg, align 8
  %45 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %45, i32 0, i32 5
  %46 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8
  %47 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %rotator74 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %47, i32 0, i32 0
  store %class.CAmbisonicProcessor* %46, %class.CAmbisonicProcessor** %rotator74, align 1
  %48 = load i64, i64* %bytes_rotator, align 8
  %49 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_rotator75 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %49, i32 0, i32 1
  store i64 %48, i64* %bytes_rotator75, align 1
  %50 = load %class.CBFormat*, %class.CBFormat** %sumBF, align 8
  %51 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %sumBF76 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %51, i32 0, i32 2
  store %class.CBFormat* %50, %class.CBFormat** %sumBF76, align 1
  %52 = load i64, i64* %bytes_sumBF, align 8
  %53 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_sumBF77 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %53, i32 0, i32 3
  store i64 %52, i64* %bytes_sumBF77, align 1
  %54 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %54, i32 0, i32 6
  %55 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8
  %56 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %zoomer78 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %56, i32 0, i32 4
  store %class.CAmbisonicZoomer* %55, %class.CAmbisonicZoomer** %zoomer78, align 1
  %57 = load i64, i64* %bytes_zoomer, align 8
  %58 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_zoomer79 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %58, i32 0, i32 5
  store i64 %57, i64* %bytes_zoomer79, align 1
  %59 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %59, i32 0, i32 3
  %60 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8
  %61 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %decoder080 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %61, i32 0, i32 6
  store %class.CAmbisonicBinauralizer* %60, %class.CAmbisonicBinauralizer** %decoder080, align 1
  %62 = load i64, i64* %bytes_decoder0, align 8
  %63 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_decoder081 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %63, i32 0, i32 7
  store i64 %62, i64* %bytes_decoder081, align 1
  %64 = load float*, float** %resultSample0, align 8
  %65 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %resultSample082 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %65, i32 0, i32 8
  store float* %64, float** %resultSample082, align 1
  %66 = load i64, i64* %bytes_resultSample0, align 8
  %67 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_resultSample083 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %67, i32 0, i32 9
  store i64 %66, i64* %bytes_resultSample083, align 1
  %68 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %nSample = getelementptr inbounds %struct.RootArg, %struct.RootArg* %68, i32 0, i32 10
  store i32 1024, i32* %nSample, align 1
  %69 = load float**, float*** %channelpart1, align 8
  %70 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %channelpart184 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %70, i32 0, i32 11
  store float** %69, float*** %channelpart184, align 1
  %71 = load i64, i64* %bytes_channelpart1, align 8
  %72 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_channelpart185 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %72, i32 0, i32 12
  store i64 %71, i64* %bytes_channelpart185, align 1
  %73 = load float**, float*** %channelpart2, align 8
  %74 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %channelpart286 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %74, i32 0, i32 13
  store float** %73, float*** %channelpart286, align 1
  %75 = load i64, i64* %bytes_channelpart2, align 8
  %76 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_channelpart287 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %76, i32 0, i32 14
  store i64 %75, i64* %bytes_channelpart287, align 1
  %77 = load float**, float*** %channelpart3, align 8
  %78 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %channelpart388 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %78, i32 0, i32 15
  store float** %77, float*** %channelpart388, align 1
  %79 = load i64, i64* %bytes_channelpart3, align 8
  %80 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_channelpart389 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %80, i32 0, i32 16
  store i64 %79, i64* %bytes_channelpart389, align 1
  %81 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %81, i32 0, i32 4
  %82 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8
  %83 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %decoder190 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %83, i32 0, i32 17
  store %class.CAmbisonicBinauralizer* %82, %class.CAmbisonicBinauralizer** %decoder190, align 1
  %84 = load i64, i64* %bytes_decoder1, align 8
  %85 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_decoder191 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %85, i32 0, i32 18
  store i64 %84, i64* %bytes_decoder191, align 1
  %86 = load float*, float** %resultSample1, align 8
  %87 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %resultSample192 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %87, i32 0, i32 19
  store float* %86, float** %resultSample192, align 1
  %88 = load i64, i64* %bytes_resultSample1, align 8
  %89 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %bytes_resultSample193 = getelementptr inbounds %struct.RootArg, %struct.RootArg* %89, i32 0, i32 20
  store i64 %88, i64* %bytes_resultSample193, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont70
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %numBlocks, align 4
  %cmp94 = icmp slt i32 %90, %91
  br i1 %cmp94, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %92 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %rotator95 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %92, i32 0, i32 5
  %93 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator95, align 8
  %94 = bitcast %class.CAmbisonicProcessor* %93 to i8*
  %95 = load i64, i64* %bytes_rotator, align 8
  call void @llvm_hpvm_track_mem(i8* %94, i64 %95) #3
  %96 = load %class.CBFormat*, %class.CBFormat** %sumBF, align 8
  %97 = bitcast %class.CBFormat* %96 to i8*
  %98 = load i64, i64* %bytes_sumBF, align 8
  call void @llvm_hpvm_track_mem(i8* %97, i64 %98) #3
  %99 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %zoomer96 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %99, i32 0, i32 6
  %100 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer96, align 8
  %101 = bitcast %class.CAmbisonicZoomer* %100 to i8*
  %102 = load i64, i64* %bytes_zoomer, align 8
  call void @llvm_hpvm_track_mem(i8* %101, i64 %102) #3
  %103 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder097 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %103, i32 0, i32 3
  %104 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder097, align 8
  %105 = bitcast %class.CAmbisonicBinauralizer* %104 to i8*
  %106 = load i64, i64* %bytes_decoder0, align 8
  call void @llvm_hpvm_track_mem(i8* %105, i64 %106) #3
  %107 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder198 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %107, i32 0, i32 4
  %108 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder198, align 8
  %109 = bitcast %class.CAmbisonicBinauralizer* %108 to i8*
  %110 = load i64, i64* %bytes_decoder1, align 8
  call void @llvm_hpvm_track_mem(i8* %109, i64 %110) #3
  %111 = load float*, float** %resultSample0, align 8
  %112 = bitcast float* %111 to i8*
  %113 = load i64, i64* %bytes_resultSample0, align 8
  call void @llvm_hpvm_track_mem(i8* %112, i64 %113) #3
  %114 = load float*, float** %resultSample1, align 8
  %115 = bitcast float* %114 to i8*
  %116 = load i64, i64* %bytes_resultSample1, align 8
  call void @llvm_hpvm_track_mem(i8* %115, i64 %116) #3
  %117 = load float**, float*** %channelpart1, align 8
  %118 = bitcast float** %117 to i8*
  %119 = load i64, i64* %bytes_channelpart1, align 8
  call void @llvm_hpvm_track_mem(i8* %118, i64 %119) #3
  %120 = load float**, float*** %channelpart2, align 8
  %121 = bitcast float** %120 to i8*
  %122 = load i64, i64* %bytes_channelpart2, align 8
  call void @llvm_hpvm_track_mem(i8* %121, i64 %122) #3
  %123 = load float**, float*** %channelpart3, align 8
  %124 = bitcast float** %123 to i8*
  %125 = load i64, i64* %bytes_channelpart3, align 8
  call void @llvm_hpvm_track_mem(i8* %124, i64 %125) #3
  %126 = load %struct.RootArg*, %struct.RootArg** %arg, align 8
  %127 = bitcast %struct.RootArg* %126 to i8*
  %call99 = call i8* (i32, ...) @__hpvm__launch(i32 0, void (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i32, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64)* @audioDecoding, i8* %127) #3
  store i8* %call99, i8** %DFG, align 8
  %128 = load i8*, i8** %DFG, align 8
  call void @__hpvm__wait(i8* %128) #3
  %129 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %rotator100 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %129, i32 0, i32 5
  %130 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator100, align 8
  %131 = bitcast %class.CAmbisonicProcessor* %130 to i8*
  %132 = load i64, i64* %bytes_rotator, align 8
  call void @llvm_hpvm_request_mem(i8* %131, i64 %132) #3
  %133 = load %class.CBFormat*, %class.CBFormat** %sumBF, align 8
  %134 = bitcast %class.CBFormat* %133 to i8*
  %135 = load i64, i64* %bytes_sumBF, align 8
  call void @llvm_hpvm_request_mem(i8* %134, i64 %135) #3
  %136 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %zoomer101 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %136, i32 0, i32 6
  %137 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer101, align 8
  %138 = bitcast %class.CAmbisonicZoomer* %137 to i8*
  %139 = load i64, i64* %bytes_zoomer, align 8
  call void @llvm_hpvm_request_mem(i8* %138, i64 %139) #3
  %140 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder0102 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %140, i32 0, i32 3
  %141 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0102, align 8
  %142 = bitcast %class.CAmbisonicBinauralizer* %141 to i8*
  %143 = load i64, i64* %bytes_decoder0, align 8
  call void @llvm_hpvm_request_mem(i8* %142, i64 %143) #3
  %144 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder1103 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %144, i32 0, i32 4
  %145 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1103, align 8
  %146 = bitcast %class.CAmbisonicBinauralizer* %145 to i8*
  %147 = load i64, i64* %bytes_decoder1, align 8
  call void @llvm_hpvm_request_mem(i8* %146, i64 %147) #3
  %148 = load float*, float** %resultSample0, align 8
  %149 = bitcast float* %148 to i8*
  %150 = load i64, i64* %bytes_resultSample0, align 8
  call void @llvm_hpvm_request_mem(i8* %149, i64 %150) #3
  %151 = load float*, float** %resultSample1, align 8
  %152 = bitcast float* %151 to i8*
  %153 = load i64, i64* %bytes_resultSample1, align 8
  call void @llvm_hpvm_request_mem(i8* %152, i64 %153) #3
  %154 = load float**, float*** %channelpart1, align 8
  %155 = bitcast float** %154 to i8*
  %156 = load i64, i64* %bytes_channelpart1, align 8
  call void @llvm_hpvm_request_mem(i8* %155, i64 %156) #3
  %157 = load float**, float*** %channelpart2, align 8
  %158 = bitcast float** %157 to i8*
  %159 = load i64, i64* %bytes_channelpart2, align 8
  call void @llvm_hpvm_request_mem(i8* %158, i64 %159) #3
  %160 = load float**, float*** %channelpart3, align 8
  %161 = bitcast float** %160 to i8*
  %162 = load i64, i64* %bytes_channelpart3, align 8
  call void @llvm_hpvm_request_mem(i8* %161, i64 %162) #3
  %163 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %rotator104 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %163, i32 0, i32 5
  %164 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator104, align 8
  %165 = bitcast %class.CAmbisonicProcessor* %164 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %165) #3
  %166 = load %class.CBFormat*, %class.CBFormat** %sumBF, align 8
  %167 = bitcast %class.CBFormat* %166 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %167) #3
  %168 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %zoomer105 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %168, i32 0, i32 6
  %169 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer105, align 8
  %170 = bitcast %class.CAmbisonicZoomer* %169 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %170) #3
  %171 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder0106 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %171, i32 0, i32 3
  %172 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0106, align 8
  %173 = bitcast %class.CAmbisonicBinauralizer* %172 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %173) #3
  %174 = load %"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::ABAudio"** %audioAddr, align 8
  %decoder1107 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %174, i32 0, i32 4
  %175 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1107, align 8
  %176 = bitcast %class.CAmbisonicBinauralizer* %175 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %176) #3
  %177 = load float*, float** %resultSample0, align 8
  %178 = bitcast float* %177 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %178) #3
  %179 = load float*, float** %resultSample1, align 8
  %180 = bitcast float* %179 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %180) #3
  %181 = load float**, float*** %channelpart1, align 8
  %182 = bitcast float** %181 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %182) #3
  %183 = load float**, float*** %channelpart2, align 8
  %184 = bitcast float** %183 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %184) #3
  %185 = load float**, float*** %channelpart3, align 8
  %186 = bitcast float** %185 to i8*
  call void @llvm_hpvm_untrack_mem(i8* %186) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %187 = load i32, i32* %i, align 4
  %inc = add nsw i32 %187, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

lpad:                                             ; preds = %if.end
  %188 = landingpad { i8*, i32 }
          cleanup
  %189 = extractvalue { i8*, i32 } %188, 0
  store i8* %189, i8** %exn.slot, align 8
  %190 = extractvalue { i8*, i32 } %188, 1
  store i32 %190, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad7:                                            ; preds = %invoke.cont
  %191 = landingpad { i8*, i32 }
          cleanup
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %exn.slot, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.tmp) #3
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad7, %lpad
  call void @_ZNSaIcED1Ev(%"class.std::allocator.39"* %ref.tmp) #3
  br label %eh.resume

lpad9:                                            ; preds = %invoke.cont67, %invoke.cont64, %invoke.cont61, %invoke.cont58, %invoke.cont55, %invoke.cont52, %invoke.cont50, %invoke.cont47, %invoke.cont44, %invoke.cont41, %invoke.cont38, %invoke.cont35, %invoke.cont33, %invoke.cont30, %invoke.cont27, %invoke.cont24, %invoke.cont22, %invoke.cont20, %invoke.cont18, %invoke.cont13, %invoke.cont11, %invoke.cont10, %invoke.cont8
  %194 = landingpad { i8*, i32 }
          cleanup
  %195 = extractvalue { i8*, i32 } %194, 0
  store i8* %195, i8** %exn.slot, align 8
  %196 = extractvalue { i8*, i32 } %194, 1
  store i32 %196, i32* %ehselector.slot, align 4
  br label %ehcleanup108

lpad17:                                           ; preds = %invoke.cont15
  %197 = landingpad { i8*, i32 }
          cleanup
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %exn.slot, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call16) #19
  br label %ehcleanup108

for.end:                                          ; preds = %for.cond
  call void @__hpvm__cleanup() #3
  store i32 0, i32* %retval, align 4
  call void @_ZN12ILLIXR_AUDIO7ABAudioD1Ev(%"class.ILLIXR_AUDIO::ABAudio"* %audio) #3
  br label %return

ehcleanup108:                                     ; preds = %lpad17, %lpad9
  call void @_ZN12ILLIXR_AUDIO7ABAudioD1Ev(%"class.ILLIXR_AUDIO::ABAudio"* %audio) #3
  br label %eh.resume

return:                                           ; preds = %for.end, %if.then
  %200 = load i32, i32* %retval, align 4
  ret i32 %200

eh.resume:                                        ; preds = %ehcleanup108, %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val109 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val109
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #14

; Function Attrs: nounwind
declare dso_local void @__hpvm__init() #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local void @llvm_hpvm_track_mem(i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @__hpvm__launch(i32, ...) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__wait(i8*) #2

; Function Attrs: nounwind
declare dso_local void @llvm_hpvm_request_mem(i8*, i64) #2

; Function Attrs: nounwind
declare dso_local void @llvm_hpvm_untrack_mem(i8*) #2

; Function Attrs: nounwind
declare dso_local void @__hpvm__cleanup() #2

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN8MIT_HRTFD2Ev(%class.MIT_HRTF* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.MIT_HRTF*, align 8
  store %class.MIT_HRTF* %this, %class.MIT_HRTF** %this.addr, align 8
  %this1 = load %class.MIT_HRTF*, %class.MIT_HRTF** %this.addr, align 8
  %0 = bitcast %class.MIT_HRTF* %this1 to %class.HRTF*
  call void @_ZN4HRTFD2Ev(%class.HRTF* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN8MIT_HRTFD0Ev(%class.MIT_HRTF* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.MIT_HRTF*, align 8
  store %class.MIT_HRTF* %this, %class.MIT_HRTF** %this.addr, align 8
  %this1 = load %class.MIT_HRTF*, %class.MIT_HRTF** %this.addr, align 8
  call void @_ZN8MIT_HRTFD2Ev(%class.MIT_HRTF* %this1) #3
  %0 = bitcast %class.MIT_HRTF* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN14CAmbisonicBaseD0Ev(%class.CAmbisonicBase* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBase*, align 8
  store %class.CAmbisonicBase* %this, %class.CAmbisonicBase** %this.addr, align 8
  %this1 = load %class.CAmbisonicBase*, %class.CAmbisonicBase** %this.addr, align 8
  call void @llvm.trap() #17
  unreachable
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicSource* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 2
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfOrderWeights) #3
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfCoeff) #3
  %1 = bitcast %class.CAmbisonicSource* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %1) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN16CAmbisonicSourceD0Ev(%class.CAmbisonicSource* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicSource*, align 8
  store %class.CAmbisonicSource* %this, %class.CAmbisonicSource** %this.addr, align 8
  %this1 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %this.addr, align 8
  call void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this1) #3
  %0 = bitcast %class.CAmbisonicSource* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN8CBFormatD0Ev(%class.CBFormat* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CBFormat*, align 8
  store %class.CBFormat* %this, %class.CBFormat** %this.addr, align 8
  %this1 = load %class.CBFormat*, %class.CBFormat** %this.addr, align 8
  call void @_ZN8CBFormatD2Ev(%class.CBFormat* %this1) #3
  %0 = bitcast %class.CBFormat* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicZoomer* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 4
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %a_m) #3
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 3
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted) #3
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 2
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %m_AmbEncoderFront) #3
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this1, i32 0, i32 1
  call void @_ZN17CAmbisonicDecoderD1Ev(%class.CAmbisonicDecoder* %m_AmbDecoderFront) #3
  %1 = bitcast %class.CAmbisonicZoomer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %1) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN16CAmbisonicZoomerD0Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicZoomer*, align 8
  store %class.CAmbisonicZoomer* %this, %class.CAmbisonicZoomer** %this.addr, align 8
  %this1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %this.addr, align 8
  call void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this1) #3
  %0 = bitcast %class.CAmbisonicZoomer* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %0 = bitcast %class.CAmbisonicBinauralizer* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 15
  %array.begin = getelementptr inbounds [2 x %"class.std::vector.0"], [2 x %"class.std::vector.0"]* %m_pfOverlap, i32 0, i32 0
  %1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %array.begin, i64 2
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %entry
  %arraydestroy.elementPast = phi %"class.std::vector.0"* [ %1, %entry ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arraydestroy.elementPast, i64 -1
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %arraydestroy.element) #3
  %arraydestroy.done = icmp eq %"class.std::vector.0"* %arraydestroy.element, %array.begin
  br i1 %arraydestroy.done, label %arraydestroy.done2, label %arraydestroy.body

arraydestroy.done2:                               ; preds = %arraydestroy.body
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 14
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfScratchBufferC) #3
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 13
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfScratchBufferB) #3
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 12
  call void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %m_pfScratchBufferA) #3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 11
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev(%"class.std::unique_ptr.31"* %m_pcpScratch) #3
  %m_ppcpFilters = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 10
  %array.begin3 = getelementptr inbounds [2 x %"class.std::vector.26"], [2 x %"class.std::vector.26"]* %m_ppcpFilters, i32 0, i32 0
  %2 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %array.begin3, i64 2
  br label %arraydestroy.body4

arraydestroy.body4:                               ; preds = %arraydestroy.body4, %arraydestroy.done2
  %arraydestroy.elementPast5 = phi %"class.std::vector.26"* [ %2, %arraydestroy.done2 ], [ %arraydestroy.element6, %arraydestroy.body4 ]
  %arraydestroy.element6 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arraydestroy.elementPast5, i64 -1
  call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::vector.26"* %arraydestroy.element6) #3
  %arraydestroy.done7 = icmp eq %"class.std::vector.26"* %arraydestroy.element6, %array.begin3
  br i1 %arraydestroy.done7, label %arraydestroy.done8, label %arraydestroy.body4

arraydestroy.done8:                               ; preds = %arraydestroy.body4
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 9
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* %m_pIFFT_cfg) #3
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 8
  call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* %m_pFFT_cfg) #3
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this1, i32 0, i32 1
  call void @_ZN17CAmbisonicDecoderD1Ev(%class.CAmbisonicDecoder* %m_AmbDecoder) #3
  %3 = bitcast %class.CAmbisonicBinauralizer* %this1 to %class.CAmbisonicBase*
  call void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %3) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN22CAmbisonicBinauralizerD0Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.CAmbisonicBinauralizer*, align 8
  store %class.CAmbisonicBinauralizer* %this, %class.CAmbisonicBinauralizer** %this.addr, align 8
  %this1 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %this.addr, align 8
  call void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this1) #3
  %0 = bitcast %class.CAmbisonicBinauralizer* %this1 to i8*
  call void @_ZdlPv(i8* %0) #19
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4HRTFD2Ev(%class.HRTF* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.HRTF*, align 8
  store %class.HRTF* %this, %class.HRTF** %this.addr, align 8
  %this1 = load %class.HRTF*, %class.HRTF** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4HRTFD0Ev(%class.HRTF* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %class.HRTF*, align 8
  store %class.HRTF* %this, %class.HRTF** %this.addr, align 8
  %this1 = load %class.HRTF*, %class.HRTF** %this.addr, align 8
  call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #15

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJPPfSt14default_deleteIA_S0_EEEC2Ev(%"class.std::tuple"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %this, %"class.std::tuple"** %this.addr, align 8
  %this1 = load %"class.std::tuple"*, %"class.std::tuple"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple"* %this1 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEEC2Ev(%"struct.std::_Tuple_impl"* %0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEEC2Ev(%"struct.std::_Tuple_impl"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %this, %"struct.std::_Tuple_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl"* %this1 to %"struct.std::_Tuple_impl.5"*
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEEC2Ev(%"struct.std::_Tuple_impl.5"* %0)
  %1 = bitcast %"struct.std::_Tuple_impl"* %this1 to %"struct.std::_Head_base.6"*
  call void @_ZNSt10_Head_baseILm0EPPfLb0EEC2Ev(%"struct.std::_Head_base.6"* %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEEC2Ev(%"struct.std::_Tuple_impl.5"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %this, %"struct.std::_Tuple_impl.5"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.5"* %this1 to %"struct.std::_Head_base"*
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EEC2Ev(%"struct.std::_Head_base"* %0)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EPPfLb0EEC2Ev(%"struct.std::_Head_base.6"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.6"*, align 8
  store %"struct.std::_Head_base.6"* %this, %"struct.std::_Head_base.6"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base.6"*, %"struct.std::_Head_base.6"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.6", %"struct.std::_Head_base.6"* %this1, i32 0, i32 0
  store float** null, float*** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EEC2Ev(%"struct.std::_Head_base"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %this, %"struct.std::_Head_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Head_base"* %this1 to %"struct.std::default_delete"*
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEED2Ev(%"class.std::vector.0"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load float*, float** %_M_start, align 8
  %2 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load float*, float** %_M_finish, align 8
  %4 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  invoke void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %1, float* %3, %"class.std::allocator.2"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIfSaIfEED2Ev(%"struct.std::_Vector_base.1"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIfSaIfEED2Ev(%"struct.std::_Vector_base.1"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %__first, float* %__last, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %.addr = alloca %"class.std::allocator.2"*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %.addr, align 8
  %1 = load float*, float** %__first.addr, align 8
  %2 = load float*, float** %__last.addr, align 8
  call void @_ZSt8_DestroyIPfEvT_S1_(float* %1, float* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIfSaIfEED2Ev(%"struct.std::_Vector_base.1"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load float*, float** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load float*, float** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load float*, float** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  invoke void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %this1, float* %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev(%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev(%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPfEvT_S1_(float* %__first, float* %__last) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %1 = load float*, float** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_(float* %0, float* %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_(float*, float*) #5 comdat align 2 {
entry:
  %.addr = alloca float*, align 8
  %.addr1 = alloca float*, align 8
  store float* %0, float** %.addr, align 8
  store float* %1, float** %.addr1, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %this, float* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  %__p.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  store float* %__p, float** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %0 = load float*, float** %__p.addr, align 8
  %tobool = icmp ne float* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl to %"class.std::allocator.2"*
  %2 = load float*, float** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfm(%"class.std::allocator.2"* dereferenceable(1) %1, float* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev(%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this, %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"*, %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this1 to %"class.std::allocator.2"*
  call void @_ZNSaIfED2Ev(%"class.std::allocator.2"* %0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfm(%"class.std::allocator.2"* dereferenceable(1) %__a, float* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.2"*, align 8
  %__p.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.2"* %__a, %"class.std::allocator.2"** %__a.addr, align 8
  store float* %__p, float** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.2"* %0 to %"class.__gnu_cxx::new_allocator.3"*
  %2 = load float*, float** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm(%"class.__gnu_cxx::new_allocator.3"* %1, float* %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm(%"class.__gnu_cxx::new_allocator.3"* %this, float* %__p, i64) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %__p.addr = alloca float*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %this, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  store float* %__p, float** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  %1 = load float*, float** %__p.addr, align 8
  %2 = bitcast float* %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIfED2Ev(%"class.std::allocator.2"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %this, %"class.std::allocator.2"** %this.addr, align 8
  %this1 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.2"* %this1 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIfED2Ev(%"class.__gnu_cxx::new_allocator.3"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIfED2Ev(%"class.__gnu_cxx::new_allocator.3"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %this, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local double @atan2(double, double) #2

; Function Attrs: nounwind
declare dso_local double @acos(double) #2

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2Ev(%"class.std::tuple.13"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.13"*, align 8
  store %"class.std::tuple.13"* %this, %"class.std::tuple.13"** %this.addr, align 8
  %this1 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.13"* %this1 to %"struct.std::_Tuple_impl.14"*
  call void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2Ev(%"struct.std::_Tuple_impl.14"* %0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2Ev(%"struct.std::_Tuple_impl.14"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  store %"struct.std::_Tuple_impl.14"* %this, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Tuple_impl.15"*
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2Ev(%"struct.std::_Tuple_impl.15"* %0)
  %1 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Head_base.19"*
  call void @_ZNSt10_Head_baseILm0EPfLb0EEC2Ev(%"struct.std::_Head_base.19"* %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2Ev(%"struct.std::_Tuple_impl.15"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.15"*, align 8
  store %"struct.std::_Tuple_impl.15"* %this, %"struct.std::_Tuple_impl.15"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.15"*, %"struct.std::_Tuple_impl.15"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.15"* %this1 to %"struct.std::_Head_base.16"*
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2Ev(%"struct.std::_Head_base.16"* %0)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EPfLb0EEC2Ev(%"struct.std::_Head_base.19"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.19"*, align 8
  store %"struct.std::_Head_base.19"* %this, %"struct.std::_Head_base.19"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %this1, i32 0, i32 0
  store float* null, float** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2Ev(%"struct.std::_Head_base.16"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.16"*, align 8
  store %"struct.std::_Head_base.16"* %this, %"struct.std::_Head_base.16"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base.16"*, %"struct.std::_Head_base.16"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Head_base.16"* %this1 to %"struct.std::default_delete.17"*
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev(%"class.std::tuple.32"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.32"*, align 8
  store %"class.std::tuple.32"* %this, %"class.std::tuple.32"** %this.addr, align 8
  %this1 = load %"class.std::tuple.32"*, %"class.std::tuple.32"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.32"* %this1 to %"struct.std::_Tuple_impl.33"*
  call void @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev(%"struct.std::_Tuple_impl.33"* %0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2Ev(%"struct.std::_Tuple_impl.33"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %this, %"struct.std::_Tuple_impl.33"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.33"* %this1 to %"struct.std::_Tuple_impl.34"*
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2Ev(%"struct.std::_Tuple_impl.34"* %0)
  %1 = bitcast %"struct.std::_Tuple_impl.33"* %this1 to %"struct.std::_Head_base.38"*
  call void @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2Ev(%"struct.std::_Head_base.38"* %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2Ev(%"struct.std::_Tuple_impl.34"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %this, %"struct.std::_Tuple_impl.34"** %this.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.34"* %this1 to %"struct.std::_Head_base.35"*
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2Ev(%"struct.std::_Head_base.35"* %0)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2Ev(%"struct.std::_Head_base.38"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.38"*, align 8
  store %"struct.std::_Head_base.38"* %this, %"struct.std::_Head_base.38"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base.38"*, %"struct.std::_Head_base.38"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.38", %"struct.std::_Head_base.38"* %this1, i32 0, i32 0
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2Ev(%"struct.std::_Head_base.35"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.35"*, align 8
  store %"struct.std::_Head_base.35"* %this, %"struct.std::_Head_base.35"** %this.addr, align 8
  %this1 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Head_base.35"* %this1 to %"struct.std::default_delete.36"*
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev(%"class.std::unique_ptr"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  %__ptr = alloca float***, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float*** @_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple"* dereferenceable(8) %_M_t) #3
  store float*** %call, float**** %__ptr, align 8
  %0 = load float***, float**** %__ptr, align 8
  %1 = load float**, float*** %0, align 8
  %cmp = icmp ne float** %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete"* @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr"* %this1) #3
  %2 = load float***, float**** %__ptr, align 8
  %3 = load float**, float*** %2, align 8
  invoke void @_ZNKSt14default_deleteIA_PfEclEPS0_(%"struct.std::default_delete"* %call2, float** %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load float***, float**** %__ptr, align 8
  store float** null, float*** %4, align 8
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          catch i8* null
  %6 = extractvalue { i8*, i32 } %5, 0
  call void @__clang_call_terminate(i8* %6) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %__t, %"class.std::tuple"** %__t.addr, align 8
  %0 = load %"class.std::tuple"*, %"class.std::tuple"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple"* %0 to %"struct.std::_Tuple_impl"*
  %call = call dereferenceable(8) float*** @_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %1) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete"* @_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  %call = call dereferenceable(1) %"struct.std::default_delete"* @_ZSt3getILm1EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple"* dereferenceable(8) %_M_t) #3
  ret %"struct.std::default_delete"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNKSt14default_deleteIA_PfEclEPS0_(%"struct.std::default_delete"* %this, float** %__ptr) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::default_delete"*, align 8
  %__ptr.addr = alloca float**, align 8
  store %"struct.std::default_delete"* %this, %"struct.std::default_delete"** %this.addr, align 8
  store float** %__ptr, float*** %__ptr.addr, align 8
  %this1 = load %"struct.std::default_delete"*, %"struct.std::default_delete"** %this.addr, align 8
  %0 = load float**, float*** %__ptr.addr, align 8
  %isnull = icmp eq float** %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast float** %0 to i8*
  call void @_ZdaPv(i8* %1) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %__t, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %call = call dereferenceable(8) float*** @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERS5_(%"struct.std::_Tuple_impl"* dereferenceable(8) %0) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERS5_(%"struct.std::_Tuple_impl"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %__t, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl"* %0 to %"struct.std::_Head_base.6"*
  %call = call dereferenceable(8) float*** @_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERS2_(%"struct.std::_Head_base.6"* dereferenceable(8) %1) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERS2_(%"struct.std::_Head_base.6"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.6"*, align 8
  store %"struct.std::_Head_base.6"* %__b, %"struct.std::_Head_base.6"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.6"*, %"struct.std::_Head_base.6"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.6", %"struct.std::_Head_base.6"* %0, i32 0, i32 0
  ret float*** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete"* @_ZSt3getILm1EJPPfSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %__t, %"class.std::tuple"** %__t.addr, align 8
  %0 = load %"class.std::tuple"*, %"class.std::tuple"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple"* %0 to %"struct.std::_Tuple_impl.5"*
  %call = call dereferenceable(1) %"struct.std::default_delete"* @_ZSt12__get_helperILm1ESt14default_deleteIA_PfEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.5"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete"* @_ZSt12__get_helperILm1ESt14default_deleteIA_PfEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.5"* dereferenceable(1) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %__t, %"struct.std::_Tuple_impl.5"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %__t.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEE7_M_headERS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(1) %0) #3
  ret %"struct.std::default_delete"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_PfEEE7_M_headERS4_(%"struct.std::_Tuple_impl.5"* dereferenceable(1) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.5"*, align 8
  store %"struct.std::_Tuple_impl.5"* %__t, %"struct.std::_Tuple_impl.5"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.5"*, %"struct.std::_Tuple_impl.5"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.5"* %0 to %"struct.std::_Head_base"*
  %call = call dereferenceable(1) %"struct.std::default_delete"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EE7_M_headERS4_(%"struct.std::_Head_base"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_PfELb1EE7_M_headERS4_(%"struct.std::_Head_base"* dereferenceable(1) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %__b, %"struct.std::_Head_base"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %__b.addr, align 8
  %1 = bitcast %"struct.std::_Head_base"* %0 to %"struct.std::default_delete"*
  ret %"struct.std::default_delete"* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__ptr = alloca float**, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %_M_t) #3
  store float** %call, float*** %__ptr, align 8
  %0 = load float**, float*** %__ptr, align 8
  %1 = load float*, float** %0, align 8
  %cmp = icmp ne float* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE11get_deleterEv(%"class.std::unique_ptr.12"* %this1) #3
  %2 = load float**, float*** %__ptr, align 8
  %3 = load float*, float** %2, align 8
  invoke void @_ZNKSt14default_deleteIA_fEclEPf(%"struct.std::default_delete.17"* %call2, float* %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load float**, float*** %__ptr, align 8
  store float* null, float** %4, align 8
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          catch i8* null
  %6 = extractvalue { i8*, i32 } %5, 0
  call void @__clang_call_terminate(i8* %6) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.13"*, align 8
  store %"class.std::tuple.13"* %__t, %"class.std::tuple.13"** %__t.addr, align 8
  %0 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.13"* %0 to %"struct.std::_Tuple_impl.14"*
  %call = call dereferenceable(8) float** @_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %1) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE11get_deleterEv(%"class.std::unique_ptr.12"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt3getILm1EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %_M_t) #3
  ret %"struct.std::default_delete.17"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNKSt14default_deleteIA_fEclEPf(%"struct.std::default_delete.17"* %this, float* %__ptr) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::default_delete.17"*, align 8
  %__ptr.addr = alloca float*, align 8
  store %"struct.std::default_delete.17"* %this, %"struct.std::default_delete.17"** %this.addr, align 8
  store float* %__ptr, float** %__ptr.addr, align 8
  %this1 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %this.addr, align 8
  %0 = load float*, float** %__ptr.addr, align 8
  %isnull = icmp eq float* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast float* %0 to i8*
  call void @_ZdaPv(i8* %1) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  store %"struct.std::_Tuple_impl.14"* %__t, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %call = call dereferenceable(8) float** @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERS4_(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %0) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERS4_(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  store %"struct.std::_Tuple_impl.14"* %__t, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.14"* %0 to %"struct.std::_Head_base.19"*
  %call = call dereferenceable(8) float** @_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERS1_(%"struct.std::_Head_base.19"* dereferenceable(8) %1) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERS1_(%"struct.std::_Head_base.19"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.19"*, align 8
  store %"struct.std::_Head_base.19"* %__b, %"struct.std::_Head_base.19"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %0, i32 0, i32 0
  ret float** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt3getILm1EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.13"*, align 8
  store %"class.std::tuple.13"* %__t, %"class.std::tuple.13"** %__t.addr, align 8
  %0 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.13"* %0 to %"struct.std::_Tuple_impl.15"*
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt12__get_helperILm1ESt14default_deleteIA_fEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl.15"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete.17"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt12__get_helperILm1ESt14default_deleteIA_fEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl.15"* dereferenceable(1) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.15"*, align 8
  store %"struct.std::_Tuple_impl.15"* %__t, %"struct.std::_Tuple_impl.15"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.15"*, %"struct.std::_Tuple_impl.15"** %__t.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEE7_M_headERS3_(%"struct.std::_Tuple_impl.15"* dereferenceable(1) %0) #3
  ret %"struct.std::default_delete.17"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEE7_M_headERS3_(%"struct.std::_Tuple_impl.15"* dereferenceable(1) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.15"*, align 8
  store %"struct.std::_Tuple_impl.15"* %__t, %"struct.std::_Tuple_impl.15"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.15"*, %"struct.std::_Tuple_impl.15"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.15"* %0 to %"struct.std::_Head_base.16"*
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EE7_M_headERS3_(%"struct.std::_Head_base.16"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete.17"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EE7_M_headERS3_(%"struct.std::_Head_base.16"* dereferenceable(1) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.16"*, align 8
  store %"struct.std::_Head_base.16"* %__b, %"struct.std::_Head_base.16"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.16"*, %"struct.std::_Head_base.16"** %__b.addr, align 8
  %1 = bitcast %"struct.std::_Head_base.16"* %0 to %"struct.std::default_delete.17"*
  ret %"struct.std::default_delete.17"* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev(%"class.std::unique_ptr.31"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__ptr = alloca %struct.kiss_fft_cpx**, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %_M_t) #3
  store %struct.kiss_fft_cpx** %call, %struct.kiss_fft_cpx*** %__ptr, align 8
  %0 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__ptr, align 8
  %1 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %0, align 8
  %cmp = icmp ne %struct.kiss_fft_cpx* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr.31"* %this1) #3
  %2 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__ptr, align 8
  %3 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %2, align 8
  invoke void @_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_(%"struct.std::default_delete.36"* %call2, %struct.kiss_fft_cpx* %3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %4 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__ptr, align 8
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %4, align 8
  ret void

terminate.lpad:                                   ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          catch i8* null
  %6 = extractvalue { i8*, i32 } %5, 0
  call void @__clang_call_terminate(i8* %6) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::vector.26"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %2 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8
  %4 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %4) #3
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E(%"class.std::unique_ptr.31"* %1, %"class.std::unique_ptr.31"* %3, %"class.std::allocator.28"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"struct.std::_Vector_base.27"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"struct.std::_Vector_base.27"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.20"*, align 8
  %__ptr = alloca %struct.kiss_fftr_state**, align 8
  store %"class.std::unique_ptr.20"* %this, %"class.std::unique_ptr.20"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.20"*, %"class.std::unique_ptr.20"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.21"* dereferenceable(16) %_M_t) #3
  store %struct.kiss_fftr_state** %call, %struct.kiss_fftr_state*** %__ptr, align 8
  %0 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__ptr, align 8
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %0, align 8
  %cmp = icmp ne %struct.kiss_fftr_state* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call dereferenceable(8) void (i8*)** @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE11get_deleterEv(%"class.std::unique_ptr.20"* %this1) #3
  %2 = load void (i8*)*, void (i8*)** %call2, align 8
  %3 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__ptr, align 8
  %4 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %3, align 8
  %5 = bitcast %struct.kiss_fftr_state* %4 to i8*
  invoke void %2(i8* %5)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %6 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__ptr, align 8
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %6, align 8
  ret void

terminate.lpad:                                   ; preds = %if.then
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.32"*, align 8
  store %"class.std::tuple.32"* %__t, %"class.std::tuple.32"** %__t.addr, align 8
  %0 = load %"class.std::tuple.32"*, %"class.std::tuple.32"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.32"* %0 to %"struct.std::_Tuple_impl.33"*
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %1) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr.31"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt3getILm1EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %_M_t) #3
  ret %"struct.std::default_delete.36"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_(%"struct.std::default_delete.36"* %this, %struct.kiss_fft_cpx* %__ptr) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::default_delete.36"*, align 8
  %__ptr.addr = alloca %struct.kiss_fft_cpx*, align 8
  store %"struct.std::default_delete.36"* %this, %"struct.std::default_delete.36"** %this.addr, align 8
  store %struct.kiss_fft_cpx* %__ptr, %struct.kiss_fft_cpx** %__ptr.addr, align 8
  %this1 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %this.addr, align 8
  %0 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %__ptr.addr, align 8
  %isnull = icmp eq %struct.kiss_fft_cpx* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %struct.kiss_fft_cpx* %0 to i8*
  call void @_ZdaPv(i8* %1) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %__t, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERS5_(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %0) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERS5_(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %__t, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.33"* %0 to %"struct.std::_Head_base.38"*
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERS2_(%"struct.std::_Head_base.38"* dereferenceable(8) %1) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERS2_(%"struct.std::_Head_base.38"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.38"*, align 8
  store %"struct.std::_Head_base.38"* %__b, %"struct.std::_Head_base.38"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.38"*, %"struct.std::_Head_base.38"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.38", %"struct.std::_Head_base.38"* %0, i32 0, i32 0
  ret %struct.kiss_fft_cpx** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt3getILm1EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.32"*, align 8
  store %"class.std::tuple.32"* %__t, %"class.std::tuple.32"** %__t.addr, align 8
  %0 = load %"class.std::tuple.32"*, %"class.std::tuple.32"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.32"* %0 to %"struct.std::_Tuple_impl.34"*
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt12__get_helperILm1ESt14default_deleteIA_12kiss_fft_cpxEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.34"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete.36"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt12__get_helperILm1ESt14default_deleteIA_12kiss_fft_cpxEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.34"* dereferenceable(1) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %__t, %"struct.std::_Tuple_impl.34"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %__t.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEE7_M_headERS4_(%"struct.std::_Tuple_impl.34"* dereferenceable(1) %0) #3
  ret %"struct.std::default_delete.36"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEE7_M_headERS4_(%"struct.std::_Tuple_impl.34"* dereferenceable(1) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.34"*, align 8
  store %"struct.std::_Tuple_impl.34"* %__t, %"struct.std::_Tuple_impl.34"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.34"* %0 to %"struct.std::_Head_base.35"*
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EE7_M_headERS4_(%"struct.std::_Head_base.35"* dereferenceable(1) %1) #3
  ret %"struct.std::default_delete.36"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EE7_M_headERS4_(%"struct.std::_Head_base.35"* dereferenceable(1) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.35"*, align 8
  store %"struct.std::_Head_base.35"* %__b, %"struct.std::_Head_base.35"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %__b.addr, align 8
  %1 = bitcast %"struct.std::_Head_base.35"* %0 to %"struct.std::default_delete.36"*
  ret %"struct.std::default_delete.36"* %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E(%"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"* %__last, %"class.std::allocator.28"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %.addr = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store %"class.std::unique_ptr.31"* %__last, %"class.std::unique_ptr.31"** %__last.addr, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %.addr, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__last.addr, align 8
  call void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvT_S7_(%"class.std::unique_ptr.31"* %1, %"class.std::unique_ptr.31"* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.28"*
  ret %"class.std::allocator.28"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"struct.std::_Vector_base.27"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.31"* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.31"* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.27"* %this1, %"class.std::unique_ptr.31"* %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvT_S7_(%"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"* %__last) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store %"class.std::unique_ptr.31"* %__last, %"class.std::unique_ptr.31"** %__last.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEEEvT_S9_(%"class.std::unique_ptr.31"* %0, %"class.std::unique_ptr.31"* %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEEEvT_S9_(%"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"* %__last) #4 comdat align 2 {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store %"class.std::unique_ptr.31"* %__last, %"class.std::unique_ptr.31"** %__last.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__last.addr, align 8
  %cmp = icmp ne %"class.std::unique_ptr.31"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZSt11__addressofISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEPT_RS6_(%"class.std::unique_ptr.31"* dereferenceable(8) %2) #3
  call void @_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_(%"class.std::unique_ptr.31"* %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %3, i32 1
  store %"class.std::unique_ptr.31"* %incdec.ptr, %"class.std::unique_ptr.31"** %__first.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_(%"class.std::unique_ptr.31"* %__pointer) #5 comdat {
entry:
  %__pointer.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__pointer, %"class.std::unique_ptr.31"** %__pointer.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__pointer.addr, align 8
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev(%"class.std::unique_ptr.31"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt11__addressofISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEPT_RS6_(%"class.std::unique_ptr.31"* dereferenceable(8) %__r) #5 comdat {
entry:
  %__r.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__r, %"class.std::unique_ptr.31"** %__r.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__r.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.31"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.31"*
  ret %"class.std::unique_ptr.31"* %2
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.27"* %this, %"class.std::unique_ptr.31"* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  store %"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %tobool = icmp ne %"class.std::unique_ptr.31"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.28"*
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.28"* dereferenceable(1) %1, %"class.std::unique_ptr.31"* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this, %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this1 to %"class.std::allocator.28"*
  call void @_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEED2Ev(%"class.std::allocator.28"* %0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.28"* dereferenceable(1) %__a, %"class.std::unique_ptr.31"* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.28"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.28"* %__a, %"class.std::allocator.28"** %__a.addr, align 8
  store %"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.28"* %0 to %"class.__gnu_cxx::new_allocator.29"*
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.29"* %1, %"class.std::unique_ptr.31"* %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.29"* %this, %"class.std::unique_ptr.31"* %__p, i64) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %this, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  store %"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %2 = bitcast %"class.std::unique_ptr.31"* %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEED2Ev(%"class.std::allocator.28"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %this, %"class.std::allocator.28"** %this.addr, align 8
  %this1 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.28"* %this1 to %"class.__gnu_cxx::new_allocator.29"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.29"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.29"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %this, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.21"* dereferenceable(16) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::tuple.21"* %__t, %"class.std::tuple.21"** %__t.addr, align 8
  %0 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.21"* %0 to %"struct.std::_Tuple_impl.22"*
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %1) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE11get_deleterEv(%"class.std::unique_ptr.20"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.20"*, align 8
  store %"class.std::unique_ptr.20"* %this, %"class.std::unique_ptr.20"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.20"*, %"class.std::unique_ptr.20"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) void (i8*)** @_ZSt3getILm1EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.21"* dereferenceable(16) %_M_t) #3
  ret void (i8*)** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %__t, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERS5_(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %0) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERS5_(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %__t, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.22"* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 8
  %2 = bitcast i8* %add.ptr to %"struct.std::_Head_base.25"*
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERS2_(%"struct.std::_Head_base.25"* dereferenceable(8) %2) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERS2_(%"struct.std::_Head_base.25"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.25"*, align 8
  store %"struct.std::_Head_base.25"* %__b, %"struct.std::_Head_base.25"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.25"*, %"struct.std::_Head_base.25"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.25", %"struct.std::_Head_base.25"* %0, i32 0, i32 0
  ret %struct.kiss_fftr_state** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZSt3getILm1EJP15kiss_fftr_statePFvPvEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.21"* dereferenceable(16) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::tuple.21"* %__t, %"class.std::tuple.21"** %__t.addr, align 8
  %0 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.21"* %0 to %"struct.std::_Tuple_impl.23"*
  %call = call dereferenceable(8) void (i8*)** @_ZSt12__get_helperILm1EPFvPvEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl.23"* dereferenceable(8) %1) #3
  ret void (i8*)** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZSt12__get_helperILm1EPFvPvEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE(%"struct.std::_Tuple_impl.23"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %__t, %"struct.std::_Tuple_impl.23"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %__t.addr, align 8
  %call = call dereferenceable(8) void (i8*)** @_ZNSt11_Tuple_implILm1EJPFvPvEEE7_M_headERS3_(%"struct.std::_Tuple_impl.23"* dereferenceable(8) %0) #3
  ret void (i8*)** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZNSt11_Tuple_implILm1EJPFvPvEEE7_M_headERS3_(%"struct.std::_Tuple_impl.23"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.23"*, align 8
  store %"struct.std::_Tuple_impl.23"* %__t, %"struct.std::_Tuple_impl.23"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.23"* %0 to %"struct.std::_Head_base.24"*
  %call = call dereferenceable(8) void (i8*)** @_ZNSt10_Head_baseILm1EPFvPvELb0EE7_M_headERS3_(%"struct.std::_Head_base.24"* dereferenceable(8) %1) #3
  ret void (i8*)** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZNSt10_Head_baseILm1EPFvPvELb0EE7_M_headERS3_(%"struct.std::_Head_base.24"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.24"*, align 8
  store %"struct.std::_Head_base.24"* %__b, %"struct.std::_Head_base.24"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.24"*, %"struct.std::_Head_base.24"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.24", %"struct.std::_Head_base.24"* %0, i32 0, i32 0
  ret void (i8*)** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIsEC2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIsED2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEEC2EmRKS0_(%"struct.std::_Vector_base"* %this, i64 %__n, %"class.std::allocator"* dereferenceable(1) %__a) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  call void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, %"class.std::allocator"* dereferenceable(1) %0) #3
  %1 = load i64, i64* %__n.addr, align 8
  invoke void @_ZNSt12_Vector_baseIsSaIsEE17_M_create_storageEm(%"struct.std::_Vector_base"* %this1, i64 %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implD2Ev(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIsSaIsEE21_M_default_initializeEm(%"class.std::vector"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load i16*, i16** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIsSaIsEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %3) #3
  %call2 = call i16* @_ZSt27__uninitialized_default_n_aIPsmsET_S1_T0_RSaIT1_E(i16* %1, i64 %2, %"class.std::allocator"* dereferenceable(1) %call)
  %4 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl3, i32 0, i32 1
  store i16* %call2, i16** %_M_finish, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEED2Ev(%"struct.std::_Vector_base"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load i16*, i16** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load i16*, i16** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load i16*, i16** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint i16* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i16* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2
  invoke void @_ZNSt12_Vector_baseIsSaIsEE13_M_deallocateEPsm(%"struct.std::_Vector_base"* %this1, i16* %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implD2Ev(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implD2Ev(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this, %"class.std::allocator"* dereferenceable(1) %__a) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"*, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this, %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"** %this.addr, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  %this1 = load %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"*, %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this1 to %"class.std::allocator"*
  %1 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  call void @_ZNSaIsEC2ERKS_(%"class.std::allocator"* %0, %"class.std::allocator"* dereferenceable(1) %1) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this1, i32 0, i32 0
  store i16* null, i16** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this1, i32 0, i32 1
  store i16* null, i16** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this1, i32 0, i32 2
  store i16* null, i16** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEE17_M_create_storageEm(%"struct.std::_Vector_base"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %call = call i16* @_ZNSt12_Vector_baseIsSaIsEE11_M_allocateEm(%"struct.std::_Vector_base"* %this1, i64 %0)
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  store i16* %call, i16** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start3 = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %1 = load i16*, i16** %_M_start3, align 8
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  store i16* %1, i16** %_M_finish, align 8
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start6 = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl5, i32 0, i32 0
  %2 = load i16*, i16** %_M_start6, align 8
  %3 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %3
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl", %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl7, i32 0, i32 2
  store i16* %add.ptr, i16** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEE12_Vector_implD2Ev(%"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this, %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"*, %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %this1 to %"class.std::allocator"*
  call void @_ZNSaIsED2Ev(%"class.std::allocator"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIsEC2ERKS_(%"class.std::allocator"* %this, %"class.std::allocator"* dereferenceable(1) %__a) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*
  %1 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  %2 = bitcast %"class.std::allocator"* %1 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIsEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %2) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIsEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZNSt12_Vector_baseIsSaIsEE11_M_allocateEm(%"struct.std::_Vector_base"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call i16* @_ZNSt16allocator_traitsISaIsEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %call, %cond.true ], [ null, %cond.false ]
  ret i16* %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZNSt16allocator_traitsISaIsEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %__a, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call i16* @_ZN9__gnu_cxx13new_allocatorIsE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %1, i64 %2, i8* null)
  ret i16* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZN9__gnu_cxx13new_allocatorIsE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %this, i64 %__n, i8*) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIsE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 2
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to i16*
  ret i16* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIsE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret i64 9223372036854775807
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #16

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZSt27__uninitialized_default_n_aIPsmsET_S1_T0_RSaIT1_E(i16* %__first, i64 %__n, %"class.std::allocator"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator"*, align 8
  store i16* %__first, i16** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %.addr, align 8
  %1 = load i16*, i16** %__first.addr, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %call = call i16* @_ZSt25__uninitialized_default_nIPsmET_S1_T0_(i16* %1, i64 %2)
  ret i16* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIsSaIsEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZSt25__uninitialized_default_nIPsmET_S1_T0_(i16* %__first, i64 %__n) #4 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store i16* %__first, i16** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = load i16*, i16** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i16* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPsmEET_S3_T0_(i16* %0, i64 %1)
  ret i16* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPsmEET_S3_T0_(i16* %__first, i64 %__n) #4 comdat align 2 {
entry:
  %__first.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i16, align 2
  store i16* %__first, i16** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load i16*, i16** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  store i16 0, i16* %ref.tmp, align 2
  %call = call i16* @_ZSt6fill_nIPsmsET_S1_T0_RKT1_(i16* %0, i64 %1, i16* dereferenceable(2) %ref.tmp)
  ret i16* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZSt6fill_nIPsmsET_S1_T0_RKT1_(i16* %__first, i64 %__n, i16* dereferenceable(2) %__value) #4 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca i16*, align 8
  store i16* %__first, i16** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i16* %__value, i16** %__value.addr, align 8
  %0 = load i16*, i16** %__first.addr, align 8
  %call = call i16* @_ZSt12__niter_baseIPsENSt11_Niter_baseIT_E13iterator_typeES2_(i16* %0)
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load i16*, i16** %__value.addr, align 8
  %call1 = call i16* @_ZSt10__fill_n_aIPsmsEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i16* %call, i64 %1, i16* dereferenceable(2) %2)
  ret i16* %call1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i16* @_ZSt10__fill_n_aIPsmsEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i16* %__first, i64 %__n, i16* dereferenceable(2) %__value) #5 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca i16*, align 8
  %__tmp = alloca i16, align 2
  %__niter = alloca i64, align 8
  store i16* %__first, i16** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i16* %__value, i16** %__value.addr, align 8
  %0 = load i16*, i16** %__value.addr, align 8
  %1 = load i16, i16* %0, align 2
  store i16 %1, i16* %__tmp, align 2
  %2 = load i64, i64* %__n.addr, align 8
  store i64 %2, i64* %__niter, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %__niter, align 8
  %cmp = icmp ugt i64 %3, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i16, i16* %__tmp, align 2
  %5 = load i16*, i16** %__first.addr, align 8
  store i16 %4, i16* %5, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %__niter, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %__niter, align 8
  %7 = load i16*, i16** %__first.addr, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %7, i32 1
  store i16* %incdec.ptr, i16** %__first.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load i16*, i16** %__first.addr, align 8
  ret i16* %8
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i16* @_ZSt12__niter_baseIPsENSt11_Niter_baseIT_E13iterator_typeES2_(i16* %__it) #4 comdat {
entry:
  %__it.addr = alloca i16*, align 8
  store i16* %__it, i16** %__it.addr, align 8
  %0 = load i16*, i16** %__it.addr, align 8
  %call = call i16* @_ZNSt10_Iter_baseIPsLb0EE7_S_baseES0_(i16* %0)
  ret i16* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i16* @_ZNSt10_Iter_baseIPsLb0EE7_S_baseES0_(i16* %__it) #5 comdat align 2 {
entry:
  %__it.addr = alloca i16*, align 8
  store i16* %__it, i16** %__it.addr, align 8
  %0 = load i16*, i16** %__it.addr, align 8
  ret i16* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIsSaIsEE13_M_deallocateEPsm(%"struct.std::_Vector_base"* %this, i16* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__p.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store i16* %__p, i16** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load i16*, i16** %__p.addr, align 8
  %tobool = icmp ne i16* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<short, std::allocator<short> >::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  %2 = load i16*, i16** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaIsEE10deallocateERS0_Psm(%"class.std::allocator"* dereferenceable(1) %1, i16* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIsEE10deallocateERS0_Psm(%"class.std::allocator"* dereferenceable(1) %__a, i16* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__p.addr = alloca i16*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8
  store i16* %__p, i16** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load i16*, i16** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIsE10deallocateEPsm(%"class.__gnu_cxx::new_allocator"* %1, i16* %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIsE10deallocateEPsm(%"class.__gnu_cxx::new_allocator"* %this, i16* %__p, i64) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__p.addr = alloca i16*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  store i16* %__p, i16** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %1 = load i16*, i16** %__p.addr, align 8
  %2 = bitcast i16* %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPssEvT_S1_RSaIT0_E(i16* %__first, i16* %__last, %"class.std::allocator"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__last.addr = alloca i16*, align 8
  %.addr = alloca %"class.std::allocator"*, align 8
  store i16* %__first, i16** %__first.addr, align 8
  store i16* %__last, i16** %__last.addr, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %.addr, align 8
  %1 = load i16*, i16** %__first.addr, align 8
  %2 = load i16*, i16** %__last.addr, align 8
  call void @_ZSt8_DestroyIPsEvT_S1_(i16* %1, i16* %2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPsEvT_S1_(i16* %__first, i16* %__last) #4 comdat {
entry:
  %__first.addr = alloca i16*, align 8
  %__last.addr = alloca i16*, align 8
  store i16* %__first, i16** %__first.addr, align 8
  store i16* %__last, i16** %__last.addr, align 8
  %0 = load i16*, i16** %__first.addr, align 8
  %1 = load i16*, i16** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPsEEvT_S3_(i16* %0, i16* %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPsEEvT_S3_(i16*, i16*) #5 comdat align 2 {
entry:
  %.addr = alloca i16*, align 8
  %.addr1 = alloca i16*, align 8
  store i16* %0, i16** %.addr, align 8
  store i16* %1, i16** %.addr1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i16* @_ZNKSt6vectorIsSaIsEE11_M_data_ptrIsEEPT_S4_(%"class.std::vector"* %this, i16* %__ptr) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__ptr.addr = alloca i16*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i16* %__ptr, i16** %__ptr.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = load i16*, i16** %__ptr.addr, align 8
  ret i16* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIfSaIfEEC2Ev(%"struct.std::_Vector_base.1"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2Ev(%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2Ev(%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this, %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"*, %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this1 to %"class.std::allocator.2"*
  call void @_ZNSaIfEC2Ev(%"class.std::allocator.2"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this1, i32 0, i32 0
  store float* null, float** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this1, i32 0, i32 1
  store float* null, float** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %this1, i32 0, i32 2
  store float* null, float** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIfEC2Ev(%"class.std::allocator.2"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %this, %"class.std::allocator.2"** %this.addr, align 8
  %this1 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.2"* %this1 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIfEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIfEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %this, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load float*, float** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load float*, float** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EEmRS4_(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) #4 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.48", align 8
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__n.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  %__offset = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.48", align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %ref.tmp4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %ref.tmp10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %__position, i32 0, i32 0
  store float* %__position.coerce, float** %coerce.dive, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %call = call float* @_ZNKSt6vectorIfSaIfEE6cbeginEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive2 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %ref.tmp, i32 0, i32 0
  store float* %call, float** %coerce.dive2, align 8
  %call3 = call i64 @_ZN9__gnu_cxxmiIPKfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.48"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator.48"* dereferenceable(8) %ref.tmp) #3
  store i64 %call3, i64* %__offset, align 8
  %call5 = call float* @_ZNSt6vectorIfSaIfEE5beginEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp4, i32 0, i32 0
  store float* %call5, float** %coerce.dive6, align 8
  %0 = load i64, i64* %__offset, align 8
  %call7 = call float* @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEplEl(%"class.__gnu_cxx::__normal_iterator"* %ref.tmp4, i64 %0) #3
  %coerce.dive8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store float* %call7, float** %coerce.dive8, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load float*, float** %__x.addr, align 8
  %coerce.dive9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %3 = load float*, float** %coerce.dive9, align 8
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this1, float* %3, i64 %1, float* dereferenceable(4) %2)
  %call11 = call float* @_ZNSt6vectorIfSaIfEE5beginEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp10, i32 0, i32 0
  store float* %call11, float** %coerce.dive12, align 8
  %4 = load i64, i64* %__offset, align 8
  %call13 = call float* @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEplEl(%"class.__gnu_cxx::__normal_iterator"* %ref.tmp10, i64 %4) #3
  %coerce.dive14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  store float* %call13, float** %coerce.dive14, align 8
  %coerce.dive15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %5 = load float*, float** %coerce.dive15, align 8
  ret float* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt6vectorIfSaIfEE3endEv(%"class.std::vector.0"* %this) #5 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %retval, float** dereferenceable(8) %_M_finish) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %1 = load float*, float** %coerce.dive, align 8
  ret float* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2IPfEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.48"* %this, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.48"*, align 8
  %__i.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.48"* %this, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__i, %"class.__gnu_cxx::__normal_iterator"** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.48"*, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %this1, i32 0, i32 0
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__i.addr, align 8
  %call = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #3
  %1 = load float*, float** %call, align 8
  store float* %1, float** %_M_current, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEE15_M_erase_at_endEPf(%"class.std::vector.0"* %this, float* %__pos) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__pos.addr = alloca float*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store float* %__pos, float** %__pos.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load float*, float** %__pos.addr, align 8
  %1 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %2 = load float*, float** %_M_finish, align 8
  %3 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %3) #3
  invoke void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %0, float* %2, %"class.std::allocator.2"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %4 = load float*, float** %__pos.addr, align 8
  %5 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %_M_finish3 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  store float* %4, float** %_M_finish3, align 8
  ret void

terminate.lpad:                                   ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  call void @__clang_call_terminate(i8* %7) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPKfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.48"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.48"* dereferenceable(8) %__rhs) #5 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.48"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.48"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.48"* %__lhs, %"class.__gnu_cxx::__normal_iterator.48"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator.48"* %__rhs, %"class.__gnu_cxx::__normal_iterator.48"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator.48"*, %"class.__gnu_cxx::__normal_iterator.48"** %__lhs.addr, align 8
  %call = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.48"* %0) #3
  %1 = load float*, float** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator.48"*, %"class.__gnu_cxx::__normal_iterator.48"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.48"* %2) #3
  %3 = load float*, float** %call1, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNKSt6vectorIfSaIfEE6cbeginEv(%"class.std::vector.0"* %this) #5 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.48", align 8
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %ref.tmp = alloca float*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load float*, float** %_M_start, align 8
  store float* %1, float** %ref.tmp, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.48"* %retval, float** dereferenceable(8) %ref.tmp) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %retval, i32 0, i32 0
  %2 = load float*, float** %coerce.dive, align 8
  ret float* %2
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__n.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  %__x_copy = alloca float, align 4
  %__elems_after = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__old_finish = alloca float*, align 8
  %__len = alloca i64, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__new_start = alloca float*, align 8
  %__new_finish = alloca float*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__position, i32 0, i32 0
  store float* %__position.coerce, float** %coerce.dive, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end102

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 2
  %2 = load float*, float** %_M_end_of_storage, align 8
  %3 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load float*, float** %_M_finish, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  %5 = load i64, i64* %__n.addr, align 8
  %cmp3 = icmp uge i64 %sub.ptr.div, %5
  br i1 %cmp3, label %if.then4, label %if.else44

if.then4:                                         ; preds = %if.then
  %6 = load float*, float** %__x.addr, align 8
  %7 = load float, float* %6, align 4
  store float %7, float* %__x_copy, align 4
  %call = call float* @_ZNSt6vectorIfSaIfEE3endEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0
  store float* %call, float** %coerce.dive5, align 8
  %call6 = call i64 @_ZN9__gnu_cxxmiIPfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__position) #3
  store i64 %call6, i64* %__elems_after, align 8
  %8 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %_M_finish8 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl7, i32 0, i32 1
  %9 = load float*, float** %_M_finish8, align 8
  store float* %9, float** %__old_finish, align 8
  %10 = load i64, i64* %__elems_after, align 8
  %11 = load i64, i64* %__n.addr, align 8
  %cmp9 = icmp ugt i64 %10, %11
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.then4
  %12 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %_M_finish12 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl11, i32 0, i32 1
  %13 = load float*, float** %_M_finish12, align 8
  %14 = load i64, i64* %__n.addr, align 8
  %idx.neg = sub i64 0, %14
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.neg
  %15 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %_M_finish14 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl13, i32 0, i32 1
  %16 = load float*, float** %_M_finish14, align 8
  %17 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %_M_finish16 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl15, i32 0, i32 1
  %18 = load float*, float** %_M_finish16, align 8
  %19 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call17 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %19) #3
  %call18 = call float* @_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %add.ptr, float* %16, float* %18, %"class.std::allocator.2"* dereferenceable(1) %call17)
  %20 = load i64, i64* %__n.addr, align 8
  %21 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl19 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %21, i32 0, i32 0
  %_M_finish20 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl19, i32 0, i32 1
  %22 = load float*, float** %_M_finish20, align 8
  %add.ptr21 = getelementptr inbounds float, float* %22, i64 %20
  store float* %add.ptr21, float** %_M_finish20, align 8
  %call22 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %23 = load float*, float** %call22, align 8
  %24 = load float*, float** %__old_finish, align 8
  %25 = load i64, i64* %__n.addr, align 8
  %idx.neg23 = sub i64 0, %25
  %add.ptr24 = getelementptr inbounds float, float* %24, i64 %idx.neg23
  %26 = load float*, float** %__old_finish, align 8
  %call25 = call float* @_ZSt13move_backwardIPfS0_ET0_T_S2_S1_(float* %23, float* %add.ptr24, float* %26)
  %call26 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %27 = load float*, float** %call26, align 8
  %call27 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %28 = load float*, float** %call27, align 8
  %29 = load i64, i64* %__n.addr, align 8
  %add.ptr28 = getelementptr inbounds float, float* %28, i64 %29
  call void @_ZSt4fillIPffEvT_S1_RKT0_(float* %27, float* %add.ptr28, float* dereferenceable(4) %__x_copy)
  br label %if.end

if.else:                                          ; preds = %if.then4
  %30 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %_M_finish30 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl29, i32 0, i32 1
  %31 = load float*, float** %_M_finish30, align 8
  %32 = load i64, i64* %__n.addr, align 8
  %33 = load i64, i64* %__elems_after, align 8
  %sub = sub i64 %32, %33
  %34 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call31 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %call32 = call float* @_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E(float* %31, i64 %sub, float* dereferenceable(4) %__x_copy, %"class.std::allocator.2"* dereferenceable(1) %call31)
  %35 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  %_M_finish34 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl33, i32 0, i32 1
  store float* %call32, float** %_M_finish34, align 8
  %call35 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %36 = load float*, float** %call35, align 8
  %37 = load float*, float** %__old_finish, align 8
  %38 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %38, i32 0, i32 0
  %_M_finish37 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl36, i32 0, i32 1
  %39 = load float*, float** %_M_finish37, align 8
  %40 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call38 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %40) #3
  %call39 = call float* @_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %36, float* %37, float* %39, %"class.std::allocator.2"* dereferenceable(1) %call38)
  %41 = load i64, i64* %__elems_after, align 8
  %42 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %_M_finish41 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl40, i32 0, i32 1
  %43 = load float*, float** %_M_finish41, align 8
  %add.ptr42 = getelementptr inbounds float, float* %43, i64 %41
  store float* %add.ptr42, float** %_M_finish41, align 8
  %call43 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %44 = load float*, float** %call43, align 8
  %45 = load float*, float** %__old_finish, align 8
  call void @_ZSt4fillIPffEvT_S1_RKT0_(float* %44, float* %45, float* dereferenceable(4) %__x_copy)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  br label %if.end101

if.else44:                                        ; preds = %if.then
  %46 = load i64, i64* %__n.addr, align 8
  %call45 = call i64 @_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc(%"class.std::vector.0"* %this1, i64 %46, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0))
  store i64 %call45, i64* %__len, align 8
  %call47 = call float* @_ZNSt6vectorIfSaIfEE5beginEv(%"class.std::vector.0"* %this1) #3
  %coerce.dive48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp46, i32 0, i32 0
  store float* %call47, float** %coerce.dive48, align 8
  %call49 = call i64 @_ZN9__gnu_cxxmiIPfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp46) #3
  store i64 %call49, i64* %__elems_before, align 8
  %47 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %48 = load i64, i64* %__len, align 8
  %call50 = call float* @_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %47, i64 %48)
  store float* %call50, float** %__new_start, align 8
  %49 = load float*, float** %__new_start, align 8
  store float* %49, float** %__new_finish, align 8
  %50 = load float*, float** %__new_start, align 8
  %51 = load i64, i64* %__elems_before, align 8
  %add.ptr51 = getelementptr inbounds float, float* %50, i64 %51
  %52 = load i64, i64* %__n.addr, align 8
  %53 = load float*, float** %__x.addr, align 8
  %54 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call52 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %54) #3
  %call53 = invoke float* @_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E(float* %add.ptr51, i64 %52, float* dereferenceable(4) %53, %"class.std::allocator.2"* dereferenceable(1) %call52)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else44
  store float* null, float** %__new_finish, align 8
  %55 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl54 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %55, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl54, i32 0, i32 0
  %56 = load float*, float** %_M_start, align 8
  %call55 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %57 = load float*, float** %call55, align 8
  %58 = load float*, float** %__new_start, align 8
  %59 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call56 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %59) #3
  %call58 = invoke float* @_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %56, float* %57, float* %58, %"class.std::allocator.2"* dereferenceable(1) %call56)
          to label %invoke.cont57 unwind label %lpad

invoke.cont57:                                    ; preds = %invoke.cont
  store float* %call58, float** %__new_finish, align 8
  %60 = load i64, i64* %__n.addr, align 8
  %61 = load float*, float** %__new_finish, align 8
  %add.ptr59 = getelementptr inbounds float, float* %61, i64 %60
  store float* %add.ptr59, float** %__new_finish, align 8
  %call60 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %62 = load float*, float** %call60, align 8
  %63 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %_M_finish62 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl61, i32 0, i32 1
  %64 = load float*, float** %_M_finish62, align 8
  %65 = load float*, float** %__new_finish, align 8
  %66 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call63 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %66) #3
  %call65 = invoke float* @_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %62, float* %64, float* %65, %"class.std::allocator.2"* dereferenceable(1) %call63)
          to label %invoke.cont64 unwind label %lpad

invoke.cont64:                                    ; preds = %invoke.cont57
  store float* %call65, float** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont57, %invoke.cont, %if.else44
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %exn.slot, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %70 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %71 = load float*, float** %__new_finish, align 8
  %tobool = icmp ne float* %71, null
  br i1 %tobool, label %if.else73, label %if.then66

if.then66:                                        ; preds = %catch
  %72 = load float*, float** %__new_start, align 8
  %73 = load i64, i64* %__elems_before, align 8
  %add.ptr67 = getelementptr inbounds float, float* %72, i64 %73
  %74 = load float*, float** %__new_start, align 8
  %75 = load i64, i64* %__elems_before, align 8
  %add.ptr68 = getelementptr inbounds float, float* %74, i64 %75
  %76 = load i64, i64* %__n.addr, align 8
  %add.ptr69 = getelementptr inbounds float, float* %add.ptr68, i64 %76
  %77 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call70 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %77) #3
  invoke void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %add.ptr67, float* %add.ptr69, %"class.std::allocator.2"* dereferenceable(1) %call70)
          to label %invoke.cont72 unwind label %lpad71

invoke.cont72:                                    ; preds = %if.then66
  br label %if.end76

lpad71:                                           ; preds = %invoke.cont77, %if.end76, %if.else73, %if.then66
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %exn.slot, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont78 unwind label %terminate.lpad

if.else73:                                        ; preds = %catch
  %81 = load float*, float** %__new_start, align 8
  %82 = load float*, float** %__new_finish, align 8
  %83 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call74 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %83) #3
  invoke void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %81, float* %82, %"class.std::allocator.2"* dereferenceable(1) %call74)
          to label %invoke.cont75 unwind label %lpad71

invoke.cont75:                                    ; preds = %if.else73
  br label %if.end76

if.end76:                                         ; preds = %invoke.cont75, %invoke.cont72
  %84 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %85 = load float*, float** %__new_start, align 8
  %86 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %84, float* %85, i64 %86)
          to label %invoke.cont77 unwind label %lpad71

invoke.cont77:                                    ; preds = %if.end76
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad71

invoke.cont78:                                    ; preds = %lpad71
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont64
  %87 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl79 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %87, i32 0, i32 0
  %_M_start80 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl79, i32 0, i32 0
  %88 = load float*, float** %_M_start80, align 8
  %89 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %89, i32 0, i32 0
  %_M_finish82 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl81, i32 0, i32 1
  %90 = load float*, float** %_M_finish82, align 8
  %91 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call83 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %91) #3
  call void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %88, float* %90, %"class.std::allocator.2"* dereferenceable(1) %call83)
  %92 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %93 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl84 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %93, i32 0, i32 0
  %_M_start85 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl84, i32 0, i32 0
  %94 = load float*, float** %_M_start85, align 8
  %95 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl86 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %95, i32 0, i32 0
  %_M_end_of_storage87 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl86, i32 0, i32 2
  %96 = load float*, float** %_M_end_of_storage87, align 8
  %97 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl88 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %97, i32 0, i32 0
  %_M_start89 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl88, i32 0, i32 0
  %98 = load float*, float** %_M_start89, align 8
  %sub.ptr.lhs.cast90 = ptrtoint float* %96 to i64
  %sub.ptr.rhs.cast91 = ptrtoint float* %98 to i64
  %sub.ptr.sub92 = sub i64 %sub.ptr.lhs.cast90, %sub.ptr.rhs.cast91
  %sub.ptr.div93 = sdiv exact i64 %sub.ptr.sub92, 4
  call void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %92, float* %94, i64 %sub.ptr.div93)
  %99 = load float*, float** %__new_start, align 8
  %100 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl94 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %100, i32 0, i32 0
  %_M_start95 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl94, i32 0, i32 0
  store float* %99, float** %_M_start95, align 8
  %101 = load float*, float** %__new_finish, align 8
  %102 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl96 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %102, i32 0, i32 0
  %_M_finish97 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl96, i32 0, i32 1
  store float* %101, float** %_M_finish97, align 8
  %103 = load float*, float** %__new_start, align 8
  %104 = load i64, i64* %__len, align 8
  %add.ptr98 = getelementptr inbounds float, float* %103, i64 %104
  %105 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl99 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %105, i32 0, i32 0
  %_M_end_of_storage100 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl99, i32 0, i32 2
  store float* %add.ptr98, float** %_M_end_of_storage100, align 8
  br label %if.end101

if.end101:                                        ; preds = %try.cont, %if.end
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont78
  %exn103 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn103, 0
  %lpad.val104 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val104

terminate.lpad:                                   ; preds = %lpad71
  %106 = landingpad { i8*, i32 }
          catch i8* null
  %107 = extractvalue { i8*, i32 } %106, 0
  call void @__clang_call_terminate(i8* %107) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont77
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt6vectorIfSaIfEE5beginEv(%"class.std::vector.0"* %this) #5 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %retval, float** dereferenceable(8) %_M_start) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %1 = load float*, float** %coerce.dive, align 8
  ret float* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEplEl(%"class.__gnu_cxx::__normal_iterator"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca float*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load float*, float** %_M_current, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds float, float* %0, i64 %1
  store float* %add.ptr, float** %ref.tmp, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %retval, float** dereferenceable(8) %ref.tmp) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %2 = load float*, float** %coerce.dive, align 8
  ret float* %2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.48"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.48"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.48"* %this, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.48"*, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %this1, i32 0, i32 0
  ret float** %_M_current
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.48"* %this, float** dereferenceable(8) %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.48"*, align 8
  %__i.addr = alloca float**, align 8
  store %"class.__gnu_cxx::__normal_iterator.48"* %this, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  store float** %__i, float*** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.48"*, %"class.__gnu_cxx::__normal_iterator.48"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.48", %"class.__gnu_cxx::__normal_iterator.48"* %this1, i32 0, i32 0
  %0 = load float**, float*** %__i.addr, align 8
  %1 = load float*, float** %0, align 8
  store float* %1, float** %_M_current, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPfSt6vectorIfSaIfEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__rhs) #5 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  %call = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #3
  %1 = load float*, float** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %3 = load float*, float** %call1, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %__first, float* %__last, float* %__result, %"class.std::allocator.2"* dereferenceable(1) %__alloc) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %__alloc.addr = alloca %"class.std::allocator.2"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp1 = alloca %"class.std::move_iterator", align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  store %"class.std::allocator.2"* %__alloc, %"class.std::allocator.2"** %__alloc.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt18make_move_iteratorIPfESt13move_iteratorIT_ES2_(float* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  store float* %call, float** %coerce.dive, align 8
  %1 = load float*, float** %__last.addr, align 8
  %call2 = call float* @_ZSt18make_move_iteratorIPfESt13move_iteratorIT_ES2_(float* %1)
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp1, i32 0, i32 0
  store float* %call2, float** %coerce.dive3, align 8
  %2 = load float*, float** %__result.addr, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %4 = load float*, float** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp1, i32 0, i32 0
  %5 = load float*, float** %coerce.dive5, align 8
  %call6 = call float* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPfES1_fET0_T_S4_S3_RSaIT1_E(float* %4, float* %5, float* %2, %"class.std::allocator.2"* dereferenceable(1) %3)
  ret float* %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt13move_backwardIPfS0_ET0_T_S2_S1_(float* %__first, float* %__last, float* %__result) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt12__miter_baseIPfENSt11_Miter_baseIT_E13iterator_typeES2_(float* %0)
  %1 = load float*, float** %__last.addr, align 8
  %call1 = call float* @_ZSt12__miter_baseIPfENSt11_Miter_baseIT_E13iterator_typeES2_(float* %1)
  %2 = load float*, float** %__result.addr, align 8
  %call2 = call float* @_ZSt23__copy_move_backward_a2ILb1EPfS0_ET1_T0_S2_S1_(float* %call, float* %call1, float* %2)
  ret float* %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNK9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  ret float** %_M_current
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt4fillIPffEvT_S1_RKT0_(float* %__first, float* %__last, float* dereferenceable(4) %__value) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__value.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__value, float** %__value.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %0)
  %1 = load float*, float** %__last.addr, align 8
  %call1 = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %1)
  %2 = load float*, float** %__value.addr, align 8
  call void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float* %call, float* %call1, float* dereferenceable(4) %2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E(float* %__first, i64 %__n, float* dereferenceable(4) %__x, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  %.addr = alloca %"class.std::allocator.2"*, align 8
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %.addr, align 8
  %1 = load float*, float** %__first.addr, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %3 = load float*, float** %__x.addr, align 8
  %call = call float* @_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_(float* %1, i64 %2, float* dereferenceable(4) %3)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc(%"class.std::vector.0"* %this, i64 %__n, i8* %__s) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIfSaIfEE8max_sizeEv(%"class.std::vector.0"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #21
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorIfSaIfEE8max_sizeEv(%"class.std::vector.0"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorIfSaIfEE8max_sizeEv(%"class.std::vector.0"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl to %"class.std::allocator.2"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call float* @_ZNSt16allocator_traitsISaIfEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call, %cond.true ], [ null, %cond.false ]
  ret float* %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %__first, float* %__last, float* %__result, %"class.std::allocator.2"* dereferenceable(1) %__alloc) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %__alloc.addr = alloca %"class.std::allocator.2"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp1 = alloca %"class.std::move_iterator", align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  store %"class.std::allocator.2"* %__alloc, %"class.std::allocator.2"** %__alloc.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt32__make_move_if_noexcept_iteratorIPfSt13move_iteratorIS0_EET0_T_(float* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  store float* %call, float** %coerce.dive, align 8
  %1 = load float*, float** %__last.addr, align 8
  %call2 = call float* @_ZSt32__make_move_if_noexcept_iteratorIPfSt13move_iteratorIS0_EET0_T_(float* %1)
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp1, i32 0, i32 0
  store float* %call2, float** %coerce.dive3, align 8
  %2 = load float*, float** %__result.addr, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %4 = load float*, float** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp1, i32 0, i32 0
  %5 = load float*, float** %coerce.dive5, align 8
  %call6 = call float* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPfES1_fET0_T_S4_S3_RSaIT1_E(float* %4, float* %5, float* %2, %"class.std::allocator.2"* dereferenceable(1) %3)
  ret float* %call6
}

declare dso_local void @__cxa_rethrow()

declare dso_local void @__cxa_end_catch()

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPfES1_fET0_T_S4_S3_RSaIT1_E(float* %__first.coerce, float* %__last.coerce, float* %__result, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator", align 8
  %__last = alloca %"class.std::move_iterator", align 8
  %__result.addr = alloca float*, align 8
  %.addr = alloca %"class.std::allocator.2"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__first, i32 0, i32 0
  store float* %__first.coerce, float** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__last, i32 0, i32 0
  store float* %__last.coerce, float** %coerce.dive1, align 8
  store float* %__result, float** %__result.addr, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %.addr, align 8
  %1 = bitcast %"class.std::move_iterator"* %agg.tmp to i8*
  %2 = bitcast %"class.std::move_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.std::move_iterator"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::move_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load float*, float** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %6 = load float*, float** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp2, i32 0, i32 0
  %7 = load float*, float** %coerce.dive4, align 8
  %call = call float* @_ZSt18uninitialized_copyISt13move_iteratorIPfES1_ET0_T_S4_S3_(float* %6, float* %7, float* %5)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt18make_move_iteratorIPfESt13move_iteratorIT_ES2_(float* %__i) #4 comdat {
entry:
  %retval = alloca %"class.std::move_iterator", align 8
  %__i.addr = alloca float*, align 8
  store float* %__i, float** %__i.addr, align 8
  %0 = load float*, float** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPfEC2ES0_(%"class.std::move_iterator"* %retval, float* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval, i32 0, i32 0
  %1 = load float*, float** %coerce.dive, align 8
  ret float* %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt18uninitialized_copyISt13move_iteratorIPfES1_ET0_T_S4_S3_(float* %__first.coerce, float* %__last.coerce, float* %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator", align 8
  %__last = alloca %"class.std::move_iterator", align 8
  %__result.addr = alloca float*, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__first, i32 0, i32 0
  store float* %__first.coerce, float** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__last, i32 0, i32 0
  store float* %__last.coerce, float** %coerce.dive1, align 8
  store float* %__result, float** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.std::move_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load float*, float** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %5 = load float*, float** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp2, i32 0, i32 0
  %6 = load float*, float** %coerce.dive4, align 8
  %call = call float* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPfES3_EET0_T_S6_S5_(float* %5, float* %6, float* %4)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPfES3_EET0_T_S6_S5_(float* %__first.coerce, float* %__last.coerce, float* %__result) #4 comdat align 2 {
entry:
  %__first = alloca %"class.std::move_iterator", align 8
  %__last = alloca %"class.std::move_iterator", align 8
  %__result.addr = alloca float*, align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__first, i32 0, i32 0
  store float* %__first.coerce, float** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__last, i32 0, i32 0
  store float* %__last.coerce, float** %coerce.dive1, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = bitcast %"class.std::move_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load float*, float** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %5 = load float*, float** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp2, i32 0, i32 0
  %6 = load float*, float** %coerce.dive4, align 8
  %call = call float* @_ZSt4copyISt13move_iteratorIPfES1_ET0_T_S4_S3_(float* %5, float* %6, float* %4)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt4copyISt13move_iteratorIPfES1_ET0_T_S4_S3_(float* %__first.coerce, float* %__last.coerce, float* %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator", align 8
  %__last = alloca %"class.std::move_iterator", align 8
  %__result.addr = alloca float*, align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %agg.tmp3 = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__first, i32 0, i32 0
  store float* %__first.coerce, float** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__last, i32 0, i32 0
  store float* %__last.coerce, float** %coerce.dive1, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = bitcast %"class.std::move_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive2 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %2 = load float*, float** %coerce.dive2, align 8
  %call = call float* @_ZSt12__miter_baseISt13move_iteratorIPfEENSt11_Miter_baseIT_E13iterator_typeES4_(float* %2)
  %3 = bitcast %"class.std::move_iterator"* %agg.tmp3 to i8*
  %4 = bitcast %"class.std::move_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp3, i32 0, i32 0
  %5 = load float*, float** %coerce.dive4, align 8
  %call5 = call float* @_ZSt12__miter_baseISt13move_iteratorIPfEENSt11_Miter_baseIT_E13iterator_typeES4_(float* %5)
  %6 = load float*, float** %__result.addr, align 8
  %call6 = call float* @_ZSt14__copy_move_a2ILb1EPfS0_ET1_T0_S2_S1_(float* %call, float* %call5, float* %6)
  ret float* %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt14__copy_move_a2ILb1EPfS0_ET1_T0_S2_S1_(float* %__first, float* %__last, float* %__result) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %0)
  %1 = load float*, float** %__last.addr, align 8
  %call1 = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %1)
  %2 = load float*, float** %__result.addr, align 8
  %call2 = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %2)
  %call3 = call float* @_ZSt13__copy_move_aILb1EPfS0_ET1_T0_S2_S1_(float* %call, float* %call1, float* %call2)
  ret float* %call3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt12__miter_baseISt13move_iteratorIPfEENSt11_Miter_baseIT_E13iterator_typeES4_(float* %__it.coerce) #4 comdat {
entry:
  %__it = alloca %"class.std::move_iterator", align 8
  %agg.tmp = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it, i32 0, i32 0
  store float* %__it.coerce, float** %coerce.dive, align 8
  %0 = bitcast %"class.std::move_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator"* %__it to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %agg.tmp, i32 0, i32 0
  %2 = load float*, float** %coerce.dive1, align 8
  %call = call float* @_ZNSt10_Iter_baseISt13move_iteratorIPfELb1EE7_S_baseES2_(float* %2)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt13__copy_move_aILb1EPfS0_ET1_T0_S2_S1_(float* %__first, float* %__last, float* %__result) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %__simple = alloca i8, align 1
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  store i8 1, i8* %__simple, align 1
  %0 = load float*, float** %__first.addr, align 8
  %1 = load float*, float** %__last.addr, align 8
  %2 = load float*, float** %__result.addr, align 8
  %call = call float* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_(float* %0, float* %1, float* %2)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %__it) #4 comdat {
entry:
  %__it.addr = alloca float*, align 8
  store float* %__it, float** %__it.addr, align 8
  %0 = load float*, float** %__it.addr, align 8
  %call = call float* @_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_(float* %0)
  ret float* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_(float* %__first, float* %__last, float* %__result) #5 comdat align 2 {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %_Num = alloca i64, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = load float*, float** %__last.addr, align 8
  %1 = load float*, float** %__first.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, i64* %_Num, align 8
  %2 = load i64, i64* %_Num, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load float*, float** %__result.addr, align 8
  %4 = bitcast float* %3 to i8*
  %5 = load float*, float** %__first.addr, align 8
  %6 = bitcast float* %5 to i8*
  %7 = load i64, i64* %_Num, align 8
  %mul = mul i64 4, %7
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %6, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load float*, float** %__result.addr, align 8
  %9 = load i64, i64* %_Num, align 8
  %add.ptr = getelementptr inbounds float, float* %8, i64 %9
  ret float* %add.ptr
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_(float* %__it) #5 comdat align 2 {
entry:
  %__it.addr = alloca float*, align 8
  store float* %__it, float** %__it.addr, align 8
  %0 = load float*, float** %__it.addr, align 8
  ret float* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt10_Iter_baseISt13move_iteratorIPfELb1EE7_S_baseES2_(float* %__it.coerce) #4 comdat align 2 {
entry:
  %__it = alloca %"class.std::move_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %__it, i32 0, i32 0
  store float* %__it.coerce, float** %coerce.dive, align 8
  %call = call float* @_ZNKSt13move_iteratorIPfE4baseEv(%"class.std::move_iterator"* %__it)
  ret float* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNKSt13move_iteratorIPfE4baseEv(%"class.std::move_iterator"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %this, %"class.std::move_iterator"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %this1, i32 0, i32 0
  %0 = load float*, float** %_M_current, align 8
  ret float* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPfEC2ES0_(%"class.std::move_iterator"* %this, float* %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator"*, align 8
  %__i.addr = alloca float*, align 8
  store %"class.std::move_iterator"* %this, %"class.std::move_iterator"** %this.addr, align 8
  store float* %__i, float** %__i.addr, align 8
  %this1 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %this1, i32 0, i32 0
  %0 = load float*, float** %__i.addr, align 8
  store float* %0, float** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt23__copy_move_backward_a2ILb1EPfS0_ET1_T0_S2_S1_(float* %__first, float* %__last, float* %__result) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %0)
  %1 = load float*, float** %__last.addr, align 8
  %call1 = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %1)
  %2 = load float*, float** %__result.addr, align 8
  %call2 = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %2)
  %call3 = call float* @_ZSt22__copy_move_backward_aILb1EPfS0_ET1_T0_S2_S1_(float* %call, float* %call1, float* %call2)
  ret float* %call3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZSt12__miter_baseIPfENSt11_Miter_baseIT_E13iterator_typeES2_(float* %__it) #5 comdat {
entry:
  %__it.addr = alloca float*, align 8
  store float* %__it, float** %__it.addr, align 8
  %0 = load float*, float** %__it.addr, align 8
  %call = call float* @_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_(float* %0)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt22__copy_move_backward_aILb1EPfS0_ET1_T0_S2_S1_(float* %__first, float* %__last, float* %__result) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %__simple = alloca i8, align 1
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  store i8 1, i8* %__simple, align 1
  %0 = load float*, float** %__first.addr, align 8
  %1 = load float*, float** %__last.addr, align 8
  %2 = load float*, float** %__result.addr, align 8
  %call = call float* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIfEEPT_PKS3_S6_S4_(float* %0, float* %1, float* %2)
  ret float* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIfEEPT_PKS3_S6_S4_(float* %__first, float* %__last, float* %__result) #5 comdat align 2 {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__result.addr = alloca float*, align 8
  %_Num = alloca i64, align 8
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__result, float** %__result.addr, align 8
  %0 = load float*, float** %__last.addr, align 8
  %1 = load float*, float** %__first.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, i64* %_Num, align 8
  %2 = load i64, i64* %_Num, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load float*, float** %__result.addr, align 8
  %4 = load i64, i64* %_Num, align 8
  %idx.neg = sub i64 0, %4
  %add.ptr = getelementptr inbounds float, float* %3, i64 %idx.neg
  %5 = bitcast float* %add.ptr to i8*
  %6 = load float*, float** %__first.addr, align 8
  %7 = bitcast float* %6 to i8*
  %8 = load i64, i64* %_Num, align 8
  %mul = mul i64 4, %8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %7, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load float*, float** %__result.addr, align 8
  %10 = load i64, i64* %_Num, align 8
  %idx.neg1 = sub i64 0, %10
  %add.ptr2 = getelementptr inbounds float, float* %9, i64 %idx.neg1
  ret float* %add.ptr2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt8__fill_aIPffEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(float* %__first, float* %__last, float* dereferenceable(4) %__value) #5 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__last.addr = alloca float*, align 8
  %__value.addr = alloca float*, align 8
  %__tmp = alloca float, align 4
  store float* %__first, float** %__first.addr, align 8
  store float* %__last, float** %__last.addr, align 8
  store float* %__value, float** %__value.addr, align 8
  %0 = load float*, float** %__value.addr, align 8
  %1 = load float, float* %0, align 4
  store float %1, float* %__tmp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load float*, float** %__first.addr, align 8
  %3 = load float*, float** %__last.addr, align 8
  %cmp = icmp ne float* %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load float, float* %__tmp, align 4
  %5 = load float*, float** %__first.addr, align 8
  store float %4, float* %5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load float*, float** %__first.addr, align 8
  %incdec.ptr = getelementptr inbounds float, float* %6, i32 1
  store float* %incdec.ptr, float** %__first.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_(float* %__first, i64 %__n, float* dereferenceable(4) %__x) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  %__assignable = alloca i8, align 1
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = load float*, float** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load float*, float** %__x.addr, align 8
  %call = call float* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_(float* %0, i64 %1, float* dereferenceable(4) %2)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_(float* %__first, i64 %__n, float* dereferenceable(4) %__x) #4 comdat align 2 {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__x.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__x, float** %__x.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load float*, float** %__x.addr, align 8
  %call = call float* @_ZSt6fill_nIPfmfET_S1_T0_RKT1_(float* %0, i64 %1, float* dereferenceable(4) %2)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt6fill_nIPfmfET_S1_T0_RKT1_(float* %__first, i64 %__n, float* dereferenceable(4) %__value) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca float*, align 8
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__value, float** %__value.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %call = call float* @_ZSt12__niter_baseIPfENSt11_Niter_baseIT_E13iterator_typeES2_(float* %0)
  %1 = load i64, i64* %__n.addr, align 8
  %2 = load float*, float** %__value.addr, align 8
  %call1 = call float* @_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(float* %call, i64 %1, float* dereferenceable(4) %2)
  ret float* %call1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(float* %__first, i64 %__n, float* dereferenceable(4) %__value) #5 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca float*, align 8
  %__tmp = alloca float, align 4
  %__niter = alloca i64, align 8
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store float* %__value, float** %__value.addr, align 8
  %0 = load float*, float** %__value.addr, align 8
  %1 = load float, float* %0, align 4
  store float %1, float* %__tmp, align 4
  %2 = load i64, i64* %__n.addr, align 8
  store i64 %2, i64* %__niter, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %__niter, align 8
  %cmp = icmp ugt i64 %3, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load float, float* %__tmp, align 4
  %5 = load float*, float** %__first.addr, align 8
  store float %4, float* %5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %__niter, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %__niter, align 8
  %7 = load float*, float** %__first.addr, align 8
  %incdec.ptr = getelementptr inbounds float, float* %7, i32 1
  store float* %incdec.ptr, float** %__first.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load float*, float** %__first.addr, align 8
  ret float* %8
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIfSaIfEE8max_sizeEv(%"class.std::vector.0"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaIfEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #16

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %__a, i64* dereferenceable(8) %__b) #5 comdat {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8
  store i64* %__b, i64** %__b.addr, align 8
  %0 = load i64*, i64** %__a.addr, align 8
  %1 = load i64, i64* %0, align 8
  %2 = load i64*, i64** %__b.addr, align 8
  %3 = load i64, i64* %2, align 8
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8
  store i64* %4, i64** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8
  store i64* %5, i64** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIfEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %__a) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %__a, %"class.std::allocator.2"** %__a.addr, align 8
  %0 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.2"* %0 to %"class.__gnu_cxx::new_allocator.3"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %this, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %this, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt16allocator_traitsISaIfEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %__a, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.2"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.2"* %__a, %"class.std::allocator.2"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.2"* %0 to %"class.__gnu_cxx::new_allocator.3"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call float* @_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %1, i64 %2, i8* null)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %this, i64 %__n, i8*) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %this, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 4
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to float*
  ret float* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt32__make_move_if_noexcept_iteratorIPfSt13move_iteratorIS0_EET0_T_(float* %__i) #4 comdat {
entry:
  %retval = alloca %"class.std::move_iterator", align 8
  %__i.addr = alloca float*, align 8
  store float* %__i, float** %__i.addr, align 8
  %0 = load float*, float** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPfEC2ES0_(%"class.std::move_iterator"* %retval, float* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %retval, i32 0, i32 0
  %1 = load float*, float** %coerce.dive, align 8
  ret float* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %this, float** dereferenceable(8) %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__i.addr = alloca float**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  store float** %__i, float*** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load float**, float*** %__i.addr, align 8
  %1 = load float*, float** %0, align 8
  store float* %1, float** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this, i64 %__n) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__n.addr = alloca i64, align 8
  %__len = alloca i64, align 8
  %__old_size = alloca i64, align 8
  %__new_start = alloca float*, align 8
  %__new_finish = alloca float*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end47

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl, i32 0, i32 2
  %2 = load float*, float** %_M_end_of_storage, align 8
  %3 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load float*, float** %_M_finish, align 8
  %sub.ptr.lhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint float* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  %5 = load i64, i64* %__n.addr, align 8
  %cmp3 = icmp uge i64 %sub.ptr.div, %5
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %6 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %_M_finish6 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl5, i32 0, i32 1
  %7 = load float*, float** %_M_finish6, align 8
  %8 = load i64, i64* %__n.addr, align 8
  %9 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %9) #3
  %call7 = call float* @_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E(float* %7, i64 %8, %"class.std::allocator.2"* dereferenceable(1) %call)
  %10 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %_M_finish9 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl8, i32 0, i32 1
  store float* %call7, float** %_M_finish9, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %11 = load i64, i64* %__n.addr, align 8
  %call10 = call i64 @_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc(%"class.std::vector.0"* %this1, i64 %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0))
  store i64 %call10, i64* %__len, align 8
  %call11 = call i64 @_ZNKSt6vectorIfSaIfEE4sizeEv(%"class.std::vector.0"* %this1) #3
  store i64 %call11, i64* %__old_size, align 8
  %12 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %__len, align 8
  %call12 = call float* @_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store float* %call12, float** %__new_start, align 8
  %14 = load float*, float** %__new_start, align 8
  store float* %14, float** %__new_finish, align 8
  %15 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl13, i32 0, i32 0
  %16 = load float*, float** %_M_start, align 8
  %17 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl14 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %_M_finish15 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl14, i32 0, i32 1
  %18 = load float*, float** %_M_finish15, align 8
  %19 = load float*, float** %__new_start, align 8
  %20 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %20) #3
  %call17 = invoke float* @_ZSt34__uninitialized_move_if_noexcept_aIPfS0_SaIfEET0_T_S3_S2_RT1_(float* %16, float* %18, float* %19, %"class.std::allocator.2"* dereferenceable(1) %call16)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  store float* %call17, float** %__new_finish, align 8
  %21 = load float*, float** %__new_finish, align 8
  %22 = load i64, i64* %__n.addr, align 8
  %23 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call18 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %23) #3
  %call20 = invoke float* @_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E(float* %21, i64 %22, %"class.std::allocator.2"* dereferenceable(1) %call18)
          to label %invoke.cont19 unwind label %lpad

invoke.cont19:                                    ; preds = %invoke.cont
  store float* %call20, float** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont, %if.else
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %exn.slot, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %27 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %28 = load float*, float** %__new_start, align 8
  %29 = load float*, float** %__new_finish, align 8
  %30 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call21 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %30) #3
  invoke void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %28, float* %29, %"class.std::allocator.2"* dereferenceable(1) %call21)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %catch
  %31 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %32 = load float*, float** %__new_start, align 8
  %33 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %31, float* %32, i64 %33)
          to label %invoke.cont24 unwind label %lpad22

invoke.cont24:                                    ; preds = %invoke.cont23
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad22

lpad22:                                           ; preds = %invoke.cont24, %invoke.cont23, %catch
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %exn.slot, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont25 unwind label %terminate.lpad

invoke.cont25:                                    ; preds = %lpad22
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont19
  %37 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %37, i32 0, i32 0
  %_M_start27 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl26, i32 0, i32 0
  %38 = load float*, float** %_M_start27, align 8
  %39 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %39, i32 0, i32 0
  %_M_finish29 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl28, i32 0, i32 1
  %40 = load float*, float** %_M_finish29, align 8
  %41 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %call30 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %41) #3
  call void @_ZSt8_DestroyIPffEvT_S1_RSaIT0_E(float* %38, float* %40, %"class.std::allocator.2"* dereferenceable(1) %call30)
  %42 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %43 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %_M_start32 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl31, i32 0, i32 0
  %44 = load float*, float** %_M_start32, align 8
  %45 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %45, i32 0, i32 0
  %_M_end_of_storage34 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl33, i32 0, i32 2
  %46 = load float*, float** %_M_end_of_storage34, align 8
  %47 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %_M_start36 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl35, i32 0, i32 0
  %48 = load float*, float** %_M_start36, align 8
  %sub.ptr.lhs.cast37 = ptrtoint float* %46 to i64
  %sub.ptr.rhs.cast38 = ptrtoint float* %48 to i64
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38
  %sub.ptr.div40 = sdiv exact i64 %sub.ptr.sub39, 4
  call void @_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm(%"struct.std::_Vector_base.1"* %42, float* %44, i64 %sub.ptr.div40)
  %49 = load float*, float** %__new_start, align 8
  %50 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %50, i32 0, i32 0
  %_M_start42 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl41, i32 0, i32 0
  store float* %49, float** %_M_start42, align 8
  %51 = load float*, float** %__new_finish, align 8
  %52 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %52, i32 0, i32 0
  %_M_finish44 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl43, i32 0, i32 1
  store float* %51, float** %_M_finish44, align 8
  %53 = load float*, float** %__new_start, align 8
  %54 = load i64, i64* %__len, align 8
  %add.ptr = getelementptr inbounds float, float* %53, i64 %54
  %55 = bitcast %"class.std::vector.0"* %this1 to %"struct.std::_Vector_base.1"*
  %_M_impl45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %55, i32 0, i32 0
  %_M_end_of_storage46 = getelementptr inbounds %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl", %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl"* %_M_impl45, i32 0, i32 2
  store float* %add.ptr, float** %_M_end_of_storage46, align 8
  br label %if.end

if.end:                                           ; preds = %try.cont, %if.then4
  br label %if.end47

if.end47:                                         ; preds = %if.end, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont25
  %exn48 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn48, 0
  %lpad.val49 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val49

terminate.lpad:                                   ; preds = %lpad22
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont24
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E(float* %__first, i64 %__n, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator.2"*, align 8
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %.addr, align 8
  %1 = load float*, float** %__first.addr, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %call = call float* @_ZSt25__uninitialized_default_nIPfmET_S1_T0_(float* %1, i64 %2)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZSt25__uninitialized_default_nIPfmET_S1_T0_(float* %__first, i64 %__n) #4 comdat {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = load float*, float** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call float* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPfmEET_S3_T0_(float* %0, i64 %1)
  ret float* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local float* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPfmEET_S3_T0_(float* %__first, i64 %__n) #4 comdat align 2 {
entry:
  %__first.addr = alloca float*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca float, align 4
  store float* %__first, float** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load float*, float** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  store float 0.000000e+00, float* %ref.tmp, align 4
  %call = call float* @_ZSt6fill_nIPfmfET_S1_T0_RKT1_(float* %0, i64 %1, float* dereferenceable(4) %ref.tmp)
  ret float* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNKSt6vectorIfSaIfEE11_M_data_ptrIfEEPT_S4_(%"class.std::vector.0"* %this, float* %__ptr) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.0"*, align 8
  %__ptr.addr = alloca float*, align 8
  store %"class.std::vector.0"* %this, %"class.std::vector.0"** %this.addr, align 8
  store float* %__ptr, float** %__ptr.addr, align 8
  %this1 = load %"class.std::vector.0"*, %"class.std::vector.0"** %this.addr, align 8
  %0 = load float*, float** %__ptr.addr, align 8
  ret float* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt4swapIPPfEvRT_S3_(float*** dereferenceable(8) %__a, float*** dereferenceable(8) %__b) #5 comdat {
entry:
  %__a.addr = alloca float***, align 8
  %__b.addr = alloca float***, align 8
  %__tmp = alloca float**, align 8
  store float*** %__a, float**** %__a.addr, align 8
  store float*** %__b, float**** %__b.addr, align 8
  %0 = load float***, float**** %__a.addr, align 8
  %call = call dereferenceable(8) float*** @_ZSt4moveIRPPfEONSt16remove_referenceIT_E4typeEOS4_(float*** dereferenceable(8) %0) #3
  %1 = load float**, float*** %call, align 8
  store float** %1, float*** %__tmp, align 8
  %2 = load float***, float**** %__b.addr, align 8
  %call1 = call dereferenceable(8) float*** @_ZSt4moveIRPPfEONSt16remove_referenceIT_E4typeEOS4_(float*** dereferenceable(8) %2) #3
  %3 = load float**, float*** %call1, align 8
  %4 = load float***, float**** %__a.addr, align 8
  store float** %3, float*** %4, align 8
  %call2 = call dereferenceable(8) float*** @_ZSt4moveIRPPfEONSt16remove_referenceIT_E4typeEOS4_(float*** dereferenceable(8) %__tmp) #3
  %5 = load float**, float*** %call2, align 8
  %6 = load float***, float**** %__b.addr, align 8
  store float** %5, float*** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZSt4moveIRPPfEONSt16remove_referenceIT_E4typeEOS4_(float*** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca float***, align 8
  store float*** %__t, float**** %__t.addr, align 8
  %0 = load float***, float**** %__t.addr, align 8
  ret float*** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  %call = call dereferenceable(8) float*** @_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple"* dereferenceable(8) %_M_t) #3
  %0 = load float**, float*** %call, align 8
  ret float** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZSt3getILm0EJPPfSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %__t, %"class.std::tuple"** %__t.addr, align 8
  %0 = load %"class.std::tuple"*, %"class.std::tuple"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple"* %0 to %"struct.std::_Tuple_impl"*
  %call = call dereferenceable(8) float*** @_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %1) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZSt12__get_helperILm0EPPfJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %__t, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %call = call dereferenceable(8) float*** @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERKS5_(%"struct.std::_Tuple_impl"* dereferenceable(8) %0) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZNSt11_Tuple_implILm0EJPPfSt14default_deleteIA_S0_EEE7_M_headERKS5_(%"struct.std::_Tuple_impl"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %__t, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl"* %0 to %"struct.std::_Head_base.6"*
  %call = call dereferenceable(8) float*** @_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERKS2_(%"struct.std::_Head_base.6"* dereferenceable(8) %1) #3
  ret float*** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float*** @_ZNSt10_Head_baseILm0EPPfLb0EE7_M_headERKS2_(%"struct.std::_Head_base.6"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.6"*, align 8
  store %"struct.std::_Head_base.6"* %__b, %"struct.std::_Head_base.6"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.6"*, %"struct.std::_Head_base.6"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.6", %"struct.std::_Head_base.6"* %0, i32 0, i32 0
  ret float*** %_M_head_impl
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.8"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this, %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this1 to %"class.std::allocator.9"*
  call void @_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEEC2Ev(%"class.std::allocator.9"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this1, i32 0, i32 0
  store %"class.std::unique_ptr.12"* null, %"class.std::unique_ptr.12"** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this1, i32 0, i32 1
  store %"class.std::unique_ptr.12"* null, %"class.std::unique_ptr.12"** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this1, i32 0, i32 2
  store %"class.std::unique_ptr.12"* null, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEEC2Ev(%"class.std::allocator.9"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %this, %"class.std::allocator.9"** %this.addr, align 8
  %this1 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.9"* %this1 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E(%"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"* %__last, %"class.std::allocator.9"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %.addr = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"** %__first.addr, align 8
  store %"class.std::unique_ptr.12"* %__last, %"class.std::unique_ptr.12"** %__last.addr, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %.addr, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__last.addr, align 8
  call void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEvT_S6_(%"class.std::unique_ptr.12"* %1, %"class.std::unique_ptr.12"* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"struct.std::_Vector_base.8"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.12"* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.12"* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.8"* %this1, %"class.std::unique_ptr.12"* %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEvT_S6_(%"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"* %__last) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"** %__first.addr, align 8
  store %"class.std::unique_ptr.12"* %__last, %"class.std::unique_ptr.12"** %__last.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_fSt14default_deleteIS3_EEEEvT_S8_(%"class.std::unique_ptr.12"* %0, %"class.std::unique_ptr.12"* %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10unique_ptrIA_fSt14default_deleteIS3_EEEEvT_S8_(%"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"* %__last) #4 comdat align 2 {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"** %__first.addr, align 8
  store %"class.std::unique_ptr.12"* %__last, %"class.std::unique_ptr.12"** %__last.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__last.addr, align 8
  %cmp = icmp ne %"class.std::unique_ptr.12"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZSt11__addressofISt10unique_ptrIA_fSt14default_deleteIS1_EEEPT_RS5_(%"class.std::unique_ptr.12"* dereferenceable(8) %2) #3
  call void @_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_(%"class.std::unique_ptr.12"* %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %3, i32 1
  store %"class.std::unique_ptr.12"* %incdec.ptr, %"class.std::unique_ptr.12"** %__first.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_(%"class.std::unique_ptr.12"* %__pointer) #5 comdat {
entry:
  %__pointer.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__pointer, %"class.std::unique_ptr.12"** %__pointer.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__pointer.addr, align 8
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZSt11__addressofISt10unique_ptrIA_fSt14default_deleteIS1_EEEPT_RS5_(%"class.std::unique_ptr.12"* dereferenceable(8) %__r) #5 comdat {
entry:
  %__r.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__r, %"class.std::unique_ptr.12"** %__r.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__r.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.12"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.12"*
  ret %"class.std::unique_ptr.12"* %2
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.8"* %this, %"class.std::unique_ptr.12"* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %tobool = icmp ne %"class.std::unique_ptr.12"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.9"*
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.9"* dereferenceable(1) %1, %"class.std::unique_ptr.12"* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this, %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %this1 to %"class.std::allocator.9"*
  call void @_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEED2Ev(%"class.std::allocator.9"* %0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.9"* dereferenceable(1) %__a, %"class.std::unique_ptr.12"* %__p, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.9"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.9"* %__a, %"class.std::allocator.9"** %__a.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.9"* %0 to %"class.__gnu_cxx::new_allocator.10"*
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.10"* %1, %"class.std::unique_ptr.12"* %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.10"* %this, %"class.std::unique_ptr.12"* %__p, i64) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %2 = bitcast %"class.std::unique_ptr.12"* %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaISt10unique_ptrIA_fSt14default_deleteIS0_EEED2Ev(%"class.std::allocator.9"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %this, %"class.std::allocator.9"** %this.addr, align 8
  %this1 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.9"* %this1 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE9constructIS4_JPfEEEvRS5_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %__a, %"class.std::unique_ptr.12"* %__p, float** dereferenceable(8) %__args) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.9"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__args.addr = alloca float**, align 8
  store %"class.std::allocator.9"* %__a, %"class.std::allocator.9"** %__a.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store float** %__args, float*** %__args.addr, align 8
  %0 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.9"* %0 to %"class.__gnu_cxx::new_allocator.10"*
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %3 = load float**, float*** %__args.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %3) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE9constructIS5_JPfEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %1, %"class.std::unique_ptr.12"* %2, float** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca float**, align 8
  store float** %__t, float*** %__t.addr, align 8
  %0 = load float**, float*** %__t.addr, align 8
  ret float** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_(%"class.std::vector.7"* %this, float** dereferenceable(8) %__args) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  %__args.addr = alloca float**, align 8
  %__len = alloca i64, align 8
  %__new_start = alloca %"class.std::unique_ptr.12"*, align 8
  %__new_finish = alloca %"class.std::unique_ptr.12"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  store float** %__args, float*** %__args.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %this1, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0))
  store i64 %call, i64* %__len, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %1 = load i64, i64* %__len, align 8
  %call2 = call %"class.std::unique_ptr.12"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %0, i64 %1)
  store %"class.std::unique_ptr.12"* %call2, %"class.std::unique_ptr.12"** %__new_start, align 8
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  store %"class.std::unique_ptr.12"* %2, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %3 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.9"*
  %5 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %call3 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %5, i64 %call3
  %6 = load float**, float*** %__args.addr, align 8
  %call4 = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %6) #3
  invoke void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE9constructIS4_JPfEEEvRS5_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %4, %"class.std::unique_ptr.12"* %add.ptr, float** dereferenceable(8) %call4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"class.std::unique_ptr.12"* null, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %7 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %7, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl5, i32 0, i32 0
  %8 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8
  %9 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %9, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish, align 8
  %11 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %12 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %call7 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %12) #3
  %call9 = invoke %"class.std::unique_ptr.12"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_fSt14default_deleteIS1_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::unique_ptr.12"* %8, %"class.std::unique_ptr.12"* %10, %"class.std::unique_ptr.12"* %11, %"class.std::allocator.9"* dereferenceable(1) %call7)
          to label %invoke.cont8 unwind label %lpad

invoke.cont8:                                     ; preds = %invoke.cont
  store %"class.std::unique_ptr.12"* %call9, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %13 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %13, i32 1
  store %"class.std::unique_ptr.12"* %incdec.ptr, %"class.std::unique_ptr.12"** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont, %entry
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %17 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %18 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %tobool = icmp ne %"class.std::unique_ptr.12"* %18, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %catch
  %19 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl10 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %19, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl10 to %"class.std::allocator.9"*
  %21 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %call11 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  %add.ptr12 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %21, i64 %call11
  invoke void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE7destroyIS4_EEvRS5_PT_(%"class.std::allocator.9"* dereferenceable(1) %20, %"class.std::unique_ptr.12"* %add.ptr12)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %if.then
  br label %if.end

lpad13:                                           ; preds = %invoke.cont17, %if.end, %if.else, %if.then
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont18 unwind label %terminate.lpad

if.else:                                          ; preds = %catch
  %25 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %26 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %27 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %call15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %27) #3
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E(%"class.std::unique_ptr.12"* %25, %"class.std::unique_ptr.12"* %26, %"class.std::allocator.9"* dereferenceable(1) %call15)
          to label %invoke.cont16 unwind label %lpad13

invoke.cont16:                                    ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %invoke.cont16, %invoke.cont14
  %28 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %29 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %30 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.8"* %28, %"class.std::unique_ptr.12"* %29, i64 %30)
          to label %invoke.cont17 unwind label %lpad13

invoke.cont17:                                    ; preds = %if.end
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad13

invoke.cont18:                                    ; preds = %lpad13
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont8
  %31 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl19 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %31, i32 0, i32 0
  %_M_start20 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl19, i32 0, i32 0
  %32 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start20, align 8
  %33 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl21 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %33, i32 0, i32 0
  %_M_finish22 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl21, i32 0, i32 1
  %34 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish22, align 8
  %35 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %call23 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %35) #3
  call void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E(%"class.std::unique_ptr.12"* %32, %"class.std::unique_ptr.12"* %34, %"class.std::allocator.9"* dereferenceable(1) %call23)
  %36 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %37 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl24 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %37, i32 0, i32 0
  %_M_start25 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl24, i32 0, i32 0
  %38 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start25, align 8
  %39 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %39, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl26, i32 0, i32 2
  %40 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8
  %41 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl27 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %41, i32 0, i32 0
  %_M_start28 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl27, i32 0, i32 0
  %42 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start28, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.12"* %40 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.12"* %42 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.8"* %36, %"class.std::unique_ptr.12"* %38, i64 %sub.ptr.div)
  %43 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %44 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %44, i32 0, i32 0
  %_M_start30 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl29, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %43, %"class.std::unique_ptr.12"** %_M_start30, align 8
  %45 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_finish, align 8
  %46 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl31 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %46, i32 0, i32 0
  %_M_finish32 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl31, i32 0, i32 1
  store %"class.std::unique_ptr.12"* %45, %"class.std::unique_ptr.12"** %_M_finish32, align 8
  %47 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__new_start, align 8
  %48 = load i64, i64* %__len, align 8
  %add.ptr33 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %47, i64 %48
  %49 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl34 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %49, i32 0, i32 0
  %_M_end_of_storage35 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl34, i32 0, i32 2
  store %"class.std::unique_ptr.12"* %add.ptr33, %"class.std::unique_ptr.12"** %_M_end_of_storage35, align 8
  ret void

eh.resume:                                        ; preds = %invoke.cont18
  %exn36 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn36, 0
  %lpad.val37 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val37

terminate.lpad:                                   ; preds = %lpad13
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE9constructIS5_JPfEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %this, %"class.std::unique_ptr.12"* %__p, float** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__args.addr = alloca float**, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store float** %__args, float*** %__args.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.12"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.12"*
  %3 = load float**, float*** %__args.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %3) #3
  %4 = load float*, float** %call, align 8
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EPf(%"class.std::unique_ptr.12"* %2, float* %4) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EPf(%"class.std::unique_ptr.12"* %this, float* %__p) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__p.addr = alloca float*, align 8
  %ref.tmp = alloca %"struct.std::default_delete.17", align 1
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  store float* %__p, float** %__p.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  invoke void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IRS0_S3_vEEOT_OT0_(%"class.std::tuple.13"* %_M_t, float** dereferenceable(8) %__p.addr, %"struct.std::default_delete.17"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IRS0_S3_vEEOT_OT0_(%"class.std::tuple.13"* %this, float** dereferenceable(8) %__a1, %"struct.std::default_delete.17"* dereferenceable(1) %__a2) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.13"*, align 8
  %__a1.addr = alloca float**, align 8
  %__a2.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"class.std::tuple.13"* %this, %"class.std::tuple.13"** %this.addr, align 8
  store float** %__a1, float*** %__a1.addr, align 8
  store %"struct.std::default_delete.17"* %__a2, %"struct.std::default_delete.17"** %__a2.addr, align 8
  %this1 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.13"* %this1 to %"struct.std::_Tuple_impl.14"*
  %1 = load float**, float*** %__a1.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIRPfEOT_RNSt16remove_referenceIS2_E4typeE(float** dereferenceable(8) %1) #3
  %2 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__a2.addr, align 8
  %call2 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %2) #3
  call void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IRS0_JS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.14"* %0, float** dereferenceable(8) %call, %"struct.std::default_delete.17"* dereferenceable(1) %call2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt7forwardIRPfEOT_RNSt16remove_referenceIS2_E4typeE(float** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca float**, align 8
  store float** %__t, float*** %__t.addr, align 8
  %0 = load float**, float*** %__t.addr, align 8
  ret float** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"struct.std::default_delete.17"* %__t, %"struct.std::default_delete.17"** %__t.addr, align 8
  %0 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__t.addr, align 8
  ret %"struct.std::default_delete.17"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IRS0_JS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.14"* %this, float** dereferenceable(8) %__head, %"struct.std::default_delete.17"* dereferenceable(1) %__tail) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  %__head.addr = alloca float**, align 8
  %__tail.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"struct.std::_Tuple_impl.14"* %this, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  store float** %__head, float*** %__head.addr, align 8
  store %"struct.std::default_delete.17"* %__tail, %"struct.std::default_delete.17"** %__tail.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Tuple_impl.15"*
  %1 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__tail.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %1) #3
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2IS2_EEOT_(%"struct.std::_Tuple_impl.15"* %0, %"struct.std::default_delete.17"* dereferenceable(1) %call)
  %2 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Head_base.19"*
  %3 = load float**, float*** %__head.addr, align 8
  %call2 = call dereferenceable(8) float** @_ZSt7forwardIRPfEOT_RNSt16remove_referenceIS2_E4typeE(float** dereferenceable(8) %3) #3
  call void @_ZNSt10_Head_baseILm0EPfLb0EEC2IRS0_EEOT_(%"struct.std::_Head_base.19"* %2, float** dereferenceable(8) %call2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2IS2_EEOT_(%"struct.std::_Tuple_impl.15"* %this, %"struct.std::default_delete.17"* dereferenceable(1) %__head) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.15"*, align 8
  %__head.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"struct.std::_Tuple_impl.15"* %this, %"struct.std::_Tuple_impl.15"** %this.addr, align 8
  store %"struct.std::default_delete.17"* %__head, %"struct.std::default_delete.17"** %__head.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.15"*, %"struct.std::_Tuple_impl.15"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.15"* %this1 to %"struct.std::_Head_base.16"*
  %1 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__head.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %1) #3
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2IS2_EEOT_(%"struct.std::_Head_base.16"* %0, %"struct.std::default_delete.17"* dereferenceable(1) %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EPfLb0EEC2IRS0_EEOT_(%"struct.std::_Head_base.19"* %this, float** dereferenceable(8) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.19"*, align 8
  %__h.addr = alloca float**, align 8
  store %"struct.std::_Head_base.19"* %this, %"struct.std::_Head_base.19"** %this.addr, align 8
  store float** %__h, float*** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %this1, i32 0, i32 0
  %0 = load float**, float*** %__h.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIRPfEOT_RNSt16remove_referenceIS2_E4typeE(float** dereferenceable(8) %0) #3
  %1 = load float*, float** %call, align 8
  store float* %1, float** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_fELb1EEC2IS2_EEOT_(%"struct.std::_Head_base.16"* %this, %"struct.std::default_delete.17"* dereferenceable(1) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.16"*, align 8
  %__h.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"struct.std::_Head_base.16"* %this, %"struct.std::_Head_base.16"** %this.addr, align 8
  store %"struct.std::default_delete.17"* %__h, %"struct.std::default_delete.17"** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.16"*, %"struct.std::_Head_base.16"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Head_base.16"* %this1 to %"struct.std::default_delete.17"*
  %1 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__h.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %1) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %this, i64 %__n, i8* %__s) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE8max_sizeEv(%"class.std::vector.7"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #21
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE8max_sizeEv(%"class.std::vector.7"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE8max_sizeEv(%"class.std::vector.7"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.9"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m(%"class.std::allocator.9"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.std::unique_ptr.12"* [ %call, %cond.true ], [ null, %cond.false ]
  ret %"class.std::unique_ptr.12"* %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE4sizeEv(%"class.std::vector.7"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.12"* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.12"* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_fSt14default_deleteIS1_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"* %__last, %"class.std::unique_ptr.12"* %__result, %"class.std::allocator.9"* dereferenceable(1) %__alloc) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__result.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__alloc.addr = alloca %"class.std::allocator.9"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.49", align 8
  %agg.tmp1 = alloca %"class.std::move_iterator.49", align 8
  store %"class.std::unique_ptr.12"* %__first, %"class.std::unique_ptr.12"** %__first.addr, align 8
  store %"class.std::unique_ptr.12"* %__last, %"class.std::unique_ptr.12"** %__last.addr, align 8
  store %"class.std::unique_ptr.12"* %__result, %"class.std::unique_ptr.12"** %__result.addr, align 8
  store %"class.std::allocator.9"* %__alloc, %"class.std::allocator.9"** %__alloc.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__first.addr, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EESt13move_iteratorIS5_EET0_T_(%"class.std::unique_ptr.12"* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %call, %"class.std::unique_ptr.12"** %coerce.dive, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__last.addr, align 8
  %call2 = call %"class.std::unique_ptr.12"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EESt13move_iteratorIS5_EET0_T_(%"class.std::unique_ptr.12"* %1)
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp1, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %call2, %"class.std::unique_ptr.12"** %coerce.dive3, align 8
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__result.addr, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp, i32 0, i32 0
  %4 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp1, i32 0, i32 0
  %5 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive5, align 8
  %call6 = call %"class.std::unique_ptr.12"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::unique_ptr.12"* %4, %"class.std::unique_ptr.12"* %5, %"class.std::unique_ptr.12"* %2, %"class.std::allocator.9"* dereferenceable(1) %3)
  ret %"class.std::unique_ptr.12"* %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE7destroyIS4_EEvRS5_PT_(%"class.std::allocator.9"* dereferenceable(1) %__a, %"class.std::unique_ptr.12"* %__p) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.9"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::allocator.9"* %__a, %"class.std::allocator.9"** %__a.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %0 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.9"* %0 to %"class.__gnu_cxx::new_allocator.10"*
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE7destroyIS5_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %1, %"class.std::unique_ptr.12"* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE8max_sizeEv(%"class.std::vector.7"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.7"*, align 8
  store %"class.std::vector.7"* %this, %"class.std::vector.7"** %this.addr, align 8
  %this1 = load %"class.std::vector.7"*, %"class.std::vector.7"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.7"* %this1 to %"struct.std::_Vector_base.8"*
  %call = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8max_sizeERKS5_(%"class.std::allocator.9"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8max_sizeERKS5_(%"class.std::allocator.9"* dereferenceable(1) %__a) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %__a, %"class.std::allocator.9"** %__a.addr, align 8
  %0 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.9"* %0 to %"class.__gnu_cxx::new_allocator.10"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %this, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m(%"class.std::allocator.9"* dereferenceable(1) %__a, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.9"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.9"* %__a, %"class.std::allocator.9"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.9"* %0 to %"class.__gnu_cxx::new_allocator.10"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %1, i64 %2, i8* null)
  ret %"class.std::unique_ptr.12"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %this, i64 %__n, i8*) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 8
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to %"class.std::unique_ptr.12"*
  ret %"class.std::unique_ptr.12"* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"* %__result, %"class.std::allocator.9"* dereferenceable(1)) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.49", align 8
  %__last = alloca %"class.std::move_iterator.49", align 8
  %__result.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %.addr = alloca %"class.std::allocator.9"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.49", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.49", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.12"* %__result, %"class.std::unique_ptr.12"** %__result.addr, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %.addr, align 8
  %1 = bitcast %"class.std::move_iterator.49"* %agg.tmp to i8*
  %2 = bitcast %"class.std::move_iterator.49"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.std::move_iterator.49"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::move_iterator.49"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp, i32 0, i32 0
  %6 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp2, i32 0, i32 0
  %7 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive4, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_ET0_T_S9_S8_(%"class.std::unique_ptr.12"* %6, %"class.std::unique_ptr.12"* %7, %"class.std::unique_ptr.12"* %5)
  ret %"class.std::unique_ptr.12"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EESt13move_iteratorIS5_EET0_T_(%"class.std::unique_ptr.12"* %__i) #4 comdat {
entry:
  %retval = alloca %"class.std::move_iterator.49", align 8
  %__i.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__i, %"class.std::unique_ptr.12"** %__i.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEC2ES5_(%"class.std::move_iterator.49"* %retval, %"class.std::unique_ptr.12"* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %retval, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive, align 8
  ret %"class.std::unique_ptr.12"* %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS2_EEES6_ET0_T_S9_S8_(%"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"* %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.49", align 8
  %__last = alloca %"class.std::move_iterator.49", align 8
  %__result.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.std::move_iterator.49", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.49", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.12"* %__result, %"class.std::unique_ptr.12"** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.std::move_iterator.49"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.49"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator.49"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator.49"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp, i32 0, i32 0
  %5 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %agg.tmp2, i32 0, i32 0
  %6 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %coerce.dive4, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS4_EEES8_EET0_T_SB_SA_(%"class.std::unique_ptr.12"* %5, %"class.std::unique_ptr.12"* %6, %"class.std::unique_ptr.12"* %4)
  ret %"class.std::unique_ptr.12"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS4_EEES8_EET0_T_SB_SA_(%"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"* %__result) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__first = alloca %"class.std::move_iterator.49", align 8
  %__last = alloca %"class.std::move_iterator.49", align 8
  %__result.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__cur = alloca %"class.std::unique_ptr.12"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__first.coerce, %"class.std::unique_ptr.12"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.12"* %__last.coerce, %"class.std::unique_ptr.12"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.12"* %__result, %"class.std::unique_ptr.12"** %__result.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__result.addr, align 8
  store %"class.std::unique_ptr.12"* %0, %"class.std::unique_ptr.12"** %__cur, align 8
  br label %for.cond

for.cond:                                         ; preds = %invoke.cont6, %entry
  %call = invoke zeroext i1 @_ZStneIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.49"* dereferenceable(8) %__first, %"class.std::move_iterator.49"* dereferenceable(8) %__last)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.cond
  br i1 %call, label %for.body, label %for.end

for.body:                                         ; preds = %invoke.cont
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__cur, align 8
  %call2 = call %"class.std::unique_ptr.12"* @_ZSt11__addressofISt10unique_ptrIA_fSt14default_deleteIS1_EEEPT_RS5_(%"class.std::unique_ptr.12"* dereferenceable(8) %1) #3
  %call4 = invoke dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEdeEv(%"class.std::move_iterator.49"* %__first)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %for.body
  invoke void @_ZSt10_ConstructISt10unique_ptrIA_fSt14default_deleteIS1_EEJS4_EEvPT_DpOT0_(%"class.std::unique_ptr.12"* %call2, %"class.std::unique_ptr.12"* dereferenceable(8) %call4)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont5
  %call7 = invoke dereferenceable(8) %"class.std::move_iterator.49"* @_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEppEv(%"class.std::move_iterator.49"* %__first)
          to label %invoke.cont6 unwind label %lpad

invoke.cont6:                                     ; preds = %for.inc
  %2 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__cur, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %2, i32 1
  store %"class.std::unique_ptr.12"* %incdec.ptr, %"class.std::unique_ptr.12"** %__cur, align 8
  br label %for.cond

lpad:                                             ; preds = %for.inc, %invoke.cont3, %for.body, %for.cond
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %6 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %7 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__result.addr, align 8
  %8 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__cur, align 8
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEvT_S6_(%"class.std::unique_ptr.12"* %7, %"class.std::unique_ptr.12"* %8)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad8

for.end:                                          ; preds = %invoke.cont
  %9 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__cur, align 8
  ret %"class.std::unique_ptr.12"* %9

lpad8:                                            ; preds = %invoke.cont9, %catch
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont10 unwind label %terminate.lpad

invoke.cont10:                                    ; preds = %lpad8
  br label %eh.resume

try.cont:                                         ; No predecessors!
  call void @llvm.trap()
  unreachable

eh.resume:                                        ; preds = %invoke.cont10
  %exn11 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn11, 0
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val12

terminate.lpad:                                   ; preds = %lpad8
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont9
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZStneIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.49"* dereferenceable(8) %__x, %"class.std::move_iterator.49"* dereferenceable(8) %__y) #4 comdat {
entry:
  %__x.addr = alloca %"class.std::move_iterator.49"*, align 8
  %__y.addr = alloca %"class.std::move_iterator.49"*, align 8
  store %"class.std::move_iterator.49"* %__x, %"class.std::move_iterator.49"** %__x.addr, align 8
  store %"class.std::move_iterator.49"* %__y, %"class.std::move_iterator.49"** %__y.addr, align 8
  %0 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %__x.addr, align 8
  %1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %__y.addr, align 8
  %call = call zeroext i1 @_ZSteqIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.49"* dereferenceable(8) %0, %"class.std::move_iterator.49"* dereferenceable(8) %1)
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt10_ConstructISt10unique_ptrIA_fSt14default_deleteIS1_EEJS4_EEvPT_DpOT0_(%"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"* dereferenceable(8) %__args) #5 comdat {
entry:
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__args.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  store %"class.std::unique_ptr.12"* %__args, %"class.std::unique_ptr.12"** %__args.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.12"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.12"*
  %3 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__args.addr, align 8
  %call = call dereferenceable(8) %"class.std::unique_ptr.12"* @_ZSt7forwardISt10unique_ptrIA_fSt14default_deleteIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::unique_ptr.12"* dereferenceable(8) %3) #3
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EOS3_(%"class.std::unique_ptr.12"* %2, %"class.std::unique_ptr.12"* dereferenceable(8) %call) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.12"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEdeEv(%"class.std::move_iterator.49"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.49"*, align 8
  store %"class.std::move_iterator.49"* %this, %"class.std::move_iterator.49"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_current, align 8
  ret %"class.std::unique_ptr.12"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::move_iterator.49"* @_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEppEv(%"class.std::move_iterator.49"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.49"*, align 8
  store %"class.std::move_iterator.49"* %this, %"class.std::move_iterator.49"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_current, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %0, i32 1
  store %"class.std::unique_ptr.12"* %incdec.ptr, %"class.std::unique_ptr.12"** %_M_current, align 8
  ret %"class.std::move_iterator.49"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZSteqIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator.49"* dereferenceable(8) %__x, %"class.std::move_iterator.49"* dereferenceable(8) %__y) #4 comdat {
entry:
  %__x.addr = alloca %"class.std::move_iterator.49"*, align 8
  %__y.addr = alloca %"class.std::move_iterator.49"*, align 8
  store %"class.std::move_iterator.49"* %__x, %"class.std::move_iterator.49"** %__x.addr, align 8
  store %"class.std::move_iterator.49"* %__y, %"class.std::move_iterator.49"** %__y.addr, align 8
  %0 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %__x.addr, align 8
  %call = call %"class.std::unique_ptr.12"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEE4baseEv(%"class.std::move_iterator.49"* %0)
  %1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %__y.addr, align 8
  %call1 = call %"class.std::unique_ptr.12"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEE4baseEv(%"class.std::move_iterator.49"* %1)
  %cmp = icmp eq %"class.std::unique_ptr.12"* %call, %call1
  ret i1 %cmp
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.12"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEE4baseEv(%"class.std::move_iterator.49"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.49"*, align 8
  store %"class.std::move_iterator.49"* %this, %"class.std::move_iterator.49"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_current, align 8
  ret %"class.std::unique_ptr.12"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.12"* @_ZSt7forwardISt10unique_ptrIA_fSt14default_deleteIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::unique_ptr.12"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::unique_ptr.12"* %__t, %"class.std::unique_ptr.12"** %__t.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__t.addr, align 8
  ret %"class.std::unique_ptr.12"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EEC2EOS3_(%"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"* dereferenceable(8) %__u) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__u.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %ref.tmp = alloca float*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__u, %"class.std::unique_ptr.12"** %__u.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__u.addr, align 8
  %call = call float* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE7releaseEv(%"class.std::unique_ptr.12"* %0) #3
  store float* %call, float** %ref.tmp, align 8
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__u.addr, align 8
  %call2 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE11get_deleterEv(%"class.std::unique_ptr.12"* %1) #3
  %call3 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %call2) #3
  invoke void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IS0_S3_vEEOT_OT0_(%"class.std::tuple.13"* %_M_t, float** dereferenceable(8) %ref.tmp, %"struct.std::default_delete.17"* dereferenceable(1) %call3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local float* @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE7releaseEv(%"class.std::unique_ptr.12"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.12"*, align 8
  %__p = alloca float*, align 8
  store %"class.std::unique_ptr.12"* %this, %"class.std::unique_ptr.12"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %this.addr, align 8
  %call = call float* @_ZNKSt10unique_ptrIA_fSt14default_deleteIS0_EE3getEv(%"class.std::unique_ptr.12"* %this1) #3
  store float* %call, float** %__p, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %this1, i32 0, i32 0
  %call2 = call dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS8_(%"class.std::tuple.13"* dereferenceable(8) %_M_t) #3
  store float* null, float** %call2, align 8
  %0 = load float*, float** %__p, align 8
  ret float* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJPfSt14default_deleteIA_fEEEC2IS0_S3_vEEOT_OT0_(%"class.std::tuple.13"* %this, float** dereferenceable(8) %__a1, %"struct.std::default_delete.17"* dereferenceable(1) %__a2) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.13"*, align 8
  %__a1.addr = alloca float**, align 8
  %__a2.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"class.std::tuple.13"* %this, %"class.std::tuple.13"** %this.addr, align 8
  store float** %__a1, float*** %__a1.addr, align 8
  store %"struct.std::default_delete.17"* %__a2, %"struct.std::default_delete.17"** %__a2.addr, align 8
  %this1 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.13"* %this1 to %"struct.std::_Tuple_impl.14"*
  %1 = load float**, float*** %__a1.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %1) #3
  %2 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__a2.addr, align 8
  %call2 = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %2) #3
  call void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IS0_JS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.14"* %0, float** dereferenceable(8) %call, %"struct.std::default_delete.17"* dereferenceable(1) %call2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEEC2IS0_JS3_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.14"* %this, float** dereferenceable(8) %__head, %"struct.std::default_delete.17"* dereferenceable(1) %__tail) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  %__head.addr = alloca float**, align 8
  %__tail.addr = alloca %"struct.std::default_delete.17"*, align 8
  store %"struct.std::_Tuple_impl.14"* %this, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  store float** %__head, float*** %__head.addr, align 8
  store %"struct.std::default_delete.17"* %__tail, %"struct.std::default_delete.17"** %__tail.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Tuple_impl.15"*
  %1 = load %"struct.std::default_delete.17"*, %"struct.std::default_delete.17"** %__tail.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.17"* @_ZSt7forwardISt14default_deleteIA_fEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::default_delete.17"* dereferenceable(1) %1) #3
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_fEEEC2IS2_EEOT_(%"struct.std::_Tuple_impl.15"* %0, %"struct.std::default_delete.17"* dereferenceable(1) %call)
  %2 = bitcast %"struct.std::_Tuple_impl.14"* %this1 to %"struct.std::_Head_base.19"*
  %3 = load float**, float*** %__head.addr, align 8
  %call2 = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %3) #3
  call void @_ZNSt10_Head_baseILm0EPfLb0EEC2IS0_EEOT_(%"struct.std::_Head_base.19"* %2, float** dereferenceable(8) %call2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EPfLb0EEC2IS0_EEOT_(%"struct.std::_Head_base.19"* %this, float** dereferenceable(8) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.19"*, align 8
  %__h.addr = alloca float**, align 8
  store %"struct.std::_Head_base.19"* %this, %"struct.std::_Head_base.19"** %this.addr, align 8
  store float** %__h, float*** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %this1, i32 0, i32 0
  %0 = load float**, float*** %__h.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt7forwardIPfEOT_RNSt16remove_referenceIS1_E4typeE(float** dereferenceable(8) %0) #3
  %1 = load float*, float** %call, align 8
  store float* %1, float** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPSt10unique_ptrIA_fSt14default_deleteIS1_EEEC2ES5_(%"class.std::move_iterator.49"* %this, %"class.std::unique_ptr.12"* %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.49"*, align 8
  %__i.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.std::move_iterator.49"* %this, %"class.std::move_iterator.49"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__i, %"class.std::unique_ptr.12"** %__i.addr, align 8
  %this1 = load %"class.std::move_iterator.49"*, %"class.std::move_iterator.49"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.49", %"class.std::move_iterator.49"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__i.addr, align 8
  store %"class.std::unique_ptr.12"* %0, %"class.std::unique_ptr.12"** %_M_current, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_fSt14default_deleteIS2_EEE7destroyIS5_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %this, %"class.std::unique_ptr.12"* %__p) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %__p.addr = alloca %"class.std::unique_ptr.12"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %this, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  store %"class.std::unique_ptr.12"* %__p, %"class.std::unique_ptr.12"** %__p.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %this.addr, align 8
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %__p.addr, align 8
  call void @_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev(%"class.std::unique_ptr.12"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt3getILm0EJPfSt14default_deleteIA_fEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_(%"class.std::tuple.13"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.13"*, align 8
  store %"class.std::tuple.13"* %__t, %"class.std::tuple.13"** %__t.addr, align 8
  %0 = load %"class.std::tuple.13"*, %"class.std::tuple.13"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.13"* %0 to %"struct.std::_Tuple_impl.14"*
  %call = call dereferenceable(8) float** @_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERKT0_RKSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %1) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt12__get_helperILm0EPfJSt14default_deleteIA_fEEERKT0_RKSt11_Tuple_implIXT_EJS4_DpT1_EE(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  store %"struct.std::_Tuple_impl.14"* %__t, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %call = call dereferenceable(8) float** @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERKS4_(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %0) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNSt11_Tuple_implILm0EJPfSt14default_deleteIA_fEEE7_M_headERKS4_(%"struct.std::_Tuple_impl.14"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.14"*, align 8
  store %"struct.std::_Tuple_impl.14"* %__t, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.14"*, %"struct.std::_Tuple_impl.14"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.14"* %0 to %"struct.std::_Head_base.19"*
  %call = call dereferenceable(8) float** @_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERKS1_(%"struct.std::_Head_base.19"* dereferenceable(8) %1) #3
  ret float** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZNSt10_Head_baseILm0EPfLb0EE7_M_headERKS1_(%"struct.std::_Head_base.19"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.19"*, align 8
  store %"struct.std::_Head_base.19"* %__b, %"struct.std::_Head_base.19"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.19"*, %"struct.std::_Head_base.19"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.19", %"struct.std::_Head_base.19"* %0, i32 0, i32 0
  ret float** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt4swapIPfEvRT_S2_(float** dereferenceable(8) %__a, float** dereferenceable(8) %__b) #5 comdat {
entry:
  %__a.addr = alloca float**, align 8
  %__b.addr = alloca float**, align 8
  %__tmp = alloca float*, align 8
  store float** %__a, float*** %__a.addr, align 8
  store float** %__b, float*** %__b.addr, align 8
  %0 = load float**, float*** %__a.addr, align 8
  %call = call dereferenceable(8) float** @_ZSt4moveIRPfEONSt16remove_referenceIT_E4typeEOS3_(float** dereferenceable(8) %0) #3
  %1 = load float*, float** %call, align 8
  store float* %1, float** %__tmp, align 8
  %2 = load float**, float*** %__b.addr, align 8
  %call1 = call dereferenceable(8) float** @_ZSt4moveIRPfEONSt16remove_referenceIT_E4typeEOS3_(float** dereferenceable(8) %2) #3
  %3 = load float*, float** %call1, align 8
  %4 = load float**, float*** %__a.addr, align 8
  store float* %3, float** %4, align 8
  %call2 = call dereferenceable(8) float** @_ZSt4moveIRPfEONSt16remove_referenceIT_E4typeEOS3_(float** dereferenceable(8) %__tmp) #3
  %5 = load float*, float** %call2, align 8
  %6 = load float**, float*** %__b.addr, align 8
  store float* %5, float** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) float** @_ZSt4moveIRPfEONSt16remove_referenceIT_E4typeEOS3_(float** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca float**, align 8
  store float** %__t, float*** %__t.addr, align 8
  %0 = load float**, float*** %__t.addr, align 8
  ret float** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fftr_state** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %struct.kiss_fftr_state**, align 8
  store %struct.kiss_fftr_state** %__t, %struct.kiss_fftr_state*** %__t.addr, align 8
  %0 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__t.addr, align 8
  ret %struct.kiss_fftr_state** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZSt4moveIRPFvPvEEONSt16remove_referenceIT_E4typeEOS5_(void (i8*)** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca void (i8*)**, align 8
  store void (i8*)** %__t, void (i8*)*** %__t.addr, align 8
  %0 = load void (i8*)**, void (i8*)*** %__t.addr, align 8
  ret void (i8*)** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJP15kiss_fftr_statePFvPvEEEC2IS1_S4_vEEOT_OT0_(%"class.std::tuple.21"* %this, %struct.kiss_fftr_state** dereferenceable(8) %__a1, void (i8*)** dereferenceable(8) %__a2) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.21"*, align 8
  %__a1.addr = alloca %struct.kiss_fftr_state**, align 8
  %__a2.addr = alloca void (i8*)**, align 8
  store %"class.std::tuple.21"* %this, %"class.std::tuple.21"** %this.addr, align 8
  store %struct.kiss_fftr_state** %__a1, %struct.kiss_fftr_state*** %__a1.addr, align 8
  store void (i8*)** %__a2, void (i8*)*** %__a2.addr, align 8
  %this1 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.21"* %this1 to %"struct.std::_Tuple_impl.22"*
  %1 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__a1.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt7forwardIP15kiss_fftr_stateEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fftr_state** dereferenceable(8) %1) #3
  %2 = load void (i8*)**, void (i8*)*** %__a2.addr, align 8
  %call2 = call dereferenceable(8) void (i8*)** @_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE(void (i8*)** dereferenceable(8) %2) #3
  call void @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEEC2IS1_JS4_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.22"* %0, %struct.kiss_fftr_state** dereferenceable(8) %call, void (i8*)** dereferenceable(8) %call2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt7forwardIP15kiss_fftr_stateEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fftr_state** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %struct.kiss_fftr_state**, align 8
  store %struct.kiss_fftr_state** %__t, %struct.kiss_fftr_state*** %__t.addr, align 8
  %0 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__t.addr, align 8
  ret %struct.kiss_fftr_state** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) void (i8*)** @_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE(void (i8*)** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca void (i8*)**, align 8
  store void (i8*)** %__t, void (i8*)*** %__t.addr, align 8
  %0 = load void (i8*)**, void (i8*)*** %__t.addr, align 8
  ret void (i8*)** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEEC2IS1_JS4_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.22"* %this, %struct.kiss_fftr_state** dereferenceable(8) %__head, void (i8*)** dereferenceable(8) %__tail) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.22"*, align 8
  %__head.addr = alloca %struct.kiss_fftr_state**, align 8
  %__tail.addr = alloca void (i8*)**, align 8
  store %"struct.std::_Tuple_impl.22"* %this, %"struct.std::_Tuple_impl.22"** %this.addr, align 8
  store %struct.kiss_fftr_state** %__head, %struct.kiss_fftr_state*** %__head.addr, align 8
  store void (i8*)** %__tail, void (i8*)*** %__tail.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.22"* %this1 to %"struct.std::_Tuple_impl.23"*
  %1 = load void (i8*)**, void (i8*)*** %__tail.addr, align 8
  %call = call dereferenceable(8) void (i8*)** @_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE(void (i8*)** dereferenceable(8) %1) #3
  call void @_ZNSt11_Tuple_implILm1EJPFvPvEEEC2IS2_EEOT_(%"struct.std::_Tuple_impl.23"* %0, void (i8*)** dereferenceable(8) %call)
  %2 = bitcast %"struct.std::_Tuple_impl.22"* %this1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to %"struct.std::_Head_base.25"*
  %5 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__head.addr, align 8
  %call2 = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt7forwardIP15kiss_fftr_stateEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fftr_state** dereferenceable(8) %5) #3
  call void @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EEC2IS1_EEOT_(%"struct.std::_Head_base.25"* %4, %struct.kiss_fftr_state** dereferenceable(8) %call2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJPFvPvEEEC2IS2_EEOT_(%"struct.std::_Tuple_impl.23"* %this, void (i8*)** dereferenceable(8) %__head) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.23"*, align 8
  %__head.addr = alloca void (i8*)**, align 8
  store %"struct.std::_Tuple_impl.23"* %this, %"struct.std::_Tuple_impl.23"** %this.addr, align 8
  store void (i8*)** %__head, void (i8*)*** %__head.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.23"*, %"struct.std::_Tuple_impl.23"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.23"* %this1 to %"struct.std::_Head_base.24"*
  %1 = load void (i8*)**, void (i8*)*** %__head.addr, align 8
  %call = call dereferenceable(8) void (i8*)** @_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE(void (i8*)** dereferenceable(8) %1) #3
  call void @_ZNSt10_Head_baseILm1EPFvPvELb0EEC2IS2_EEOT_(%"struct.std::_Head_base.24"* %0, void (i8*)** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EEC2IS1_EEOT_(%"struct.std::_Head_base.25"* %this, %struct.kiss_fftr_state** dereferenceable(8) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.25"*, align 8
  %__h.addr = alloca %struct.kiss_fftr_state**, align 8
  store %"struct.std::_Head_base.25"* %this, %"struct.std::_Head_base.25"** %this.addr, align 8
  store %struct.kiss_fftr_state** %__h, %struct.kiss_fftr_state*** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.25"*, %"struct.std::_Head_base.25"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.25", %"struct.std::_Head_base.25"* %this1, i32 0, i32 0
  %0 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__h.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt7forwardIP15kiss_fftr_stateEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fftr_state** dereferenceable(8) %0) #3
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %call, align 8
  store %struct.kiss_fftr_state* %1, %struct.kiss_fftr_state** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1EPFvPvELb0EEC2IS2_EEOT_(%"struct.std::_Head_base.24"* %this, void (i8*)** dereferenceable(8) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.24"*, align 8
  %__h.addr = alloca void (i8*)**, align 8
  store %"struct.std::_Head_base.24"* %this, %"struct.std::_Head_base.24"** %this.addr, align 8
  store void (i8*)** %__h, void (i8*)*** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.24"*, %"struct.std::_Head_base.24"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.24", %"struct.std::_Head_base.24"* %this1, i32 0, i32 0
  %0 = load void (i8*)**, void (i8*)*** %__h.addr, align 8
  %call = call dereferenceable(8) void (i8*)** @_ZSt7forwardIPFvPvEEOT_RNSt16remove_referenceIS3_E4typeE(void (i8*)** dereferenceable(8) %0) #3
  %1 = load void (i8*)*, void (i8*)** %call, align 8
  store void (i8*)* %1, void (i8*)** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.27"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this, %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this1 to %"class.std::allocator.28"*
  call void @_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEEC2Ev(%"class.std::allocator.28"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this1, i32 0, i32 0
  store %"class.std::unique_ptr.31"* null, %"class.std::unique_ptr.31"** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this1, i32 0, i32 1
  store %"class.std::unique_ptr.31"* null, %"class.std::unique_ptr.31"** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %this1, i32 0, i32 2
  store %"class.std::unique_ptr.31"* null, %"class.std::unique_ptr.31"** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEEC2Ev(%"class.std::allocator.28"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %this, %"class.std::allocator.28"** %this.addr, align 8
  %this1 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.28"* %this1 to %"class.__gnu_cxx::new_allocator.29"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.29"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.29"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %this, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt3getILm0EJP15kiss_fftr_statePFvPvEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple.21"* dereferenceable(16) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.21"*, align 8
  store %"class.std::tuple.21"* %__t, %"class.std::tuple.21"** %__t.addr, align 8
  %0 = load %"class.std::tuple.21"*, %"class.std::tuple.21"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.21"* %0 to %"struct.std::_Tuple_impl.22"*
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %1) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZSt12__get_helperILm0EP15kiss_fftr_stateJPFvPvEEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %__t, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERKS5_(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %0) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt11_Tuple_implILm0EJP15kiss_fftr_statePFvPvEEE7_M_headERKS5_(%"struct.std::_Tuple_impl.22"* dereferenceable(16) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.22"*, align 8
  store %"struct.std::_Tuple_impl.22"* %__t, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.22"*, %"struct.std::_Tuple_impl.22"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.22"* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 8
  %2 = bitcast i8* %add.ptr to %"struct.std::_Head_base.25"*
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERKS2_(%"struct.std::_Head_base.25"* dereferenceable(8) %2) #3
  ret %struct.kiss_fftr_state** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fftr_state** @_ZNSt10_Head_baseILm0EP15kiss_fftr_stateLb0EE7_M_headERKS2_(%"struct.std::_Head_base.25"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.25"*, align 8
  store %"struct.std::_Head_base.25"* %__b, %"struct.std::_Head_base.25"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.25"*, %"struct.std::_Head_base.25"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.25", %"struct.std::_Head_base.25"* %0, i32 0, i32 0
  ret %struct.kiss_fftr_state** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_(%"class.std::tuple.32"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::tuple.32"*, align 8
  store %"class.std::tuple.32"* %__t, %"class.std::tuple.32"** %__t.addr, align 8
  %0 = load %"class.std::tuple.32"*, %"class.std::tuple.32"** %__t.addr, align 8
  %1 = bitcast %"class.std::tuple.32"* %0 to %"struct.std::_Tuple_impl.33"*
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %1) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt12__get_helperILm0EP12kiss_fft_cpxJSt14default_deleteIA_S0_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %__t, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERKS5_(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %0) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE7_M_headERKS5_(%"struct.std::_Tuple_impl.33"* dereferenceable(8) %__t) #5 comdat align 2 {
entry:
  %__t.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  store %"struct.std::_Tuple_impl.33"* %__t, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %0 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %__t.addr, align 8
  %1 = bitcast %"struct.std::_Tuple_impl.33"* %0 to %"struct.std::_Head_base.38"*
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERKS2_(%"struct.std::_Head_base.38"* dereferenceable(8) %1) #3
  ret %struct.kiss_fft_cpx** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE7_M_headERKS2_(%"struct.std::_Head_base.38"* dereferenceable(8) %__b) #5 comdat align 2 {
entry:
  %__b.addr = alloca %"struct.std::_Head_base.38"*, align 8
  store %"struct.std::_Head_base.38"* %__b, %"struct.std::_Head_base.38"** %__b.addr, align 8
  %0 = load %"struct.std::_Head_base.38"*, %"struct.std::_Head_base.38"** %__b.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.38", %"struct.std::_Head_base.38"* %0, i32 0, i32 0
  ret %struct.kiss_fft_cpx** %_M_head_impl
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt4swapIP15kiss_fftr_stateEvRT_S3_(%struct.kiss_fftr_state** dereferenceable(8) %__a, %struct.kiss_fftr_state** dereferenceable(8) %__b) #5 comdat {
entry:
  %__a.addr = alloca %struct.kiss_fftr_state**, align 8
  %__b.addr = alloca %struct.kiss_fftr_state**, align 8
  %__tmp = alloca %struct.kiss_fftr_state*, align 8
  store %struct.kiss_fftr_state** %__a, %struct.kiss_fftr_state*** %__a.addr, align 8
  store %struct.kiss_fftr_state** %__b, %struct.kiss_fftr_state*** %__b.addr, align 8
  %0 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__a.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fftr_state** dereferenceable(8) %0) #3
  %1 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %call, align 8
  store %struct.kiss_fftr_state* %1, %struct.kiss_fftr_state** %__tmp, align 8
  %2 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__b.addr, align 8
  %call1 = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fftr_state** dereferenceable(8) %2) #3
  %3 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %call1, align 8
  %4 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__a.addr, align 8
  store %struct.kiss_fftr_state* %3, %struct.kiss_fftr_state** %4, align 8
  %call2 = call dereferenceable(8) %struct.kiss_fftr_state** @_ZSt4moveIRP15kiss_fftr_stateEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fftr_state** dereferenceable(8) %__tmp) #3
  %5 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %call2, align 8
  %6 = load %struct.kiss_fftr_state**, %struct.kiss_fftr_state*** %__b.addr, align 8
  store %struct.kiss_fftr_state* %5, %struct.kiss_fftr_state** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.31"* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.31"* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* %this, i64 %__n) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %__n.addr = alloca i64, align 8
  %__len = alloca i64, align 8
  %__old_size = alloca i64, align 8
  %__new_start = alloca %"class.std::unique_ptr.31"*, align 8
  %__new_finish = alloca %"class.std::unique_ptr.31"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end47

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 2
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_end_of_storage, align 8
  %3 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::unique_ptr.31"* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.31"* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %5 = load i64, i64* %__n.addr, align 8
  %cmp3 = icmp uge i64 %sub.ptr.div, %5
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %6 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %6, i32 0, i32 0
  %_M_finish6 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl5, i32 0, i32 1
  %7 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish6, align 8
  %8 = load i64, i64* %__n.addr, align 8
  %9 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %9) #3
  %call7 = call %"class.std::unique_ptr.31"* @_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::unique_ptr.31"* %7, i64 %8, %"class.std::allocator.28"* dereferenceable(1) %call)
  %10 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl8 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %10, i32 0, i32 0
  %_M_finish9 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl8, i32 0, i32 1
  store %"class.std::unique_ptr.31"* %call7, %"class.std::unique_ptr.31"** %_M_finish9, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %11 = load i64, i64* %__n.addr, align 8
  %call10 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.26"* %this1, i64 %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0))
  store i64 %call10, i64* %__len, align 8
  %call11 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  store i64 %call11, i64* %__old_size, align 8
  %12 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %13 = load i64, i64* %__len, align 8
  %call12 = call %"class.std::unique_ptr.31"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.27"* %12, i64 %13)
  store %"class.std::unique_ptr.31"* %call12, %"class.std::unique_ptr.31"** %__new_start, align 8
  %14 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  store %"class.std::unique_ptr.31"* %14, %"class.std::unique_ptr.31"** %__new_finish, align 8
  %15 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl13 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %15, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl13, i32 0, i32 0
  %16 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8
  %17 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl14 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %17, i32 0, i32 0
  %_M_finish15 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl14, i32 0, i32 1
  %18 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish15, align 8
  %19 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  %20 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call16 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %20) #3
  %call17 = invoke %"class.std::unique_ptr.31"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::unique_ptr.31"* %16, %"class.std::unique_ptr.31"* %18, %"class.std::unique_ptr.31"* %19, %"class.std::allocator.28"* dereferenceable(1) %call16)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  store %"class.std::unique_ptr.31"* %call17, %"class.std::unique_ptr.31"** %__new_finish, align 8
  %21 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_finish, align 8
  %22 = load i64, i64* %__n.addr, align 8
  %23 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call18 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %23) #3
  %call20 = invoke %"class.std::unique_ptr.31"* @_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::unique_ptr.31"* %21, i64 %22, %"class.std::allocator.28"* dereferenceable(1) %call18)
          to label %invoke.cont19 unwind label %lpad

invoke.cont19:                                    ; preds = %invoke.cont
  store %"class.std::unique_ptr.31"* %call20, %"class.std::unique_ptr.31"** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont, %if.else
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %exn.slot, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %27 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %28 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  %29 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_finish, align 8
  %30 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call21 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %30) #3
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E(%"class.std::unique_ptr.31"* %28, %"class.std::unique_ptr.31"* %29, %"class.std::allocator.28"* dereferenceable(1) %call21)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %catch
  %31 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %32 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  %33 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.27"* %31, %"class.std::unique_ptr.31"* %32, i64 %33)
          to label %invoke.cont24 unwind label %lpad22

invoke.cont24:                                    ; preds = %invoke.cont23
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad22

lpad22:                                           ; preds = %invoke.cont24, %invoke.cont23, %catch
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %exn.slot, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont25 unwind label %terminate.lpad

invoke.cont25:                                    ; preds = %lpad22
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont19
  %37 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %37, i32 0, i32 0
  %_M_start27 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl26, i32 0, i32 0
  %38 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start27, align 8
  %39 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl28 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %39, i32 0, i32 0
  %_M_finish29 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl28, i32 0, i32 1
  %40 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish29, align 8
  %41 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call30 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %41) #3
  call void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E(%"class.std::unique_ptr.31"* %38, %"class.std::unique_ptr.31"* %40, %"class.std::allocator.28"* dereferenceable(1) %call30)
  %42 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %43 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl31 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %43, i32 0, i32 0
  %_M_start32 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl31, i32 0, i32 0
  %44 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start32, align 8
  %45 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl33 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %45, i32 0, i32 0
  %_M_end_of_storage34 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl33, i32 0, i32 2
  %46 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_end_of_storage34, align 8
  %47 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl35 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %47, i32 0, i32 0
  %_M_start36 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl35, i32 0, i32 0
  %48 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start36, align 8
  %sub.ptr.lhs.cast37 = ptrtoint %"class.std::unique_ptr.31"* %46 to i64
  %sub.ptr.rhs.cast38 = ptrtoint %"class.std::unique_ptr.31"* %48 to i64
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38
  %sub.ptr.div40 = sdiv exact i64 %sub.ptr.sub39, 8
  call void @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.27"* %42, %"class.std::unique_ptr.31"* %44, i64 %sub.ptr.div40)
  %49 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  %50 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl41 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %50, i32 0, i32 0
  %_M_start42 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl41, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %49, %"class.std::unique_ptr.31"** %_M_start42, align 8
  %51 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_finish, align 8
  %52 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl43 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %52, i32 0, i32 0
  %_M_finish44 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl43, i32 0, i32 1
  store %"class.std::unique_ptr.31"* %51, %"class.std::unique_ptr.31"** %_M_finish44, align 8
  %53 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__new_start, align 8
  %54 = load i64, i64* %__len, align 8
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %53, i64 %54
  %55 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl45 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %55, i32 0, i32 0
  %_M_end_of_storage46 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl45, i32 0, i32 2
  store %"class.std::unique_ptr.31"* %add.ptr, %"class.std::unique_ptr.31"** %_M_end_of_storage46, align 8
  br label %if.end

if.end:                                           ; preds = %try.cont, %if.then4
  br label %if.end47

if.end47:                                         ; preds = %if.end, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont25
  %exn48 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn48, 0
  %lpad.val49 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val49

terminate.lpad:                                   ; preds = %lpad22
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  call void @__clang_call_terminate(i8* %57) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont24
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector.26"* %this, %"class.std::unique_ptr.31"* %__pos) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %__pos.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  store %"class.std::unique_ptr.31"* %__pos, %"class.std::unique_ptr.31"** %__pos.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__pos.addr, align 8
  %1 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %1, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8
  %3 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %3) #3
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E(%"class.std::unique_ptr.31"* %0, %"class.std::unique_ptr.31"* %2, %"class.std::allocator.28"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__pos.addr, align 8
  %5 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  %_M_finish3 = getelementptr inbounds %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl", %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  store %"class.std::unique_ptr.31"* %4, %"class.std::unique_ptr.31"** %_M_finish3, align 8
  ret void

terminate.lpad:                                   ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  call void @__clang_call_terminate(i8* %7) #17
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::unique_ptr.31"* %__first, i64 %__n, %"class.std::allocator.28"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %.addr, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZSt25__uninitialized_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmET_S7_T0_(%"class.std::unique_ptr.31"* %1, i64 %2)
  ret %"class.std::unique_ptr.31"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.26"* %this, i64 %__n, i8* %__s) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE8max_sizeEv(%"class.std::vector.26"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #21
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE4sizeEv(%"class.std::vector.26"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE8max_sizeEv(%"class.std::vector.26"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE8max_sizeEv(%"class.std::vector.26"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.27"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.28"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m(%"class.std::allocator.28"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.std::unique_ptr.31"* [ %call, %cond.true ], [ null, %cond.false ]
  ret %"class.std::unique_ptr.31"* %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"* %__last, %"class.std::unique_ptr.31"* %__result, %"class.std::allocator.28"* dereferenceable(1) %__alloc) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__last.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__result.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__alloc.addr = alloca %"class.std::allocator.28"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.50", align 8
  %agg.tmp1 = alloca %"class.std::move_iterator.50", align 8
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store %"class.std::unique_ptr.31"* %__last, %"class.std::unique_ptr.31"** %__last.addr, align 8
  store %"class.std::unique_ptr.31"* %__result, %"class.std::unique_ptr.31"** %__result.addr, align 8
  store %"class.std::allocator.28"* %__alloc, %"class.std::allocator.28"** %__alloc.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESt13move_iteratorIS6_EET0_T_(%"class.std::unique_ptr.31"* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %call, %"class.std::unique_ptr.31"** %coerce.dive, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__last.addr, align 8
  %call2 = call %"class.std::unique_ptr.31"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESt13move_iteratorIS6_EET0_T_(%"class.std::unique_ptr.31"* %1)
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp1, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %call2, %"class.std::unique_ptr.31"** %coerce.dive3, align 8
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__result.addr, align 8
  %3 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp, i32 0, i32 0
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp1, i32 0, i32 0
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive5, align 8
  %call6 = call %"class.std::unique_ptr.31"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::unique_ptr.31"* %4, %"class.std::unique_ptr.31"* %5, %"class.std::unique_ptr.31"* %2, %"class.std::allocator.28"* dereferenceable(1) %3)
  ret %"class.std::unique_ptr.31"* %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt25__uninitialized_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmET_S7_T0_(%"class.std::unique_ptr.31"* %__first, i64 %__n) #4 comdat {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8 0, i8* %__assignable, align 1
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEmEET_S9_T0_(%"class.std::unique_ptr.31"* %0, i64 %1)
  ret %"class.std::unique_ptr.31"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS4_EEmEET_S9_T0_(%"class.std::unique_ptr.31"* %__first, i64 %__n) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__first.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__n.addr = alloca i64, align 8
  %__cur = alloca %"class.std::unique_ptr.31"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::unique_ptr.31"* %__first, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  store %"class.std::unique_ptr.31"* %0, %"class.std::unique_ptr.31"** %__cur, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ugt i64 %1, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZSt11__addressofISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEPT_RS6_(%"class.std::unique_ptr.31"* dereferenceable(8) %2) #3
  invoke void @_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJEEvPT_DpOT0_(%"class.std::unique_ptr.31"* %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %3 = load i64, i64* %__n.addr, align 8
  %dec = add i64 %3, -1
  store i64 %dec, i64* %__n.addr, align 8
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %4, i32 1
  store %"class.std::unique_ptr.31"* %incdec.ptr, %"class.std::unique_ptr.31"** %__cur, align 8
  br label %for.cond

lpad:                                             ; preds = %for.body
  %5 = landingpad { i8*, i32 }
          catch i8* null
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %8 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %9 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__first.addr, align 8
  %10 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvT_S7_(%"class.std::unique_ptr.31"* %9, %"class.std::unique_ptr.31"* %10)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad1

for.end:                                          ; preds = %for.cond
  %11 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  ret %"class.std::unique_ptr.31"* %11

lpad1:                                            ; preds = %invoke.cont2, %catch
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %lpad1
  br label %eh.resume

try.cont:                                         ; No predecessors!
  call void @llvm.trap()
  unreachable

eh.resume:                                        ; preds = %invoke.cont3
  %exn4 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn4, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5

terminate.lpad:                                   ; preds = %lpad1
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont2
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJEEvPT_DpOT0_(%"class.std::unique_ptr.31"* %__p) #5 comdat {
entry:
  %__p.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.31"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.31"*
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2Ev(%"class.std::unique_ptr.31"* %2) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE8max_sizeEv(%"class.std::vector.26"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %this, %"class.std::vector.26"** %this.addr, align 8
  %this1 = load %"class.std::vector.26"*, %"class.std::vector.26"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.26"* %this1 to %"struct.std::_Vector_base.27"*
  %call = call dereferenceable(1) %"class.std::allocator.28"* @_ZNKSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8max_sizeERKS6_(%"class.std::allocator.28"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8max_sizeERKS6_(%"class.std::allocator.28"* dereferenceable(1) %__a) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %__a, %"class.std::allocator.28"** %__a.addr, align 8
  %0 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.28"* %0 to %"class.__gnu_cxx::new_allocator.29"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.28"* @_ZNKSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %this, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl"* %_M_impl to %"class.std::allocator.28"*
  ret %"class.std::allocator.28"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %this, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m(%"class.std::allocator.28"* dereferenceable(1) %__a, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.28"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.28"* %__a, %"class.std::allocator.28"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.28"* %0 to %"class.__gnu_cxx::new_allocator.29"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.29"* %1, i64 %2, i8* null)
  ret %"class.std::unique_ptr.31"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZN9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.29"* %this, i64 %__n, i8*) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %this, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 8
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to %"class.std::unique_ptr.31"*
  ret %"class.std::unique_ptr.31"* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"* %__result, %"class.std::allocator.28"* dereferenceable(1)) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.50", align 8
  %__last = alloca %"class.std::move_iterator.50", align 8
  %__result.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %.addr = alloca %"class.std::allocator.28"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.50", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.50", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.31"* %__result, %"class.std::unique_ptr.31"** %__result.addr, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %.addr, align 8
  %1 = bitcast %"class.std::move_iterator.50"* %agg.tmp to i8*
  %2 = bitcast %"class.std::move_iterator.50"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.std::move_iterator.50"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::move_iterator.50"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp, i32 0, i32 0
  %6 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp2, i32 0, i32 0
  %7 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive4, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_ET0_T_SA_S9_(%"class.std::unique_ptr.31"* %6, %"class.std::unique_ptr.31"* %7, %"class.std::unique_ptr.31"* %5)
  ret %"class.std::unique_ptr.31"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt32__make_move_if_noexcept_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESt13move_iteratorIS6_EET0_T_(%"class.std::unique_ptr.31"* %__i) #4 comdat {
entry:
  %retval = alloca %"class.std::move_iterator.50", align 8
  %__i.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__i, %"class.std::unique_ptr.31"** %__i.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEC2ES6_(%"class.std::move_iterator.50"* %retval, %"class.std::unique_ptr.31"* %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %retval, i32 0, i32 0
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive, align 8
  ret %"class.std::unique_ptr.31"* %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS3_EEES7_ET0_T_SA_S9_(%"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"* %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.50", align 8
  %__last = alloca %"class.std::move_iterator.50", align 8
  %__result.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.std::move_iterator.50", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.50", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.31"* %__result, %"class.std::unique_ptr.31"** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.std::move_iterator.50"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.50"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator.50"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator.50"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp, i32 0, i32 0
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %agg.tmp2, i32 0, i32 0
  %6 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %coerce.dive4, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS5_EEES9_EET0_T_SC_SB_(%"class.std::unique_ptr.31"* %5, %"class.std::unique_ptr.31"* %6, %"class.std::unique_ptr.31"* %4)
  ret %"class.std::unique_ptr.31"* %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS5_EEES9_EET0_T_SC_SB_(%"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"* %__result) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__first = alloca %"class.std::move_iterator.50", align 8
  %__last = alloca %"class.std::move_iterator.50", align 8
  %__result.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__cur = alloca %"class.std::unique_ptr.31"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__first, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__first.coerce, %"class.std::unique_ptr.31"** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %__last, i32 0, i32 0
  store %"class.std::unique_ptr.31"* %__last.coerce, %"class.std::unique_ptr.31"** %coerce.dive1, align 8
  store %"class.std::unique_ptr.31"* %__result, %"class.std::unique_ptr.31"** %__result.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__result.addr, align 8
  store %"class.std::unique_ptr.31"* %0, %"class.std::unique_ptr.31"** %__cur, align 8
  br label %for.cond

for.cond:                                         ; preds = %invoke.cont6, %entry
  %call = invoke zeroext i1 @_ZStneIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.50"* dereferenceable(8) %__first, %"class.std::move_iterator.50"* dereferenceable(8) %__last)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.cond
  br i1 %call, label %for.body, label %for.end

for.body:                                         ; preds = %invoke.cont
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  %call2 = call %"class.std::unique_ptr.31"* @_ZSt11__addressofISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEPT_RS6_(%"class.std::unique_ptr.31"* dereferenceable(8) %1) #3
  %call4 = invoke dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEdeEv(%"class.std::move_iterator.50"* %__first)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %for.body
  invoke void @_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJS5_EEvPT_DpOT0_(%"class.std::unique_ptr.31"* %call2, %"class.std::unique_ptr.31"* dereferenceable(8) %call4)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont5
  %call7 = invoke dereferenceable(8) %"class.std::move_iterator.50"* @_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEppEv(%"class.std::move_iterator.50"* %__first)
          to label %invoke.cont6 unwind label %lpad

invoke.cont6:                                     ; preds = %for.inc
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %2, i32 1
  store %"class.std::unique_ptr.31"* %incdec.ptr, %"class.std::unique_ptr.31"** %__cur, align 8
  br label %for.cond

lpad:                                             ; preds = %for.inc, %invoke.cont3, %for.body, %for.cond
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %6 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %7 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__result.addr, align 8
  %8 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  invoke void @_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvT_S7_(%"class.std::unique_ptr.31"* %7, %"class.std::unique_ptr.31"* %8)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad8

for.end:                                          ; preds = %invoke.cont
  %9 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__cur, align 8
  ret %"class.std::unique_ptr.31"* %9

lpad8:                                            ; preds = %invoke.cont9, %catch
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont10 unwind label %terminate.lpad

invoke.cont10:                                    ; preds = %lpad8
  br label %eh.resume

try.cont:                                         ; No predecessors!
  call void @llvm.trap()
  unreachable

eh.resume:                                        ; preds = %invoke.cont10
  %exn11 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn11, 0
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val12

terminate.lpad:                                   ; preds = %lpad8
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont9
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZStneIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.50"* dereferenceable(8) %__x, %"class.std::move_iterator.50"* dereferenceable(8) %__y) #4 comdat {
entry:
  %__x.addr = alloca %"class.std::move_iterator.50"*, align 8
  %__y.addr = alloca %"class.std::move_iterator.50"*, align 8
  store %"class.std::move_iterator.50"* %__x, %"class.std::move_iterator.50"** %__x.addr, align 8
  store %"class.std::move_iterator.50"* %__y, %"class.std::move_iterator.50"** %__y.addr, align 8
  %0 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %__x.addr, align 8
  %1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %__y.addr, align 8
  %call = call zeroext i1 @_ZSteqIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.50"* dereferenceable(8) %0, %"class.std::move_iterator.50"* dereferenceable(8) %1)
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt10_ConstructISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEJS5_EEvPT_DpOT0_(%"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"* dereferenceable(8) %__args) #5 comdat {
entry:
  %__p.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__args.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__p, %"class.std::unique_ptr.31"** %__p.addr, align 8
  store %"class.std::unique_ptr.31"* %__args, %"class.std::unique_ptr.31"** %__args.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__p.addr, align 8
  %1 = bitcast %"class.std::unique_ptr.31"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::unique_ptr.31"*
  %3 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__args.addr, align 8
  %call = call dereferenceable(8) %"class.std::unique_ptr.31"* @_ZSt7forwardISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::unique_ptr.31"* dereferenceable(8) %3) #3
  call void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2EOS4_(%"class.std::unique_ptr.31"* %2, %"class.std::unique_ptr.31"* dereferenceable(8) %call) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.31"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEdeEv(%"class.std::move_iterator.50"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.50"*, align 8
  store %"class.std::move_iterator.50"* %this, %"class.std::move_iterator.50"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_current, align 8
  ret %"class.std::unique_ptr.31"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::move_iterator.50"* @_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEppEv(%"class.std::move_iterator.50"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.50"*, align 8
  store %"class.std::move_iterator.50"* %this, %"class.std::move_iterator.50"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_current, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %0, i32 1
  store %"class.std::unique_ptr.31"* %incdec.ptr, %"class.std::unique_ptr.31"** %_M_current, align 8
  ret %"class.std::move_iterator.50"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZSteqIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.50"* dereferenceable(8) %__x, %"class.std::move_iterator.50"* dereferenceable(8) %__y) #4 comdat {
entry:
  %__x.addr = alloca %"class.std::move_iterator.50"*, align 8
  %__y.addr = alloca %"class.std::move_iterator.50"*, align 8
  store %"class.std::move_iterator.50"* %__x, %"class.std::move_iterator.50"** %__x.addr, align 8
  store %"class.std::move_iterator.50"* %__y, %"class.std::move_iterator.50"** %__y.addr, align 8
  %0 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %__x.addr, align 8
  %call = call %"class.std::unique_ptr.31"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEE4baseEv(%"class.std::move_iterator.50"* %0)
  %1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %__y.addr, align 8
  %call1 = call %"class.std::unique_ptr.31"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEE4baseEv(%"class.std::move_iterator.50"* %1)
  %cmp = icmp eq %"class.std::unique_ptr.31"* %call, %call1
  ret i1 %cmp
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.std::unique_ptr.31"* @_ZNKSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEE4baseEv(%"class.std::move_iterator.50"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.50"*, align 8
  store %"class.std::move_iterator.50"* %this, %"class.std::move_iterator.50"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_current, align 8
  ret %"class.std::unique_ptr.31"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.std::unique_ptr.31"* @_ZSt7forwardISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::unique_ptr.31"* dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::unique_ptr.31"* %__t, %"class.std::unique_ptr.31"** %__t.addr, align 8
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__t.addr, align 8
  ret %"class.std::unique_ptr.31"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EEC2EOS4_(%"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"* dereferenceable(8) %__u) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__u.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %ref.tmp = alloca %struct.kiss_fft_cpx*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  store %"class.std::unique_ptr.31"* %__u, %"class.std::unique_ptr.31"** %__u.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__u.addr, align 8
  %call = call %struct.kiss_fft_cpx* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE7releaseEv(%"class.std::unique_ptr.31"* %0) #3
  store %struct.kiss_fft_cpx* %call, %struct.kiss_fft_cpx** %ref.tmp, align 8
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__u.addr, align 8
  %call2 = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE11get_deleterEv(%"class.std::unique_ptr.31"* %1) #3
  %call3 = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %call2) #3
  invoke void @_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_S4_vEEOT_OT0_(%"class.std::tuple.32"* %_M_t, %struct.kiss_fft_cpx** dereferenceable(8) %ref.tmp, %"struct.std::default_delete.36"* dereferenceable(1) %call3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.kiss_fft_cpx* @_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE7releaseEv(%"class.std::unique_ptr.31"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.31"*, align 8
  %__p = alloca %struct.kiss_fft_cpx*, align 8
  store %"class.std::unique_ptr.31"* %this, %"class.std::unique_ptr.31"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %this.addr, align 8
  %call = call %struct.kiss_fft_cpx* @_ZNKSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE3getEv(%"class.std::unique_ptr.31"* %this1) #3
  store %struct.kiss_fft_cpx* %call, %struct.kiss_fft_cpx** %__p, align 8
  %_M_t = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %this1, i32 0, i32 0
  %call2 = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt3getILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_(%"class.std::tuple.32"* dereferenceable(8) %_M_t) #3
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %call2, align 8
  %0 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %__p, align 8
  ret %struct.kiss_fft_cpx* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"struct.std::default_delete.36"*, align 8
  store %"struct.std::default_delete.36"* %__t, %"struct.std::default_delete.36"** %__t.addr, align 8
  %0 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %__t.addr, align 8
  ret %"struct.std::default_delete.36"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_S4_vEEOT_OT0_(%"class.std::tuple.32"* %this, %struct.kiss_fft_cpx** dereferenceable(8) %__a1, %"struct.std::default_delete.36"* dereferenceable(1) %__a2) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::tuple.32"*, align 8
  %__a1.addr = alloca %struct.kiss_fft_cpx**, align 8
  %__a2.addr = alloca %"struct.std::default_delete.36"*, align 8
  store %"class.std::tuple.32"* %this, %"class.std::tuple.32"** %this.addr, align 8
  store %struct.kiss_fft_cpx** %__a1, %struct.kiss_fft_cpx*** %__a1.addr, align 8
  store %"struct.std::default_delete.36"* %__a2, %"struct.std::default_delete.36"** %__a2.addr, align 8
  %this1 = load %"class.std::tuple.32"*, %"class.std::tuple.32"** %this.addr, align 8
  %0 = bitcast %"class.std::tuple.32"* %this1 to %"struct.std::_Tuple_impl.33"*
  %1 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__a1.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt7forwardIP12kiss_fft_cpxEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fft_cpx** dereferenceable(8) %1) #3
  %2 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %__a2.addr, align 8
  %call2 = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %2) #3
  call void @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_JS4_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.33"* %0, %struct.kiss_fft_cpx** dereferenceable(8) %call, %"struct.std::default_delete.36"* dereferenceable(1) %call2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt7forwardIP12kiss_fft_cpxEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fft_cpx** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %struct.kiss_fft_cpx**, align 8
  store %struct.kiss_fft_cpx** %__t, %struct.kiss_fft_cpx*** %__t.addr, align 8
  %0 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__t.addr, align 8
  ret %struct.kiss_fft_cpx** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm0EJP12kiss_fft_cpxSt14default_deleteIA_S0_EEEC2IS1_JS4_EvEEOT_DpOT0_(%"struct.std::_Tuple_impl.33"* %this, %struct.kiss_fft_cpx** dereferenceable(8) %__head, %"struct.std::default_delete.36"* dereferenceable(1) %__tail) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.33"*, align 8
  %__head.addr = alloca %struct.kiss_fft_cpx**, align 8
  %__tail.addr = alloca %"struct.std::default_delete.36"*, align 8
  store %"struct.std::_Tuple_impl.33"* %this, %"struct.std::_Tuple_impl.33"** %this.addr, align 8
  store %struct.kiss_fft_cpx** %__head, %struct.kiss_fft_cpx*** %__head.addr, align 8
  store %"struct.std::default_delete.36"* %__tail, %"struct.std::default_delete.36"** %__tail.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.33"*, %"struct.std::_Tuple_impl.33"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.33"* %this1 to %"struct.std::_Tuple_impl.34"*
  %1 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %__tail.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %1) #3
  call void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2IS3_EEOT_(%"struct.std::_Tuple_impl.34"* %0, %"struct.std::default_delete.36"* dereferenceable(1) %call)
  %2 = bitcast %"struct.std::_Tuple_impl.33"* %this1 to %"struct.std::_Head_base.38"*
  %3 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__head.addr, align 8
  %call2 = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt7forwardIP12kiss_fft_cpxEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fft_cpx** dereferenceable(8) %3) #3
  call void @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2IS1_EEOT_(%"struct.std::_Head_base.38"* %2, %struct.kiss_fft_cpx** dereferenceable(8) %call2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt11_Tuple_implILm1EJSt14default_deleteIA_12kiss_fft_cpxEEEC2IS3_EEOT_(%"struct.std::_Tuple_impl.34"* %this, %"struct.std::default_delete.36"* dereferenceable(1) %__head) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tuple_impl.34"*, align 8
  %__head.addr = alloca %"struct.std::default_delete.36"*, align 8
  store %"struct.std::_Tuple_impl.34"* %this, %"struct.std::_Tuple_impl.34"** %this.addr, align 8
  store %"struct.std::default_delete.36"* %__head, %"struct.std::default_delete.36"** %__head.addr, align 8
  %this1 = load %"struct.std::_Tuple_impl.34"*, %"struct.std::_Tuple_impl.34"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Tuple_impl.34"* %this1 to %"struct.std::_Head_base.35"*
  %1 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %__head.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %1) #3
  call void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2IS3_EEOT_(%"struct.std::_Head_base.35"* %0, %"struct.std::default_delete.36"* dereferenceable(1) %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm0EP12kiss_fft_cpxLb0EEC2IS1_EEOT_(%"struct.std::_Head_base.38"* %this, %struct.kiss_fft_cpx** dereferenceable(8) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.38"*, align 8
  %__h.addr = alloca %struct.kiss_fft_cpx**, align 8
  store %"struct.std::_Head_base.38"* %this, %"struct.std::_Head_base.38"** %this.addr, align 8
  store %struct.kiss_fft_cpx** %__h, %struct.kiss_fft_cpx*** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.38"*, %"struct.std::_Head_base.38"** %this.addr, align 8
  %_M_head_impl = getelementptr inbounds %"struct.std::_Head_base.38", %"struct.std::_Head_base.38"* %this1, i32 0, i32 0
  %0 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__h.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt7forwardIP12kiss_fft_cpxEOT_RNSt16remove_referenceIS2_E4typeE(%struct.kiss_fft_cpx** dereferenceable(8) %0) #3
  %1 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %call, align 8
  store %struct.kiss_fft_cpx* %1, %struct.kiss_fft_cpx** %_M_head_impl, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt10_Head_baseILm1ESt14default_deleteIA_12kiss_fft_cpxELb1EEC2IS3_EEOT_(%"struct.std::_Head_base.35"* %this, %"struct.std::default_delete.36"* dereferenceable(1) %__h) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Head_base.35"*, align 8
  %__h.addr = alloca %"struct.std::default_delete.36"*, align 8
  store %"struct.std::_Head_base.35"* %this, %"struct.std::_Head_base.35"** %this.addr, align 8
  store %"struct.std::default_delete.36"* %__h, %"struct.std::default_delete.36"** %__h.addr, align 8
  %this1 = load %"struct.std::_Head_base.35"*, %"struct.std::_Head_base.35"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Head_base.35"* %this1 to %"struct.std::default_delete.36"*
  %1 = load %"struct.std::default_delete.36"*, %"struct.std::default_delete.36"** %__h.addr, align 8
  %call = call dereferenceable(1) %"struct.std::default_delete.36"* @_ZSt7forwardISt14default_deleteIA_12kiss_fft_cpxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::default_delete.36"* dereferenceable(1) %1) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEC2ES6_(%"class.std::move_iterator.50"* %this, %"class.std::unique_ptr.31"* %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.50"*, align 8
  %__i.addr = alloca %"class.std::unique_ptr.31"*, align 8
  store %"class.std::move_iterator.50"* %this, %"class.std::move_iterator.50"** %this.addr, align 8
  store %"class.std::unique_ptr.31"* %__i, %"class.std::unique_ptr.31"** %__i.addr, align 8
  %this1 = load %"class.std::move_iterator.50"*, %"class.std::move_iterator.50"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.50", %"class.std::move_iterator.50"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %__i.addr, align 8
  store %"class.std::unique_ptr.31"* %0, %"class.std::unique_ptr.31"** %_M_current, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt4swapIP12kiss_fft_cpxEvRT_S3_(%struct.kiss_fft_cpx** dereferenceable(8) %__a, %struct.kiss_fft_cpx** dereferenceable(8) %__b) #5 comdat {
entry:
  %__a.addr = alloca %struct.kiss_fft_cpx**, align 8
  %__b.addr = alloca %struct.kiss_fft_cpx**, align 8
  %__tmp = alloca %struct.kiss_fft_cpx*, align 8
  store %struct.kiss_fft_cpx** %__a, %struct.kiss_fft_cpx*** %__a.addr, align 8
  store %struct.kiss_fft_cpx** %__b, %struct.kiss_fft_cpx*** %__b.addr, align 8
  %0 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__a.addr, align 8
  %call = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt4moveIRP12kiss_fft_cpxEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fft_cpx** dereferenceable(8) %0) #3
  %1 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %call, align 8
  store %struct.kiss_fft_cpx* %1, %struct.kiss_fft_cpx** %__tmp, align 8
  %2 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__b.addr, align 8
  %call1 = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt4moveIRP12kiss_fft_cpxEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fft_cpx** dereferenceable(8) %2) #3
  %3 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %call1, align 8
  %4 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__a.addr, align 8
  store %struct.kiss_fft_cpx* %3, %struct.kiss_fft_cpx** %4, align 8
  %call2 = call dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt4moveIRP12kiss_fft_cpxEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fft_cpx** dereferenceable(8) %__tmp) #3
  %5 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %call2, align 8
  %6 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__b.addr, align 8
  store %struct.kiss_fft_cpx* %5, %struct.kiss_fft_cpx** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.kiss_fft_cpx** @_ZSt4moveIRP12kiss_fft_cpxEONSt16remove_referenceIT_E4typeEOS4_(%struct.kiss_fft_cpx** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %struct.kiss_fft_cpx**, align 8
  store %struct.kiss_fft_cpx** %__t, %struct.kiss_fft_cpx*** %__t.addr, align 8
  %0 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %__t.addr, align 8
  ret %struct.kiss_fft_cpx** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev(%"struct.std::_Vector_base.44"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.44"*, align 8
  store %"struct.std::_Vector_base.44"* %this, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.44"*, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"*, %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this1 to %"class.std::allocator.45"*
  call void @_ZNSaIPN12ILLIXR_AUDIO5SoundEEC2Ev(%"class.std::allocator.45"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this1, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** null, %"class.ILLIXR_AUDIO::Sound"*** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this1, i32 0, i32 1
  store %"class.ILLIXR_AUDIO::Sound"** null, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %this1, i32 0, i32 2
  store %"class.ILLIXR_AUDIO::Sound"** null, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIPN12ILLIXR_AUDIO5SoundEEC2Ev(%"class.std::allocator.45"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.45"*, align 8
  store %"class.std::allocator.45"* %this, %"class.std::allocator.45"** %this.addr, align 8
  %this1 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.45"* %this1 to %"class.__gnu_cxx::new_allocator.46"*
  call void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEEC2Ev(%"class.__gnu_cxx::new_allocator.46"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEEC2Ev(%"class.__gnu_cxx::new_allocator.46"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.45"* dereferenceable(1) %__a, %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %__args) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.45"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__args.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.std::allocator.45"* %__a, %"class.std::allocator.45"** %__a.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__args, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %0 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.45"* %0 to %"class.__gnu_cxx::new_allocator.46"*
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %3 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZSt7forwardIRKPN12ILLIXR_AUDIO5SoundEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %3) #3
  call void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.46"* %1, %"class.ILLIXR_AUDIO::Sound"** %2, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_(%"class.std::vector.43"* %this, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %__args) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  %__args.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__len = alloca i64, align 8
  %__new_start = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__new_finish = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__args, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.43"* %this1, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0))
  store i64 %call, i64* %__len, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %1 = load i64, i64* %__len, align 8
  %call2 = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.44"* %0, i64 %1)
  store %"class.ILLIXR_AUDIO::Sound"** %call2, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %2, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %3 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.45"*
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %call3 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  %add.ptr = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %5, i64 %call3
  %6 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %call4 = call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZSt7forwardIRKPN12ILLIXR_AUDIO5SoundEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %6) #3
  invoke void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.45"* dereferenceable(1) %4, %"class.ILLIXR_AUDIO::Sound"** %add.ptr, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %call4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"class.ILLIXR_AUDIO::Sound"** null, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %7 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %7, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl5, i32 0, i32 0
  %8 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start, align 8
  %9 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %9, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish, align 8
  %11 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %12 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %call7 = call dereferenceable(1) %"class.std::allocator.45"* @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %12) #3
  %call9 = invoke %"class.ILLIXR_AUDIO::Sound"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN12ILLIXR_AUDIO5SoundES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.ILLIXR_AUDIO::Sound"** %8, %"class.ILLIXR_AUDIO::Sound"** %10, %"class.ILLIXR_AUDIO::Sound"** %11, %"class.std::allocator.45"* dereferenceable(1) %call7)
          to label %invoke.cont8 unwind label %lpad

invoke.cont8:                                     ; preds = %invoke.cont
  store %"class.ILLIXR_AUDIO::Sound"** %call9, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %13 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %incdec.ptr = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %13, i32 1
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont, %entry
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %17 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %18 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %tobool = icmp ne %"class.ILLIXR_AUDIO::Sound"** %18, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %catch
  %19 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl10 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %19, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl10 to %"class.std::allocator.45"*
  %21 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %call11 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  %add.ptr12 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %21, i64 %call11
  invoke void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.45"* dereferenceable(1) %20, %"class.ILLIXR_AUDIO::Sound"** %add.ptr12)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %if.then
  br label %if.end

lpad13:                                           ; preds = %invoke.cont17, %if.end, %if.else, %if.then
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont18 unwind label %terminate.lpad

if.else:                                          ; preds = %catch
  %25 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %26 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %27 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %call15 = call dereferenceable(1) %"class.std::allocator.45"* @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %27) #3
  invoke void @_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundES2_EvT_S4_RSaIT0_E(%"class.ILLIXR_AUDIO::Sound"** %25, %"class.ILLIXR_AUDIO::Sound"** %26, %"class.std::allocator.45"* dereferenceable(1) %call15)
          to label %invoke.cont16 unwind label %lpad13

invoke.cont16:                                    ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %invoke.cont16, %invoke.cont14
  %28 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %29 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %30 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.44"* %28, %"class.ILLIXR_AUDIO::Sound"** %29, i64 %30)
          to label %invoke.cont17 unwind label %lpad13

invoke.cont17:                                    ; preds = %if.end
  invoke void @__cxa_rethrow() #21
          to label %unreachable unwind label %lpad13

invoke.cont18:                                    ; preds = %lpad13
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont8
  %31 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl19 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %31, i32 0, i32 0
  %_M_start20 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl19, i32 0, i32 0
  %32 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start20, align 8
  %33 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl21 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %33, i32 0, i32 0
  %_M_finish22 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl21, i32 0, i32 1
  %34 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish22, align 8
  %35 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %call23 = call dereferenceable(1) %"class.std::allocator.45"* @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %35) #3
  call void @_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundES2_EvT_S4_RSaIT0_E(%"class.ILLIXR_AUDIO::Sound"** %32, %"class.ILLIXR_AUDIO::Sound"** %34, %"class.std::allocator.45"* dereferenceable(1) %call23)
  %36 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %37 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl24 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %37, i32 0, i32 0
  %_M_start25 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl24, i32 0, i32 0
  %38 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start25, align 8
  %39 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %39, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl26, i32 0, i32 2
  %40 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage, align 8
  %41 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl27 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %41, i32 0, i32 0
  %_M_start28 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl27, i32 0, i32 0
  %42 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start28, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %40 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %42 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.44"* %36, %"class.ILLIXR_AUDIO::Sound"** %38, i64 %sub.ptr.div)
  %43 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %44 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %44, i32 0, i32 0
  %_M_start30 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl29, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %43, %"class.ILLIXR_AUDIO::Sound"*** %_M_start30, align 8
  %45 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_finish, align 8
  %46 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl31 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %46, i32 0, i32 0
  %_M_finish32 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl31, i32 0, i32 1
  store %"class.ILLIXR_AUDIO::Sound"** %45, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish32, align 8
  %47 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__new_start, align 8
  %48 = load i64, i64* %__len, align 8
  %add.ptr33 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %47, i64 %48
  %49 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %_M_impl34 = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %49, i32 0, i32 0
  %_M_end_of_storage35 = getelementptr inbounds %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl", %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl34, i32 0, i32 2
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr33, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage35, align 8
  ret void

eh.resume:                                        ; preds = %invoke.cont18
  %exn36 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn36, 0
  %lpad.val37 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val37

terminate.lpad:                                   ; preds = %lpad13
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #17
  unreachable

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.46"* %this, %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__args.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__args, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"** %0 to i8*
  %2 = bitcast i8* %1 to %"class.ILLIXR_AUDIO::Sound"**
  %3 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZSt7forwardIRKPN12ILLIXR_AUDIO5SoundEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %3) #3
  %4 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8
  store %"class.ILLIXR_AUDIO::Sound"* %4, %"class.ILLIXR_AUDIO::Sound"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZSt7forwardIRKPN12ILLIXR_AUDIO5SoundEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.ILLIXR_AUDIO::Sound"** dereferenceable(8) %__t) #5 comdat {
entry:
  %__t.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__t, %"class.ILLIXR_AUDIO::Sound"*** %__t.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__t.addr, align 8
  ret %"class.ILLIXR_AUDIO::Sound"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.43"* %this, i64 %__n, i8* %__s) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE8max_sizeEv(%"class.std::vector.43"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #21
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv(%"class.std::vector.43"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE8max_sizeEv(%"class.std::vector.43"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE8max_sizeEv(%"class.std::vector.43"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.44"* %this, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.44"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.44"* %this, %"struct.std::_Vector_base.44"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.44"*, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.45"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.ILLIXR_AUDIO::Sound"** [ %call, %cond.true ], [ null, %cond.false ]
  ret %"class.ILLIXR_AUDIO::Sound"** %cond
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN12ILLIXR_AUDIO5SoundES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.std::allocator.45"* dereferenceable(1) %__alloc) #4 comdat {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__alloc.addr = alloca %"class.std::allocator.45"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp1 = alloca %"class.std::move_iterator.51", align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  store %"class.std::allocator.45"* %__alloc, %"class.std::allocator.45"** %__alloc.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt32__make_move_if_noexcept_iteratorIPPN12ILLIXR_AUDIO5SoundESt13move_iteratorIS3_EET0_T_(%"class.ILLIXR_AUDIO::Sound"** %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %call, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  %call2 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt32__make_move_if_noexcept_iteratorIPPN12ILLIXR_AUDIO5SoundESt13move_iteratorIS3_EET0_T_(%"class.ILLIXR_AUDIO::Sound"** %1)
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp1, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %call2, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive3, align 8
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %3 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %4 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp1, i32 0, i32 0
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive5, align 8
  %call6 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.ILLIXR_AUDIO::Sound"** %4, %"class.ILLIXR_AUDIO::Sound"** %5, %"class.ILLIXR_AUDIO::Sound"** %2, %"class.std::allocator.45"* dereferenceable(1) %3)
  ret %"class.ILLIXR_AUDIO::Sound"** %call6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.45"* @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.44"*, align 8
  store %"struct.std::_Vector_base.44"* %this, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.44"*, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.45"*
  ret %"class.std::allocator.45"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.45"* dereferenceable(1) %__a, %"class.ILLIXR_AUDIO::Sound"** %__p) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.45"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.std::allocator.45"* %__a, %"class.std::allocator.45"** %__a.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %0 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.45"* %0 to %"class.__gnu_cxx::new_allocator.46"*
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.46"* %1, %"class.ILLIXR_AUDIO::Sound"** %2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundES2_EvT_S4_RSaIT0_E(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.std::allocator.45"* dereferenceable(1)) #4 comdat {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %.addr = alloca %"class.std::allocator.45"*, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %.addr, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  call void @_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundEEvT_S4_(%"class.ILLIXR_AUDIO::Sound"** %1, %"class.ILLIXR_AUDIO::Sound"** %2)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.44"* %this, %"class.ILLIXR_AUDIO::Sound"** %__p, i64 %__n) #4 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.44"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.44"* %this, %"struct.std::_Vector_base.44"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.44"*, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %tobool = icmp ne %"class.ILLIXR_AUDIO::Sound"** %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.45"*
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1) %1, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE8max_sizeEv(%"class.std::vector.43"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.43"*, align 8
  store %"class.std::vector.43"* %this, %"class.std::vector.43"** %this.addr, align 8
  %this1 = load %"class.std::vector.43"*, %"class.std::vector.43"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.43"* %this1 to %"struct.std::_Vector_base.44"*
  %call = call dereferenceable(1) %"class.std::allocator.45"* @_ZNKSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8max_sizeERKS3_(%"class.std::allocator.45"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8max_sizeERKS3_(%"class.std::allocator.45"* dereferenceable(1) %__a) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.45"*, align 8
  store %"class.std::allocator.45"* %__a, %"class.std::allocator.45"** %__a.addr, align 8
  %0 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.45"* %0 to %"class.__gnu_cxx::new_allocator.46"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.46"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.45"* @_ZNKSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.44"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.44"*, align 8
  store %"struct.std::_Vector_base.44"* %this, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.44"*, %"struct.std::_Vector_base.44"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.44", %"struct.std::_Vector_base.44"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.45"*
  ret %"class.std::allocator.45"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.46"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m(%"class.std::allocator.45"* dereferenceable(1) %__a, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.45"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.45"* %__a, %"class.std::allocator.45"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.45"* %0 to %"class.__gnu_cxx::new_allocator.46"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.46"* %1, i64 %2, i8* null)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.46"* %this, i64 %__n, i8*) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.46"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #21
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 8
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to %"class.ILLIXR_AUDIO::Sound"**
  ret %"class.ILLIXR_AUDIO::Sound"** %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.std::allocator.45"* dereferenceable(1)) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.51", align 8
  %__last = alloca %"class.std::move_iterator.51", align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %.addr = alloca %"class.std::allocator.45"*, align 8
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__first, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__last, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive1, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  store %"class.std::allocator.45"* %0, %"class.std::allocator.45"** %.addr, align 8
  %1 = bitcast %"class.std::move_iterator.51"* %agg.tmp to i8*
  %2 = bitcast %"class.std::move_iterator.51"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.std::move_iterator.51"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::move_iterator.51"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %6 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp2, i32 0, i32 0
  %7 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive4, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_(%"class.ILLIXR_AUDIO::Sound"** %6, %"class.ILLIXR_AUDIO::Sound"** %7, %"class.ILLIXR_AUDIO::Sound"** %5)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt32__make_move_if_noexcept_iteratorIPPN12ILLIXR_AUDIO5SoundESt13move_iteratorIS3_EET0_T_(%"class.ILLIXR_AUDIO::Sound"** %__i) #4 comdat {
entry:
  %retval = alloca %"class.std::move_iterator.51", align 8
  %__i.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__i, %"class.ILLIXR_AUDIO::Sound"*** %__i.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEC2ES3_(%"class.std::move_iterator.51"* %retval, %"class.ILLIXR_AUDIO::Sound"** %0)
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %retval, i32 0, i32 0
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  ret %"class.ILLIXR_AUDIO::Sound"** %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_(%"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"** %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.51", align 8
  %__last = alloca %"class.std::move_iterator.51", align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__first, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__last, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive1, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.std::move_iterator.51"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.51"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator.51"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator.51"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp2, i32 0, i32 0
  %6 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive4, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES6_EET0_T_S9_S8_(%"class.ILLIXR_AUDIO::Sound"** %5, %"class.ILLIXR_AUDIO::Sound"** %6, %"class.ILLIXR_AUDIO::Sound"** %4)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES6_EET0_T_S9_S8_(%"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"** %__result) #4 comdat align 2 {
entry:
  %__first = alloca %"class.std::move_iterator.51", align 8
  %__last = alloca %"class.std::move_iterator.51", align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp2 = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__first, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__last, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive1, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %0 = bitcast %"class.std::move_iterator.51"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.51"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.std::move_iterator.51"* %agg.tmp2 to i8*
  %3 = bitcast %"class.std::move_iterator.51"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp2, i32 0, i32 0
  %6 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive4, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt4copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_(%"class.ILLIXR_AUDIO::Sound"** %5, %"class.ILLIXR_AUDIO::Sound"** %6, %"class.ILLIXR_AUDIO::Sound"** %4)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt4copyISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEES4_ET0_T_S7_S6_(%"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"** %__result) #4 comdat {
entry:
  %__first = alloca %"class.std::move_iterator.51", align 8
  %__last = alloca %"class.std::move_iterator.51", align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp3 = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__first, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__first.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__last, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__last.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive1, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %0 = bitcast %"class.std::move_iterator.51"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.51"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive2 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive2, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__miter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.ILLIXR_AUDIO::Sound"** %2)
  %3 = bitcast %"class.std::move_iterator.51"* %agg.tmp3 to i8*
  %4 = bitcast %"class.std::move_iterator.51"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp3, i32 0, i32 0
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive4, align 8
  %call5 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__miter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.ILLIXR_AUDIO::Sound"** %5)
  %6 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %call6 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt14__copy_move_a2ILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_(%"class.ILLIXR_AUDIO::Sound"** %call, %"class.ILLIXR_AUDIO::Sound"** %call5, %"class.ILLIXR_AUDIO::Sound"** %6)
  ret %"class.ILLIXR_AUDIO::Sound"** %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt14__copy_move_a2ILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"** %__result) #4 comdat {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__niter_baseIPPN12ILLIXR_AUDIO5SoundEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.ILLIXR_AUDIO::Sound"** %0)
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  %call1 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__niter_baseIPPN12ILLIXR_AUDIO5SoundEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.ILLIXR_AUDIO::Sound"** %1)
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %call2 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__niter_baseIPPN12ILLIXR_AUDIO5SoundEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.ILLIXR_AUDIO::Sound"** %2)
  %call3 = call %"class.ILLIXR_AUDIO::Sound"** @_ZSt13__copy_move_aILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_(%"class.ILLIXR_AUDIO::Sound"** %call, %"class.ILLIXR_AUDIO::Sound"** %call1, %"class.ILLIXR_AUDIO::Sound"** %call2)
  ret %"class.ILLIXR_AUDIO::Sound"** %call3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__miter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.ILLIXR_AUDIO::Sound"** %__it.coerce) #4 comdat {
entry:
  %__it = alloca %"class.std::move_iterator.51", align 8
  %agg.tmp = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__it, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__it.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %0 = bitcast %"class.std::move_iterator.51"* %agg.tmp to i8*
  %1 = bitcast %"class.std::move_iterator.51"* %__it to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive1 = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %agg.tmp, i32 0, i32 0
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive1, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt10_Iter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEELb1EE7_S_baseES5_(%"class.ILLIXR_AUDIO::Sound"** %2)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt13__copy_move_aILb1EPPN12ILLIXR_AUDIO5SoundES3_ET1_T0_S5_S4_(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"** %__result) #4 comdat {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__simple = alloca i8, align 1
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  store i8 1, i8* %__simple, align 1
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN12ILLIXR_AUDIO5SoundEEEPT_PKS6_S9_S7_(%"class.ILLIXR_AUDIO::Sound"** %0, %"class.ILLIXR_AUDIO::Sound"** %1, %"class.ILLIXR_AUDIO::Sound"** %2)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZSt12__niter_baseIPPN12ILLIXR_AUDIO5SoundEENSt11_Niter_baseIT_E13iterator_typeES5_(%"class.ILLIXR_AUDIO::Sound"** %__it) #4 comdat {
entry:
  %__it.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__it, %"class.ILLIXR_AUDIO::Sound"*** %__it.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__it.addr, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNSt10_Iter_baseIPPN12ILLIXR_AUDIO5SoundELb0EE7_S_baseES3_(%"class.ILLIXR_AUDIO::Sound"** %0)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN12ILLIXR_AUDIO5SoundEEEPT_PKS6_S9_S7_(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"** %__result) #5 comdat align 2 {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__result.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %_Num = alloca i64, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__result, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %_Num, align 8
  %2 = load i64, i64* %_Num, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %4 = bitcast %"class.ILLIXR_AUDIO::Sound"** %3 to i8*
  %5 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %6 = bitcast %"class.ILLIXR_AUDIO::Sound"** %5 to i8*
  %7 = load i64, i64* %_Num, align 8
  %mul = mul i64 8, %7
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__result.addr, align 8
  %9 = load i64, i64* %_Num, align 8
  %add.ptr = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %8, i64 %9
  ret %"class.ILLIXR_AUDIO::Sound"** %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt10_Iter_baseIPPN12ILLIXR_AUDIO5SoundELb0EE7_S_baseES3_(%"class.ILLIXR_AUDIO::Sound"** %__it) #5 comdat align 2 {
entry:
  %__it.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__it, %"class.ILLIXR_AUDIO::Sound"*** %__it.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__it.addr, align 8
  ret %"class.ILLIXR_AUDIO::Sound"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNSt10_Iter_baseISt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEELb1EE7_S_baseES5_(%"class.ILLIXR_AUDIO::Sound"** %__it.coerce) #4 comdat align 2 {
entry:
  %__it = alloca %"class.std::move_iterator.51", align 8
  %coerce.dive = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %__it, i32 0, i32 0
  store %"class.ILLIXR_AUDIO::Sound"** %__it.coerce, %"class.ILLIXR_AUDIO::Sound"*** %coerce.dive, align 8
  %call = call %"class.ILLIXR_AUDIO::Sound"** @_ZNKSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEE4baseEv(%"class.std::move_iterator.51"* %__it)
  ret %"class.ILLIXR_AUDIO::Sound"** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"class.ILLIXR_AUDIO::Sound"** @_ZNKSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEE4baseEv(%"class.std::move_iterator.51"* %this) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.51"*, align 8
  store %"class.std::move_iterator.51"* %this, %"class.std::move_iterator.51"** %this.addr, align 8
  %this1 = load %"class.std::move_iterator.51"*, %"class.std::move_iterator.51"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %this1, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_current, align 8
  ret %"class.ILLIXR_AUDIO::Sound"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPPN12ILLIXR_AUDIO5SoundEEC2ES3_(%"class.std::move_iterator.51"* %this, %"class.ILLIXR_AUDIO::Sound"** %__i) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::move_iterator.51"*, align 8
  %__i.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.std::move_iterator.51"* %this, %"class.std::move_iterator.51"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__i, %"class.ILLIXR_AUDIO::Sound"*** %__i.addr, align 8
  %this1 = load %"class.std::move_iterator.51"*, %"class.std::move_iterator.51"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.std::move_iterator.51", %"class.std::move_iterator.51"* %this1, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__i.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %0, %"class.ILLIXR_AUDIO::Sound"*** %_M_current, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.46"* %this, %"class.ILLIXR_AUDIO::Sound"** %__p) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN12ILLIXR_AUDIO5SoundEEvT_S4_(%"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"** %__last) #4 comdat {
entry:
  %__first.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__last.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__first, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__last, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__first.addr, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN12ILLIXR_AUDIO5SoundEEEvT_S6_(%"class.ILLIXR_AUDIO::Sound"** %0, %"class.ILLIXR_AUDIO::Sound"** %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN12ILLIXR_AUDIO5SoundEEEvT_S6_(%"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**) #5 comdat align 2 {
entry:
  %.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %.addr1 = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %0, %"class.ILLIXR_AUDIO::Sound"*** %.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %1, %"class.ILLIXR_AUDIO::Sound"*** %.addr1, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE10deallocateERS3_PS2_m(%"class.std::allocator.45"* dereferenceable(1) %__a, %"class.ILLIXR_AUDIO::Sound"** %__p, i64 %__n) #4 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.45"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.45"* %__a, %"class.std::allocator.45"** %__a.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::allocator.45"*, %"class.std::allocator.45"** %__a.addr, align 8
  %1 = bitcast %"class.std::allocator.45"* %0 to %"class.__gnu_cxx::new_allocator.46"*
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.46"* %1, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN12ILLIXR_AUDIO5SoundEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.46"* %this, %"class.ILLIXR_AUDIO::Sound"** %__p, i64) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.46"*, align 8
  %__p.addr = alloca %"class.ILLIXR_AUDIO::Sound"**, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.46"* %this, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  store %"class.ILLIXR_AUDIO::Sound"** %__p, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.__gnu_cxx::new_allocator.46"*, %"class.__gnu_cxx::new_allocator.46"** %this.addr, align 8
  %1 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %__p.addr, align 8
  %2 = bitcast %"class.ILLIXR_AUDIO::Sound"** %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline noreturn nounwind }
attributes #13 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { cold noreturn nounwind }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !27}
!llvm.ident = !{!28}

!0 = !{i32 1, !"ProfileSummary", !1}
!1 = !{!2, !3, !4, !5, !6, !7, !8, !9}
!2 = !{!"ProfileFormat", !"InstrProf"}
!3 = !{!"TotalCount", i64 0}
!4 = !{!"MaxCount", i64 0}
!5 = !{!"MaxInternalCount", i64 0}
!6 = !{!"MaxFunctionCount", i64 0}
!7 = !{!"NumCounts", i64 0}
!8 = !{!"NumFunctions", i64 0}
!9 = !{!"DetailedSummary", !10}
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!11 = !{i32 10000, i64 0, i32 0}
!12 = !{i32 100000, i64 0, i32 0}
!13 = !{i32 200000, i64 0, i32 0}
!14 = !{i32 300000, i64 0, i32 0}
!15 = !{i32 400000, i64 0, i32 0}
!16 = !{i32 500000, i64 0, i32 0}
!17 = !{i32 600000, i64 0, i32 0}
!18 = !{i32 700000, i64 0, i32 0}
!19 = !{i32 800000, i64 0, i32 0}
!20 = !{i32 900000, i64 0, i32 0}
!21 = !{i32 950000, i64 0, i32 0}
!22 = !{i32 990000, i64 0, i32 0}
!23 = !{i32 999000, i64 0, i32 0}
!24 = !{i32 999900, i64 0, i32 0}
!25 = !{i32 999990, i64 0, i32 0}
!26 = !{i32 999999, i64 0, i32 0}
!27 = !{i32 1, !"wchar_size", i32 4}
!28 = !{!"clang version 9.0.0 (https://gitlab.engr.illinois.edu/llvm/hpvm-release.git f83c355d11be7d011508763fedc67e76d592a636)"}
